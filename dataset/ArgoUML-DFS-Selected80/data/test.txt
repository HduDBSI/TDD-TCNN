MethodDeclaration Modifier public ReferenceType Collection generate FormalParameter ReferenceType Collection elements FormalParameter BasicType boolean deps LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation startFileGeneration ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation elements iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation MemberReference elem generatePath LocalVariableDeclaration ReferenceType Set VariableDeclarator dependencies Literal null IfStatement MemberReference deps StatementExpression Assignment MemberReference dependencies ClassCreator ReferenceType TreeSet = ForStatement ForControl Assignment MemberReference generatorPass MemberReference HEADER_PASS = BinaryOperation <= MemberReference generatorPass MemberReference SOURCE_PASS MemberReference ++ generatorPass BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + MethodInvocation MethodInvocation MemberReference elem getName getFacade MethodInvocation getFileExtension LocalVariableDeclaration ReferenceType String VariableDeclarator content MethodInvocation MemberReference elem BinaryOperation + MemberReference path MemberReference name generateFileAsString LocalVariableDeclaration ReferenceType SourceUnit VariableDeclarator su ClassCreator ReferenceType SourceUnit MemberReference name MemberReference path MemberReference content StatementExpression MethodInvocation ret MemberReference su add StatementExpression Assignment MemberReference generatorPass MemberReference NONE_PASS = StatementExpression MethodInvocation generatedFiles MemberReference elem add IfStatement MemberReference deps BlockStatement StatementExpression MethodInvocation ret MethodInvocation MemberReference dependencies MemberReference deps generate add StatementExpression MethodInvocation endFileGeneration ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration BasicType boolean VariableDeclarator problem MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAGeneralizableElement getFacade BlockStatement TryStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference dm getChildren getCoreHelper CatchClause CatchClauseParameter IllegalStateException ex StatementExpression Assignment MemberReference problem MemberReference PROBLEM_FOUND = StatementExpression MethodInvocation LOG BinaryOperation + Literal "problem found for: " This info ReturnStatement MemberReference problem	1
MethodDeclaration Modifier private ReferenceType Connector buildAssociationRole FormalParameter ReferenceType Lifeline from FormalParameter ReferenceType Lifeline to LocalVariableDeclaration ReferenceType Connector VariableDeclarator connector MethodInvocation createConnector StatementExpression MethodInvocation from MethodInvocation MethodInvocation MemberReference connector add getInteraction StatementExpression MethodInvocation connector MethodInvocation MethodInvocation MemberReference from buildAssociationEndRole add StatementExpression MethodInvocation connector MethodInvocation MethodInvocation MemberReference to buildAssociationEndRole add ReturnStatement MemberReference connector	0
MethodDeclaration Modifier private setTarget StatementExpression MethodInvocation targetFollower MethodInvocation targetFollower shouldBeEnabled setEnabled	0
MethodDeclaration Modifier private ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String interpretStyle FormalParameter ReferenceType StringTokenizer st LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator map ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator name LocalVariableDeclaration ReferenceType String VariableDeclarator value WhileStatement MethodInvocation st hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator namevaluepair MethodInvocation st nextToken LocalVariableDeclaration BasicType int VariableDeclarator equalsPos MethodInvocation namevaluepair Literal '=' indexOf IfStatement BinaryOperation < MemberReference equalsPos Literal 0 BlockStatement StatementExpression Assignment MemberReference name MemberReference namevaluepair = StatementExpression Assignment MemberReference value Literal "true" = BlockStatement StatementExpression Assignment MemberReference name MethodInvocation namevaluepair Literal 0 MemberReference equalsPos substring = StatementExpression Assignment MemberReference value MethodInvocation namevaluepair BinaryOperation + MemberReference equalsPos Literal 1 substring = StatementExpression MethodInvocation map MemberReference name MemberReference value put ReturnStatement MemberReference map	1
MethodDeclaration Modifier private handleFireDiagramAppearanceEvent FormalParameter Modifier final ReferenceType ArgoDiagramAppearanceEvent event FormalParameter Modifier final ReferenceType ArgoDiagramAppearanceEventListener listener IfStatement MethodInvocation SwingUtilities isEventDispatchThread BlockStatement StatementExpression MethodInvocation MemberReference event MemberReference listener fireDiagramAppearanceEventInternal BlockStatement StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference event MemberReference listener fireDiagramAppearanceEventInternal invokeLater	1
MethodDeclaration Modifier public setBound FormalParameter ReferenceType Object handle FormalParameter BasicType int bound StatementExpression MethodInvocation impl MemberReference handle MemberReference bound setBound	0
MethodDeclaration Modifier public StatementExpression MethodInvocation aboutAction Literal null actionPerformed	0
MethodDeclaration Modifier public addAllStereotypes FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection stereotypes StatementExpression MethodInvocation impl MemberReference modelElement MemberReference stereotypes addStereotype	0
MethodDeclaration Modifier private BasicType int getConstAttributeModifierType FormalParameter ReferenceType Object elem LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation MethodInvocation MemberReference elem getTaggedValues getFacade WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation iter next LocalVariableDeclaration ReferenceType String VariableDeclarator tag MethodInvocation MethodInvocation MemberReference tv getTagOfTag getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator val MethodInvocation MethodInvocation MemberReference tv getValueOfTag getFacade IfStatement BinaryOperation != MemberReference tag Literal null BlockStatement IfStatement MethodInvocation tag MemberReference equals BlockStatement ReturnStatement TernaryExpression MethodInvocation val Literal "false" equals MemberReference NORMAL_MOD MemberReference CONST_MOD ReturnStatement Literal - 1	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier protected setEventName FormalParameter ReferenceType String en StatementExpression Assignment MemberReference MemberReference en =	0
MethodDeclaration Modifier protected ReferenceType List TypeArgument ReferenceType ControlMech getMechList ReturnStatement MemberReference mechs	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation Model MethodInvocation flushModelEvents getPump StatementExpression MethodInvocation Model MethodInvocation stopPumpingEvents getPump StatementExpression MethodInvocation Model MethodInvocation flushModelEvents getPump LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation == MethodInvocation Literal "non-interactive" getValue Literal null BlockStatement IfStatement MethodInvocation ! ProjectBrowser MethodInvocation askConfirmationAndSave getInstance BlockStatement ReturnStatement StatementExpression MethodInvocation ProjectBrowser MethodInvocation clearDialogs getInstance StatementExpression MethodInvocation Designer disableCritiquing StatementExpression MethodInvocation Designer clearCritiquing StatementExpression MethodInvocation TargetManager MethodInvocation cleanHistory getInstance StatementExpression MethodInvocation p remove StatementExpression Assignment MemberReference p MethodInvocation ProjectManager MethodInvocation getManager = StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation p MethodInvocation Literal 0 get getDiagramList setTarget getInstance StatementExpression MethodInvocation Designer enableCritiquing StatementExpression MethodInvocation Model MethodInvocation startPumpingEvents getPump	1
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unchecked" Annotation Override FormalParameter ReferenceType node StatementExpression MethodInvocation MemberReference node IfStatement BinaryOperation != MethodInvocation node getLPar Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getLPar LocalVariableDeclaration BasicType boolean VariableDeclarator hasDeclarator Literal false IfStatement BinaryOperation != MethodInvocation node getDeclarator Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getDeclarator StatementExpression Assignment MemberReference hasDeclarator Literal true = IfStatement BinaryOperation != MethodInvocation node getActualParameterList Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator vars Literal null IfStatement MemberReference hasDeclarator BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList StatementExpression Assignment MemberReference vars Cast ReferenceType List MemberReference val = LocalVariableDeclaration Modifier final ReferenceType PExpression VariableDeclarator exp Cast ReferenceType AActualParameterList MethodInvocation node getActualParameterList StatementExpression MethodInvocation ret MemberReference vars add StatementExpression MethodInvocation ret MemberReference exp add StatementExpression MethodInvocation ret ClassCreator ReferenceType LambdaEvaluator MethodDeclaration * @see * */ Modifier public ReferenceType Object evaluate FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object vti FormalParameter ReferenceType Object expi LocalVariableDeclaration ReferenceType Object VariableDeclarator state This EvaluateExpression MethodInvocation StatementExpression Assignment This EvaluateExpression MemberReference vt MemberReference vti = StatementExpression Assignment This EvaluateExpression MemberReference val Literal null = StatementExpression Assignment This EvaluateExpression MemberReference Literal null = StatementExpression Cast ReferenceType PExpression MemberReference expi LocalVariableDeclaration ReferenceType Object VariableDeclarator reti This EvaluateExpression MemberReference val StatementExpression This EvaluateExpression MethodInvocation MemberReference state loadState ReturnStatement MemberReference reti add StatementExpression Assignment MemberReference val MemberReference ret = BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getActualParameterList IfStatement BinaryOperation != MethodInvocation node getRPar Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getRPar StatementExpression MethodInvocation MemberReference node	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_74 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 137438953472L Literal 1008806316530991104L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public final dtor_declarator RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType Token VariableDeclarator id Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" StatementExpression Assignment MemberReference s MethodInvocation scope_override = StatementExpression MethodInvocation MemberReference TILDE match StatementExpression Assignment MemberReference id MethodInvocation Literal 1 LT = StatementExpression MethodInvocation MemberReference ID match IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m BinaryOperation + BinaryOperation + MemberReference s Literal "~" MethodInvocation id getText dtorDeclarator StatementExpression MethodInvocation MemberReference LPAREN match StatementExpression MethodInvocation MemberReference RPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_throw BlockStatement StatementExpression MethodInvocation exception_specification BreakStatement SwitchStatementCase LCURLY SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Attribute getAllAttributes FormalParameter ReferenceType Object clazz IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement MethodInvocation Collections emptySet IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Attribute VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Attribute TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator feature Cast ReferenceType Classifier MemberReference clazz BlockStatement IfStatement BinaryOperation instanceof MemberReference feature ReferenceType Attribute BlockStatement StatementExpression MethodInvocation list Cast ReferenceType Attribute MemberReference feature add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator gen MethodInvocation modelImpl MethodInvocation MemberReference clazz getGeneralizations getFacade BlockStatement StatementExpression MethodInvocation list MethodInvocation MemberReference gen getAllAttributes addAll CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference list	1
MethodDeclaration Modifier public ReferenceType Object getExtensionPoint ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public Annotation Override ReferenceType String getMainTag ReturnStatement Literal "pgml"	0
MethodDeclaration Modifier public ReferenceType Object getCollaborationInstanceSet ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Collection getOptions FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade	0
MethodDeclaration Modifier public final member_declaration RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType String VariableDeclarator q Literal "" IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m beginMemberDeclaration BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_public LITERAL_protected LITERAL_private BlockStatement StatementExpression MethodInvocation access_specifier StatementExpression MethodInvocation MemberReference COLON match BreakStatement SwitchStatementCase SEMICOLON BlockStatement StatementExpression MethodInvocation MemberReference SEMICOLON match BreakStatement SwitchStatementCase LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched54 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m54 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched54 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_typedef BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_typedef match BreakStatement SwitchStatementCase LITERAL_class LITERAL_struct LITERAL_union BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation class_head CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched54 Literal false = StatementExpression MethodInvocation MemberReference _m54 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched54 BlockStatement StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched57 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_enum BinaryOperation || BinaryOperation == MethodInvocation Literal 2 LA MemberReference ID BinaryOperation == MethodInvocation Literal 2 LA MemberReference LCURLY BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m57 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched57 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_enum match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID BlockStatement StatementExpression MethodInvocation MemberReference ID match BreakStatement SwitchStatementCase LCURLY BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched57 Literal false = StatementExpression MethodInvocation MemberReference _m57 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched57 BlockStatement StatementExpression MethodInvocation enum_specifier BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID COLON LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation member_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched60 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m60 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched60 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation class_head CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched60 Literal false = StatementExpression MethodInvocation MemberReference _m60 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched60 BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched62 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_5 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_6 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m62 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched62 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation ctor_decl_spec IfStatement MethodInvocation ! MemberReference CPPvariables QI_CTOR Literal 0 qualifiedItemIsOneOf ThrowStatement ClassCreator ReferenceType SemanticException Literal "qualifiedItemIsOneOf(CPPvariables.QI_CTOR,0)" StatementExpression MethodInvocation ctor_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched62 Literal false = StatementExpression MethodInvocation MemberReference _m62 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched62 BlockStatement StatementExpression MethodInvocation ctor_decl_spec StatementExpression MethodInvocation ctor_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched65 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_5 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_6 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m65 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched65 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation ctor_decl_spec IfStatement MethodInvocation ! MemberReference CPPvariables QI_CTOR Literal 0 qualifiedItemIsOneOf ThrowStatement ClassCreator ReferenceType SemanticException Literal "qualifiedItemIsOneOf(CPPvariables.QI_CTOR,0)" StatementExpression MethodInvocation ctor_declarator BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase COLON BlockStatement StatementExpression MethodInvocation MemberReference COLON match BreakStatement SwitchStatementCase LCURLY BlockStatement StatementExpression MethodInvocation MemberReference LCURLY match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched65 Literal false = StatementExpression MethodInvocation MemberReference _m65 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched65 BlockStatement StatementExpression MethodInvocation ctor_definition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched67 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_27 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_4 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m67 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched67 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation dtor_head StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched67 Literal false = StatementExpression MethodInvocation MemberReference _m67 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched67 BlockStatement StatementExpression MethodInvocation dtor_head StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched69 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_27 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_4 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m69 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched69 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation dtor_head StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched69 Literal false = StatementExpression MethodInvocation MemberReference _m69 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched69 BlockStatement StatementExpression MethodInvocation dtor_head StatementExpression MethodInvocation dtor_body BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched71 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m71 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched71 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched71 Literal false = StatementExpression MethodInvocation MemberReference _m71 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched71 BlockStatement IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m beginFunctionDeclaration StatementExpression MethodInvocation declaration IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m endFunctionDeclaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched73 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_9 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_10 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m73 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched73 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched73 Literal false = StatementExpression MethodInvocation MemberReference _m73 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched73 BlockStatement IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m beginFunctionDefinition StatementExpression MethodInvocation function_definition IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m endFunctionDefinition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched76 Literal false IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_inline BinaryOperation == MethodInvocation Literal 1 LA MemberReference OPERATOR MethodInvocation _tokenSet_28 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m76 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched76 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_inline match BreakStatement SwitchStatementCase OPERATOR BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation conversion_function_decl_or_def CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched76 Literal false = StatementExpression MethodInvocation MemberReference _m76 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched76 BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_inline match BreakStatement SwitchStatementCase OPERATOR BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation conversion_function_decl_or_def BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched79 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_29 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_30 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m79 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched79 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation qualified_id StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched79 Literal false = StatementExpression MethodInvocation MemberReference _m79 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched79 BlockStatement StatementExpression Assignment MemberReference q MethodInvocation qualified_id = StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched81 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_11 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_31 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m81 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched81 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched81 Literal false = StatementExpression MethodInvocation MemberReference _m81 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched81 BlockStatement StatementExpression MethodInvocation declaration_specifiers BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID COLON LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation member_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched84 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_21 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_22 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m84 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched84 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched84 Literal false = StatementExpression MethodInvocation MemberReference _m84 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched84 BlockStatement StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match IfStatement BinaryOperation && MethodInvocation _tokenSet_21 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_22 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation compound_statement BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched87 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m87 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched87 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation declaration_specifiers BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation init_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched87 Literal false = StatementExpression MethodInvocation MemberReference _m87 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched87 BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation declaration_specifiers BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation init_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement StatementExpression MethodInvocation template_head BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched91 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_5 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_6 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m91 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched91 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation ctor_decl_spec IfStatement MethodInvocation ! MemberReference CPPvariables QI_CTOR Literal 0 qualifiedItemIsOneOf ThrowStatement ClassCreator ReferenceType SemanticException Literal "qualifiedItemIsOneOf(CPPvariables.QI_CTOR,0)" CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched91 Literal false = StatementExpression MethodInvocation MemberReference _m91 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched91 BlockStatement StatementExpression MethodInvocation ctor_definition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched93 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m93 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched93 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched93 Literal false = StatementExpression MethodInvocation MemberReference _m93 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched93 BlockStatement StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched95 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_9 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_10 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m95 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched95 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched95 Literal false = StatementExpression MethodInvocation MemberReference _m95 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched95 BlockStatement StatementExpression MethodInvocation function_definition IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference OPERATOR MethodInvocation _tokenSet_11 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation conversion_function_decl_or_def BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m endMemberDeclaration	1
MethodDeclaration Modifier public populate StatementExpression Assignment MemberReference stereotypeCount Literal 0 = LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation getOwner IfStatement BinaryOperation == MemberReference modelElement Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Cannot populate the stereotype compartment " Literal "unless the parent has an owner." debug ReturnStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Populating stereotypes compartment for " MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade debug LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Fig VariableDeclarator removeCollection ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Fig MethodInvocation getFigs IfStatement BinaryOperation != MemberReference keyword Literal null BlockStatement LocalVariableDeclaration ReferenceType FigKeyword VariableDeclarator keywordFig MethodInvocation findFigKeyword IfStatement BinaryOperation == MemberReference keywordFig Literal null BlockStatement StatementExpression Assignment MemberReference keywordFig ClassCreator ReferenceType FigKeyword MemberReference keyword MethodInvocation getBoundsForNextStereotype MethodInvocation getSettings = StatementExpression MethodInvocation MemberReference keywordFig addFig BlockStatement StatementExpression MethodInvocation removeCollection MemberReference keywordFig remove StatementExpression MemberReference ++ stereotypeCount ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereo MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade BlockStatement LocalVariableDeclaration ReferenceType FigStereotype VariableDeclarator stereotypeTextFig MethodInvocation MemberReference stereo findFig IfStatement BinaryOperation == MemberReference stereotypeTextFig Literal null BlockStatement StatementExpression Assignment MemberReference stereotypeTextFig ClassCreator ReferenceType FigStereotype MemberReference stereo MethodInvocation getBoundsForNextStereotype MethodInvocation getSettings = StatementExpression MethodInvocation MemberReference stereotypeTextFig addFig BlockStatement StatementExpression MethodInvocation removeCollection MemberReference stereotypeTextFig remove StatementExpression MemberReference ++ stereotypeCount ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MemberReference removeCollection BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference f ReferenceType FigStereotype BinaryOperation instanceof MemberReference f ReferenceType FigKeyword BlockStatement StatementExpression MethodInvocation MemberReference f removeFig StatementExpression MethodInvocation reorderStereotypeFigs StatementExpression MethodInvocation	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation cover isFilled	0
MethodDeclaration Modifier public ReferenceType Action getAction ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public undo StatementExpression MethodInvocation npSettings MemberReference ! showem setShowInitialValues StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation impl MemberReference ns	0
MethodDeclaration Modifier protected ReferenceType ExtensionMechanismsHelper getComponent ReturnStatement MemberReference impl	0
MethodDeclaration Modifier public ReferenceType TimeEvent FormalParameter ReferenceType String s FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType TimeEvent VariableDeclarator event MethodInvocation createTimeEvent StatementExpression MethodInvocation event Cast ReferenceType Namespace MemberReference ns setNamespace StatementExpression MethodInvocation event Literal "" setName LocalVariableDeclaration ReferenceType Object VariableDeclarator te MethodInvocation modelImpl MethodInvocation Literal "" MemberReference s createTimeExpression getDataTypesFactory StatementExpression MethodInvocation event Cast ReferenceType TimeExpression MemberReference te setWhen ReturnStatement MemberReference event	0
MethodDeclaration Modifier public modelElementChanged FormalParameter ReferenceType Object node StatementExpression MethodInvocation Cast ReferenceType TreeNode MethodInvocation getRoot MemberReference node traverseModified	0
MethodDeclaration Modifier public BasicType int getNumberOfPhases ReturnStatement This MemberReference numberOfPhases	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation head getFillColor	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType String name FormalParameter ReferenceType Object mClassifier LocalVariableDeclaration ReferenceType Object VariableDeclarator mAssociationEnd Literal null ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation Model MethodInvocation MemberReference mClassifier getAssociationEnds MethodInvocation iterator getFacade MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation i next LocalVariableDeclaration ReferenceType Object VariableDeclarator assoc MethodInvocation Model MethodInvocation MemberReference ae getAssociation getFacade IfStatement BinaryOperation && BinaryOperation && MethodInvocation name MethodInvocation Model MethodInvocation MemberReference ae getName getFacade equals BinaryOperation == MethodInvocation Model MethodInvocation MemberReference assoc getConnections MethodInvocation size getFacade Literal 2 BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference ae getFacade getType getFacade MethodInvocation parseState getClassifier BlockStatement StatementExpression Assignment MemberReference mAssociationEnd MemberReference ae = IfStatement BinaryOperation && BinaryOperation == MemberReference mAssociationEnd Literal null MemberReference ! noAssociations BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newName MethodInvocation MethodInvocation parseState getClassifier MemberReference mClassifier makeAssociationName LocalVariableDeclaration ReferenceType Object VariableDeclarator mAssociation MethodInvocation MemberReference newName MethodInvocation parseState getClassifier MemberReference mClassifier StatementExpression Assignment MemberReference mAssociationEnd MethodInvocation Model MethodInvocation MemberReference mClassifier MemberReference mAssociation getFacade = ReturnStatement MemberReference mAssociationEnd	0
MethodDeclaration Modifier public FormalParameter ReferenceType String sType LocalVariableDeclaration ReferenceType Object VariableDeclarator exp MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference sType StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference exp setInitialValue getCoreHelper	0
MethodDeclaration Modifier public removeElement FormalParameter ReferenceType DiElement element IfStatement BinaryOperation != MethodInvocation Model getDiagramInterchangeModel Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element getDiagramInterchangeModel	0
MethodDeclaration Modifier public BasicType boolean isSnoozed ReturnStatement MethodInvocation MethodInvocation getSnoozed snoozeOrder	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType AbstractArgoJPanel getDetailsTabs ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getMetaTypes	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement MethodInvocation settings isFullyHandleStereotypes MethodInvocation settings isUseGuillemets MethodInvocation settings isShowVisibilities MethodInvocation settings isShowPaths toString	0
MethodDeclaration Modifier public static ReferenceType CommonBehaviorFactory getCommonBehaviorFactory ReturnStatement MethodInvocation impl getCommonBehaviorFactory	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType AbstractFigComponent VariableDeclarator figClone Cast ReferenceType AbstractFigComponent SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation it next StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig StatementExpression Assignment MemberReference figClone Cast ReferenceType FigRect MethodInvocation it next = StatementExpression Assignment MemberReference figClone Cast ReferenceType FigRect MethodInvocation it next = ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public static ReferenceType ActionAggregation newActionAggregation FormalParameter ReferenceType Object assocStart FormalParameter ReferenceType Object assocEnd FormalParameter BasicType int aggr ReturnStatement ClassCreator ReferenceType ActionAggregation MethodInvocation MemberReference assocStart MemberReference assocEnd MemberReference aggr getDescription MemberReference assocStart MemberReference assocEnd MemberReference aggr	0
MethodDeclaration deleteInteractionInstanceSet FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier protected ReferenceType String getKeyName ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType AbstractAction getRemoveFromDiagramAction ReturnStatement MemberReference removeFromDiagram	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation LeftSide MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "[" append StatementExpression MethodInvocation Expressions MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "]" append	1
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType This	0
MethodDeclaration Modifier public static setImplementation FormalParameter ReferenceType ModelImplementation newImpl StatementExpression Assignment MemberReference impl MemberReference newImpl = IfStatement BinaryOperation == MemberReference impl Literal null BlockStatement StatementExpression Assignment MemberReference activityGraphsHelper Literal null = StatementExpression Assignment MemberReference collaborationsHelper Literal null = StatementExpression Assignment MemberReference commonBehaviorHelper Literal null = StatementExpression Assignment MemberReference coreHelper Literal null = StatementExpression Assignment MemberReference dataTypesHelper Literal null = StatementExpression Assignment MemberReference extensionMechanismsHelper Literal null = StatementExpression Assignment MemberReference stateMachinesHelper Literal null = StatementExpression Assignment MemberReference umlHelper Literal null = StatementExpression Assignment MemberReference useCasesHelper Literal null = BlockStatement StatementExpression Assignment MemberReference activityGraphsHelper MethodInvocation impl = StatementExpression Assignment MemberReference collaborationsHelper MethodInvocation impl getCollaborationsHelper = StatementExpression Assignment MemberReference commonBehaviorHelper MethodInvocation impl getCommonBehaviorHelper = StatementExpression Assignment MemberReference coreHelper MethodInvocation impl getCoreHelper = StatementExpression Assignment MemberReference dataTypesHelper MethodInvocation impl = StatementExpression Assignment MemberReference extensionMechanismsHelper MethodInvocation impl getExtensionMechanismsHelper = StatementExpression Assignment MemberReference stateMachinesHelper MethodInvocation impl getStateMachinesHelper = StatementExpression Assignment MemberReference umlHelper MethodInvocation impl getUmlHelper = StatementExpression Assignment MemberReference useCasesHelper MethodInvocation impl getUseCasesHelper =	1
MethodDeclaration Modifier public ReferenceType FigEdge getFigEdgeFor FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object edge FormalParameter ReferenceType Map styleAttributes LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator figEdge Literal null AssertStatement BinaryOperation instanceof MemberReference lay ReferenceType LayerPerspective LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diag Cast ReferenceType ArgoDiagram Cast ReferenceType LayerPerspective MemberReference lay LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation diag getDiagramSettings IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigEdgeNote MemberReference edge MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAMessage getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigMessage MemberReference edge MemberReference settings = BlockStatement StatementExpression Assignment MemberReference figEdge MethodInvocation MemberReference edge MemberReference styleAttributes getFigEdgeFor = StatementExpression MethodInvocation MemberReference lay MemberReference figEdge MemberReference edge addEdge ReturnStatement MemberReference figEdge	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType PrimitiveType	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String getTriggers ReturnStatement MemberReference triggs	0
MethodDeclaration Modifier public setInternalTransitions FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection IfStatement BinaryOperation instanceof MemberReference handle ReferenceType State BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator internalTransitions MethodInvocation Model MethodInvocation MemberReference handle getInternalTransitions getFacade IfStatement MethodInvocation ! internalTransitions isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator trans ClassCreator ReferenceType ArrayList MemberReference internalTransitions ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator transition MemberReference trans BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference transition removeTransition ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator transition MemberReference BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference transition addTransition ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public ReferenceType ClassifierRole FormalParameter ReferenceType Object collaboration LocalVariableDeclaration ReferenceType Collaboration VariableDeclarator myCollaboration Cast ReferenceType Collaboration MemberReference collaboration LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator classifierRole MethodInvocation StatementExpression MethodInvocation classifierRole MemberReference myCollaboration setNamespace StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference classifierRole Literal 1 Literal 1 setMultiplicity getCoreHelper ReturnStatement MemberReference classifierRole	0
MethodDeclaration Modifier public setSubvertices FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection subvertices ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType StateMachinesFactory getStateMachinesFactory ReturnStatement MemberReference theStateMachinesFactory	0
MethodDeclaration Modifier public updateMainTask FormalParameter Modifier final ReferenceType String name StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference name setTitle invokeLater	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BlockStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation Cast ReferenceType UmlAssociation MemberReference handle getLink MemberReference handle getRefOutermostPackage CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation MethodInvocation getFillColor getNameFig	0
MethodDeclaration Modifier public ReferenceType Include getIncludes FormalParameter ReferenceType Object abase FormalParameter ReferenceType Object aninclusion IfStatement BinaryOperation || BinaryOperation instanceof MemberReference abase ReferenceType UseCase BinaryOperation instanceof MemberReference aninclusion ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType UseCase VariableDeclarator base Cast ReferenceType UseCase MemberReference abase LocalVariableDeclaration ReferenceType UseCase VariableDeclarator inclusion Cast ReferenceType UseCase MemberReference aninclusion TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Include VariableDeclarator include MethodInvocation inclusion getInclude BlockStatement IfStatement BinaryOperation == MethodInvocation include getBase MemberReference base BlockStatement ReturnStatement MemberReference include CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Multiplicity createMultiplicity FormalParameter Modifier final ReferenceType String str ReturnStatement MethodInvocation MemberReference str createMultiplicityInternal	0
MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType FigPartition FormalParameter ReferenceType Layer layer LocalVariableDeclaration Modifier final ReferenceType List TypeArgument ReferenceType FigPartition VariableDeclarator partitions ClassCreator ReferenceType ArrayList TypeArgument ReferenceType FigPartition ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation layer getContents BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigPartition BlockStatement StatementExpression MethodInvocation partitions Cast ReferenceType FigPartition MemberReference o add ReturnStatement MemberReference partitions	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType State BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType Action BlockStatement StatementExpression Cast ReferenceType State MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or value: " MemberReference value	0
MethodDeclaration Modifier public setDoActivity FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value StatementExpression MethodInvocation impl MemberReference handle MemberReference value setDoActivity	0
MethodDeclaration Modifier private ReferenceType Property createProperty FormalParameter ReferenceType String text FormalParameter ReferenceType String positions FormalParameter ReferenceType Class tab LocalVariableDeclaration ReferenceType ConfigurationKey VariableDeclarator key MethodInvocation MemberReference tab makeKey LocalVariableDeclaration ReferenceType String VariableDeclarator currentValue MethodInvocation Configuration MemberReference key Literal "South" getString ReturnStatement ClassCreator ReferenceType Property MethodInvocation Translator MemberReference text localize ClassReference ReferenceType String MemberReference currentValue MemberReference positions	1
MethodDeclaration Modifier public BasicType boolean isAMethod FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object type FormalParameter ReferenceType Object assoc ReturnStatement MethodInvocation impl MemberReference type MemberReference assoc	0
MethodDeclaration Modifier public ReferenceType Collection getClassifiersInState FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException	0
MethodDeclaration Modifier private ReferenceType String getParameterTypeString FormalParameter ReferenceType InterfaceMethodNode mn LocalVariableDeclaration ReferenceType String VariableDeclarator k Literal "" IfStatement BinaryOperation == MemberReference mn params Literal null BlockStatement ReturnStatement MemberReference k ForStatement EnhancedForControl VariableDeclaration ReferenceType ParamDeclNode VariableDeclarator p MemberReference mn params BlockStatement StatementExpression Assignment MemberReference k BinaryOperation + Literal "|" MethodInvocation MemberReference p.type.Identifier Identifier MemberReference p.type.Identifier.Identifier length buildToParent += ReturnStatement MethodInvocation k toLowerCase	1
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade setAllElements	0
MethodDeclaration Modifier protected handleUserDefinedEnd FormalParameter ReferenceType XMLElement e IfStatement BinaryOperation == MemberReference filename Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Got badly formed user defined profile entry " MemberReference e error StatementExpression Assignment MemberReference profile MethodInvocation MemberReference filename MethodInvocation ProfileFacade getManager getMatchingUserDefinedProfile = IfStatement BinaryOperation == MemberReference profile Literal null BlockStatement StatementExpression MethodInvocation unresolvedFilenames MemberReference filename add BlockStatement StatementExpression MethodInvocation profiles MemberReference profile add StatementExpression MethodInvocation LOG BinaryOperation + Literal "Loaded user defined profile - filename = " MemberReference filename debug	1
MethodDeclaration Modifier protected Annotation Override ReferenceType List TypeArgument ReferenceType String ReturnStatement MethodInvocation Collections MemberReference metaClasses	0
MethodDeclaration Modifier private ReferenceType String generateMultiplicity FormalParameter ReferenceType Object m IfStatement BinaryOperation || BinaryOperation == MemberReference m Literal null Literal MethodInvocation MethodInvocation Model MethodInvocation MemberReference m toString getFacade equals "1" BlockStatement ReturnStatement Literal "" BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference m toString getFacade	0
MethodDeclaration Modifier public static BasicType boolean isInitiated ReturnStatement BinaryOperation != MemberReference impl Literal null	0
MethodDeclaration Modifier public BasicType boolean isACollaboration FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Collaboration	0
MethodDeclaration Modifier private addClassifier FormalParameter ReferenceType Object classifier FormalParameter BasicType boolean minimise IfStatement MethodInvocation currentGM MemberReference classifier canAddNode BlockStatement LocalVariableDeclaration ReferenceType FigClassifierBox VariableDeclarator newFig Cast ReferenceType FigClassifierBox MethodInvocation currentDiagram MemberReference classifier ClassCreator ReferenceType Rectangle Literal 0 Literal 0 Literal 0 Literal 0 createDiagramElement StatementExpression MethodInvocation currentLayer MemberReference newFig add StatementExpression MethodInvocation currentGM MemberReference classifier addNode StatementExpression MethodInvocation currentLayer MemberReference newFig putInPosition IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation getOperation getMetaTypes MemberReference classifier isContainmentValid getUmlFactory BlockStatement LocalVariableDeclaration ReferenceType FigCompartment VariableDeclarator ops MethodInvocation newFig MethodInvocation Model MethodInvocation getOperation getMetaTypes getCompartment StatementExpression MethodInvocation newFig MemberReference ops MemberReference ! minimise setCompartmentVisible IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation getAttribute getMetaTypes MemberReference classifier isContainmentValid getUmlFactory BlockStatement LocalVariableDeclaration ReferenceType FigCompartment VariableDeclarator atts MethodInvocation newFig MethodInvocation Model MethodInvocation getAttribute getMetaTypes getCompartment StatementExpression MethodInvocation newFig MemberReference atts MemberReference ! minimise setCompartmentVisible StatementExpression MethodInvocation newFig renderingChanged BlockStatement LocalVariableDeclaration ReferenceType FigClassifierBox VariableDeclarator existingFig Literal null LocalVariableDeclaration ReferenceType List VariableDeclarator figs MethodInvocation currentLayer getContentsNoEdges ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation figs size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Cast ReferenceType Fig MethodInvocation figs MemberReference i get IfStatement BinaryOperation == MemberReference classifier MethodInvocation fig getOwner BlockStatement StatementExpression Assignment MemberReference existingFig Cast ReferenceType FigClassifierBox MemberReference fig = StatementExpression MethodInvocation existingFig renderingChanged StatementExpression MethodInvocation currentGM MemberReference classifier addNodeRelatedEdges	1
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator role MethodInvocation getTarget StatementExpression MethodInvocation Model MethodInvocation MemberReference role MemberReference selected setBases getCollaborationsHelper	0
MethodDeclaration ReferenceType DataTypesFactoryMDRImpl getDataTypesFactoryInternal ReturnStatement MemberReference theDataTypesFactory	0
MethodDeclaration Modifier protected Annotation Override textEdited FormalParameter ReferenceType FigText ft IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement StatementExpression SuperMethodInvocation MemberReference ft textEdited LocalVariableDeclaration ReferenceType Collection VariableDeclarator conn MethodInvocation Model MethodInvocation MethodInvocation getOwner getConnections getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference conn Literal null BinaryOperation == MethodInvocation conn size Literal 0 BlockStatement ReturnStatement IfStatement BinaryOperation == MemberReference ft MethodInvocation srcEnd getRole BlockStatement StatementExpression MethodInvocation srcEnd MethodInvocation textEdited getRole IfStatement BinaryOperation == MemberReference ft MethodInvocation destEnd getRole BlockStatement StatementExpression MethodInvocation destEnd MethodInvocation textEdited getRole IfStatement BinaryOperation == MemberReference ft MethodInvocation srcEnd getMult BlockStatement StatementExpression MethodInvocation srcEnd MethodInvocation textEdited getMult IfStatement BinaryOperation == MemberReference ft MethodInvocation destEnd getMult BlockStatement StatementExpression MethodInvocation destEnd MethodInvocation textEdited getMult	1
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation referenceFig MemberReference col setFillColor	0
MethodDeclaration Modifier protected ReferenceType Object getChangedElement FormalParameter ReferenceType PropertyChangeEvent e IfStatement BinaryOperation instanceof MemberReference e ReferenceType AssociationChangeEvent BlockStatement ReturnStatement Cast ReferenceType AssociationChangeEvent MemberReference e ReturnStatement MethodInvocation e getNewValue	0
MethodDeclaration Modifier public ReferenceType String getClassnamePrefix ReturnStatement MemberReference classnamePrefix	0
MethodDeclaration Modifier public setFontSize FormalParameter BasicType int IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MemberReference MemberReference BlockStatement ReturnStatement StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation recomputeFonts	0
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getState getMetaTypes	0
MethodDeclaration Modifier final protected mVocabulary FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference Vocabulary = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal '\3' Literal '\377' matchRange IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType NotationProviderFactory2 VariableDeclarator npf MethodInvocation NotationProviderFactory2 getInstance LocalVariableDeclaration ReferenceType VariableDeclarator name MethodInvocation Notation Literal "Java" Literal null MethodInvocation Literal lookupIconResource StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_NAME MemberReference name ClassReference ReferenceType ModelElementNameNotationJava addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_ATTRIBUTE MemberReference name ClassReference ReferenceType addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 MemberReference name ClassReference ReferenceType addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_ASSOCIATION_END_NAME MemberReference name ClassReference ReferenceType addNotationProvider StatementExpression MethodInvocation npf MemberReference NotationProviderFactory2 TYPE_ASSOCIATION_NAME MemberReference name ClassReference ReferenceType addNotationProvider	0
MethodDeclaration Modifier protected BasicType boolean isFireListEvents ReturnStatement MemberReference fireListEvents	0
MethodDeclaration Modifier private setNewTrigger FormalParameter ReferenceType Transition transition FormalParameter ReferenceType Event event StatementExpression MethodInvocation transition MemberReference event StatementExpression MethodInvocation event Literal "" setName LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator statemachine MethodInvocation transition getStateMachine LocalVariableDeclaration Modifier final ReferenceType Namespace VariableDeclarator namespace MethodInvocation statemachine getNamespace StatementExpression MethodInvocation event MemberReference namespace setNamespace	0
MethodDeclaration Modifier final static protected setMnemonic FormalParameter ReferenceType JMenuItem item FormalParameter ReferenceType String key LocalVariableDeclaration ReferenceType String VariableDeclarator propertykey Literal "" IfStatement BinaryOperation instanceof MemberReference item ReferenceType JMenu BlockStatement StatementExpression Assignment MemberReference propertykey BinaryOperation + BinaryOperation + MemberReference MENU MethodInvocation MemberReference key Literal ".mnemonic" = BlockStatement StatementExpression Assignment MemberReference propertykey BinaryOperation + BinaryOperation + MemberReference MENUITEM MethodInvocation MemberReference key Literal ".mnemonic" = LocalVariableDeclaration ReferenceType String VariableDeclarator localMnemonic MethodInvocation Translator MemberReference propertykey localize LocalVariableDeclaration BasicType char VariableDeclarator mnemonic Literal ' ' IfStatement BinaryOperation && BinaryOperation != MemberReference localMnemonic Literal null BinaryOperation == MethodInvocation localMnemonic length Literal 1 BlockStatement StatementExpression Assignment MemberReference mnemonic MethodInvocation localMnemonic Literal 0 charAt = StatementExpression MethodInvocation item MemberReference mnemonic setMnemonic	0
MethodDeclaration Modifier static protected ReferenceType String getVariable FormalParameter ReferenceType Context context FormalParameter ReferenceType String varName TransformerException LocalVariableDeclaration ReferenceType Value VariableDeclarator variable Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator varString Literal null TryStatement StatementExpression Assignment MemberReference variable MethodInvocation Extensions MemberReference context BinaryOperation + Literal "$" MemberReference varName evaluate = StatementExpression Assignment MemberReference varString MethodInvocation variable asString = ReturnStatement MemberReference varString CatchClause CatchClauseParameter IllegalArgumentException e StatementExpression MethodInvocation System.out BinaryOperation + Literal "Undefined variable: " MemberReference varName println ReturnStatement Literal ""	1
MethodDeclaration Modifier private ReferenceType Profile findUserDefinedProfile FormalParameter ReferenceType File file ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator p MemberReference profiles BlockStatement IfStatement BinaryOperation instanceof MemberReference p ReferenceType UserDefinedProfile BlockStatement LocalVariableDeclaration ReferenceType UserDefinedProfile VariableDeclarator udp Cast ReferenceType UserDefinedProfile MemberReference p IfStatement MethodInvocation file MethodInvocation udp equals BlockStatement ReturnStatement MemberReference udp ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object createLink ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object owner FormalParameter ReferenceType String name FormalParameter ReferenceType DiagramSettings settings ReturnStatement ClassCreator ReferenceType UMLStateDiagram MemberReference name MemberReference owner	0
MethodDeclaration Modifier public static clearCritiquing SynchronizedStatement MethodInvocation theDesigner StatementExpression MethodInvocation MemberReference toDoList MethodInvocation removeAllElements theDesigner StatementExpression MethodInvocation MemberReference hotQueue MethodInvocation clear theDesigner StatementExpression MethodInvocation MemberReference hotReasonQueue MethodInvocation clear theDesigner StatementExpression MethodInvocation MemberReference addQueue MethodInvocation clear theDesigner StatementExpression MethodInvocation MemberReference addReasonQueue MethodInvocation clear theDesigner StatementExpression MethodInvocation MemberReference removeQueue MethodInvocation clear theDesigner StatementExpression MethodInvocation MemberReference warmQueue MethodInvocation clear theDesigner	0
MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int index ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public FormalParameter ReferenceType PropertyChangeEvent e LocalVariableDeclaration ReferenceType String VariableDeclarator propertyName MethodInvocation e getPropertyName IfStatement MethodInvocation propertyName Literal "bounds" equals BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier static ReferenceType ActionWrapper getShortcuts LocalVariableDeclaration ReferenceType ActionWrapper VariableDeclarator actions MethodInvocation shortcutHash MethodInvocation ArrayCreator ReferenceType ActionWrapper MethodInvocation shortcutHash size toArray values StatementExpression MethodInvocation Arrays MemberReference actions ClassCreator ReferenceType Comparator TypeArgument ReferenceType ActionWrapper MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType ActionWrapper o1 FormalParameter ReferenceType ActionWrapper o2 LocalVariableDeclaration ReferenceType String VariableDeclarator name1 MethodInvocation o1 getActionName IfStatement BinaryOperation == MemberReference name1 Literal null BlockStatement StatementExpression Assignment MemberReference name1 Literal "" = LocalVariableDeclaration ReferenceType String VariableDeclarator name2 MethodInvocation o2 getActionName IfStatement BinaryOperation == MemberReference name2 Literal null BlockStatement StatementExpression Assignment MemberReference name2 Literal "" = ReturnStatement MethodInvocation name1 MemberReference name2 compareTo sort ReturnStatement MemberReference actions	0
MethodDeclaration Modifier public ReferenceType CallEvent FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType CallEvent VariableDeclarator event MethodInvocation StatementExpression MethodInvocation event Cast ReferenceType Namespace MemberReference ns setNamespace StatementExpression MethodInvocation event Literal "" setName ReturnStatement MemberReference event	0
MethodDeclaration Modifier public ReferenceType String getHeadline IfStatement BinaryOperation == MemberReference cachedExpandedHeadline Literal null BlockStatement StatementExpression Assignment MemberReference cachedExpandedHeadline MethodInvocation thePoster MemberReference MemberReference theOffenders expand = ReturnStatement MemberReference cachedExpandedHeadline	0
MethodDeclaration Modifier public loadRules LocalVariableDeclaration ReferenceType PerspectiveRule VariableDeclarator ruleNamesArray ArrayInitializer ClassCreator ReferenceType GoAssocRoleToMessages ClassCreator ReferenceType GoBehavioralFeatureToStateDiagram ClassCreator ReferenceType GoBehavioralFeatureToStateMachine ClassCreator ReferenceType GoClassifierToBehavioralFeature ClassCreator ReferenceType GoClassifierToCollaboration ClassCreator ReferenceType GoClassifierToInstance ClassCreator ReferenceType GoClassifierToSequenceDiagram ClassCreator ReferenceType GoClassifierToStateMachine ClassCreator ReferenceType GoClassifierToStructuralFeature ClassCreator ReferenceType GoClassToAssociatedClass ClassCreator ReferenceType GoClassToNavigableClass ClassCreator ReferenceType GoClassToSummary ClassCreator ReferenceType GoCollaborationToDiagram ClassCreator ReferenceType GoCollaborationToInteraction ClassCreator ReferenceType GoComponentToResidentModelElement ClassCreator ReferenceType GoDiagramToEdge ClassCreator ReferenceType GoDiagramToNode ClassCreator ReferenceType GoElementToMachine ClassCreator ReferenceType GoEnumerationToLiterals ClassCreator ReferenceType GoGeneralizableElementToSpecialized ClassCreator ReferenceType GoInteractionToMessages ClassCreator ReferenceType GoLinkToStimuli ClassCreator ReferenceType GoMessageToAction ClassCreator ReferenceType GoModelElementToComment ClassCreator ReferenceType GoModelElementToBehavior ClassCreator ReferenceType GoModelElementToTemplateParameter ClassCreator ReferenceType GoModelElementToContents ClassCreator ReferenceType GoModelElementToContainedDiagrams ClassCreator ReferenceType GoModelElementToContainedLostElements ClassCreator ReferenceType GoModelToBaseElements ClassCreator ReferenceType GoModelToCollaboration ClassCreator ReferenceType GoModelToDiagrams ClassCreator ReferenceType GoModelToElements ClassCreator ReferenceType GoModelToNode ClassCreator ReferenceType GoNamespaceToClassifierAndPackage ClassCreator ReferenceType GoNamespaceToDiagram ClassCreator ReferenceType GoNamespaceToOwnedElements ClassCreator ReferenceType GoNodeToResidentComponent ClassCreator ReferenceType GoOperationToCollaboration ClassCreator ReferenceType GoOperationToCollaborationDiagram ClassCreator ReferenceType GoOperationToSequenceDiagram ClassCreator ReferenceType GoPackageToClass ClassCreator ReferenceType GoPackageToElementImport ClassCreator ReferenceType GoProjectToCollaboration ClassCreator ReferenceType GoProjectToDiagram ClassCreator ReferenceType GoProjectToModel ClassCreator ReferenceType GoProjectToStateMachine ClassCreator ReferenceType GoProjectToProfileConfiguration ClassCreator ReferenceType GoProfileConfigurationToProfile ClassCreator ReferenceType GoProfileToModel ClassCreator ReferenceType GoProfileToCritics ClassCreator ReferenceType GoCriticsToCritic ClassCreator ReferenceType GoProjectToRoots ClassCreator ReferenceType GoSignalToReception ClassCreator ReferenceType GoStateMachineToTop ClassCreator ReferenceType GoStatemachineToDiagram ClassCreator ReferenceType GoStateMachineToTransition ClassCreator ReferenceType GoStateToDoActivity ClassCreator ReferenceType GoStateToDownstream ClassCreator ReferenceType GoStateToEntry ClassCreator ReferenceType GoStateToExit ClassCreator ReferenceType GoStateToIncomingTrans ClassCreator ReferenceType GoStateToOutgoingTrans ClassCreator ReferenceType GoStereotypeToTagDefinition ClassCreator ReferenceType GoStimulusToAction ClassCreator ReferenceType GoSummaryToAssociation ClassCreator ReferenceType GoSummaryToAttribute ClassCreator ReferenceType GoSummaryToIncomingDependency ClassCreator ReferenceType GoSummaryToInheritance ClassCreator ReferenceType GoSummaryToOperation ClassCreator ReferenceType GoSummaryToOutgoingDependency ClassCreator ReferenceType GoTransitionToSource ClassCreator ReferenceType GoTransitionToTarget ClassCreator ReferenceType GoTransitiontoEffect ClassCreator ReferenceType GoTransitionToGuard ClassCreator ReferenceType GoUseCaseToExtensionPoint ClassCreator ReferenceType GoSubmachineStateToStateMachine ClassCreator ReferenceType GoStateToInternalTrans LocalVariableDeclaration ReferenceType PerspectiveRule VariableDeclarator ruleNamesArray14 ArrayInitializer ClassCreator ReferenceType GoCompositeStateToSubvertex ClassCreator ReferenceType GoStateMachineToState LocalVariableDeclaration ReferenceType PerspectiveRule VariableDeclarator ruleNamesArray2 ArrayInitializer IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression Assignment MemberReference ruleNamesArray MethodInvocation MemberReference ruleNamesArray MemberReference ruleNamesArray14 appendArrays = BlockStatement StatementExpression Assignment MemberReference ruleNamesArray MethodInvocation MemberReference ruleNamesArray MemberReference ruleNamesArray2 appendArrays = StatementExpression Assignment MemberReference rules MethodInvocation Arrays MemberReference ruleNamesArray asList =	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object expr StatementExpression MethodInvocation Model MethodInvocation MethodInvocation TargetManager MethodInvocation getTarget getInstance MemberReference expr getStateMachinesHelper	0
MethodDeclaration Modifier protected ReferenceType Object findNamespace LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance LocalVariableDeclaration ReferenceType Object VariableDeclarator ns Literal null IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference target Literal null MethodInvocation ! Model MethodInvocation MemberReference target isAModelElement getFacade MethodInvocation Model MethodInvocation MemberReference target isReadOnly getModelManagementHelper BlockStatement StatementExpression Assignment MemberReference target Literal null = LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation p MethodInvocation iterator getRoots WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation iter next IfStatement MethodInvocation ! Model MethodInvocation MemberReference o isReadOnly getModelManagementHelper BlockStatement StatementExpression Assignment MemberReference target MemberReference o = BreakStatement IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ReturnStatement Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference target isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference ns MemberReference target = BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement StatementExpression Assignment MemberReference owner MethodInvocation Model MethodInvocation MemberReference target getOwner getFacade = IfStatement BinaryOperation && BinaryOperation != MemberReference owner Literal null MethodInvocation Model MethodInvocation MemberReference owner isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference ns MemberReference owner = IfStatement BinaryOperation && BinaryOperation == MemberReference ns Literal null MethodInvocation Model MethodInvocation MemberReference target isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference owner MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade = IfStatement BinaryOperation && BinaryOperation != MemberReference owner Literal null MethodInvocation Model MethodInvocation MemberReference owner isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference ns MemberReference owner = IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation p getRoot = ReturnStatement MemberReference ns	0
MethodDeclaration Modifier static protected ReferenceType String generatePath FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator s ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType Object VariableDeclarator p MemberReference modelElement LocalVariableDeclaration ReferenceType Stack TypeArgument ReferenceType String VariableDeclarator stack ClassCreator ReferenceType Stack TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference p getNamespace getFacade WhileStatement BinaryOperation && BinaryOperation != MemberReference ns Literal null MethodInvocation ! Model MethodInvocation MemberReference ns isAModel getFacade BlockStatement StatementExpression MethodInvocation stack MethodInvocation Model MethodInvocation MemberReference ns getName getFacade push StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation MemberReference ns getNamespace getFacade = WhileStatement MethodInvocation ! stack isEmpty BlockStatement StatementExpression MethodInvocation s BinaryOperation + MethodInvocation stack pop Literal "::" append IfStatement BinaryOperation && BinaryOperation > MethodInvocation s length Literal 0 BinaryOperation == MethodInvocation s Literal ":" lastIndexOf BinaryOperation - MethodInvocation s length Literal 1 BlockStatement StatementExpression MethodInvocation s Literal "::" append ReturnStatement MethodInvocation s toString	1
MethodDeclaration Modifier public ReferenceType ExplorerPerspective makeNamedClone FormalParameter ReferenceType String newName LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator ep ClassCreator ReferenceType ExplorerPerspective MemberReference newName StatementExpression MethodInvocation MemberReference rules addAll ReturnStatement MemberReference ep	0
MethodDeclaration Modifier private ReferenceType CrOCL generateCriticFromComment FormalParameter ReferenceType Object critique LocalVariableDeclaration ReferenceType String VariableDeclarator ocl BinaryOperation + Literal "" MethodInvocation Model MethodInvocation MemberReference critique getBody getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator headline Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator description Literal null LocalVariableDeclaration BasicType int VariableDeclarator priority MemberReference ToDoItem HIGH_PRIORITY LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator supportedDecisions ClassCreator ReferenceType ArrayList TypeArgument ReferenceType LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator knowledgeTypes ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator moreInfoURL Literal null LocalVariableDeclaration ReferenceType Collection VariableDeclarator tags MethodInvocation Model MethodInvocation MemberReference critique getTaggedValuesCollection getFacade LocalVariableDeclaration BasicType boolean VariableDeclarator i18nFound Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator tag MemberReference tags BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal "i18n" equals getFacade BlockStatement StatementExpression Assignment MemberReference i18nFound Literal true = LocalVariableDeclaration ReferenceType String VariableDeclarator i18nSource MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade StatementExpression Assignment MemberReference headline MethodInvocation Translator BinaryOperation + MemberReference i18nSource Literal "-head" localize = StatementExpression Assignment MemberReference description MethodInvocation Translator BinaryOperation + MemberReference i18nSource Literal "-desc" localize = StatementExpression Assignment MemberReference moreInfoURL MethodInvocation Translator BinaryOperation + MemberReference i18nSource Literal "-moreInfoURL" localize = IfStatement BinaryOperation && MemberReference ! i18nFound MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal "headline" equals getFacade BlockStatement StatementExpression Assignment MemberReference headline MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade = IfStatement BinaryOperation && MemberReference ! i18nFound MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal "description" equals getFacade BlockStatement StatementExpression Assignment MemberReference description MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal "priority" equals getFacade BlockStatement StatementExpression Assignment MemberReference priority MethodInvocation MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade str2Priority = IfStatement MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal "supporteddecision" equals getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator decStr MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference decStr Literal ",;:" WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator decision MethodInvocation MethodInvocation st MethodInvocation trim MethodInvocation toLowerCase nextToken str2Decision IfStatement BinaryOperation != MemberReference decision Literal null BlockStatement StatementExpression MethodInvocation supportedDecisions MemberReference decision add IfStatement MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal "knowledgetype" equals getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ktStr MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference ktStr Literal ",;:" WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator knowledge MethodInvocation MethodInvocation st MethodInvocation trim MethodInvocation toLowerCase nextToken str2KnowledgeType IfStatement BinaryOperation != MemberReference knowledge Literal null BlockStatement StatementExpression MethodInvocation knowledgeTypes MemberReference knowledge add IfStatement BinaryOperation && MemberReference ! i18nFound MethodInvocation Model MethodInvocation MemberReference tag getTag MethodInvocation toLowerCase MethodInvocation Literal "moreinfourl" equals getFacade BlockStatement StatementExpression Assignment MemberReference moreInfoURL MethodInvocation Model MethodInvocation MemberReference tag getValueOfTag getFacade = StatementExpression MethodInvocation LOG BinaryOperation + Literal "OCL-Critic: " MemberReference ocl debug TryStatement ReturnStatement ClassCreator ReferenceType CrOCL MemberReference ocl MemberReference headline MemberReference description MemberReference priority MemberReference supportedDecisions MemberReference knowledgeTypes MemberReference moreInfoURL CatchClause CatchClauseParameter InvalidOclException e StatementExpression MethodInvocation LOG Literal "Invalid OCL in XMI!" MemberReference e error ReturnStatement Literal null	1
MethodDeclaration Modifier private ReferenceType String generateClassifierSpecifications FormalParameter ReferenceType Object modelElement IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAClassifier getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Classifier required" LocalVariableDeclaration ReferenceType String VariableDeclarator sClsSpec Literal "" IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAClass getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator colSpecifications MethodInvocation Model MethodInvocation MemberReference modelElement getSpecifications getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator itSpecifications MethodInvocation colSpecifications iterator IfStatement MethodInvocation itSpecifications hasNext BlockStatement IfStatement BinaryOperation < MemberReference iLanguageMajorVersion Literal 5 BlockStatement StatementExpression Assignment MemberReference sClsSpec BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference INDENT MemberReference INDENT Literal "/* specifications are " Literal "not supported by PHP versions before 5.0 " Literal "*/\n" += StatementExpression Assignment MemberReference sClsSpec BinaryOperation + MemberReference INDENT MemberReference INDENT += IfStatement BinaryOperation < MemberReference iLanguageMajorVersion Literal 5 BlockStatement StatementExpression Assignment MemberReference sClsSpec Literal "/* " += StatementExpression Assignment MemberReference sClsSpec Literal "implements " += WhileStatement MethodInvocation itSpecifications hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ifSpecification MethodInvocation itSpecifications next StatementExpression Assignment MemberReference sClsSpec MethodInvocation NameGenerator MemberReference ifSpecification MemberReference iLanguageMajorVersion generate += IfStatement MethodInvocation itSpecifications hasNext BlockStatement StatementExpression Assignment MemberReference sClsSpec BinaryOperation + BinaryOperation + BinaryOperation + Literal ",\n" MemberReference INDENT MemberReference INDENT Literal " " += IfStatement BinaryOperation < MemberReference iLanguageMajorVersion Literal 5 BlockStatement StatementExpression Assignment MemberReference sClsSpec Literal " */" += StatementExpression Assignment MemberReference sClsSpec Literal "\n" += ReturnStatement MemberReference sClsSpec	1
MethodDeclaration Modifier public addElement FormalParameter ReferenceType ToDoItem item StatementExpression MethodInvocation MemberReference item addE	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public setOperation FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object operation StatementExpression MethodInvocation impl MemberReference handle MemberReference operation setOperation	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType FigMessage m1 FormalParameter ReferenceType FigMessage m2 LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 IfStatement BinaryOperation < MethodInvocation m1 MethodInvocation m2 BlockStatement StatementExpression Assignment MemberReference result Literal - 1 = IfStatement BinaryOperation > MethodInvocation m1 MethodInvocation m2 BlockStatement StatementExpression Assignment MemberReference result Literal 1 = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType buildInteraction FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Collaboration VariableDeclarator Cast ReferenceType Collaboration MemberReference handle LocalVariableDeclaration ReferenceType VariableDeclarator inter MethodInvocation createInteraction StatementExpression MethodInvocation inter MemberReference setContext StatementExpression MethodInvocation inter Literal setName ReturnStatement MemberReference inter	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference actionConnector Literal null BlockStatement StatementExpression Assignment MemberReference actionConnector ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal "edgeClass" MethodInvocation Model MethodInvocation getConnector getMetaTypes Literal = ReturnStatement MemberReference actionConnector	0
MethodDeclaration Modifier public setFig FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f setFig StatementExpression MethodInvocation	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Object VariableDeclarator generalization MethodInvocation getOwner IfStatement BinaryOperation == MemberReference generalization Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator disc Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference generalization getDiscriminator getFacade IfStatement BinaryOperation == MemberReference disc Literal null BlockStatement StatementExpression Assignment MemberReference disc Literal "" = StatementExpression MethodInvocation discriminator MethodInvocation MethodInvocation MemberReference Font PLAIN getFont getSettings setFont StatementExpression MethodInvocation discriminator MemberReference disc setText	0
MethodDeclaration Modifier private initFigs StatementExpression MethodInvocation Literal false StatementExpression Assignment MemberReference head ClassCreator ReferenceType FigRect MemberReference X MemberReference MemberReference STATE_WIDTH MemberReference HEIGHT MemberReference LINE_COLOR MemberReference SOLID_FILL_COLOR = StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference head addFig StatementExpression MethodInvocation Literal false setBlinkPorts	0
MethodDeclaration ReferenceType Object valueOfTarget FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation Model MethodInvocation MemberReference t getVisibility getFacade ReturnStatement TernaryExpression BinaryOperation == MemberReference v Literal null MethodInvocation Model MethodInvocation getPublic getVisibilityKind MemberReference v	1
MethodDeclaration Modifier public setConnections FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection elems StatementExpression MethodInvocation impl MemberReference handle MemberReference elems setConnections	0
MethodDeclaration Modifier public ReferenceType JMenu getMenu ReturnStatement MemberReference menu	0
MethodDeclaration Modifier public addMessage FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object elem IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference elem ReferenceType Message BlockStatement LocalVariableDeclaration Modifier final ReferenceType Message VariableDeclarator message Cast ReferenceType Message MemberReference elem LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator interaction Cast ReferenceType MemberReference handle LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator oldInteraction MethodInvocation message getInteraction IfStatement BinaryOperation != MemberReference oldInteraction Literal null BlockStatement StatementExpression MethodInvocation oldInteraction MethodInvocation MemberReference message remove getMessage StatementExpression MethodInvocation interaction MethodInvocation MemberReference message add getMessage ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType AssociationRole BinaryOperation instanceof MemberReference elem ReferenceType Message BlockStatement StatementExpression Cast ReferenceType AssociationRole MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference elem	0
MethodDeclaration Modifier private addImportType FormalParameter ReferenceType Set TypeArgument ReferenceType String imports FormalParameter ReferenceType Object feature FormalParameter ReferenceType String exclude LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference feature getType getFacade StatementExpression MethodInvocation MemberReference imports MemberReference type MemberReference exclude addImport	0
MethodDeclaration Modifier protected setAllElements FormalParameter ReferenceType Collection col IfStatement MethodInvocation ! isEmpty BlockStatement StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MemberReference col addAll	0
MethodDeclaration Modifier public ReferenceType Object getBase FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEndRole BlockStatement ReturnStatement Cast ReferenceType AssociationEndRole MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationRole BlockStatement ReturnStatement Cast ReferenceType AssociationRole MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement ReturnStatement Cast ReferenceType Extend MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Include BlockStatement ReturnStatement Cast ReferenceType Include MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement ReturnStatement Cast ReferenceType ClassifierRole MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	1
MethodDeclaration Modifier public showSaveIndicator StatementExpression MethodInvocation Literal null Literal null buildTitle	0
MethodDeclaration Modifier public ReferenceType getDefaultStereotypeView IfStatement BinaryOperation == MemberReference Literal null BlockStatement IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement ReturnStatement MethodInvocation parent getDefaultStereotypeView BlockStatement ReturnStatement MemberReference TEXTUAL ReturnStatement MemberReference	1
MethodDeclaration Modifier public ReferenceType Object getOperation FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator feature MemberReference obsoleteFeatures BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference feature isAOperation getFacade MethodInvocation name MethodInvocation Model MethodInvocation MemberReference feature getName getFacade equals BlockStatement ReturnStatement MemberReference feature ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object baseClass TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BlockStatement IfStatement BinaryOperation instanceof MemberReference baseClass ReferenceType String BlockStatement StatementExpression Cast ReferenceType Stereotype MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference baseClass ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType Stereotype MemberReference handle ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or baseClass: " MemberReference baseClass	0
MethodDeclaration Modifier protected BasicType int ReturnStatement MemberReference Font PLAIN	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getUmlActions IfStatement BinaryOperation == MemberReference actions Literal null BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator actionList ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation actionList ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionAddClassifierRole add StatementExpression MethodInvocation MemberReference actionList getMessageActions StatementExpression MethodInvocation actionList ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeBroomMessages Literal "button.broom-messages" add StatementExpression Assignment MemberReference actions ArrayCreator ReferenceType Object Literal 8 = LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 StatementExpression Assignment MemberReference actions MethodInvocation actionList toArray = ReturnStatement MemberReference actions	1
MethodDeclaration Modifier public ReferenceType Object getAggregationKind ReturnStatement ClassReference ReferenceType AggregationKind	0
MethodDeclaration Modifier public delete FormalParameter ReferenceType Object elem IfStatement BinaryOperation == MemberReference elem Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Element may not be null " Literal "in delete" SynchronizedStatement MemberReference lock IfStatement MethodInvocation elementsToBeDeleted MemberReference elem contains BlockStatement ReturnStatement IfStatement BinaryOperation == MemberReference top Literal null BlockStatement StatementExpression Assignment MemberReference top MemberReference elem = StatementExpression MethodInvocation elementsToBeDeleted Cast ReferenceType RefObject MemberReference elem add IfStatement MethodInvocation LOG isDebugEnabled BlockStatement IfStatement BinaryOperation == MemberReference top MemberReference elem BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Set top for cascade delete to " MemberReference elem debug StatementExpression MethodInvocation LOG BinaryOperation + Literal "Deleting " MemberReference elem debug StatementExpression MethodInvocation modelImpl MethodInvocation Literal false beginTrans getRepository TryStatement IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Element BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ModelElement BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteModelElement getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType GeneralizableElement BlockStatement LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator ge Cast ReferenceType GeneralizableElement MemberReference elem StatementExpression MethodInvocation MethodInvocation MemberReference ge deleteGeneralizableElement getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Stereotype BlockStatement LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator s Cast ReferenceType Stereotype MemberReference elem StatementExpression MethodInvocation MethodInvocation MemberReference s deleteStereotype getExtensionMechanisms IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Parameter BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteParameter getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Constraint BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteConstraint getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Relationship BlockStatement StatementExpression MethodInvocation Cast ReferenceType Relationship MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType AssociationEnd BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteAssociationEnd getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType AssociationEndRole BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteAssociationEndRole getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteComment getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Action BlockStatement StatementExpression MethodInvocation MemberReference elem deleteAction IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteAttributeLink IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation Cast ReferenceType MemberReference elem deleteInstance IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteStimulus IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Link BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteLink IfStatement BinaryOperation instanceof MemberReference elem ReferenceType LinkEnd BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteLinkEnd IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteInteraction getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteInteractionInstanceSet getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType CollaborationInstanceSet BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteCollaborationInstanceSet getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Message BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteMessage getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteExtensionPoint getUseCases IfStatement BinaryOperation instanceof MemberReference elem ReferenceType StateVertex BlockStatement StatementExpression MethodInvocation Cast ReferenceType StateVertex MemberReference elem deleteStateVertex IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteStateMachine getStateMachines IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ActivityGraph BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteActivityGraph getActivityGraphs IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Transition BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteTransition getStateMachines IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Guard BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteGuard getStateMachines IfStatement BinaryOperation instanceof MemberReference elem ReferenceType TaggedValue BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteTaggedValue getExtensionMechanisms IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteTagDefinition getExtensionMechanisms IfStatement BinaryOperation instanceof MemberReference elem ReferenceType PresentationElement BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deletePresentationElement getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType TemplateParameter BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteTemplateParameter getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteTemplateArgument getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ElementImport BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteElementImport getModelManagement IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ElementResidence BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteElementResidence getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deletePartition getActivityGraphs IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Feature BlockStatement StatementExpression MethodInvocation Cast ReferenceType Feature MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Namespace BlockStatement StatementExpression MethodInvocation Cast ReferenceType Namespace MemberReference elem deleteNamespace CatchClause CatchClauseParameter InvalidObjectException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Encountered deleted object during delete of " MemberReference elem error CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Encountered deleted object during delete of " MemberReference elem error StatementExpression MethodInvocation modelImpl MethodInvocation endTrans getRepository SynchronizedStatement MemberReference lock TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator container Cast ReferenceType RefObject MemberReference elem IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference container Literal null MethodInvocation ! elementsToBeDeleted MemberReference container contains BinaryOperation && BinaryOperation instanceof MemberReference container ReferenceType BinaryOperation instanceof MemberReference elem ReferenceType StateVertex BinaryOperation && BinaryOperation instanceof MemberReference container ReferenceType Transition BinaryOperation instanceof MemberReference elem ReferenceType Guard BlockStatement StatementExpression MethodInvocation elementsInDeletionOrder Cast ReferenceType RefObject MemberReference elem add CatchClause CatchClauseParameter InvalidObjectException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Object already deleted " MemberReference elem debug IfStatement BinaryOperation == MemberReference elem MemberReference top BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType RefObject VariableDeclarator o MemberReference elementsInDeletionOrder BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType CompositeState VariableDeclarator deletedCompositeState Cast ReferenceType CompositeState MemberReference o TryStatement LocalVariableDeclaration ReferenceType CompositeState VariableDeclarator containingCompositeState MethodInvocation deletedCompositeState getContainer IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference containingCompositeState Literal null MethodInvocation containingCompositeState isConcurrent BinaryOperation == MethodInvocation containingCompositeState MethodInvocation size Literal 1 BlockStatement StatementExpression MethodInvocation containingCompositeState Literal false CatchClause CatchClauseParameter InvalidObjectException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Object already deleted " MemberReference o debug TryStatement StatementExpression MethodInvocation o refDelete CatchClause CatchClauseParameter InvalidObjectException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Object already deleted " MemberReference o debug StatementExpression MethodInvocation elementsToBeDeleted MemberReference o remove StatementExpression Assignment MemberReference top Literal null = StatementExpression MethodInvocation elementsInDeletionOrder clear IfStatement MethodInvocation ! elementsToBeDeleted isEmpty BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "**Skipped deleting " MethodInvocation elementsToBeDeleted size Literal " elements (probably in a deleted container" debug StatementExpression MethodInvocation elementsToBeDeleted clear StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	1
MethodDeclaration Modifier public setName FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType String name IfStatement BinaryOperation instanceof MemberReference handle ReferenceType NamedElement BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Attempting to set the name of a generalization " Literal is no longer a NamedElement in UML 2" MemberReference name MethodInvocation handle toString warn ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of NamedElement" IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal "name must be LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType NamedElement MemberReference handle StatementExpression MethodInvocation editingDomain MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Set the name to the named element #" MemberReference name MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier public ReferenceType Collection getModelElements ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getConnections getFacade	0
MethodDeclaration Modifier static ReferenceType Rectangle FormalParameter ReferenceType Rectangle area LocalVariableDeclaration BasicType int VariableDeclarator xMargin MemberReference area x IfStatement BinaryOperation < MemberReference xMargin Literal 0 BlockStatement StatementExpression Assignment MemberReference xMargin Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator yMargin MemberReference area y IfStatement BinaryOperation < MemberReference yMargin Literal 0 BlockStatement StatementExpression Assignment MemberReference yMargin Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator margin MethodInvocation Math MemberReference xMargin MemberReference yMargin max IfStatement BinaryOperation < MemberReference margin MemberReference MIN_MARGIN BlockStatement StatementExpression Assignment MemberReference margin MemberReference MIN_MARGIN = ReturnStatement ClassCreator ReferenceType Rectangle Literal 0 Literal 0 BinaryOperation + MemberReference area width BinaryOperation * Literal 2 MemberReference margin BinaryOperation + MemberReference area height BinaryOperation * Literal 2 MemberReference margin	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation MethodInvocation MemberReference col setFillColor getBigPort	0
MethodDeclaration Modifier public final addElementListener FormalParameter ReferenceType Object element StatementExpression MethodInvocation This MemberReference element addElementListener	0
MethodDeclaration Modifier public ReferenceType Object getUninterpretedAction ReturnStatement ClassReference ReferenceType UninterpretedAction	0
MethodDeclaration Modifier private BasicType boolean isXtorIgnorable ReturnStatement BinaryOperation || BinaryOperation == MethodInvocation contextStack size Literal 0 MethodInvocation MethodInvocation MethodInvocation contextStack peek isAModel getFacade	1
MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object t StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "setTarget called with " MemberReference t Literal " as parameter (not target!)" debug StatementExpression Assignment MemberReference t TernaryExpression BinaryOperation instanceof MemberReference t ReferenceType Fig Cast ReferenceType Fig MemberReference t MemberReference t = LocalVariableDeclaration ReferenceType Runnable VariableDeclarator dispatch Literal null IfStatement BinaryOperation != MemberReference t MemberReference target BlockStatement StatementExpression Assignment MemberReference target MemberReference t = StatementExpression Assignment MemberReference modelElement Literal null = IfStatement BinaryOperation == MemberReference listenerList Literal null BlockStatement StatementExpression Assignment MemberReference listenerList MethodInvocation This collectTargetListeners = IfStatement MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BlockStatement StatementExpression Assignment MemberReference modelElement MemberReference target = StatementExpression Assignment MemberReference dispatch ClassCreator ReferenceType UMLChangeDispatch This MemberReference UMLChangeDispatch TARGET_CHANGED_ADD = StatementExpression MethodInvocation buildToolbar BlockStatement StatementExpression Assignment MemberReference dispatch ClassCreator ReferenceType UMLChangeDispatch This MemberReference UMLChangeDispatch TARGET_REASSERTED = StatementExpression MethodInvocation SwingUtilities MemberReference dispatch invokeLater IfStatement BinaryOperation != MemberReference titleLabel Literal null BlockStatement LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon Literal null IfStatement BinaryOperation != MemberReference t Literal null BlockStatement StatementExpression Assignment MemberReference icon MethodInvocation MethodInvocation MemberReference t getInstance = IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation titleLabel MemberReference icon setIcon	1
MethodDeclaration Modifier public ReferenceType Object findTypeInModel FormalParameter ReferenceType String typeName FormalParameter ReferenceType Object namespace IfStatement BinaryOperation == MemberReference typeName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be IfStatement MethodInvocation ! Model MethodInvocation MemberReference namespace isANamespace getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Looking for the classifier " MemberReference typeName Literal " in a object of " MemberReference namespace Literal ". A namespace was expected." LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference namespace MethodInvocation Model MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind getModelManagementHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifier MemberReference BlockStatement IfStatement MethodInvocation typeName MethodInvocation Model MethodInvocation MemberReference classifier getName getFacade equals BlockStatement ReturnStatement MemberReference classifier ReturnStatement Literal null	0
MethodDeclaration Modifier public endElement FormalParameter BasicType int nameCode TransformerException IfStatement MethodInvocation ! elementStack empty BlockStatement StatementExpression MethodInvocation elementStack pop StatementExpression MethodInvocation rtfEmitter MemberReference nameCode endElement	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getNamespace getFacade addElement	0
MethodDeclaration Modifier public ReferenceType Enumeration createEnumeration LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator myEnumeration MethodInvocation MethodInvocation MethodInvocation createEnumeration getCorePackage StatementExpression SuperMethodInvocation MemberReference myEnumeration ReturnStatement MemberReference myEnumeration	0
MethodDeclaration Modifier public ReferenceType Object getTarget ReturnStatement MemberReference target	0
MethodDeclaration Modifier private update LocalVariableDeclaration ReferenceType String VariableDeclarator oldText MethodInvocation getText LocalVariableDeclaration ReferenceType String VariableDeclarator newText MethodInvocation model getBody IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference oldText Literal null BinaryOperation == MemberReference newText Literal null MethodInvocation ! oldText MemberReference newText equals BlockStatement IfStatement BinaryOperation != MemberReference oldText MemberReference newText BlockStatement StatementExpression MethodInvocation MemberReference newText setText	1
MethodDeclaration Modifier static protected ReferenceType String getVariable FormalParameter ReferenceType Context context FormalParameter ReferenceType String varName LocalVariableDeclaration ReferenceType Value VariableDeclarator variable Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator varString Literal null TryStatement StatementExpression Assignment MemberReference variable MethodInvocation Extensions MemberReference context BinaryOperation + Literal "$" MemberReference varName evaluate = StatementExpression Assignment MemberReference varString MethodInvocation variable asString = ReturnStatement MemberReference varString CatchClause CatchClauseParameter TransformerException te StatementExpression MethodInvocation System.out BinaryOperation + Literal "Undefined variable: " MemberReference varName println ReturnStatement Literal "" CatchClause CatchClauseParameter IllegalArgumentException iae StatementExpression MethodInvocation System.out BinaryOperation + Literal "Undefined variable: " MemberReference varName println ReturnStatement Literal ""	1
MethodDeclaration Modifier private ReferenceType GetterSetterManager getGetterSetter ReturnStatement MemberReference getterSetterManager	0
MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation This addActionListener	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration BasicType boolean VariableDeclarator problem MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation Model MethodInvocation MemberReference dm getAssociations getCoreHelper LocalVariableDeclaration ReferenceType List VariableDeclarator names ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference name MethodInvocation Model MethodInvocation MethodInvocation it next getName getFacade = IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null MethodInvocation name Literal "" equals BlockStatement ContinueStatement IfStatement MethodInvocation names MemberReference name contains BlockStatement StatementExpression Assignment MemberReference problem MemberReference PROBLEM_FOUND = BreakStatement ReturnStatement MemberReference problem	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig createBigPortFig LocalVariableDeclaration ReferenceType VariableDeclarator frr ClassCreator ReferenceType MemberReference X MemberReference MemberReference W MemberReference H MemberReference DEBUG_COLOR MemberReference DEBUG_COLOR StatementExpression MethodInvocation frr BinaryOperation / MethodInvocation frr getHeight Literal 2 setCornerRadius StatementExpression MethodInvocation frr Literal 0 setLineWidth ReturnStatement MemberReference frr	0
MethodDeclaration Modifier public static ReferenceType String generateTop FormalParameter ReferenceType String id FormalParameter ReferenceType String indent IfStatement BinaryOperation == MemberReference useSections MemberReference SECT_NONE ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator s MemberReference indent IfStatement BinaryOperation != MemberReference useSections MemberReference SECT_BRIEF BlockStatement StatementExpression Assignment MemberReference s Literal "// don't delete the following line as " += StatementExpression Assignment MemberReference s Literal "it's needed to preserve source code of this " += StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + Literal "autogenerated element" MemberReference LINE_SEPARATOR MemberReference indent += StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + BinaryOperation + Literal "// section " MemberReference id Literal " begin" MemberReference LINE_SEPARATOR += ReturnStatement MemberReference s	1
MethodDeclaration Modifier public addText FormalParameter BasicType char c FormalParameter BasicType int offset FormalParameter BasicType int len StatementExpression Assignment MemberReference text MethodInvocation text MemberReference c MemberReference offset MemberReference len append =	0
MethodDeclaration Modifier private addPosters FormalParameter ReferenceType Poster newp IfStatement BinaryOperation != MemberReference allPosters Literal null BlockStatement StatementExpression MethodInvocation allPosters MemberReference newp add	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal Dependencies"	0
MethodDeclaration Modifier public Annotation Override setEnclosingFig FormalParameter ReferenceType Fig encloser StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig	1
MethodDeclaration Modifier public ReferenceType Object getPrivate ReturnStatement MemberReference	0
MethodDeclaration Modifier protected updateBounds IfStatement MethodInvocation ! isCheckSize BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator bbox MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator minSize MethodInvocation getMinimumSize StatementExpression Assignment MemberReference bbox width MethodInvocation Math MemberReference bbox width MemberReference minSize width max = StatementExpression Assignment MemberReference bbox height MethodInvocation Math MemberReference bbox height MemberReference minSize height max = StatementExpression MethodInvocation MemberReference bbox x MemberReference bbox y MemberReference bbox width MemberReference bbox height setBounds	1
MethodDeclaration Modifier public setRecurrence FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr LocalVariableDeclaration ReferenceType Action VariableDeclarator action Cast ReferenceType Action MemberReference handle LocalVariableDeclaration ReferenceType IterationExpression VariableDeclarator oldExpr MethodInvocation action getRecurrence LocalVariableDeclaration ReferenceType IterationExpression VariableDeclarator newExpr Cast ReferenceType IterationExpression MemberReference expr IfStatement MethodInvocation ! MemberReference oldExpr MemberReference newExpr equal BlockStatement StatementExpression MethodInvocation action MemberReference newExpr setRecurrence IfStatement BinaryOperation != MemberReference oldExpr Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference oldExpr delete getUmlFactory	0
MethodDeclaration Modifier private BasicType int getUsableWidth FormalParameter ReferenceType Container parent LocalVariableDeclaration Modifier final ReferenceType Insets VariableDeclarator insets MethodInvocation parent getInsets ReturnStatement BinaryOperation - MethodInvocation parent getWidth BinaryOperation + MemberReference insets left MemberReference insets right	0
MethodDeclaration Modifier public ReferenceType CallAction createCallAction LocalVariableDeclaration ReferenceType CallAction VariableDeclarator myCallAction MethodInvocation MethodInvocation MethodInvocation createCallAction getCbPackage StatementExpression SuperMethodInvocation MemberReference myCallAction ReturnStatement MemberReference myCallAction	0
MethodDeclaration Modifier public setRoot FormalParameter Modifier final ReferenceType Object handle FormalParameter BasicType boolean flag StatementExpression MethodInvocation ClassCreator ReferenceType BooleanSetter MethodDeclaration Modifier public set FormalParameter BasicType boolean value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setRoot getComponent MemberReference flag MethodInvocation Model MethodInvocation MemberReference handle isRoot getFacade createCommand	1
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType SelectionRerouteEdge This	1
MethodDeclaration Modifier public addDeploymentLocation FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object node IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Component BinaryOperation instanceof MemberReference node ReferenceType Node BlockStatement StatementExpression Cast ReferenceType Component MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or node: " MemberReference node	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public BasicType boolean hit FormalParameter BasicType int x FormalParameter BasicType int y LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator rect Literal null IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigNodeModelElement BlockStatement LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator fnme Cast ReferenceType FigNodeModelElement MemberReference fig StatementExpression Assignment MemberReference rect MethodInvocation fnme getNameBounds = IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigEdgeModelElement BlockStatement LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator feme Cast ReferenceType FigEdgeModelElement MemberReference fig StatementExpression Assignment MemberReference rect MethodInvocation feme getNameBounds = StatementExpression Assignment MemberReference fig Literal null = ReturnStatement BinaryOperation && BinaryOperation != MemberReference rect Literal null MethodInvocation rect MemberReference x MemberReference y contains	1
MethodDeclaration ReferenceType Multiplicity createMultiplicityInternal FormalParameter Modifier final ReferenceType List TypeArgument ReferenceType MultiplicityRange LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator multiplicity MethodInvocation modelImpl MethodInvocation getDataTypes MethodInvocation getMultiplicity MethodInvocation createMultiplicity getUmlPackage IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Multiplicity created for list " MemberReference debug StatementExpression MethodInvocation multiplicity MethodInvocation MemberReference addAll getRange StatementExpression SuperMethodInvocation MemberReference multiplicity ReturnStatement MemberReference multiplicity	0
MethodDeclaration Modifier private generateClassifierBodyTypedefs FormalParameter ReferenceType Object cls FormalParameter ReferenceType StringBuffer sb IfStatement BinaryOperation == MemberReference generatorPass MemberReference HEADER_PASS BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator publicTypedefStatements MethodInvocation MemberReference cls MemberReference TV_NAME_TYPEDEF_PUBLIC findTagValues LocalVariableDeclaration ReferenceType Collection VariableDeclarator protectedTypedefStatements MethodInvocation MemberReference cls MemberReference TV_NAME_TYPEDEF_PROTECTED findTagValues LocalVariableDeclaration ReferenceType Collection VariableDeclarator privateTypedefStatements MethodInvocation MemberReference cls MemberReference TV_NAME_TYPEDEF_PRIVATE findTagValues IfStatement MethodInvocation ! publicTypedefStatements isEmpty BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal " public:" append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation MemberReference indent append MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append BinaryOperation + Literal "// public type definitions for header defined " Literal "by Tag entries in ArgoUML" append StatementExpression MethodInvocation sb MemberReference indent append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append BinaryOperation + Literal "// Result: typedef <typedef_public> " Literal "<tag_value>;" append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator typedefEnum MethodInvocation publicTypedefStatements iterator WhileStatement MethodInvocation typedefEnum hasNext BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "typedef " append MemberReference indent append StatementExpression MethodInvocation sb MethodInvocation Literal ";" append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation typedefEnum next append IfStatement MethodInvocation ! protectedTypedefStatements isEmpty BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal " protected:" append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation MemberReference indent append MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append BinaryOperation + Literal "// protected type definitions for header defined " Literal "by Tag entries in ArgoUML" append StatementExpression MethodInvocation sb MemberReference indent append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append BinaryOperation + Literal "// Result: typedef <typedef_protected> " Literal "<tag_value>;" append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator typedefEnum MethodInvocation protectedTypedefStatements iterator WhileStatement MethodInvocation typedefEnum hasNext BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "typedef " append MemberReference indent append StatementExpression MethodInvocation sb MethodInvocation Literal ";" append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation typedefEnum next append IfStatement MethodInvocation ! privateTypedefStatements isEmpty BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal " private:" append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation MemberReference indent append MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append BinaryOperation + Literal "// private type definitions for header defined " Literal "by Tag entries in ArgoUML" append StatementExpression MethodInvocation sb MemberReference indent append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append BinaryOperation + Literal "// Result: typedef <typedef_private> " Literal "<tag_value>;" append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator typedefEnum MethodInvocation privateTypedefStatements iterator WhileStatement MethodInvocation typedefEnum hasNext BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "typedef " append MemberReference indent append StatementExpression MethodInvocation sb MethodInvocation Literal ";" append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation typedefEnum next append	1
MethodDeclaration Modifier protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object getBinding FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private BasicType boolean isCollection FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Object VariableDeclarator multiplicity MethodInvocation Model MethodInvocation MemberReference element getMultiplicity getFacade IfStatement BinaryOperation != MemberReference multiplicity Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator upper MethodInvocation Model MethodInvocation MemberReference multiplicity getUpper getFacade IfStatement BinaryOperation || BinaryOperation > MemberReference upper Literal 1 BinaryOperation == MemberReference upper Literal - 1 BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType LinkEnd createLinkEnd LocalVariableDeclaration ReferenceType LinkEnd VariableDeclarator myLinkEnd MethodInvocation MethodInvocation MethodInvocation createLinkEnd getCbPackage StatementExpression SuperMethodInvocation MemberReference myLinkEnd ReturnStatement MemberReference myLinkEnd	0
MethodDeclaration Modifier private fireDiagramAppearanceEventInternal FormalParameter Modifier final ReferenceType ArgoDiagramAppearanceEvent event FormalParameter Modifier final ReferenceType ArgoDiagramAppearanceEventListener listener SwitchStatement MethodInvocation event getEventType SwitchStatementCase MemberReference ArgoEventTypes DIAGRAM_FONT_CHANGED StatementExpression MethodInvocation listener MemberReference event diagramFontChanged BreakStatement SwitchStatementCase StatementExpression MethodInvocation LOG BinaryOperation + Literal "Invalid event:" MethodInvocation event getEventType error BreakStatement	1
MethodDeclaration Modifier public ReferenceType Enumeration gen FormalParameter ReferenceType Object o IfStatement MethodInvocation Model MethodInvocation MemberReference o isAPackage getFacade BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference o ReferenceType Diagram BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator res ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Diagram VariableDeclarator d Cast ReferenceType Diagram MemberReference o StatementExpression MethodInvocation res MethodInvocation d MethodInvocation getNodes getGraphModel add StatementExpression MethodInvocation res MethodInvocation d MethodInvocation getEdges getGraphModel add ReturnStatement MethodInvocation Collections MemberReference res enumeration IfStatement MethodInvocation Model MethodInvocation MemberReference o isAUMLElement getFacade BlockStatement ReturnStatement MethodInvocation Collections MethodInvocation Model MethodInvocation MemberReference o getModelElementAssociated getFacade enumeration ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Unknown element type " MemberReference o	1
MethodDeclaration Modifier public BasicType boolean isAsynchronous FormalParameter ReferenceType Object handle IfStatement BinaryOperation == MemberReference handle MemberReference MessageSort ASYNCH_CALL_LITERAL BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference handle MemberReference MessageSort ASYNCH_SIGNAL_LITERAL BlockStatement ReturnStatement Literal true IfStatement BinaryOperation instanceof MemberReference handle ReferenceType CallAction BlockStatement ReturnStatement Cast ReferenceType CallAction MemberReference handle ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Object getFlow ReturnStatement ClassReference ReferenceType Flow	0
MethodDeclaration Modifier public ReferenceType Object execute StatementExpression MethodInvocation accesser MemberReference newValue set ReturnStatement Literal null	0
MethodDeclaration Modifier public setParent FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of Generalization" IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "parent must be instance of Classifier" LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType Generalization MemberReference handle StatementExpression MethodInvocation editingDomain MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run BinaryOperation + Literal "Set the as the classifier " Literal "of the generalization #" MemberReference parent MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier public setSender FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object sender StatementExpression MethodInvocation impl MemberReference handle MemberReference sender setSender	0
MethodDeclaration Modifier public removeNotify StatementExpression MethodInvocation LOG Literal "The XML panel is being removed" info StatementExpression MethodInvocation removeAll	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String s FormalParameter ReferenceType Object ns ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType Lifeline	0
MethodDeclaration Modifier protected addAll FormalParameter ReferenceType Collection col IfStatement BinaryOperation == MethodInvocation col size Literal 0 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator StatementExpression Assignment MemberReference fireListEvents Literal false = LocalVariableDeclaration BasicType int VariableDeclarator intervalStart TernaryExpression BinaryOperation == MethodInvocation getSize Literal 0 Literal 0 BinaryOperation - MethodInvocation getSize Literal 1 WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next StatementExpression MethodInvocation MemberReference o addElement StatementExpression Assignment MemberReference fireListEvents Literal true = StatementExpression MethodInvocation This MemberReference intervalStart BinaryOperation - MethodInvocation getSize Literal 1 fireIntervalAdded	1
MethodDeclaration Modifier public ReferenceType Collection getElementsRead ReturnStatement MemberReference elementsRead	0
MethodDeclaration Modifier private validateFkConsistence FormalParameter ReferenceType Object relation FormalParameter ReferenceType Object fkAttribute FormalParameter BasicType int LocalVariableDeclaration ReferenceType String VariableDeclarator entName MethodInvocation Model MethodInvocation MemberReference relation getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator attrName MethodInvocation Model MethodInvocation MemberReference fkAttribute getName getFacade IfStatement BinaryOperation && MethodInvocation Utils MemberReference fkAttribute isNull BinaryOperation == MemberReference Literal 1 BlockStatement StatementExpression MethodInvocation problems BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "conflict in " MemberReference entName Literal "." MemberReference attrName Literal ": " Literal is nullable and association lower bound " Literal "is one" add IfStatement BinaryOperation && MethodInvocation Utils MemberReference fkAttribute isNotNull BinaryOperation == MemberReference Literal 0 BlockStatement StatementExpression MethodInvocation problems BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "conflict in " MemberReference entName Literal "." MemberReference attrName Literal ": " Literal is not nullable and association lower " Literal is zero" add	0
MethodDeclaration Modifier public ReferenceType Object getInteractionInstanceSet ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "Not a UML2 model element"	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference BASE instructions	0
MethodDeclaration Modifier public static ReferenceType String getIDOfObject FormalParameter ReferenceType Object obj FormalParameter BasicType boolean canCreate LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MemberReference obj readObjectID IfStatement BinaryOperation && BinaryOperation == MemberReference s Literal null MemberReference canCreate BlockStatement StatementExpression Assignment MemberReference s MethodInvocation MemberReference obj createObjectID = ReturnStatement MemberReference s	0
MethodDeclaration Modifier public BasicType boolean isAPackage FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getRoot StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference model MemberReference getModelManagementHelper addAll ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public run IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement StatementExpression Cast ReferenceType BehavioralFeature MemberReference handle	0
MethodDeclaration Modifier public ReferenceType NotationProvider ReturnStatement MemberReference notationProvider	0
MethodDeclaration Modifier private static ReferenceType String getExtension FormalParameter ReferenceType File f IfStatement BinaryOperation == MemberReference f Literal null BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation MethodInvocation f getName getExtension	0
MethodDeclaration Modifier final protected ReferenceType String convertType FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType String VariableDeclarator sName MethodInvocation Model MethodInvocation MemberReference modelElement getName MethodInvocation trim getFacade IfStatement MethodInvocation sName Literal "void" equals BlockStatement ReturnStatement Literal null IfStatement MethodInvocation sName Literal "char" equals BlockStatement ReturnStatement Literal "string" IfStatement MethodInvocation sName Literal "boolean" equals BlockStatement ReturnStatement Literal "bool" IfStatement MethodInvocation sName Literal "bool" equals BlockStatement ReturnStatement Literal "bool" IfStatement MethodInvocation sName Literal "int" equals BlockStatement ReturnStatement Literal "int" IfStatement MethodInvocation sName Literal "byte" equals BlockStatement ReturnStatement Literal "int" IfStatement MethodInvocation sName Literal "short" equals BlockStatement ReturnStatement Literal "int" IfStatement MethodInvocation sName Literal "long" equals BlockStatement ReturnStatement Literal "int" IfStatement MethodInvocation sName Literal "float" equals BlockStatement ReturnStatement Literal "float" IfStatement MethodInvocation sName Literal "double" equals BlockStatement ReturnStatement Literal "float" IfStatement MethodInvocation sName Literal "string" equals BlockStatement ReturnStatement Literal "string" IfStatement MethodInvocation sName Literal "array" equals BlockStatement ReturnStatement Literal "array" ReturnStatement Literal null	1
MethodDeclaration Modifier public setReadOnly FormalParameter ReferenceType Object handle FormalParameter BasicType boolean isReadOnly StatementExpression MethodInvocation impl MemberReference handle MemberReference isReadOnly setReadOnly	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation getName	0
MethodDeclaration Modifier public setResident FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object resident ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public static BasicType boolean isInCache FormalParameter ReferenceType String resource ReturnStatement MethodInvocation resourceCache MemberReference resource containsKey	0
MethodDeclaration Modifier public ReferenceType Object getMetaType FormalParameter ReferenceType String propertyName LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MemberReference propertyName get IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType DiagramElement createDiagramElement FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Rectangle bounds LocalVariableDeclaration ReferenceType DiagramElement VariableDeclarator figNode Literal null LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation getDiagramSettings IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType MemberReference modelElement MemberReference bounds MemberReference settings = LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator style IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAObjectNode getFacade BlockStatement StatementExpression Assignment MemberReference style Literal "rect" = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isASendSignalAction getFacade BlockStatement StatementExpression Assignment MemberReference style Literal "pentagon" = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAcceptEventAction getFacade BlockStatement StatementExpression Assignment MemberReference style Literal "concave-pentagon" = BlockStatement StatementExpression Assignment MemberReference style Literal "rrect" = StatementExpression MethodInvocation DiagramElementBuilder Cast ReferenceType MemberReference figNode MemberReference style MemberReference modelElement MemberReference settings ReturnStatement MemberReference figNode	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getAssociationClass getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType Collection getClassifierRoles FormalParameter ReferenceType Object role ReturnStatement Literal null	1
MethodDeclaration Modifier public redrawEnclosedFigs LocalVariableDeclaration ReferenceType Editor VariableDeclarator editor MethodInvocation Globals curEditor IfStatement BinaryOperation && BinaryOperation != MemberReference editor Literal null MethodInvocation ! MethodInvocation isEmpty getEnclosedFigs BlockStatement LocalVariableDeclaration ReferenceType LayerDiagram VariableDeclarator lay Cast ReferenceType LayerDiagram MethodInvocation editor MethodInvocation getActiveLayer getLayerManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation getEnclosedFigs BlockStatement StatementExpression MethodInvocation lay MemberReference f This bringInFrontOf IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigNode BlockStatement LocalVariableDeclaration ReferenceType FigNode VariableDeclarator fn Cast ReferenceType FigNode MemberReference f LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation fn MethodInvocation iterator getFigEdges WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation lay Cast ReferenceType FigEdge MethodInvocation it next This bringInFrontOf IfStatement BinaryOperation instanceof MemberReference fn ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference fn	0
MethodDeclaration Modifier protected ReferenceType ListSet computeOffenders FormalParameter ReferenceType Object dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offenderResult ClassCreator ReferenceType ListSet IfStatement MethodInvocation Model MethodInvocation MemberReference dm isANamespace getFacade BlockStatement LocalVariableDeclaration ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator names ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator name1Object MethodInvocation Model MethodInvocation MemberReference dm getOwnedElements getFacade BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference name1Object isAAssociation getFacade BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference name1Object getName getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator typ1 MethodInvocation MemberReference name1Object getAllTypes IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null Literal MethodInvocation MemberReference name equals "" BlockStatement ContinueStatement IfStatement MethodInvocation names MemberReference name containsKey BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator offender MethodInvocation names MemberReference name get LocalVariableDeclaration ReferenceType Collection VariableDeclarator typ2 MethodInvocation MemberReference offender getAllTypes IfStatement BinaryOperation && MethodInvocation typ1 MemberReference typ2 MethodInvocation typ2 MemberReference typ1 BlockStatement IfStatement MethodInvocation ! offenderResult MemberReference offender contains BlockStatement StatementExpression MethodInvocation offenderResult MemberReference offender add StatementExpression MethodInvocation offenderResult MemberReference name1Object add StatementExpression MethodInvocation names MemberReference name MemberReference name1Object put ReturnStatement MemberReference offenderResult	1
MethodDeclaration Modifier public static ReferenceType String stringsToString FormalParameter ReferenceType List strings FormalParameter ReferenceType String separators LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation strings iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s Cast ReferenceType String MethodInvocation it next IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression MethodInvocation sb MemberReference separators append StatementExpression MethodInvocation sb MemberReference s append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public StatementExpression MethodInvocation LookAndFeelMgr MethodInvocation Cast ReferenceType String MethodInvocation lookAndFeel getSelectedItem Cast ReferenceType String MethodInvocation metalTheme getSelectedItem setCurrentLAFAndThemeByName getInstance StatementExpression MethodInvocation Configuration MemberReference Argo KEY_SMOOTH_EDGES MethodInvocation smoothEdges isSelected setBoolean IfStatement BinaryOperation != MemberReference locale Literal null BlockStatement StatementExpression MethodInvocation Configuration MemberReference Argo KEY_LOCALE MethodInvocation locale toString setString	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "This is not a UML1.4 class"	0
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade setAllElements	0
MethodDeclaration Modifier public final addListener FormalParameter ReferenceType PropertyChangeListener p IfStatement BinaryOperation == MemberReference pcl Literal null BlockStatement StatementExpression Assignment MemberReference pcl ClassCreator ReferenceType PropertyChangeSupport This = StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "addPropertyChangeListener(" MemberReference p Literal ")" debug StatementExpression MethodInvocation pcl MemberReference p addPropertyChangeListener	1
MethodDeclaration Modifier public ReferenceType XMIReferenceProvider ReferenceType XMIReference getReference FormalParameter ReferenceType RefObject object LocalVariableDeclaration ReferenceType String VariableDeclarator mofId MethodInvocation object refMofId LocalVariableDeclaration ReferenceType XmiReference VariableDeclarator ref MethodInvocation mofIdToXmiId MemberReference mofId get IfStatement MemberReference ! topSystemIdSaved BlockStatement IfStatement BinaryOperation == MemberReference ref Literal null BlockStatement StatementExpression Assignment MemberReference topSystemId Literal null = BlockStatement StatementExpression Assignment MemberReference topSystemId MethodInvocation ref getSystemId = StatementExpression Assignment MemberReference topSystemIdSaved Literal true = IfStatement BinaryOperation == MemberReference ref Literal null BlockStatement ReturnStatement ClassCreator ReferenceType XMIReferenceProvider ReferenceType XMIReference Literal null MemberReference mofId BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator systemId MethodInvocation ref getSystemId IfStatement BinaryOperation && BinaryOperation != MemberReference topSystemId Literal null MethodInvocation topSystemId MemberReference systemId equals BlockStatement StatementExpression Assignment MemberReference systemId Literal null = ReturnStatement ClassCreator ReferenceType XMIReferenceProvider ReferenceType XMIReference MemberReference systemId MethodInvocation ref getXmiId	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object qualifier StatementExpression SuperMethodInvocation MemberReference handle MemberReference index MemberReference qualifier StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public ReferenceType TimeEvent FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType TimeEvent VariableDeclarator event MethodInvocation createTimeEvent StatementExpression MethodInvocation event Cast ReferenceType Namespace MemberReference ns setNamespace StatementExpression MethodInvocation event Literal "" setName ReturnStatement MemberReference event	0
MethodDeclaration Modifier public setChangeExpression FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType BooleanExpression BlockStatement LocalVariableDeclaration ReferenceType Expression VariableDeclarator oldExp Cast ReferenceType MemberReference handle IfStatement MethodInvocation ! MemberReference oldExp Cast ReferenceType Expression MemberReference value equal BlockStatement StatementExpression Cast ReferenceType MemberReference handle IfStatement BinaryOperation != MemberReference oldExp Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference oldExp delete getUmlFactory ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or value: " MemberReference value	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String getPathList FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator path ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator name IfStatement MethodInvocation modelImpl MethodInvocation MemberReference element isANamedElement getFacade BlockStatement StatementExpression Assignment MemberReference name MethodInvocation modelImpl MethodInvocation MemberReference element getName getFacade = BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + MethodInvocation modelImpl MethodInvocation MemberReference element getUMLClassName getFacade Literal " <not nameable>" = StatementExpression MethodInvocation path MemberReference name add ReturnStatement MemberReference path	1
MethodDeclaration Modifier public setPaused FormalParameter BasicType boolean paused IfStatement MemberReference paused BlockStatement StatementExpression MethodInvocation pause BlockStatement StatementExpression MethodInvocation resume	0
MethodDeclaration Modifier private ReferenceType Object getStereotype FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype Literal null LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereotypes MethodInvocation StereotypeUtility MemberReference modelElement getAvailableStereotypes ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation stereotypes iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator candidateStereotype MethodInvocation it next IfStatement MethodInvocation MethodInvocation MemberReference candidateStereotype getName MethodInvocation MemberReference equals getFacade BlockStatement StatementExpression Assignment MemberReference stereotype MemberReference candidateStereotype = BreakStatement ReturnStatement MemberReference stereotype	1
MethodDeclaration Modifier protected ReferenceType Object parseObjectFlowState1 FormalParameter ReferenceType Object objectFlowState FormalParameter ReferenceType String s ParseException LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference objectFlowState MemberReference s IfStatement BinaryOperation != MemberReference c Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference objectFlowState MemberReference c setType getCoreHelper ReturnStatement MemberReference objectFlowState IfStatement BinaryOperation && BinaryOperation != MemberReference s Literal null BinaryOperation > MethodInvocation s length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator topState MethodInvocation Model MethodInvocation MemberReference objectFlowState getContainer getFacade IfStatement BinaryOperation != MemberReference topState Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator machine MethodInvocation Model MethodInvocation MemberReference topState getStateMachine getFacade IfStatement BinaryOperation != MemberReference machine Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference machine getNamespace getFacade IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator clazz MethodInvocation Model MethodInvocation MemberReference s MemberReference ns buildClass getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference objectFlowState MemberReference clazz setType getCoreHelper ReturnStatement MemberReference objectFlowState LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.object-flow-type.classifier-not-found" LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MemberReference s ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg MemberReference args localize Literal 0	1
MethodDeclaration Modifier public synchronized Annotation Override setEnabled FormalParameter Modifier final BasicType boolean isEnabled IfStatement BinaryOperation == MemberReference isEnabled This MemberReference enabled BlockStatement ReturnStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement IfStatement BinaryOperation && MemberReference ! enabled MemberReference isEnabled BlockStatement LocalVariableDeclaration ReferenceType Throwable VariableDeclarator ClassCreator ReferenceType Throwable StatementExpression MethodInvocation fillInStackTrace StatementExpression MethodInvocation LOG Literal "Save action enabled by " MemberReference debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Save state changed from " MemberReference enabled Literal " to " MemberReference isEnabled debug StatementExpression MethodInvocation MemberReference isEnabled internalSetEnabled	0
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object obj LocalVariableDeclaration ReferenceType ResolvedCritic VariableDeclarator rc IfStatement BinaryOperation || BinaryOperation == MemberReference obj Literal null BinaryOperation instanceof MemberReference obj ReferenceType ResolvedCritic BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference rc Cast ReferenceType ResolvedCritic MemberReference obj = IfStatement BinaryOperation == MemberReference critic Literal null BlockStatement IfStatement BinaryOperation != MemberReference rc critic Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! critic MemberReference rc critic equals BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MemberReference offenders Literal null BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference rc offenders Literal null BlockStatement ReturnStatement Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator offender MemberReference offenders BlockStatement IfStatement BinaryOperation == MemberReference offender Literal null BlockStatement ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator j ForStatement ForControl Assignment MemberReference j Literal 0 = BinaryOperation < MemberReference j MethodInvocation rc.offenders size MemberReference ++ j BlockStatement IfStatement MethodInvocation offender MethodInvocation rc.offenders MemberReference j get equals BlockStatement BreakStatement IfStatement BinaryOperation >= MemberReference j MethodInvocation rc.offenders size BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration BasicType boolean removeElement FormalParameter ReferenceType String mofId LocalVariableDeclaration ReferenceType XmiReference VariableDeclarator xref MethodInvocation objectToId MemberReference mofId remove IfStatement BinaryOperation != MemberReference xref Literal null BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator m MethodInvocation idToObject MethodInvocation xref getSystemId get IfStatement BinaryOperation != MemberReference m Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation m MethodInvocation xref getXmiId remove IfStatement BinaryOperation != MemberReference o Literal null BlockStatement IfStatement MethodInvocation ! mofId Cast ReferenceType RefObject MemberReference o equals BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Internal index inconsistency for mof ID " MemberReference mofId Literal " (got " Cast ReferenceType RefObject MemberReference o error ReturnStatement Literal true StatementExpression MethodInvocation LOG BinaryOperation + Literal "Failed to remove index entries for mof ID " MemberReference mofId debug ReturnStatement Literal false	1
MethodDeclaration Modifier private validateRelation FormalParameter ReferenceType Object relation StatementExpression MethodInvocation MemberReference relation validatePrimaryKey StatementExpression MethodInvocation MemberReference relation validateFkAttributes StatementExpression MethodInvocation MemberReference relation validateAssociations	0
MethodDeclaration Modifier public setShowVisibilities FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation && BinaryOperation == MemberReference showVisibilities MemberReference showem MemberReference showVisibilitiesSet BlockStatement ReturnStatement LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator oldValid MemberReference showVisibilitiesSet LocalVariableDeclaration ReferenceType Memento VariableDeclarator ClassCreator ReferenceType Memento MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showVisibilities MemberReference showem = StatementExpression Assignment MemberReference showVisibilitiesSet Literal true = MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference showVisibilities MemberReference ! showem = StatementExpression Assignment MemberReference showVisibilitiesSet MemberReference oldValid = StatementExpression MethodInvocation MemberReference doUndoable	0
MethodDeclaration Modifier public Annotation Override ReferenceType String getTipString FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item MethodInvocation MethodInvocation me getX MethodInvocation me getY hitClarifier LocalVariableDeclaration ReferenceType String VariableDeclarator tip Literal "" IfStatement BinaryOperation && BinaryOperation != MemberReference item Literal null MethodInvocation Globals MethodInvocation getSelectionManager MethodInvocation This containsFig curEditor BlockStatement StatementExpression Assignment MemberReference tip MethodInvocation item getHeadline = IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference tip MethodInvocation Model MethodInvocation MethodInvocation getOwner getTipString getFacade = CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG Literal "A deleted element still exists on the warn ReturnStatement MethodInvocation Translator Literal "misc.name.deleted" localize BlockStatement StatementExpression Assignment MemberReference tip MethodInvocation toString = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference tip Literal null BinaryOperation > MethodInvocation tip length Literal 0 MethodInvocation ! tip Literal " " endsWith BlockStatement StatementExpression Assignment MemberReference tip Literal " " += ReturnStatement MemberReference tip	0
MethodDeclaration Modifier protected ReferenceType Object getTarget ReturnStatement MemberReference target	0
MethodDeclaration Modifier public ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType SelectionClassifierRole This	0
MethodDeclaration Modifier public setEnumerationLiterals FormalParameter ReferenceType Object enumeration FormalParameter ReferenceType List literals StatementExpression SuperMethodInvocation MemberReference enumeration MemberReference literals setEnumerationLiterals StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public BasicType boolean isAAssociationRole FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationRole	0
MethodDeclaration Modifier public ReferenceType Fig ReturnStatement MemberReference itemFig	0
MethodDeclaration Modifier private ReferenceType JComponent getConfigPanelExtension LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Setting VariableDeclarator settings Literal null LocalVariableDeclaration ReferenceType ImportInterface VariableDeclarator current MethodInvocation getCurrentModule IfStatement BinaryOperation != MemberReference current Literal null BlockStatement StatementExpression Assignment MemberReference settings MethodInvocation current getImportSettings = ReturnStatement ClassCreator ReferenceType MemberReference settings	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_29 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 1080863910568919552L Literal 18014398509481984L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public close StatementExpression MethodInvocation Literal false setVisible	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object flow ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier private FormalParameter ReferenceType NodeCollection TypeArgument ReferenceType StatementNode node FeatureNotSupportedException SwitchStatement MemberReference curtok id SwitchStatementCase MemberReference TokenID LCurly LocalVariableDeclaration ReferenceType BlockStatement VariableDeclarator newBlock ClassCreator ReferenceType BlockStatement StatementExpression MethodInvocation node MemberReference newBlock add StatementExpression MethodInvocation MemberReference newBlock parseBlock BreakStatement SwitchStatementCase MemberReference TokenID Semi StatementExpression MethodInvocation advance StatementExpression MethodInvocation node ClassCreator ReferenceType StatementNode add BreakStatement SwitchStatementCase MemberReference TokenID If StatementExpression MethodInvocation node MethodInvocation parseIf add BreakStatement SwitchStatementCase MemberReference TokenID Switch StatementExpression MethodInvocation node MethodInvocation parseSwitch add BreakStatement SwitchStatementCase MemberReference TokenID While StatementExpression MethodInvocation node MethodInvocation parseWhile add BreakStatement SwitchStatementCase MemberReference TokenID Do StatementExpression MethodInvocation node MethodInvocation parseDo add BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation node MethodInvocation parseFor add BreakStatement SwitchStatementCase MemberReference TokenID Foreach StatementExpression MethodInvocation node MethodInvocation parseForEach add BreakStatement SwitchStatementCase MemberReference TokenID Break StatementExpression MethodInvocation node MethodInvocation parseBreak add BreakStatement SwitchStatementCase MemberReference TokenID Continue StatementExpression MethodInvocation node MethodInvocation parseContinue add BreakStatement SwitchStatementCase MemberReference TokenID Goto StatementExpression MethodInvocation node MethodInvocation parseGoto add BreakStatement SwitchStatementCase MemberReference TokenID Return StatementExpression MethodInvocation node MethodInvocation parseReturn add BreakStatement SwitchStatementCase MemberReference TokenID Throw StatementExpression MethodInvocation node MethodInvocation parseThrow add BreakStatement SwitchStatementCase MemberReference TokenID Try StatementExpression MethodInvocation node MethodInvocation parseTry add BreakStatement SwitchStatementCase MemberReference TokenID Checked StatementExpression MethodInvocation node MethodInvocation parseChecked add BreakStatement SwitchStatementCase MemberReference TokenID Unchecked StatementExpression MethodInvocation node MethodInvocation parseUnchecked add BreakStatement SwitchStatementCase MemberReference TokenID Lock StatementExpression MethodInvocation node MethodInvocation parseLock add BreakStatement SwitchStatementCase MemberReference TokenID Using StatementExpression MethodInvocation node MethodInvocation ParseUsing add BreakStatement SwitchStatementCase MemberReference TokenID Const StatementExpression Assignment MemberReference isLocalConst Literal true = StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase MemberReference TokenID Bool MemberReference TokenID Byte MemberReference TokenID Char MemberReference TokenID Decimal MemberReference TokenID Double MemberReference TokenID Float MemberReference TokenID Int MemberReference TokenID Long MemberReference TokenID Object MemberReference TokenID SByte MemberReference TokenID Short MemberReference TokenID String MemberReference TokenID UInt MemberReference TokenID ULong MemberReference TokenID UShort MemberReference TokenID StringLiteral MemberReference TokenID HexLiteral MemberReference TokenID IntLiteral MemberReference TokenID UIntLiteral MemberReference TokenID LongLiteral MemberReference TokenID ULongLiteral MemberReference TokenID TrueLiteral MemberReference TokenID FalseLiteral MemberReference TokenID NullLiteral MemberReference TokenID LParen MemberReference TokenID DecimalLiteral MemberReference TokenID RealLiteral MemberReference TokenID CharLiteral MemberReference TokenID PlusPlus MemberReference TokenID MinusMinus MemberReference TokenID This MemberReference TokenID Base MemberReference TokenID New LocalVariableDeclaration ReferenceType ExpressionStatement VariableDeclarator enode ClassCreator ReferenceType ExpressionStatement MethodInvocation ParseExpression StatementExpression MethodInvocation node MemberReference enode add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi BlockStatement StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase MemberReference TokenID Ident IfStatement BinaryOperation && BinaryOperation > MethodInvocation tokens size BinaryOperation + MemberReference index Literal 1 BinaryOperation == MethodInvocation tokens MemberReference id MemberReference index get MemberReference TokenID Colon BlockStatement LocalVariableDeclaration ReferenceType LabeledStatement VariableDeclarator lsnode ClassCreator ReferenceType LabeledStatement StatementExpression Assignment MemberReference lsnode Name MethodInvocation parseQualifiedIdentifier = StatementExpression MethodInvocation MemberReference TokenID Colon AssertAndAdvance StatementExpression MethodInvocation MemberReference lsnode Statements StatementExpression MethodInvocation node MemberReference lsnode add BlockStatement LocalVariableDeclaration ReferenceType ExpressionStatement VariableDeclarator inode ClassCreator ReferenceType ExpressionStatement MethodInvocation ParseExpression StatementExpression MethodInvocation node MemberReference inode add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi BlockStatement StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase MemberReference TokenID Unsafe StatementExpression MethodInvocation ParseUnsafeCode BreakStatement SwitchStatementCase StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unhandled case in statement parsing: \"" MemberReference curtok id Literal "\" in line: " MemberReference lineCount println LocalVariableDeclaration ReferenceType ExpressionStatement VariableDeclarator dnode ClassCreator ReferenceType ExpressionStatement MethodInvocation ParseExpression StatementExpression MethodInvocation node MemberReference dnode add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi BlockStatement StatementExpression MethodInvocation advance BreakStatement	1
MethodDeclaration Modifier protected Annotation Override modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged LocalVariableDeclaration BasicType boolean VariableDeclarator damage Literal false IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference mee Literal null MethodInvocation mee MethodInvocation Literal "stereotype" equals getPropertyName MethodInvocation Model MethodInvocation MethodInvocation getOwner getStereotypes MethodInvocation MethodInvocation mee getSource contains getFacade BlockStatement StatementExpression MethodInvocation updateStereotypeText StatementExpression Assignment MemberReference damage Literal true = IfStatement MemberReference damage BlockStatement StatementExpression MethodInvocation damage	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Object o IfStatement MethodInvocation Model MethodInvocation MemberReference o isAStateMachine getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator machine MemberReference o LocalVariableDeclaration ReferenceType Object VariableDeclarator contextNamespace MethodInvocation MemberReference machine getNamespaceFromMachine StatementExpression MethodInvocation MemberReference contextNamespace MemberReference machine setup BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + Literal "Cannot find namespace " Literal "while " Literal	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object t StatementExpression Assignment This MemberReference listTarget MemberReference t =	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Object getAttribute ReturnStatement ClassReference ReferenceType Property	0
MethodDeclaration Modifier private ReferenceType String str2KnowledgeType FormalParameter ReferenceType String token LocalVariableDeclaration ReferenceType String VariableDeclarator knowledge Literal null IfStatement MethodInvocation token Literal "completeness" equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic KT_COMPLETENESS = IfStatement MethodInvocation token Literal "consistency" equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic KT_CONSISTENCY = IfStatement MethodInvocation token Literal "correctness" equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic KT_CORRECTNESS = IfStatement MethodInvocation token Literal "designers" equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic KT_DESIGNERS = IfStatement MethodInvocation token Literal "experiencial" equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic KT_EXPERIENCIAL = IfStatement MethodInvocation token Literal "optimization" equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic KT_OPTIMIZATION = IfStatement MethodInvocation token Literal "organizational" equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic KT_ORGANIZATIONAL = IfStatement MethodInvocation token Literal "presentation" equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic KT_PRESENTATION = IfStatement MethodInvocation token Literal "semantics" equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic KT_SEMANTICS = IfStatement MethodInvocation token Literal "syntax" equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic KT_SYNTAX = IfStatement MethodInvocation token Literal "tool" equals BlockStatement StatementExpression Assignment MemberReference knowledge MemberReference Critic KT_TOOL = ReturnStatement MemberReference knowledge	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigObject VariableDeclarator figClone Cast ReferenceType FigObject SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public BasicType boolean isAChangeEvent FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Attribute FormalParameter ReferenceType Object classifier IfStatement BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType Collection VariableDeclarator result ClassCreator ReferenceType ArrayList TryStatement StatementExpression MethodInvocation result MethodInvocation modelImpl MethodInvocation MemberReference classifier getStructuralFeatures getFacade addAll ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Classifier MemberReference classifier BlockStatement StatementExpression MethodInvocation result MethodInvocation MethodInvocation gen getParent addAll CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	0
MethodDeclaration Modifier public BasicType int indexOf FormalParameter ReferenceType Object arg0 ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getParameter getFacade addElement	0
MethodDeclaration Modifier protected ReferenceType Action getCreateEdgeAction FormalParameter ReferenceType Object metaType LocalVariableDeclaration ReferenceType String VariableDeclarator label MethodInvocation Model MethodInvocation MemberReference metaType getName getMetaTypes ReturnStatement ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal "edgeClass" MemberReference metaType MemberReference label	0
MethodDeclaration Modifier public paintClarifiers FormalParameter ReferenceType Graphics g LocalVariableDeclaration BasicType int VariableDeclarator iconX MethodInvocation getX LocalVariableDeclaration BasicType int VariableDeclarator iconY BinaryOperation - MethodInvocation getY Literal 10 LocalVariableDeclaration ReferenceType ToDoList VariableDeclarator tdList MethodInvocation Designer MethodInvocation getToDoList theDesigner LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation tdList MethodInvocation getOwner elementListForOffender ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation item getClarifier IfStatement BinaryOperation instanceof MemberReference icon ReferenceType Clarifier BlockStatement StatementExpression Cast ReferenceType Clarifier MemberReference icon StatementExpression Cast ReferenceType Clarifier MemberReference icon IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation icon Literal null MemberReference g MemberReference iconX MemberReference iconY paintIcon StatementExpression Assignment MemberReference iconX MethodInvocation icon getIconWidth += StatementExpression Assignment MemberReference items MethodInvocation tdList This elementListForOffender = ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation item getClarifier IfStatement BinaryOperation instanceof MemberReference icon ReferenceType Clarifier BlockStatement StatementExpression Cast ReferenceType Clarifier MemberReference icon StatementExpression Cast ReferenceType Clarifier MemberReference icon IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation icon Literal null MemberReference g MemberReference iconX MemberReference iconY paintIcon StatementExpression Assignment MemberReference iconX MethodInvocation icon getIconWidth +=	1
MethodDeclaration Modifier public ReferenceType XmiWriterEUMLImpl getXmiWriter FormalParameter ReferenceType Object model FormalParameter ReferenceType OutputStream stream FormalParameter ReferenceType String version UmlException ReturnStatement ClassCreator ReferenceType XmiWriterEUMLImpl This MemberReference model MemberReference stream MemberReference version	0
MethodDeclaration Modifier public ReferenceType ProfileConfiguration ReturnStatement MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getProfileConfiguration getManager	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getCreateActions MethodInvocation MemberReference element contains getFacade	0
MethodDeclaration Modifier public static ReferenceType Designer theDesigner ReturnStatement MemberReference	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation && BinaryOperation instanceof MemberReference evt ReferenceType AttributeChangeEvent MethodInvocation MethodInvocation evt getPropertyName equals BlockStatement StatementExpression MethodInvocation Cast ReferenceType String MethodInvocation evt getNewValue updateText	0
MethodDeclaration Modifier private depthFirst FormalParameter ReferenceType Object node FormalParameter ReferenceType ArgoDiagram lastDiagram IfStatement BinaryOperation instanceof MemberReference node ReferenceType ArgoDiagram BlockStatement StatementExpression Assignment MemberReference lastDiagram Cast ReferenceType ArgoDiagram MemberReference node = StatementExpression MethodInvocation diagramResults clear IfStatement MethodInvocation ! pred MemberReference lastDiagram BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iterator MethodInvocation cg MemberReference node childIterator WhileStatement MethodInvocation iterator hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator child MethodInvocation iterator next IfStatement BinaryOperation && MethodInvocation pred MemberReference child evaluate BinaryOperation || BinaryOperation != MemberReference lastDiagram Literal null MethodInvocation pred Literal "" BlockStatement IfStatement MethodInvocation ! diagramResults MemberReference child contains BlockStatement StatementExpression MethodInvocation diagramResults MemberReference child add StatementExpression MethodInvocation results MemberReference child add StatementExpression MethodInvocation diagrams MemberReference lastDiagram add StatementExpression MethodInvocation MemberReference child MemberReference lastDiagram depthFirst	1
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_64 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 96L Literal 6597069766656L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType String getDescription ReturnStatement MemberReference description	0
MethodDeclaration Modifier protected textEditStarted LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MethodInvocation getParsingHelp StatementExpression MethodInvocation MemberReference s showHelp StatementExpression MethodInvocation setText	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal "misc.stimulus.action" localize	0
MethodDeclaration Modifier public setParameters FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection parameters ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public BasicType boolean doCommand FormalParameter ReferenceType String argument StatementExpression MethodInvocation System Literal 0 exit ReturnStatement Literal true	0
MethodDeclaration Modifier private ReferenceType InputStream getDomainMap LocalVariableDeclaration ReferenceType String VariableDeclarator domainMap MethodInvocation Configuration MemberReference MAPPING_KEY getString LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is ClassCreator ReferenceType StringBufferInputStream MemberReference domainMap IfStatement Literal MethodInvocation MemberReference domainMap equals "" BlockStatement TryStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator url MethodInvocation MethodInvocation MemberReference XML_FILE_NAME getResource MethodInvocation toURI MethodInvocation toURL getClass StatementExpression Assignment MemberReference is MethodInvocation url openStream = CatchClause CatchClauseParameter URISyntaxException e StatementExpression MethodInvocation LOG Literal "Could not find domainmapping file" MemberReference e warn CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation LOG Literal "Could not find domainmapping file" MemberReference e warn CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG Literal "Error reading/fetching domain map" MemberReference e warn ReturnStatement MemberReference is	1
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation outCircle MemberReference w setLineWidth	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType LiteralString	0
MethodDeclaration Modifier public BasicType int getChildCount FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MethodInvocation MethodInvocation size getGoalList IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Goal BlockStatement LocalVariableDeclaration ReferenceType Goal VariableDeclarator g Cast ReferenceType Goal MemberReference parent LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator itemList MethodInvocation Designer MethodInvocation getToDoList MethodInvocation theDesigner SynchronizedStatement MemberReference itemList ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference itemList BlockStatement IfStatement MethodInvocation item MethodInvocation MemberReference g supports getPoster BlockStatement StatementExpression MemberReference ++ count ReturnStatement MemberReference count ReturnStatement Literal 0	0
MethodDeclaration Modifier public init StatementExpression MethodInvocation ProfileFacade reset StatementExpression MethodInvocation ProfileFacade ClassCreator ReferenceType org ReferenceType argouml ReferenceType profile ReferenceType internal ReferenceType ProfileManagerImpl LocalVariableDeclaration ReferenceType VariableDeclarator factory ClassCreator ReferenceType ProfilePropPanelFactory StatementExpression MethodInvocation PropPanelFactoryManager MemberReference factory addPropPanelFactory StatementExpression ClassCreator MethodInvocation doLoad ReferenceType ProfileLoader	1
MethodDeclaration Modifier public ReferenceType Generalization buildGeneralization FormalParameter ReferenceType Object child1 FormalParameter ReferenceType Object parent1 IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference child1 ReferenceType GeneralizableElement BinaryOperation instanceof MemberReference parent1 ReferenceType GeneralizableElement BinaryOperation != MemberReference child1 MemberReference parent1 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Both items must be different generalizable elements" LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator child Cast ReferenceType GeneralizableElement MemberReference child1 LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator parent Cast ReferenceType GeneralizableElement MemberReference parent1 ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator gen MethodInvocation parent getGeneralization BlockStatement IfStatement MethodInvocation gen MethodInvocation MemberReference child equals getParent BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Generalization exists" Literal " in direction" IfStatement MethodInvocation parent isLeaf BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "parent is leaf" IfStatement MethodInvocation child isRoot BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "child is root" LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns MethodInvocation child getNamespace IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MemberReference ns Literal null MethodInvocation modelImpl MethodInvocation MemberReference ns isReadOnly getModelManagementHelper BinaryOperation instanceof MemberReference child ReferenceType Namespace BlockStatement StatementExpression Assignment MemberReference ns Cast ReferenceType Namespace MemberReference child = IfStatement BinaryOperation || BinaryOperation == MemberReference ns Literal null MethodInvocation modelImpl MethodInvocation MemberReference ns isReadOnly getModelManagementHelper BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "No valid writeable namespace" LocalVariableDeclaration ReferenceType Generalization VariableDeclarator gen MethodInvocation MethodInvocation ns refOutermostPackage createGeneralization StatementExpression MethodInvocation gen MemberReference parent setParent StatementExpression MethodInvocation gen MemberReference child StatementExpression MethodInvocation gen MemberReference ns setNamespace ReturnStatement MemberReference gen	1
MethodDeclaration Modifier protected Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation calcBounds	0
MethodDeclaration Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType UMLDeploymentDiagram dd LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation dd MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator figIter MethodInvocation figs iterator WhileStatement MethodInvocation figIter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation figIter next IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigNodeModelElement BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNodeModelElement Cast ReferenceType FigNodeModelElement MemberReference obj IfStatement BinaryOperation && BinaryOperation != MemberReference figNodeModelElement Literal null MethodInvocation Model getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator instance MethodInvocation figNodeModelElement getOwner IfStatement BinaryOperation != MemberReference instance Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation Model MethodInvocation MemberReference instance getClassifiers getFacade IfStatement BinaryOperation > MethodInvocation col size Literal 0 BlockStatement ContinueStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference dd add StatementExpression MethodInvocation offs MemberReference figNodeModelElement add ReturnStatement MemberReference offs	1
MethodDeclaration Modifier protected BasicType int getNotationType ReturnStatement MemberReference NotationProviderFactory2 TYPE_ATTRIBUTE	0
MethodDeclaration Modifier public ReferenceType Extend FormalParameter ReferenceType Object abase FormalParameter ReferenceType Object anextension IfStatement BinaryOperation || BinaryOperation instanceof MemberReference abase ReferenceType UseCase BinaryOperation instanceof MemberReference anextension ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType UseCase MemberReference anextension	0
MethodDeclaration Modifier private static BasicType int decodeModifier FormalParameter ReferenceType String modifier IfStatement BinaryOperation || BinaryOperation == MemberReference modifier Literal null BinaryOperation == MethodInvocation modifier length Literal 0 BlockStatement ReturnStatement Literal 0 IfStatement MethodInvocation modifier MemberReference KeyEventUtils CTRL_MODIFIER equals BlockStatement ReturnStatement MemberReference InputEvent CTRL_DOWN_MASK IfStatement MethodInvocation modifier MemberReference KeyEventUtils ALT_MODIFIER equals BlockStatement ReturnStatement MemberReference InputEvent ALT_DOWN_MASK IfStatement MethodInvocation modifier MemberReference KeyEventUtils ALT_GRAPH_MODIFIER equals BlockStatement ReturnStatement MemberReference InputEvent ALT_GRAPH_DOWN_MASK IfStatement MethodInvocation modifier MemberReference KeyEventUtils META_MODIFIER equals BlockStatement ReturnStatement MemberReference InputEvent META_DOWN_MASK IfStatement MethodInvocation modifier MemberReference KeyEventUtils SHIFT_MODIFIER equals BlockStatement ReturnStatement MemberReference InputEvent SHIFT_DOWN_MASK BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Unknown modifier: " MemberReference modifier debug ReturnStatement Literal 0	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType DiagramElement createDiagramElement FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Rectangle bounds LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNode Literal null LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator figEdge Literal null LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation getDiagramSettings IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociationClass getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnds MethodInvocation Model MethodInvocation MemberReference modelElement getConnections MethodInvocation toArray getFacade StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigAssociationClass ClassCreator ReferenceType DiagramEdgeSettings MemberReference modelElement MemberReference ArraySelector Literal 0 associationEnds MemberReference ArraySelector Literal 1 associationEnds MemberReference settings = LocalVariableDeclaration ReferenceType FigNode VariableDeclarator sourceFig MethodInvocation MemberReference ArraySelector Literal 0 associationEnds getFigNodeForAssociationEnd LocalVariableDeclaration ReferenceType FigNode VariableDeclarator destFig MethodInvocation MemberReference ArraySelector Literal 1 associationEnds getFigNodeForAssociationEnd StatementExpression MethodInvocation figEdge MemberReference sourceFig setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference sourceFig setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference destFig setDestFigNode StatementExpression MethodInvocation figEdge MemberReference destFig setDestPortFig IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigAssociationEnd MemberReference modelElement MemberReference settings = StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement getAssociation getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator associationFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MethodInvocation Model MethodInvocation MemberReference modelElement getAssociation getFacade presentationFor getLayer LocalVariableDeclaration ReferenceType FigNode VariableDeclarator classifierFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MethodInvocation Model MethodInvocation MemberReference modelElement getType getFacade presentationFor getLayer StatementExpression MethodInvocation figEdge MemberReference associationFN setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference associationFN setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference classifierFN setDestPortFig StatementExpression MethodInvocation figEdge MemberReference classifierFN setDestFigNode IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociation getFacade MethodInvocation ! Model MethodInvocation MemberReference modelElement isANaryAssociation getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnds MethodInvocation Model MethodInvocation MemberReference modelElement getConnections MethodInvocation toArray getFacade StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigAssociation ClassCreator ReferenceType DiagramEdgeSettings MemberReference modelElement MemberReference ArraySelector Literal 0 associationEnds MemberReference ArraySelector Literal 1 associationEnds MemberReference settings = LocalVariableDeclaration ReferenceType FigNode VariableDeclarator sourceFig MethodInvocation MemberReference ArraySelector Literal 0 associationEnds getFigNodeForAssociationEnd LocalVariableDeclaration ReferenceType FigNode VariableDeclarator destFig MethodInvocation MemberReference ArraySelector Literal 1 associationEnds getFigNodeForAssociationEnd StatementExpression MethodInvocation figEdge MemberReference sourceFig setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference sourceFig setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference destFig setDestFigNode StatementExpression MethodInvocation figEdge MemberReference destFig setDestPortFig IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isALink getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigLink MemberReference modelElement MemberReference settings = LocalVariableDeclaration ReferenceType Collection VariableDeclarator linkEndsColn MethodInvocation Model MethodInvocation MemberReference modelElement getConnections getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator linkEnds MethodInvocation linkEndsColn toArray LocalVariableDeclaration ReferenceType Object VariableDeclarator fromInst MethodInvocation Model MethodInvocation MemberReference ArraySelector Literal 0 linkEnds getInstance getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator toInst MethodInvocation Model MethodInvocation MemberReference ArraySelector Literal 1 linkEnds getInstance getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator fromFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference fromInst presentationFor getLayer LocalVariableDeclaration ReferenceType FigNode VariableDeclarator toFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference toInst presentationFor getLayer StatementExpression MethodInvocation figEdge MemberReference fromFN setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference fromFN setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference toFN setDestPortFig StatementExpression MethodInvocation figEdge MemberReference toFN setDestFigNode StatementExpression MethodInvocation figEdge MethodInvocation MethodInvocation getLayer setLayer getFig IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAGeneralization getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigGeneralization MemberReference modelElement MemberReference settings = LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator client MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator supFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference presentationFor getLayer LocalVariableDeclaration ReferenceType FigNode VariableDeclarator cliFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference client presentationFor getLayer StatementExpression MethodInvocation figEdge MemberReference supFN setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference supFN setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference cliFN setDestFigNode StatementExpression MethodInvocation figEdge MemberReference cliFN setDestPortFig IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isADependency getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAPackageImport getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigPermission MemberReference modelElement MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAUsage getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigUsage MemberReference modelElement MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAbstraction getFacade BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigAbstraction MemberReference modelElement MemberReference settings = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal "" ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade BlockStatement StatementExpression Assignment MemberReference name MethodInvocation Model MethodInvocation MemberReference stereotype getName getFacade = IfStatement MethodInvocation CoreFactory.REALIZE_STEREOTYPE MemberReference name equals BlockStatement BreakStatement IfStatement MethodInvocation CoreFactory.REALIZE_STEREOTYPE MemberReference name equals BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigAbstraction MemberReference modelElement MemberReference settings = BlockStatement StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigDependency MemberReference modelElement MemberReference settings = LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator client MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator supFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference presentationFor getLayer LocalVariableDeclaration ReferenceType FigNode VariableDeclarator cliFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference client presentationFor getLayer StatementExpression MethodInvocation figEdge MemberReference cliFN setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference cliFN setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference supFN setDestPortFig StatementExpression MethodInvocation figEdge MemberReference supFN setDestFigNode StatementExpression MethodInvocation figEdge MethodInvocation MethodInvocation getLayer setLayer getFig IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType CommentEdge BlockStatement LocalVariableDeclaration ReferenceType CommentEdge VariableDeclarator ce Cast ReferenceType CommentEdge MemberReference modelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation ce getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator dest MethodInvocation ce getDestination LocalVariableDeclaration ReferenceType FigNode VariableDeclarator sourceFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference source presentationFor getLayer LocalVariableDeclaration ReferenceType FigNode VariableDeclarator destFN Cast ReferenceType FigNode MethodInvocation MethodInvocation MemberReference dest presentationFor getLayer StatementExpression Assignment MemberReference figEdge ClassCreator ReferenceType FigEdgeNote MemberReference modelElement MemberReference settings = StatementExpression MethodInvocation figEdge MemberReference sourceFN setSourcePortFig StatementExpression MethodInvocation figEdge MemberReference sourceFN setSourceFigNode StatementExpression MethodInvocation figEdge MemberReference destFN setDestPortFig StatementExpression MethodInvocation figEdge MemberReference destFN setDestFigNode StatementExpression MethodInvocation figEdge MethodInvocation MethodInvocation getLayer setLayer getFig IfStatement BinaryOperation != MemberReference figEdge Literal null BlockStatement StatementExpression MethodInvocation figEdge computeRoute ReturnStatement Cast ReferenceType DiagramElement MemberReference figEdge IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociation getFacade BlockStatement StatementExpression Assignment MemberReference figNode MethodInvocation MemberReference modelElement MemberReference bounds MemberReference settings createNaryAssociationNode = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAStereotype getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigStereotypeDeclaration MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAClass getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigClass MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAInterface getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigInterface MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAModel getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigModel MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isASubsystem getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigSubsystem MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigPackage MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComment getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComment MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAEnumeration getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigEnumeration MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isADataType getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigDataType MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAException getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigException MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isASignal getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigSignal MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAActor getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigActor MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAUseCase getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigUseCase MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAObject getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigObject MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAInstanceSpecification getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigObject MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isANodeInstance getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigNodeInstance MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComponentInstance getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComponentInstance MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isANode getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigMNode MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComponent getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComponent MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement BinaryOperation != MemberReference figNode Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Model element " MemberReference modelElement Literal " converted to " MemberReference figNode debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Dropped object NOT added " MemberReference figNode debug ReturnStatement MemberReference figNode	1
MethodDeclaration Modifier public setIcon FormalParameter ReferenceType Icon i IfStatement BinaryOperation != MemberReference i Literal null BlockStatement StatementExpression MethodInvocation imageIconLabel MemberReference i setIcon StatementExpression MethodInvocation imageIconLabel MethodInvocation BorderFactory Literal 0 Literal 2 Literal 0 Literal 2 createEmptyBorder setBorder BlockStatement StatementExpression MethodInvocation imageIconLabel Literal null setIcon StatementExpression MethodInvocation imageIconLabel Literal null setBorder StatementExpression MethodInvocation imageIconLabel invalidate StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint	0
MethodDeclaration Modifier public Annotation Override BasicType boolean getUseTrapRect ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object param FormalParameter ReferenceType String isPointer StatementExpression MethodInvocation MemberReference MemberReference TV_NAME_POINTER MemberReference param MemberReference isPointer applyTaggedValue	0
MethodDeclaration Modifier public BasicType boolean subsumes FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType AttributesNode	0
MethodDeclaration Modifier private doUndoable FormalParameter ReferenceType Memento StatementExpression MethodInvocation redo	1
MethodDeclaration Modifier public BasicType boolean isEnabled LocalVariableDeclaration BasicType boolean VariableDeclarator result Literal true LocalVariableDeclaration ReferenceType Object VariableDeclarator commonValue Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation iterator getInstance WhileStatement BinaryOperation && MethodInvocation i hasNext MemberReference result BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation i next TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation MemberReference t valueOfTarget IfStatement MemberReference first BlockStatement StatementExpression Assignment MemberReference commonValue MemberReference value = StatementExpression Assignment MemberReference first Literal false = StatementExpression Assignment MemberReference result MethodInvocation commonValue MemberReference value equals &= CatchClause CatchClauseParameter IllegalArgumentException e StatementExpression Assignment MemberReference result Literal false = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Object getCurModel ReturnStatement MemberReference curModel	0
MethodDeclaration Modifier public Annotation Override BasicType float StatementExpression MethodInvocation MethodInvocation getWeight ReturnStatement MethodInvocation getWeight	0
MethodDeclaration Modifier public BasicType boolean isASynchCallMessage FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Message VariableDeclarator m Cast ReferenceType Message MemberReference handle ReturnStatement BinaryOperation == MethodInvocation m MemberReference MessageSort SYNCH_CALL_LITERAL	0
MethodDeclaration Modifier public add FormalParameter ReferenceType LayoutedObject object StatementExpression MethodInvocation objects MemberReference object add	0
MethodDeclaration Modifier public ReferenceType Iterator childIterator FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType List VariableDeclarator res ClassCreator ReferenceType ArrayList IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Project BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p Cast ReferenceType Project MemberReference parent StatementExpression MethodInvocation res MethodInvocation p getUserDefinedModelList addAll StatementExpression MethodInvocation res MethodInvocation p getDiagramList addAll IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ArgoDiagram BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator d Cast ReferenceType ArgoDiagram MemberReference parent StatementExpression MethodInvocation res MethodInvocation d MethodInvocation getNodes getGraphModel addAll StatementExpression MethodInvocation res MethodInvocation d MethodInvocation getEdges getGraphModel addAll IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement StatementExpression MethodInvocation res MethodInvocation Model MethodInvocation MemberReference parent getModelElementContents getFacade addAll ReturnStatement MethodInvocation res iterator	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAPseudostate getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dm getKind getFacade IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getChoice getPseudostateKind equals BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getJunction getPseudostateKind equals BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isAState getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAFinalState getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator stateMachine MethodInvocation Model MethodInvocation MemberReference dm getStateMachine getFacade IfStatement BinaryOperation == MemberReference stateMachine Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement BinaryOperation && BinaryOperation != MemberReference stateMachine Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference stateMachine getTop getFacade MemberReference dm BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator outgoing MethodInvocation Model MethodInvocation MemberReference dm getOutgoings getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference outgoing Literal null BinaryOperation > MethodInvocation outgoing size Literal 0 BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isACompositeState getFacade BlockStatement ReturnStatement MemberReference PROBLEM_FOUND LocalVariableDeclaration ReferenceType Collection VariableDeclarator transitions MethodInvocation Model MethodInvocation MemberReference stateMachine getTransitions getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator t MemberReference transitions BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sourceState MethodInvocation Model MethodInvocation MemberReference t getSource getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator targetState MethodInvocation Model MethodInvocation MemberReference t getTarget getFacade IfStatement BinaryOperation && MethodInvocation MemberReference sourceState MemberReference dm isSomeSubvertexOf MethodInvocation ! MemberReference targetState MemberReference dm isSomeSubvertexOf BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	1
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color c StatementExpression MethodInvocation cover MemberReference c setLineColor	0
MethodDeclaration Modifier public BasicType int skipTemplateQualifiers FormalParameter BasicType int kInOut TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator k BinaryOperation + MemberReference kInOut Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator value WhileStatement BinaryOperation != MethodInvocation MethodInvocation getType MemberReference k LT MemberReference GREATERTHAN BlockStatement SwitchStatement MethodInvocation MethodInvocation getType MemberReference k LT SwitchStatementCase EOF ReturnStatement MemberReference kInOut SwitchStatementCase LESSTHAN StatementExpression Assignment MemberReference value MethodInvocation MemberReference k skipTemplateQualifiers = IfStatement BinaryOperation == MemberReference value MemberReference k BlockStatement ReturnStatement MemberReference kInOut StatementExpression Assignment MemberReference k MemberReference value = BreakStatement SwitchStatementCase LPAREN StatementExpression Assignment MemberReference value MethodInvocation MemberReference k skipNestedParens = IfStatement BinaryOperation == MemberReference value MemberReference k BlockStatement ReturnStatement MemberReference kInOut StatementExpression Assignment MemberReference k MemberReference value = BreakStatement SwitchStatementCase StatementExpression MemberReference ++ k BreakStatement IfStatement BinaryOperation > MemberReference k MemberReference CPPvariables MAX_TEMPLATE_TOKEN_SCAN BlockStatement ReturnStatement MemberReference kInOut StatementExpression Assignment MemberReference kInOut BinaryOperation + MemberReference k Literal 1 = ReturnStatement MemberReference kInOut	1
MethodDeclaration Modifier public Annotation Override initialiseListener FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference modelElement ArrayCreator ReferenceType String ArrayInitializer Literal "entry" Literal "name" Literal "remove" addElementListener LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference modelElement getEntry getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference isACallAction getFacade BlockStatement StatementExpression MethodInvocation MemberReference Literal "operation" addElementListener LocalVariableDeclaration ReferenceType Object VariableDeclarator operation MethodInvocation Model MethodInvocation MemberReference getOperation getFacade IfStatement BinaryOperation != MemberReference operation Literal null BlockStatement StatementExpression MethodInvocation MemberReference operation ArrayCreator ReferenceType String ArrayInitializer Literal "owner" Literal "name" addElementListener LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation Model MethodInvocation MemberReference operation getOwner getFacade StatementExpression MethodInvocation MemberReference classifier Literal "name" addElementListener	0
MethodDeclaration Modifier protected handlePriority FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator prio MethodInvocation MethodInvocation trim MethodInvocation e getText decode LocalVariableDeclaration BasicType int VariableDeclarator TryStatement StatementExpression Assignment MemberReference MethodInvocation Integer MemberReference prio parseInt = CatchClause CatchClauseParameter NumberFormatException nfe StatementExpression Assignment MemberReference MemberReference ToDoItem HIGH_PRIORITY = IfStatement MethodInvocation MemberReference prio equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference MemberReference ToDoItem HIGH_PRIORITY = IfStatement MethodInvocation MemberReference prio equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference MemberReference ToDoItem MED_PRIORITY = IfStatement MethodInvocation MemberReference prio equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference MemberReference ToDoItem LOW_PRIORITY = StatementExpression Assignment MemberReference priority MemberReference =	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAPseudostate getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dm getKind getFacade IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getChoice getPseudostateKind equals BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getJunction getPseudostateKind equals BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation k MethodInvocation Model MethodInvocation getInitial getPseudostateKind equals BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isAState getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator sm MethodInvocation Model MethodInvocation MemberReference dm getStateMachine getStateMachinesHelper IfStatement BinaryOperation && BinaryOperation != MemberReference sm Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference sm getTop getFacade MemberReference dm BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator incoming MethodInvocation Model MethodInvocation MemberReference dm getIncomings getFacade IfStatement BinaryOperation > MethodInvocation incoming size Literal 0 BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isACompositeState getFacade BlockStatement ReturnStatement MemberReference PROBLEM_FOUND LocalVariableDeclaration ReferenceType Collection VariableDeclarator transitions MethodInvocation Model MethodInvocation MemberReference sm getTransitions getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator t MemberReference transitions BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sourceState MethodInvocation Model MethodInvocation MemberReference t getSource getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator targetState MethodInvocation Model MethodInvocation MemberReference t getTarget getFacade IfStatement BinaryOperation && MethodInvocation ! MemberReference sourceState MemberReference dm isSomeSubvertexOf MethodInvocation MemberReference targetState MemberReference dm isSomeSubvertexOf BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	1
MethodDeclaration BasicType int getBottomMargin ReturnStatement MemberReference MARGIN	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getActivityGraph getFacade MemberReference element	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String n StatementExpression Assignment MemberReference name MemberReference n =	0
MethodDeclaration Modifier protected ReferenceType Collection getOptions FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MemberReference options	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object argument IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation instanceof MemberReference argument ReferenceType BlockStatement TryStatement StatementExpression Cast ReferenceType Action MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public ReferenceType DestroyAction LocalVariableDeclaration ReferenceType DestroyAction VariableDeclarator myDestroyAction MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference myDestroyAction ReturnStatement MemberReference myDestroyAction	0
MethodDeclaration Modifier public addImport FormalParameter ReferenceType String name StatementExpression MethodInvocation MemberReference name Literal false addImport	0
MethodDeclaration Modifier public static removePropPanelFactory FormalParameter ReferenceType factory StatementExpression MethodInvocation MemberReference factory remove	1
MethodDeclaration Modifier public final relational_expression RecognitionException TokenStreamException StatementExpression MethodInvocation shift_expression BlockStatement DoStatement _loop381 Literal true BlockStatement IfStatement BinaryOperation && MethodInvocation _tokenSet_64 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_42 MethodInvocation Literal 2 LA member BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LESSTHAN BlockStatement StatementExpression MethodInvocation MemberReference LESSTHAN match BreakStatement SwitchStatementCase GREATERTHAN BlockStatement StatementExpression MethodInvocation MemberReference GREATERTHAN match BreakStatement SwitchStatementCase LESSTHANOREQUALTO BlockStatement StatementExpression MethodInvocation MemberReference LESSTHANOREQUALTO match BreakStatement SwitchStatementCase GREATERTHANOREQUALTO BlockStatement StatementExpression MethodInvocation MemberReference GREATERTHANOREQUALTO match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation shift_expression BlockStatement BreakStatement _loop381	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference target isAParameter getFacade BlockStatement StatementExpression Assignment MemberReference target MethodInvocation Model MethodInvocation MemberReference target getModelElementContainer getFacade = IfStatement BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Project VariableDeclarator currentProject MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator paramType MethodInvocation currentProject StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation Model MethodInvocation MemberReference target MemberReference paramType getCoreFactory setTarget getInstance	0
MethodDeclaration Modifier protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds IfStatement BinaryOperation > MemberReference w MemberReference h BlockStatement StatementExpression Assignment MemberReference h MemberReference HEIGHT = BlockStatement StatementExpression Assignment MemberReference w MemberReference HEIGHT = StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation head MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation StatementExpression MethodInvocation Literal "bounds" MemberReference oldBounds MethodInvocation getBounds	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Deprecated setShowMultiplicity FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf setShowMultiplicity	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal "datatype"	0
MethodDeclaration Modifier public ReferenceType String toString LocalVariableDeclaration ReferenceType String VariableDeclarator tit MethodInvocation getTitle ReturnStatement TernaryExpression BinaryOperation == MemberReference tit Literal null Literal "(no name)" MemberReference tit	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object context ReturnStatement MethodInvocation impl MemberReference context	0
MethodDeclaration Modifier private initFigs StatementExpression MethodInvocation Literal false StatementExpression Assignment MemberReference head ClassCreator ReferenceType FigRect MemberReference X MemberReference MemberReference STATE_WIDTH MemberReference HEIGHT MemberReference LINE_COLOR MemberReference SOLID_FILL_COLOR = StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference head addFig StatementExpression MethodInvocation Literal false setBlinkPorts	0
MethodDeclaration Modifier public ReferenceType Stereotype buildStereotype FormalParameter ReferenceType Object element FormalParameter ReferenceType Object name FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereo MethodInvocation Cast ReferenceType String MemberReference name Cast ReferenceType Namespace MemberReference namespace buildStereotype ReturnStatement MemberReference stereo	1
MethodDeclaration Modifier public FormalParameter ReferenceType ConstraintChangeListener ccl StatementExpression MethodInvocation theMEllListeners ClassReference ReferenceType ConstraintChangeListener MemberReference ccl add	0
MethodDeclaration Modifier protected ReferenceType Action getActionAggregation IfStatement BinaryOperation == MemberReference actionAggregation Literal null BlockStatement StatementExpression Assignment MemberReference actionAggregation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getAggregate getAggregationKind Literal false Literal "button.new-aggregation" = ReturnStatement MemberReference actionAggregation	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_6 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 548409888L Literal 18014398509481984L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public final asm_block RecognitionException TokenStreamException BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL__asm BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__asm match BreakStatement SwitchStatementCase LITERAL___asm BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___asm match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference LCURLY match BlockStatement DoStatement _loop344 Literal true BlockStatement IfStatement MethodInvocation _tokenSet_63 MethodInvocation Literal 1 LA member BlockStatement StatementExpression MethodInvocation MemberReference RCURLY matchNot BlockStatement BreakStatement _loop344 StatementExpression MethodInvocation MemberReference RCURLY match	1
MethodDeclaration Modifier private doUndoable FormalParameter ReferenceType Memento IfStatement MethodInvocation UndoManager MethodInvocation isGenerateMementos getInstance BlockStatement StatementExpression MethodInvocation UndoManager MethodInvocation MemberReference addMemento getInstance StatementExpression MethodInvocation redo StatementExpression MethodInvocation project Literal true setDirty	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigSynchState VariableDeclarator figClone Cast ReferenceType FigSynchState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone head Cast ReferenceType FigCircle MethodInvocation it next = StatementExpression Assignment MemberReference figClone bound Cast ReferenceType FigText MethodInvocation it next = ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public BasicType boolean isATaggedValue FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue	0
MethodDeclaration Modifier public FormalParameter ReferenceType TableDefinition referencesTable StatementExpression Assignment This MemberReference referencesTable MemberReference referencesTable =	0
MethodDeclaration Modifier public Annotation Override ReferenceType Point getClosestPoint FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds LocalVariableDeclaration BasicType int VariableDeclarator xs ArrayInitializer MemberReference r x BinaryOperation - BinaryOperation + MemberReference r x MemberReference r width MemberReference dogear BinaryOperation + MemberReference r x MemberReference r width BinaryOperation + MemberReference r x MemberReference r width MemberReference r x MemberReference r x LocalVariableDeclaration BasicType int VariableDeclarator ys ArrayInitializer MemberReference r y MemberReference r y BinaryOperation + MemberReference r y MemberReference dogear BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference r height MemberReference r y LocalVariableDeclaration ReferenceType Point VariableDeclarator p MethodInvocation Geometry MemberReference xs MemberReference ys Literal 6 MemberReference anotherPt ptClosestTo ReturnStatement MemberReference p	1
MethodDeclaration Modifier private ReferenceType String generateTaggedValue FormalParameter ReferenceType Object tv IfStatement BinaryOperation == MemberReference tv Literal null BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MethodInvocation Model MethodInvocation MemberReference tv getValueOfTag getFacade generateUninterpreted IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference s Literal null BinaryOperation == MethodInvocation s length Literal 0 MethodInvocation s Literal "/** */" equals BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation Model MethodInvocation MemberReference tv getTagOfTag getFacade IfStatement MethodInvocation Argo.DOCUMENTATION_TAG MemberReference t equals BlockStatement ReturnStatement Literal "" ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation MemberReference t generateName Literal "=" MemberReference s	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Project BlockStatement ReturnStatement Cast ReferenceType Project MemberReference parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	1
MethodDeclaration Modifier public final type_name RecognitionException TokenStreamException StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation abstract_declarator	1
MethodDeclaration Modifier protected fireTreeNodesChanged FormalParameter Modifier final ReferenceType Object source FormalParameter Modifier final ReferenceType Object path FormalParameter Modifier final BasicType int FormalParameter Modifier final ReferenceType Object children LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList LocalVariableDeclaration ReferenceType TreeModelEvent VariableDeclarator e Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType BlockStatement IfStatement BinaryOperation == MemberReference e Literal null BlockStatement StatementExpression Assignment MemberReference e ClassCreator ReferenceType TreeModelEvent MemberReference source MemberReference path MemberReference MemberReference children = StatementExpression Cast ReferenceType MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners	0
MethodDeclaration Modifier public static ReferenceType String generateStereotype FormalParameter ReferenceType Object st FormalParameter BasicType boolean useGuillemets IfStatement BinaryOperation == MemberReference st Literal null BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation instanceof MemberReference st ReferenceType String BlockStatement ReturnStatement MethodInvocation Cast ReferenceType String MemberReference st MemberReference useGuillemets formatStereotype IfStatement MethodInvocation Model MethodInvocation MemberReference st isAStereotype getFacade BlockStatement ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference st getName getFacade MemberReference useGuillemets formatStereotype IfStatement MethodInvocation Model MethodInvocation MemberReference st isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference st MethodInvocation Model MethodInvocation MemberReference st getStereotypes getFacade = IfStatement BinaryOperation instanceof MemberReference st ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator result Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereotype Cast ReferenceType Collection MemberReference st BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference stereotype getName getFacade IfStatement MemberReference ! found BlockStatement StatementExpression Assignment MemberReference result MemberReference name = StatementExpression Assignment MemberReference found Literal true = BlockStatement StatementExpression Assignment MemberReference result MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MemberReference result MemberReference name localize = IfStatement MemberReference found BlockStatement ReturnStatement MethodInvocation MemberReference result MemberReference useGuillemets formatStereotype ReturnStatement Literal ""	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Collaboration BlockStatement ReturnStatement Cast ReferenceType Collaboration MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public static ReferenceType GridBagConstraints captionConstraints FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int width FormalParameter BasicType int height ReturnStatement MethodInvocation MemberReference x MemberReference y MemberReference width MemberReference height MemberReference RIGHT captionConstraints	0
MethodDeclaration Modifier public ReferenceType String getFullName ReturnStatement BinaryOperation + BinaryOperation + MemberReference basePath MethodInvocation System Literal "file.separator" getProperty MemberReference name	0
MethodDeclaration Modifier private deepUpdateFontRecursive FormalParameter ReferenceType Font f FormalParameter ReferenceType Object pathFig IfStatement BinaryOperation instanceof MemberReference pathFig ReferenceType ArgoFigText BlockStatement StatementExpression Cast ReferenceType ArgoFigText MemberReference pathFig IfStatement BinaryOperation instanceof MemberReference pathFig ReferenceType FigText BlockStatement StatementExpression Cast ReferenceType FigText MemberReference pathFig IfStatement BinaryOperation instanceof MemberReference pathFig ReferenceType FigGroup BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fge Cast ReferenceType FigGroup MemberReference pathFig BlockStatement StatementExpression MethodInvocation MemberReference f MemberReference fge deepUpdateFontRecursive	1
MethodDeclaration Modifier public FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Editor VariableDeclarator editor MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType ModeManager VariableDeclarator modeMgr MethodInvocation editor getModeManager LocalVariableDeclaration ReferenceType FigModifyingMode VariableDeclarator fMode MethodInvocation modeMgr top IfStatement BinaryOperation instanceof MemberReference fMode ReferenceType ModeCreatePolyEdge BlockStatement StatementExpression Assignment MemberReference armed Literal true = StatementExpression SuperMethodInvocation MemberReference me	0
MethodDeclaration Modifier protected Annotation Override updateLayout FormalParameter ReferenceType UmlChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee updateLayout IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation mee getSource MethodInvocation getOwner BinaryOperation instanceof MemberReference mee ReferenceType RemoveAssociationEvent Literal MethodInvocation MethodInvocation mee getPropertyName equals "connection" BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getOwner getConnections MethodInvocation size getFacade Literal 2 BlockStatement StatementExpression MethodInvocation reduceToBinary	0
MethodDeclaration Modifier public FormalParameter BasicType int anOffset StatementExpression Assignment MemberReference offset MemberReference anOffset =	0
MethodDeclaration Modifier protected ReferenceType Rectangle FormalParameter Modifier final BasicType int x FormalParameter Modifier final BasicType int y FormalParameter Modifier final BasicType int w FormalParameter Modifier final BasicType int h ReturnStatement ClassCreator ReferenceType Rectangle BinaryOperation + MemberReference x MethodInvocation getLineWidth BinaryOperation + MemberReference y MethodInvocation getLineWidth BinaryOperation - MemberReference w BinaryOperation * Literal 2 MethodInvocation getLineWidth BinaryOperation - MemberReference h BinaryOperation * Literal 2 MethodInvocation getLineWidth	0
MethodDeclaration Modifier public ReferenceType Collection getAssociations FormalParameter ReferenceType Object classifier ReturnStatement MethodInvocation impl MemberReference classifier getAssociations	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference getCppStereotypeInModel	0
MethodDeclaration Modifier private static ReferenceType NotationSettings initializeDefaultSettings LocalVariableDeclaration ReferenceType NotationSettings VariableDeclarator settings ClassCreator ReferenceType NotationSettings StatementExpression Assignment MemberReference settings parent Literal null = StatementExpression MethodInvocation settings MemberReference Notation DEFAULT_NOTATION setNotationLanguage StatementExpression MethodInvocation settings Literal false setFullyHandleStereotypes StatementExpression MethodInvocation settings Literal true setShowAssociationNames StatementExpression MethodInvocation settings Literal false setShowInitialValues StatementExpression MethodInvocation settings Literal false setShowMultiplicities StatementExpression MethodInvocation settings Literal false setShowPaths StatementExpression MethodInvocation settings Literal false setShowProperties StatementExpression MethodInvocation settings Literal true setShowSingularMultiplicities StatementExpression MethodInvocation settings Literal true setShowTypes StatementExpression MethodInvocation settings Literal false setShowVisibilities StatementExpression MethodInvocation settings Literal false setUseGuillemets ReturnStatement MemberReference settings	0
MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MethodInvocation getTarget getContents getFacade addAll ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType Object getChecked FormalParameter ReferenceType lang LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation languages MemberReference lang indexOf IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement ReturnStatement MethodInvocation Collections emptySet ReturnStatement MemberReference ArraySelector MemberReference index checked	0
MethodDeclaration deleteTemplateParameter FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType TemplateParameter BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier public ReferenceType Collection getTargetFlows FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public BasicType boolean isALink FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Link	0
MethodDeclaration Modifier public addText FormalParameter ReferenceType String t StatementExpression Assignment MemberReference text MethodInvocation text MemberReference t append =	0
MethodDeclaration Modifier public static ReferenceType List TypeArgument ReferenceType Critic getCriticList ReturnStatement MemberReference critics	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation cover getFillColor	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator subs MethodInvocation Model MethodInvocation MemberReference dm getOwnedElements getFacade LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator classes ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator me MemberReference subs BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference me isAClass getFacade BlockStatement StatementExpression MethodInvocation classes MemberReference me add IfStatement BinaryOperation <= MethodInvocation classes size MethodInvocation getThreshold BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	1
MethodDeclaration Modifier public static ReferenceType ActionImportFromSources getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation explanation Literal false setEnabled	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ausecase LocalVariableDeclaration ReferenceType UseCase VariableDeclarator uc Cast ReferenceType UseCase MemberReference ausecase LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet TryStatement StatementExpression MethodInvocation set MethodInvocation modelImpl MethodInvocation MemberReference uc getAllSurroundingNamespaces getModelManagementHelper addAll LocalVariableDeclaration ReferenceType Set VariableDeclarator set2 ClassCreator ReferenceType HashSet ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference set BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference o ReferenceType BinaryOperation instanceof MemberReference o ReferenceType UmlClass BlockStatement StatementExpression MethodInvocation set2 MemberReference o add ReturnStatement MemberReference set2 CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public removeLiteral FormalParameter ReferenceType Object enumeration FormalParameter ReferenceType Object literal StatementExpression MethodInvocation MemberReference enumeration MemberReference literal removeOwnedElement	0
MethodDeclaration Modifier public ReferenceType String getDescription IfStatement BinaryOperation == MemberReference cachedExpandedDescription Literal null BlockStatement StatementExpression Assignment MemberReference cachedExpandedDescription MethodInvocation thePoster MemberReference MemberReference theOffenders expand = ReturnStatement MemberReference cachedExpandedDescription	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter Modifier final ReferenceType Object element FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types getOptions	0
MethodDeclaration Modifier private ReferenceType Object illegalArgumentObject FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg illegalArgument ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression SuperMethodInvocation Literal false setFilled	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType Collection getAllPossibleImports FormalParameter ReferenceType Object pack ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType String ToString LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i This MethodInvocation size MemberReference ++ i BlockStatement StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + BinaryOperation + MemberReference i Literal "\t" This MethodInvocation MemberReference i get MethodInvocation toString Literal "\n" append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration deleteElementResidence FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ElementResidence BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier public static ReferenceType Action getApplyStereotypeActions FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType Set VariableDeclarator availableStereotypes MethodInvocation MemberReference modelElement getAvailableStereotypes IfStatement MethodInvocation ! availableStereotypes isEmpty BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator menuActions ArrayCreator ReferenceType Action MethodInvocation availableStereotypes size LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation availableStereotypes iterator ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 MethodInvocation it hasNext MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i menuActions ClassCreator ReferenceType ActionAddStereotype MemberReference modelElement MethodInvocation it next = ReturnStatement MemberReference menuActions ReturnStatement ArrayCreator ReferenceType Action Literal 0	0
MethodDeclaration Modifier public ReferenceType Project doLoad FormalParameter ReferenceType File file OpenException InterruptedException StatementExpression MethodInvocation LOG Literal "Loading with XMIFilePersister" info TryStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectFactory MethodInvocation createProject getInstance LocalVariableDeclaration BasicType long VariableDeclarator length MethodInvocation file length LocalVariableDeclaration BasicType long VariableDeclarator phaseSpace Literal 100000 LocalVariableDeclaration BasicType int VariableDeclarator phases Cast BasicType int BinaryOperation / MemberReference length MemberReference phaseSpace IfStatement BinaryOperation < MemberReference phases Literal 10 BlockStatement StatementExpression Assignment MemberReference phaseSpace BinaryOperation / MemberReference length Literal 10 = StatementExpression Assignment MemberReference phases Literal 10 = StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "File length is " MemberReference length Literal " phase space is " MemberReference phaseSpace Literal " phases is " MemberReference phases info LocalVariableDeclaration ReferenceType ProgressMgr VariableDeclarator progressMgr ClassCreator ReferenceType ProgressMgr StatementExpression MethodInvocation progressMgr MemberReference phases setNumberOfPhases StatementExpression MethodInvocation ThreadUtils checkIfInterrupted LocalVariableDeclaration ReferenceType InputSource VariableDeclarator source ClassCreator ReferenceType InputSource ClassCreator ReferenceType XmiInputStream MethodInvocation file MethodInvocation toURL MethodInvocation openStream toURI This MemberReference phaseSpace MemberReference progressMgr StatementExpression MethodInvocation source MethodInvocation file MethodInvocation toURL MethodInvocation toString toURI setSystemId LocalVariableDeclaration ReferenceType ModelMemberFilePersister VariableDeclarator modelPersister ClassCreator ReferenceType ModelMemberFilePersister StatementExpression MethodInvocation modelPersister MemberReference source readModels LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation modelPersister getCurModel StatementExpression MethodInvocation progressMgr nextPhase StatementExpression MethodInvocation Model MethodInvocation MemberReference model addListenersToModel getUmlHelper StatementExpression MethodInvocation p MethodInvocation modelPersister getUUIDRefs setUUIDRefs StatementExpression MethodInvocation p MemberReference model addMember StatementExpression MethodInvocation MemberReference p parseXmiExtensions StatementExpression MethodInvocation modelPersister MemberReference p registerDiagrams StatementExpression MethodInvocation p MemberReference model setRoot StatementExpression MethodInvocation p MethodInvocation modelPersister getElementsRead setRoots StatementExpression MethodInvocation p updateRoots LocalVariableDeclaration ReferenceType File VariableDeclarator defaultProjectFile ClassCreator ReferenceType File BinaryOperation + MethodInvocation file getPath Literal ".zargo" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 99 MemberReference ++ i BlockStatement IfStatement MethodInvocation ! defaultProjectFile exists BlockStatement BreakStatement StatementExpression Assignment MemberReference defaultProjectFile ClassCreator ReferenceType File BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation file getPath Literal "." MemberReference i Literal ".zargo" = StatementExpression MethodInvocation PersistenceManager MethodInvocation MethodInvocation defaultProjectFile toURI MemberReference p setProjectURI getInstance StatementExpression MethodInvocation progressMgr nextPhase StatementExpression MethodInvocation ProjectManager MethodInvocation Literal false setSaveEnabled getManager ReturnStatement MemberReference p CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getSource IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getOwner getSource getStateMachinesHelper ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isATransition getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation col MethodInvocation Model MethodInvocation MemberReference parent getTarget getFacade add ReturnStatement MemberReference col ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object tabValues StatementExpression MethodInvocation impl MemberReference handle MemberReference tabValues	0
MethodDeclaration Modifier private updateStrategies ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator profile MemberReference profiles BlockStatement StatementExpression MethodInvocation MemberReference profile activateFormatingStrategy StatementExpression MethodInvocation MemberReference profile activateDefaultTypeStrategy	0
MethodDeclaration deleteAssociationEndRole FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType AssociationEndRole BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public synchronized ReferenceType ProjectMember toArray LocalVariableDeclaration ReferenceType ProjectMember VariableDeclarator temp ArrayCreator ReferenceType ProjectMember MethodInvocation size LocalVariableDeclaration BasicType int VariableDeclarator pos Literal 0 IfStatement BinaryOperation != MemberReference model Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ pos temp MemberReference model = ForStatement EnhancedForControl VariableDeclaration ReferenceType ProjectMemberDiagram VariableDeclarator d MemberReference diagramMembers BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ pos temp MemberReference d = IfStatement BinaryOperation != MemberReference todoList Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ pos temp MemberReference todoList = IfStatement BinaryOperation != MemberReference profileConfiguration Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ pos temp MemberReference profileConfiguration = ReturnStatement MemberReference temp	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object addedTargets IfStatement BinaryOperation < MemberReference addedTargets length Literal 1 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator targets ClassCreator ReferenceType HashSet ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator t MemberReference addedTargets BlockStatement IfStatement BinaryOperation instanceof MemberReference t ReferenceType Fig BlockStatement StatementExpression MethodInvocation targets Cast ReferenceType Fig MemberReference t add BlockStatement StatementExpression MethodInvocation targets MemberReference t add StatementExpression MethodInvocation MemberReference t selectVisible LocalVariableDeclaration BasicType int VariableDeclarator selectedRows MethodInvocation getSelectionRows IfStatement BinaryOperation && BinaryOperation != MemberReference selectedRows Literal null BinaryOperation > MemberReference selectedRows length Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference ArraySelector Literal 0 selectedRows getPathForRow makeVisible StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 selectedRows scrollRowToVisible	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ep MethodInvocation Model MethodInvocation MemberReference target getUseCasesFactory StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference ep setTarget getInstance	0
MethodDeclaration Modifier public BasicType int getIndexOfNamedTab FormalParameter ReferenceType String ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation tabPanels size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator title MethodInvocation tabs MemberReference i getTitleAt IfStatement BinaryOperation && BinaryOperation != MemberReference title Literal null MethodInvocation title MemberReference equals BlockStatement ReturnStatement MemberReference i ReturnStatement Literal - 1	0
MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation setTarget	0
MethodDeclaration Modifier private initializeSimpleState StatementExpression Assignment MemberReference cover ClassCreator ReferenceType MethodInvocation getInitialX MethodInvocation getInitialY MethodInvocation getInitialWidth MethodInvocation getInitialHeight MemberReference LINE_COLOR MemberReference FILL_COLOR = StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getBigPort StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine MethodInvocation getInitialX BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getInitialY Literal 2 MethodInvocation MethodInvocation getBounds MemberReference height getNameFig Literal 1 BinaryOperation - MethodInvocation getInitialWidth Literal 1 BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getInitialY Literal 2 MethodInvocation MethodInvocation getBounds MemberReference height getNameFig Literal 1 MemberReference LINE_COLOR = StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference cover addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MethodInvocation getInternal addFig LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds StatementExpression MethodInvocation MemberReference r x MemberReference r y MemberReference r width MemberReference r height setBounds	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation == MethodInvocation e getSource MethodInvocation getOkButton BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path Literal null LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator fileNames ArrayCreator ReferenceType List MethodInvocation languages size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation languages size MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i fileNames ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String = LocalVariableDeclaration ReferenceType VariableDeclarator language MethodInvocation languages MemberReference i get LocalVariableDeclaration ReferenceType VariableDeclarator genMan MethodInvocation getInstance LocalVariableDeclaration ReferenceType CodeGenerator VariableDeclarator generator MethodInvocation genMan MemberReference language LocalVariableDeclaration ReferenceType Set VariableDeclarator nodes MethodInvocation MemberReference language getChecked IfStatement MemberReference ! isPathInModel BlockStatement StatementExpression Assignment MemberReference path Cast ReferenceType String MethodInvocation outputDirectoryComboBox MethodInvocation getSelectedItem getModel = IfStatement BinaryOperation != MemberReference path Literal null BlockStatement StatementExpression Assignment MemberReference path MethodInvocation path trim = IfStatement BinaryOperation > MethodInvocation path length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator files MethodInvocation generator MemberReference nodes MemberReference path Literal false generateFiles ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator filename MemberReference files BlockStatement StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation BinaryOperation + BinaryOperation + MemberReference path MemberReference CodeGenerator FILE_SEPARATOR MemberReference filename add fileNames BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator nodesPerPath ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Set TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator node MemberReference nodes BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference node isAClassifier getFacade BlockStatement ContinueStatement StatementExpression Assignment MemberReference path MethodInvocation MemberReference node getCodePath = IfStatement BinaryOperation == MemberReference path Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MemberReference node getNamespace getFacade WhileStatement BinaryOperation != MemberReference parent Literal null BlockStatement StatementExpression Assignment MemberReference path MethodInvocation MemberReference parent getCodePath = IfStatement BinaryOperation != MemberReference path Literal null BlockStatement BreakStatement StatementExpression Assignment MemberReference parent MethodInvocation Model MethodInvocation MemberReference parent getNamespace getFacade = IfStatement BinaryOperation != MemberReference path Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator fileSep MemberReference CodeGenerator FILE_SEPARATOR IfStatement MethodInvocation path MemberReference fileSep endsWith BlockStatement StatementExpression Assignment MemberReference path MethodInvocation path Literal 0 BinaryOperation - MethodInvocation path length MethodInvocation fileSep length substring = LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator MethodInvocation nodesPerPath MemberReference path get IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object = StatementExpression MethodInvocation nodesPerPath MemberReference path MemberReference put StatementExpression MethodInvocation MemberReference node add StatementExpression MethodInvocation MemberReference node MemberReference language saveLanguage ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry MethodInvocation nodesPerPath entrySet BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator basepath Cast ReferenceType String MethodInvocation entry getKey LocalVariableDeclaration ReferenceType Set VariableDeclarator nodeColl Cast ReferenceType Set MethodInvocation entry getValue LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator files MethodInvocation generator MemberReference nodeColl MemberReference basepath Literal false generateFiles ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator filename MemberReference files BlockStatement StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation BinaryOperation + BinaryOperation + MemberReference basepath MemberReference CodeGenerator FILE_SEPARATOR MemberReference filename add fileNames	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ns IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it Cast ReferenceType Namespace MemberReference ns LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation list MethodInvocation MemberReference o addAll IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement StatementExpression MethodInvocation list MemberReference o add ReturnStatement MemberReference list	0
MethodDeclaration Modifier public ReferenceType ColumnDefinition getColumnDefinition FormalParameter ReferenceType String name ReturnStatement Cast ReferenceType ColumnDefinition MethodInvocation columnDefNames MemberReference name get	0
MethodDeclaration Modifier public final ReferenceType Object getTarget ReturnStatement MemberReference target	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier public setNumberOfPhases FormalParameter BasicType int aNumberOfPhases StatementExpression Assignment This MemberReference numberOfPhases MemberReference aNumberOfPhases =	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation createProperty	0
MethodDeclaration Modifier public windowActivated FormalParameter ReferenceType WindowEvent e StatementExpression MethodInvocation updateInfo	1
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb IfStatement BinaryOperation != MemberReference attributes Literal null BlockStatement StatementExpression MethodInvocation attributes MemberReference sb ToSource StatementExpression This MethodInvocation MemberReference sb NewLine StatementExpression MethodInvocation MemberReference modifiers MemberReference sb TraceModifiers StatementExpression MethodInvocation type MemberReference sb ToSource StatementExpression MethodInvocation sb Literal " " append StatementExpression MethodInvocation sb MemberReference name append	1
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation head getFillColor	0
MethodDeclaration Modifier public synchronized ReferenceType ProjectMember get FormalParameter BasicType int i IfStatement BinaryOperation != MemberReference model Literal null BlockStatement IfStatement BinaryOperation == MemberReference i Literal 0 BlockStatement ReturnStatement MemberReference model StatementExpression MemberReference -- i IfStatement BinaryOperation == MemberReference i MethodInvocation diagramMembers size BlockStatement IfStatement BinaryOperation != MemberReference todoList Literal null BlockStatement ReturnStatement MemberReference todoList BlockStatement ReturnStatement MemberReference profileConfiguration IfStatement BinaryOperation == MemberReference i BinaryOperation + MethodInvocation diagramMembers size Literal 1 BlockStatement ReturnStatement MemberReference profileConfiguration ReturnStatement MethodInvocation diagramMembers MemberReference i get	1
MethodDeclaration Modifier protected ReferenceType getContainer ReturnStatement MemberReference container	0
MethodDeclaration Modifier private loadTabs FormalParameter ReferenceType String direction IfStatement BinaryOperation || MethodInvocation MethodInvocation MemberReference direction equalsIgnoreCase toString Literal MethodInvocation MemberReference direction equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public ReferenceType Collection LocalVariableDeclaration ReferenceType Collection VariableDeclarator elements ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage VariableDeclarator pkg MethodInvocation modelImpl getUmlPackage IfStatement BinaryOperation != MemberReference pkg Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType RefObject VariableDeclarator obj Cast ReferenceType Collection TypeArgument ReferenceType RefObject MethodInvocation pkg MethodInvocation getElement MethodInvocation refAllOfType getCore BlockStatement IfStatement BinaryOperation == MethodInvocation obj Literal null BlockStatement StatementExpression MethodInvocation elements MemberReference obj add BlockStatement StatementExpression MethodInvocation LOG Literal "No default extent in warn ReturnStatement MemberReference elements	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt StatementExpression MethodInvocation Literal true setSaveEnabled	0
MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType ActivityDiagramPropPanelFactory StatementExpression MethodInvocation PropPanelFactoryManager MemberReference addPropPanelFactory	0
MethodDeclaration Modifier public ReferenceType ValueSpecification getWhen FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference target ReferenceType TimeEvent BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType TimeEvent MemberReference target	0
MethodDeclaration Modifier protected Annotation SuppressWarnings Literal "unchecked" buildModelList LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator elements ClassCreator ReferenceType TreeSet TypeArgument ReferenceType Object ClassCreator ReferenceType PathComparator LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation == MemberReference p Literal null BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getUserDefinedModelList BlockStatement StatementExpression MethodInvocation elements MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getModelElement getMetaTypes getAllModelElementsOfKind getModelManagementHelper addAll StatementExpression MethodInvocation elements MethodInvocation p MethodInvocation MethodInvocation Model MethodInvocation getClassifier getMetaTypes findByMetaType getProfileConfiguration addAll StatementExpression MethodInvocation MemberReference elements setElements	1
MethodDeclaration Modifier public ReferenceType Collection getResidents FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isANodeInstance BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement MethodInvocation MemberReference handle isAComponentInstance BlockStatement ReturnStatement Cast ReferenceType ComponentInstance MemberReference handle IfStatement MethodInvocation MemberReference handle isAComponent BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it Cast ReferenceType Component MemberReference handle MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ElementResidence MethodInvocation it next IfStatement BinaryOperation != MemberReference me Literal null BlockStatement StatementExpression MethodInvocation MemberReference me add ReturnStatement MemberReference ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public BasicType int getDiagramCount ReturnStatement MethodInvocation diagrams size	0
MethodDeclaration Modifier static ReferenceType Object getType FormalParameter ReferenceType String name FormalParameter ReferenceType Object defaultSpace LocalVariableDeclaration ReferenceType Object VariableDeclarator type Literal null LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager StatementExpression Assignment MemberReference type MethodInvocation p MemberReference name Literal false = IfStatement BinaryOperation == MemberReference type Literal null BlockStatement StatementExpression Assignment MemberReference type MethodInvocation Model MethodInvocation MemberReference name MemberReference defaultSpace buildClass getCoreFactory = ReturnStatement MemberReference type	0
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase AUTHOR ReturnStatement MemberReference JavaModuleGlobals MODULE_AUTHOR SwitchStatementCase DESCRIPTION ReturnStatement Literal "Java import from class or jar files" SwitchStatementCase ReturnStatement MemberReference JavaModuleGlobals MODULE_VERSION SwitchStatementCase MemberReference ModuleInterface DOWNLOADSITE ReturnStatement MemberReference JavaModuleGlobals MODULE_DOWNLOADSITE SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation head getFillColor	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier private ReferenceType String generateAssociation FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation LOG Literal "generateAssociation(Association modelElement)" debug IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAAssociation getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Association required" LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name Literal "" = ReturnStatement BinaryOperation + Literal "// generateAssociation : " MemberReference name	1
MethodDeclaration Modifier protected ReferenceType Action getActionComposition IfStatement BinaryOperation == MemberReference actionComposition Literal null BlockStatement StatementExpression Assignment MemberReference actionComposition ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionAddAssociationRole MethodInvocation Model MethodInvocation getComposite getAggregationKind Literal false Literal "button.new-composition" = ReturnStatement MemberReference actionComposition	0
MethodDeclaration Modifier private saveModel FormalParameter ReferenceType File destiny FormalParameter ReferenceType Object model IOException UmlException LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator stream ClassCreator ReferenceType FileOutputStream MemberReference destiny LocalVariableDeclaration ReferenceType XmiWriter VariableDeclarator xmiWriter MethodInvocation Model MemberReference model MemberReference stream BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation ApplicationVersion getVersion Literal "(" MemberReference UmlFilePersister PERSISTENCE_VERSION Literal ")" getXmiWriter StatementExpression MethodInvocation xmiWriter write	1
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType ExplorerTreeNode findNodes FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ExplorerTreeNode VariableDeclarator nodes MethodInvocation modelElementMap MemberReference modelElement get IfStatement BinaryOperation == MemberReference nodes Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST ReturnStatement MemberReference nodes	1
MethodDeclaration Modifier private ReferenceType String getCredits LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf MethodInvocation Literal "aboutbox.developed-by" localize append StatementExpression MethodInvocation buf Literal "\n\n" append StatementExpression MethodInvocation buf MethodInvocation Literal "aboutbox.project-leader" localize append StatementExpression MethodInvocation buf Literal " Linus Tolke (linus@tigris.org)" append StatementExpression MethodInvocation buf Literal "\n\n" append StatementExpression MethodInvocation buf MethodInvocation Literal "aboutbox.module-owners" localize append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf Literal "+ UML Model, Diagrams, GUI, Persistence: Bob Tarling\n" append StatementExpression MethodInvocation buf Literal "+ MDR Implementation: Tom Morris\n" append StatementExpression MethodInvocation buf Literal "+ Sequence Diagrams: Christian L�pez Esp�nola\n" append StatementExpression MethodInvocation buf Literal "+ C++: Luis Sergio Oliveira\n" append StatementExpression MethodInvocation buf Literal "+ Csharp: Jan Magne Andersen\n" append StatementExpression MethodInvocation buf Literal "+ PHP 4/5: Kai Schroeder\n" append StatementExpression MethodInvocation buf Literal "+ SQL: Kai Drahmann\n" append StatementExpression MethodInvocation buf Literal "+ Generation/Reverse Engineering: Thomas Neustupny\n" append StatementExpression MethodInvocation buf Literal "+ Cognitive support: Markus Klink\n" append StatementExpression MethodInvocation buf Literal "+ Notation, User Manual: Michiel van der Wulp\n" append StatementExpression MethodInvocation buf Literal "+ Localization French: Jean-Hugues de Raigniac\n" append StatementExpression MethodInvocation buf Literal "+ Localization Russian: Alexey Aphanasyev\n" append StatementExpression MethodInvocation buf Literal "+ Localization German: Harald Braun\n" append StatementExpression MethodInvocation buf Literal "+ Localization Spanish: Stewart Munoz\n" append StatementExpression MethodInvocation buf Literal "+ Localization British English: Alex Bagehot\n" append StatementExpression MethodInvocation buf BinaryOperation + Literal "+ Localization Norwegian (bokmål): " Literal "Hans Fredrik Nordhaug\n" append StatementExpression MethodInvocation buf Literal "+ Localization Chinese: Jeff Liu\n" append StatementExpression MethodInvocation buf Literal "+ Localization Portuguese: Sergio Agostinho\n" append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf MethodInvocation Translator Literal "aboutbox.contrib-developers-for-release" ArrayCreator ReferenceType Object ArrayInitializer Literal append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf Literal "+ Bob Tarling\n" append StatementExpression MethodInvocation buf Literal "+ Bogdan Szanto\n" append StatementExpression MethodInvocation buf Literal "+ Bogdan Pistol\n" append StatementExpression MethodInvocation buf Literal "+ Brian Hudson\n" append StatementExpression MethodInvocation buf Literal "+ Christian L�pez Esp�nola\n" append StatementExpression MethodInvocation buf Literal "+ Dave Thompson\n" append StatementExpression MethodInvocation buf Literal "+ Harald Braun\n" append StatementExpression MethodInvocation buf Literal "+ Jan Magne Andersen\n" append StatementExpression MethodInvocation buf Literal "+ Luis Sergio Oliveira\n" append StatementExpression MethodInvocation buf Literal "+ Linus Tolke\n" append StatementExpression MethodInvocation buf Literal "+ Lukasz Gromanowski\n" append StatementExpression MethodInvocation buf Literal "+ Marcos Aurelio\n" append StatementExpression MethodInvocation buf Literal "+ Michiel van der Wulp\n" append StatementExpression MethodInvocation buf Literal "+ Thilina Hasantha\n" append StatementExpression MethodInvocation buf Literal "+ Thomas Neustupny\n" append StatementExpression MethodInvocation buf Literal "+ Tom Morris\n" append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf MethodInvocation Translator Literal "aboutbox.contrib-developers-for-release" ArrayCreator ReferenceType Object ArrayInitializer Literal "0.26" append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf Literal "+ Aleksandar\n" append StatementExpression MethodInvocation buf Literal "+ Alexandre Silva\n" append StatementExpression MethodInvocation buf Literal "+ Scott Roberts\n" append StatementExpression MethodInvocation buf Literal "+ S�rgio Adriano Fernandes Lopes\n" append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf MethodInvocation Translator Literal "aboutbox.contrib-developers-for-release" ArrayCreator ReferenceType Object ArrayInitializer Literal "0.24" append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf Literal "+ Andrea Nironi\n" append StatementExpression MethodInvocation buf Literal "+ Hans Fredrik Nordhaug\n" append StatementExpression MethodInvocation buf Literal "+ Markus Klink\n" append StatementExpression MethodInvocation buf Literal "+ Sergio Agostinho\n" append StatementExpression MethodInvocation buf Literal "+ Stewart Munoz\n" append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf MethodInvocation Translator Literal "aboutbox.contrib-developers-for-release" ArrayCreator ReferenceType Object ArrayInitializer Literal "0.22" append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf Literal "+ Jeff Liu\n" append StatementExpression MethodInvocation buf Literal "+ Ludovic Maitre\n" append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf MethodInvocation Translator Literal "aboutbox.contrib-developers-for-release" ArrayCreator ReferenceType Object ArrayInitializer Literal "0.20" append StatementExpression MethodInvocation buf Literal "\n" append LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator cpbi BinaryOperation + Literal ", Polytechnic of Bandung Indonesia" Literal ", Computer Engineering Departement" StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + Literal "+ Decki" MemberReference cpbi Literal "\n" append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + Literal "+ Endi" MemberReference cpbi Literal "\n" append StatementExpression MethodInvocation buf Literal "+ Kai Schroeder\n" append StatementExpression MethodInvocation buf Literal "+ Michael A. MacDonald\n" append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + Literal "+ Yayan" MemberReference cpbi Literal "\n" append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf MethodInvocation Literal "aboutbox.past-developers" localize append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf Literal "+ Adam Gauthier\n" append StatementExpression MethodInvocation buf Literal "+ Adam Bonner\n" append StatementExpression MethodInvocation buf Literal "+ Alex Bagehot\n" append StatementExpression MethodInvocation buf Literal "+ Alexander Lepekhine\n" append StatementExpression MethodInvocation buf Literal "+ Alexey Aphanasyev\n" append StatementExpression MethodInvocation buf Literal "+ Andreas Rueckert (a_rueckert@gmx.net) (Java RE)\n" append StatementExpression MethodInvocation buf Literal "+ Clemens Eichler\n" append StatementExpression MethodInvocation buf Literal "+ Curt Arnold\n" append StatementExpression MethodInvocation buf Literal "+ David Glaser\n" append StatementExpression MethodInvocation buf Literal "+ David Hilbert\n" append StatementExpression MethodInvocation buf Literal "+ David Redmiles\n" append StatementExpression MethodInvocation buf Literal "+ Dennis Daniels (denny_d@hotmail.com)\n" append StatementExpression MethodInvocation buf Literal "+ Donat Wullschleger\n" append StatementExpression MethodInvocation buf Literal "+ Edwin Park\n" append StatementExpression MethodInvocation buf Literal "+ Eric Lefevre\n" append StatementExpression MethodInvocation buf Literal "+ Eugenio Alvarez\n" append StatementExpression MethodInvocation buf Literal "+ Frank Finger\n" append StatementExpression MethodInvocation buf Literal "+ Frank Wienberg\n" append StatementExpression MethodInvocation buf Literal "+ Grzegorz Prokopski\n" append StatementExpression MethodInvocation buf Literal "+ Jaap Branderhorst\n" append StatementExpression MethodInvocation buf Literal "+ Jason Robbins (Project founder, researcher)\n" append StatementExpression MethodInvocation buf Literal "+ Jean-Hugues de Raigniac\n" append StatementExpression MethodInvocation buf Literal "+ Jeremy Jones\n" append StatementExpression MethodInvocation buf Literal "+ Jim Holt\n" append StatementExpression MethodInvocation buf Literal "+ Luc Maisonobe\n" append StatementExpression MethodInvocation buf Literal "+ Marcus Andersson\n" append StatementExpression MethodInvocation buf Literal "+ Marko Boger (GentleWare) (UML Diagrams)\n" append StatementExpression MethodInvocation buf Literal "+ Michael Stockman\n" append StatementExpression MethodInvocation buf Literal "+ Nick Santucci\n" append StatementExpression MethodInvocation buf Literal "+ Phil Sager\n" append StatementExpression MethodInvocation buf Literal "+ Philippe Vanpeperstraete (User Manual)\n" append StatementExpression MethodInvocation buf Literal "+ Piotr Kaminski\n" append StatementExpression MethodInvocation buf Literal "+ Scott Guyer\n" append StatementExpression MethodInvocation buf Literal "+ Sean Chen\n" append StatementExpression MethodInvocation buf Literal "+ Steffen Zschaler\n" append StatementExpression MethodInvocation buf Literal "+ Steve Poole\n" append StatementExpression MethodInvocation buf Literal "+ Stuart Zakon\n" append StatementExpression MethodInvocation buf Literal "+ Thierry Lach\n" append StatementExpression MethodInvocation buf Literal "+ Thomas Schaumburg\n" append StatementExpression MethodInvocation buf Literal "+ Thorsten Sturm (thorsten.sturm@gentleware.de) (GEF)\n" append StatementExpression MethodInvocation buf Literal "+ Toby Baier (UML Metamodel, XMI, Project leader)\n" append StatementExpression MethodInvocation buf Literal "+ Will Howery\n" append StatementExpression MethodInvocation buf Literal "+ ICS 125 team Spring append StatementExpression MethodInvocation buf Literal "+ ICS 125 teams Spring 1998\n" append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier private StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation MethodInvocation getBigPort addFig	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation head getFillColor	0
MethodDeclaration Modifier protected ReferenceType UseCasesHelper getComponent ReturnStatement MemberReference impl	0
MethodDeclaration Modifier public addAllStereotypes FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Collection stereos IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "modelElement must be instance of Element" IfStatement BinaryOperation == MemberReference stereos Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal must be LocalVariableDeclaration Modifier final ReferenceType Element VariableDeclarator element Cast ReferenceType Element MemberReference modelElement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference stereos BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Stereotype BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The stereotypes from stereo collection" Literal " must be instances of IfStatement MethodInvocation ! element Cast ReferenceType Stereotype MemberReference o isStereotypeApplicable BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedOperationException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The stereotype " MemberReference o Literal " cannot be applied to " MemberReference modelElement LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference stereos BlockStatement LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MemberReference o LocalVariableDeclaration ReferenceType EObject VariableDeclarator eo MethodInvocation element MemberReference stereotype applyStereotype IfStatement MethodInvocation element MemberReference stereotype isStereotypeApplied BlockStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference stereotype fireApplyStereotypeEvent BlockStatement StatementExpression MethodInvocation EcoreUtil MemberReference eo remove MethodDeclaration * Call the model event pump and ask it to an event * a stereotype has been added. This is a stop-gap until we * how the event pump can detect that a * has been * @param * @param */ Modifier private fireApplyStereotypeEvent FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereotype LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator pump Cast ReferenceType MethodInvocation Model getPump StatementExpression MethodInvocation pump MemberReference modelElement Literal null MemberReference stereotype MemberReference ADD Literal "stereotype" Literal null LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd IfStatement BinaryOperation == MethodInvocation stereos size Literal 1 BlockStatement StatementExpression Assignment MemberReference cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Apply the stereotype to the element #" MethodInvocation stereos MethodInvocation next iterator MemberReference modelElement = BlockStatement StatementExpression Assignment MemberReference cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Apply stereotypes to the element #" MethodInvocation stereos size MemberReference modelElement = StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack	0
MethodDeclaration Modifier private Annotation SuppressWarnings Literal "serial" FormalParameter ReferenceType Object modelElement LocalVariableDeclaration BasicType boolean VariableDeclarator contained Literal false LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType Object VariableDeclarator modelsAndProfile ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MemberReference models StatementExpression MethodInvocation MemberReference profile add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MemberReference modelsAndProfile BlockStatement StatementExpression Assignment MemberReference contained MethodInvocation model MethodInvocation MethodInvocation MemberReference modelElement getRoot getFacade equals = IfStatement MemberReference contained BlockStatement BreakStatement AssertStatement MemberReference contained BinaryOperation + BinaryOperation + BinaryOperation + Literal "model element (" MemberReference modelElement Literal ") not contained " Literal "in models."	1
MethodDeclaration Modifier public addClass FormalParameter ReferenceType String name FormalParameter BasicType short modifiers FormalParameter ReferenceType String superclassName FormalParameter ReferenceType List TypeArgument ReferenceType String interfaces FormalParameter ReferenceType String javadoc StatementExpression MethodInvocation MemberReference name MemberReference modifiers MemberReference EMPTY_STRING_LIST MemberReference superclassName MemberReference interfaces MemberReference javadoc Literal false addClass	0
MethodDeclaration Modifier public ReferenceType ArgoDiagram getDiagram ReturnStatement MemberReference diagram	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize ReturnStatement ClassCreator ReferenceType Dimension MethodInvocation MethodInvocation getMinimumHeight	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb BinaryOperation + MemberReference Value Literal " " append	1
MethodDeclaration Modifier private endTargetTransaction StatementExpression Assignment MemberReference inTransaction Literal false =	0
MethodDeclaration Modifier public Annotation Override mouseEntered FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me mouseEntered StatementExpression Assignment MemberReference useComposite MethodInvocation me isShiftDown =	0
MethodDeclaration Modifier private static FormalParameter BasicType int FormalParameter ReferenceType StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoNotationEvent MemberReference MemberReference	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType DocumentEvent p1 StatementExpression MethodInvocation model MethodInvocation getText setBody	0
MethodDeclaration Modifier public addConnection FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object connection StatementExpression MethodInvocation impl MemberReference handle MemberReference position MemberReference connection addConnection	0
MethodDeclaration Modifier public BasicType boolean isAComponent FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Component	0
MethodDeclaration Modifier public ReferenceType String formatElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation MethodInvocation getFormatingStrategy MethodInvocation MemberReference element MethodInvocation getDisplayNamespace formatElement	0
MethodDeclaration Modifier private update IfStatement BinaryOperation == MethodInvocation MethodInvocation getSize getModel Literal 0 BlockStatement StatementExpression MethodInvocation addButton Literal false setEnabled BlockStatement StatementExpression MethodInvocation addButton Literal true setEnabled IfStatement BinaryOperation == MethodInvocation selectedList MethodInvocation getSize getModel Literal 0 BlockStatement StatementExpression MethodInvocation removeButton Literal false setEnabled BlockStatement StatementExpression MethodInvocation removeButton Literal true setEnabled IfStatement BinaryOperation && BinaryOperation > MethodInvocation selectedList MethodInvocation getSize getModel Literal 1 MemberReference ! multiSelectAllowed BlockStatement StatementExpression MethodInvocation addButton Literal false setEnabled StatementExpression MethodInvocation okButton Literal false setEnabled BlockStatement StatementExpression MethodInvocation addButton Literal true setEnabled StatementExpression MethodInvocation okButton Literal true setEnabled	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String sym IfStatement MethodInvocation sym Literal "OclType" equals BlockStatement ReturnStatement ClassCreator ReferenceType OclType Literal "OclType" IfStatement MethodInvocation sym Literal "OclExpression" equals BlockStatement ReturnStatement ClassCreator ReferenceType OclType Literal "OclExpression" IfStatement MethodInvocation sym Literal "OclAny" equals BlockStatement ReturnStatement ClassCreator ReferenceType OclType Literal "OclAny" ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType Frame getFrame IfStatement BinaryOperation == MemberReference topFrame Literal null BlockStatement LocalVariableDeclaration ReferenceType Frame VariableDeclarator rootFrame MethodInvocation JOptionPane getRootFrame IfStatement BinaryOperation instanceof MemberReference rootFrame ReferenceType JFrame BlockStatement StatementExpression MethodInvocation MemberReference rootFrame setFrame BlockStatement LocalVariableDeclaration ReferenceType Frame VariableDeclarator frames MethodInvocation Frame getFrames ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference frames length MemberReference ++ i BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i frames ReferenceType JFrame BlockStatement IfStatement BinaryOperation != MemberReference topFrame Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Found multiple JFrames" warn BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i frames setFrame IfStatement BinaryOperation == MemberReference topFrame Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Failed to find JFrame - using rootFrame" warn StatementExpression MethodInvocation MethodInvocation JOptionPane getRootFrame setFrame ReturnStatement MemberReference topFrame	1
MethodDeclaration BasicType int getTopMargin ReturnStatement MemberReference MARGIN	0
MethodDeclaration Modifier public ReferenceType Object getSender FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Message VariableDeclarator message Cast ReferenceType Message MemberReference handle LocalVariableDeclaration ReferenceType MessageOccurrenceSpecification VariableDeclarator mos Cast ReferenceType MessageOccurrenceSpecification MethodInvocation message ReturnStatement MethodInvocation mos MethodInvocation Literal 0 get getCovereds	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object flow StatementExpression MethodInvocation impl MemberReference handle MemberReference flow	0
MethodDeclaration Modifier public ReferenceType List getOutEdges FormalParameter ReferenceType Object port ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object kind IfStatement BinaryOperation instanceof MemberReference kind ReferenceType PseudostateKind BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException TryStatement ReturnStatement MethodInvocation MemberReference kind equals CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier static protected ReferenceType String FormalParameter ReferenceType List TypeArgument ReferenceType Token tokens LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder ForStatement EnhancedForControl VariableDeclaration ReferenceType Token VariableDeclarator t MemberReference tokens BlockStatement StatementExpression MethodInvocation buf MethodInvocation t getValue append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public BasicType boolean isADependency FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Dependency	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object qualifier StatementExpression SuperMethodInvocation MemberReference handle MemberReference qualifier StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public FormalParameter ReferenceType FigNode newFigure StatementExpression Assignment MemberReference MemberReference newFigure =	0
MethodDeclaration Modifier private static initClass FormalParameter ReferenceType UmlClass cl StatementExpression MethodInvocation cl Literal "" setName StatementExpression MethodInvocation cl Literal false setAbstract StatementExpression MethodInvocation cl Literal false setActive StatementExpression MethodInvocation cl Literal false setRoot StatementExpression MethodInvocation cl Literal false setLeaf StatementExpression MethodInvocation cl Literal false StatementExpression MethodInvocation cl MemberReference setVisibility	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression MethodInvocation ProjectBrowser MethodInvocation getInstance	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + MemberReference type Literal ":" MemberReference value	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType RESequenceDiagramDialog VariableDeclarator dialog ClassCreator ReferenceType RESequenceDiagramDialog MemberReference target StatementExpression MethodInvocation dialog Literal true setVisible IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference target isAMessage getFacade BinaryOperation != MemberReference messageFig Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator action MethodInvocation Model MethodInvocation MemberReference target getAction getFacade LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram Literal null LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType ArgoDiagram VariableDeclarator iter MethodInvocation project MethodInvocation iterator getDiagramList WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference diagram MethodInvocation iter next = IfStatement MethodInvocation Model MethodInvocation MemberReference action isACallAction getFacade BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator operation MethodInvocation Model MethodInvocation MemberReference action getOperation getFacade LocalVariableDeclaration ReferenceType RESequenceDiagramDialog VariableDeclarator dialog ClassCreator ReferenceType RESequenceDiagramDialog MemberReference operation Cast ReferenceType DiagramElement MemberReference messageFig MemberReference diagram StatementExpression MethodInvocation dialog Literal true setVisible BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator receiver MethodInvocation Model MethodInvocation MemberReference target getReceiver getFacade LocalVariableDeclaration Modifier final ReferenceType Collection VariableDeclarator c TernaryExpression BinaryOperation != MemberReference receiver Literal null MethodInvocation Model MethodInvocation MemberReference receiver getBases getFacade Literal null LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator cls TernaryExpression BinaryOperation && BinaryOperation != MemberReference c Literal null MethodInvocation ! c isEmpty MethodInvocation c MethodInvocation next iterator Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference cls Literal null MethodInvocation Model MethodInvocation MemberReference cls isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator opName MethodInvocation Model MethodInvocation MemberReference target getName getFacade LocalVariableDeclaration BasicType int VariableDeclarator pos1 MethodInvocation opName Literal "." lastIndexOf LocalVariableDeclaration BasicType int VariableDeclarator pos2 MethodInvocation opName Literal "(" lastIndexOf IfStatement BinaryOperation == MemberReference pos1 Literal - 1 BlockStatement StatementExpression Assignment MemberReference pos1 MethodInvocation opName Literal "new " lastIndexOf = StatementExpression Assignment MemberReference pos1 TernaryExpression BinaryOperation != MemberReference pos1 Literal - 1 BinaryOperation + MemberReference pos1 Literal 4 Literal 0 = BlockStatement StatementExpression MemberReference ++ pos1 StatementExpression Assignment MemberReference pos2 TernaryExpression BinaryOperation != MemberReference pos2 Literal - 1 MemberReference pos2 MethodInvocation opName length = StatementExpression Assignment MemberReference opName MethodInvocation opName MemberReference pos1 MemberReference pos2 substring = ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator operation MethodInvocation Model MethodInvocation MemberReference cls getOperationsInh getCoreHelper BlockStatement IfStatement MethodInvocation opName MethodInvocation Model MethodInvocation MemberReference operation getName getFacade equals BlockStatement LocalVariableDeclaration ReferenceType RESequenceDiagramDialog VariableDeclarator dialog ClassCreator ReferenceType RESequenceDiagramDialog MemberReference operation Cast ReferenceType DiagramElement MemberReference messageFig MemberReference diagram StatementExpression MethodInvocation dialog Literal true setVisible BreakStatement	1
MethodDeclaration Modifier public final ReferenceType String getString FormalParameter ReferenceType ConfigurationKey key FormalParameter ReferenceType String defaultValue StatementExpression MethodInvocation loadIfNecessary ReturnStatement MethodInvocation MethodInvocation key getKey MemberReference defaultValue getValue	0
MethodDeclaration Modifier protected setDiagram FormalParameter ReferenceType ArgoDiagram d StatementExpression Assignment MemberReference diagram MemberReference d =	0
MethodDeclaration Modifier public addMember FormalParameter ReferenceType Object m IfStatement BinaryOperation == MemberReference m Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A model member must be supplied" IfStatement BinaryOperation instanceof MemberReference m ReferenceType ArgoDiagram BlockStatement StatementExpression MethodInvocation LOG Literal "Adding diagram member" info StatementExpression MethodInvocation Cast ReferenceType ArgoDiagram MemberReference m addDiagramMember IfStatement BinaryOperation instanceof MemberReference m ReferenceType ProjectMemberTodoList BlockStatement StatementExpression MethodInvocation LOG Literal "Adding todo member" info StatementExpression MethodInvocation Cast ReferenceType ProjectMemberTodoList MemberReference m addTodoMember IfStatement MethodInvocation Model MethodInvocation MemberReference m isAModel getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "Adding model member" info StatementExpression MethodInvocation MemberReference m addModelMember IfStatement MethodInvocation Model MethodInvocation MemberReference m isAProfile getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "Adding profile model member" info StatementExpression MethodInvocation MemberReference m addModelMember BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "The member must be a UML model todo member or diagram." Literal "It is " MethodInvocation m MethodInvocation getName getClass StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "There are now " MethodInvocation members size Literal " members" info	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int index ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override removeFromDiagramImpl IfStatement BinaryOperation != MemberReference notationProviderBody Literal null BlockStatement StatementExpression MethodInvocation notationProviderBody cleanListener StatementExpression SuperMethodInvocation removeFromDiagramImpl	0
MethodDeclaration Modifier public static ReferenceType ActionNewSignalEvent getSingleton ReturnStatement MemberReference singleton	0
MethodDeclaration Modifier private ReferenceType String processPtrOperators FormalParameter ReferenceType String typeName FormalParameter ReferenceType List taggedValues ReturnStatement MemberReference typeName	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getProjectSettingsTabs ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public ReferenceType DiagramInterchangeModel getDiagramInterchangeModel ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Fig createNewItem FormalParameter ReferenceType MouseEvent me FormalParameter BasicType int snapX FormalParameter BasicType int snapY LocalVariableDeclaration ReferenceType VariableDeclarator p ClassCreator ReferenceType MemberReference snapX MemberReference snapY StatementExpression MethodInvocation p MemberReference snapX MemberReference snapY addPoint StatementExpression Assignment MemberReference _startX MemberReference snapX = StatementExpression Assignment MemberReference _startY MemberReference snapY = StatementExpression Assignment MemberReference MemberReference snapX = StatementExpression Assignment MemberReference MemberReference snapY = StatementExpression Assignment MemberReference _npoints Literal 2 = ReturnStatement MemberReference p	0
MethodDeclaration Modifier public ReferenceType Constraint buildConstraint FormalParameter ReferenceType Object constrElement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator constrainedElement Cast ReferenceType ModelElement MemberReference constrElement IfStatement BinaryOperation == MemberReference constrainedElement Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "the constrained element is " Literal and may not be " Literal LocalVariableDeclaration ReferenceType Constraint VariableDeclarator con MethodInvocation createConstraint StatementExpression MethodInvocation con MethodInvocation MemberReference constrainedElement add StatementExpression MethodInvocation con MethodInvocation constrainedElement getNamespace setNamespace ReturnStatement MemberReference con	0
MethodDeclaration Modifier public ReferenceType String getLanguage LocalVariableDeclaration ReferenceType Object VariableDeclarator expression MethodInvocation getExpression IfStatement BinaryOperation == MemberReference expression Literal null BlockStatement ReturnStatement MemberReference EMPTYSTRING LocalVariableDeclaration ReferenceType String VariableDeclarator language Literal null TryStatement StatementExpression Assignment MemberReference language MethodInvocation Model MethodInvocation MemberReference expression getLanguage = CatchClause CatchClauseParameter Exception ex ReturnStatement MemberReference language	0
MethodDeclaration Modifier private doStereotype FormalParameter BasicType boolean value LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator figs MethodInvocation ce MethodInvocation getFigs getSelectionManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference f IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigNodeModelElement BlockStatement StatementExpression Cast ReferenceType FigNodeModelElement MemberReference f StatementExpression Cast ReferenceType ArgoFig MemberReference f StatementExpression MethodInvocation f damage	0
MethodDeclaration Modifier public static register FormalParameter ReferenceType Critic cr FormalParameter ReferenceType Class clazz LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Critic VariableDeclarator theCritics MethodInvocation MethodInvocation MemberReference clazz get getCriticRegistry IfStatement BinaryOperation == MemberReference theCritics Literal null BlockStatement StatementExpression Assignment MemberReference theCritics ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Critic = StatementExpression MethodInvocation criticRegistry MemberReference clazz MemberReference theCritics put IfStatement MethodInvocation ! theCritics MemberReference cr contains BlockStatement StatementExpression MethodInvocation theCritics MemberReference cr add StatementExpression MethodInvocation MemberReference cr notifyStaticObservers StatementExpression MethodInvocation LOG BinaryOperation + Literal "Registered: " MethodInvocation theCritics toString debug StatementExpression MethodInvocation cachedCritics MemberReference clazz remove StatementExpression MethodInvocation MemberReference cr addCritic	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getStateVertex getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier protected FormalParameter ReferenceType GlassPane newGlassPane StatementExpression Assignment MemberReference glassPane MemberReference newGlassPane =	0
MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object item StatementExpression Assignment MemberReference target MemberReference item = IfStatement MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation MemberReference item setTargetInternal	0
MethodDeclaration Modifier protected BasicType boolean isLazy ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType File getList FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType File VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType File LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType File VariableDeclarator toDoDirectories ClassCreator ReferenceType LinkedList TypeArgument ReferenceType File LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType File VariableDeclarator seenDirectories ClassCreator ReferenceType HashSet TypeArgument ReferenceType File StatementExpression MethodInvocation toDoDirectories MemberReference file add WhileStatement MethodInvocation ! toDoDirectories isEmpty BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator curDir MethodInvocation toDoDirectories Literal 0 remove IfStatement MethodInvocation ! curDir isDirectory BlockStatement StatementExpression MethodInvocation results MemberReference curDir add ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation curDir listFiles IfStatement BinaryOperation != MemberReference files Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator curFile MethodInvocation curDir listFiles BlockStatement IfStatement MethodInvocation curFile isDirectory BlockStatement IfStatement MethodInvocation ! seenDirectories MemberReference curFile contains BlockStatement StatementExpression MethodInvocation toDoDirectories MemberReference curFile add StatementExpression MethodInvocation seenDirectories MemberReference curFile add BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation curFile MethodInvocation toLowerCase getName IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation s Literal ".xmi" endsWith MethodInvocation s Literal ".uml" endsWith MethodInvocation s Literal ".xmi.zip" endsWith MethodInvocation s Literal ".xml.zip" endsWith BlockStatement StatementExpression MethodInvocation results MemberReference curFile add ReturnStatement MemberReference results	1
MethodDeclaration Modifier public ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public ReferenceType Include createInclude ReturnStatement MethodInvocation createInclude	0
MethodDeclaration Modifier public redo StatementExpression MethodInvocation modelImplementation MethodInvocation getCommandStack MethodInvocation redo getEditingDomain	0
MethodDeclaration Modifier public ReferenceType String getTabKey ReturnStatement Literal "tab.profiles"	0
MethodDeclaration Modifier private ReferenceType ImageIcon loadIcon FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType URL VariableDeclarator imagePath ClassReference MethodInvocation getClassLoader MethodInvocation BinaryOperation + BinaryOperation + Literal "org/argouml/Images/" MemberReference name Literal ".gif" getResource ReferenceType NormalProfileCpp LocalVariableDeclaration ReferenceType ImageIcon VariableDeclarator icon Literal null IfStatement BinaryOperation != MemberReference imagePath Literal null StatementExpression Assignment MemberReference icon ClassCreator ReferenceType ImageIcon MemberReference imagePath = ReturnStatement MemberReference icon	1
MethodDeclaration Modifier private static ReferenceType SplashScreen initializeSplash LocalVariableDeclaration ReferenceType SplashScreen VariableDeclarator splash ClassCreator ReferenceType SplashScreen StatementExpression MethodInvocation splash Literal true setVisible IfStatement BinaryOperation && MethodInvocation ! EventQueue BinaryOperation == MethodInvocation Runtime MethodInvocation availableProcessors getRuntime Literal 1 BlockStatement SynchronizedStatement MemberReference splash WhileStatement MethodInvocation ! splash isPaintCalled BlockStatement TryStatement StatementExpression MethodInvocation splash wait CatchClause CatchClauseParameter InterruptedException e ReturnStatement MemberReference splash	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String MemberReference searchDirs	0
MethodDeclaration Modifier public ReferenceType Element getArea ReturnStatement MemberReference area	0
MethodDeclaration Modifier public handleSettingsTabCancel StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean isUndoable ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public removePerspective FormalParameter ReferenceType ExplorerPerspective perspective StatementExpression MethodInvocation perspectives MemberReference perspective remove ForStatement EnhancedForControl VariableDeclaration ReferenceType PerspectiveManagerListener VariableDeclarator listener MemberReference perspectiveListeners BlockStatement StatementExpression MethodInvocation listener MemberReference perspective removePerspective	0
MethodDeclaration Modifier private ReferenceType JList getJlstSizes IfStatement BinaryOperation == MemberReference jlstSizes Literal null BlockStatement StatementExpression Assignment MemberReference jlstSizes ClassCreator ReferenceType JList ArrayCreator ReferenceType Integer ArrayInitializer MethodInvocation Integer Literal 8 valueOf MethodInvocation Integer Literal 9 valueOf MethodInvocation Integer Literal 10 valueOf MethodInvocation Integer Literal 11 valueOf MethodInvocation Integer Literal 12 valueOf MethodInvocation Integer Literal 14 valueOf MethodInvocation Integer Literal 16 valueOf MethodInvocation Integer Literal 18 valueOf MethodInvocation Integer Literal 20 valueOf MethodInvocation Integer Literal 22 valueOf MethodInvocation Integer Literal 24 valueOf MethodInvocation Integer Literal 26 valueOf MethodInvocation Integer Literal 28 valueOf MethodInvocation Integer Literal 36 valueOf MethodInvocation Integer Literal 48 valueOf MethodInvocation Integer Literal 72 valueOf = StatementExpression MethodInvocation jlstSizes MemberReference resultSize Literal true setSelectedValue StatementExpression MethodInvocation jlstSizes MethodInvocation ClassCreator ReferenceType MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent e IfStatement BinaryOperation != MethodInvocation jlstSizes getSelectedValue Literal null BlockStatement StatementExpression Assignment MemberReference resultSize Cast ReferenceType Integer MethodInvocation jlstSizes getSelectedValue = StatementExpression MethodInvocation addListSelectionListener getSelectionModel ReturnStatement MemberReference jlstSizes	1
MethodDeclaration Modifier public ReferenceType String getRedoLabel ReturnStatement TernaryExpression MethodInvocation canRedo MethodInvocation modelImplementation MethodInvocation getCommandStack MethodInvocation MethodInvocation getLabel getEditingDomain Literal null	0
MethodDeclaration Modifier public ReferenceType String getLabelName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType NavigatorPane ReturnStatement MemberReference explorerPane	0
MethodDeclaration Modifier public BasicType boolean canConnect FormalParameter ReferenceType Object fromP FormalParameter ReferenceType Object toP ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType boolean isShowVisibilities IfStatement MemberReference showVisibilitiesSet BlockStatement ReturnStatement MemberReference showVisibilities IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement ReturnStatement MethodInvocation parent isShowVisibilities ReturnStatement MethodInvocation MethodInvocation isShowVisibilities getDefaultSettings	0
MethodDeclaration Modifier public ReferenceType Dimension getPreferredSize ReturnStatement ClassCreator ReferenceType Dimension MemberReference w MemberReference h	1
MethodDeclaration Modifier public ReferenceType LayoutedObject ReturnStatement Cast ReferenceType LayoutedObject MethodInvocation objects toArray	1
MethodDeclaration Modifier public BasicType boolean isParseable FormalParameter ReferenceType File file ReturnStatement MethodInvocation MemberReference file MethodInvocation getSuffixFilters	0
MethodDeclaration Modifier public static ReferenceType Notation getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public BasicType boolean isAMultiplicity FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Multiplicity	0
MethodDeclaration Modifier public BasicType boolean isAInteraction FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object classifier FormalParameter ReferenceType List operations StatementExpression SuperMethodInvocation MemberReference classifier MemberReference operations StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public ReferenceType String getSuffixes ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isALink getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier public ReferenceType Collection getAllNamespaces FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation MemberReference ns ClassReference ReferenceType Namespace getAllModelElementsOfKind	0
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType String VariableDeclarator ret Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator action MethodInvocation Model MethodInvocation MemberReference modelElement getEntry getFacade IfStatement BinaryOperation != MemberReference action Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator expression MethodInvocation Model MethodInvocation MemberReference action getScript getFacade IfStatement BinaryOperation != MemberReference expression Literal null BlockStatement StatementExpression Assignment MemberReference ret Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference expression getBody getFacade = ReturnStatement TernaryExpression BinaryOperation == MemberReference ret Literal null Literal "" MemberReference ret	0
MethodDeclaration Modifier protected ReferenceType Collection LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation getOwner ReturnStatement MethodInvocation Model MethodInvocation MemberReference classifier getOperationsAndReceptions getFacade	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Action ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier public endCtorDefinition StatementExpression MethodInvocation endXtor	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set	0
MethodDeclaration Modifier public ReferenceType getStatusBar ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object owner LocalVariableDeclaration BasicType int VariableDeclarator y BinaryOperation + MemberReference MemberReference STEREOHEIGHT StatementExpression Assignment MemberReference label ClassCreator ReferenceType ArgoFigText MemberReference owner ClassCreator ReferenceType Rectangle MemberReference MemberReference y MemberReference DEFAULT_WIDTH MemberReference STEREOHEIGHT MethodInvocation getSettings Literal false = StatementExpression Assignment MemberReference y BinaryOperation + MemberReference y MemberReference STEREOHEIGHT = StatementExpression MethodInvocation label Literal false setFilled StatementExpression MethodInvocation label Literal 0 setLineWidth StatementExpression MethodInvocation label Literal false StatementExpression MethodInvocation label MethodInvocation getLabel setText StatementExpression MethodInvocation label calcBounds StatementExpression Assignment MemberReference condition ClassCreator ReferenceType ArgoFigText MemberReference owner ClassCreator ReferenceType Rectangle MemberReference MemberReference y MemberReference DEFAULT_WIDTH MemberReference STEREOHEIGHT MethodInvocation getSettings Literal false = StatementExpression Assignment MemberReference y BinaryOperation + MemberReference y MemberReference STEREOHEIGHT = StatementExpression MethodInvocation condition Literal false setFilled StatementExpression MethodInvocation condition Literal 0 setLineWidth StatementExpression Assignment MemberReference fg ClassCreator ReferenceType FigTextGroup MemberReference owner MethodInvocation getSettings = StatementExpression MethodInvocation fg MemberReference label addFig StatementExpression MethodInvocation fg MemberReference condition addFig StatementExpression MethodInvocation fg calcBounds StatementExpression MethodInvocation MemberReference fg ClassCreator ReferenceType PathItemPlacement This MemberReference fg Literal 50 Literal 10 addPathItem StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MemberReference endArrow StatementExpression MethodInvocation Literal true	1
MethodDeclaration BasicType boolean saveUnspecified ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType AssociationEnd buildAssociationEnd FormalParameter ReferenceType Object type FormalParameter ReferenceType Object assoc IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference type Literal null BinaryOperation instanceof MemberReference type ReferenceType Classifier BinaryOperation == MemberReference assoc Literal null BinaryOperation instanceof MemberReference assoc ReferenceType UmlAssociation BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "one of the arguments is null" ReturnStatement MethodInvocation MemberReference assoc Literal "" MemberReference type Literal null Literal null Literal true Literal null Literal null Literal null Literal null MemberReference buildAssociationEnd	1
MethodDeclaration Modifier protected ReferenceType List getActions ReturnStatement MemberReference actions	0
MethodDeclaration Modifier private StatementExpression Assignment MemberReference invisibleAllowed Literal true = StatementExpression Assignment MemberReference bigPort ClassCreator ReferenceType FigCircle Literal 0 Literal 0 Literal 1 Literal 1 MemberReference LINE_COLOR MemberReference FILL_COLOR = StatementExpression MethodInvocation MemberReference bigPort addFig	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Iterator iter FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType String VariableDeclarator value Literal null IfStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buffer ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator elementSep MethodInvocation getElementSeparator LocalVariableDeclaration ReferenceType Object VariableDeclarator obj Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 MethodInvocation iter hasNext MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation buffer MemberReference elementSep append StatementExpression Assignment MemberReference obj MethodInvocation iter next = IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAModelElement getFacade BlockStatement StatementExpression MethodInvocation buffer MethodInvocation MemberReference obj MemberReference namespace formatElement append BlockStatement StatementExpression MethodInvocation buffer MethodInvocation obj toString append StatementExpression Assignment MemberReference value MethodInvocation buffer toString = BlockStatement StatementExpression Assignment MemberReference value MethodInvocation getEmptyCollection = ReturnStatement MemberReference value	1
MethodDeclaration Modifier protected ReferenceType Object getUmlActions LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MethodInvocation getActionActor MethodInvocation getActionUseCase Literal null MethodInvocation MethodInvocation MethodInvocation getActionGeneralize MethodInvocation getActionExtend MethodInvocation getActionInclude Literal null MethodInvocation getActionExtensionPoint ReturnStatement MemberReference actions	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement Literal true	0
MethodDeclaration Modifier static ReferenceType Collection TypeArgument ReferenceType ModelElement getContents FormalParameter ReferenceType Namespace namespace LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ModelElement StatementExpression MethodInvocation results MethodInvocation namespace getOwnedElement addAll LocalVariableDeclaration ReferenceType Namespace VariableDeclarator owner MethodInvocation namespace getNamespace IfStatement BinaryOperation != MemberReference owner Literal null BlockStatement StatementExpression MethodInvocation results MethodInvocation MemberReference owner getContents addAll ReturnStatement MemberReference results	1
MethodDeclaration FormalParameter ReferenceType String path StatementExpression MethodInvocation searchDirs MemberReference path add	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal "parsing.help.java.fig-nodemodelelement"	0
MethodDeclaration Modifier private ReferenceType Collection filterPackages FormalParameter ReferenceType Collection packages LocalVariableDeclaration ReferenceType Collection VariableDeclarator ret ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference packages BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference object isAPackage getFacade BlockStatement StatementExpression MethodInvocation ret MemberReference object add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public removeContext FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object context TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Signal BinaryOperation instanceof MemberReference context ReferenceType BehavioralFeature BlockStatement StatementExpression Cast ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage Cast ReferenceType Signal MemberReference handle ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unrecognized object " MemberReference handle Literal " or " MemberReference context	0
MethodDeclaration Modifier public BasicType boolean loadProject FormalParameter ReferenceType File file FormalParameter BasicType boolean showUI FormalParameter ReferenceType ProgressMonitor pmw ReturnStatement BinaryOperation != MethodInvocation MemberReference file MemberReference showUI MemberReference pmw loadProject2 Literal null	1
MethodDeclaration Modifier public Annotation Override BasicType int getLineWidth ReturnStatement MethodInvocation head getLineWidth	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MethodInvocation getTarget isAOperation getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference text getCoreHelper	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType AbstractArgoJPanel getDetailsTabs ReturnStatement MethodInvocation ModuleLoader2 MethodInvocation getDetailsTabs getInstance	0
MethodDeclaration Modifier public removeElement FormalParameter ReferenceType Object o LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation objects MemberReference o indexOf IfStatement BinaryOperation == MethodInvocation MemberReference index getElementAt MemberReference selectedObject BlockStatement IfStatement MemberReference ! BlockStatement IfStatement BinaryOperation == MemberReference index Literal 0 BlockStatement StatementExpression MethodInvocation TernaryExpression BinaryOperation == MethodInvocation getSize Literal 1 Literal null MethodInvocation BinaryOperation + MemberReference index Literal 1 getElementAt setSelectedItem BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation - MemberReference index Literal 1 getElementAt setSelectedItem IfStatement BinaryOperation >= MemberReference index Literal 0 BlockStatement StatementExpression MethodInvocation objects MemberReference index remove StatementExpression MethodInvocation This MemberReference index MemberReference index fireIntervalRemoved	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference AggregationKindEnum AK_NONE	0
MethodDeclaration Modifier protected ReferenceType ColorUIResource ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator p ClassCreator ReferenceType StringBuffer ForStatement EnhancedForControl VariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator perspective MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation perspective toString StatementExpression MethodInvocation p MethodInvocation Literal "," append MemberReference name append ForStatement EnhancedForControl VariableDeclaration ReferenceType PerspectiveRule VariableDeclarator rule MethodInvocation perspective getList BlockStatement StatementExpression MethodInvocation p MethodInvocation Literal "," append MethodInvocation rule MethodInvocation getName getClass append StatementExpression MethodInvocation p BinaryOperation - MethodInvocation p length Literal 1 deleteCharAt StatementExpression MethodInvocation p Literal ";" append StatementExpression MethodInvocation p BinaryOperation - MethodInvocation p length Literal 1 deleteCharAt ReturnStatement MethodInvocation p toString	1
MethodDeclaration Modifier protected setupGenerator FormalParameter ReferenceType Object cls StatementExpression MethodInvocation cleanupGenerator StatementExpression Assignment MemberReference MemberReference cls =	0
MethodDeclaration Modifier private BasicType boolean isDeleteEventRequired FormalParameter Modifier final ReferenceType Object element SynchronizedStatement MemberReference deleteEventIgnoreList IfStatement MethodInvocation deleteEventIgnoreList MemberReference element contains BlockStatement StatementExpression MethodInvocation deleteEventIgnoreList MemberReference element remove ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object operation FormalParameter ReferenceType Object classifier FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation Model MethodInvocation MemberReference operation MemberReference classifier getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference parameter MemberReference name setName getCoreHelper ReturnStatement MemberReference parameter	0
MethodDeclaration Modifier public BasicType int hashCode IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement Literal 0 ReturnStatement MethodInvocation name hashCode	0
MethodDeclaration Modifier public setStateMachine FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object stm ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation tabPanels size LocalVariableDeclaration BasicType int VariableDeclarator currentTab MethodInvocation tabs getSelectedIndex ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MethodInvocation tabPanels size MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator newTab BinaryOperation % BinaryOperation + MemberReference currentTab MemberReference i MemberReference size IfStatement MethodInvocation tabs MemberReference newTab BlockStatement StatementExpression MethodInvocation tabs MemberReference newTab setSelectedIndex ReturnStatement	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade	0
MethodDeclaration Modifier public Annotation Override setFig FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f setFig StatementExpression MethodInvocation MethodInvocation Literal true getFig	0
MethodDeclaration Modifier protected Annotation Override setText StatementExpression MethodInvocation MemberReference keywordText setText	0
MethodDeclaration Modifier private warnClassifierNotFound FormalParameter ReferenceType String name FormalParameter ReferenceType String operation StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Modeler.java: a classifier (" MemberReference name Literal ") that was in the source " Literal "file could not be generated in the model " MemberReference operation logError	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType String getMetaModelName FormalParameter ReferenceType Object m IfStatement BinaryOperation instanceof MemberReference m ReferenceType Element BlockStatement ReturnStatement MethodInvocation MethodInvocation m getClass getMetaModelName ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Not an Element"	1
MethodDeclaration Modifier public ReferenceType Object getComposite ReturnStatement MemberReference org.eclipse.uml2.uml.AggregationKind COMPOSITE_LITERAL	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType PersistenceManager VariableDeclarator pm MethodInvocation PersistenceManager getInstance LocalVariableDeclaration ReferenceType JFileChooser VariableDeclarator chooser ClassCreator ReferenceType JFileChooser StatementExpression MethodInvocation chooser MethodInvocation Translator Literal localize setDialogTitle StatementExpression MethodInvocation chooser MethodInvocation ProjectFileView getInstance setFileView StatementExpression MethodInvocation chooser MethodInvocation Translator Literal localize setApproveButtonText StatementExpression MethodInvocation chooser Literal true setAcceptAllFileFilterUsed StatementExpression MethodInvocation pm MemberReference chooser LocalVariableDeclaration ReferenceType String VariableDeclarator fn MethodInvocation Configuration MemberReference PersistenceManager getString IfStatement BinaryOperation > MethodInvocation fn length Literal 0 BlockStatement StatementExpression Assignment MemberReference fn MethodInvocation PersistenceManager MethodInvocation MemberReference fn getBaseName getInstance = StatementExpression MethodInvocation chooser ClassCreator ReferenceType File MemberReference fn setSelectedFile LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation chooser MethodInvocation ArgoFrame getFrame showSaveDialog IfStatement BinaryOperation == MemberReference result MemberReference JFileChooser APPROVE_OPTION BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator theFile MethodInvocation chooser getSelectedFile IfStatement BinaryOperation != MemberReference theFile Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation theFile getName StatementExpression MethodInvocation Configuration MemberReference PersistenceManager MethodInvocation PersistenceManager MethodInvocation MethodInvocation theFile getPath getBaseName getInstance setString StatementExpression Assignment MemberReference name MethodInvocation pm MemberReference name fixXmiExtension = StatementExpression Assignment MemberReference theFile ClassCreator ReferenceType File MethodInvocation theFile getParent MemberReference name = StatementExpression MethodInvocation ProjectBrowser MethodInvocation Literal false MemberReference theFile Literal false getInstance	0
MethodDeclaration Modifier public ReferenceType Object getObject ReturnStatement ClassReference org.eclipse.uml2.uml ReferenceType InstanceSpecification	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType String tagType StatementExpression MethodInvocation impl MemberReference handle MemberReference tagType setType	0
MethodDeclaration Modifier public Annotation Override setLayer FormalParameter ReferenceType Layer lay StatementExpression SuperMethodInvocation MemberReference lay setLayer ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation lay getContents BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigCompositeState BlockStatement IfStatement BinaryOperation == MethodInvocation f getOwner MethodInvocation Model MethodInvocation MethodInvocation getOwner getContainer getFacade BlockStatement StatementExpression MethodInvocation MemberReference f setEnclosingFig BreakStatement	1
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation offs Literal 0 get IfStatement MethodInvocation ! MemberReference dm MemberReference dsgr predicate BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dm computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier public deleteCollection FormalParameter ReferenceType Collection col StatementExpression MethodInvocation impl MemberReference col deleteCollection	0
MethodDeclaration Modifier public BasicType boolean evaluate FormalParameter ReferenceType Object o IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator target MethodInvocation o toString IfStatement MethodInvocation ! target MemberReference ArraySelector Literal 0 patterns startsWith BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! target MemberReference ArraySelector BinaryOperation - MemberReference patternCount Literal 1 patterns endsWith BlockStatement ReturnStatement Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator pattern MemberReference patterns BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index BinaryOperation + MemberReference target Literal "*" IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference target MethodInvocation target BinaryOperation + MemberReference index MethodInvocation pattern length substring = ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType boolean isAVertex FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Vertex	0
MethodDeclaration Modifier public ReferenceType Command getAddCommand FormalParameter ReferenceType Object modelElement ReturnStatement ClassCreator ReferenceType AddCommand MemberReference modelElement	0
MethodDeclaration * Builds the edge for an * TODO: Hide this method in the implementation of a to be * * TODO: When moving it would be better to take model elements rather * Figs as arguments here the implementation of that interface * above can then find the Figs without such diagram knowledge * in */ Modifier private ReferenceType Object getClassifierFromModel FormalParameter Modifier final ReferenceType String type FormalParameter Modifier final ReferenceType String objName LocalVariableDeclaration ReferenceType Object VariableDeclarator theClassifier Literal null LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation type Literal "." lastIndexOf IfStatement BinaryOperation != MemberReference pos Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace MemberReference model StatementExpression Assignment MemberReference pos Literal 0 = LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference type Literal "." WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation st nextToken StatementExpression Assignment MemberReference pos MethodInvocation s length += LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation Model MethodInvocation MemberReference namespace MemberReference s lookupIn getFacade IfStatement BinaryOperation == MemberReference element Literal null BlockStatement IfStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference element MethodInvocation Model MethodInvocation MemberReference s getModelManagementFactory = BlockStatement StatementExpression Assignment MemberReference element MethodInvocation Model MethodInvocation MemberReference s buildClass getCoreFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference element MemberReference namespace setNamespace getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference namespace MemberReference element addOwnedElement getCoreHelper StatementExpression Assignment MemberReference namespace MemberReference element = StatementExpression MemberReference ++ pos StatementExpression Assignment MemberReference theClassifier MemberReference namespace = BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace MethodInvocation Model MethodInvocation MemberReference classifier getNamespace getFacade StatementExpression Assignment MemberReference theClassifier MethodInvocation Model MethodInvocation MemberReference namespace MemberReference type lookupIn getFacade = IfStatement MethodInvocation ! Model MethodInvocation MemberReference theClassifier isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference theClassifier Literal null = LocalVariableDeclaration ReferenceType Collection VariableDeclarator sdeps MethodInvocation Model MethodInvocation MemberReference classifier getSupplierDependencies getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter1 TernaryExpression BinaryOperation != MemberReference sdeps Literal null MethodInvocation sdeps iterator Literal null WhileStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference theClassifier Literal null BinaryOperation != MemberReference iter1 Literal null MethodInvocation iter1 hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator dep MethodInvocation iter1 next IfStatement MethodInvocation Model MethodInvocation MemberReference dep isADependency getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator clients MethodInvocation Model MethodInvocation MemberReference dep getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter2 TernaryExpression BinaryOperation != MemberReference clients Literal null MethodInvocation clients iterator Literal null WhileStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference theClassifier Literal null BinaryOperation != MemberReference iter2 Literal null MethodInvocation iter2 hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator comp MethodInvocation iter2 next IfStatement MethodInvocation Model MethodInvocation MemberReference comp isAComponent getFacade BlockStatement StatementExpression Assignment MemberReference theClassifier MethodInvocation MemberReference comp MemberReference type permissionLookup = IfStatement BinaryOperation == MemberReference theClassifier Literal null BlockStatement StatementExpression Assignment MemberReference theClassifier MethodInvocation Model MethodInvocation MemberReference type buildClass getCoreFactory = LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace MethodInvocation Model MethodInvocation MemberReference classifier getNamespace getFacade StatementExpression MethodInvocation Model MethodInvocation MemberReference theClassifier MemberReference namespace setNamespace getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference namespace MemberReference theClassifier addOwnedElement getCoreHelper StatementExpression MethodInvocation MemberReference classifier MemberReference theClassifier ensureDirectedAssociation ReturnStatement MemberReference theClassifier	1
MethodDeclaration Modifier private addElementListener FormalParameter ReferenceType Object element StatementExpression MethodInvocation Model MethodInvocation This MemberReference element addModelEventListener getPump	0
MethodDeclaration Modifier public setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setLineColor StatementExpression MethodInvocation MemberReference col setLineColor	0
MethodDeclaration Modifier public BasicType boolean disable StatementExpression MethodInvocation LOG Literal Module info ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation head MemberReference w setLineWidth	0
MethodDeclaration Modifier public ReferenceType Collection parse FormalParameter ReferenceType InputSource inputSource FormalParameter BasicType boolean readOnly UmlException IfStatement BinaryOperation == MemberReference inputSource Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal "The input source must be LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator needsClosing Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation inputSource getSystemId IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation inputSource getPublicId = IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation inputSource toString = StatementExpression MethodInvocation LOG BinaryOperation + Literal "Parsing " MemberReference name debug IfStatement BinaryOperation != MethodInvocation inputSource getByteStream Literal null BlockStatement StatementExpression Assignment MemberReference is MethodInvocation inputSource getByteStream = IfStatement BinaryOperation != MethodInvocation inputSource getSystemId Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator url ClassCreator ReferenceType URL MethodInvocation inputSource getSystemId IfStatement BinaryOperation != MemberReference url Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Parsing URL " MemberReference url debug StatementExpression Assignment MemberReference is MethodInvocation url openStream = IfStatement BinaryOperation != MemberReference is Literal null BlockStatement StatementExpression Assignment MemberReference is ClassCreator ReferenceType BufferedInputStream MemberReference is = StatementExpression Assignment MemberReference needsClosing Literal true = CatchClause CatchClauseParameter MalformedURLException e CatchClause CatchClauseParameter IOException e IfStatement BinaryOperation == MemberReference is Literal null BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedOperationException LocalVariableDeclaration ReferenceType String VariableDeclarator id MethodInvocation inputSource getPublicId IfStatement BinaryOperation == MemberReference id Literal null BlockStatement StatementExpression Assignment MemberReference id MethodInvocation inputSource getSystemId = IfStatement BinaryOperation != MemberReference id Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator ix MethodInvocation id Literal '/' lastIndexOf IfStatement BinaryOperation != MemberReference ix Literal - 1 BlockStatement StatementExpression Assignment MemberReference id MethodInvocation id BinaryOperation + MemberReference ix Literal 1 substring = LocalVariableDeclaration ReferenceType Resource VariableDeclarator r MethodInvocation UMLUtil MemberReference modelImpl MethodInvocation URI MemberReference id createURI MemberReference readOnly getResource TryStatement StatementExpression MethodInvocation modelImpl MethodInvocation stopPumpingEvents getModelEventPump StatementExpression MethodInvocation r unload StatementExpression MethodInvocation r MemberReference is Literal null load IfStatement MethodInvocation MemberReference r isUML14 BlockStatement ThrowStatement ClassCreator ReferenceType UmlException Literal "Attempted to load UML file" CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType UmlException MemberReference e StatementExpression MethodInvocation modelImpl MethodInvocation startPumpingEvents getModelEventPump IfStatement MemberReference needsClosing BlockStatement TryStatement StatementExpression MethodInvocation is close CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e StatementExpression Assignment MemberReference resource MemberReference r = StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Parsed resource " MemberReference resource Literal " with " MethodInvocation resource MethodInvocation size getContents Literal " elements" debug ReturnStatement MethodInvocation r getContents	1
MethodDeclaration Modifier public static applyConfiguration FormalParameter ReferenceType ProfileConfiguration pc StatementExpression MethodInvocation MethodInvocation MemberReference pc applyConfiguration getManager	0
MethodDeclaration Modifier public Annotation Override initWizard FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType WizMEName BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation w getToDoItem LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation item MethodInvocation Literal 0 get getOffenders LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator sug SuperMethodInvocation getDefaultSuggestion IfStatement MethodInvocation Model MethodInvocation MemberReference me isAStateVertex getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sv MemberReference me LocalVariableDeclaration BasicType int VariableDeclarator count Literal 1 IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference sv getContainer getFacade Literal null BlockStatement StatementExpression Assignment MemberReference count MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference sv getContainer getFacade getSubvertices MethodInvocation size getFacade = StatementExpression Assignment MemberReference sug BinaryOperation + Literal "S" BinaryOperation + MemberReference count Literal 1 = StatementExpression Cast ReferenceType WizMEName MemberReference w StatementExpression Cast ReferenceType WizMEName MemberReference w	0
MethodDeclaration Modifier public Annotation Override BasicType boolean add FormalParameter ReferenceType item StatementExpression SuperMethodInvocation MemberReference item add StatementExpression MemberReference ++ numChecks ReturnStatement Literal true	1
MethodDeclaration Modifier public synchronized readModels FormalParameter ReferenceType URL url FormalParameter ReferenceType XmiExtensionParser xmiExtensionParser OpenException StatementExpression MethodInvocation LOG Literal "=======================================" info StatementExpression MethodInvocation LOG BinaryOperation + Literal "== READING MODEL " MemberReference url info TryStatement LocalVariableDeclaration ReferenceType InputSource VariableDeclarator source ClassCreator ReferenceType InputSource ClassCreator ReferenceType XmiInputStream MethodInvocation url openStream MemberReference xmiExtensionParser Literal 100000 Literal null StatementExpression MethodInvocation source MethodInvocation url toString setSystemId StatementExpression MethodInvocation MemberReference source readModels CatchClause CatchClauseParameter IOException ex ThrowStatement ClassCreator ReferenceType OpenException MemberReference ex	1
MethodDeclaration Modifier public addAllElements FormalParameter ReferenceType Enumeration TypeArgument ReferenceType T iter WhileStatement MethodInvocation iter hasMoreElements BlockStatement StatementExpression MethodInvocation MethodInvocation iter nextElement add	0
MethodDeclaration Modifier public addClientDependency FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object dependency StatementExpression SuperMethodInvocation MemberReference handle MemberReference dependency addClientDependency StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public BasicType boolean isAAttribute FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Property BinaryOperation != Cast ReferenceType Property MemberReference handle Literal null	1
MethodDeclaration Modifier private runGCActionPerformed FormalParameter ReferenceType ActionEvent e AssertStatement BinaryOperation == MethodInvocation e getSource MemberReference runGCButton StatementExpression MethodInvocation Runtime MethodInvocation gc getRuntime StatementExpression MethodInvocation updateInfo	1
MethodDeclaration Modifier public addSupplierDependency FormalParameter ReferenceType Object FormalParameter ReferenceType Object dependency IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ReferenceType ModelElement BinaryOperation instanceof MemberReference dependency ReferenceType Dependency BlockStatement StatementExpression Cast ReferenceType Dependency MemberReference dependency ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "supplier: " MemberReference Literal " or dependency: " MemberReference dependency	0
MethodDeclaration markDiagramAsModified FormalParameter ReferenceType ArgoDiagram diagram IfStatement MethodInvocation ! modifiedDiagrams MemberReference diagram contains BlockStatement StatementExpression MethodInvocation modifiedDiagrams MemberReference diagram add	0
MethodDeclaration BasicType boolean invoke FormalParameter ReferenceType Object element FormalParameter ReferenceType String pname FormalParameter ReferenceType String value IfStatement MethodInvocation ! name MemberReference pname equalsIgnoreCase BlockStatement ReturnStatement Literal false StatementExpression MethodInvocation op MemberReference element MemberReference value found ReturnStatement Literal true	0
MethodDeclaration Modifier protected handleDefaultShadowWidth FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator dsw MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation MethodInvocation Integer MemberReference dsw parseInt	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier protected ReferenceType String generateRecurrence FormalParameter ReferenceType Object expr IfStatement BinaryOperation == MemberReference expr Literal null BlockStatement ReturnStatement Literal "" ReturnStatement MethodInvocation Model MethodInvocation MemberReference expr getBody MethodInvocation toString getFacade	0
MethodDeclaration Modifier public StatementExpression Assignment MemberReference actions MethodInvocation ShortcutMgr getShortcuts = StatementExpression MethodInvocation table ClassCreator ReferenceType ShortcutTableModel setModel	0
MethodDeclaration Modifier public addNodeRelatedEdges FormalParameter ReferenceType Object node StatementExpression SuperMethodInvocation MemberReference node addNodeRelatedEdges IfStatement MethodInvocation Model MethodInvocation MemberReference node isAStateVertex getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator transen ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference node getOutgoings getFacade StatementExpression MethodInvocation transen MethodInvocation Model MethodInvocation MemberReference node getIncomings getFacade addAll LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation transen iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator dep MethodInvocation iter next IfStatement MethodInvocation MemberReference dep canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference dep addEdge	0
MethodDeclaration Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType UMLDeploymentDiagram deploymentDiagram LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation deploymentDiagram MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator obj MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigLink BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType FigLink VariableDeclarator figLink Cast ReferenceType FigLink MemberReference obj IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator link MethodInvocation figLink getOwner LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation Model MethodInvocation MemberReference link getConnections getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference ends Literal null BinaryOperation > MethodInvocation ends size Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator end MemberReference ends BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator instance MethodInvocation Model MethodInvocation MemberReference end getInstance getFacade IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference instance isAComponentInstance getFacade MethodInvocation Model MethodInvocation MemberReference instance isANodeInstance getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator residencies MethodInvocation Model MethodInvocation MemberReference instance getResidents getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference residencies Literal null BinaryOperation > MethodInvocation residencies size Literal 0 BlockStatement StatementExpression Assignment MemberReference count BinaryOperation + MemberReference count Literal 2 = LocalVariableDeclaration ReferenceType Object VariableDeclarator component MethodInvocation Model MethodInvocation MemberReference instance getComponentInstance getFacade IfStatement BinaryOperation != MemberReference component Literal null BlockStatement StatementExpression Assignment MemberReference count BinaryOperation + MemberReference count Literal 1 = IfStatement BinaryOperation == MemberReference count Literal 3 BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference deploymentDiagram add StatementExpression MethodInvocation offs MemberReference figLink add StatementExpression MethodInvocation offs MethodInvocation figLink getSourcePortFig add StatementExpression MethodInvocation offs MethodInvocation figLink getDestPortFig add ReturnStatement MemberReference offs	1
MethodDeclaration Modifier public found FormalParameter ReferenceType Object element FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation getGuarded getConcurrencyKind IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation value Literal "false" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getSequential getConcurrencyKind = IfStatement MethodInvocation Model MethodInvocation MemberReference element isAOperation getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element MemberReference kind setConcurrency getCoreHelper	0
MethodDeclaration Modifier protected Annotation Override initNotationProviders FormalParameter ReferenceType Object IfStatement BinaryOperation != MemberReference notationProviderBody Literal null BlockStatement StatementExpression MethodInvocation notationProviderBody cleanListener StatementExpression SuperMethodInvocation MemberReference initNotationProviders LocalVariableDeclaration ReferenceType VariableDeclarator notation MethodInvocation Notation MethodInvocation MethodInvocation getNotationLanguage getNotationSettings IfStatement MethodInvocation Model MethodInvocation MemberReference isAState getFacade BlockStatement StatementExpression Assignment MemberReference notationProviderBody MethodInvocation NotationProviderFactory2 MethodInvocation MemberReference NotationProviderFactory2 TYPE_STATEBODY MemberReference This MemberReference notation getInstance =	0
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation != MemberReference oldOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldOwner removeElementListener IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference newOwner Literal "remove" addElementListener	0
MethodDeclaration Modifier protected fireIntervalRemoved FormalParameter ReferenceType Object source FormalParameter BasicType int index0 FormalParameter BasicType int index1 IfStatement BinaryOperation && MemberReference fireListEvents MemberReference ! buildingModel BlockStatement StatementExpression SuperMethodInvocation MemberReference source MemberReference index0 MemberReference index1 fireIntervalRemoved	1
MethodDeclaration Modifier public setShowIcon FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Object getComponentRealization ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "This is not a UML1.4 class"	0
MethodDeclaration Modifier protected handleDescription FormalParameter ReferenceType XMLElement e StatementExpression Assignment MemberReference description MethodInvocation MethodInvocation trim MethodInvocation e getText decode =	0
MethodDeclaration Modifier public setVgap FormalParameter BasicType int vgap StatementExpression Assignment This MemberReference vgap MemberReference vgap =	0
MethodDeclaration Modifier private ReferenceType String getUndoLabel IfStatement MethodInvocation isUndoable BlockStatement ReturnStatement BinaryOperation + Literal "Undo " MemberReference label BlockStatement ReturnStatement BinaryOperation + Literal "Can't " MemberReference label	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getSelectedModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement BinaryOperation instanceof MemberReference t ReferenceType ArgoDiagram BlockStatement ReturnStatement Cast ReferenceType ArgoDiagram MemberReference t ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean isASubmachineState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType State Cast ReferenceType State MemberReference handle	0
MethodDeclaration Modifier public synchronized run LocalVariableDeclaration BasicType int VariableDeclarator work MethodInvocation progress getMaximum ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference work MemberReference ++ i BlockStatement StatementExpression MethodInvocation progress MemberReference i setValue StatementExpression MethodInvocation repaint TryStatement StatementExpression MethodInvocation Literal 10 wait CatchClause CatchClauseParameter InterruptedException ex StatementExpression MethodInvocation BinaryOperation + MemberReference statusText Literal "... showStatus StatementExpression MethodInvocation repaint TryStatement StatementExpression MethodInvocation Literal 1000 wait CatchClause CatchClauseParameter InterruptedException ex StatementExpression MethodInvocation progress Literal 0 setValue StatementExpression MethodInvocation Literal "" showStatus StatementExpression MethodInvocation repaint	1
MethodDeclaration Modifier public static removeResourceLocation FormalParameter ReferenceType String location ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator loc Cast ReferenceType String MethodInvocation iter next IfStatement MethodInvocation loc MemberReference location equals BlockStatement StatementExpression MethodInvocation MemberReference loc remove BreakStatement	0
MethodDeclaration Modifier public clear StatementExpression MethodInvocation map clear	0
MethodDeclaration Modifier public BasicType boolean add FormalParameter ReferenceType Object obj LocalVariableDeclaration BasicType boolean VariableDeclarator status MethodInvocation MemberReference obj add LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation MemberReference obj indexOf StatementExpression MethodInvocation This MemberReference index MemberReference index fireIntervalAdded ReturnStatement MemberReference status	0
MethodDeclaration Modifier public ReferenceType DiElement getDiElement ReturnStatement MemberReference diElement	0
MethodDeclaration Modifier public setExtensionPointsVisible FormalParameter BasicType boolean isVisible StatementExpression MethodInvocation MemberReference extensionPointsFigCompartment MemberReference isVisible setCompartmentVisible	0
MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showTypes MemberReference showem = StatementExpression Assignment MemberReference showTypesSet Literal true =	0
MethodDeclaration Modifier protected ReferenceType Context getContext ReturnStatement MemberReference context	0
MethodDeclaration Modifier public FormalParameter ReferenceType container StatementExpression MethodInvocation rootContainerAdapter MemberReference container	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression SuperMethodInvocation MemberReference col setLineColor StatementExpression MethodInvocation MethodInvocation Literal null setLineColor getStereotypeFig StatementExpression MethodInvocation MethodInvocation MemberReference col setLineColor getNameFig StatementExpression MethodInvocation body MemberReference col setLineColor IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference col setLineColor	0
MethodDeclaration Modifier private initFigs StatementExpression MethodInvocation Literal 0 setShadowSize StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference FigText END_EDITING setReturnAction getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameMin MethodInvocation MethodInvocation getMinimumSize getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference Literal 90 MemberReference nameMin height setBounds getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference Literal 90 MemberReference nameMin height setBounds getBigPort StatementExpression Assignment MemberReference ClassCreator ReferenceType FigPoly MemberReference LINE_COLOR MemberReference SOLID_FILL_COLOR = LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 75 Literal 75 Literal 77 Literal 75 Literal 73 Literal 75 LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 33 Literal 24 Literal 24 Literal 15 Literal 24 Literal 24 LocalVariableDeclaration ReferenceType Polygon VariableDeclarator polygon ClassCreator ReferenceType Polygon MemberReference MemberReference Literal 6 StatementExpression MethodInvocation MemberReference polygon setPolygon StatementExpression MethodInvocation Literal 100 Literal 10 Literal 5 Literal 18 setBounds StatementExpression MethodInvocation MethodInvocation Literal false setFilled getBigPort StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getBigPort StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MemberReference addFig	0
MethodDeclaration BasicType boolean ReturnStatement MemberReference showPath	0
MethodDeclaration Modifier public ReferenceType Object newExpression FormalParameter ReferenceType String lang FormalParameter ReferenceType String body ReturnStatement MethodInvocation Model MethodInvocation MemberReference lang MemberReference body createExpression getDataTypesFactory	0
MethodDeclaration Modifier protected ReferenceType Object buildVisibilityPopUp LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator visibilityMenu ClassCreator ReferenceType ArgoJMenu Literal StatementExpression MethodInvocation visibilityMenu ClassCreator ReferenceType MethodInvocation getOwner addRadioItem StatementExpression MethodInvocation visibilityMenu ClassCreator ReferenceType MethodInvocation getOwner addRadioItem StatementExpression MethodInvocation visibilityMenu ClassCreator ReferenceType MethodInvocation getOwner addRadioItem StatementExpression MethodInvocation visibilityMenu ClassCreator ReferenceType ActionVisibilityPackage MethodInvocation getOwner addRadioItem ReturnStatement MemberReference visibilityMenu	0
MethodDeclaration Modifier private parseConst FeatureNotSupportedException LocalVariableDeclaration BasicType long VariableDeclarator mask Cast BasicType long MemberReference Modifier ConstantMods IfStatement BinaryOperation != BinaryOperation & Cast BasicType long MemberReference curmods MemberReference mask Cast BasicType long MemberReference Modifier Empty StatementExpression MethodInvocation Literal "const declaration contains illegal modifiers" ReportError LocalVariableDeclaration ReferenceType ConstantNode VariableDeclarator node ClassCreator ReferenceType ConstantNode StatementExpression MethodInvocation typeStack MemberReference Constants MethodInvocation MemberReference node add peek IfStatement BinaryOperation > MethodInvocation curAttributes size Literal 0 BlockStatement StatementExpression Assignment MemberReference node attributes MemberReference curAttributes = StatementExpression Assignment MemberReference curAttributes ClassCreator ReferenceType NodeCollection TypeArgument ReferenceType AttributeNode = StatementExpression Assignment MemberReference node modifiers MemberReference curmods = StatementExpression Assignment MemberReference curmods MemberReference Modifier Empty = StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference node type MethodInvocation parseType = LocalVariableDeclaration BasicType boolean VariableDeclarator hasEqual Literal false StatementExpression MethodInvocation node.names MethodInvocation parseQualifiedIdentifier add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Equal BlockStatement StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference hasEqual Literal true = WhileStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Comma BlockStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation node.names MethodInvocation parseQualifiedIdentifier add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Equal BlockStatement StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference hasEqual Literal true = BlockStatement StatementExpression Assignment MemberReference hasEqual Literal false = IfStatement MemberReference hasEqual BlockStatement StatementExpression Assignment MemberReference node Value MethodInvocation parseConstExpr = StatementExpression MethodInvocation MemberReference TokenID Semi AssertAndAdvance	1
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object me IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference me isAClass getFacade MethodInvocation Model MethodInvocation MemberReference me isAInterface getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation GeneratorCpp MethodInvocation MemberReference me generateClassifierNameAndAncestors MethodInvocation toString getInstance ReturnStatement MethodInvocation className trim LocalVariableDeclaration ReferenceType String VariableDeclarator meName MethodInvocation Model MethodInvocation MemberReference me getName getFacade ReturnStatement TernaryExpression BinaryOperation != MemberReference meName Literal null MemberReference meName Literal ""	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Feature getOperationsAndReceptions FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Feature VariableDeclarator features Cast ReferenceType Classifier MemberReference handle LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Feature VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Feature ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator f MemberReference features BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference f ReferenceType Operation BinaryOperation instanceof MemberReference f ReferenceType Reception BlockStatement StatementExpression MethodInvocation result MemberReference f add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public final dtor_decl_spec RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType List VariableDeclarator declSpecs ClassCreator ReferenceType ArrayList BlockStatement DoStatement _loop256 Literal true BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_inline LITERAL__inline LITERAL___inline BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_inline match BreakStatement SwitchStatementCase LITERAL__inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__inline match BreakStatement SwitchStatementCase LITERAL___inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___inline match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation declSpecs Literal "inline" add BreakStatement SwitchStatementCase LITERAL_virtual BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_virtual match IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation declSpecs Literal "virtual" add BreakStatement SwitchStatementCase BlockStatement BreakStatement _loop256 IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m MemberReference declSpecs declarationSpecifiers	1
MethodDeclaration Modifier private StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig StatementExpression Assignment MemberReference bodyText ClassCreator ReferenceType FigBody Literal 0 Literal 0 Literal 0 Literal 0 = StatementExpression Assignment MemberReference regionCompartment ClassCreator ReferenceType FigRegionCompartment Literal 0 Literal 0 Literal 0 Literal 0 = StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MethodInvocation getBodyText addFig StatementExpression MethodInvocation MemberReference regionCompartment addFig StatementExpression MethodInvocation MethodInvocation getBounds setBounds	0
MethodDeclaration FormalParameter ReferenceType NotationRenderer nr StatementExpression Assignment MemberReference renderer MemberReference nr =	0
MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int index IfStatement BinaryOperation || BinaryOperation == MemberReference index MemberReference BOTTOM BinaryOperation == MemberReference index MemberReference LEFT BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier private fireToDoItemsRemoved FormalParameter Modifier final ReferenceType List TypeArgument ReferenceType ToDoItem theItems IfStatement BinaryOperation > MethodInvocation theItems size Literal 0 BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList LocalVariableDeclaration ReferenceType ToDoListEvent VariableDeclarator e Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType ToDoListListener BlockStatement IfStatement BinaryOperation == MemberReference e Literal null BlockStatement StatementExpression Assignment MemberReference e ClassCreator ReferenceType ToDoListEvent MemberReference theItems = StatementExpression Cast ReferenceType ToDoListListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType DiagramSettings getSettings IfStatement BinaryOperation == MemberReference settings Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Falling back to project-wide settings" debug LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getProject IfStatement BinaryOperation != MemberReference p Literal null BlockStatement ReturnStatement MethodInvocation p MethodInvocation getDefaultDiagramSettings getProjectSettings ReturnStatement MemberReference settings	1
MethodDeclaration Modifier public ReferenceType Collection getConstraints FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of Element" LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType Constraint VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Constraint LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Element MemberReference handle IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Constraint VariableDeclarator c MethodInvocation ns getOwnedRules BlockStatement IfStatement MethodInvocation c MethodInvocation MemberReference handle contains BlockStatement StatementExpression MethodInvocation result MemberReference c add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public BasicType int getTileWidth StatementExpression MethodInvocation LOG BinaryOperation + Literal "getTileWidth = " MemberReference width debug ReturnStatement MemberReference width	1
MethodDeclaration Modifier private updateRuleLabel StatementExpression MethodInvocation rulesLabel BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation Translator Literal localize Literal " (" MethodInvocation size Literal ")" setText	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter BasicType int i StatementExpression Assignment MemberReference critiquingInterval MemberReference i =	0
MethodDeclaration Modifier public final cast_expression RecognitionException TokenStreamException LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched402 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LPAREN MethodInvocation _tokenSet_66 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m402 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched402 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation MemberReference LPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_const LITERAL_const_cast LITERAL_volatile BlockStatement StatementExpression MethodInvocation type_qualifier BreakStatement SwitchStatementCase ID LITERAL__declspec LITERAL___declspec LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation simple_type_specifier BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall STAR AMPERSAND SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation ptr_operator BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RPAREN match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched402 Literal false = StatementExpression MethodInvocation MemberReference _m402 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched402 BlockStatement StatementExpression MethodInvocation MemberReference LPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_const LITERAL_const_cast LITERAL_volatile BlockStatement StatementExpression MethodInvocation type_qualifier BreakStatement SwitchStatementCase ID LITERAL__declspec LITERAL___declspec LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation simple_type_specifier BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall STAR AMPERSAND SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation ptr_operator BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RPAREN match StatementExpression MethodInvocation cast_expression IfStatement BinaryOperation && MethodInvocation _tokenSet_42 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_43 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation unary_expression BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier final protected mLongSuffix FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference LongSuffix = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase Literal 'l' BlockStatement StatementExpression MethodInvocation Literal 'l' match BreakStatement SwitchStatementCase Literal 'L' BlockStatement StatementExpression MethodInvocation Literal 'L' match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltForCharException Cast BasicType char MethodInvocation Literal 1 LA MethodInvocation getFilename MethodInvocation getLine MethodInvocation getColumn IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference target buildSequenceDiagram	0
MethodDeclaration Modifier public BasicType boolean remove FormalParameter ReferenceType Object o ReturnStatement BinaryOperation == MethodInvocation map MemberReference o remove Literal null	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAAction getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator argument MethodInvocation Model MethodInvocation createArgument getCommonBehaviorFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference argument getCommonBehaviorHelper StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference argument setTarget getInstance	0
MethodDeclaration Modifier public FormalParameter ReferenceType DocumentEvent ev TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filter MethodInvocation ev MethodInvocation Literal 0 MethodInvocation ev MethodInvocation getLength getDocument getText getDocument IfStatement MemberReference keyTyped BlockStatement StatementExpression Cast ReferenceType UMLComboBoxModel MethodInvocation getModel StatementExpression Assignment MemberReference keyTyped Literal false = CatchClause CatchClauseParameter BadLocationException e	1
MethodDeclaration Modifier public ReferenceType String getConfigurationValue ReturnStatement MethodInvocation MemberReference name MemberReference version	0
MethodDeclaration Modifier public BasicType boolean isEmpty ReturnStatement MethodInvocation isEmpty	0
MethodDeclaration Modifier public ReferenceType buildClassifierInState FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Collection state IfStatement BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation < MethodInvocation state size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Collection of states must have at least one element" LocalVariableDeclaration ReferenceType VariableDeclarator c MethodInvocation StatementExpression MethodInvocation c Cast ReferenceType Classifier MemberReference classifier setType StatementExpression MethodInvocation c MethodInvocation MemberReference state addAll getInState StatementExpression MethodInvocation c Cast ReferenceType Classifier MemberReference classifier setNamespace StatementExpression MethodInvocation c BinaryOperation + BinaryOperation + BinaryOperation + Cast ReferenceType Classifier MemberReference classifier Literal "inState[" Cast ReferenceType State MethodInvocation state MethodInvocation next iterator Literal "]" setName ReturnStatement MemberReference c	1
MethodDeclaration Modifier public BasicType int getRowCount IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ReturnStatement Literal 0 TryStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator tvs MethodInvocation Model MethodInvocation MemberReference target getTaggedValuesCollection getFacade ReturnStatement BinaryOperation + MethodInvocation tvs size Literal 1 CatchClause CatchClauseParameter InvalidElementException e ReturnStatement Literal 0	0
MethodDeclaration Modifier private final updateText FormalParameter ReferenceType String textValue TryStatement IfStatement BinaryOperation == MemberReference textValue Literal null BlockStatement StatementExpression Assignment MemberReference textValue Literal "" = LocalVariableDeclaration ReferenceType String VariableDeclarator currentValue MethodInvocation Literal 0 MethodInvocation getLength getText IfStatement BinaryOperation && MethodInvocation isFiring MethodInvocation ! textValue MemberReference currentValue equals BlockStatement StatementExpression MethodInvocation Literal false setFiring StatementExpression SuperMethodInvocation Literal 0 MethodInvocation getLength remove StatementExpression SuperMethodInvocation Literal 0 MemberReference textValue Literal null insertString CatchClause CatchClauseParameter BadLocationException b StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "A BadLocationException happened\n" Literal "The string to set was: " MethodInvocation getProperty MemberReference b error StatementExpression MethodInvocation Literal true setFiring	1
MethodDeclaration Modifier public Annotation Override renderingChanged StatementExpression SuperMethodInvocation renderingChanged StatementExpression MethodInvocation updateConditionText StatementExpression MethodInvocation updateLabel	0
MethodDeclaration Modifier public BasicType boolean isFilled ReturnStatement MethodInvocation MethodInvocation isFilled getBigPort	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType node LocalVariableDeclaration ReferenceType Object VariableDeclarator left MemberReference val StatementExpression Assignment MemberReference val Literal null = StatementExpression MethodInvocation MemberReference node IfStatement BinaryOperation != MethodInvocation node getAddOperator Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getAddOperator IfStatement BinaryOperation != MethodInvocation node getMultiplicativeExpression Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getMultiplicativeExpression LocalVariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation node getAddOperator LocalVariableDeclaration ReferenceType Object VariableDeclarator right MemberReference val StatementExpression Assignment MemberReference val Literal null = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference left Literal null BinaryOperation != MemberReference op Literal null BinaryOperation != MemberReference right Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference op ReferenceType AMinusAddOperator BlockStatement StatementExpression Assignment MemberReference val BinaryOperation - MethodInvocation MemberReference left MemberReference node asInteger MethodInvocation MemberReference right MemberReference node asInteger = IfStatement BinaryOperation instanceof MemberReference op ReferenceType BlockStatement StatementExpression Assignment MemberReference val BinaryOperation + MethodInvocation MemberReference left MemberReference node asInteger MethodInvocation MemberReference right MemberReference node asInteger = BlockStatement StatementExpression MethodInvocation MemberReference node error BlockStatement StatementExpression MethodInvocation MemberReference node error StatementExpression MethodInvocation MemberReference node outAAdditiveExpressionTail	0
MethodDeclaration Modifier public setMultiplicity FormalParameter ReferenceType Object handle FormalParameter ReferenceType String arg StatementExpression MethodInvocation impl MemberReference handle MemberReference arg setMultiplicity	0
MethodDeclaration Modifier public final using_declaration RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType String VariableDeclarator qid Literal "" StatementExpression MethodInvocation MemberReference LITERAL_using match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_namespace BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_namespace match StatementExpression Assignment MemberReference qid MethodInvocation qualified_id = BreakStatement SwitchStatementCase ID OPERATOR LITERAL_this LITERAL_true LITERAL_false SCOPE BlockStatement StatementExpression Assignment MemberReference qid MethodInvocation qualified_id = BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match	1
MethodDeclaration Modifier public ReferenceType Object getAssociation ReturnStatement ClassReference ReferenceType UmlAssociation	0
MethodDeclaration Modifier public Annotation Override BasicType boolean canAddEdge FormalParameter ReferenceType Object edge IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation MemberReference edge containsEdge BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator sourceModelElement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator destModelElement Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociation getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator conns MethodInvocation Model MethodInvocation MemberReference edge getConnections getFacade IfStatement BinaryOperation < MethodInvocation conns size Literal 2 BlockStatement StatementExpression MethodInvocation LOG Literal "Association rejected. Must have at least 2 ends" error ReturnStatement Literal false LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation conns iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnd0 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnd1 MethodInvocation iter next IfStatement BinaryOperation || BinaryOperation == MemberReference associationEnd0 Literal null BinaryOperation == MemberReference associationEnd1 Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Association rejected. An end is null" error ReturnStatement Literal false StatementExpression Assignment MemberReference sourceModelElement MethodInvocation Model MethodInvocation MemberReference associationEnd0 getType getFacade = StatementExpression Assignment MemberReference destModelElement MethodInvocation Model MethodInvocation MemberReference associationEnd1 getType getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference sourceModelElement MethodInvocation Model MethodInvocation MemberReference edge getAssociation getFacade = StatementExpression Assignment MemberReference destModelElement MethodInvocation Model MethodInvocation MemberReference edge getType getFacade = IfStatement BinaryOperation || BinaryOperation == MemberReference sourceModelElement Literal null BinaryOperation == MemberReference destModelElement Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Association end rejected. An end is null" error ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation ! MemberReference sourceModelElement containsEdge MethodInvocation ! MemberReference sourceModelElement containsNode BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Association end rejected. The source model element (" MethodInvocation sourceModelElement MethodInvocation getName getClass Literal ") must be on the error ReturnStatement Literal false IfStatement MethodInvocation ! MemberReference destModelElement containsNode BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Association end rejected. " Literal "The destination model element must be " Literal "on the diagram." error ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAGeneralization getFacade BlockStatement StatementExpression Assignment MemberReference sourceModelElement MethodInvocation Model MethodInvocation MemberReference edge getSpecific getFacade = StatementExpression Assignment MemberReference destModelElement MethodInvocation Model MethodInvocation MemberReference edge getGeneral getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isADependency getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator clients MethodInvocation Model MethodInvocation MemberReference edge getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator suppliers MethodInvocation Model MethodInvocation MemberReference edge getSuppliers getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference clients Literal null BinaryOperation == MemberReference suppliers Literal null BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference sourceModelElement MethodInvocation clients MethodInvocation next iterator = StatementExpression Assignment MemberReference destModelElement MethodInvocation suppliers MethodInvocation next iterator = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isALink getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator roles MethodInvocation Model MethodInvocation MemberReference edge getConnections getFacade IfStatement BinaryOperation < MethodInvocation roles size Literal 2 BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation roles iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator linkEnd0 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator linkEnd1 MethodInvocation iter next IfStatement BinaryOperation || BinaryOperation == MemberReference linkEnd0 Literal null BinaryOperation == MemberReference linkEnd1 Literal null BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference sourceModelElement MethodInvocation Model MethodInvocation MemberReference linkEnd0 getInstance getFacade = StatementExpression Assignment MemberReference destModelElement MethodInvocation Model MethodInvocation MemberReference linkEnd1 getInstance getFacade = IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference sourceModelElement Cast ReferenceType CommentEdge MemberReference edge = StatementExpression Assignment MemberReference destModelElement Cast ReferenceType CommentEdge MemberReference edge = IfStatement MethodInvocation Model MethodInvocation MemberReference edge getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator sources MethodInvocation Model MethodInvocation MemberReference edge getSources getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator targets MethodInvocation Model MethodInvocation MemberReference edge getTargets getFacade IfStatement BinaryOperation && BinaryOperation == MethodInvocation sources size Literal 1 BinaryOperation == MethodInvocation targets size Literal 1 BlockStatement StatementExpression Assignment MemberReference sourceModelElement MethodInvocation sources MethodInvocation next iterator = StatementExpression Assignment MemberReference destModelElement MethodInvocation targets MethodInvocation next iterator = BlockStatement StatementExpression MethodInvocation LOG Literal "Edge rejected. More than one source or target for a DirectedRelationship" error ReturnStatement Literal false BlockStatement ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation == MemberReference sourceModelElement Literal null BinaryOperation == MemberReference destModelElement Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Edge rejected. Its ends are not attached to anything" error ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation ! MemberReference sourceModelElement containsNode MethodInvocation ! MemberReference sourceModelElement containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Edge rejected. Its source end is attached to " MemberReference sourceModelElement Literal " but this is not in the graph model" error ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation ! MemberReference destModelElement containsNode MethodInvocation ! MemberReference destModelElement containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Edge rejected. Its destination end is attached to " MemberReference destModelElement Literal " but this is not in the graph model" error ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType ListSet TypeArgument ReferenceType Poster LocalVariableDeclaration ReferenceType ListSet TypeArgument ReferenceType Poster VariableDeclarator all MemberReference allPosters IfStatement BinaryOperation == MemberReference all Literal null BlockStatement StatementExpression Assignment MemberReference all ClassCreator ReferenceType ListSet TypeArgument ReferenceType Poster = SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement StatementExpression MethodInvocation all MethodInvocation item getPoster add StatementExpression Assignment MemberReference allPosters MemberReference all = ReturnStatement MemberReference all	0
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator theNewText ClassCreator ReferenceType StringBuilder Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator cis MethodInvocation Model MethodInvocation MemberReference modelElement getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference cis getFacade BlockStatement StatementExpression MethodInvocation theNewText Literal "[ " append StatementExpression MethodInvocation theNewText MethodInvocation NotationUtilityUml MethodInvocation Model MethodInvocation MemberReference cis getFacade formatNameList append StatementExpression MethodInvocation theNewText Literal " ]" append ReturnStatement MethodInvocation theNewText toString	0
MethodDeclaration Modifier protected fireIntervalRemoved FormalParameter ReferenceType Object source FormalParameter BasicType int index0 FormalParameter BasicType int index1 IfStatement BinaryOperation && MemberReference fireListEvents MemberReference ! buildingModel BlockStatement StatementExpression SuperMethodInvocation MemberReference source MemberReference index0 MemberReference index1 fireIntervalRemoved	1
MethodDeclaration Modifier public ReferenceType MultiEditorPane getEditorPane ReturnStatement MemberReference editorPane	0
MethodDeclaration Modifier public FormalParameter ReferenceType PropertyChangeEvent e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ProjectMember subList FormalParameter BasicType int arg0 FormalParameter BasicType int arg1 ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public static ReferenceType List TypeArgument ReferenceType File getFileList FormalParameter ReferenceType File fileArray LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType File VariableDeclarator files ClassCreator ReferenceType ArrayList TypeArgument ReferenceType File ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference fileArray length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file MemberReference ArraySelector MemberReference i fileArray StatementExpression MethodInvocation files MethodInvocation MemberReference file getList addAll ReturnStatement MemberReference files	1
MethodDeclaration Modifier private ReferenceType String generateGuard FormalParameter ReferenceType Object m IfStatement BinaryOperation != MemberReference m Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference m getExpression getFacade Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getExpression getFacade generateExpression ReturnStatement Literal ""	1
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent e LocalVariableDeclaration Modifier final BasicType int VariableDeclarator index MethodInvocation MethodInvocation getSelectedIndex getList StatementExpression MethodInvocation BinaryOperation && BinaryOperation > MemberReference index Literal - 1 BinaryOperation < MemberReference index BinaryOperation - MethodInvocation MethodInvocation getSize getModel Literal 1 setEnabled	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public static ReferenceType JFrame getInstance LocalVariableDeclaration ReferenceType Frame VariableDeclarator frame MethodInvocation getFrame IfStatement BinaryOperation instanceof MemberReference frame ReferenceType JFrame BlockStatement ReturnStatement Cast ReferenceType JFrame MemberReference frame ReturnStatement Literal null	1
MethodDeclaration Modifier private setDestPort FormalParameter ReferenceType FigEdge edge FormalParameter ReferenceType FigNode dest StatementExpression MethodInvocation edge MemberReference dest setDestPortFig StatementExpression MethodInvocation edge MemberReference dest setDestFigNode	0
MethodDeclaration Modifier static protected ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public static BasicType boolean getBoolean FormalParameter ReferenceType ExpressionContext context FormalParameter ReferenceType String varName LocalVariableDeclaration ReferenceType String VariableDeclarator stringValue MethodInvocation MemberReference context MemberReference varName getString IfStatement BinaryOperation != MemberReference stringValue Literal null BlockStatement IfStatement BinaryOperation || MethodInvocation stringValue Literal "0" equals MethodInvocation stringValue Literal "" equals BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement Literal true BlockStatement ReturnStatement Literal false	1
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated setOwner FormalParameter ReferenceType Object owner IfStatement BinaryOperation != MemberReference owner MethodInvocation getOwner BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "Owner must be set in constructor and left unchanged"	1
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType List VariableDeclarator classes ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator activeDiagram MethodInvocation DiagramUtils getActiveDiagram IfStatement BinaryOperation == MemberReference activeDiagram Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation activeDiagram getNamespace IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement WhileStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference ns getNamespace getFacade Literal null BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation MemberReference ns getNamespace getFacade = LocalVariableDeclaration ReferenceType Collection VariableDeclarator elems MethodInvocation Model MethodInvocation MemberReference ns MethodInvocation Model MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind getModelManagementHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator cls MemberReference elems BlockStatement IfStatement MethodInvocation MemberReference cls isCodeRelevantClassifier BlockStatement StatementExpression MethodInvocation classes MemberReference cls add LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference classes Literal true StatementExpression MethodInvocation Literal true setVisible	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_11 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 72057592426402688L Literal 18014398509481984L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType ArgListsExpression createArgListsExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body LocalVariableDeclaration ReferenceType ArgListsExpression VariableDeclarator myArgListsExpression MethodInvocation modelImpl MethodInvocation getDataTypes MethodInvocation MethodInvocation MemberReference language MemberReference body createArgListsExpression getUmlPackage StatementExpression SuperMethodInvocation MemberReference myArgListsExpression ReturnStatement MemberReference myArgListsExpression	0
MethodDeclaration Modifier public ReferenceType Object getGeneralization FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parent TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BinaryOperation instanceof MemberReference parent ReferenceType GeneralizableElement BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator MemberReference handle getGeneralizations WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Generalization MethodInvocation it next IfStatement BinaryOperation == MethodInvocation gen getParent MemberReference parent BlockStatement ReturnStatement MemberReference gen ReturnStatement Literal null ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public BasicType boolean isAException FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Signal	1
MethodDeclaration Modifier private ReferenceType findPanelFor FormalParameter ReferenceType Object trgt LocalVariableDeclaration ReferenceType VariableDeclarator panel MethodInvocation MemberReference trgt createPropPanel IfStatement BinaryOperation != MemberReference panel Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Factory created " MethodInvocation panel MethodInvocation getName getClass Literal " for " MethodInvocation trgt MethodInvocation getName getClass debug StatementExpression MethodInvocation MethodInvocation trgt getClass MemberReference panel put ReturnStatement MemberReference panel StatementExpression MethodInvocation LOG BinaryOperation + Literal "Failed to create a prop panel for : " MemberReference trgt error ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType String ToString ReturnStatement MethodInvocation String This MemberReference id valueOf	1
MethodDeclaration Modifier private static notInitialized FormalParameter ReferenceType String string ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + BinaryOperation + Literal "ProfileFacade's " MemberReference string Literal " isn't initialized!"	1
MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType String getEntryNames FormalParameter ReferenceType File file FormalParameter ReferenceType String extension IOException MalformedURLException LocalVariableDeclaration ReferenceType ZipInputStream VariableDeclarator zis ClassCreator ReferenceType ZipInputStream MethodInvocation MethodInvocation openStream MemberReference file toURL LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry MethodInvocation zis getNextEntry WhileStatement BinaryOperation != MemberReference entry Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation entry getName IfStatement BinaryOperation || BinaryOperation == MemberReference extension Literal null MethodInvocation name MemberReference extension endsWith BlockStatement StatementExpression MethodInvocation result MemberReference name add StatementExpression Assignment MemberReference entry MethodInvocation zis getNextEntry = StatementExpression MethodInvocation zis close ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation || BinaryOperation == MethodInvocation MemberReference SOURCE getValue Literal null BinaryOperation == MethodInvocation MemberReference DESTINATION getValue Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance StatementExpression MethodInvocation Model MethodInvocation MemberReference target getStateMachinesFactory BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation MemberReference SOURCE getValue MethodInvocation MemberReference DESTINATION getValue buildTransition getStateMachinesFactory	0
MethodDeclaration Modifier public register FormalParameter ReferenceType SuffixFilter f StatementExpression MethodInvocation otherFilters MemberReference f add	0
MethodDeclaration Modifier public static ReferenceType String getFieldName FormalParameter BasicType int x LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" SwitchStatement MemberReference x SwitchStatementCase MemberReference TokenID Bool StatementExpression Assignment MemberReference s Literal "Bool" = BreakStatement SwitchStatementCase MemberReference TokenID Byte StatementExpression Assignment MemberReference s Literal "Base" = BreakStatement SwitchStatementCase MemberReference TokenID Char StatementExpression Assignment MemberReference s Literal "Char" = BreakStatement SwitchStatementCase MemberReference TokenID Decimal StatementExpression Assignment MemberReference s Literal "Decimal" = BreakStatement SwitchStatementCase MemberReference TokenID Double StatementExpression Assignment MemberReference s Literal "Double" = BreakStatement SwitchStatementCase MemberReference TokenID Float StatementExpression Assignment MemberReference s Literal "Float" = BreakStatement SwitchStatementCase MemberReference TokenID Int StatementExpression Assignment MemberReference s Literal "Int" = BreakStatement SwitchStatementCase MemberReference TokenID Long StatementExpression Assignment MemberReference s Literal "Long" = BreakStatement SwitchStatementCase MemberReference TokenID Object StatementExpression Assignment MemberReference s Literal "Base" = BreakStatement SwitchStatementCase MemberReference TokenID SByte StatementExpression Assignment MemberReference s Literal "SByte" = BreakStatement SwitchStatementCase MemberReference TokenID Short StatementExpression Assignment MemberReference s Literal "Short" = BreakStatement SwitchStatementCase MemberReference TokenID String StatementExpression Assignment MemberReference s Literal "String" = BreakStatement SwitchStatementCase MemberReference TokenID UInt StatementExpression Assignment MemberReference s Literal "UInt" = BreakStatement SwitchStatementCase MemberReference TokenID ULong StatementExpression Assignment MemberReference s Literal "ULong" = BreakStatement SwitchStatementCase MemberReference TokenID UShort StatementExpression Assignment MemberReference s Literal "UShort" = BreakStatement SwitchStatementCase MemberReference TokenID Void StatementExpression Assignment MemberReference s Literal "Void" = BreakStatement SwitchStatementCase MemberReference TokenID This StatementExpression Assignment MemberReference s Literal "This" = BreakStatement SwitchStatementCase MemberReference TokenID Base StatementExpression Assignment MemberReference s Literal "Base" = BreakStatement SwitchStatementCase MemberReference TokenID If StatementExpression Assignment MemberReference s Literal "If" = BreakStatement SwitchStatementCase MemberReference TokenID Else StatementExpression Assignment MemberReference s Literal "Else" = BreakStatement SwitchStatementCase ReturnStatement Literal "" ReturnStatement MethodInvocation s toLowerCase	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getUMLClass getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter ReferenceType String text FormalParameter ReferenceType String name FormalParameter ReferenceType Object ns FormalParameter ReferenceType Object trans ReturnStatement MethodInvocation Model MethodInvocation MemberReference text MemberReference ns buildSignalEvent getStateMachinesFactory	0
MethodDeclaration Modifier private createEndFigs FormalParameter Modifier final ReferenceType Object sourceAssociationEnd FormalParameter Modifier final ReferenceType Object destAssociationEnd FormalParameter Modifier final ReferenceType DiagramSettings settings FormalParameter Modifier final BasicType int displacementAngle StatementExpression Assignment MemberReference srcEnd MethodInvocation MemberReference sourceAssociationEnd MemberReference settings Literal 0 Literal 5 BinaryOperation - Literal 180 MemberReference displacementAngle Literal 5 createEnd = StatementExpression Assignment MemberReference destEnd MethodInvocation MemberReference destAssociationEnd MemberReference settings Literal 100 Literal - 5 MemberReference displacementAngle Literal 5 createEnd =	1
MethodDeclaration Modifier public setTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object property FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType NotImplementedException	0
MethodDeclaration Modifier public static ReferenceType String generateBottom FormalParameter ReferenceType String id FormalParameter ReferenceType String indent IfStatement BinaryOperation == MemberReference useSections MemberReference SECT_NONE ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator s BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference indent Literal "// section " MemberReference id Literal " end" MemberReference LINE_SEPARATOR IfStatement BinaryOperation != MemberReference useSections MemberReference SECT_BRIEF BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + MemberReference indent Literal "// don't delete the previous line as " += StatementExpression Assignment MemberReference s Literal "it's needed to preserve source code of this " += StatementExpression Assignment MemberReference s BinaryOperation + Literal "autogenerated element" MemberReference LINE_SEPARATOR += ReturnStatement MemberReference s	1
MethodDeclaration Modifier protected ReferenceType JLabel createLabel FormalParameter ReferenceType String key ReturnStatement ClassCreator ReferenceType JLabel MethodInvocation Translator MemberReference key localize	0
MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade addAll ReturnStatement MemberReference list	0
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object theTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator t TernaryExpression BinaryOperation instanceof MemberReference theTarget ReferenceType Fig Cast ReferenceType Fig MemberReference theTarget MemberReference theTarget StatementExpression Assignment MemberReference shouldBeEnabled MethodInvocation Model MethodInvocation MemberReference t isAUMLElement getFacade = ReturnStatement MemberReference shouldBeEnabled	1
MethodDeclaration Modifier public ReferenceType Object createTimeEvent ReturnStatement MethodInvocation createTimeEvent	0
MethodDeclaration deleteElementImport FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ElementImport BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public ReferenceType String getReference ReturnStatement MemberReference reference	0
MethodDeclaration Modifier public componentShown FormalParameter ReferenceType ComponentEvent e StatementExpression MethodInvocation MemberReference target setTargetInternal	0
MethodDeclaration Modifier public ReferenceType Object getElement ReturnStatement ClassReference ReferenceType Element	0
MethodDeclaration Modifier public ReferenceType Object getTagDefinition FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BlockStatement ReturnStatement Cast ReferenceType TaggedValue MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public BasicType boolean isEnabled LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance ReturnStatement BinaryOperation && SuperMethodInvocation isEnabled MethodInvocation Model getFacade	1
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb Literal "lock(" append StatementExpression MethodInvocation Target MemberReference sb ToSource StatementExpression MethodInvocation sb Literal ")" append StatementExpression MethodInvocation Statements MemberReference sb ToSource	1
MethodDeclaration Modifier public Annotation Override ReferenceType String instructions ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public putValue FormalParameter ReferenceType String key FormalParameter ReferenceType Object value StatementExpression MethodInvocation dummyAction MemberReference key MemberReference value putValue	0
MethodDeclaration Modifier public addAction FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object action IfStatement BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType ActionSequence BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException TryStatement StatementExpression Cast ReferenceType ActionSequence MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier final protected FormalParameter BasicType int iMinWidth IfStatement MethodInvocation ! TM_INFO_BLOCK_LOGGED This MethodInvocation getClass MethodInvocation toString containsKey BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbHeadLine ClassCreator ReferenceType StringBuffer Literal "| Module " StatementExpression MethodInvocation sbHeadLine BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getName Literal " " MethodInvocation MemberReference ModuleInterface Literal " |" append LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbCopyLine ClassCreator ReferenceType StringBuffer Literal "| Copyright (c) 2006, " StatementExpression MethodInvocation sbCopyLine BinaryOperation + MethodInvocation MemberReference ModuleInterface AUTHOR Literal " |" append LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbDescLine ClassCreator ReferenceType StringBuffer Literal "| " StatementExpression MethodInvocation sbDescLine BinaryOperation + MethodInvocation MemberReference ModuleInterface DESCRIPTION Literal " |" append IfStatement BinaryOperation > MethodInvocation sbHeadLine length MemberReference iMinWidth BlockStatement StatementExpression Assignment MemberReference iMinWidth MethodInvocation sbHeadLine length = IfStatement BinaryOperation > MethodInvocation sbCopyLine length MemberReference iMinWidth BlockStatement StatementExpression Assignment MemberReference iMinWidth MethodInvocation sbCopyLine length = IfStatement BinaryOperation > MethodInvocation sbDescLine length MemberReference iMinWidth BlockStatement StatementExpression Assignment MemberReference iMinWidth MethodInvocation sbDescLine length = LocalVariableDeclaration ReferenceType String VariableDeclarator sRulerLine Literal "+" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i BinaryOperation - MemberReference iMinWidth Literal 2 MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference sRulerLine Literal "-" += StatementExpression Assignment MemberReference sRulerLine Literal "+" += LocalVariableDeclaration ReferenceType String VariableDeclarator sEmptyLine Literal "" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i MemberReference iMinWidth MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference sEmptyLine Literal " " += WhileStatement BinaryOperation < MethodInvocation sbHeadLine length MemberReference iMinWidth BlockStatement StatementExpression MethodInvocation sbHeadLine BinaryOperation - MethodInvocation sbHeadLine length Literal 2 Literal " " insert IfStatement BinaryOperation < MethodInvocation sbHeadLine length MemberReference iMinWidth BlockStatement StatementExpression MethodInvocation sbHeadLine Literal 2 Literal " " insert WhileStatement BinaryOperation < MethodInvocation sbCopyLine length MemberReference iMinWidth BlockStatement StatementExpression MethodInvocation sbCopyLine BinaryOperation - MethodInvocation sbCopyLine length Literal 2 Literal " " insert WhileStatement BinaryOperation < MethodInvocation sbDescLine length MemberReference iMinWidth BlockStatement StatementExpression MethodInvocation sbDescLine BinaryOperation - MethodInvocation sbDescLine length Literal 2 Literal " " insert StatementExpression MethodInvocation LOG MemberReference sEmptyLine info StatementExpression MethodInvocation LOG MemberReference sRulerLine info StatementExpression MethodInvocation LOG MethodInvocation sbHeadLine toString info StatementExpression MethodInvocation LOG MemberReference sRulerLine info StatementExpression MethodInvocation LOG MethodInvocation sbCopyLine toString info StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "| " MethodInvocation sEmptyLine Literal 4 substring Literal " |" info StatementExpression MethodInvocation LOG MethodInvocation sbDescLine toString info StatementExpression MethodInvocation LOG MemberReference sRulerLine info StatementExpression MethodInvocation LOG MemberReference sEmptyLine info StatementExpression MethodInvocation TM_INFO_BLOCK_LOGGED This MethodInvocation getClass MethodInvocation toString Literal "true" put	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Parameter FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement ReturnStatement Cast ReferenceType BehavioralFeature MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Event BlockStatement ReturnStatement Cast ReferenceType Event MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentList	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize LocalVariableDeclaration Modifier final ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameDisplay LocalVariableDeclaration BasicType int VariableDeclarator width MemberReference nameDim width LocalVariableDeclaration BasicType int VariableDeclarator height MemberReference nameDim height LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation + BinaryOperation + MemberReference width MethodInvocation getRightMargin MethodInvocation getLeftMargin LocalVariableDeclaration Modifier final BasicType int VariableDeclarator h BinaryOperation + BinaryOperation + MemberReference height MethodInvocation getTopMargin MethodInvocation getBottomMargin StatementExpression Assignment MemberReference w MethodInvocation Math MemberReference w MemberReference MIN_WIDTH max = ReturnStatement ClassCreator ReferenceType Dimension MemberReference w MemberReference h	0
MethodDeclaration Modifier public final mCharLiteral FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference CharLiteral = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal '\'' match BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '\\' MethodInvocation _tokenSet_3 MethodInvocation Literal 2 LA member MethodInvocation _tokenSet_4 MethodInvocation Literal 3 LA member BlockStatement StatementExpression MethodInvocation Literal false mEscape IfStatement BinaryOperation && BinaryOperation && MethodInvocation _tokenSet_5 MethodInvocation Literal 1 LA member BinaryOperation == MethodInvocation Literal 2 LA Literal '\'' Literal true BlockStatement BlockStatement StatementExpression MethodInvocation MemberReference _tokenSet_5 match BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltForCharException Cast BasicType char MethodInvocation Literal 1 LA MethodInvocation getFilename MethodInvocation getLine MethodInvocation getColumn StatementExpression MethodInvocation Literal '\'' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception	0
MethodDeclaration Modifier public removeOwnedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of Element" IfStatement BinaryOperation instanceof MemberReference value ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of Element" StatementExpression MethodInvocation editingDomain MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MethodInvocation Cast ReferenceType Element MemberReference value getRunnableClassForRemoveCommand Literal "Remove the element from the owner #" MemberReference value MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier public Annotation Override ReferenceType Icon getClarifier ReturnStatement MethodInvocation ClClassName getTheInstance	0
MethodDeclaration assertIsAClassifier FormalParameter ReferenceType Object modelElement AssertStatement MethodInvocation MethodInvocation MemberReference modelElement isAClassifier getFacade BinaryOperation + BinaryOperation + Literal "modelElement must be a Classifier; its name is \"" MethodInvocation MethodInvocation MemberReference modelElement getName getFacade Literal "\"."	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType textArea StatementExpression MethodInvocation textArea Literal 2 setRows StatementExpression MethodInvocation textArea Literal true StatementExpression MethodInvocation textArea Literal true setWrapStyleWord StatementExpression MethodInvocation textArea Literal false setEnabled StatementExpression MethodInvocation textArea MethodInvocation textArea getForeground LocalVariableDeclaration Modifier final ReferenceType Color VariableDeclarator inactiveColor MethodInvocation UIManager Literal getColor IfStatement BinaryOperation != MemberReference inactiveColor Literal null BlockStatement StatementExpression MethodInvocation textArea ClassCreator ReferenceType Color MethodInvocation inactiveColor setBackground	0
MethodDeclaration Modifier public BasicType boolean isStereotypeInh FormalParameter ReferenceType Object object FormalParameter ReferenceType String name FormalParameter ReferenceType String base IfStatement BinaryOperation instanceof MemberReference object ReferenceType Stereotype BlockStatement ReturnStatement Literal false TryStatement IfStatement MethodInvocation MemberReference object MemberReference name MemberReference base isStereotype BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation modelImpl MethodInvocation MemberReference object getSupertypes MethodInvocation iterator getCoreHelper WhileStatement MethodInvocation it hasNext BlockStatement IfStatement MethodInvocation MethodInvocation it next MemberReference name MemberReference base isStereotypeInh BlockStatement ReturnStatement Literal true CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal false	1
MethodDeclaration Modifier public setLineColor FormalParameter ReferenceType Color c StatementExpression SuperMethodInvocation MemberReference c setLineColor LocalVariableDeclaration ReferenceType ArrowHead VariableDeclarator arrow MethodInvocation getDestArrowHead IfStatement BinaryOperation != MemberReference arrow Literal null BlockStatement StatementExpression MethodInvocation arrow MethodInvocation getLineColor setLineColor	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Association getAssociations FormalParameter ReferenceType Object from FormalParameter ReferenceType Object to IfStatement BinaryOperation || BinaryOperation == MemberReference from Literal null BinaryOperation == MemberReference to Literal null BlockStatement ReturnStatement MethodInvocation Collections emptyList IfStatement BinaryOperation || BinaryOperation instanceof MemberReference from ReferenceType Classifier BinaryOperation instanceof MemberReference to ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "'from' and 'to' must be instances of Classifier" LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Association VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Association ForStatement EnhancedForControl VariableDeclaration ReferenceType Association VariableDeclarator a Cast ReferenceType Classifier MemberReference from BlockStatement IfStatement Cast ReferenceType Classifier MemberReference to BlockStatement StatementExpression MethodInvocation result MemberReference a add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override computeRouteImpl StatementExpression SuperMethodInvocation computeRouteImpl StatementExpression MethodInvocation messages updateArrows	0
MethodDeclaration Modifier public Annotation Override removeFromDiagramImpl IfStatement BinaryOperation != MemberReference notationProviderBody Literal null BlockStatement StatementExpression MethodInvocation notationProviderBody cleanListener StatementExpression SuperMethodInvocation removeFromDiagramImpl	0
MethodDeclaration Modifier public addStereotype FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereo StatementExpression MethodInvocation MemberReference modelElement MethodInvocation Collections MemberReference stereo singleton addAllStereotypes	0
MethodDeclaration Modifier public setPriority FormalParameter BasicType int p StatementExpression Assignment MemberReference priority MemberReference p =	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation me getSource IfStatement BinaryOperation || BinaryOperation != MethodInvocation me getClickCount Literal 2 BinaryOperation == MethodInvocation perspectiveList getSelectedValue Literal null BlockStatement ReturnStatement IfStatement BinaryOperation && BinaryOperation == MemberReference src MemberReference ruleLibraryList MethodInvocation isEnabled BlockStatement StatementExpression MethodInvocation doAddRule IfStatement BinaryOperation && BinaryOperation == MemberReference src MemberReference MethodInvocation isEnabled BlockStatement StatementExpression MethodInvocation doRemoveRule	1
MethodDeclaration Modifier static ReferenceType Collection TypeArgument ReferenceType ContextActionFactory getFactories ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object buildStereotype FormalParameter ReferenceType Object element FormalParameter ReferenceType String name FormalParameter ReferenceType Object model FormalParameter ReferenceType Collection models ReturnStatement Literal null	0
MethodDeclaration Modifier private buildValidConnectionMap ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference VALID_CONNECTIONS length MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Class TypeArgument ? VariableDeclarator connection MemberReference ArraySelector MemberReference i ArraySelector Literal 0 VALID_CONNECTIONS LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Class TypeArgument ? VariableDeclarator validItems MethodInvocation validConnectionMap MemberReference connection get IfStatement BinaryOperation == MemberReference validItems Literal null BlockStatement StatementExpression Assignment MemberReference validItems ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Class TypeArgument ? = StatementExpression MethodInvocation validConnectionMap MemberReference connection MemberReference validItems put IfStatement BinaryOperation < MemberReference ArraySelector MemberReference i MemberReference length VALID_CONNECTIONS Literal 3 BlockStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator modeElementPair ArrayCreator ReferenceType Class Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 modeElementPair MemberReference ArraySelector MemberReference i ArraySelector Literal 1 VALID_CONNECTIONS = StatementExpression Assignment MemberReference ArraySelector Literal 1 modeElementPair MemberReference ArraySelector MemberReference i ArraySelector Literal 1 VALID_CONNECTIONS = StatementExpression MethodInvocation validItems MemberReference modeElementPair add BlockStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator modeElementPair ArrayCreator ReferenceType Class Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 modeElementPair MemberReference ArraySelector MemberReference i ArraySelector Literal 1 VALID_CONNECTIONS = StatementExpression Assignment MemberReference ArraySelector Literal 1 modeElementPair MemberReference ArraySelector MemberReference i ArraySelector Literal 2 VALID_CONNECTIONS = StatementExpression MethodInvocation validItems MemberReference modeElementPair add IfStatement BinaryOperation < MemberReference ArraySelector MemberReference i MemberReference length VALID_CONNECTIONS Literal 4 BlockStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator reversedModeElementPair ArrayCreator ReferenceType Class Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 reversedModeElementPair MemberReference ArraySelector MemberReference i ArraySelector Literal 2 VALID_CONNECTIONS = StatementExpression Assignment MemberReference ArraySelector Literal 1 reversedModeElementPair MemberReference ArraySelector MemberReference i ArraySelector Literal 1 VALID_CONNECTIONS = StatementExpression MethodInvocation validItems MemberReference reversedModeElementPair add	1
MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object t StatementExpression Assignment MemberReference target Cast ReferenceType ToDoItem MemberReference t =	0
MethodDeclaration Modifier public BasicType boolean enable IfStatement BinaryOperation == MemberReference myLang Literal null BlockStatement StatementExpression Assignment MemberReference myLang MethodInvocation MemberReference GeneratorCpp LANGUAGE_NAME Literal "C++" MethodInvocation Literal lookupIconResource makeLanguage = StatementExpression MethodInvocation MethodInvocation MemberReference myLang MethodInvocation GeneratorCpp getInstance getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getBehaviors getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public BasicType boolean isANode FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Node	0
MethodDeclaration Modifier protected setOptions FormalParameter Modifier final ReferenceType Collection options StatementExpression Assignment This MemberReference options MemberReference options =	0
MethodDeclaration Modifier public Annotation Override setDiagram FormalParameter ReferenceType Diagram diagram StatementExpression Cast ReferenceType ArgoDiagram MemberReference diagram StatementExpression SuperMethodInvocation MemberReference diagram setDiagram	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator inf MemberReference dm LocalVariableDeclaration ReferenceType Collection VariableDeclarator sf MethodInvocation Model MethodInvocation MemberReference inf getFeatures getFacade IfStatement BinaryOperation == MemberReference sf Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation sf iterator MethodInvocation iter hasNext BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation iter next isAStructuralFeature getFacade BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType InputSource inputSource SAXException StatementExpression MethodInvocation LOG Literal "Reading ToDo list" info StatementExpression MethodInvocation MemberReference inputSource parse	0
MethodDeclaration Modifier public ReferenceType Collection getSourceFlows FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference BASE instructions	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement MethodInvocation settings isUseGuillemets toString	0
MethodDeclaration Modifier public Annotation Override ReferenceType Point connectionPoint FormalParameter ReferenceType Point anotherPt ReturnStatement MethodInvocation MethodInvocation MemberReference anotherPt connectionPoint getBigPort	0
MethodDeclaration Modifier public ReferenceType Collection getSupplierDependencies FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation Collections MethodInvocation MethodInvocation getCore MethodInvocation MethodInvocation Cast ReferenceType ModelElement MemberReference handle MemberReference handle getRefOutermostPackage unmodifiableCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier private ReferenceType String value2String FormalParameter ReferenceType Object v IfStatement MethodInvocation Model MethodInvocation MemberReference v isAExpression getFacade BlockStatement StatementExpression Assignment MemberReference v MethodInvocation Model MethodInvocation MemberReference v getBody getFacade = IfStatement Literal MethodInvocation MemberReference v equals "" BlockStatement StatementExpression Assignment MemberReference v Literal "(unspecified)" = IfStatement MethodInvocation Model MethodInvocation MemberReference v isAUMLElement getFacade BlockStatement StatementExpression Assignment MemberReference v MethodInvocation Model MethodInvocation MemberReference v getName getFacade = IfStatement Literal MethodInvocation MemberReference v equals "" BlockStatement StatementExpression Assignment MemberReference v MethodInvocation Translator Literal "misc.name.anon" localize = IfStatement BinaryOperation instanceof MemberReference v ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator acc Literal "[" LocalVariableDeclaration ReferenceType Collection VariableDeclarator collection Cast ReferenceType Collection MemberReference v ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference collection BlockStatement StatementExpression Assignment MemberReference acc BinaryOperation + MethodInvocation MemberReference object value2String Literal "," += StatementExpression Assignment MemberReference acc Literal "]" += StatementExpression Assignment MemberReference v MemberReference acc = ReturnStatement BinaryOperation + Literal "" MemberReference v	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference MemberReference getTagDefinition	0
MethodDeclaration Modifier protected updateBounds IfStatement MemberReference ! BlockStatement ReturnStatement LocalVariableDeclaration Modifier final ReferenceType Rectangle VariableDeclarator bbox MethodInvocation getBounds IfStatement MethodInvocation BlockStatement LocalVariableDeclaration Modifier final ReferenceType Dimension VariableDeclarator minSize MethodInvocation getMinimumSize StatementExpression Assignment MemberReference bbox width MethodInvocation Math MemberReference bbox width MemberReference minSize width max = StatementExpression Assignment MemberReference bbox height MethodInvocation Math MemberReference bbox height MemberReference minSize height max = IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation != MemberReference bbox x MethodInvocation getX BinaryOperation != MemberReference bbox y MethodInvocation getY BinaryOperation != MemberReference bbox width MethodInvocation getWidth BinaryOperation != MemberReference bbox height MethodInvocation getHeight BlockStatement StatementExpression MethodInvocation MemberReference bbox x MemberReference bbox y MemberReference bbox width MemberReference bbox height setBounds	0
MethodDeclaration Modifier public setBody FormalParameter ReferenceType Object handle FormalParameter ReferenceType String body IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation != MemberReference body Literal null BlockStatement StatementExpression Cast ReferenceType MemberReference handle	1
MethodDeclaration Modifier public BasicType boolean isAElementImport FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementImport	0
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation Literal false setFilled StatementExpression MethodInvocation outlineFig MemberReference f setFilled StatementExpression MethodInvocation urCorner MemberReference f setFilled	0
MethodDeclaration Modifier private addCheckboxes FormalParameter ReferenceType ControlData controlData FormalParameter ReferenceType Element controlElement LocalVariableDeclaration Modifier final ReferenceType NodeList VariableDeclarator checkBoxElements MethodInvocation controlElement Literal getElementsByTagName ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation checkBoxElements getLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Element VariableDeclarator cbNode Cast ReferenceType Element MethodInvocation checkBoxElements MemberReference i item LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator checkBoxType MethodInvocation cbNode MethodInvocation Literal "type" getNamedItem MethodInvocation getNodeValue getAttributes LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator checkBoxName MethodInvocation cbNode MethodInvocation Literal "name" getNamedItem MethodInvocation getNodeValue getAttributes LocalVariableDeclaration ReferenceType CheckBoxData VariableDeclarator cbd ClassCreator ReferenceType CheckBoxData MethodInvocation metaTypeByName MemberReference checkBoxType get MemberReference checkBoxName StatementExpression MethodInvocation controlData MemberReference cbd addCheckbox	0
MethodDeclaration Modifier public ReferenceType Object createMultiplicity FormalParameter ReferenceType List ThrowStatement ClassCreator ReferenceType NotImplementedException	0
MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration BasicType int VariableDeclarator tab MethodInvocation tabs getSelectedIndex IfStatement BinaryOperation != MemberReference tab Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator tabBounds MethodInvocation tabs MemberReference tab getBoundsAt IfStatement MethodInvocation ! tabBounds MethodInvocation me getX MethodInvocation me getY contains BlockStatement ReturnStatement IfStatement BinaryOperation == MethodInvocation me getClickCount Literal 1 BlockStatement StatementExpression MethodInvocation MemberReference tab mySingleClick StatementExpression MethodInvocation me consume IfStatement BinaryOperation >= MethodInvocation me getClickCount Literal 2 BlockStatement StatementExpression MethodInvocation MemberReference tab myDoubleClick StatementExpression MethodInvocation me consume	0
MethodDeclaration Modifier public ReferenceType String getUmlVersion ReturnStatement Literal "2.2"	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType String name FormalParameter BasicType boolean interfacesOnly FormalParameter ReferenceType Profile profile ClassifierNotFoundException LocalVariableDeclaration ReferenceType Object VariableDeclarator mClassifier MethodInvocation Model MethodInvocation MemberReference mPackage MemberReference name lookupIn getFacade IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator classifier LocalVariableDeclaration ReferenceType String VariableDeclarator clazzName MemberReference name IfStatement MethodInvocation ! Model MethodInvocation MemberReference mPackage isAModel getFacade BlockStatement StatementExpression Assignment MemberReference clazzName BinaryOperation + BinaryOperation + MemberReference javaName Literal "." MemberReference name = StatementExpression Assignment MemberReference classifier MethodInvocation MemberReference clazzName MemberReference interfacesOnly findClass = IfStatement BinaryOperation != MemberReference classifier Literal null BlockStatement TryStatement IfStatement MethodInvocation classifier isInterface BlockStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference name MemberReference mPackage buildInterface getCoreFactory = BlockStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference name MemberReference mPackage buildClass getCoreFactory = CatchClause CatchClauseParameter Exception e StatementExpression Assignment MemberReference mClassifier Literal null = IfStatement BinaryOperation != MemberReference mClassifier Literal null BlockStatement StatementExpression MethodInvocation MemberReference mClassifier setGeneratedTag IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation getContext Literal null BlockStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation MethodInvocation MemberReference name MemberReference interfacesOnly MemberReference profile get getContext = BlockStatement IfStatement BinaryOperation && MemberReference ! interfacesOnly BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation name Literal "int" equals MethodInvocation name Literal "long" equals MethodInvocation name Literal "short" equals MethodInvocation name Literal "byte" equals MethodInvocation name Literal "char" equals MethodInvocation name Literal "float" equals MethodInvocation name Literal "double" equals MethodInvocation name Literal "boolean" equals MethodInvocation name Literal "void" equals BinaryOperation != MethodInvocation name Literal "[]" indexOf Literal - 1 BlockStatement IfStatement BinaryOperation != MemberReference profile Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MethodInvocation profile MethodInvocation iterator MethodInvocation next getProfilePackages StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference m MemberReference name lookupIn getFacade = CatchClause CatchClauseParameter Exception e StatementExpression Assignment MemberReference mClassifier Literal null = IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference name MemberReference mPackage buildDataType getCoreFactory = IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement ThrowStatement ClassCreator ReferenceType ClassifierNotFoundException MemberReference name ReturnStatement MemberReference mClassifier	1
MethodDeclaration Modifier protected ReferenceType Object search FormalParameter ReferenceType Object item LocalVariableDeclaration ReferenceType String VariableDeclarator text Cast ReferenceType String MemberReference item LocalVariableDeclaration ReferenceType ComboBoxModel VariableDeclarator model MethodInvocation getModel ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation model getSize MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation model MemberReference i getElementAt IfStatement MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade BlockStatement IfStatement BinaryOperation instanceof MethodInvocation getRenderer ReferenceType UMLListCellRenderer2 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator labelText Cast ReferenceType UMLListCellRenderer2 MethodInvocation getRenderer IfStatement BinaryOperation && BinaryOperation != MemberReference labelText Literal null MethodInvocation labelText MemberReference text startsWith BlockStatement ReturnStatement MemberReference element IfStatement MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MemberReference element LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference elem getName getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name MemberReference text startsWith BlockStatement ReturnStatement MemberReference element ReturnStatement Literal null	1
MethodDeclaration deleteDependency FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Dependency BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator rootModel MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager TryStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference metaType MemberReference source Literal null MemberReference dest Literal null Literal null MemberReference rootModel buildConnection getUmlFactory CatchClause CatchClauseParameter IllegalModelElementConnectionException e1 StatementExpression MethodInvocation LOG Literal "Exception" MemberReference e1 error	0
MethodDeclaration Modifier public BasicType boolean isPublic FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MethodInvocation MemberReference handle getVisibility equals	0
MethodDeclaration Modifier public FormalParameter ReferenceType notationName IfStatement MethodInvocation MemberReference notationName containsKey BlockStatement StatementExpression Assignment MemberReference defaultLanguage MemberReference notationName =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference mMmeiTarget setTarget	0
MethodDeclaration Modifier public BasicType int getLower FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAAssociationEnd BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator lower Literal 0 LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator end Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation != MethodInvocation end getMultiplicity Literal null BlockStatement StatementExpression Assignment MemberReference lower MethodInvocation MethodInvocation end getMultiplicity getLower = ReturnStatement MemberReference lower IfStatement MethodInvocation MemberReference handle isAMultiplicity BlockStatement LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator low Cast ReferenceType Multiplicity MemberReference handle LocalVariableDeclaration ReferenceType List VariableDeclarator ranges ClassCreator ReferenceType ArrayList MethodInvocation low getRange ReturnStatement MethodInvocation MethodInvocation ranges Literal 0 get getLower IfStatement MethodInvocation MemberReference handle isAMultiplicityRange BlockStatement LocalVariableDeclaration ReferenceType MultiplicityRange VariableDeclarator low Cast ReferenceType MultiplicityRange MemberReference handle ReturnStatement MethodInvocation low getLower CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e StatementExpression MethodInvocation MemberReference handle illegalArgument ReturnStatement Literal 0	1
MethodDeclaration Modifier protected setEncloser FormalParameter ReferenceType Fig e StatementExpression Assignment This MemberReference encloser MemberReference e =	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Rectangle getTrapRects LocalVariableDeclaration ReferenceType List VariableDeclarator regions MethodInvocation Model MethodInvocation MethodInvocation getOwner getRegions getStateMachinesHelper LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType Rectangle VariableDeclarator rects ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Rectangle MethodInvocation regions size IfStatement MethodInvocation regions isEmpty BlockStatement StatementExpression MethodInvocation rects MethodInvocation regionCompartment getBounds add BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType DiagramElement VariableDeclarator f MethodInvocation regionCompartment getDiagramElements BlockStatement StatementExpression MethodInvocation rects Cast ReferenceType Fig MemberReference f add ReturnStatement MemberReference rects	1
MethodDeclaration Modifier private ReferenceType String generateEvent FormalParameter ReferenceType Object m IfStatement BinaryOperation == MemberReference m Literal null BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator event ClassCreator ReferenceType StringBuffer IfStatement MethodInvocation Model MethodInvocation MemberReference m isAChangeEvent getFacade BlockStatement StatementExpression MethodInvocation event Literal "when(" append StatementExpression MethodInvocation event MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getExpression getFacade generateExpression append StatementExpression MethodInvocation event Literal ")" append IfStatement MethodInvocation Model MethodInvocation MemberReference m getFacade BlockStatement StatementExpression MethodInvocation event Literal "after(" append StatementExpression MethodInvocation event MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getExpression getFacade generateExpression append StatementExpression MethodInvocation event Literal ")" append IfStatement MethodInvocation Model MethodInvocation MemberReference m getFacade BlockStatement StatementExpression MethodInvocation event MethodInvocation Model MethodInvocation MemberReference m getName getFacade append IfStatement MethodInvocation Model MethodInvocation MemberReference m isACallEvent getFacade BlockStatement StatementExpression MethodInvocation event MethodInvocation Model MethodInvocation MemberReference m getName getFacade append StatementExpression MethodInvocation event MethodInvocation MemberReference m generateParameterList append ReturnStatement MethodInvocation event toString	1
MethodDeclaration Modifier public ReferenceType Object getContainer FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Vertex BlockStatement ReturnStatement Cast ReferenceType Vertex MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Transition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier protected updateLayout FormalParameter ReferenceType UmlChangeEvent event AssertStatement BinaryOperation != MemberReference event Literal null IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation getOwner MethodInvocation event getSource BinaryOperation != MemberReference properties Literal null MethodInvocation Arrays MethodInvocation MethodInvocation event getPropertyName contains MemberReference properties asList BinaryOperation instanceof MemberReference event ReferenceType AttributeChangeEvent BlockStatement StatementExpression MethodInvocation setText	1
MethodDeclaration Modifier public ReferenceType List getMetaTypes ReturnStatement MemberReference metaTypes	0
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase DESCRIPTION ReturnStatement Literal "Java import from files" SwitchStatementCase AUTHOR ReturnStatement Literal "Andreas SwitchStatementCase ReturnStatement Literal "0.2 - $Id: 231 2010-01-12 linus $" SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String generateFiles FormalParameter ReferenceType Collection elements FormalParameter ReferenceType String path FormalParameter BasicType boolean deps StatementExpression MethodInvocation LOG Literal "generateFiles() debug ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference elements BlockStatement StatementExpression MethodInvocation MemberReference element MemberReference path generateFile ReturnStatement MethodInvocation TempFileUtils ClassCreator ReferenceType File MemberReference path readFileNames	1
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object source ReturnStatement MethodInvocation Model MethodInvocation MemberReference source getContext getFacade	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType UseCase getIncludedUseCases FormalParameter ReferenceType Object ausecase IfStatement BinaryOperation instanceof MemberReference ausecase ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType UseCase VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType UseCase ForStatement EnhancedForControl VariableDeclaration ReferenceType Include VariableDeclarator include Cast ReferenceType UseCase MemberReference ausecase BlockStatement StatementExpression MethodInvocation result MethodInvocation include getAddition add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType ToDoList list StatementExpression MethodInvocation toDoList MemberReference list removeAll	0
MethodDeclaration Modifier public Annotation Override BasicType boolean doesAccept FormalParameter ReferenceType Object objectToAccept IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAClassifierRole getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAMessage getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAComment getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAClassifier getFacade BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAModelElement getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getAnnotatedElements MethodInvocation MemberReference element contains getFacade	0
MethodDeclaration Modifier public BasicType boolean isAStereotype FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype	0
MethodDeclaration Modifier protected BasicType boolean isFireListEvents ReturnStatement MemberReference fireListEvents	0
MethodDeclaration Modifier public BasicType boolean isEmpty ReturnStatement MethodInvocation ns isEmpty	0
MethodDeclaration Modifier public execute LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType GraphModel VariableDeclarator gm MethodInvocation ce getGraphModel IfStatement BinaryOperation instanceof MemberReference gm ReferenceType MutableGraphModel BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator instructions Literal null LocalVariableDeclaration ReferenceType VariableDeclarator placeMode Literal null IfStatement BinaryOperation != MemberReference object Literal null BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator activeDiagram MethodInvocation DiagramUtils getActiveDiagram IfStatement BinaryOperation && BinaryOperation instanceof MemberReference activeDiagram ReferenceType UMLDiagram Cast ReferenceType UMLDiagram MemberReference activeDiagram BlockStatement StatementExpression Assignment MemberReference instructions Cast ReferenceType UMLDiagram MemberReference activeDiagram = StatementExpression Assignment MemberReference placeMode Cast ReferenceType UMLDiagram MemberReference activeDiagram = StatementExpression MethodInvocation placeMode Literal true setAddRelatedEdges BlockStatement StatementExpression Assignment MemberReference instructions MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation Model MethodInvocation MemberReference object toString getFacade localize = StatementExpression Assignment MemberReference placeMode ClassCreator ReferenceType This MemberReference instructions = StatementExpression MethodInvocation placeMode Literal true setAddRelatedEdges StatementExpression MethodInvocation Globals MemberReference instructions showStatus IfStatement BinaryOperation == MemberReference location Literal null BlockStatement StatementExpression MethodInvocation Globals MemberReference placeMode Literal false mode BlockStatement LocalVariableDeclaration ReferenceType Point VariableDeclarator p ClassCreator ReferenceType Point BinaryOperation + MemberReference location x BinaryOperation * MemberReference count Literal 100 MemberReference location y LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation ce MethodInvocation getVisibleRect getJComponent StatementExpression MethodInvocation p MemberReference r x MemberReference r y translate LocalVariableDeclaration ReferenceType MouseEvent VariableDeclarator me ClassCreator ReferenceType MouseEvent MethodInvocation ce getJComponent Literal 0 Literal 0 Literal 0 MemberReference p x MemberReference p y Literal 0 Literal false StatementExpression MethodInvocation placeMode MemberReference me mousePressed StatementExpression Assignment MemberReference me ClassCreator ReferenceType MouseEvent MethodInvocation ce getJComponent Literal 0 Literal 0 Literal 0 MemberReference p x MemberReference p y Literal 0 Literal false = StatementExpression MethodInvocation placeMode MemberReference me mouseReleased LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation DiagramUtils getActiveDiagram LocalVariableDeclaration ReferenceType Fig VariableDeclarator aFig MethodInvocation diagram MemberReference object presentationFor StatementExpression MethodInvocation aFig MethodInvocation aFig getPreferredSize setSize	1
MethodDeclaration Modifier public ReferenceType Object getGeneralization FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parent ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference handle MemberReference parent getGeneralization getCoreHelper	0
MethodDeclaration Modifier public setDiElement FormalParameter ReferenceType DiElement element StatementExpression Assignment This MemberReference diElement MemberReference element =	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAsynchronous getFacade	0
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener FormalParameter ReferenceType NotificationFilter filter FormalParameter ReferenceType Object handback ListenerNotFoundException StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference handback removeNotificationListener	0
MethodDeclaration Modifier public FormalParameter ReferenceType Class clazz FormalParameter ReferenceType PropPanel panel StatementExpression MethodInvocation MemberReference clazz MemberReference panel put	0
MethodDeclaration Modifier public setCurrentTheme FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType MetalTheme VariableDeclarator theme MethodInvocation MemberReference IfStatement MethodInvocation theme MethodInvocation getName MethodInvocation MethodInvocation getCurrentThemeClassName equals getClass BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference theme setTheme LocalVariableDeclaration ReferenceType String VariableDeclarator themeValue MemberReference IfStatement BinaryOperation == MemberReference themeValue Literal null BlockStatement StatementExpression Assignment MemberReference themeValue MemberReference DEFAULT_KEY = StatementExpression MethodInvocation Configuration MemberReference Argo KEY_THEME_CLASS MemberReference themeValue setString	0
MethodDeclaration Modifier public dragEnter FormalParameter ReferenceType DropTargetDragEvent dtde TryStatement IfStatement MethodInvocation dtde MemberReference TransferableModelElements UML_COLLECTION_FLAVOR isDataFlavorSupported BlockStatement StatementExpression MethodInvocation dtde MethodInvocation dtde getDropAction acceptDrag ReturnStatement CatchClause CatchClauseParameter NullPointerException e StatementExpression MethodInvocation dtde rejectDrag	1
MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object element IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation instanceof MemberReference element ReferenceType ObjectSetExpression BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator action Cast ReferenceType Action MemberReference handle LocalVariableDeclaration ReferenceType ObjectSetExpression VariableDeclarator oldExpr MethodInvocation action getTarget LocalVariableDeclaration ReferenceType ObjectSetExpression VariableDeclarator newExpr Cast ReferenceType ObjectSetExpression MemberReference element IfStatement MethodInvocation ! MemberReference oldExpr MemberReference newExpr equal BlockStatement StatementExpression MethodInvocation action MemberReference newExpr setTarget IfStatement BinaryOperation != MemberReference oldExpr Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference oldExpr delete getUmlFactory ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Transition BinaryOperation || BinaryOperation == MemberReference element Literal null BinaryOperation instanceof MemberReference element ReferenceType StateVertex BlockStatement StatementExpression Cast ReferenceType Transition MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or element: " MemberReference element	0
MethodDeclaration Modifier private ReferenceType String retrieveBody ReturnStatement TernaryExpression BinaryOperation != MethodInvocation getOwner Literal null Cast ReferenceType String MethodInvocation Model MethodInvocation MethodInvocation getOwner getBody getFacade Literal null	0
MethodDeclaration Modifier private static ReferenceType Collection TypeArgument ReferenceType Object getApplicableStereotypes FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Object allAppliedProfiles LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator profile MemberReference allAppliedProfiles BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation Model MethodInvocation MemberReference profile getStereotypes getExtensionMechanismsHelper BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference stereotype getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation ret MemberReference stereotype add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier protected ReferenceType FigNodeModelElement createNaryAssociationNode FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Rectangle bounds FormalParameter Modifier final ReferenceType DiagramSettings settings LocalVariableDeclaration Modifier final ReferenceType FigNodeAssociation VariableDeclarator diamondFig ClassCreator ReferenceType FigNodeAssociation MemberReference modelElement MemberReference bounds MemberReference settings IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociationClass getFacade BinaryOperation != MemberReference bounds Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType FigClassAssociationClass VariableDeclarator classBoxFig ClassCreator ReferenceType FigClassAssociationClass MemberReference modelElement MemberReference bounds MemberReference settings LocalVariableDeclaration Modifier final ReferenceType FigEdgeAssociationClass VariableDeclarator dashEdgeFig ClassCreator ReferenceType FigEdgeAssociationClass MemberReference classBoxFig MemberReference diamondFig MemberReference settings StatementExpression MethodInvocation classBoxFig renderingChanged LocalVariableDeclaration ReferenceType Point VariableDeclarator location MethodInvocation bounds getLocation StatementExpression Assignment MemberReference location y BinaryOperation - BinaryOperation - MemberReference location y MethodInvocation diamondFig getHeight Literal 32 = IfStatement BinaryOperation < MemberReference location y Literal 16 BlockStatement StatementExpression Assignment MemberReference location y Literal 16 = StatementExpression MethodInvocation classBoxFig MemberReference location setLocation StatementExpression This MethodInvocation MemberReference diamondFig add StatementExpression This MethodInvocation MemberReference classBoxFig add StatementExpression This MethodInvocation MemberReference dashEdgeFig add ReturnStatement MemberReference diamondFig	1
MethodDeclaration Modifier static FormalParameter ReferenceType Object umlObject FormalParameter BasicType boolean derived LocalVariableDeclaration ReferenceType String VariableDeclarator tagName MemberReference Facade DERIVED_TAG LocalVariableDeclaration ReferenceType Object VariableDeclarator taggedValue MethodInvocation Model MethodInvocation MemberReference umlObject MemberReference tagName getTaggedValue getFacade IfStatement MemberReference derived BlockStatement IfStatement BinaryOperation == MemberReference taggedValue Literal null BlockStatement StatementExpression Assignment MemberReference taggedValue MethodInvocation Model MethodInvocation MemberReference tagName Literal "true" buildTaggedValue getExtensionMechanismsFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference umlObject MemberReference taggedValue addTaggedValue getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference taggedValue ArrayCreator ReferenceType String ArrayInitializer Literal "true" setDataValues getExtensionMechanismsHelper BlockStatement IfStatement BinaryOperation != MemberReference taggedValue Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference taggedValue delete getUmlFactory	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override setDestFigNode FormalParameter ReferenceType FigNode fn IfStatement BinaryOperation && BinaryOperation != MemberReference fn Literal null MethodInvocation Model MethodInvocation MethodInvocation fn getOwner isAComment getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator oldComment MemberReference IfStatement BinaryOperation != MemberReference oldComment Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldComment removeElementListener StatementExpression Assignment MemberReference MethodInvocation fn getOwner = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference addElementListener StatementExpression Cast ReferenceType CommentEdge MethodInvocation getOwner IfStatement BinaryOperation && BinaryOperation != MemberReference fn Literal null MethodInvocation ! Model MethodInvocation MethodInvocation fn getOwner isAComment getFacade BlockStatement StatementExpression Assignment MemberReference annotatedElement MethodInvocation fn getOwner = StatementExpression Cast ReferenceType CommentEdge MethodInvocation getOwner StatementExpression SuperMethodInvocation MemberReference fn setDestFigNode	0
MethodDeclaration Modifier protected Annotation Override BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2 TYPE_ENUMERATION_LITERAL	0
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType Generalization MemberReference handle	0
MethodDeclaration Modifier public ReferenceType String getH ReturnStatement Literal "H"	0
MethodDeclaration Modifier public ReferenceType Fig getBigPort ReturnStatement MemberReference bigPort	0
MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation LOG BinaryOperation + Literal "targetAdded targetevent : " MemberReference e debug StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	1
MethodDeclaration addEnumerationLiteral FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator enumeration MethodInvocation parseState getClassifier IfStatement MethodInvocation ! MemberReference enumeration isAEnumeration BlockStatement ThrowStatement ClassCreator ReferenceType Literal "not an LocalVariableDeclaration BasicType short VariableDeclarator mod MemberReference IDLParser MOD_PUBLIC StatementExpression MethodInvocation MemberReference mod Literal null MemberReference name Literal null Literal null Literal true addAttribute	0
MethodDeclaration writeProject FormalParameter ReferenceType Project project FormalParameter ReferenceType OutputStream oStream FormalParameter ReferenceType ProgressMgr progressMgr SaveException InterruptedException LocalVariableDeclaration ReferenceType OutputStreamWriter VariableDeclarator outputStreamWriter TryStatement StatementExpression Assignment MemberReference outputStreamWriter ClassCreator ReferenceType OutputStreamWriter MemberReference oStream MethodInvocation Argo getEncoding = CatchClause CatchClauseParameter UnsupportedEncodingException e ThrowStatement ClassCreator ReferenceType SaveException MemberReference e LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType BufferedWriter MemberReference outputStreamWriter LocalVariableDeclaration ReferenceType XmlFilterOutputStream VariableDeclarator ClassCreator ReferenceType XmlFilterOutputStream MemberReference oStream MethodInvocation Argo getEncoding TryStatement StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + BinaryOperation + Literal "<?xml version = \"1.0\" " Literal "encoding = \"" MethodInvocation Argo getEncoding Literal "\" ?>" println StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + Literal "<uml version=\"" MemberReference PERSISTENCE_VERSION Literal "\">" println TryStatement LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator templates MethodInvocation TemplateReader MethodInvocation MemberReference ARGO_TEE read getInstance LocalVariableDeclaration ReferenceType OCLExpander VariableDeclarator expander ClassCreator ReferenceType OCLExpander MemberReference templates StatementExpression MethodInvocation expander MemberReference writer MemberReference project Literal " " expand CatchClause CatchClauseParameter ExpansionException e ThrowStatement ClassCreator ReferenceType SaveException MemberReference e StatementExpression MethodInvocation writer flush IfStatement BinaryOperation != MemberReference progressMgr Literal null BlockStatement StatementExpression MethodInvocation progressMgr nextPhase ForStatement EnhancedForControl VariableDeclaration ReferenceType ProjectMember VariableDeclarator projectMember MethodInvocation project getMembers BlockStatement IfStatement MethodInvocation LOG isInfoEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Saving member : " MemberReference projectMember info LocalVariableDeclaration ReferenceType MemberFilePersister VariableDeclarator persister MethodInvocation MemberReference projectMember getMemberFilePersister StatementExpression MethodInvocation startEntry StatementExpression MethodInvocation persister MemberReference projectMember MemberReference save TryStatement StatementExpression MethodInvocation flush CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType SaveException MemberReference e StatementExpression MethodInvocation writer Literal "</uml>" println StatementExpression MethodInvocation writer flush StatementExpression MethodInvocation writer close TryStatement StatementExpression MethodInvocation reallyClose CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType SaveException MemberReference e	1
MethodDeclaration Modifier public doFile StatementExpression Assignment MemberReference ClassCreator ReferenceType ImportStatusScreen MemberReference Literal "Importing" Literal "Splash" = LocalVariableDeclaration ReferenceType Thread VariableDeclarator t ClassCreator ReferenceType Thread ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference doImport Literal "Import StatementExpression MethodInvocation t start	0
MethodDeclaration Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType UMLDeploymentDiagram dd LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation dd MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator obj MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigDependency BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType FigDependency VariableDeclarator figDependency Cast ReferenceType FigDependency MemberReference obj IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator dependency MethodInvocation figDependency getOwner LocalVariableDeclaration ReferenceType Collection VariableDeclarator suppliers MethodInvocation Model MethodInvocation MemberReference dependency getSuppliers getFacade LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 IfStatement BinaryOperation != MemberReference suppliers Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator moe MemberReference suppliers BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference moe isAObject getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator objSup MemberReference moe IfStatement BinaryOperation && BinaryOperation != MethodInvocation Model MethodInvocation MemberReference objSup getElementResidences getFacade Literal null BinaryOperation > MethodInvocation Model MethodInvocation MemberReference objSup getElementResidences MethodInvocation size getFacade Literal 0 BlockStatement StatementExpression Assignment MemberReference count Literal 2 += IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference objSup getComponentInstance getFacade Literal null BlockStatement StatementExpression MemberReference ++ count LocalVariableDeclaration ReferenceType Collection VariableDeclarator clients MethodInvocation Model MethodInvocation MemberReference dependency getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference clients Literal null BinaryOperation > MethodInvocation clients size Literal 0 BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator moe MemberReference clients BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference moe isAObject getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator objCli MemberReference moe IfStatement BinaryOperation && BinaryOperation != MethodInvocation Model MethodInvocation MemberReference objCli getElementResidences getFacade Literal null BinaryOperation > MethodInvocation Model MethodInvocation MemberReference objCli getElementResidences MethodInvocation size getFacade Literal 0 BlockStatement StatementExpression Assignment MemberReference count Literal 2 += IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference objCli getComponentInstance getFacade Literal null BlockStatement StatementExpression MemberReference ++ count IfStatement BinaryOperation == MemberReference count Literal 3 BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference dd add StatementExpression MethodInvocation offs MemberReference figDependency add StatementExpression MethodInvocation offs MethodInvocation figDependency getSourcePortFig add StatementExpression MethodInvocation offs MethodInvocation figDependency getDestPortFig add ReturnStatement MemberReference offs	1
MethodDeclaration Modifier public BasicType boolean isAClassifierRole FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole	0
MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation PropPanelFactoryManager MemberReference addPropPanelFactory	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getConnections MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier public BasicType boolean isASynchState FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier private ReferenceType String generateStructuralFeatureChangeability FormalParameter ReferenceType Object sf IfStatement MethodInvocation MethodInvocation MemberReference sf isReadOnly getFacade BlockStatement ReturnStatement Literal "const " ReturnStatement Literal ""	0
MethodDeclaration Modifier public BasicType boolean isNavigable FormalParameter ReferenceType Object handle ReturnStatement Cast ReferenceType Property MemberReference handle	0
MethodDeclaration Modifier private getChildren FormalParameter ReferenceType Collection TypeArgument ReferenceType GeneralizableElement currentChildren FormalParameter ReferenceType Generalization gen FormalParameter ReferenceType Collection TypeArgument ReferenceType Generalization generalizations LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator child MethodInvocation gen getChild IfStatement BinaryOperation && MethodInvocation currentChildren MemberReference child contains MethodInvocation generalizations MemberReference gen contains BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal inheritance BlockStatement StatementExpression MethodInvocation currentChildren MemberReference child add StatementExpression MethodInvocation generalizations MemberReference gen add LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Generalization VariableDeclarator specializations MethodInvocation Model MethodInvocation MemberReference child getSpecializations getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator specialization MemberReference specializations BlockStatement StatementExpression MethodInvocation MemberReference currentChildren MemberReference specialization MemberReference generalizations getChildren	0
MethodDeclaration Modifier private ReferenceType Action getEdgeAction FormalParameter ReferenceType Object metaType LocalVariableDeclaration ReferenceType String VariableDeclarator label MethodInvocation MemberReference metaType getLabel ReturnStatement ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal "edgeClass" MemberReference metaType MemberReference label	0
MethodDeclaration Modifier public static ReferenceType ImageIcon lookupIconResource FormalParameter ReferenceType String resource ReturnStatement MethodInvocation ResourceLoader MemberReference resource lookupIconResource	0
MethodDeclaration Modifier protected ReferenceType StringBuilder fillBlankVariableName FormalParameter ReferenceType Object umlMessage FormalParameter ReferenceType StringBuilder varname FormalParameter BasicType boolean mayDeleteExpr IfStatement BinaryOperation == MemberReference varname Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator script MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference umlMessage getAction getFacade getScript getFacade IfStatement BinaryOperation && MemberReference ! mayDeleteExpr BinaryOperation != MemberReference script Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator body Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference script getBody getFacade LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation body Literal ":=" indexOf IfStatement BinaryOperation < MemberReference idx Literal 0 BlockStatement StatementExpression Assignment MemberReference idx MethodInvocation body Literal "=" indexOf = IfStatement BinaryOperation >= MemberReference idx Literal 0 BlockStatement StatementExpression Assignment MemberReference varname ClassCreator ReferenceType StringBuilder MethodInvocation body Literal 0 MemberReference idx substring = BlockStatement StatementExpression Assignment MemberReference varname ClassCreator ReferenceType StringBuilder = BlockStatement StatementExpression Assignment MemberReference varname ClassCreator ReferenceType StringBuilder = ReturnStatement MemberReference varname	1
MethodDeclaration Modifier public setNavigable FormalParameter ReferenceType Object handle FormalParameter BasicType boolean flag IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference actionDependency Literal null BlockStatement StatementExpression Assignment MemberReference actionDependency ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal "edgeClass" MethodInvocation Model MethodInvocation getMetaTypes Literal "button.new-dependency" = ReturnStatement MemberReference actionDependency	0
MethodDeclaration Modifier public addOwnedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object me StatementExpression MethodInvocation impl MemberReference handle MemberReference me addOwnedElement	0
MethodDeclaration Modifier protected Annotation SuppressWarnings Literal "unchecked" Annotation Override LocalVariableDeclaration ReferenceType Collection VariableDeclarator list ClassCreator ReferenceType ArrayList Literal 1 LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation getSelectedModelElement StatementExpression MethodInvocation LOG BinaryOperation + Literal "The selected element is " MemberReference element info IfStatement BinaryOperation != MemberReference element Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "The selected element is " MethodInvocation Model MethodInvocation MemberReference element getName getFacade info IfStatement BinaryOperation != MemberReference element Literal null BlockStatement StatementExpression MethodInvocation list MemberReference element add StatementExpression MethodInvocation MemberReference list setElements	0
MethodDeclaration Modifier protected Annotation Override initNotationProviders FormalParameter ReferenceType Object StatementExpression MethodInvocation MemberReference initializeNotationProvidersInternal	0
MethodDeclaration Modifier private ReferenceType CommonBehaviorFactoryMDRImpl ReturnStatement Cast ReferenceType CommonBehaviorFactoryMDRImpl MethodInvocation modelImpl getCommonBehaviorFactory	0
MethodDeclaration Modifier public modelChanged FormalParameter ReferenceType UmlChangeEvent evt StatementExpression Assignment MemberReference buildingModel Literal true = IfStatement BinaryOperation instanceof MemberReference evt ReferenceType AttributeChangeEvent BlockStatement IfStatement MethodInvocation evt MethodInvocation MemberReference propertySetName equals getPropertyName BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation evt getSource MethodInvocation getTarget BinaryOperation || MemberReference BinaryOperation != MethodInvocation MemberReference evt getChangedElement Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MethodInvocation MemberReference evt getChangedElement IfStatement BinaryOperation && BinaryOperation != MemberReference elem Literal null MethodInvocation ! MemberReference elem contains BlockStatement StatementExpression MethodInvocation MemberReference elem addElement StatementExpression Assignment MemberReference buildingModel Literal false = StatementExpression MethodInvocation MemberReference elem setSelectedItem IfStatement BinaryOperation instanceof MemberReference evt ReferenceType DeleteInstanceEvent BlockStatement IfStatement MethodInvocation MethodInvocation MemberReference evt getChangedElement contains BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference evt getChangedElement StatementExpression MethodInvocation MemberReference o removeElement IfStatement BinaryOperation instanceof MemberReference evt ReferenceType AddAssociationEvent BlockStatement IfStatement BinaryOperation && BinaryOperation != MethodInvocation getTarget Literal null MethodInvocation MemberReference evt isValidEvent BlockStatement IfStatement BinaryOperation && MethodInvocation evt MethodInvocation MemberReference propertySetName equals getPropertyName BinaryOperation == MethodInvocation evt getSource MethodInvocation getTarget BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MethodInvocation evt getNewValue StatementExpression MethodInvocation MemberReference elem setSelectedItem BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference evt getChangedElement StatementExpression MethodInvocation MemberReference o addElement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference evt ReferenceType RemoveAssociationEvent MethodInvocation MemberReference evt isValidEvent BlockStatement IfStatement BinaryOperation && MethodInvocation evt MethodInvocation MemberReference propertySetName equals getPropertyName BinaryOperation == MethodInvocation evt getSource MethodInvocation getTarget BlockStatement IfStatement BinaryOperation == MethodInvocation evt getOldValue MethodInvocation MethodInvocation getSelectedItem internal2external BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation evt getNewValue external2internal setSelectedItem BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference evt getChangedElement IfStatement MethodInvocation MemberReference o contains BlockStatement StatementExpression MethodInvocation MemberReference o removeElement IfStatement BinaryOperation && BinaryOperation instanceof MethodInvocation evt getSource ReferenceType ArgoDiagram MethodInvocation evt MethodInvocation MemberReference propertySetName equals getPropertyName BlockStatement StatementExpression MethodInvocation MethodInvocation evt getNewValue addElement StatementExpression Assignment MemberReference buildingModel Literal false = StatementExpression MethodInvocation MethodInvocation evt getNewValue setSelectedItem StatementExpression Assignment MemberReference buildingModel Literal false =	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getClassifier getMetaTypes add StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getState getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public Annotation Override BasicType boolean supports FormalParameter ReferenceType d ForStatement EnhancedForControl VariableDeclaration ReferenceType Critic VariableDeclarator c MemberReference critics BlockStatement IfStatement MethodInvocation c MemberReference d supports BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public addComment FormalParameter ReferenceType Object element FormalParameter ReferenceType Object StatementExpression SuperMethodInvocation MemberReference element MemberReference addComment StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier protected ReferenceType String getKeyName ReturnStatement Literal	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration BasicType int VariableDeclarator sel MethodInvocation perspectiveList getSelectedIndex IfStatement BinaryOperation > MemberReference sel Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator selObj MethodInvocation perspectiveListModel MemberReference sel get LocalVariableDeclaration ReferenceType Object VariableDeclarator prevObj MethodInvocation perspectiveListModel BinaryOperation - MemberReference sel Literal 1 get StatementExpression MethodInvocation perspectiveListModel MemberReference sel MemberReference prevObj set StatementExpression MethodInvocation perspectiveListModel BinaryOperation - MemberReference sel Literal 1 MemberReference selObj set StatementExpression MethodInvocation perspectiveList BinaryOperation - MemberReference sel Literal 1 setSelectedIndex StatementExpression MethodInvocation perspectiveList BinaryOperation - MemberReference sel Literal 1 ensureIndexIsVisible	0
MethodDeclaration Modifier public ReferenceType Object getStereotype ReturnStatement ClassReference ReferenceType Stereotype	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getLocalizedString FormalParameter ReferenceType String key FormalParameter ReferenceType String suffix ReturnStatement MethodInvocation Translator BinaryOperation + BinaryOperation + BinaryOperation + MemberReference localizationPrefix Literal "." MemberReference key MemberReference suffix localize	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator cmd MethodInvocation e getActionCommand IfStatement BinaryOperation == MemberReference cmd Literal null BlockStatement StatementExpression Assignment MemberReference selectedIndex Literal - 1 = ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation choices size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation choices MemberReference i get IfStatement MethodInvocation s MemberReference cmd equals BlockStatement StatementExpression Assignment MemberReference selectedIndex MemberReference i = StatementExpression MethodInvocation MethodInvocation doAction StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Node getDeploymentLocations FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Component BlockStatement ReturnStatement Cast ReferenceType Component MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public notifyMessage FormalParameter Modifier final ReferenceType String title FormalParameter Modifier final ReferenceType String introduction FormalParameter Modifier final ReferenceType String message LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator messageString BinaryOperation + BinaryOperation + MemberReference introduction Literal " : " MemberReference message StatementExpression MethodInvocation pbar MemberReference messageString setNote StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType JDialog VariableDeclarator dialog ClassCreator ReferenceType ExceptionDialog MethodInvocation ArgoFrame getFrame MemberReference title MemberReference introduction MemberReference message StatementExpression MethodInvocation dialog Literal true setVisible invokeLater	1
MethodDeclaration Modifier public Annotation Override BasicType boolean canFinish IfStatement SuperMethodInvocation ! canFinish BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MethodInvocation getStep Literal 0 BlockStatement ReturnStatement Literal true IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation getStep Literal 1 BinaryOperation != MemberReference step1Choice Literal null BinaryOperation != MethodInvocation step1Choice getSelectedIndex Literal - 1 BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Object makeProfileApplicable FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Object VariableDeclarator result Literal null IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Profile BlockStatement StatementExpression Assignment MemberReference result Cast ReferenceType Profile MemberReference handle = LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType VariableDeclarator iter Cast ReferenceType Profile MemberReference handle WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation iter next IfStatement BinaryOperation instanceof MemberReference p ReferenceType Profile BlockStatement StatementExpression MethodInvocation MemberReference p makeProfileApplicable ReturnStatement MemberReference result	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Object port FormalParameter ReferenceType Fig f IfStatement BinaryOperation != MethodInvocation f getOwner MemberReference port BlockStatement StatementExpression MethodInvocation f MemberReference port setOwner	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color color StatementExpression MethodInvocation headFig MemberReference color setFillColor StatementExpression MethodInvocation lifeLineFig MemberReference color setFillColor	0
MethodDeclaration Modifier public static addPredicate FormalParameter ReferenceType Predicate predicate StatementExpression MethodInvocation predicates MemberReference predicate add	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAClassifier getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getSpecifications MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier public BasicType int getColumn ReturnStatement MemberReference col	0
MethodDeclaration Modifier public addPackage FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType String VariableDeclarator ownerPackageName VariableDeclarator currentName MemberReference name StatementExpression Assignment MemberReference ownerPackageName MethodInvocation MemberReference currentName getPackageName = WhileStatement Literal ! MethodInvocation MemberReference ownerPackageName equals "" BlockStatement StatementExpression Assignment MemberReference currentName MemberReference ownerPackageName = StatementExpression Assignment MemberReference ownerPackageName MethodInvocation MemberReference currentName getPackageName = LocalVariableDeclaration ReferenceType Object VariableDeclarator mPackage MethodInvocation MemberReference currentName Literal false getPackage IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference importSession Literal null BinaryOperation != MethodInvocation importSession getSrcPath Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference mPackage MemberReference ImportInterface SOURCE_PATH_TAG getTaggedValue getFacade Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer MethodInvocation importSession getSrcPath StatementExpression MethodInvocation MemberReference mPackage MemberReference ImportInterface SOURCE_PATH_TAG MemberReference buildTaggedValue StatementExpression Assignment MemberReference mPackage MethodInvocation MemberReference name Literal false getPackage = StatementExpression Assignment MemberReference currentPackage MemberReference mPackage = StatementExpression MethodInvocation parseState MemberReference mPackage addPackageContext LocalVariableDeclaration ReferenceType Object VariableDeclarator artifact MethodInvocation Model MethodInvocation MemberReference currentPackage MemberReference fileName lookupIn getFacade IfStatement BinaryOperation == MemberReference artifact Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation parseState getArtifact MemberReference currentPackage setNamespace getCoreHelper BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator oldArtifact MethodInvocation parseState getArtifact StatementExpression MethodInvocation Model MethodInvocation MemberReference oldArtifact delete getUmlFactory StatementExpression MethodInvocation newElements MemberReference oldArtifact remove StatementExpression MethodInvocation parseState MemberReference artifact setArtifact	1
MethodDeclaration Modifier private BasicType boolean isMsgNumberStartOf FormalParameter ReferenceType String n1 FormalParameter ReferenceType String n2 LocalVariableDeclaration BasicType int VariableDeclarator i VariableDeclarator j VariableDeclarator len VariableDeclarator jlen StatementExpression Assignment MemberReference len MethodInvocation n1 length = StatementExpression Assignment MemberReference jlen MethodInvocation n2 length = StatementExpression Assignment MemberReference i Literal 0 = StatementExpression Assignment MemberReference j Literal 0 = ForStatement ForControl BinaryOperation < MemberReference i MemberReference len BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator ibv VariableDeclarator isv LocalVariableDeclaration BasicType int VariableDeclarator jbv VariableDeclarator jsv StatementExpression Assignment MemberReference ibv Literal 0 = ForStatement ForControl BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation n1 MemberReference i charAt IfStatement BinaryOperation || BinaryOperation < MemberReference c Literal '0' BinaryOperation > MemberReference c Literal '9' BlockStatement BreakStatement StatementExpression Assignment MemberReference ibv Literal 10 *= StatementExpression Assignment MemberReference ibv BinaryOperation - MemberReference c Literal '0' += StatementExpression Assignment MemberReference isv Literal 0 = ForStatement ForControl BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation n1 MemberReference i charAt IfStatement BinaryOperation || BinaryOperation < MemberReference c Literal 'a' BinaryOperation > MemberReference c Literal 'z' BlockStatement BreakStatement StatementExpression Assignment MemberReference isv Literal 26 *= StatementExpression Assignment MemberReference isv BinaryOperation - MemberReference c Literal 'a' += StatementExpression Assignment MemberReference jbv Literal 0 = ForStatement ForControl BinaryOperation < MemberReference j MemberReference jlen MemberReference ++ j BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation n2 MemberReference j charAt IfStatement BinaryOperation || BinaryOperation < MemberReference c Literal '0' BinaryOperation > MemberReference c Literal '9' BlockStatement BreakStatement StatementExpression Assignment MemberReference jbv Literal 10 *= StatementExpression Assignment MemberReference jbv BinaryOperation - MemberReference c Literal '0' += StatementExpression Assignment MemberReference jsv Literal 0 = ForStatement ForControl BinaryOperation < MemberReference j MemberReference jlen MemberReference ++ j BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation n2 MemberReference j charAt IfStatement BinaryOperation || BinaryOperation < MemberReference c Literal 'a' BinaryOperation > MemberReference c Literal 'z' BlockStatement BreakStatement StatementExpression Assignment MemberReference jsv Literal 26 *= StatementExpression Assignment MemberReference jsv BinaryOperation - MemberReference c Literal 'a' += IfStatement BinaryOperation || BinaryOperation != MemberReference ibv MemberReference jbv BinaryOperation != MemberReference isv MemberReference jsv BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation < MemberReference i MemberReference len BinaryOperation != MethodInvocation n1 MemberReference i charAt Literal '.' BlockStatement ReturnStatement Literal false StatementExpression MemberReference ++ i IfStatement BinaryOperation && BinaryOperation < MemberReference j MemberReference jlen BinaryOperation != MethodInvocation n2 MemberReference j charAt Literal '.' BlockStatement ReturnStatement Literal false StatementExpression MemberReference ++ j ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType E push FormalParameter ReferenceType E item StatementExpression Assignment MemberReference temp MemberReference item = StatementExpression MethodInvocation MemberReference item addElement ReturnStatement MemberReference item	0
MethodDeclaration Modifier public showDialog FormalParameter ReferenceType tab TryStatement StatementExpression MethodInvocation tabs MemberReference tab setSelectedComponent CatchClause CatchClauseParameter Throwable t StatementExpression MethodInvocation showDialog	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAUseCase getFacade	0
MethodDeclaration Modifier protected Annotation Override addAdapter FormalParameter ReferenceType notifier StatementExpression MethodInvocation notifiers MemberReference notifier add StatementExpression SuperMethodInvocation MemberReference notifier addAdapter	0
MethodDeclaration Modifier public synchronized ReferenceType ListIterator TypeArgument ReferenceType ProjectMember listIterator FormalParameter BasicType int arg0 ReturnStatement MethodInvocation MethodInvocation MemberReference arg0 listIterator	0
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getEvent getMetaTypes	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setFillColor	0
MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference target getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation Literal null setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getSequential getConcurrencyKind equals BlockStatement StatementExpression MethodInvocation MemberReference SEQUENTIAL_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getGuarded getConcurrencyKind equals BlockStatement StatementExpression MethodInvocation MemberReference GUARDED_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getConcurrent getConcurrencyKind equals BlockStatement StatementExpression MethodInvocation MemberReference CONCURRENT_COMMAND setSelected BlockStatement StatementExpression MethodInvocation MemberReference SEQUENTIAL_COMMAND setSelected	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType node StatementExpression Assignment MemberReference val ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation MemberReference node	0
MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration ReferenceType ModelPackage getModelPackage ReturnStatement MemberReference mofExtent	0
MethodDeclaration Modifier public Annotation Override BasicType boolean getUseTrapRect ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation getSelectedIndex IfStatement BinaryOperation >= MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference arg0	0
MethodDeclaration Modifier public BasicType boolean subsumes FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType OutgoingDependencyNode	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object ofs FormalParameter ReferenceType String s ReturnStatement MethodInvocation impl MemberReference ofs MemberReference s	0
MethodDeclaration Modifier private ReferenceType Object getNewTarget FormalParameter ReferenceType Object target LocalVariableDeclaration ReferenceType Object VariableDeclarator newTarget Literal null IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference target isAModelElement getFacade BinaryOperation != MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade Literal null BlockStatement StatementExpression Assignment MemberReference newTarget MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade = IfStatement BinaryOperation instanceof MemberReference target ReferenceType ArgoDiagram BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator firstDiagram MethodInvocation project MethodInvocation Literal 0 get getDiagramList IfStatement BinaryOperation != MemberReference target MemberReference firstDiagram BlockStatement StatementExpression Assignment MemberReference newTarget MemberReference firstDiagram = BlockStatement IfStatement BinaryOperation > MethodInvocation project MethodInvocation size getDiagramList Literal 1 BlockStatement StatementExpression Assignment MemberReference newTarget MethodInvocation project MethodInvocation Literal 1 get getDiagramList = BlockStatement StatementExpression Assignment MemberReference newTarget MethodInvocation project MethodInvocation iterator MethodInvocation next getRoots = BlockStatement StatementExpression Assignment MemberReference newTarget MethodInvocation project MethodInvocation iterator MethodInvocation next getRoots = ReturnStatement MemberReference newTarget	1
MethodDeclaration Modifier private static ReferenceType File getProfilesDirectory FormalParameter ReferenceType ProfileManager profileManager IfStatement MethodInvocation MemberReference profileManager BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator directories MethodInvocation profileManager ReturnStatement ClassCreator ReferenceType File MethodInvocation directories Literal 0 get BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator userSettingsFile ClassCreator ReferenceType File MethodInvocation Configuration MethodInvocation MethodInvocation getFactory ReturnStatement MethodInvocation userSettingsFile getParentFile	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator features ClassCreator ReferenceType ArrayList TryStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator classifiers MethodInvocation MemberReference ns MethodInvocation modelImpl MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation classifiers iterator WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation features MethodInvocation modelImpl MethodInvocation MethodInvocation i next getFeatures getFacade addAll CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator behavioralfeatures ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator ii MethodInvocation features iterator WhileStatement MethodInvocation ii hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation ii next IfStatement BinaryOperation instanceof MemberReference f ReferenceType BehavioralFeature BlockStatement StatementExpression MethodInvocation behavioralfeatures MemberReference f add ReturnStatement MemberReference behavioralfeatures	0
MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object t StatementExpression Assignment MemberReference target MethodInvocation MemberReference t findTarget = IfStatement BinaryOperation == MemberReference target Literal null BlockStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal false = ReturnStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal true = IfStatement MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation MemberReference target setTargetInternal	0
MethodDeclaration Modifier public setLeaf FormalParameter Modifier final ReferenceType Object handle FormalParameter BasicType boolean flag StatementExpression MethodInvocation ClassCreator ReferenceType BooleanSetter MethodDeclaration Modifier public set FormalParameter BasicType boolean value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setLeaf getComponent MemberReference flag MethodInvocation Model MethodInvocation MemberReference handle isLeaf getFacade createCommand	1
MethodDeclaration Modifier protected Annotation Override ReferenceType String getProperty LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement Literal MethodInvocation MemberReference fieldName equals "name" BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference target getName getFacade ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType String decode FormalParameter ReferenceType String str IfStatement BinaryOperation == MemberReference str Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb LocalVariableDeclaration BasicType int VariableDeclarator i1 VariableDeclarator i2 LocalVariableDeclaration BasicType char VariableDeclarator c StatementExpression Assignment MemberReference sb ClassCreator ReferenceType StringBuffer = ForStatement ForControl Assignment MemberReference i1 Literal 0 = Assignment MemberReference i2 Literal 0 = BinaryOperation < MemberReference i2 MethodInvocation str length MemberReference ++ i2 BlockStatement StatementExpression Assignment MemberReference c MethodInvocation str MemberReference i2 charAt = IfStatement BinaryOperation == MemberReference c Literal '%' BlockStatement IfStatement BinaryOperation > MemberReference i2 MemberReference i1 BlockStatement StatementExpression MethodInvocation sb MethodInvocation str MemberReference i1 MemberReference i2 substring append ForStatement ForControl Assignment MemberReference i1 MemberReference ++ i2 = BinaryOperation < MemberReference i2 MethodInvocation str length MemberReference ++ i2 BlockStatement IfStatement BinaryOperation == MethodInvocation str MemberReference i2 charAt Literal ';' BlockStatement BreakStatement IfStatement BinaryOperation >= MemberReference i2 MethodInvocation str length BlockStatement StatementExpression Assignment MemberReference i1 MemberReference i2 = BreakStatement IfStatement BinaryOperation > MemberReference i2 MemberReference i1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ent MethodInvocation str MemberReference i1 MemberReference i2 substring IfStatement Literal MethodInvocation MemberReference ent equals "proc" BlockStatement StatementExpression MethodInvocation sb Literal '%' append BlockStatement TryStatement StatementExpression MethodInvocation sb Cast BasicType char MethodInvocation Integer MemberReference ent parseInt append CatchClause CatchClauseParameter NumberFormatException nfe StatementExpression Assignment MemberReference i1 BinaryOperation + MemberReference i2 Literal 1 = IfStatement BinaryOperation > MemberReference i2 MemberReference i1 BlockStatement StatementExpression MethodInvocation sb MethodInvocation str MemberReference i1 MemberReference i2 substring append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier private fireTargetSet FormalParameter ReferenceType TargetEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement TryStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners CatchClause CatchClauseParameter RuntimeException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "While calling targetSet for " MemberReference Literal " in " MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners Literal " an error is thrown." MemberReference e error StatementExpression MethodInvocation e printStackTrace	1
MethodDeclaration Modifier public ReferenceType Dimension FormalParameter ReferenceType Dimension box StatementExpression Assignment MemberReference MemberReference box = LocalVariableDeclaration Annotation SuppressWarnings Literal "unused" BasicType double VariableDeclarator h MemberReference box height LocalVariableDeclaration BasicType double VariableDeclarator w MemberReference box width LocalVariableDeclaration BasicType int VariableDeclarator padding MethodInvocation Math Cast BasicType int BinaryOperation / MemberReference w Literal 10.0 MemberReference MIN_VERT_PADDING max ReturnStatement MethodInvocation MemberReference box MemberReference padding calcEllipse	1
MethodDeclaration Modifier public ReferenceType List getActions FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Guard FormalParameter ReferenceType Object transition IfStatement BinaryOperation instanceof MemberReference transition ReferenceType Transition BlockStatement LocalVariableDeclaration ReferenceType Transition VariableDeclarator t Cast ReferenceType Transition MemberReference transition IfStatement BinaryOperation != MethodInvocation t getGuard Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Replacing Guard " MethodInvocation t MethodInvocation getName getGuard Literal " on Transition " MethodInvocation t getName warn LocalVariableDeclaration ReferenceType Guard VariableDeclarator guard MethodInvocation StatementExpression MethodInvocation guard Cast ReferenceType Transition MemberReference transition ReturnStatement MemberReference guard ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "transition: " MemberReference transition	1
MethodDeclaration Modifier public Annotation Override ReferenceType Collection TypeArgument ReferenceType Object IfStatement BinaryOperation == MemberReference model Literal null BlockStatement ReturnStatement MethodInvocation Collections emptyList BlockStatement ReturnStatement MethodInvocation Collections MemberReference model unmodifiableCollection	0
MethodDeclaration Modifier public BasicType boolean isConnectionValid FormalParameter ReferenceType Object connectionType FormalParameter ReferenceType Object fromElement FormalParameter ReferenceType Object toElement FormalParameter BasicType boolean checkWFR LocalVariableDeclaration ReferenceType List VariableDeclarator validItems Cast ReferenceType ArrayList MethodInvocation validConnectionMap MemberReference connectionType get IfStatement BinaryOperation == MemberReference validItems Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation validItems iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator modeElementPair Cast ReferenceType Class MethodInvocation it next IfStatement BinaryOperation && MemberReference ArraySelector Literal 0 MethodInvocation MemberReference fromElement isInstance modeElementPair MemberReference ArraySelector Literal 1 MethodInvocation MemberReference toElement isInstance modeElementPair BlockStatement IfStatement MemberReference checkWFR BlockStatement ReturnStatement MethodInvocation Cast ReferenceType Class MemberReference connectionType Cast ReferenceType Element MemberReference fromElement Cast ReferenceType Element MemberReference toElement isConnectionWellformed BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration ReferenceType Object fullCopy FormalParameter ReferenceType Object anelement FormalParameter ReferenceType Object ans LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator copy Cast ReferenceType ModelElement MethodInvocation MemberReference anelement MemberReference ans copy IfStatement BinaryOperation instanceof MemberReference anelement ReferenceType Namespace BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator children Cast ReferenceType Namespace MemberReference anelement IfStatement MethodInvocation ! children isEmpty BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation children iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator childToCopy MethodInvocation it next StatementExpression MethodInvocation MemberReference childToCopy MemberReference copy fullCopy ReturnStatement MemberReference copy	0
MethodDeclaration Modifier private ReferenceType getCore ReturnStatement Cast ReferenceType MethodInvocation modelImpl getCoreFactory	0
MethodDeclaration Modifier public BasicType int lastIndexOf FormalParameter ReferenceType Object arg0 ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getOperation getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public BasicType boolean isAOpaqueExpression FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter ReferenceType Object element FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types getOptions	0
MethodDeclaration Modifier public BasicType boolean accept FormalParameter ReferenceType File file ReturnStatement MethodInvocation file isDirectory	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getBehaviors getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr Literal "" IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade Literal null BlockStatement StatementExpression Assignment MemberReference nameStr MethodInvocation Model MethodInvocation MemberReference modelElement getName MethodInvocation trim getFacade = LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator baseStr MethodInvocation NotationUtilityUml MethodInvocation Model MethodInvocation MemberReference modelElement getClassifiers getFacade formatNameList IfStatement BinaryOperation && BinaryOperation == MethodInvocation nameStr length Literal 0 BinaryOperation == MethodInvocation baseStr length Literal 0 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator base MethodInvocation baseStr MethodInvocation trim toString IfStatement BinaryOperation < MethodInvocation base length Literal 1 BlockStatement ReturnStatement MethodInvocation nameStr trim ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation nameStr trim Literal " : " MemberReference base	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigObjectFlowState VariableDeclarator figClone Cast ReferenceType FigObjectFlowState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig StatementExpression Assignment MemberReference figClone state Cast ReferenceType FigText MethodInvocation it next = ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_14 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 1080864392242790944L Literal - 4593671619917905917L Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType String getFilename ReturnStatement MemberReference filename	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Iterator TypeArgument ReferenceType T iterator ReturnStatement MethodInvocation list iterator	0
MethodDeclaration Modifier public ReferenceType Fig createNewItem FormalParameter ReferenceType MouseEvent me FormalParameter BasicType int snapX FormalParameter BasicType int snapY LocalVariableDeclaration ReferenceType FigInk VariableDeclarator p ClassCreator ReferenceType MemberReference snapX MemberReference snapY StatementExpression Assignment MemberReference MemberReference snapX = StatementExpression Assignment MemberReference MemberReference snapY = ReturnStatement MemberReference p	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression SuperMethodInvocation MemberReference col setLineColor StatementExpression MethodInvocation externalSeparatorFig MemberReference col setFillColor	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType AssociationEndRole	0
MethodDeclaration Modifier public setCommunicationLink FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object c IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference c ReferenceType Link BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or c: " MemberReference c	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation createCreateObjectAction	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object create FormalParameter Modifier final ReferenceType String language FormalParameter Modifier final ReferenceType String body ReturnStatement MethodInvocation Model MethodInvocation MemberReference language MemberReference body createProcedureExpression getDataTypesFactory	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation ! Model MethodInvocation MemberReference parent isANamespace getFacade BlockStatement ReturnStatement MemberReference Collections EMPTY_SET LocalVariableDeclaration ReferenceType Iterator VariableDeclarator elements MethodInvocation Model MethodInvocation MemberReference parent getOwnedElements MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation elements hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation elements next IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference element isAPackage getFacade MethodInvocation Model MethodInvocation MemberReference element isAClassifier getFacade BlockStatement StatementExpression MethodInvocation result MemberReference element add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public setVisible FormalParameter BasicType boolean b StatementExpression SuperMethodInvocation MemberReference b setVisible IfStatement MemberReference b BlockStatement StatementExpression MethodInvocation explanation requestFocus StatementExpression MethodInvocation explanation selectAll	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal "parsing.help.fig-association-role"	0
MethodDeclaration Modifier public Annotation Override ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType ActionList VariableDeclarator popUpActions ClassCreator ReferenceType ActionList SuperMethodInvocation MemberReference me getPopUpActions MethodInvocation isReadOnly LocalVariableDeclaration Modifier final ReferenceType List TypeArgument ReferenceType Action VariableDeclarator modulesActions MethodInvocation ContextActionFactoryManager getContextPopupActions ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator a MemberReference modulesActions BlockStatement IfStatement BinaryOperation instanceof MemberReference a ReferenceType List BlockStatement LocalVariableDeclaration ReferenceType JMenu VariableDeclarator m ClassCreator ReferenceType JMenu Cast ReferenceType Action MemberReference a StatementExpression MethodInvocation popUpActions MemberReference m add ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator subAction Cast ReferenceType List TypeArgument ReferenceType Action MemberReference a BlockStatement StatementExpression MethodInvocation m MemberReference subAction add BlockStatement StatementExpression MethodInvocation popUpActions MemberReference a add StatementExpression MethodInvocation popUpActions ClassCreator ReferenceType JSeparator add StatementExpression Assignment MemberReference popupAddOffset Literal 1 = IfStatement MemberReference removeFromDiagram BlockStatement StatementExpression MethodInvocation popUpActions MethodInvocation MethodInvocation getRemoveFromDiagramAction getInstance add StatementExpression MemberReference ++ popupAddOffset StatementExpression MethodInvocation popUpActions ClassCreator ReferenceType ActionDeleteModelElements add StatementExpression MemberReference ++ popupAddOffset IfStatement BinaryOperation == MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation size getInstance Literal 1 BlockStatement LocalVariableDeclaration ReferenceType ToDoList VariableDeclarator list MethodInvocation Designer MethodInvocation getToDoList theDesigner LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation list MethodInvocation getOwner elementListForOffender IfStatement BinaryOperation && BinaryOperation != MemberReference items Literal null BinaryOperation > MethodInvocation items size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator critiques ClassCreator ReferenceType ArgoJMenu Literal "menu.popup.critiques" LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator itemUnderMouse MethodInvocation MethodInvocation me getX MethodInvocation me getY hitClarifier IfStatement BinaryOperation != MemberReference itemUnderMouse Literal null BlockStatement StatementExpression MethodInvocation critiques ClassCreator ReferenceType ActionGoToCritique MemberReference itemUnderMouse add StatementExpression MethodInvocation critiques addSeparator ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation == MemberReference item MemberReference itemUnderMouse BlockStatement ContinueStatement StatementExpression MethodInvocation critiques ClassCreator ReferenceType ActionGoToCritique MemberReference item add StatementExpression MethodInvocation popUpActions Literal 0 ClassCreator ReferenceType JSeparator add StatementExpression MethodInvocation popUpActions Literal 0 MemberReference critiques add LocalVariableDeclaration ReferenceType Action VariableDeclarator stereoActions MethodInvocation getApplyStereotypeActions IfStatement BinaryOperation && BinaryOperation != MemberReference stereoActions Literal null BinaryOperation > MemberReference stereoActions length Literal 0 BlockStatement StatementExpression MethodInvocation popUpActions Literal 0 ClassCreator ReferenceType JSeparator add LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator stereotypes ClassCreator ReferenceType ArgoJMenu Literal "menu.popup.apply-stereotypes" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference stereoActions length MemberReference ++ i BlockStatement StatementExpression MethodInvocation stereotypes MemberReference ArraySelector MemberReference i stereoActions addCheckItem StatementExpression MethodInvocation popUpActions Literal 0 MemberReference stereotypes add ReturnStatement MemberReference popUpActions	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateMachine getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference parent getTop getFacade add ReturnStatement MemberReference list ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public final mSHIFTLEFTEQUAL FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference SHIFTLEFTEQUAL = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal "<<=" match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType Object getBooleanExpression ReturnStatement ClassReference ReferenceType BooleanExpression	0
MethodDeclaration Modifier private BasicType boolean asBoolean FormalParameter ReferenceType Object value FormalParameter ReferenceType Object node IfStatement BinaryOperation instanceof MemberReference value ReferenceType Boolean BlockStatement ReturnStatement Cast ReferenceType Boolean MemberReference value BlockStatement StatementExpression MethodInvocation MemberReference node Literal Literal false ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean isSelected ReturnStatement MemberReference selected	0
MethodDeclaration Modifier protected ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation getCommonBehaviorFactory	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation toString	0
MethodDeclaration Modifier public addNotificationListener FormalParameter ReferenceType listener FormalParameter ReferenceType NotificationFilter filter FormalParameter ReferenceType Object handback IllegalArgumentException StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference handback addNotificationListener	1
MethodDeclaration Modifier protected Annotation Override BasicType boolean ReturnStatement MemberReference useComposite	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType UMLDiagram BlockStatement ReturnStatement Cast ReferenceType UMLDiagram MemberReference elem IfStatement MethodInvocation Model MethodInvocation MemberReference elem isANamedElement getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference elem getNamespace getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Critic getCritics IfStatement MemberReference ! criticsLoaded BlockStatement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Critic VariableDeclarator myCritics SuperMethodInvocation getCritics StatementExpression MethodInvocation myCritics MethodInvocation getAllCritiquesInModel addAll StatementExpression This MethodInvocation MemberReference myCritics setCritics StatementExpression Assignment MemberReference criticsLoaded Literal true = ReturnStatement SuperMethodInvocation getCritics	0
MethodDeclaration Modifier public generatorAdded FormalParameter ReferenceType ArgoGeneratorEvent e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public load FormalParameter ReferenceType Project project FormalParameter ReferenceType InputStream inputStream OpenException TryStatement StatementExpression MethodInvocation MemberReference project ClassCreator ReferenceType InputSource ClassCreator ReferenceType InputStreamReader MemberReference inputStream MethodInvocation Argo getEncoding load CatchClause CatchClauseParameter UnsupportedEncodingException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation MemberReference sb Literal "struct" WriteLocalSource	1
MethodDeclaration Modifier public toDoItemsChanged FormalParameter ReferenceType ToDoListEvent StatementExpression MethodInvocation LOG Literal "toDoItemChanged" debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation getToDoList theDesigner = ForStatement EnhancedForControl VariableDeclaration ReferenceType PriorityNode VariableDeclarator pn MethodInvocation PriorityNode getPriorityList BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference pn = LocalVariableDeclaration BasicType int VariableDeclarator nMatchingItems Literal 0 SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation != MethodInvocation item getPriority MethodInvocation pn getPriority BlockStatement ContinueStatement StatementExpression MemberReference ++ nMatchingItems IfStatement BinaryOperation == MemberReference nMatchingItems Literal 0 BlockStatement ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator ArrayCreator BasicType int MemberReference nMatchingItems LocalVariableDeclaration ReferenceType Object VariableDeclarator children ArrayCreator ReferenceType Object MemberReference nMatchingItems StatementExpression Assignment MemberReference nMatchingItems Literal 0 = SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation != MethodInvocation item getPriority MethodInvocation pn getPriority BlockStatement ContinueStatement StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems MethodInvocation MemberReference pn MemberReference item getIndexOfChild = StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems children MemberReference item = StatementExpression MemberReference ++ nMatchingItems StatementExpression MethodInvocation This MemberReference path MemberReference MemberReference children fireTreeNodesChanged	0
MethodDeclaration toggleValueOfTarget FormalParameter ReferenceType Object t StatementExpression MethodInvocation Model MethodInvocation MemberReference t MethodInvocation Model MethodInvocation getPrivate getVisibilityKind setVisibility getCoreHelper	0
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MultiplicityElement MemberReference handle StatementExpression Cast ReferenceType MultiplicityElement MemberReference handle	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType TimeEvent	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer d FormalParameter BasicType long reasonCode LocalVariableDeclaration ReferenceType Class VariableDeclarator dmClazz MethodInvocation dm getClass LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Critic VariableDeclarator c MethodInvocation MemberReference dmClazz criticsForClass StatementExpression MethodInvocation MemberReference dm MemberReference d MemberReference c MemberReference reasonCode	0
MethodDeclaration Modifier public changedUpdate FormalParameter Modifier final ReferenceType DocumentEvent p1 StatementExpression MethodInvocation MemberReference theContainer MethodInvocation getText setProperty	0
MethodDeclaration Modifier public undo StatementExpression MethodInvocation UndoManager MethodInvocation This addMementoLock getInstance ForStatement EnhancedForControl VariableDeclaration ReferenceType FigNode VariableDeclarator figNode MemberReference nodesPlaced BlockStatement StatementExpression MethodInvocation mgm MethodInvocation figNode getOwner removeNode StatementExpression MethodInvocation editor MemberReference figNode remove StatementExpression MethodInvocation UndoManager MethodInvocation This removeMementoLock getInstance	1
MethodDeclaration Modifier protected handleTodoItemStart FormalParameter ReferenceType XMLElement e StatementExpression Assignment MemberReference headline Literal "" = StatementExpression Assignment MemberReference priority MemberReference ToDoItem HIGH_PRIORITY = StatementExpression Assignment MemberReference moreinfourl Literal "" = StatementExpression Assignment MemberReference description Literal "" =	0
MethodDeclaration Modifier public setLeaf FormalParameter ReferenceType Object handle FormalParameter BasicType boolean flag IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement StatementExpression Cast ReferenceType Reception MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement StatementExpression Cast ReferenceType Operation MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement StatementExpression Cast ReferenceType GeneralizableElement MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public static ReferenceType NodeSetValue adjustColumnWidths FormalParameter ReferenceType Context context FormalParameter ReferenceType NodeSetValue rtf_ns LocalVariableDeclaration ReferenceType FragmentValue VariableDeclarator rtf Cast ReferenceType FragmentValue MemberReference rtf_ns StatementExpression MethodInvocation MemberReference context setupColumnWidths TryStatement LocalVariableDeclaration ReferenceType Controller VariableDeclarator controller MethodInvocation context getController LocalVariableDeclaration ReferenceType NamePool VariableDeclarator namePool MethodInvocation controller getNamePool LocalVariableDeclaration ReferenceType ColumnScanEmitter VariableDeclarator csEmitter ClassCreator ReferenceType ColumnScanEmitter MemberReference namePool StatementExpression MethodInvocation rtf MemberReference csEmitter replay LocalVariableDeclaration BasicType int VariableDeclarator numColumns MethodInvocation csEmitter columnCount LocalVariableDeclaration ReferenceType String VariableDeclarator widths MethodInvocation csEmitter LocalVariableDeclaration BasicType float VariableDeclarator relTotal Literal 0 LocalVariableDeclaration BasicType float VariableDeclarator relParts ArrayCreator BasicType float MemberReference numColumns LocalVariableDeclaration BasicType float VariableDeclarator absTotal Literal 0 LocalVariableDeclaration BasicType float VariableDeclarator absParts ArrayCreator BasicType float MemberReference numColumns ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference numColumns MemberReference ++ count BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator width MemberReference ArraySelector MemberReference count widths LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation width Literal "*" indexOf IfStatement BinaryOperation >= MemberReference pos Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator relPart MethodInvocation width Literal 0 MemberReference pos substring LocalVariableDeclaration ReferenceType String VariableDeclarator absPart MethodInvocation width BinaryOperation + MemberReference pos Literal 1 substring TryStatement LocalVariableDeclaration BasicType float VariableDeclarator rel MethodInvocation Float MemberReference relPart parseFloat StatementExpression Assignment MemberReference relTotal MemberReference rel += StatementExpression Assignment MemberReference ArraySelector MemberReference count relParts MemberReference rel = CatchClause CatchClauseParameter NumberFormatException e StatementExpression MethodInvocation System.out BinaryOperation + MemberReference relPart Literal " is not a valid unit." println LocalVariableDeclaration BasicType int VariableDeclarator pixels Literal 0 IfStatement BinaryOperation && BinaryOperation != MemberReference absPart Literal null MethodInvocation ! absPart Literal "" equals BlockStatement StatementExpression Assignment MemberReference pixels MethodInvocation MemberReference absPart convertLength = StatementExpression Assignment MemberReference absTotal MemberReference pixels += StatementExpression Assignment MemberReference ArraySelector MemberReference count absParts MemberReference pixels = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference count relParts Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator pixels Literal 0 IfStatement BinaryOperation && BinaryOperation != MemberReference width Literal null MethodInvocation ! width Literal "" equals BlockStatement StatementExpression Assignment MemberReference pixels MethodInvocation MemberReference width convertLength = StatementExpression Assignment MemberReference absTotal MemberReference pixels += StatementExpression Assignment MemberReference ArraySelector MemberReference count absParts MemberReference pixels = IfStatement BinaryOperation == MemberReference relTotal Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference numColumns MemberReference ++ count BlockStatement LocalVariableDeclaration ReferenceType Float VariableDeclarator f ClassCreator ReferenceType Float MemberReference ArraySelector MemberReference count absParts IfStatement MemberReference foStylesheet BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pixels MethodInvocation f intValue LocalVariableDeclaration BasicType float VariableDeclarator inches BinaryOperation / Cast BasicType float MemberReference pixels MemberReference pixelsPerInch StatementExpression Assignment MemberReference ArraySelector MemberReference count widths BinaryOperation + MemberReference inches Literal "in" = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference count widths MethodInvocation Integer MethodInvocation f intValue toString = IfStatement BinaryOperation == MemberReference absTotal Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference numColumns MemberReference ++ count BlockStatement LocalVariableDeclaration BasicType float VariableDeclarator rel BinaryOperation * BinaryOperation / MemberReference ArraySelector MemberReference count relParts MemberReference relTotal Literal 100 LocalVariableDeclaration ReferenceType Float VariableDeclarator f ClassCreator ReferenceType Float MemberReference rel StatementExpression Assignment MemberReference ArraySelector MemberReference count widths MethodInvocation Integer MethodInvocation f intValue toString = StatementExpression Assignment MemberReference widths MethodInvocation MemberReference widths correctRoundingError = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pixelWidth MemberReference nominalWidth IfStatement BinaryOperation <= MethodInvocation tableWidth Literal "%" indexOf Literal 0 BlockStatement StatementExpression Assignment MemberReference pixelWidth MethodInvocation MemberReference tableWidth convertLength = IfStatement BinaryOperation <= MemberReference pixelWidth MemberReference absTotal BlockStatement StatementExpression MethodInvocation System.out Literal "Table is wider than table width." println BlockStatement StatementExpression Assignment MemberReference pixelWidth MemberReference absTotal -= StatementExpression Assignment MemberReference absTotal Literal 0 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference numColumns MemberReference ++ count BlockStatement LocalVariableDeclaration BasicType float VariableDeclarator rel BinaryOperation * BinaryOperation / MemberReference ArraySelector MemberReference count relParts MemberReference relTotal MemberReference pixelWidth StatementExpression Assignment MemberReference ArraySelector MemberReference count relParts BinaryOperation + MemberReference rel MemberReference ArraySelector MemberReference count absParts = StatementExpression Assignment MemberReference absTotal BinaryOperation + MemberReference rel MemberReference ArraySelector MemberReference count absParts += IfStatement BinaryOperation <= MethodInvocation tableWidth Literal "%" indexOf Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference numColumns MemberReference ++ count BlockStatement LocalVariableDeclaration ReferenceType Float VariableDeclarator f ClassCreator ReferenceType Float MemberReference ArraySelector MemberReference count relParts IfStatement MemberReference foStylesheet BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pixels MethodInvocation f intValue LocalVariableDeclaration BasicType float VariableDeclarator inches BinaryOperation / Cast BasicType float MemberReference pixels MemberReference pixelsPerInch StatementExpression Assignment MemberReference ArraySelector MemberReference count widths BinaryOperation + MemberReference inches Literal "in" = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference count widths MethodInvocation Integer MethodInvocation f intValue toString = BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference numColumns MemberReference ++ count BlockStatement LocalVariableDeclaration BasicType float VariableDeclarator rel BinaryOperation * BinaryOperation / MemberReference ArraySelector MemberReference count relParts MemberReference absTotal Literal 100 LocalVariableDeclaration ReferenceType Float VariableDeclarator f ClassCreator ReferenceType Float MemberReference rel StatementExpression Assignment MemberReference ArraySelector MemberReference count widths MethodInvocation Integer MethodInvocation f intValue toString = StatementExpression Assignment MemberReference widths MethodInvocation MemberReference widths correctRoundingError = LocalVariableDeclaration ReferenceType ColumnUpdateEmitter VariableDeclarator cuEmitter ClassCreator ReferenceType ColumnUpdateEmitter MemberReference controller MemberReference namePool MemberReference widths StatementExpression MethodInvocation rtf MemberReference cuEmitter replay ReturnStatement MethodInvocation cuEmitter getResultTreeFragment CatchClause CatchClauseParameter TransformerException e StatementExpression MethodInvocation System.out Literal "Transformer Exception in adjustColumnWidths" println ReturnStatement MemberReference rtf	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public setCurrentProject FormalParameter ReferenceType Project newProject LocalVariableDeclaration ReferenceType Project VariableDeclarator oldProject MemberReference currentProject StatementExpression Assignment MemberReference currentProject MemberReference newProject = StatementExpression MethodInvocation MemberReference newProject addProject IfStatement BinaryOperation && BinaryOperation != MemberReference currentProject Literal null BinaryOperation == MethodInvocation currentProject getActiveDiagram Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ArgoDiagram VariableDeclarator diagrams MethodInvocation currentProject getDiagramList IfStatement BinaryOperation && BinaryOperation != MemberReference diagrams Literal null MethodInvocation ! diagrams isEmpty BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator activeDiagram MethodInvocation diagrams Literal 0 get StatementExpression MethodInvocation currentProject MemberReference activeDiagram setActiveDiagram StatementExpression MethodInvocation MemberReference newProject MemberReference oldProject notifyProjectAdded	1
MethodDeclaration Modifier public ReferenceType Collection generate FormalParameter ReferenceType Collection elements FormalParameter BasicType boolean deps StatementExpression MethodInvocation LOG Literal "generate() debug LocalVariableDeclaration ReferenceType File VariableDeclarator tmpdir Literal null TryStatement StatementExpression Assignment MemberReference tmpdir MethodInvocation TempFileUtils createTempDir = IfStatement BinaryOperation != MemberReference tmpdir Literal null BlockStatement StatementExpression MethodInvocation MemberReference elements MethodInvocation tmpdir getPath MemberReference deps generateFiles ReturnStatement MethodInvocation TempFileUtils MemberReference tmpdir readAllFiles ReturnStatement MemberReference Collections EMPTY_LIST IfStatement BinaryOperation != MemberReference tmpdir Literal null BlockStatement StatementExpression MethodInvocation TempFileUtils MemberReference tmpdir deleteDir StatementExpression MethodInvocation LOG Literal "generate() terminated" debug	1
MethodDeclaration Modifier private ReferenceType DeploymentDiagramGraphModel createGraphModel IfStatement BinaryOperation instanceof MethodInvocation getGraphModel ReferenceType DeploymentDiagramGraphModel BlockStatement ReturnStatement Cast ReferenceType DeploymentDiagramGraphModel MethodInvocation getGraphModel BlockStatement ReturnStatement ClassCreator ReferenceType DeploymentDiagramGraphModel	0
MethodDeclaration Modifier public Annotation Override propertyChange FormalParameter Modifier final ReferenceType PropertyChangeEvent pve LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation pve getSource LocalVariableDeclaration ReferenceType String VariableDeclarator pName MethodInvocation pve getPropertyName IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pve ReferenceType DeleteInstanceEvent BinaryOperation == MemberReference src MethodInvocation getOwner BlockStatement LocalVariableDeclaration ReferenceType Runnable VariableDeclarator doWorkRunnable ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation removeFromDiagram CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "updateLayout method accessed " Literal "deleted element" MemberReference e error StatementExpression MethodInvocation SwingUtilities MemberReference doWorkRunnable invokeLater ReturnStatement IfStatement BinaryOperation && MethodInvocation pName Literal "editing" equals MethodInvocation Boolean.FALSE MethodInvocation pve getNewValue equals BlockStatement StatementExpression MethodInvocation LOG Literal "finished editing" debug StatementExpression MethodInvocation Cast ReferenceType FigText MemberReference src textEdited StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation endTrans IfStatement BinaryOperation && MethodInvocation pName Literal "editing" equals MethodInvocation Boolean.TRUE MethodInvocation pve getNewValue equals BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigText MemberReference src textEditStarted BlockStatement StatementExpression SuperMethodInvocation MemberReference pve propertyChange IfStatement BinaryOperation && BinaryOperation && MethodInvocation Model MethodInvocation MemberReference src isAUMLElement getFacade BinaryOperation != MethodInvocation getOwner Literal null MethodInvocation ! Model MethodInvocation MethodInvocation getOwner isRemoved getUmlFactory BlockStatement StatementExpression MethodInvocation MemberReference pve modelChanged LocalVariableDeclaration Modifier final ReferenceType UmlChangeEvent VariableDeclarator event Cast ReferenceType UmlChangeEvent MemberReference pve LocalVariableDeclaration ReferenceType Runnable VariableDeclarator doWorkRunnable ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation MemberReference event updateLayout CatchClause CatchClauseParameter InvalidElementException e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "updateLayout method accessed " Literal "deleted element " MemberReference e debug StatementExpression MethodInvocation SwingUtilities MemberReference doWorkRunnable invokeLater	1
MethodDeclaration Modifier public ReferenceType Collection getTaggedValuesCollection FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType Element VariableDeclarator elem Cast ReferenceType Element MemberReference handle LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Stereotype VariableDeclarator st MethodInvocation elem getAppliedStereotypes BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Property VariableDeclarator p MethodInvocation st getAttributes BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation UMLUtil MemberReference elem MethodInvocation st getQualifiedName MethodInvocation p getName getTaggedValue IfStatement BinaryOperation && BinaryOperation != MemberReference v Literal null BinaryOperation != MemberReference v MemberReference handle BlockStatement IfStatement BinaryOperation instanceof MemberReference v ReferenceType Collection BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Collection MemberReference v BlockStatement StatementExpression MethodInvocation result MemberReference p add BlockStatement StatementExpression MethodInvocation result MemberReference p add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public BasicType int getWidth StatementExpression MethodInvocation LOG BinaryOperation + Literal "getWidth = " MemberReference width debug ReturnStatement MemberReference width	1
MethodDeclaration Modifier public ReferenceType Object getExpression ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getDefaultValue getFacade	0
MethodDeclaration Modifier static buildMenu FormalParameter ReferenceType JPopupMenu pmenu FormalParameter ReferenceType String role FormalParameter ReferenceType Object target AssertStatement BinaryOperation != MemberReference role Literal null AssertStatement BinaryOperation != MemberReference target Literal null IfStatement BinaryOperation || MethodInvocation role MemberReference ActionNewEvent.Roles DEFERRABLE_EVENT equals MethodInvocation role MemberReference ActionNewEvent.Roles TRIGGER equals BlockStatement LocalVariableDeclaration ReferenceType JMenu VariableDeclarator select ClassCreator ReferenceType JMenu MethodInvocation Translator Literal "action.select" localize IfStatement MethodInvocation role MemberReference ActionNewEvent.Roles DEFERRABLE_EVENT equals BlockStatement StatementExpression MethodInvocation MemberReference target setTarget LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator menuItem ClassCreator ReferenceType JMenuItem MemberReference SINGLETON StatementExpression MethodInvocation select MemberReference menuItem add IfStatement MethodInvocation role MemberReference ActionNewEvent.Roles TRIGGER equals BlockStatement StatementExpression MethodInvocation MemberReference target setTarget StatementExpression MethodInvocation select MemberReference SINGLETON add StatementExpression MethodInvocation pmenu MemberReference select add LocalVariableDeclaration ReferenceType JMenu VariableDeclarator newMenu ClassCreator ReferenceType JMenu MethodInvocation Translator Literal localize StatementExpression MethodInvocation newMenu MethodInvocation ActionNewCallEvent getSingleton add StatementExpression MethodInvocation ActionNewCallEvent MethodInvocation MemberReference target setTarget getSingleton StatementExpression MethodInvocation ActionNewCallEvent MethodInvocation MemberReference ActionNewEvent ROLE MemberReference role putValue getSingleton StatementExpression MethodInvocation newMenu MethodInvocation ActionNewChangeEvent getSingleton add StatementExpression MethodInvocation ActionNewChangeEvent MethodInvocation MemberReference target setTarget getSingleton StatementExpression MethodInvocation ActionNewChangeEvent MethodInvocation MemberReference ActionNewEvent ROLE MemberReference role putValue getSingleton StatementExpression MethodInvocation newMenu MethodInvocation ActionNewSignalEvent getSingleton add StatementExpression MethodInvocation ActionNewSignalEvent MethodInvocation MemberReference target setTarget getSingleton StatementExpression MethodInvocation ActionNewSignalEvent MethodInvocation MemberReference ActionNewEvent ROLE MemberReference role putValue getSingleton StatementExpression MethodInvocation newMenu MethodInvocation ActionNewTimeEvent getSingleton add StatementExpression MethodInvocation ActionNewTimeEvent MethodInvocation MemberReference target setTarget getSingleton StatementExpression MethodInvocation ActionNewTimeEvent MethodInvocation MemberReference ActionNewEvent ROLE MemberReference role putValue getSingleton StatementExpression MethodInvocation pmenu MemberReference newMenu add StatementExpression MethodInvocation pmenu addSeparator StatementExpression MethodInvocation ActionRemoveModelElement.SINGLETON MethodInvocation ActionNewEvent MemberReference role MemberReference target getAction setObjectToRemove StatementExpression MethodInvocation ActionRemoveModelElement.SINGLETON MemberReference Action NAME MethodInvocation Translator Literal localize putValue StatementExpression MethodInvocation pmenu MemberReference SINGLETON add	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getUMLClass getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget isAModelElement getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getStereotypes getFacade addAll	0
MethodDeclaration Modifier public ReferenceType Object getStereotype FormalParameter ReferenceType Object ns FormalParameter ReferenceType Object stereo IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Profile BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "profile" IfStatement BinaryOperation instanceof MemberReference stereo ReferenceType Stereotype BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "stereotype" LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType Stereotype MemberReference stereo LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Class VariableDeclarator baseClasses Cast ReferenceType Stereotype MemberReference stereo IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation != MethodInvocation baseClasses size Literal 1 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Class VariableDeclarator baseClass MethodInvocation baseClasses MethodInvocation next iterator ForStatement EnhancedForControl VariableDeclaration ReferenceType Stereotype VariableDeclarator o MethodInvocation MemberReference ns getStereotypes BlockStatement IfStatement BinaryOperation && MethodInvocation name MethodInvocation o getName equals MethodInvocation o MethodInvocation MemberReference baseClass contains BlockStatement ReturnStatement MemberReference o ReturnStatement Literal null	0
MethodDeclaration Modifier private StatementExpression This MethodInvocation ClassCreator ReferenceType setLayout LocalVariableDeclaration ReferenceType VariableDeclarator top ClassCreator ReferenceType StatementExpression MethodInvocation top ClassCreator ReferenceType setLayout IfStatement BinaryOperation == MemberReference scope MemberReference Argo BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator warning ClassCreator ReferenceType StatementExpression MethodInvocation warning ClassCreator ReferenceType BoxLayout MemberReference warning MemberReference BoxLayout PAGE_AXIS setLayout LocalVariableDeclaration ReferenceType JLabel VariableDeclarator warningLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal "label.warning" localize StatementExpression MethodInvocation warningLabel MemberReference Component RIGHT_ALIGNMENT setAlignmentX StatementExpression MethodInvocation warning MemberReference warningLabel add LocalVariableDeclaration ReferenceType JLinkButton VariableDeclarator projectSettings ClassCreator ReferenceType JLinkButton StatementExpression MethodInvocation projectSettings ClassCreator ReferenceType StatementExpression MethodInvocation projectSettings MethodInvocation Translator Literal "button.project-settings" localize setText StatementExpression MethodInvocation projectSettings Literal null setIcon StatementExpression MethodInvocation projectSettings MemberReference Component RIGHT_ALIGNMENT setAlignmentX StatementExpression MethodInvocation warning MemberReference projectSettings add StatementExpression MethodInvocation top MemberReference warning MemberReference add LocalVariableDeclaration ReferenceType VariableDeclarator settings ClassCreator ReferenceType StatementExpression MethodInvocation settings ClassCreator ReferenceType GridBagLayout setLayout LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator constraints ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference constraints anchor MemberReference GridBagConstraints WEST = StatementExpression Assignment MemberReference constraints fill MemberReference GridBagConstraints HORIZONTAL = StatementExpression Assignment MemberReference constraints gridy Literal 0 = StatementExpression Assignment MemberReference constraints gridx Literal 0 = StatementExpression Assignment MemberReference constraints gridwidth Literal 1 = StatementExpression Assignment MemberReference constraints gridheight Literal 1 = StatementExpression Assignment MemberReference constraints weightx Literal 1.0 = StatementExpression Assignment MemberReference constraints insets ClassCreator ReferenceType Insets Literal 0 Literal 30 Literal 0 Literal 4 = StatementExpression Assignment MemberReference constraints gridy MemberReference GridBagConstraints RELATIVE = StatementExpression Assignment MemberReference showBoldNames MethodInvocation Literal createCheckBox = StatementExpression MethodInvocation settings MemberReference showBoldNames MemberReference constraints add StatementExpression Assignment MemberReference MethodInvocation Literal createCheckBox = StatementExpression MethodInvocation settings MemberReference MemberReference constraints add StatementExpression Assignment MemberReference constraints insets ClassCreator ReferenceType Insets Literal 5 Literal 30 Literal 0 Literal 4 = LocalVariableDeclaration ReferenceType VariableDeclarator defaultShadowWidthPanel ClassCreator ReferenceType ClassCreator ReferenceType FlowLayout MemberReference FlowLayout LEFT Literal 5 Literal 0 LocalVariableDeclaration ReferenceType JLabel VariableDeclarator defaultShadowWidthLabel MethodInvocation Literal createLabel StatementExpression Assignment MemberReference defaultShadowWidth ClassCreator ReferenceType ShadowComboBox = StatementExpression MethodInvocation defaultShadowWidthLabel MemberReference defaultShadowWidth setLabelFor StatementExpression MethodInvocation defaultShadowWidthPanel MemberReference defaultShadowWidthLabel add StatementExpression MethodInvocation defaultShadowWidthPanel MemberReference defaultShadowWidth add StatementExpression MethodInvocation settings MemberReference defaultShadowWidthPanel MemberReference constraints add StatementExpression Assignment MemberReference jlblDiagramFont ClassCreator ReferenceType JLabel = StatementExpression MethodInvocation jlblDiagramFont MethodInvocation Translator Literal localize setText LocalVariableDeclaration ReferenceType VariableDeclarator fontButtonPanel ClassCreator ReferenceType ClassCreator ReferenceType FlowLayout MemberReference FlowLayout LEFT Literal 5 Literal 0 LocalVariableDeclaration ReferenceType JButton VariableDeclarator fontButton MethodInvocation getJbtnDiagramFont StatementExpression MethodInvocation jlblDiagramFont MemberReference fontButton setLabelFor StatementExpression MethodInvocation fontButtonPanel MemberReference jlblDiagramFont add StatementExpression MethodInvocation fontButtonPanel MemberReference fontButton add StatementExpression MethodInvocation settings MemberReference fontButtonPanel MemberReference constraints add StatementExpression MethodInvocation top MemberReference settings MemberReference CENTER add StatementExpression This MethodInvocation MemberReference top MemberReference add StatementExpression This MethodInvocation ClassCreator ReferenceType Dimension Literal 296 Literal 169 setSize	0
MethodDeclaration Modifier private BasicType boolean isNameTerminator FormalParameter BasicType char ch ReturnStatement BinaryOperation || BinaryOperation == MemberReference ch Literal '>' MethodInvocation Character MemberReference ch isWhitespace	1
MethodDeclaration Modifier public ReferenceType Object getNamespace ReturnStatement MemberReference namespace	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference org.eclipse.uml2.uml.MessageSort CREATE_MESSAGE_LITERAL	0
MethodDeclaration Modifier private StatementExpression MethodInvocation Literal false setVisible StatementExpression MethodInvocation dispose	0
MethodDeclaration Modifier public setToolBar FormalParameter ReferenceType JToolBar toolbar IfStatement MethodInvocation ! Arrays MethodInvocation MemberReference toolbar contains MethodInvocation getComponents asList BlockStatement IfStatement BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression MethodInvocation Cast ReferenceType UMLDiagram MethodInvocation getTarget remove StatementExpression MethodInvocation MemberReference toolbar MemberReference add StatementExpression Assignment MemberReference toolBar MemberReference toolbar = StatementExpression MethodInvocation invalidate StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint	1
MethodDeclaration Modifier public redo StatementExpression MethodInvocation diaDefault MemberReference newWidth	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator drawingArea MethodInvocation ce MethodInvocation getActiveLayer MethodInvocation calcDrawingArea getLayerManager IfStatement BinaryOperation || BinaryOperation <= MemberReference drawingArea width Literal 0 BinaryOperation <= MemberReference drawingArea height Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator dummyArea ClassCreator ReferenceType Rectangle Literal 0 Literal 0 Literal 50 Literal 50 TryStatement StatementExpression MethodInvocation MemberReference outputStream MemberReference ce MemberReference dummyArea CatchClause CatchClauseParameter java.io.IOException e StatementExpression MethodInvocation LOG Literal "Error while exporting Graphics:" MemberReference e error ReturnStatement StatementExpression SuperMethodInvocation MemberReference ae actionPerformed	1
MethodDeclaration ReferenceType Object getUmlObject ReturnStatement MemberReference umlObject	0
MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier public Annotation Override itemStateChanged FormalParameter ReferenceType ItemEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation e getSource IfStatement BinaryOperation == MemberReference src MemberReference BlockStatement StatementExpression MethodInvocation setTargetArrow BlockStatement StatementExpression SuperMethodInvocation MemberReference e itemStateChanged	1
MethodDeclaration Modifier public ReferenceType Collection getLinkEnds FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation Cast ReferenceType AssociationEnd MemberReference handle MemberReference handle getRefOutermostPackage IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType ListSet VariableDeclarator allPosters MethodInvocation Designer MethodInvocation getToDoList MethodInvocation theDesigner IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MemberReference allPosters IfStatement MethodInvocation allPosters MemberReference parent contains BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ToDoItem LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator itemList MethodInvocation Designer MethodInvocation getToDoList MethodInvocation theDesigner SynchronizedStatement MemberReference itemList ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference itemList BlockStatement LocalVariableDeclaration ReferenceType Poster VariableDeclarator post MethodInvocation item getPoster IfStatement BinaryOperation == MemberReference post MemberReference parent BlockStatement StatementExpression MethodInvocation result MemberReference item add ReturnStatement MemberReference result ReturnStatement MethodInvocation Collections emptyList	1
MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MethodInvocation getTarget isAOperation getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference text getCoreHelper	0
MethodDeclaration Modifier protected Annotation Override ReferenceType FormalParameter ReferenceType Object owner FormalParameter ReferenceType Rectangle bounds FormalParameter ReferenceType DiagramSettings settings ReturnStatement ClassCreator ReferenceType MemberReference owner MemberReference bounds MemberReference settings	0
MethodDeclaration Modifier public fireTreeCollapsed FormalParameter ReferenceType TreePath path StatementExpression SuperMethodInvocation MemberReference path fireTreeCollapsed StatementExpression MethodInvocation LOG Literal "fireTreeCollapsed" debug IfStatement BinaryOperation || BinaryOperation == MemberReference path Literal null BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType TreePath VariableDeclarator expanded MethodInvocation getExpandedPaths StatementExpression MethodInvocation expanded MemberReference path remove	1
MethodDeclaration Modifier public updateSubTask FormalParameter ReferenceType String action StatementExpression MethodInvocation pbar MemberReference action setNote	1
MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration BasicType int VariableDeclarator tab MethodInvocation results getSelectedIndex IfStatement BinaryOperation != MemberReference tab Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator tabBounds MethodInvocation results MemberReference tab getBoundsAt IfStatement MethodInvocation ! tabBounds MethodInvocation me getX MethodInvocation me getY contains BlockStatement ReturnStatement IfStatement BinaryOperation && BinaryOperation >= MemberReference tab Literal 1 BinaryOperation >= MethodInvocation me getClickCount Literal 2 BlockStatement StatementExpression MethodInvocation BinaryOperation - MemberReference tab Literal 1 myDoubleClick	0
MethodDeclaration Modifier protected ReferenceType String getKeyName ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference parent isAState getFacade BinaryOperation != MethodInvocation Model MethodInvocation MemberReference parent getExit getFacade Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator children ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation children MethodInvocation Model MethodInvocation MemberReference parent getExit getFacade add ReturnStatement MemberReference children ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType Primitive createPrimitiveType LocalVariableDeclaration ReferenceType Primitive VariableDeclarator obj MethodInvocation MethodInvocation MethodInvocation getCorePackage StatementExpression SuperMethodInvocation MemberReference obj ReturnStatement MemberReference obj	0
MethodDeclaration Modifier protected initMenuCreate StatementExpression SuperMethodInvocation initMenuCreate StatementExpression MethodInvocation MethodInvocation removeAll getCreateDiagramMenu StatementExpression MethodInvocation MethodInvocation removeAll getCreateDiagramToolbar LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator usecaseDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionUseCaseDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference usecaseDiagram Literal "Usecase Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionUseCaseDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference usecaseDiagram MemberReference ShortcutMgr ACTION_USE_CASE_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator classDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionClassDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference classDiagram Literal "Class Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionClassDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference classDiagram MemberReference ShortcutMgr ACTION_CLASS_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator sequenzDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionSequenceDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference sequenzDiagram Literal "Sequenz Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionSequenceDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference sequenzDiagram MemberReference ShortcutMgr ACTION_SEQUENCE_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator collaborationDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionCollaborationDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference collaborationDiagram Literal "Collaboration Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionCollaborationDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference collaborationDiagram MemberReference ShortcutMgr ACTION_COLLABORATION_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator stateDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionStateDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference stateDiagram Literal "Statechart Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionStateDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference stateDiagram MemberReference ShortcutMgr ACTION_STATE_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator activityDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionActivityDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference activityDiagram Literal "Activity Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionActivityDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference activityDiagram MemberReference ShortcutMgr ACTION_ACTIVITY_DIAGRAM assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator deploymentDiagram MethodInvocation MethodInvocation ClassCreator ReferenceType ActionDeploymentDiagram add getCreateDiagramMenu StatementExpression MethodInvocation MemberReference deploymentDiagram Literal "Deployment Diagram" setMnemonic StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ActionDeploymentDiagram add getCreateDiagramToolbar StatementExpression MethodInvocation ShortcutMgr MemberReference deploymentDiagram MemberReference ShortcutMgr ACTION_DEPLOYMENT_DIAGRAM assignAccelerator StatementExpression MethodInvocation MethodInvocation Literal true setFloatable getCreateDiagramToolbar	1
MethodDeclaration Modifier public setResults FormalParameter ReferenceType List res FormalParameter ReferenceType List dia StatementExpression Assignment MemberReference results MemberReference res = StatementExpression Assignment MemberReference diagrams MemberReference dia = LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MethodInvocation Integer MethodInvocation results size valueOf StatementExpression MethodInvocation resultsLabel MethodInvocation Translator Literal MemberReference msgArgs setText StatementExpression MethodInvocation resultsModel MemberReference results MemberReference diagrams setTarget StatementExpression MethodInvocation relatedModel Cast ReferenceType List Literal null Cast ReferenceType List Literal null setTarget StatementExpression MethodInvocation relatedLabel MethodInvocation Translator Literal localize setText	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter ReferenceType Object element FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types getOptions	0
MethodDeclaration Modifier public BasicType boolean isAProperty FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "There are no UML Property objects in UML 1.x"	0
MethodDeclaration Modifier public BasicType boolean isInitialized FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation != Cast ReferenceType Property MemberReference handle Literal null	0
MethodDeclaration Modifier public ReferenceType Object getInstance ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "Not a UML2 model element"	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Icon getIcons IfStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent isReadOnly getModelManagementHelper BlockStatement ReturnStatement ArrayCreator ReferenceType Icon Literal 6 ReturnStatement MemberReference icons	0
MethodDeclaration Modifier protected ReferenceType FigNode getNodePresentationFor FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object modelElement AssertStatement BinaryOperation != MemberReference modelElement Literal null Literal "A modelElement must be supplied" ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fig MethodInvocation lay getContentsNoEdges BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference fig ReferenceType FigNode MethodInvocation modelElement Cast ReferenceType FigNode MemberReference fig equals BlockStatement ReturnStatement Cast ReferenceType FigNode MemberReference fig ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fig MethodInvocation lay getContentsEdgesOnly BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference fig ReferenceType FigEdgeModelElement MethodInvocation modelElement Cast ReferenceType FigEdgeModelElement MemberReference fig equals BlockStatement ReturnStatement Cast ReferenceType FigEdgeModelElement MemberReference fig ReturnStatement Literal null	1
MethodDeclaration Modifier private BasicType int getHGap ReturnStatement MemberReference H_GAP	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isACompositeState BlockStatement ReturnStatement BinaryOperation != Cast ReferenceType CompositeState MemberReference handle Literal null ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType AbstractArgoJPanel getDetailsTabs ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public buildToolbar StatementExpression MethodInvocation LOG Literal "Building toolbar" debug LocalVariableDeclaration ReferenceType ToolBarFactory VariableDeclarator factory ClassCreator ReferenceType ToolBarFactory MethodInvocation getActions StatementExpression MethodInvocation factory Literal true setRollover StatementExpression MethodInvocation factory Literal false setFloatable LocalVariableDeclaration ReferenceType JToolBar VariableDeclarator toolBar MethodInvocation factory createToolBar StatementExpression MethodInvocation toolBar Literal setName StatementExpression MethodInvocation buttonPanel removeAll StatementExpression MethodInvocation buttonPanel MemberReference WEST MemberReference toolBar add StatementExpression MethodInvocation buttonPanel Literal "ToolBar.toolTipSelectTool" MethodInvocation Translator Literal "action.select" localize putClientProperty	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier public Annotation Override BasicType float getWeight ReturnStatement TernaryExpression BinaryOperation == MethodInvocation first Literal null Literal 0 BinaryOperation * MethodInvocation MethodInvocation getWeight first Literal 0.9999999f	1
MethodDeclaration Modifier public FormalParameter ReferenceType ControlMech cm StatementExpression MethodInvocation mechs MemberReference cm add	0
MethodDeclaration Modifier private lookupRemoveItem FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType T map FormalParameter ReferenceType String key FormalParameter ReferenceType T item LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator list MethodInvocation map MemberReference key get IfStatement BinaryOperation == MemberReference list Literal null BlockStatement ReturnStatement IfStatement BinaryOperation == MemberReference item Literal null BlockStatement StatementExpression MethodInvocation map MemberReference key remove ReturnStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement IfStatement MethodInvocation ! list MemberReference item contains BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Attempt to unregister registration" MemberReference key Literal " Listener: " MemberReference item debug WhileStatement MethodInvocation list MemberReference item contains BlockStatement StatementExpression MethodInvocation list MemberReference item remove IfStatement MethodInvocation list isEmpty BlockStatement StatementExpression MethodInvocation map MemberReference key remove	1
MethodDeclaration Modifier private makeTransition FormalParameter ReferenceType DiagramSettings settings FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object transUml LocalVariableDeclaration ReferenceType VariableDeclarator transFig ClassCreator ReferenceType MemberReference transUml MemberReference settings StatementExpression MethodInvocation MemberReference lay MemberReference transFig setPorts StatementExpression MethodInvocation lay MemberReference transFig add StatementExpression MethodInvocation transFig computeRoute StatementExpression MethodInvocation transFig renderingChanged	0
MethodDeclaration Modifier public progress FormalParameter ReferenceType event InterruptedException StatementExpression MethodInvocation ThreadUtils checkIfInterrupted LocalVariableDeclaration BasicType int VariableDeclarator percentPhasesLeft BinaryOperation - Literal 100 MemberReference percentPhasesComplete LocalVariableDeclaration BasicType long VariableDeclarator position MethodInvocation event getPosition LocalVariableDeclaration BasicType long VariableDeclarator length MethodInvocation event getLength LocalVariableDeclaration BasicType long VariableDeclarator proportion BinaryOperation / BinaryOperation * MemberReference position MemberReference percentPhasesLeft MemberReference length StatementExpression MethodInvocation BinaryOperation + MemberReference percentPhasesComplete MemberReference proportion fireProgressEvent	0
MethodDeclaration Modifier public endFunctionDeclaration IfStatement MethodInvocation ! ignore BlockStatement AssertStatement BinaryOperation != MemberReference operationModeler Literal null Literal "operationModeler is null." LocalVariableDeclaration ReferenceType Object VariableDeclarator oper MethodInvocation contextStack pop AssertStatement MethodInvocation Model MethodInvocation MemberReference oper isAOperation getFacade BinaryOperation + BinaryOperation + BinaryOperation + Literal "" Literal "The popped context (\"" MemberReference oper Literal "\") isn't an operation!" StatementExpression MethodInvocation operationModeler finish StatementExpression Assignment MemberReference operationModeler Literal null =	1
MethodDeclaration Modifier private postProcessing LocalVariableDeclaration ReferenceType List VariableDeclarator nodes MethodInvocation PgmlUtility MethodInvocation editor MethodInvocation getActiveLayer getLayerManager getContentsNoEdges LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator figClassifierRoleFound Literal false LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Literal null WhileStatement BinaryOperation && BinaryOperation < MemberReference i MethodInvocation nodes size MemberReference ! figClassifierRoleFound BlockStatement StatementExpression Assignment MemberReference fig Cast ReferenceType Fig MethodInvocation nodes MemberReference i get = IfStatement BinaryOperation && BinaryOperation != MemberReference fig MemberReference _pers BinaryOperation instanceof MemberReference fig ReferenceType FigClassifierRole BlockStatement StatementExpression MethodInvocation _pers MethodInvocation fig getY setY StatementExpression MethodInvocation _pers MethodInvocation fig getHeight setHeight StatementExpression Assignment MemberReference figClassifierRoleFound Literal true = StatementExpression MemberReference ++ i	0
MethodDeclaration Modifier protected ReferenceType FigTextGroup getMiddleGroup ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType WizMEName	0
MethodDeclaration Modifier public BasicType boolean enable StatementExpression MethodInvocation init ReturnStatement Literal true	0
MethodDeclaration Modifier protected Annotation Override BasicType boolean isLazy ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType List getPorts FormalParameter ReferenceType Object nodeOrEdge IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAClassifierRole getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation result MemberReference nodeOrEdge add ReturnStatement MemberReference result ReturnStatement MemberReference Collections EMPTY_LIST	1
MethodDeclaration Modifier public ReferenceType String multiplicityToString FormalParameter ReferenceType Object multiplicity ReturnStatement MethodInvocation impl MemberReference multiplicity multiplicityToString	0
MethodDeclaration Modifier public ReferenceType List getActualArguments FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private FormalParameter ReferenceType Rectangle bounds StatementExpression MethodInvocation Literal false enableSizeChecking StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MethodInvocation Literal "stereotype" getStereotypeFig StatementExpression MethodInvocation MethodInvocation Literal true setVisible getStereotypeFig StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation getMinimumSize MemberReference height getStereotypeFig setTopMargin getNameFig StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MethodInvocation getStereotypeFig addFig StatementExpression MethodInvocation Literal true setFilled StatementExpression MethodInvocation MemberReference FILL_COLOR setFillColor StatementExpression MethodInvocation MemberReference LINE_COLOR setLineColor StatementExpression MethodInvocation MemberReference setLineWidth IfStatement BinaryOperation != MemberReference bounds Literal null BlockStatement StatementExpression MethodInvocation MemberReference bounds x MemberReference bounds y setLocation StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation MethodInvocation getBounds setBounds	1
MethodDeclaration Modifier public ReferenceType String getAttribute FormalParameter ReferenceType String attribute ReturnStatement MethodInvocation attributes MemberReference attribute getValue	0
MethodDeclaration Modifier public ReferenceType Object getAssociationRole ReturnStatement ClassReference ReferenceType AssociationRole	0
MethodDeclaration Modifier public static addItemsToToolBar FormalParameter ReferenceType JToolBar buttonPanel FormalParameter ReferenceType Collection actions StatementExpression MethodInvocation MemberReference buttonPanel MethodInvocation actions toArray addItemsToToolBar	1
MethodDeclaration Modifier public ReferenceType Profile FormalParameter ReferenceType String profileClass LocalVariableDeclaration ReferenceType Profile VariableDeclarator found Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference profileClass Literal null MethodInvocation profileClass MemberReference OLD_PROFILE_PACKAGE startsWith BlockStatement StatementExpression Assignment MemberReference profileClass MethodInvocation profileClass MemberReference OLD_PROFILE_PACKAGE MemberReference NEW_PROFILE_PACKAGE replace = AssertStatement MethodInvocation MethodInvocation getName MethodInvocation MemberReference NEW_PROFILE_PACKAGE startsWith getClass ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator p MemberReference profiles BlockStatement IfStatement MethodInvocation p MethodInvocation getName MethodInvocation MemberReference profileClass equals getClass BlockStatement StatementExpression Assignment MemberReference found MemberReference p = BreakStatement ReturnStatement MemberReference found	0
MethodDeclaration Modifier public ReferenceType String expand FormalParameter ReferenceType String desc FormalParameter ReferenceType ListSet offs ReturnStatement MemberReference desc	0
MethodDeclaration Modifier private ReferenceType UseCasesFactoryMDRImpl getUseCases ReturnStatement Cast ReferenceType UseCasesFactoryMDRImpl MethodInvocation modelImpl getUseCasesFactory	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_38 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 1080863912280837728L Literal - 4476578029623050177L Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public static ReferenceType String getVersionInfo TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator cls ClassReference org.tigris.gef.base ReferenceType Editor StatementExpression Assignment MemberReference cls ClassReference org.xml.sax ReferenceType AttributeList = StatementExpression Assignment MemberReference cls ClassReference org.apache.log4j ReferenceType Logger = TryStatement StatementExpression Assignment MemberReference cls MethodInvocation Class Literal "org.netbeans.api.mdr.MDRManager" forName = CatchClause CatchClauseParameter ClassNotFoundException e LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType String VariableDeclarator saxFactory MethodInvocation System Literal "javax.xml.parsers.SAXParserFactory" getProperty IfStatement BinaryOperation != MemberReference saxFactory Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MemberReference saxFactory StatementExpression MethodInvocation sb MethodInvocation Translator Literal "label.sax-factory1" MemberReference msgArgs append LocalVariableDeclaration ReferenceType Object VariableDeclarator saxObject Literal null TryStatement StatementExpression Assignment MemberReference saxObject MethodInvocation SAXParserFactory newInstance = LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MethodInvocation saxObject MethodInvocation getName getClass StatementExpression MethodInvocation sb MethodInvocation Translator Literal "label.sax-factory2" MemberReference msgArgs append StatementExpression MethodInvocation sb Literal "\n" append CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation sb MethodInvocation Translator Literal "label.error-sax-factory" localize append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference PACKAGELIST length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference sb MemberReference ArraySelector MemberReference i PACKAGELIST getComponentVersionInfo IfStatement BinaryOperation != MemberReference saxObject Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator pckg MethodInvocation saxObject MethodInvocation getPackage getClass IfStatement BinaryOperation != MemberReference pckg Literal null BlockStatement StatementExpression MethodInvocation MemberReference sb MethodInvocation pckg getName getComponentVersionInfo StatementExpression MethodInvocation sb Literal "\n" append StatementExpression MethodInvocation sb MethodInvocation Translator Literal "label.os" localize append StatementExpression MethodInvocation sb MethodInvocation System Literal "os.name" Literal "unknown" getProperty append StatementExpression MethodInvocation sb Literal '\n' append StatementExpression MethodInvocation sb MethodInvocation Translator Literal "label.os-version" localize append StatementExpression MethodInvocation sb MethodInvocation System Literal "os.version" Literal "unknown" getProperty append StatementExpression MethodInvocation sb Literal '\n' append StatementExpression MethodInvocation sb MethodInvocation Translator Literal "label.language" localize append StatementExpression MethodInvocation sb MethodInvocation Locale MethodInvocation getLanguage getDefault append StatementExpression MethodInvocation sb Literal '\n' append StatementExpression MethodInvocation sb MethodInvocation Translator Literal "label.country" localize append StatementExpression MethodInvocation sb MethodInvocation Locale MethodInvocation getCountry getDefault append StatementExpression MethodInvocation sb Literal '\n' append StatementExpression MethodInvocation sb Literal '\n' append ReturnStatement MethodInvocation sb toString CatchClause CatchClauseParameter Exception e ReturnStatement MethodInvocation e toString	1
MethodDeclaration Modifier public FormalParameter BasicType boolean isDestroy IfStatement MemberReference isDestroy BlockStatement IfStatement BinaryOperation == MemberReference destroyFig Literal null BlockStatement StatementExpression Assignment MemberReference destroyFig ClassCreator ReferenceType MethodInvocation getOwner ClassCreator ReferenceType Rectangle MethodInvocation getX BinaryOperation + MethodInvocation getY MethodInvocation getHeight MethodInvocation getWidth MethodInvocation getWidth MethodInvocation getSettings = StatementExpression MethodInvocation MemberReference destroyFig addFig BlockStatement IfStatement BinaryOperation != MemberReference destroyFig Literal null BlockStatement StatementExpression MethodInvocation MemberReference destroyFig removeFig StatementExpression Assignment MemberReference destroyFig Literal null =	0
MethodDeclaration Modifier public static ReferenceType List getPrimaryKeyAttributes FormalParameter ReferenceType Object relation LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Collection VariableDeclarator attributes MethodInvocation Model MethodInvocation MemberReference relation getAttributes getFacade ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation attributes iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator attribute MethodInvocation it next IfStatement MethodInvocation MemberReference attribute BlockStatement StatementExpression MethodInvocation result MemberReference attribute add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier public setEscaping FormalParameter BasicType boolean TransformerException StatementExpression MethodInvocation rtfEmitter MemberReference setEscaping	0
MethodDeclaration Modifier public keyPressed FormalParameter ReferenceType KeyEvent e IfStatement BinaryOperation == MethodInvocation e getKeyCode MemberReference KeyEvent VK_LEFT BlockStatement LocalVariableDeclaration Modifier final ReferenceType Point VariableDeclarator posn MethodInvocation MethodInvocation getViewport IfStatement BinaryOperation > MemberReference posn x Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType Point BinaryOperation - MemberReference posn x Literal 1 MemberReference posn y setViewPosition getViewport IfStatement BinaryOperation == MethodInvocation e getKeyCode MemberReference KeyEvent VK_RIGHT BlockStatement LocalVariableDeclaration Modifier final ReferenceType Point VariableDeclarator posn MethodInvocation MethodInvocation getViewport IfStatement BinaryOperation > BinaryOperation - MethodInvocation list getWidth MemberReference posn x MethodInvocation MethodInvocation getWidth getViewport BlockStatement StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType Point BinaryOperation + MemberReference posn x Literal 1 MemberReference posn y setViewPosition getViewport	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String generateFiles FormalParameter ReferenceType Collection elements FormalParameter ReferenceType String path FormalParameter BasicType boolean deps LocalVariableDeclaration ReferenceType String VariableDeclarator filename MemberReference SCRIPT_FILENAME IfStatement MethodInvocation ! path MemberReference FILE_SEPARATOR endsWith BlockStatement StatementExpression Assignment MemberReference path MemberReference FILE_SEPARATOR += LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator fullFilename BinaryOperation + MemberReference path MemberReference filename IfStatement MethodInvocation ! elements isEmpty BlockStatement StatementExpression MethodInvocation LOG Literal "validating model" debug LocalVariableDeclaration ReferenceType ModelValidator VariableDeclarator validator ClassCreator ReferenceType ModelValidator LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator problems MethodInvocation validator MemberReference elements validate IfStatement BinaryOperation > MethodInvocation problems size Literal 0 BlockStatement StatementExpression MethodInvocation LOG Literal "model not valid, exiting code generation" debug LocalVariableDeclaration ReferenceType String VariableDeclarator error MethodInvocation Utils MemberReference problems MemberReference LINE_SEPARATOR stringsToString LocalVariableDeclaration ReferenceType ExceptionDialog VariableDeclarator ed ClassCreator ReferenceType ExceptionDialog MethodInvocation ProjectBrowser getInstance Literal "Error in model" Literal "Model not valid" MemberReference error StatementExpression MethodInvocation ed Literal true setModal StatementExpression MethodInvocation ed Literal true setVisible IfStatement MethodInvocation SelectCodeCreatorDialog execute BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator code MethodInvocation MemberReference elements generateCode StatementExpression MethodInvocation MemberReference fullFilename MemberReference code writeFile StatementExpression MethodInvocation result MemberReference fullFilename add ReturnStatement MemberReference result	1
MethodDeclaration * <p>Insert text callouts into a verbatim * <p>This method examines the <tt>areaset</tt> and <tt>area</tt> * in the supplied <tt>areaspec</tt> and decorates the * result tree fragment with appropriate callout * <p>If a <tt>label</tt> attribute is supplied on an * its content will be used for the label, otherwise the * number will be used, surrounded by parenthesis. Callout numbers * also be represented as graphics. Callouts * numbered in document order. All of the <tt>area</tt>s in * <tt>areaset</tt> get the same * <p>Only the <tt>linecolumn</tt> and <tt>linerange</tt> units * supported. If no unit is specifed, <tt>linecolumn</tt> is * If only a line is specified, the callout decoration appears * the defaultColumn. Lines will be padded with blanks to reach * necessary column, but callouts that are located beyond the * line of the verbatim environment will be * <p>Callouts are inserted before the character at the * where they are to * <p>If callouts are used, and the callout number is * than or equal to the $callout.graphics.number.limit, the following * will be generated for * * &lt;img * * * If the $stylesheet.result.type is 'fo', the following image * be * * &lt;fo:external-graphic * * <p>If the callout number exceeds * the callout will be the callout number surrounded * * @param context The stylesheet * @param areaspecNodeSet The source node set that contains the * @param rtf The result tree fragment of the verbatim * @return The modified result tree */ Modifier public static ReferenceType NodeSetValue insertCallouts FormalParameter ReferenceType Context context FormalParameter ReferenceType NodeList areaspecNodeList FormalParameter ReferenceType NodeSetValue rtf_ns LocalVariableDeclaration ReferenceType FragmentValue VariableDeclarator rtf Cast ReferenceType FragmentValue MemberReference rtf_ns StatementExpression MethodInvocation MemberReference context setupCallouts TryStatement LocalVariableDeclaration ReferenceType Controller VariableDeclarator controller MethodInvocation context getController LocalVariableDeclaration ReferenceType NamePool VariableDeclarator namePool MethodInvocation controller getNamePool LocalVariableDeclaration ReferenceType CalloutEmitter VariableDeclarator cEmitter ClassCreator ReferenceType CalloutEmitter MemberReference controller MemberReference namePool MemberReference defaultColumn MemberReference foStylesheet MemberReference fCallout StatementExpression MethodInvocation cEmitter MemberReference areaspecNodeList setupCallouts StatementExpression MethodInvocation rtf MemberReference cEmitter replay ReturnStatement MethodInvocation cEmitter getResultTreeFragment CatchClause CatchClauseParameter TransformerException e StatementExpression MethodInvocation System.out Literal "Transformer Exception in insertCallouts" println ReturnStatement MemberReference rtf	1
MethodDeclaration Modifier public ReferenceType Object getNodeInstance ReturnStatement ClassReference ReferenceType	0
MethodDeclaration deleteExtensionPoint FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType VariableDeclarator ep Cast ReferenceType MemberReference elem LocalVariableDeclaration ReferenceType Collection VariableDeclarator xtends Cast ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage MethodInvocation ep refOutermostPackage ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation xtends iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Extend VariableDeclarator extend Cast ReferenceType Extend MethodInvocation it next LocalVariableDeclaration ReferenceType Collection VariableDeclarator eps MethodInvocation extend getExtensionPoint IfStatement BinaryOperation && BinaryOperation == MethodInvocation eps size Literal 1 MethodInvocation eps MemberReference elem contains BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference extend delete getUmlFactory	1
MethodDeclaration Modifier public ReferenceType EnumerationLiteral ReturnStatement MethodInvocation	0
MethodDeclaration Modifier private addNodesToMap FormalParameter ReferenceType ExplorerTreeNode node LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator children MethodInvocation node children WhileStatement MethodInvocation children hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator child Cast ReferenceType ExplorerTreeNode MethodInvocation children nextElement StatementExpression MethodInvocation MemberReference child addNodesToMap StatementExpression MethodInvocation MethodInvocation node getUserObject MemberReference node addToMap	0
MethodDeclaration Modifier public Annotation Override ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType String getName FormalParameter ReferenceType Object handle IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType EObject BinaryOperation instanceof MemberReference handle ReferenceType String BinaryOperation instanceof MemberReference handle ReferenceType Enumerator BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation instanceof MemberReference handle ReferenceType String BlockStatement ReturnStatement Cast ReferenceType String MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType NamedElement BlockStatement IfStatement BinaryOperation != Cast ReferenceType NamedElement MemberReference handle Literal null BlockStatement ReturnStatement Cast ReferenceType NamedElement MemberReference handle BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Enumerator BlockStatement ReturnStatement Cast ReferenceType Enumerator MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType DynamicEObjectImpl BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator name ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType VariableDeclarator c Cast ReferenceType DynamicEObjectImpl MemberReference handle IfStatement BinaryOperation != MemberReference c Literal null BlockStatement StatementExpression MethodInvocation name MethodInvocation Literal '<' append Literal '<' append LocalVariableDeclaration ReferenceType EObject VariableDeclarator p MethodInvocation c eContainer IfStatement BinaryOperation instanceof MemberReference p ReferenceType EPackage BlockStatement StatementExpression MethodInvocation name MethodInvocation Literal ':' append Cast ReferenceType EPackage MemberReference p append BlockStatement StatementExpression MethodInvocation name Literal "(null):" append StatementExpression MethodInvocation name MethodInvocation Literal '>' append MethodInvocation Literal '>' append MethodInvocation c getName append LocalVariableDeclaration ReferenceType Element VariableDeclarator e MethodInvocation UMLUtil Cast ReferenceType DynamicEObjectImpl MemberReference handle getBaseElement IfStatement BinaryOperation && BinaryOperation != MemberReference e Literal null BinaryOperation instanceof MemberReference e ReferenceType NamedElement BlockStatement StatementExpression MethodInvocation name Cast ReferenceType NamedElement MemberReference e append ReturnStatement MethodInvocation name toString ReturnStatement MethodInvocation handle toString IfStatement BinaryOperation instanceof MemberReference handle ReferenceType EPackage BlockStatement ReturnStatement Cast ReferenceType EPackage MemberReference handle BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "The element " MemberReference handle Literal " is not named"	1
MethodDeclaration Modifier public doCopyGeneralizableElement FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target IfStatement BinaryOperation && BinaryOperation instanceof MemberReference source ReferenceType GeneralizableElement BinaryOperation instanceof MemberReference target ReferenceType GeneralizableElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "source: " MemberReference source Literal ",target: " MemberReference target StatementExpression MethodInvocation MemberReference source MemberReference target LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator targetGE Cast ReferenceType GeneralizableElement MemberReference target LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator sourceGE Cast ReferenceType GeneralizableElement MemberReference source StatementExpression MethodInvocation targetGE MethodInvocation sourceGE isAbstract setAbstract StatementExpression MethodInvocation targetGE MethodInvocation sourceGE isLeaf setLeaf StatementExpression MethodInvocation targetGE MethodInvocation sourceGE isRoot setRoot	1
MethodDeclaration Modifier public setClassifiers FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection classifiers StatementExpression Cast ReferenceType InstanceSpecification MemberReference handle StatementExpression MethodInvocation classifiers Cast ReferenceType InstanceSpecification MemberReference handle removeAll StatementExpression Cast ReferenceType InstanceSpecification MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getModelElement getMetaTypes	0
MethodDeclaration Modifier protected handleHistoryfile FormalParameter ReferenceType XMLElement e IfStatement BinaryOperation == MethodInvocation e Literal "name" getAttribute Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator historyfile MethodInvocation e MethodInvocation trim Literal "name" getAttribute StatementExpression MethodInvocation project MemberReference historyfile setHistoryFile	0
MethodDeclaration Modifier protected ReferenceType String getIconName ReturnStatement Literal "SignalEvent"	0
MethodDeclaration Modifier public BasicType boolean containsKnowledgeType FormalParameter ReferenceType String type ReturnStatement MethodInvocation MethodInvocation MemberReference type containsKnowledgeType getPoster	0
MethodDeclaration Modifier public ReferenceType getExtensionPoint FormalParameter ReferenceType Object handle FormalParameter BasicType int index IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType Extend MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Constraint buildConstraint FormalParameter Modifier final ReferenceType Object constrElement IfStatement BinaryOperation instanceof MemberReference constrElement ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The constrained element must be instance of Element." IfStatement BinaryOperation == Cast ReferenceType Element MemberReference constrElement Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException BinaryOperation + Literal "The containing package of the Literal " element must be LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Constraint VariableDeclarator constraint MethodInvocation createConstraint StatementExpression MethodInvocation constraint MethodInvocation Cast ReferenceType Element MemberReference constrElement add StatementExpression MethodInvocation MethodInvocation MemberReference constraint add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the constraint that constrains the element #" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference constrElement ReturnStatement Cast ReferenceType Constraint MethodInvocation run MethodInvocation Literal 0 get getParams	0
MethodDeclaration Modifier protected Annotation Override textEditStarted FormalParameter ReferenceType FigText ft IfStatement BinaryOperation == MemberReference ft MethodInvocation srcEnd getRole BlockStatement StatementExpression MethodInvocation srcEnd MethodInvocation textEditStarted getRole IfStatement BinaryOperation == MemberReference ft MethodInvocation destEnd getRole BlockStatement StatementExpression MethodInvocation destEnd MethodInvocation textEditStarted getRole IfStatement BinaryOperation == MemberReference ft MethodInvocation srcEnd getMult BlockStatement StatementExpression MethodInvocation srcEnd MethodInvocation textEditStarted getMult IfStatement BinaryOperation == MemberReference ft MethodInvocation destEnd getMult BlockStatement StatementExpression MethodInvocation destEnd MethodInvocation textEditStarted getMult BlockStatement StatementExpression SuperMethodInvocation MemberReference ft textEditStarted	0
MethodDeclaration Modifier public setVisible FormalParameter BasicType boolean arg0 StatementExpression SuperMethodInvocation MemberReference arg0 setVisible IfStatement MemberReference arg0 BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent lse IfStatement MethodInvocation lse getValueIsAdjusting BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation lse getSource IfStatement BinaryOperation || BinaryOperation != MemberReference src MethodInvocation table getSelectionModel BinaryOperation == MethodInvocation table getSelectedRow Literal - 1 BlockStatement ReturnStatement IfStatement MethodInvocation ! isSelected BlockStatement LocalVariableDeclaration ReferenceType ActionWrapper VariableDeclarator oldAction MethodInvocation MethodInvocation ShortcutMgr MethodInvocation shortcutField getText decodeKeyStroke getActionAlreadyAssigned IfStatement BinaryOperation != MemberReference oldAction Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation MessageFormat MethodInvocation Translator Literal "optionpane.conflict-shortcut" localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation shortcutField getText MethodInvocation oldAction getActionName format LocalVariableDeclaration BasicType int VariableDeclarator response MethodInvocation JOptionPane This MemberReference t MemberReference t MemberReference JOptionPane YES_NO_OPTION showConfirmDialog SwitchStatement MemberReference response SwitchStatementCase MemberReference JOptionPane YES_OPTION StatementExpression MethodInvocation oldAction Literal null setCurrentShortcut StatementExpression MethodInvocation table MemberReference oldAction Literal - 1 Literal - 1 setValueAt BreakStatement SwitchStatementCase MemberReference JOptionPane NO_OPTION StatementExpression MethodInvocation table MethodInvocation This removeListSelectionListener getSelectionModel StatementExpression MethodInvocation table MethodInvocation MemberReference lastRowSelected MemberReference lastRowSelected setSelectionInterval getSelectionModel StatementExpression MethodInvocation table MethodInvocation This addListSelectionListener getSelectionModel ReturnStatement StatementExpression MethodInvocation MemberReference ArraySelector MethodInvocation table getSelectedRow actions setTarget StatementExpression Assignment MemberReference lastRowSelected MethodInvocation table getSelectedRow =	1
MethodDeclaration Modifier private ReferenceType File zargoToUml FormalParameter ReferenceType File file FormalParameter ReferenceType ProgressMgr progressMgr OpenException InterruptedException LocalVariableDeclaration ReferenceType File VariableDeclarator combinedFile Literal null TryStatement StatementExpression Assignment MemberReference combinedFile MethodInvocation File Literal "combinedzargo_" Literal ".uml" createTempFile = StatementExpression MethodInvocation LOG BinaryOperation + Literal "Combining old style zargo sub files into new style uml file " MethodInvocation combinedFile getAbsolutePath info StatementExpression MethodInvocation combinedFile deleteOnExit LocalVariableDeclaration ReferenceType String VariableDeclarator encoding MethodInvocation Argo getEncoding LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator stream ClassCreator ReferenceType FileOutputStream MemberReference combinedFile LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator writer ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType OutputStreamWriter MemberReference stream MemberReference encoding StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + BinaryOperation + Literal "<?xml version = \"1.0\" " Literal "encoding = \"" MemberReference encoding Literal "\" ?>" println StatementExpression MethodInvocation MemberReference file MemberReference encoding MemberReference writer copyArgo StatementExpression MethodInvocation progressMgr nextPhase StatementExpression MethodInvocation MemberReference file Literal "profile" MemberReference encoding MemberReference writer copyMember StatementExpression MethodInvocation MemberReference file MemberReference encoding MemberReference writer copyXmi StatementExpression MethodInvocation MemberReference file MemberReference encoding MemberReference writer copyDiagrams StatementExpression MethodInvocation MemberReference file Literal MemberReference encoding MemberReference writer copyMember StatementExpression MethodInvocation progressMgr nextPhase StatementExpression MethodInvocation writer Literal "</uml>" println StatementExpression MethodInvocation writer close StatementExpression MethodInvocation LOG Literal "Completed combining files" info CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e ReturnStatement MemberReference combinedFile	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getNamespace getFacade MemberReference element	0
MethodDeclaration Modifier protected Annotation Override BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2 TYPE_ASSOCIATION_END_NAME	0
MethodDeclaration Modifier protected FormalParameter BasicType boolean v StatementExpression Assignment MemberReference MemberReference v =	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement toString	0
MethodDeclaration Modifier private removeNodesFromMap FormalParameter ReferenceType ExplorerTreeNode node LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator children MethodInvocation node children WhileStatement MethodInvocation children hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator child Cast ReferenceType ExplorerTreeNode MethodInvocation children nextElement StatementExpression MethodInvocation MemberReference child removeNodesFromMap StatementExpression MethodInvocation MethodInvocation node getUserObject MemberReference node removeFromMap	0
MethodDeclaration Modifier public final ReferenceType String getContent IfStatement MemberReference bContent BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation length Literal 0 BlockStatement ReturnStatement MemberReference ReturnStatement Literal "" ReturnStatement Literal null	0
MethodDeclaration Modifier private centerParents ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation nodeRows size Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MethodInvocation nodeRows MemberReference i get BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ClassdiagramNode VariableDeclarator children MethodInvocation node getDownNodes IfStatement BinaryOperation > MethodInvocation children size Literal 0 BlockStatement StatementExpression MethodInvocation node ClassCreator ReferenceType Point BinaryOperation - MethodInvocation MemberReference children xCenter BinaryOperation / MethodInvocation node MemberReference width getSize Literal 2 MethodInvocation node MemberReference y getLocation setLocation	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType AssociationEnd getOtherAssociationEnds FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator a Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation == MemberReference a Literal null BlockStatement ReturnStatement MethodInvocation Collections emptyList LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType AssociationEnd VariableDeclarator allEnds MethodInvocation a getConnection IfStatement BinaryOperation == MemberReference allEnds Literal null BlockStatement ReturnStatement MethodInvocation Collections emptyList StatementExpression Assignment MemberReference allEnds ClassCreator ReferenceType ArrayList TypeArgument ReferenceType AssociationEnd MemberReference allEnds = StatementExpression MethodInvocation allEnds MemberReference handle remove ReturnStatement MemberReference allEnds CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	1
MethodDeclaration Modifier public setSources FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection specifications StatementExpression MethodInvocation impl MemberReference handle MemberReference specifications setSources	0
MethodDeclaration Modifier public FormalParameter ReferenceType Point pt LocalVariableDeclaration BasicType int VariableDeclarator nRow MethodInvocation MemberReference pt x MemberReference pt y getRowForLocation IfStatement BinaryOperation < MemberReference nRow Literal 0 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator MethodInvocation getBounds StatementExpression Assignment MemberReference nRow TernaryExpression BinaryOperation <= BinaryOperation + MemberReference pt y MemberReference y MemberReference TernaryExpression BinaryOperation <= MemberReference nRow Literal 0 Literal 0 BinaryOperation - MemberReference nRow Literal 1 TernaryExpression BinaryOperation < MemberReference nRow BinaryOperation - MethodInvocation getRowCount Literal 1 BinaryOperation + MemberReference nRow Literal 1 MemberReference nRow = StatementExpression MethodInvocation MemberReference nRow scrollRowToVisible	1
MethodDeclaration Modifier public IfStatement BinaryOperation == MemberReference scope MemberReference Argo BlockStatement StatementExpression MethodInvocation showBoldNames MethodInvocation MemberReference DiagramAppearance getBoolean setSelected StatementExpression Assignment MemberReference MethodInvocation DiagramAppearance MethodInvocation getInstance = StatementExpression Assignment MemberReference MethodInvocation Configuration MemberReference DiagramAppearance getInteger = StatementExpression MethodInvocation MethodInvocation Configuration MemberReference DiagramAppearance Literal true getBoolean setSelected StatementExpression MethodInvocation defaultShadowWidth MethodInvocation Configuration MemberReference DiagramAppearance Literal 1 getInteger setSelectedIndex IfStatement BinaryOperation == MemberReference scope MemberReference Argo BlockStatement AssertStatement BinaryOperation != MemberReference p Literal null LocalVariableDeclaration ReferenceType ProjectSettings VariableDeclarator ps MethodInvocation p getProjectSettings LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator ds MethodInvocation ps getDefaultDiagramSettings StatementExpression MethodInvocation showBoldNames MethodInvocation ds isShowBoldNames setSelected StatementExpression Assignment MemberReference MethodInvocation ds = StatementExpression Assignment MemberReference MethodInvocation ds getFontSize = StatementExpression MethodInvocation MethodInvocation ! ds setSelected StatementExpression MethodInvocation defaultShadowWidth MethodInvocation ds getDefaultShadowWidth setSelectedIndex	0
MethodDeclaration Modifier private LocalVariableDeclaration BasicType int VariableDeclarator xInit Literal 0 StatementExpression Assignment MemberReference yPos BinaryOperation / MethodInvocation getVGap Literal 2 = ForStatement EnhancedForControl VariableDeclaration ReferenceType NodeRow VariableDeclarator row MemberReference nodeRows BlockStatement StatementExpression Assignment MemberReference xPos MemberReference xInit = LocalVariableDeclaration BasicType int VariableDeclarator rowHeight Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference row BlockStatement StatementExpression MethodInvocation MemberReference node placeNode StatementExpression Assignment MemberReference rowHeight MethodInvocation Math MemberReference rowHeight MethodInvocation node MemberReference height getSize max = StatementExpression Assignment MemberReference yPos BinaryOperation + MemberReference rowHeight MethodInvocation getVGap += StatementExpression MethodInvocation centerParents	1
MethodDeclaration Modifier public BasicType boolean isComposite FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation Cast ReferenceType Property MemberReference handle equals	0
MethodDeclaration Modifier private handleFireNotationEvent FormalParameter Modifier final ReferenceType ArgoNotationEvent event FormalParameter Modifier final ReferenceType ArgoNotationEventListener listener IfStatement MethodInvocation SwingUtilities isEventDispatchThread BlockStatement StatementExpression MethodInvocation MemberReference event MemberReference listener fireNotationEventInternal BlockStatement StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference event MemberReference listener fireNotationEventInternal invokeLater	1
MethodDeclaration Modifier public final BasicType boolean addTag FormalParameter BasicType int iTagType FormalParameter ReferenceType String sTagValue IllegalArgumentException SwitchStatement MemberReference iTagType SwitchStatementCase TAG_TYPE_PARAM LocalVariableDeclaration ReferenceType ParamList VariableDeclarator alParams Cast ReferenceType ParamList MethodInvocation tmTags Literal "param" get IfStatement BinaryOperation != MemberReference alParams Literal null BlockStatement LocalVariableDeclaration ReferenceType ParamTag VariableDeclarator tagParam ClassCreator ReferenceType ParamTag IfStatement MethodInvocation tagParam MemberReference sTagValue setContent BlockStatement ReturnStatement MethodInvocation alParams MemberReference tagParam add ReturnStatement Literal false BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Can not add a tag of " Literal "type " MemberReference iTagType Literal " with value '" MemberReference sTagValue Literal "' to the DocBlock" ReturnStatement Literal false	1
MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier private BasicType boolean equal FormalParameter ReferenceType Expression expr1 FormalParameter ReferenceType Expression expr2 IfStatement BinaryOperation == MemberReference expr1 Literal null BlockStatement IfStatement BinaryOperation == MemberReference expr2 Literal null BlockStatement ReturnStatement Literal true BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement MethodInvocation expr1 MemberReference expr2 equals	1
MethodDeclaration Modifier public FormalParameter BasicType double vectorAngle FormalParameter BasicType int vectorDistance StatementExpression MethodInvocation MemberReference vectorAngle setDisplacementAngle StatementExpression MethodInvocation MemberReference vectorDistance setDisplacementDistance	0
MethodDeclaration Modifier public BasicType int indexOf FormalParameter ReferenceType Object o LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation iterator IfStatement BinaryOperation == MemberReference o Literal null BlockStatement WhileStatement MethodInvocation it hasNext BlockStatement IfStatement BinaryOperation == MemberReference o MethodInvocation it next BlockStatement ReturnStatement MemberReference index StatementExpression MemberReference ++ index BlockStatement WhileStatement MethodInvocation it hasNext BlockStatement IfStatement MethodInvocation o MethodInvocation it next equals BlockStatement ReturnStatement MemberReference index StatementExpression MemberReference ++ index ReturnStatement Literal - 1	1
MethodDeclaration Modifier public Annotation Deprecated BasicType boolean getShowVisibilityValue ReturnStatement MethodInvocation npSettings isShowVisibilities	0
MethodDeclaration Annotation Override ReferenceType UMLMutableGraphSupport createGraphModel ReturnStatement ClassCreator ReferenceType ActivityDiagramGraphModel	0
MethodDeclaration Modifier public endElement FormalParameter BasicType int nameCode TransformerException StatementExpression MethodInvocation rtfEmitter MemberReference nameCode endElement	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Association buildAssociation FormalParameter ReferenceType Object fromClassifier FormalParameter ReferenceType Object aggregationKind1 FormalParameter ReferenceType Object toClassifier FormalParameter ReferenceType Object aggregationKind2 FormalParameter ReferenceType Boolean unidirectional IfStatement BinaryOperation != MemberReference unidirectional Literal null BlockStatement ReturnStatement MethodInvocation MemberReference fromClassifier MemberReference ! unidirectional MemberReference aggregationKind1 MemberReference toClassifier Literal true MemberReference aggregationKind2 Literal null buildAssociation BlockStatement ReturnStatement MethodInvocation MemberReference fromClassifier Literal null MemberReference aggregationKind1 MemberReference toClassifier Literal null MemberReference aggregationKind2 Literal null buildAssociation	1
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_70 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 0L Literal 2323857407723175936L Literal 256L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType Object getAddedTargets ReturnStatement MethodInvocation MethodInvocation toArray getAddedTargetCollection	0
MethodDeclaration Modifier public BasicType boolean isSaveActionEnabled ReturnStatement This MemberReference saveAction MethodInvocation isEnabled	0
MethodDeclaration Modifier private ReferenceType Class loadClass FormalParameter ReferenceType String name TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator cls MethodInvocation Class MemberReference name forName ReturnStatement MemberReference cls CatchClause CatchClauseParameter ClassNotFoundException ignore StatementExpression MethodInvocation LOG BinaryOperation + Literal "ClassNotFoundException. Could not find class:" MemberReference name debug ReturnStatement Literal null	1
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner StatementExpression SuperMethodInvocation MemberReference oldOwner MemberReference newOwner updateListeners IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator newSm MethodInvocation Model MethodInvocation MemberReference newOwner getSubmachine getFacade IfStatement BinaryOperation != MemberReference newSm Literal null BlockStatement StatementExpression MethodInvocation MemberReference newSm addElementListener	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType boolean specification IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public BasicType boolean isASimpleState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType SimpleState	0
MethodDeclaration Modifier protected ReferenceType Action getActionAssociation IfStatement BinaryOperation == MemberReference actionAssociation Literal null BlockStatement StatementExpression Assignment MemberReference actionAssociation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionAddAssociationRole MethodInvocation Model MethodInvocation getAggregationKind Literal false Literal Literal = ReturnStatement MemberReference actionAssociation	0
MethodDeclaration Modifier public Annotation Override BasicType int getLineWidth ReturnStatement MethodInvocation cover getLineWidth	0
MethodDeclaration Modifier public startElement FormalParameter BasicType int nameCode FormalParameter ReferenceType org ReferenceType xml ReferenceType sax ReferenceType Attributes attributes FormalParameter BasicType int namespaces FormalParameter BasicType int nscount TransformerException LocalVariableDeclaration BasicType int VariableDeclarator thisFingerprint MethodInvocation namePool MemberReference nameCode getFingerprint LocalVariableDeclaration BasicType boolean VariableDeclarator isLink BinaryOperation || BinaryOperation == MemberReference thisFingerprint MemberReference htmlAFingerprint BinaryOperation == MemberReference thisFingerprint MemberReference xhtmlAFingerprint IfStatement MemberReference isLink BlockStatement StatementExpression MemberReference ++ linkDepth StatementExpression Assignment MemberReference tryAgain BinaryOperation || MemberReference tryAgain MemberReference inSkip = IfStatement BinaryOperation && BinaryOperation && MemberReference isLink BinaryOperation > MemberReference linkDepth Literal 1 MemberReference ! inSkip BlockStatement StatementExpression Assignment MemberReference inSkip Literal true = StatementExpression Assignment MemberReference saveStack ClassCreator ReferenceType Stack = LocalVariableDeclaration ReferenceType Stack VariableDeclarator tempStack ClassCreator ReferenceType Stack WhileStatement MethodInvocation ! elementStack empty BlockStatement LocalVariableDeclaration ReferenceType StartElementInfo VariableDeclarator elem Cast ReferenceType StartElementInfo MethodInvocation elementStack pop StatementExpression MethodInvocation rtfEmitter MethodInvocation elem getNameCode endElement StatementExpression MethodInvocation saveStack MemberReference elem push StatementExpression MethodInvocation tempStack MemberReference elem push WhileStatement MethodInvocation ! tempStack empty BlockStatement LocalVariableDeclaration ReferenceType StartElementInfo VariableDeclarator elem Cast ReferenceType StartElementInfo MethodInvocation tempStack pop StatementExpression MethodInvocation elementStack MemberReference elem push IfStatement MemberReference inSkip BlockStatement StatementExpression MemberReference ++ skipDepth BlockStatement StatementExpression MethodInvocation rtfEmitter MemberReference nameCode MemberReference attributes MemberReference namespaces MemberReference nscount startElement LocalVariableDeclaration ReferenceType StartElementInfo VariableDeclarator sei ClassCreator ReferenceType StartElementInfo MemberReference nameCode MemberReference attributes MemberReference namespaces MemberReference nscount StatementExpression MethodInvocation elementStack MemberReference sei push	1
MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference showAssociationNames MemberReference ! showem = StatementExpression Assignment MemberReference showAssociationNamesSet MemberReference oldValid =	0
MethodDeclaration Modifier public final parameter_list RecognitionException TokenStreamException StatementExpression MethodInvocation parameter_declaration_list BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ELLIPSIS BlockStatement StatementExpression MethodInvocation MemberReference ELLIPSIS match BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public ReferenceType Poster getPoster ReturnStatement MemberReference thePoster	0
MethodDeclaration Modifier public notifyObservers StatementExpression MethodInvocation setChanged StatementExpression SuperMethodInvocation notifyObservers	1
MethodDeclaration Modifier private logError FormalParameter ReferenceType String message FormalParameter ReferenceType String identifier StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + MemberReference message Literal " : " MemberReference identifier warn	1
MethodDeclaration Modifier public ReferenceType Object getImportedElement FormalParameter ReferenceType Object elementImport IfStatement BinaryOperation instanceof MemberReference elementImport ReferenceType ElementImport BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType ElementImport MemberReference elementImport	0
MethodDeclaration Modifier public ReferenceType DataTypesFactoryEUMLImpl getDataTypesFactory IfStatement BinaryOperation == MemberReference theDataTypesFactory Literal null BlockStatement StatementExpression Assignment MemberReference theDataTypesFactory ClassCreator ReferenceType DataTypesFactoryEUMLImpl This = ReturnStatement MemberReference theDataTypesFactory	0
MethodDeclaration BasicType int getResolution ReturnStatement MemberReference resolution	0
MethodDeclaration Modifier public ReferenceType Class getColumnClass FormalParameter BasicType int col SwitchStatement MemberReference col SwitchStatementCase Literal 0 ReturnStatement ClassReference ReferenceType String SwitchStatementCase Literal 1 ReturnStatement ClassReference ReferenceType Boolean SwitchStatementCase ReturnStatement Literal null	1
MethodDeclaration Modifier protected ReferenceType Object createEvent FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation Model MethodInvocation MemberReference ns buildSignalEvent getStateMachinesFactory	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class VariableDeclarator clazz MethodInvocation createClass IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation clazz MemberReference name setName IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType BlockStatement StatementExpression MethodInvocation clazz Cast ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType MemberReference owner setPackage IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class BlockStatement StatementExpression Cast ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class MemberReference owner IfStatement BinaryOperation instanceof MemberReference owner ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference owner StatementExpression MethodInvocation MethodInvocation MemberReference clazz add getParams	0
MethodDeclaration Modifier public addFeature FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object f IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Classifier BinaryOperation instanceof MemberReference f ReferenceType Feature BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement ReturnStatement Cast ReferenceType GeneralizableElement MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement Cast ReferenceType Operation MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement ReturnStatement Cast ReferenceType Reception MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e IfStatement MethodInvocation MemberReference handle isAUMLElement BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean	0
MethodDeclaration Modifier private ReferenceType Object getDataTypeActions LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MethodInvocation getActionDataType MethodInvocation getActionEnumeration MethodInvocation getActionStereotype MethodInvocation getActionSignal MethodInvocation getActionException StatementExpression MethodInvocation ToolBarUtility MemberReference actions Literal manageDefault ReturnStatement MemberReference actions	0
MethodDeclaration Modifier public renderingChanged StatementExpression MethodInvocation mult renderingChanged StatementExpression MethodInvocation group renderingChanged	0
MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public showStatus FormalParameter ReferenceType String s StatementExpression MethodInvocation msg MemberReference s setText StatementExpression MethodInvocation MethodInvocation getBounds	0
MethodDeclaration Modifier public ReferenceType Binding buildBinding FormalParameter ReferenceType Object client FormalParameter ReferenceType Object FormalParameter ReferenceType List arguments LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Dependency VariableDeclarator clientDeps Cast ReferenceType ModelElement MemberReference client ForStatement EnhancedForControl VariableDeclaration ReferenceType Dependency VariableDeclarator dep MemberReference clientDeps BlockStatement IfStatement BinaryOperation instanceof MemberReference dep ReferenceType Binding BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "client is already client of another Binding" IfStatement BinaryOperation != MemberReference arguments Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType TemplateParameter VariableDeclarator params Cast ReferenceType ModelElement MemberReference IfStatement BinaryOperation != MethodInvocation params size MethodInvocation arguments size BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "number of arguments doesn't match number of params" LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType VariableDeclarator ita MethodInvocation arguments iterator ForStatement EnhancedForControl VariableDeclaration ReferenceType TemplateParameter VariableDeclarator param MemberReference params BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ta MethodInvocation ita next IfStatement BinaryOperation || BinaryOperation == MemberReference ta Literal null BinaryOperation == MethodInvocation ta getModelElement Literal null BlockStatement ContinueStatement IfStatement MethodInvocation ! param getParameter BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "type of argument doesn't match type of parameter" LocalVariableDeclaration ReferenceType Binding VariableDeclarator binding MethodInvocation createBinding StatementExpression MethodInvocation binding MethodInvocation Cast ReferenceType ModelElement MemberReference client add getClient StatementExpression MethodInvocation binding MethodInvocation Cast ReferenceType ModelElement MemberReference add getSupplier IfStatement BinaryOperation != MemberReference arguments Literal null BlockStatement StatementExpression MethodInvocation binding MethodInvocation MemberReference arguments addAll ReturnStatement MemberReference binding	1
MethodDeclaration Modifier public BasicType boolean supports FormalParameter ReferenceType Goal g ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType createPseudostate LocalVariableDeclaration ReferenceType VariableDeclarator myPseudostate MethodInvocation MethodInvocation getPseudostate MethodInvocation createPseudostate getSmPackage StatementExpression SuperMethodInvocation MemberReference myPseudostate ReturnStatement MemberReference myPseudostate	0
MethodDeclaration Modifier public ReferenceType Rectangle getNameBounds ReturnStatement MethodInvocation nameFig getBounds	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getCommonBehaviorFactory	0
MethodDeclaration Modifier public ReferenceType getCollaborationsHelper IfStatement BinaryOperation == MemberReference theCollaborationsHelper Literal null BlockStatement StatementExpression Assignment MemberReference theCollaborationsHelper ClassCreator ReferenceType This = ReturnStatement MemberReference theCollaborationsHelper	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference source ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation instanceof MemberReference target ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator targetME Cast ReferenceType ModelElement MemberReference target LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator sourceME Cast ReferenceType ModelElement MemberReference source StatementExpression MethodInvocation targetME MethodInvocation sourceME getName setName StatementExpression MethodInvocation MemberReference source MemberReference target doCopyElement StatementExpression MethodInvocation targetME MethodInvocation sourceME StatementExpression MethodInvocation targetME MethodInvocation sourceME getVisibility setVisibility StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference source MemberReference target copyTaggedValues getExtensionMechanismsFactory IfStatement MethodInvocation ! sourceME MethodInvocation isEmpty getStereotype BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Stereotype VariableDeclarator s MethodInvocation sourceME getStereotype BlockStatement StatementExpression MethodInvocation targetME MethodInvocation MemberReference s add getStereotype	1
MethodDeclaration Modifier private huntModulesFromNamedDirectory FormalParameter ReferenceType String dirname LocalVariableDeclaration ReferenceType File VariableDeclarator extensionDir ClassCreator ReferenceType File MemberReference dirname IfStatement MethodInvocation extensionDir isDirectory BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation extensionDir ClassCreator ReferenceType JarFileFilter listFiles ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator file MemberReference files BlockStatement LocalVariableDeclaration ReferenceType JarFile VariableDeclarator jarfile Literal null TryStatement StatementExpression Assignment MemberReference jarfile ClassCreator ReferenceType JarFile MemberReference file = IfStatement BinaryOperation != MemberReference jarfile Literal null BlockStatement LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator classloader ClassCreator ReferenceType URLClassLoader ArrayCreator ReferenceType URL ArrayInitializer MethodInvocation file MethodInvocation toURL toURI MethodInvocation MethodInvocation getClassLoader getClass TryStatement StatementExpression MethodInvocation MemberReference classloader MemberReference file processJarFile CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation LOG Literal "The class is not found." MemberReference e error ReturnStatement CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation LOG BinaryOperation + Literal "Cannot open Jar file " MemberReference file MemberReference ioe error	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index Literal 0 BlockStatement StatementExpression Assignment MemberReference index MethodInvocation getButton = IfStatement BinaryOperation || BinaryOperation == MemberReference index MemberReference TOP BinaryOperation == MemberReference index MemberReference BOTTOM BlockStatement ReturnStatement MethodInvocation Model MethodInvocation getUseCasesFactory ReturnStatement MethodInvocation Model MethodInvocation getUseCasesFactory	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement Cast ReferenceType Boolean MemberReference value setNavigable getCoreHelper	0
MethodDeclaration Modifier private ReferenceType Set TypeArgument ReferenceType Critic loadJavaCriticsForProfile FormalParameter ReferenceType Attributes attr FormalParameter ReferenceType ClassLoader classloader LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Critic VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Critic LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation attr Literal "Java-Critics" getValue IfStatement BinaryOperation != MemberReference value Literal null BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference value Literal "," WhileStatement MethodInvocation st hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator entry MethodInvocation st MethodInvocation trim nextToken TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator cl MethodInvocation classloader MemberReference entry loadClass LocalVariableDeclaration ReferenceType Critic VariableDeclarator critic Cast ReferenceType Critic MethodInvocation cl newInstance StatementExpression MethodInvocation ret MemberReference critic add CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error loading class: " MemberReference entry MemberReference e error CatchClause CatchClauseParameter InstantiationException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error instantianting class: " MemberReference entry MemberReference e error CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation LOG Literal "Exception" MemberReference e error ReturnStatement MemberReference ret	1
MethodDeclaration Modifier private setSourcePort FormalParameter ReferenceType FigEdge edge FormalParameter ReferenceType FigNode source StatementExpression MethodInvocation edge MemberReference source setSourcePortFig StatementExpression MethodInvocation edge MemberReference source setSourceFigNode	0
MethodDeclaration Modifier public Annotation Override ReferenceType String placeString LocalVariableDeclaration ReferenceType String VariableDeclarator placeString MethodInvocation retrieveBody IfStatement BinaryOperation == MemberReference placeString Literal null BlockStatement StatementExpression Assignment MemberReference placeString Literal "new = ReturnStatement MemberReference placeString	1
MethodDeclaration Modifier public Annotation Override setTarget FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Fig VariableDeclarator oldTarget MethodInvocation getPanelTarget IfStatement BinaryOperation != MemberReference oldTarget Literal null BlockStatement StatementExpression MethodInvocation oldTarget This StatementExpression SuperMethodInvocation MemberReference t setTarget LocalVariableDeclaration ReferenceType Fig VariableDeclarator newTarget MethodInvocation getPanelTarget IfStatement BinaryOperation != MemberReference newTarget Literal null BlockStatement StatementExpression MethodInvocation newTarget This addPropertyChangeListener	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAElementResidence getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getElementResidences MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier protected handleIssueStart FormalParameter ReferenceType XMLElement e StatementExpression Assignment MemberReference critic Literal null = StatementExpression Assignment MemberReference offenders Literal null =	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator state MethodInvocation getTarget AssertStatement MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator oldOnes ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference state getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator toBeRemoved ClassCreator ReferenceType ArrayList MemberReference oldOnes ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference selected BlockStatement IfStatement MethodInvocation oldOnes MemberReference o contains BlockStatement StatementExpression MethodInvocation toBeRemoved MemberReference o remove BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference state MemberReference o getStateMachinesHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference toBeRemoved BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference state MemberReference o getStateMachinesHelper	1
MethodDeclaration Modifier public static ReferenceType String getComments FormalParameter ReferenceType Object o FormalParameter ReferenceType String header FormalParameter ReferenceType String prefix FormalParameter ReferenceType String footer LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation != MemberReference header Literal null BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference LINE_SEPARATOR append MemberReference header append IfStatement MethodInvocation Model MethodInvocation MemberReference o isAUMLElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator comments MethodInvocation Model MethodInvocation MemberReference o getComments getFacade IfStatement MethodInvocation ! comments isEmpty BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator nlcount Literal 2 ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation comments iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation iter next LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation Model MethodInvocation MemberReference c getName getFacade StatementExpression Assignment MemberReference nlcount MethodInvocation MemberReference result MemberReference prefix MemberReference s TernaryExpression BinaryOperation > MemberReference nlcount Literal 1 Literal 0 Literal 1 appendComment = BlockStatement ReturnStatement Literal "" BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation != MemberReference footer Literal null BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference LINE_SEPARATOR append MemberReference footer append ReturnStatement MethodInvocation result toString	1
MethodDeclaration firePropertyChanged FormalParameter ReferenceType String propertyName FormalParameter ReferenceType Object oldValue FormalParameter ReferenceType Object newValue LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType PropertyChangeListener BlockStatement IfStatement BinaryOperation == MemberReference event Literal null BlockStatement StatementExpression Assignment MemberReference event ClassCreator ReferenceType PropertyChangeEvent This MemberReference propertyName MemberReference oldValue MemberReference newValue = StatementExpression Cast ReferenceType PropertyChangeListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners StatementExpression Assignment MemberReference event Literal null =	0
MethodDeclaration Modifier private updateSearchDirectoriesConfiguration IfStatement MemberReference ! disableConfigurationUpdate BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator s MemberReference searchDirectories BlockStatement StatementExpression MethodInvocation buf MethodInvocation MemberReference append MemberReference s append StatementExpression MethodInvocation Configuration MemberReference KEY_DEFAULT_DIRECTORIES MethodInvocation buf toString setString	0
MethodDeclaration Modifier private ReferenceType Object findMsg FormalParameter ReferenceType Object r FormalParameter ReferenceType String n LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference r getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation c iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator msg MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator gname MethodInvocation MemberReference msg generateMessageNumber IfStatement MethodInvocation MemberReference gname MemberReference n compareMsgNumbers BlockStatement ReturnStatement MemberReference msg ReturnStatement Literal null	0
MethodDeclaration BasicType int getRightMargin ReturnStatement MemberReference MARGIN	0
MethodDeclaration Modifier public final addListener FormalParameter ReferenceType ConfigurationKey key FormalParameter ReferenceType PropertyChangeListener p IfStatement BinaryOperation == MemberReference pcl Literal null BlockStatement StatementExpression Assignment MemberReference pcl ClassCreator ReferenceType PropertyChangeSupport This = StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "addPropertyChangeListener(" MethodInvocation key getKey Literal ")" debug StatementExpression MethodInvocation pcl MethodInvocation key getKey MemberReference p addPropertyChangeListener	1
MethodDeclaration Modifier public ReferenceType Collection loadModel FormalParameter ReferenceType ProfileReference reference ProfileException StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Loading profile from ZIP '" MethodInvocation reference getPath Literal "'" info IfStatement MethodInvocation ! reference MethodInvocation Literal "zip" endsWith getPath BlockStatement ThrowStatement ClassCreator ReferenceType ProfileException Literal "Profile could not be loaded!" LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is Literal null LocalVariableDeclaration ReferenceType File VariableDeclarator modelFile ClassCreator ReferenceType File MethodInvocation reference getPath LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation modelFile getName LocalVariableDeclaration ReferenceType String VariableDeclarator extension MethodInvocation filename MethodInvocation filename Literal '.' indexOf MethodInvocation filename Literal '.' lastIndexOf substring LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation modelFile getParent IfStatement BinaryOperation != MemberReference path Literal null BlockStatement StatementExpression MethodInvocation System Literal "org.argouml.model.modules_search_path" MemberReference path setProperty TryStatement StatementExpression Assignment MemberReference is MethodInvocation MethodInvocation modelFile MethodInvocation toURL toURI MemberReference extension openZipStreamAt = CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Exception while loading profile '" MethodInvocation reference getPath Literal "'" MemberReference e error ThrowStatement ClassCreator ReferenceType ProfileException MemberReference e CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Exception while loading profile '" MethodInvocation reference getPath Literal "'" MemberReference e error ThrowStatement ClassCreator ReferenceType ProfileException MemberReference e IfStatement BinaryOperation == MemberReference is Literal null BlockStatement ThrowStatement ClassCreator ReferenceType ProfileException Literal "Profile could not be loaded!" ReturnStatement SuperMethodInvocation MemberReference is MethodInvocation reference getPublicReference loadModel	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType String VariableDeclarator result SuperMethodInvocation toString IfStatement MethodInvocation result Literal "Uml" startsWith BlockStatement StatementExpression Assignment MemberReference result MethodInvocation result Literal 3 substring = ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected ReferenceType Action getActionMGeneralization IfStatement BinaryOperation == MemberReference actionMGeneralization Literal null BlockStatement StatementExpression Assignment MemberReference actionMGeneralization ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal "edgeClass" MethodInvocation Model MethodInvocation getGeneralization getMetaTypes Literal "button.new-generalization" = ReturnStatement MemberReference actionMGeneralization	0
MethodDeclaration Modifier public setTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection taggedValues StatementExpression MethodInvocation impl MemberReference handle MemberReference taggedValues setTaggedValue	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object argument StatementExpression MethodInvocation impl MemberReference handle MemberReference argument	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public projectLoaded FormalParameter ReferenceType ArgoStatusEvent e LocalVariableDeclaration ReferenceType String VariableDeclarator status MethodInvocation MessageFormat MethodInvocation Translator Literal "statusmsg.bar.open-project-status-read" localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation e getText format StatementExpression MethodInvocation MemberReference status showStatusOnSwingThread	0
MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType o ReturnStatement This	1
MethodDeclaration Modifier protected TraceDottedIdent FormalParameter ReferenceType String target FormalParameter ReferenceType StringBuilder sb LocalVariableDeclaration ReferenceType String VariableDeclarator dot Literal "" ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator s MemberReference target BlockStatement StatementExpression MethodInvocation sb BinaryOperation + MemberReference dot MemberReference s append StatementExpression Assignment MemberReference dot Literal "." =	1
MethodDeclaration Modifier protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation	0
MethodDeclaration Modifier public notationRenderingChanged FormalParameter ReferenceType NotationProvider FormalParameter ReferenceType String rendering IfStatement BinaryOperation == MemberReference notationProviderName MemberReference BlockStatement StatementExpression MethodInvocation nameFig MemberReference rendering setText StatementExpression MethodInvocation updateBounds StatementExpression MethodInvocation damage	0
MethodDeclaration Modifier private ReferenceType String generateClassifierAssociations FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator text ClassCreator ReferenceType StringBuilder IfStatement MethodInvocation Model MethodInvocation MemberReference element isAClass getFacade BlockStatement StatementExpression MethodInvocation text MethodInvocation Literal "// --- ---\n" append MemberReference INDENT append ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator assocEnd MethodInvocation Model MethodInvocation MemberReference element getAssociationEnds getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation MemberReference assocEnd IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation text MemberReference INDENT append StatementExpression MethodInvocation text MethodInvocation MemberReference generateAssociationEnd append ReturnStatement MethodInvocation text MethodInvocation toString Literal "\n\n" append	0
MethodDeclaration Modifier public Annotation Override StatementExpression Assignment MemberReference refreshTransaction Literal true = LocalVariableDeclaration ReferenceType FigAssociationClass VariableDeclarator panelTarget Cast ReferenceType FigAssociationClass MethodInvocation getPanelTarget TryStatement StatementExpression SuperMethodInvocation LocalVariableDeclaration Modifier final ReferenceType FigCompartmentBox VariableDeclarator fcb MethodInvocation panelTarget getAssociationClass IfStatement BinaryOperation != MemberReference fcb Literal null BlockStatement LocalVariableDeclaration ReferenceType FigCompartment VariableDeclarator compartment MethodInvocation fcb MethodInvocation Model MethodInvocation getAttribute getMetaTypes getCompartment StatementExpression MethodInvocation attrCheckBox MethodInvocation compartment isVisible setSelected StatementExpression Assignment MemberReference compartment MethodInvocation fcb MethodInvocation Model MethodInvocation getOperation getMetaTypes getCompartment = StatementExpression MethodInvocation operCheckBox MethodInvocation compartment isVisible setSelected StatementExpression Assignment MemberReference refreshTransaction Literal false = LocalVariableDeclaration ReferenceType Fig VariableDeclarator target MemberReference panelTarget IfStatement BinaryOperation != Cast ReferenceType FigAssociationClass MemberReference target Literal null BlockStatement StatementExpression Assignment MemberReference target Cast ReferenceType FigAssociationClass MemberReference target = LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator figBounds MethodInvocation target getBounds LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator styleBounds MethodInvocation IfStatement MethodInvocation ! figBounds MemberReference styleBounds equals BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference figBounds x Literal "," MemberReference figBounds y Literal "," MemberReference figBounds width Literal "," MemberReference figBounds height setText getBBoxField	0
MethodDeclaration Modifier private FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h StatementExpression Assignment MemberReference bigPort ClassCreator ReferenceType FigPort MemberReference MemberReference MemberReference w MemberReference h = StatementExpression MethodInvocation bigPort Literal false setFilled StatementExpression MethodInvocation bigPort Literal 0 setLineWidth StatementExpression MethodInvocation MemberReference bigPort addFig	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MemberReference supportedDecisions	0
MethodDeclaration Modifier public static ReferenceType ActionNewAction LocalVariableDeclaration ReferenceType ActionNewAction VariableDeclarator a ClassCreator ReferenceType MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isATransition getFacade BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference target setTarget StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation a MemberReference SHORT_DESCRIPTION MethodInvocation a MemberReference Action NAME getValue putValue LocalVariableDeclaration ReferenceType Object VariableDeclarator icon MethodInvocation Literal lookupIconResource StatementExpression MethodInvocation a MemberReference MemberReference icon putValue StatementExpression MethodInvocation a MemberReference ROLE MemberReference Roles EFFECT putValue ReturnStatement MemberReference a	0
MethodDeclaration Modifier public Annotation Override addEdge FormalParameter ReferenceType Object edge StatementExpression MethodInvocation LOG Literal "adding class edge!!!!!!" debug IfStatement MethodInvocation ! MemberReference edge canAddEdge BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MemberReference edge add getEdges IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference edge isAModelElement getFacade MethodInvocation ! Model MethodInvocation MemberReference edge isAAssociationEnd getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getHomeModel MemberReference edge addOwnedElement getCoreHelper StatementExpression MethodInvocation MemberReference edge fireEdgeAdded	1
MethodDeclaration Modifier public ReferenceType SuffixFilter getSuffixFilters ReturnStatement MemberReference CPP_SUFFIX_FILTERS	0
MethodDeclaration Modifier public ReferenceType Object buildTagDefinition FormalParameter ReferenceType String name FormalParameter ReferenceType Object stereotype FormalParameter ReferenceType Object ns ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override buildPanel StatementExpression Assignment MemberReference stringField ClassCreator ReferenceType = StatementExpression MethodInvocation stringField MethodInvocation This addDocumentListener getDocument StatementExpression MethodInvocation stringField MethodInvocation LookAndFeelMgr MethodInvocation getStandardFont getInstance setFont StatementExpression MethodInvocation stringField Literal 2 setRows StatementExpression Assignment MemberReference allField ClassCreator ReferenceType JScrollPane MemberReference stringField =	1
MethodDeclaration Modifier protected buildModelList StatementExpression SuperMethodInvocation buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getBase getFacade addElement	0
MethodDeclaration Modifier public undo StatementExpression MethodInvocation npSettings MemberReference setNotationLanguage StatementExpression MethodInvocation MemberReference key MemberReference newLanguage MemberReference fireNotationEvent	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public static ReferenceType ArgoToolbarManager getInstance IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement StatementExpression Assignment MemberReference instance ClassCreator ReferenceType ArgoToolbarManager = ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter ReferenceType Object element FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types getOptions	0
MethodDeclaration Modifier public ReferenceType Object getCollaborationInstanceSet ReturnStatement ClassReference ReferenceType CollaborationInstanceSet	0
MethodDeclaration Modifier public setTarget FormalParameter ReferenceType List results FormalParameter ReferenceType List theDiagrams StatementExpression Assignment MemberReference MemberReference results = StatementExpression Assignment MemberReference diagrams MemberReference theDiagrams = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be a BehavioralFeature!" ReturnStatement Cast ReferenceType BehavioralFeature MemberReference handle	0
MethodDeclaration Modifier public undo TryStatement StatementExpression MethodInvocation cl refDelete CatchClause CatchClauseParameter InvalidObjectException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Object already deleted " MemberReference cl warn	0
MethodDeclaration Modifier public BasicType boolean callTarget FormalParameter ReferenceType Object appleEvent InvocationTargetException IllegalAccessException LocalVariableDeclaration ReferenceType Object VariableDeclarator result MethodInvocation targetMethod MemberReference targetObject Cast ReferenceType Object Literal null invoke IfStatement BinaryOperation == MemberReference result Literal null BlockStatement ReturnStatement Literal true ReturnStatement MethodInvocation Boolean MethodInvocation booleanValue MethodInvocation result toString valueOf	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object association IfStatement BinaryOperation instanceof MemberReference association ReferenceType Association BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of ForStatement EnhancedForControl VariableDeclaration ReferenceType Property VariableDeclarator p Cast ReferenceType Association MemberReference association BlockStatement IfStatement BinaryOperation == MethodInvocation p MemberReference AggregationKind COMPOSITE_LITERAL BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier protected FormalParameter ReferenceType OutputStream outStream FormalParameter ReferenceType Editor ce FormalParameter ReferenceType Rectangle drawingArea IOException LocalVariableDeclaration ReferenceType Layer VariableDeclarator layer MethodInvocation ce MethodInvocation getActiveLayer getLayerManager LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator bounds ClassCreator ReferenceType Rectangle ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator fig MethodInvocation layer getContents BlockStatement StatementExpression Assignment MemberReference bounds x MethodInvocation Math MemberReference bounds x MethodInvocation fig getX min = StatementExpression Assignment MemberReference bounds y MethodInvocation Math MemberReference bounds y MethodInvocation fig getY min = StatementExpression Assignment MemberReference bounds width MethodInvocation Math MemberReference bounds width BinaryOperation + MethodInvocation fig getX MethodInvocation fig getWidth max = StatementExpression Assignment MemberReference bounds height MethodInvocation Math MemberReference bounds height BinaryOperation + MethodInvocation fig getY MethodInvocation fig getHeight max = StatementExpression Assignment MemberReference bounds width MemberReference bounds x -= StatementExpression Assignment MemberReference bounds height MemberReference bounds y -= LocalVariableDeclaration ReferenceType DOMImplementation VariableDeclarator domImpl MethodInvocation LocalVariableDeclaration ReferenceType Document VariableDeclarator document MethodInvocation domImpl Literal null Literal Literal null createDocument LocalVariableDeclaration ReferenceType SVGGraphics2D VariableDeclarator svgGenerator ClassCreator ReferenceType SVGGraphics2D MemberReference document StatementExpression MethodInvocation ce MemberReference svgGenerator print LocalVariableDeclaration BasicType boolean VariableDeclarator useCSS Literal true LocalVariableDeclaration ReferenceType Writer VariableDeclarator out ClassCreator ReferenceType OutputStreamWriter MemberReference outStream Literal "UTF-8" StatementExpression MethodInvocation svgGenerator MemberReference out MemberReference useCSS stream	0
MethodDeclaration Modifier protected updateElementListeners FormalParameter ReferenceType Set TypeArgument ReferenceType Object listenerSet LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator removes ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MemberReference listeners StatementExpression MethodInvocation removes MemberReference listenerSet removeAll StatementExpression MethodInvocation MemberReference removes removeElementListeners LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator adds ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MemberReference listenerSet StatementExpression MethodInvocation adds MemberReference listeners removeAll StatementExpression MethodInvocation MemberReference adds addElementListeners	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection features IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator featuresList Literal null IfStatement BinaryOperation instanceof MemberReference features ReferenceType List BlockStatement StatementExpression Assignment MemberReference featuresList Cast ReferenceType List MemberReference features = BlockStatement StatementExpression Assignment MemberReference featuresList ClassCreator ReferenceType ArrayList MemberReference features = StatementExpression Cast ReferenceType Classifier MemberReference handle StatementExpression Cast ReferenceType Classifier MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	1
MethodDeclaration Modifier public ReferenceType List getImportSettings ReturnStatement Literal null	1
MethodDeclaration Modifier public addParameter FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object parameter StatementExpression MethodInvocation impl MemberReference handle MemberReference index MemberReference parameter addParameter	0
MethodDeclaration Modifier public FormalParameter ReferenceType MDRChangeEvent e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public setWhen FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType WizardItem getToDoItem ReturnStatement MemberReference item	0
MethodDeclaration Modifier public BasicType int getNSCount ReturnStatement MemberReference _nscount	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getProjectSettingsTabs ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object cls FormalParameter ReferenceType Object feature StatementExpression SuperMethodInvocation MemberReference cls MemberReference feature StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration ReferenceType Collection finalisedList LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator newModelElementsList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType InfoItem VariableDeclarator tInfo MemberReference theList BlockStatement IfStatement MethodInvocation tInfo isRetained BlockStatement StatementExpression MethodInvocation newModelElementsList MethodInvocation tInfo getUmlObject add BlockStatement StatementExpression MethodInvocation MethodInvocation tInfo getUmlObject delete StatementExpression MethodInvocation theList clear ReturnStatement MemberReference newModelElementsList	0
MethodDeclaration Modifier public setText FormalParameter ReferenceType String text StatementExpression SuperMethodInvocation MethodInvocation NotationUtilityUml MemberReference text MethodInvocation MethodInvocation getNotationSettings MethodInvocation isUseGuillemets getSettings formatStereotype setText StatementExpression MethodInvocation damage	0
MethodDeclaration Modifier public ReferenceType Object getNode ReturnStatement ClassReference ReferenceType Node	0
MethodDeclaration Modifier public ReferenceType Object getDestination FormalParameter ReferenceType Object trans ReturnStatement MethodInvocation impl MemberReference trans getDestination	0
MethodDeclaration Modifier private final createClassifier FormalParameter ReferenceType Object modelElement Exception IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAClassifier getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Classifier required" StatementExpression Assignment MemberReference objDocBlock ClassCreator ReferenceType DocBlock = StatementExpression Assignment MemberReference objModelElement MemberReference modelElement = StatementExpression Assignment MemberReference iDocBlockType MemberReference BLOCK_TYPE_CLASSIFIER = StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_PACKAGE enableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_SUBPACKAGE enableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_STATIC enableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ABSTRACT enableTag StatementExpression MethodInvocation objDocBlock BinaryOperation + Literal "Short description of class " MethodInvocation NameGenerator MemberReference modelElement generateClassifierName setDefaultDescription StatementExpression MethodInvocation objDocBlock MethodInvocation Model MethodInvocation MemberReference modelElement getTaggedValues getFacade setTags IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAbstract getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ABSTRACT Literal "true" setTag IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isPublic getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS Literal "public" setTag IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isProtected getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS Literal "protected" setTag IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isPrivate getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS Literal "private" setTag LocalVariableDeclaration ReferenceType String VariableDeclarator sPackageName MethodInvocation NameGenerator MemberReference modelElement generatePackageName IfStatement BinaryOperation && BinaryOperation != MemberReference sPackageName Literal null BinaryOperation != MemberReference sPackageName Literal "" BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator iFirstUnderscore MethodInvocation sPackageName Literal "_" indexOf IfStatement BinaryOperation == MemberReference iFirstUnderscore Literal - 1 BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_PACKAGE MemberReference sPackageName setTag BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_PACKAGE MethodInvocation sPackageName Literal 0 MemberReference iFirstUnderscore substring setTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_SUBPACKAGE MethodInvocation sPackageName BinaryOperation + MemberReference iFirstUnderscore Literal 1 substring setTag	1
MethodDeclaration Modifier protected Annotation Override modelChanged FormalParameter ReferenceType PropertyChangeEvent mee StatementExpression SuperMethodInvocation MemberReference mee modelChanged IfStatement MethodInvocation mee MethodInvocation Literal "bound" equals getPropertyName BlockStatement IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator b MethodInvocation Model MethodInvocation MethodInvocation getOwner getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator aux IfStatement BinaryOperation <= MemberReference b Literal 0 BlockStatement StatementExpression Assignment MemberReference aux Literal "*" = BlockStatement StatementExpression Assignment MemberReference aux MethodInvocation String MemberReference b valueOf = StatementExpression MethodInvocation bound MemberReference aux setText StatementExpression MethodInvocation updateBounds StatementExpression MethodInvocation damage	1
MethodDeclaration Modifier static BasicType boolean removeNotation FormalParameter ReferenceType theNotation ReturnStatement MethodInvocation MemberReference theNotation remove	0
MethodDeclaration Modifier public BasicType boolean isAUMLElement FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType Element BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BinaryOperation instanceof MemberReference handle ReferenceType ElementResidence BinaryOperation instanceof MemberReference handle ReferenceType Expression BinaryOperation instanceof MemberReference handle ReferenceType Multiplicity BinaryOperation instanceof MemberReference handle ReferenceType MultiplicityRange BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference handle ReferenceType TemplateParameter	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_36 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 9223372035780123536L Literal - 4593671619915808749L Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private BasicType int parseMultiplicity FormalParameter ReferenceType String arg LocalVariableDeclaration BasicType int VariableDeclarator lower Literal 1 VariableDeclarator upper Literal 1 IfStatement Literal MethodInvocation MethodInvocation arg trim equals "*" BlockStatement StatementExpression Assignment MemberReference lower Literal 0 = StatementExpression Assignment MemberReference upper Literal - 1 = IfStatement MethodInvocation arg Literal ".." contains BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pieces MethodInvocation arg MethodInvocation Literal "\\.\\." split trim IfStatement BinaryOperation > MemberReference pieces length Literal 2 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Cast ReferenceType String MemberReference arg StatementExpression Assignment MemberReference lower MethodInvocation Integer MemberReference ArraySelector Literal 0 pieces parseInt = IfStatement Literal MethodInvocation MemberReference ArraySelector Literal 1 pieces equals "*" BlockStatement StatementExpression Assignment MemberReference upper Literal - 1 = BlockStatement StatementExpression Assignment MemberReference upper MethodInvocation Integer MemberReference ArraySelector Literal 1 pieces parseInt = IfStatement MethodInvocation arg Literal "_" contains BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pieces MethodInvocation arg MethodInvocation Literal "_" split trim IfStatement BinaryOperation > MemberReference pieces length Literal 2 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Cast ReferenceType String MemberReference arg StatementExpression Assignment MemberReference lower MethodInvocation Integer MemberReference ArraySelector Literal 0 pieces parseInt = IfStatement BinaryOperation || Literal MethodInvocation MemberReference ArraySelector Literal 1 pieces equals "*" Literal MethodInvocation MemberReference ArraySelector Literal 1 pieces equals BlockStatement StatementExpression Assignment MemberReference upper Literal - 1 = BlockStatement StatementExpression Assignment MemberReference upper MethodInvocation Integer MemberReference ArraySelector Literal 1 pieces parseInt = BlockStatement StatementExpression Assignment MemberReference lower MethodInvocation Integer MemberReference arg parseInt = StatementExpression Assignment MemberReference upper MemberReference lower = ReturnStatement ArrayCreator BasicType int ArrayInitializer MemberReference lower MemberReference upper	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Operation getOperationsInh FormalParameter ReferenceType Object classifier IfStatement BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "'classifier' must be instance of Classifier" ReturnStatement Cast ReferenceType Classifier MemberReference classifier	0
MethodDeclaration Modifier public ReferenceType String getVetoMessage FormalParameter ReferenceType String propertyName IfStatement MethodInvocation propertyName Literal "name" equals BlockStatement ReturnStatement Literal "Name of diagram may not exist already" ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation Override deleteFromModel LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation getOwner IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference moveToTrash getProject ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fig MethodInvocation getFigs BlockStatement StatementExpression Cast ReferenceType Fig MemberReference fig StatementExpression SuperMethodInvocation deleteFromModel	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier protected Annotation Override BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier private static createChecklists LocalVariableDeclaration ReferenceType VariableDeclarator cl LocalVariableDeclaration ReferenceType String VariableDeclarator cat StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal "checklist.class.naming" localize = StatementExpression MethodInvocation MemberReference cat Literal "checklist.class.naming.describe-clearly" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.class.encoding.do-just-one-thing" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.class.value.convert-to-invariant" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal "checklist.class.location" localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.class.location.eliminates-or-affects-something-else" MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getUMLClass getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal "checklist.attribute.value" localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.attribute.value.correct-default-value" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.attribute.location.move-up-hierarchy" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.attribute.location.include-all" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.attribute.updates.affects-something-else" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getAttribute getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat BinaryOperation + Literal "checklist.operation.encoding.does-returntype-allow-impossible-" Literal "values" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.operation.value.how-behave-preconditions-violated" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.operation.value.how-behave-postconditions-not-achieved" MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.operation.location.eliminates-or-affects-something-else" MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getOperation getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal "checklist.association.encoding" localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal "checklist.association.value.start-with-meaningful-values" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal "checklist.association.location" localize = StatementExpression MethodInvocation MemberReference cat Literal "checklist.association.location.move-somewhere" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat BinaryOperation + Literal Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getAssociation getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal "checklist.interface.encoding.convert-to-attribute" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.interface.encoding.break-into-parts" MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal "checklist.interface.value.start-with-meaningful-values" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.interface.location.planned-subclasses" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getInterface getMetaTypes MemberReference cl register IfStatement MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal "1" startsWith getFacade BlockStatement StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.instance.naming.misinterpret" MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.instance.structure.make-internal" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat BinaryOperation + Literal Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal "checklist.instance.actions.list-entry-actions" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.instance.actions.update-attribute-on-entry" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.instance.actions.list-do-action" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.instance.actions.maintained-state" MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal "checklist.instance.transitions.need-another-transition-into" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.instance.transitions.need-another-transition-out-of" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.instance.transitions.combine-with-other-outgoing" MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getInstance getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal "checklist.link.naming.describe-clearly" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal "checklist.link.encoding.convert-to-attribute" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.link.value.convert-to-invariant" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.link.value.establish-invariant-in-constructors" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.link.value.maintain-invariant" MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.link.location.planned-subclasses" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getLink getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal "checklist.state.naming" localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.state.structure.make-internal" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal "checklist.state.actions.list-entry-actions" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal "checklist.state.transitions" localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.state.transitions.combine-with-other-incoming" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getState getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.transition.structure.unneeded-because-of-this" MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal "checklist.transition.trigger.needed" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.transition.trigger.happen-too-often" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.transition.trigger.happen-too-rarely" MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.transition.actions.should-have-exit" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat BinaryOperation + Literal Literal "destination" MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getTransition getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.usecase.naming.misinterpret" MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.usecase.value.convert-to-invariant" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.usecase.value.establish-invariant-in-constructors" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal "checklist.usecase.location" localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal "checklist.usecase.updates.reasons-for-update" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes MemberReference cl register StatementExpression Assignment MemberReference cl ClassCreator ReferenceType = StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.actor.encoding.do-just-one-thing" MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.actor.encoding.break-into-parts" MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal "checklist.actor.value.maintain-invariant" MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression Assignment MemberReference cat MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MemberReference cat Literal MemberReference cl newCheckItem StatementExpression MethodInvocation MethodInvocation Model MethodInvocation getActor getMetaTypes MemberReference cl register	0
MethodDeclaration Modifier public Annotation Override initialiseListener FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference modelElement addElementListener IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference modelElement isAAttribute getFacade MethodInvocation Model MethodInvocation MemberReference modelElement isAProperty getFacade BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator uml MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade BlockStatement StatementExpression MethodInvocation MemberReference uml addElementListener LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference modelElement getType getFacade IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression MethodInvocation MemberReference type addElementListener ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator uml MethodInvocation Model MethodInvocation MemberReference modelElement getTaggedValuesCollection getFacade BlockStatement StatementExpression MethodInvocation MemberReference uml addElementListener	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAUseCase getFacade	0
MethodDeclaration Modifier private addListeners FormalParameter ReferenceType List TypeArgument ReferenceType listeners FormalParameter ReferenceType Object element FormalParameter ReferenceType String propName FormalParameter ReferenceType Map TypeArgument ReferenceType Object TypeArgument ReferenceType List TypeArgument ReferenceType Listener register LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Listener VariableDeclarator list MethodInvocation register MemberReference element get IfStatement BinaryOperation != MemberReference list Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Listener VariableDeclarator l MemberReference list BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference propName Literal null BinaryOperation == MethodInvocation l getProperties Literal null MethodInvocation l MethodInvocation MemberReference propName contains getProperties BlockStatement StatementExpression MethodInvocation listeners MethodInvocation l getListener add	0
MethodDeclaration Modifier private openClosedElements FormalParameter ReferenceType DOMBuilder rtf SAXException WhileStatement MethodInvocation ! tempStack empty BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator elem Cast ReferenceType Node MethodInvocation tempStack pop LocalVariableDeclaration ReferenceType String VariableDeclarator ns MethodInvocation elem getNamespaceURI LocalVariableDeclaration ReferenceType String VariableDeclarator localName MethodInvocation elem getLocalName LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType Element MemberReference elem LocalVariableDeclaration ReferenceType NamedNodeMap VariableDeclarator domAttr MethodInvocation elem getAttributes LocalVariableDeclaration ReferenceType AttributesImpl VariableDeclarator attr ClassCreator ReferenceType AttributesImpl ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator acount Literal 0 BinaryOperation < MemberReference acount MethodInvocation domAttr getLength MemberReference ++ acount BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator a MethodInvocation domAttr MemberReference acount item IfStatement BinaryOperation || BinaryOperation && BinaryOperation || BinaryOperation == MemberReference ns Literal null BinaryOperation == MemberReference ns Literal "http://www.w3.org/1999/xhtml" MethodInvocation localName Literal "a" equalsIgnoreCase MethodInvocation a getLocalName BlockStatement BlockStatement StatementExpression MethodInvocation attr MethodInvocation a getNamespaceURI MethodInvocation a getLocalName MethodInvocation a getNodeName Literal "CDATA" MethodInvocation a getNodeValue addAttribute StatementExpression MethodInvocation rtf MemberReference ns MemberReference localName MemberReference name MemberReference attr startElement StatementExpression MethodInvocation elementStack MemberReference elem push StatementExpression Assignment MemberReference tempStack Literal null =	1
MethodDeclaration Modifier public setUnselect StatementExpression Assignment MemberReference selected Literal false =	0
MethodDeclaration Modifier public BasicType boolean isParseable FormalParameter ReferenceType File file ReturnStatement MethodInvocation MemberReference file MethodInvocation getSuffixFilters	0
MethodDeclaration Modifier public ReferenceType Collection getExtentPackages FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage VariableDeclarator pkg MethodInvocation modelImpl MemberReference name IfStatement BinaryOperation == MemberReference pkg Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator packages MethodInvocation pkg MethodInvocation getUmlPackage MethodInvocation refAllOfType getModelManagement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator topLevelPackages ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator pack MemberReference packages BlockStatement IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference pack getNamespace getFacade Literal null BlockStatement StatementExpression MethodInvocation topLevelPackages MemberReference pack add ReturnStatement MemberReference topLevelPackages	1
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Dependency VariableDeclarator dependency MethodInvocation createDependency StatementExpression MethodInvocation dependency MethodInvocation Cast ReferenceType NamedElement MemberReference add StatementExpression MethodInvocation dependency MethodInvocation Cast ReferenceType NamedElement MemberReference add getSuppliers StatementExpression Cast ReferenceType NamedElement MemberReference StatementExpression MethodInvocation MethodInvocation MemberReference dependency add getParams	0
MethodDeclaration Modifier public toDoItemsChanged FormalParameter ReferenceType ToDoListEvent StatementExpression MethodInvocation LOG Literal "toDoItemsChanged" debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation getToDoList theDesigner = LocalVariableDeclaration ReferenceType ListSet VariableDeclarator allOffenders MethodInvocation Designer MethodInvocation getToDoList MethodInvocation getOffenders theDesigner SynchronizedStatement MemberReference allOffenders ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator off MemberReference allOffenders BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference off = LocalVariableDeclaration BasicType int VariableDeclarator nMatchingItems Literal 0 SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offenders MethodInvocation item getOffenders IfStatement MethodInvocation ! offenders MemberReference off contains BlockStatement ContinueStatement StatementExpression MemberReference ++ nMatchingItems IfStatement BinaryOperation == MemberReference nMatchingItems Literal 0 BlockStatement ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator ArrayCreator BasicType int MemberReference nMatchingItems LocalVariableDeclaration ReferenceType Object VariableDeclarator children ArrayCreator ReferenceType Object MemberReference nMatchingItems StatementExpression Assignment MemberReference nMatchingItems Literal 0 = SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offenders MethodInvocation item getOffenders IfStatement MethodInvocation ! offenders MemberReference off contains BlockStatement ContinueStatement StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems MethodInvocation MemberReference off MemberReference item getIndexOfChild = StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems children MemberReference item = StatementExpression MemberReference ++ nMatchingItems StatementExpression MethodInvocation This MemberReference path MemberReference MemberReference children fireTreeNodesChanged	0
MethodDeclaration Modifier public setInstructions FormalParameter ReferenceType String s StatementExpression Assignment MemberReference instructions MemberReference s =	0
MethodDeclaration Modifier protected ReferenceType Object getDestination LocalVariableDeclaration ReferenceType Object VariableDeclarator theOwner MethodInvocation getOwner IfStatement BinaryOperation != MemberReference theOwner Literal null BlockStatement ReturnStatement Cast ReferenceType CommentEdge MemberReference theOwner ReturnStatement Literal null	0
MethodDeclaration Modifier private ReferenceType buildBoutonPanel LocalVariableDeclaration ReferenceType VariableDeclarator paneBtn ClassCreator ReferenceType ClassCreator ReferenceType GridBagLayout LocalVariableDeclaration ReferenceType JButton VariableDeclarator btnApply ClassCreator ReferenceType JButton MethodInvocation Translator Literal localize StatementExpression MethodInvocation btnApply ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue LocalVariableDeclaration BasicType boolean VariableDeclarator bContinue Literal true IfStatement MethodInvocation ! curLanguage MethodInvocation MemberReference ArraySelector BinaryOperation + BinaryOperation * Literal 2 MemberReference currentIndex Literal 1 tabValues equals getText BlockStatement StatementExpression Assignment MemberReference bContinue MethodInvocation MemberReference tabValues MethodInvocation curLanguage getText isUniqueLanguage = IfStatement MemberReference bContinue BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation * Literal 2 MemberReference currentIndex tabValues MethodInvocation curBody getText = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * Literal 2 MemberReference currentIndex Literal 1 tabValues MethodInvocation curLanguage getText = StatementExpression MethodInvocation model MemberReference tabValues setValue StatementExpression MethodInvocation updateFields addActionListener LocalVariableDeclaration ReferenceType JButton VariableDeclarator btnAdd ClassCreator ReferenceType JButton Literal "+" StatementExpression MethodInvocation btnAdd ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue LocalVariableDeclaration BasicType int VariableDeclarator num MethodInvocation MemberReference tabValues getEmptyLanguage IfStatement BinaryOperation == MemberReference num Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newTabValues ArrayCreator ReferenceType String BinaryOperation + MemberReference tabValues length Literal 2 StatementExpression MethodInvocation System MemberReference tabValues Literal 0 MemberReference newTabValues Literal 0 MemberReference tabValues length arraycopy StatementExpression Assignment MemberReference ArraySelector MemberReference tabValues length newTabValues Literal "" = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference tabValues length Literal 1 newTabValues Literal "" = StatementExpression MethodInvocation model MemberReference newTabValues setValue StatementExpression Assignment MemberReference currentIndex BinaryOperation - BinaryOperation / MemberReference newTabValues length Literal 2 Literal 1 = StatementExpression MethodInvocation updateFields BlockStatement StatementExpression Assignment MemberReference currentIndex MemberReference num = StatementExpression MethodInvocation updateFields addActionListener LocalVariableDeclaration ReferenceType JButton VariableDeclarator btnDel ClassCreator ReferenceType JButton Literal "-" StatementExpression MethodInvocation btnDel ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue IfStatement BinaryOperation > MemberReference tabValues length Literal 2 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newTabValues ArrayCreator ReferenceType String BinaryOperation - MemberReference tabValues length Literal 2 IfStatement BinaryOperation > MemberReference currentIndex Literal 0 BlockStatement StatementExpression MethodInvocation System MemberReference tabValues Literal 0 MemberReference newTabValues Literal 0 BinaryOperation * MemberReference currentIndex Literal 2 arraycopy IfStatement BinaryOperation < MemberReference currentIndex BinaryOperation / MemberReference tabValues length Literal 2 BlockStatement StatementExpression MethodInvocation System MemberReference tabValues BinaryOperation + BinaryOperation * MemberReference currentIndex Literal 2 Literal 2 MemberReference newTabValues BinaryOperation * MemberReference currentIndex Literal 2 BinaryOperation - MemberReference tabValues length BinaryOperation + BinaryOperation * MemberReference currentIndex Literal 2 Literal 2 arraycopy StatementExpression MethodInvocation model MemberReference newTabValues setValue IfStatement BinaryOperation > BinaryOperation * MemberReference currentIndex Literal 2 MemberReference newTabValues length BlockStatement StatementExpression Assignment MemberReference currentIndex BinaryOperation - BinaryOperation / MemberReference newTabValues length Literal 2 Literal 1 = StatementExpression MethodInvocation updateFields BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newTabValues ArrayCreator ReferenceType String Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 newTabValues Literal "" = StatementExpression Assignment MemberReference ArraySelector Literal 1 newTabValues Literal "" = StatementExpression MethodInvocation model MemberReference newTabValues setValue StatementExpression MethodInvocation updateFields addActionListener LocalVariableDeclaration ReferenceType JButton VariableDeclarator btnUp ClassCreator ReferenceType JButton Literal "/\\" StatementExpression MethodInvocation btnUp ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 IfStatement BinaryOperation > MemberReference currentIndex Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue LocalVariableDeclaration ReferenceType String VariableDeclarator savTabValues ArrayCreator ReferenceType String Literal 2 StatementExpression MethodInvocation System MemberReference tabValues BinaryOperation * MemberReference currentIndex Literal 2 MemberReference savTabValues Literal 0 Literal 2 arraycopy StatementExpression Assignment MemberReference ArraySelector BinaryOperation * MemberReference currentIndex Literal 2 tabValues MemberReference ArraySelector BinaryOperation - BinaryOperation * MemberReference currentIndex Literal 2 Literal 2 tabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * MemberReference currentIndex Literal 2 Literal 1 tabValues MemberReference ArraySelector BinaryOperation - BinaryOperation * MemberReference currentIndex Literal 2 Literal 1 tabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation * BinaryOperation - MemberReference currentIndex Literal 1 Literal 2 tabValues MemberReference ArraySelector Literal 0 savTabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * BinaryOperation - MemberReference currentIndex Literal 1 Literal 2 Literal 1 tabValues MemberReference ArraySelector Literal 1 savTabValues = StatementExpression MethodInvocation model MemberReference tabValues setValue StatementExpression Assignment MemberReference currentIndex BinaryOperation - MemberReference currentIndex Literal 1 = StatementExpression MethodInvocation updateFields addActionListener LocalVariableDeclaration ReferenceType JButton VariableDeclarator btnDown ClassCreator ReferenceType JButton Literal "\\/" StatementExpression MethodInvocation btnDown ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 IfStatement BinaryOperation < BinaryOperation + MemberReference currentIndex Literal 1 MethodInvocation listModel size BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue LocalVariableDeclaration ReferenceType String VariableDeclarator savTabValues ArrayCreator ReferenceType String Literal 2 StatementExpression MethodInvocation System MemberReference tabValues BinaryOperation * MemberReference currentIndex Literal 2 MemberReference savTabValues Literal 0 Literal 2 arraycopy StatementExpression Assignment MemberReference ArraySelector BinaryOperation * MemberReference currentIndex Literal 2 tabValues MemberReference ArraySelector BinaryOperation * BinaryOperation + MemberReference currentIndex Literal 1 Literal 2 tabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * MemberReference currentIndex Literal 2 Literal 1 tabValues MemberReference ArraySelector BinaryOperation + BinaryOperation * BinaryOperation + MemberReference currentIndex Literal 1 Literal 2 Literal 1 tabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation * BinaryOperation + MemberReference currentIndex Literal 1 Literal 2 tabValues MemberReference ArraySelector Literal 0 savTabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * BinaryOperation + MemberReference currentIndex Literal 1 Literal 2 Literal 1 tabValues MemberReference ArraySelector Literal 1 savTabValues = StatementExpression MethodInvocation model MemberReference tabValues setValue StatementExpression Assignment MemberReference currentIndex BinaryOperation + MemberReference currentIndex Literal 1 = StatementExpression MethodInvocation updateFields addActionListener LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator c ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints NONE = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression MethodInvocation paneBtn MemberReference btnApply MemberReference c add StatementExpression Assignment MemberReference c ClassCreator ReferenceType GridBagConstraints = StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints NONE = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression MethodInvocation paneBtn MemberReference btnAdd MemberReference c add StatementExpression Assignment MemberReference c ClassCreator ReferenceType GridBagConstraints = StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints NONE = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 2 = StatementExpression MethodInvocation paneBtn MemberReference btnDel MemberReference c add StatementExpression Assignment MemberReference c ClassCreator ReferenceType GridBagConstraints = StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints NONE = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 3 = StatementExpression MethodInvocation paneBtn MemberReference btnUp MemberReference c add StatementExpression Assignment MemberReference c ClassCreator ReferenceType GridBagConstraints = StatementExpression Assignment MemberReference c fill MemberReference GridBagConstraints NONE = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 4 = StatementExpression MethodInvocation paneBtn MemberReference btnDown MemberReference c add ReturnStatement MemberReference paneBtn	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed StatementExpression ClassCreator MethodInvocation Literal true setVisible ReferenceType	0
MethodDeclaration Modifier public ReferenceType String getAuthoremail ReturnStatement MemberReference authoremail	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration ReferenceType String generateAscEndName FormalParameter ReferenceType Object ae LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation Model MethodInvocation MemberReference ae getName getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MethodInvocation Model MethodInvocation MemberReference ae getAssociation getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator ascName MethodInvocation Model MethodInvocation MemberReference asc getName getFacade IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference n Literal null BinaryOperation != MemberReference n Literal null BinaryOperation > MethodInvocation n length Literal 0 BlockStatement StatementExpression Assignment MemberReference n MethodInvocation MemberReference n generateName = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference ascName Literal null BinaryOperation != MemberReference ascName Literal null BinaryOperation > MethodInvocation ascName length Literal 0 BlockStatement StatementExpression Assignment MemberReference n MethodInvocation MemberReference ascName generateName = BlockStatement StatementExpression Assignment MemberReference n BinaryOperation + Literal "my" MethodInvocation MethodInvocation Model MethodInvocation MemberReference ae getType getFacade generateClassifierRef = ReturnStatement MemberReference n	1
MethodDeclaration Modifier public BasicType boolean isAConcurrentRegion FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Region	1
MethodDeclaration Modifier public found FormalParameter ReferenceType Object element FormalParameter ReferenceType String value LocalVariableDeclaration BasicType boolean VariableDeclarator isAbstract Literal true IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation value Literal "false" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference isAbstract Literal false = IfStatement MethodInvocation Model MethodInvocation MemberReference element isAOperation getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element MemberReference isAbstract setAbstract getCoreHelper	0
MethodDeclaration Modifier public ReferenceType String classNameAndBounds LocalVariableDeclaration ReferenceType String VariableDeclarator classNameAndBounds BinaryOperation + BinaryOperation + BinaryOperation + SuperMethodInvocation classNameAndBounds Literal "operationsVisible=" MethodInvocation MethodInvocation Model MethodInvocation getOperation getMetaTypes isCompartmentVisible Literal ";" LocalVariableDeclaration ReferenceType FigCompartment VariableDeclarator fc MethodInvocation MethodInvocation Model MethodInvocation getAttribute getMetaTypes getCompartment IfStatement BinaryOperation != MemberReference fc Literal null BlockStatement StatementExpression Assignment MemberReference classNameAndBounds BinaryOperation + BinaryOperation + Literal "attributesVisible=" MethodInvocation fc isVisible Literal ";" += ReturnStatement MemberReference classNameAndBounds	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType AssociationRole buildAssociationRole FormalParameter ReferenceType Object from FormalParameter ReferenceType Object agg1 FormalParameter ReferenceType Object to FormalParameter ReferenceType Object agg2 FormalParameter ReferenceType Boolean unidirectional IfStatement BinaryOperation == MemberReference unidirectional Literal null BlockStatement ReturnStatement MethodInvocation MemberReference from MemberReference agg1 MemberReference to MemberReference agg2 Literal false buildAssociationRole BlockStatement ReturnStatement MethodInvocation MemberReference from MemberReference agg1 MemberReference to MemberReference agg2 MethodInvocation unidirectional booleanValue buildAssociationRole	1
MethodDeclaration Modifier public parse FormalParameter ReferenceType String label FormalParameter ReferenceType String xmiExtensionString StatementExpression MethodInvocation LOG BinaryOperation + Literal "Parsing an extension for " MemberReference label info	1
MethodDeclaration Modifier protected Annotation Override initNotationProviders FormalParameter ReferenceType Object IfStatement BinaryOperation != MemberReference notationProviderBody Literal null BlockStatement StatementExpression MethodInvocation notationProviderBody cleanListener StatementExpression SuperMethodInvocation MemberReference initNotationProviders LocalVariableDeclaration ReferenceType VariableDeclarator notation MethodInvocation Notation MethodInvocation MethodInvocation getNotationLanguage getNotationSettings IfStatement MethodInvocation Model MethodInvocation MemberReference isAState getFacade BlockStatement StatementExpression Assignment MemberReference notationProviderBody MethodInvocation NotationProviderFactory2 MethodInvocation MemberReference NotationProviderFactory2 TYPE_STATEBODY MemberReference This MemberReference notation getInstance =	0
MethodDeclaration Modifier protected Annotation Override ReferenceType ArgoJMenu buildShowPopUp ReturnStatement ClassCreator ReferenceType ArgoJMenu Literal	0
MethodDeclaration Modifier public BasicType int skipNestedParens FormalParameter BasicType int kInOut TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator k BinaryOperation + MemberReference kInOut Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator value WhileStatement BinaryOperation != MethodInvocation MethodInvocation getType MemberReference k LT MemberReference RPAREN BlockStatement SwitchStatement MethodInvocation MethodInvocation getType MemberReference k LT SwitchStatementCase EOF ReturnStatement MemberReference kInOut SwitchStatementCase LPAREN StatementExpression Assignment MemberReference value MethodInvocation MemberReference k skipNestedParens = IfStatement BinaryOperation == MemberReference value MemberReference k BlockStatement ReturnStatement MemberReference kInOut StatementExpression Assignment MemberReference k MemberReference value = BreakStatement SwitchStatementCase StatementExpression MemberReference ++ k BreakStatement IfStatement BinaryOperation > MemberReference k MemberReference CPPvariables MAX_TEMPLATE_TOKEN_SCAN BlockStatement ReturnStatement MemberReference kInOut StatementExpression Assignment MemberReference kInOut BinaryOperation + MemberReference k Literal 1 = ReturnStatement MemberReference kInOut	1
MethodDeclaration Modifier protected BasicType boolean checkVersion FormalParameter BasicType int fileVersion FormalParameter ReferenceType String releaseVersion OpenException VersionException IfStatement BinaryOperation > MemberReference fileVersion MemberReference PERSISTENCE_VERSION BlockStatement ThrowStatement ClassCreator ReferenceType VersionException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "The file selected is from a more up to date version of " Literal "ArgoUML. It has been saved with ArgoUML version " MemberReference releaseVersion Literal ". Please load with that or a more up to date" Literal "release of ArgoUML" ReturnStatement BinaryOperation >= MemberReference fileVersion MemberReference PERSISTENCE_VERSION	1
MethodDeclaration Modifier protected BasicType boolean isPartlyOwner FormalParameter ReferenceType Fig fig FormalParameter ReferenceType Object o IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MemberReference o MethodInvocation fig getOwner BlockStatement ReturnStatement Literal true IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigGroup BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fig2 Cast ReferenceType FigGroup MemberReference fig BlockStatement IfStatement MethodInvocation Cast ReferenceType Fig MemberReference fig2 MemberReference o isPartlyOwner BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType boolean canOverwrite ReturnStatement MethodInvocation MemberReference canOverwrite Literal null	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType Property	0
MethodDeclaration Modifier public ReferenceType Object getPseudostateKind ReturnStatement ClassReference ReferenceType PseudostateKind	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String key FormalParameter ReferenceType Object args ReturnStatement TernaryExpression BinaryOperation != MemberReference translator Literal null MethodInvocation translator MemberReference key MemberReference args i18nmessageFormat MemberReference key	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation headFig getFillColor	0
MethodDeclaration Modifier public Annotation Override ReferenceType Point getClosestPoint FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds LocalVariableDeclaration BasicType int VariableDeclarator xs ArrayInitializer MemberReference r x BinaryOperation - BinaryOperation + MemberReference r x MemberReference r width MemberReference BinaryOperation - BinaryOperation + MemberReference r x MemberReference r width MemberReference BinaryOperation + MemberReference r x MemberReference r width BinaryOperation + MemberReference r x MemberReference r width MemberReference r x MemberReference r x LocalVariableDeclaration BasicType int VariableDeclarator ys ArrayInitializer MemberReference r y MemberReference r y BinaryOperation + MemberReference r y MemberReference tabHeight BinaryOperation + MemberReference r y MemberReference tabHeight BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference r height MemberReference r y LocalVariableDeclaration ReferenceType Point VariableDeclarator p MethodInvocation Geometry MemberReference xs MemberReference ys Literal 7 MemberReference anotherPt ptClosestTo ReturnStatement MemberReference p	0
MethodDeclaration Modifier public BasicType boolean hasImporters ReturnStatement MethodInvocation ! importers isEmpty	0
MethodDeclaration Modifier public makeEdgePort IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType FigEdgePort MethodInvocation getOwner ClassCreator ReferenceType Rectangle MethodInvocation getSettings = StatementExpression MethodInvocation Literal false setVisible StatementExpression MethodInvocation MemberReference ClassCreator ReferenceType PathItemPlacement This MemberReference Literal 50 Literal 0 addPathItem	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference modelElement getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement ReturnStatement Literal null IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getAggregationKind equals BlockStatement ReturnStatement MemberReference NONE IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getAggregate getAggregationKind equals BlockStatement ReturnStatement MemberReference AGGREGATE IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getComposite getAggregationKind equals BlockStatement ReturnStatement MemberReference BlockStatement ReturnStatement MemberReference NONE	0
MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object relationship ReturnStatement MethodInvocation impl MemberReference relationship getSource	0
MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType String theToken LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation ns iterator WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation result MethodInvocation i next append IfStatement MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation result MemberReference theToken append ReturnStatement MethodInvocation result toString	1
MethodDeclaration toggleValueOfTarget FormalParameter ReferenceType Object t StatementExpression MethodInvocation targetNode MemberReference selectedStereotypeView setStereotypeView StatementExpression MethodInvocation updateSelection	0
MethodDeclaration Modifier public final actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation iterator getInstance WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation i next StatementExpression MethodInvocation MemberReference t toggleValueOfTarget	0
MethodDeclaration Modifier public found FormalParameter ReferenceType Object element FormalParameter ReferenceType String value LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation getConcurrent getConcurrencyKind IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation value Literal "false" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getSequential getConcurrencyKind = IfStatement MethodInvocation Model MethodInvocation MemberReference element isAOperation getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element MemberReference kind setConcurrency getCoreHelper	0
MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e setTargets	0
MethodDeclaration Modifier public Annotation Override setLayer FormalParameter ReferenceType Layer lay StatementExpression SuperMethodInvocation MemberReference lay setLayer IfStatement BinaryOperation && BinaryOperation != MethodInvocation getLayer Literal null BinaryOperation != MethodInvocation getOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference lay MethodInvocation getOwner initPorts	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Component FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Node BlockStatement ReturnStatement Cast ReferenceType Node MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public BasicType boolean isStatic FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Feature BlockStatement ReturnStatement MethodInvocation ScopeKindEnum.SK_CLASSIFIER Cast ReferenceType Feature MemberReference handle equals IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement MethodInvocation ScopeKindEnum.SK_CLASSIFIER Cast ReferenceType AssociationEnd MemberReference handle equals ThrowStatement ClassCreator ReferenceType IllegalArgumentException CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType UndoManager getInstance ReturnStatement MemberReference INSTANCE	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object compositeState ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private deleteInstance FormalParameter ReferenceType elem StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteInstance IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteDataValue IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ComponentInstance BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteComponentInstance IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteNodeInstance IfStatement BinaryOperation instanceof MemberReference elem ReferenceType org ReferenceType omg ReferenceType uml ReferenceType behavioralelements ReferenceType commonbehavior ReferenceType Object BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteObject IfStatement BinaryOperation instanceof MemberReference elem ReferenceType LinkObject BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteLinkObject IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteSubsystemInstance IfStatement BinaryOperation instanceof MemberReference elem ReferenceType UseCaseInstance BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteUseCaseInstance getUseCases	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_46 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 1080864392243350112L Literal - 1054405279954763753L Literal 511L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType String getTableName ReturnStatement MemberReference tableName	0
MethodDeclaration Modifier private removeAttributeIfDuplicate LocalVariableDeclaration ReferenceType Collection VariableDeclarator attrs MethodInvocation MethodInvocation MethodInvocation getOwner getAttributes getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator possibleDuplicateAttr MemberReference attrs BlockStatement IfStatement BinaryOperation && BinaryOperation != MethodInvocation getAttribute MemberReference possibleDuplicateAttr MethodInvocation MethodInvocation MethodInvocation getAttribute getName MethodInvocation MethodInvocation MethodInvocation MemberReference possibleDuplicateAttr getName getFacade equals getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getOwner MethodInvocation getAttribute getCoreHelper	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier private BasicType boolean hasOutGoingDependencies FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType Iterator VariableDeclarator incomingIt MethodInvocation Model MethodInvocation MemberReference parent getClientDependencies MethodInvocation iterator getFacade WhileStatement MethodInvocation incomingIt hasNext BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation incomingIt next isAAbstraction getFacade BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public stateChanged FormalParameter ReferenceType e StatementExpression MethodInvocation LOG Literal ">>Values shown on panel are changed" debug StatementExpression MethodInvocation bodyField update StatementExpression MethodInvocation languageField update	0
MethodDeclaration Modifier public synchronized ReferenceType List TypeArgument ReferenceType String getMethodCalls ReturnStatement MemberReference methodCalls	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object argument IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation instanceof MemberReference argument ReferenceType BlockStatement StatementExpression Cast ReferenceType Action MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unrecognized object " MemberReference handle Literal " or " MemberReference argument	0
MethodDeclaration Modifier public BasicType boolean isEnabled LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance ReturnStatement MethodInvocation Model MethodInvocation MemberReference target isATransition getFacade	0
MethodDeclaration Modifier public final mLCURLY FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference LCURLY = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal '{' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "Not a UML element"	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String s StatementExpression Assignment MemberReference uniqueName MemberReference s = IfStatement BinaryOperation == MemberReference uniqueName Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator pbn MethodInvocation PersistenceManager MethodInvocation MemberReference project getInstance IfStatement MethodInvocation uniqueName MemberReference pbn startsWith BlockStatement StatementExpression Assignment MemberReference uniqueName MethodInvocation uniqueName MethodInvocation pbn length substring = LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement ForControl BinaryOperation < MemberReference i MethodInvocation uniqueName length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MethodInvocation uniqueName MemberReference i charAt Literal '_' BlockStatement BreakStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression Assignment MemberReference uniqueName MethodInvocation uniqueName MemberReference i substring = IfStatement MethodInvocation uniqueName MethodInvocation endsWith BlockStatement StatementExpression Assignment MemberReference uniqueName MethodInvocation uniqueName Literal 0 BinaryOperation - MethodInvocation uniqueName length MethodInvocation MethodInvocation length substring =	0
MethodDeclaration Modifier public ReferenceType Collection getExtentPackages FormalParameter ReferenceType String extentName LocalVariableDeclaration ReferenceType Collection VariableDeclarator elements MethodInvocation MemberReference extentName getExtentElements IfStatement BinaryOperation != MemberReference elements Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference elements BlockStatement IfStatement BinaryOperation instanceof MemberReference element ReferenceType BlockStatement StatementExpression MethodInvocation result MemberReference element add ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateVertex getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Override BasicType boolean getUseTrapRect ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Collection getOptions FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement getMessages getFacade	0
MethodDeclaration Modifier public static ReferenceType UndoableAction getDestMultOneToMany ReturnStatement MemberReference	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_32 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal - 8133501338408189440L Literal 4501453380673077275L Literal 16128L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier protected setBuildingModel FormalParameter BasicType boolean StatementExpression Assignment This MemberReference buildingModel MemberReference =	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType LiteralInteger	0
MethodDeclaration deleteLinkEnd FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType LinkEnd BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem LocalVariableDeclaration ReferenceType Link VariableDeclarator link Cast ReferenceType LinkEnd MemberReference elem IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference link Literal null BinaryOperation != MethodInvocation link getConnection Literal null BinaryOperation == MethodInvocation link MethodInvocation size getConnection Literal 2 BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference link delete getUmlFactory	0
MethodDeclaration Modifier public static ReferenceType List getContents FormalParameter ReferenceType Diagram diagram LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation diagram getLayer LocalVariableDeclaration ReferenceType List VariableDeclarator contents MethodInvocation lay getContents LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation contents size LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList MemberReference size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation contents MemberReference i get IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdge BlockStatement StatementExpression MethodInvocation list MemberReference o add StatementExpression MethodInvocation MemberReference diagram MethodInvocation lay getContentsEdgesOnly MemberReference list getEdges ReturnStatement MemberReference list	0
MethodDeclaration Modifier public ReferenceType String getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator flags ClassCreator ReferenceType StringBuffer Literal 30 StatementExpression MethodInvocation flags MethodInvocation Literal "," append MethodInvocation isDescendSelected append StatementExpression MethodInvocation flags MethodInvocation Literal "," append MethodInvocation isChangedOnlySelected append StatementExpression MethodInvocation flags MethodInvocation Literal "," append MethodInvocation isCreateDiagramsSelected append StatementExpression MethodInvocation flags MethodInvocation Literal "," append MethodInvocation isMinimizeFigsSelected append StatementExpression MethodInvocation flags MethodInvocation isDiagramLayoutSelected append StatementExpression MethodInvocation Configuration MemberReference Argo KEY_IMPORT_GENERAL_SETTINGS_FLAGS MethodInvocation flags toString setString StatementExpression MethodInvocation Configuration MemberReference Argo KEY_IMPORT_GENERAL_DETAIL_LEVEL MethodInvocation String MethodInvocation getImportLevel valueOf setString StatementExpression MethodInvocation Configuration MemberReference Argo KEY_INPUT_SOURCE_ENCODING MethodInvocation getInputSourceEncoding setString StatementExpression MethodInvocation dialog Literal false setVisible StatementExpression MethodInvocation dialog dispose	1
MethodDeclaration Modifier public ReferenceType DiagramElement createDiagramElement FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Rectangle bounds LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNode Literal null LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation getDiagramSettings IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAFinalState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigFinalState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigVertex MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComment getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComment MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAPseudostate getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference modelElement getKind getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement ReturnStatement Literal null IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getInitial getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigInitialState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigEntryPoint MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigExitPoint MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getChoice getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigBranchState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getJunction getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigJunctionState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getFork getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigForkState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getJoin getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigJoinState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getShallowHistory getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigShallowHistoryState MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getDeepHistory getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigDeepHistoryState MemberReference modelElement MemberReference bounds MemberReference settings = ReturnStatement MemberReference figNode	1
MethodDeclaration Modifier private changePartition FormalParameter ReferenceType FigNode AssertStatement BinaryOperation != MemberReference Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator state MethodInvocation getOwner LocalVariableDeclaration ReferenceType ActivityGraphsHelper VariableDeclarator activityGraph MethodInvocation Model ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation MethodInvocation getContentsNoEdges getLayer BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigPartition BlockStatement LocalVariableDeclaration ReferenceType FigPartition VariableDeclarator fig Cast ReferenceType FigPartition MemberReference f LocalVariableDeclaration ReferenceType Object VariableDeclarator partition MethodInvocation fig getOwner IfStatement MethodInvocation fig MethodInvocation MethodInvocation getBounds intersects getBounds BlockStatement StatementExpression MethodInvocation activityGraph MemberReference partition MemberReference state addContent IfStatement MethodInvocation MemberReference state MemberReference partition isStateInPartition BlockStatement StatementExpression MethodInvocation activityGraph MemberReference partition MemberReference state	0
MethodDeclaration Modifier public setTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object property FormalParameter ReferenceType Object value IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ReturnStatement IfStatement BinaryOperation instanceof MemberReference property ReferenceType Property BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Element VariableDeclarator elem Cast ReferenceType Element MemberReference handle LocalVariableDeclaration ReferenceType Property VariableDeclarator prop Cast ReferenceType Property MemberReference property IfStatement BinaryOperation && MethodInvocation prop isMultivalued BinaryOperation instanceof MemberReference value ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator newValue ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation newValue MemberReference value add StatementExpression Assignment MemberReference value MemberReference newValue = IfStatement BinaryOperation && MethodInvocation ! prop isMultivalued BinaryOperation instanceof MemberReference value ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MemberReference value IfStatement MethodInvocation col isEmpty BlockStatement StatementExpression Assignment MemberReference value Literal null = BlockStatement StatementExpression Assignment MemberReference value MethodInvocation col MethodInvocation next iterator = IfStatement BinaryOperation instanceof MemberReference value ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator newValue ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator v Cast ReferenceType Collection MemberReference value BlockStatement StatementExpression MethodInvocation newValue MethodInvocation MemberReference prop MemberReference v postprocessPropertyValue add StatementExpression Assignment MemberReference value MemberReference newValue = BlockStatement StatementExpression Assignment MemberReference value MethodInvocation MemberReference prop MemberReference value postprocessPropertyValue = LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MethodInvocation prop eContainer StatementExpression MethodInvocation UMLUtil MemberReference elem MemberReference stereotype MethodInvocation prop getName MemberReference value setTaggedValue	1
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType TabTarget MemberReference container	1
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object operation FormalParameter ReferenceType Object classifier FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation Model MethodInvocation MemberReference operation MemberReference classifier getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference parameter MemberReference name setName getCoreHelper ReturnStatement MemberReference parameter	0
MethodDeclaration FormalParameter ReferenceType FigPartition next StatementExpression Assignment This MemberReference MemberReference next =	0
MethodDeclaration Modifier public ReferenceType URI fixUriExtension FormalParameter ReferenceType URI in LocalVariableDeclaration ReferenceType URI VariableDeclarator newUri LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation in toString StatementExpression Assignment MemberReference n MethodInvocation MemberReference n fixExtension = TryStatement StatementExpression Assignment MemberReference newUri ClassCreator ReferenceType URI MemberReference n = CatchClause CatchClauseParameter java.net.URISyntaxException e ThrowStatement ClassCreator ReferenceType UnexpectedException MemberReference e ReturnStatement MemberReference newUri	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object elem FormalParameter BasicType int i FormalParameter ReferenceType Object impl IfStatement BinaryOperation && BinaryOperation instanceof MemberReference elem ReferenceType Classifier BinaryOperation instanceof MemberReference impl ReferenceType Feature BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference elem ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "elem: " MemberReference elem Literal " or impl: " MemberReference impl	0
MethodDeclaration Modifier public ReferenceType Collection getSubmachineStates FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "Not in UML2"	0
MethodDeclaration Modifier private validatePrimaryKey FormalParameter ReferenceType Object relation LocalVariableDeclaration ReferenceType List VariableDeclarator attributes MethodInvocation Model MethodInvocation MemberReference relation getAttributes getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation attributes iterator LocalVariableDeclaration BasicType boolean VariableDeclarator valid Literal false WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator attribute MethodInvocation it next IfStatement MethodInvocation Utils MemberReference attribute BlockStatement StatementExpression Assignment MemberReference valid Literal true = BreakStatement IfStatement MemberReference ! valid BlockStatement StatementExpression MethodInvocation problems BinaryOperation + Literal key missing for " MethodInvocation Model MethodInvocation MemberReference relation getName getFacade add	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement BinaryOperation > MemberReference currentTarget Literal 0	0
MethodDeclaration Modifier public FormalParameter ReferenceType ArgoHelpEvent e StatementExpression MethodInvocation myStatusBar Literal "" showStatus	0
MethodDeclaration Modifier protected ReferenceType Action getActionShallowHistoryPseudoState IfStatement BinaryOperation == MemberReference actionShallowHistoryPseudoState Literal null BlockStatement StatementExpression Assignment MemberReference actionShallowHistoryPseudoState ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionCreatePseudostate MethodInvocation Model MethodInvocation getShallowHistory getPseudostateKind Literal = ReturnStatement MemberReference actionShallowHistoryPseudoState	0
MethodDeclaration Modifier protected removeElementListener FormalParameter ReferenceType Object element StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference element Literal null remove StatementExpression MethodInvocation Model MethodInvocation This MemberReference element removeModelEventListener getPump	0
MethodDeclaration Modifier private setLastModified FormalParameter ReferenceType Project project FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType String VariableDeclarator fn MethodInvocation file getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator lm MethodInvocation String MethodInvocation file lastModified valueOf IfStatement BinaryOperation != MemberReference lm Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation project getModel MemberReference fn MemberReference lm setTaggedValue getCoreHelper	1
MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType String buildOptions LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MethodInvocation getTriggerAssociation IfStatement BinaryOperation == MemberReference asc Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference asc getConnections MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator ae0 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator ae1 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator cls0 MethodInvocation Model MethodInvocation MemberReference ae0 getType getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator cls1 MethodInvocation Model MethodInvocation MemberReference ae1 getType getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator start MethodInvocation Translator Literal "misc.name.anon" localize LocalVariableDeclaration ReferenceType String VariableDeclarator end MethodInvocation Translator Literal "misc.name.anon" localize IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference cls0 Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference cls0 getName getFacade Literal null MethodInvocation Model getFacade BlockStatement StatementExpression Assignment MemberReference start MethodInvocation Model MethodInvocation MemberReference cls0 getName getFacade = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference cls1 Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference cls1 getName getFacade Literal null MethodInvocation Model getFacade BlockStatement StatementExpression Assignment MemberReference end MethodInvocation Model MethodInvocation MemberReference cls1 getName getFacade = StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + MemberReference start MethodInvocation Translator Literal "critics.WizAssocComposite-option1" localize MemberReference end add StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + MemberReference start MethodInvocation Translator Literal "critics.WizAssocComposite-option2" localize MemberReference end add StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + MemberReference end MethodInvocation Translator Literal "critics.WizAssocComposite-option1" localize MemberReference start add StatementExpression MethodInvocation result BinaryOperation + BinaryOperation + MemberReference end MethodInvocation Translator Literal "critics.WizAssocComposite-option2" localize MemberReference start add StatementExpression MethodInvocation result MethodInvocation Translator Literal "critics.WizAssocComposite-option3" localize add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation impl MemberReference kind	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int i ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean isAGeneralization FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization	0
MethodDeclaration Modifier private ReferenceType Object getUML1Stereotype FormalParameter ReferenceType String name StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Trying to find a stereotype of name <<" MemberReference name Literal ">>" debug LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation Model MethodInvocation MemberReference model MemberReference name lookupIn getFacade IfStatement BinaryOperation == MemberReference stereotype Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Couldn't find so creating it" debug ReturnStatement MethodInvocation Model MethodInvocation MemberReference name MemberReference model buildStereotype getExtensionMechanismsFactory IfStatement MethodInvocation ! Model MethodInvocation MemberReference stereotype isAStereotype getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "Found that isn't a stereotype so creating it" debug ReturnStatement MethodInvocation Model MethodInvocation MemberReference name MemberReference model buildStereotype getExtensionMechanismsFactory StatementExpression MethodInvocation LOG Literal "Found it" debug ReturnStatement MemberReference stereotype	1
MethodDeclaration Modifier private ReferenceType FigMessage LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType FigMessage VariableDeclarator messages MethodInvocation getFigMessages LocalVariableDeclaration ReferenceType FigMessage VariableDeclarator createMessage Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType FigMessage VariableDeclarator message MemberReference messages BlockStatement IfStatement BinaryOperation && MethodInvocation message MethodInvocation This equals getDestFigNode MethodInvocation message BlockStatement StatementExpression Assignment MemberReference createMessage MemberReference message = BreakStatement ReturnStatement MemberReference createMessage	0
MethodDeclaration Modifier private static ReferenceType PopupToolBoxButton buildPopupToolBoxButton FormalParameter ReferenceType Object actions FormalParameter BasicType boolean rollover LocalVariableDeclaration ReferenceType PopupToolBoxButton VariableDeclarator toolBox Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference actions length MemberReference ++ i BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i actions ReferenceType Action BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Adding a " MemberReference ArraySelector MemberReference i actions Literal " to the toolbar" info LocalVariableDeclaration ReferenceType Action VariableDeclarator a Cast ReferenceType Action MemberReference ArraySelector MemberReference i actions IfStatement BinaryOperation == MemberReference toolBox Literal null BlockStatement StatementExpression Assignment MemberReference toolBox ClassCreator ReferenceType PopupToolBoxButton MemberReference a Literal 0 Literal 1 MemberReference rollover = StatementExpression MethodInvocation toolBox MemberReference a add IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i actions ReferenceType Component BlockStatement StatementExpression MethodInvocation toolBox Cast ReferenceType Component MemberReference ArraySelector MemberReference i actions add IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i actions ReferenceType Object BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator actionRow Cast ReferenceType Object MemberReference ArraySelector MemberReference i actions ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference actionRow length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator a Cast ReferenceType Action MemberReference ArraySelector MemberReference j actionRow IfStatement BinaryOperation == MemberReference toolBox Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator cols MemberReference actionRow length StatementExpression Assignment MemberReference toolBox ClassCreator ReferenceType PopupToolBoxButton MemberReference a Literal 0 MemberReference cols MemberReference rollover = StatementExpression MethodInvocation toolBox MemberReference a add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Can't add a " MemberReference ArraySelector MemberReference i actions Literal " to the toolbar" error ReturnStatement MemberReference toolBox	1
MethodDeclaration Modifier public FormalParameter ReferenceType node StatementExpression Assignment MemberReference val MethodInvocation Boolean MethodInvocation node MethodInvocation getText getBool parseBoolean = StatementExpression MethodInvocation MemberReference node	0
MethodDeclaration Modifier private ReferenceType String getClassifierName FormalParameter ReferenceType String name LocalVariableDeclaration BasicType int VariableDeclarator lastDot MethodInvocation name Literal '.' lastIndexOf IfStatement BinaryOperation == MemberReference lastDot Literal - 1 BlockStatement ReturnStatement MemberReference name ReturnStatement MethodInvocation name BinaryOperation + MemberReference lastDot Literal 1 substring	0
MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType ImportInterface ReturnStatement MethodInvocation Collections MemberReference importers unmodifiableSet	0
MethodDeclaration Modifier public ReferenceType Object getScopeKind ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public startElement FormalParameter BasicType int nameCode FormalParameter ReferenceType org ReferenceType xml ReferenceType sax ReferenceType Attributes attributes FormalParameter BasicType int namespaces FormalParameter BasicType int nscount TransformerException IfStatement MethodInvocation ! MemberReference nameCode skipThisElement BlockStatement LocalVariableDeclaration ReferenceType StartElementInfo VariableDeclarator sei ClassCreator ReferenceType StartElementInfo MemberReference nameCode MemberReference attributes MemberReference namespaces MemberReference nscount StatementExpression MethodInvocation elementStack MemberReference sei push StatementExpression Assignment MemberReference firstElement Literal false = StatementExpression MethodInvocation rtfEmitter MemberReference nameCode MemberReference attributes MemberReference namespaces MemberReference nscount startElement	1
MethodDeclaration Modifier private static ReferenceType String generateExpression FormalParameter ReferenceType Object expr IfStatement MethodInvocation Model MethodInvocation MemberReference expr isAExpression getFacade BlockStatement ReturnStatement MethodInvocation Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade generateUninterpreted IfStatement MethodInvocation Model MethodInvocation MemberReference expr getFacade BlockStatement ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade generateExpression ReturnStatement Literal ""	0
MethodDeclaration Modifier public final BasicType boolean load FormalParameter ReferenceType File file LocalVariableDeclaration BasicType boolean VariableDeclarator status MethodInvocation MemberReference file loadFile IfStatement MemberReference status BlockStatement IfStatement BinaryOperation != MemberReference pcl Literal null BlockStatement StatementExpression MethodInvocation pcl MemberReference Configuration Literal null MemberReference file firePropertyChange StatementExpression Assignment MemberReference loadedFromFile MemberReference file = ReturnStatement MemberReference status	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent arg0 StatementExpression SuperMethodInvocation MemberReference arg0 actionPerformed IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator gm Cast ReferenceType MutableGraphModel MethodInvocation DiagramUtils MethodInvocation getGraphModel getActiveDiagram IfStatement MethodInvocation gm MemberReference edge canAddEdge BlockStatement StatementExpression MethodInvocation gm MemberReference edge addEdge IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociationClass getFacade BlockStatement StatementExpression MethodInvocation ModeCreateAssociationClass MethodInvocation Globals curEditor MemberReference edge buildInActiveLayer	1
MethodDeclaration Modifier private IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getFig LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator act MethodInvocation getAction LocalVariableDeclaration Modifier final ReferenceType ArrowHead VariableDeclarator arrowHead IfStatement BinaryOperation && BinaryOperation != MemberReference act Literal null MethodInvocation Model MethodInvocation MethodInvocation getAction isAsynchronous getFacade BlockStatement StatementExpression Assignment MemberReference arrowHead ClassCreator ReferenceType ArrowHeadGreater = BlockStatement StatementExpression Assignment MemberReference arrowHead ClassCreator ReferenceType ArrowHeadTriangle = StatementExpression MethodInvocation MethodInvocation MethodInvocation getLineColor setFillColor getFig StatementExpression MethodInvocation MemberReference arrowHead	0
MethodDeclaration Modifier public Annotation Override BasicType int ReturnStatement MemberReference ANY_HELP_EVENT	0
MethodDeclaration Modifier public Annotation Deprecated setChangeability FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ck IfStatement BinaryOperation || BinaryOperation == MemberReference ck Literal null BinaryOperation instanceof MemberReference ck ReferenceType ChangeableKind BlockStatement LocalVariableDeclaration ReferenceType ChangeableKind VariableDeclarator changeableKind Cast ReferenceType ChangeableKind MemberReference ck IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement StatementExpression Cast ReferenceType StructuralFeature MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or ck: " MemberReference ck	1
MethodDeclaration Modifier public Annotation Override setFig FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f setFig StatementExpression MethodInvocation Literal true	0
MethodDeclaration Modifier public ReferenceType DocumentFragment numberLines FormalParameter ReferenceType ExpressionContext context FormalParameter ReferenceType NodeIterator xalanNI LocalVariableDeclaration BasicType int VariableDeclarator xalanMod MethodInvocation Params MemberReference context Literal "linenumbering.everyNth" getInt LocalVariableDeclaration BasicType int VariableDeclarator xalanWidth MethodInvocation Params MemberReference context Literal "linenumbering.width" getInt LocalVariableDeclaration ReferenceType String VariableDeclarator xalanSep MethodInvocation Params MemberReference context Literal "linenumbering.separator" getString LocalVariableDeclaration ReferenceType DocumentFragment VariableDeclarator xalanRTF Cast ReferenceType DocumentFragment MethodInvocation xalanNI nextNode LocalVariableDeclaration BasicType int VariableDeclarator numLines BinaryOperation + MethodInvocation MemberReference xalanRTF countLineBreaks Literal 1 LocalVariableDeclaration ReferenceType DocumentBuilderFactory VariableDeclarator docFactory MethodInvocation DocumentBuilderFactory newInstance LocalVariableDeclaration ReferenceType DocumentBuilder VariableDeclarator docBuilder Literal null TryStatement StatementExpression Assignment MemberReference docBuilder MethodInvocation docFactory newDocumentBuilder = CatchClause CatchClauseParameter ParserConfigurationException e StatementExpression MethodInvocation System.out Literal "PCE!" println ReturnStatement MemberReference xalanRTF LocalVariableDeclaration ReferenceType Document VariableDeclarator doc MethodInvocation docBuilder newDocument LocalVariableDeclaration ReferenceType DocumentFragment VariableDeclarator df MethodInvocation doc createDocumentFragment LocalVariableDeclaration ReferenceType DOMBuilder VariableDeclarator db ClassCreator ReferenceType DOMBuilder MemberReference doc MemberReference df StatementExpression Assignment MemberReference elementStack ClassCreator ReferenceType Stack = StatementExpression Assignment MemberReference lineNumber Literal 0 = StatementExpression Assignment MemberReference modulus TernaryExpression BinaryOperation < MemberReference numLines MemberReference xalanMod Literal 1 MemberReference xalanMod = StatementExpression Assignment MemberReference width MemberReference xalanWidth = StatementExpression Assignment MemberReference separator MemberReference xalanSep = LocalVariableDeclaration BasicType double VariableDeclarator log10numLines BinaryOperation / MethodInvocation Math MemberReference numLines log MethodInvocation Math Literal 10 log IfStatement BinaryOperation < MemberReference width BinaryOperation + MemberReference log10numLines Literal 1 BlockStatement StatementExpression Assignment MemberReference width Cast BasicType int MethodInvocation Math BinaryOperation + MemberReference log10numLines Literal 1 floor = StatementExpression MethodInvocation MemberReference db MemberReference xalanRTF lineNumberFragment ReturnStatement MemberReference df	1
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated BasicType boolean isInTrash FormalParameter ReferenceType Object obj ReturnStatement MethodInvocation MemberReference obj contains	1
MethodDeclaration Modifier public mouseReleased FormalParameter ReferenceType MouseEvent e IfStatement MethodInvocation e isPopupTrigger BlockStatement LocalVariableDeclaration ReferenceType JPopupMenu VariableDeclarator popup ClassCreator ReferenceType JPopupMenu ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator action MemberReference actions BlockStatement IfStatement BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement StatementExpression MethodInvocation popup Cast ReferenceType Action MemberReference action add IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation popup MemberReference add StatementExpression MethodInvocation popup MemberReference add StatementExpression MethodInvocation popup MemberReference add StatementExpression MethodInvocation popup MemberReference add IfStatement BinaryOperation > MethodInvocation popup getComponentCount Literal 0 BlockStatement StatementExpression MethodInvocation popup This MethodInvocation e getX MethodInvocation e getY show StatementExpression MethodInvocation e consume	0
MethodDeclaration Modifier public Annotation Override select LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation getOffenders BlockStatement IfStatement BinaryOperation instanceof MemberReference dm ReferenceType Highlightable BlockStatement StatementExpression Cast ReferenceType Highlightable MemberReference dm IfStatement BinaryOperation != MemberReference p Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iterFigs MethodInvocation p MethodInvocation iterator MemberReference dm findFigsForMember WhileStatement MethodInvocation iterFigs hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation iterFigs next IfStatement BinaryOperation instanceof MemberReference f ReferenceType Highlightable BlockStatement StatementExpression Cast ReferenceType Highlightable MemberReference f	0
MethodDeclaration Modifier protected Annotation Override nameButtons StatementExpression SuperMethodInvocation nameButtons StatementExpression MethodInvocation MethodInvocation getOkButton Literal nameButton	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType StateVertex getAllPossibleSubvertices FormalParameter ReferenceType Object oState LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType StateVertex VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType StateVertex TryStatement IfStatement BinaryOperation instanceof MemberReference oState ReferenceType CompositeState BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType StateVertex VariableDeclarator vertex Cast ReferenceType CompositeState MemberReference oState BlockStatement StatementExpression MethodInvocation result MemberReference vertex add StatementExpression MethodInvocation result MethodInvocation MemberReference vertex getAllPossibleSubvertices addAll CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType Operation MemberReference handle	0
MethodDeclaration Modifier public static ReferenceType String removeChar FormalParameter ReferenceType String string FormalParameter BasicType char toRemove ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference toRemove length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation string BinaryOperation - MethodInvocation string length Literal 1 charAt MemberReference ArraySelector MemberReference i toRemove BlockStatement StatementExpression Assignment MemberReference string MethodInvocation string Literal 0 BinaryOperation - MethodInvocation string length Literal 1 substring = ReturnStatement MemberReference string ReturnStatement MemberReference string	1
MethodDeclaration Modifier public setFilled FormalParameter BasicType boolean f StatementExpression SuperMethodInvocation Literal false setFilled	0
MethodDeclaration Modifier public ReferenceType Object getExpression FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Guard BlockStatement ReturnStatement Cast ReferenceType Guard MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TimeEvent BlockStatement ReturnStatement Cast ReferenceType TimeEvent MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public static ReferenceType UndoableAction ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override BasicType int getLineWidth ReturnStatement MethodInvocation getLineWidth	0
MethodDeclaration Modifier public ReferenceType AssociationEnd buildAssociationEnd FormalParameter ReferenceType Object assoc FormalParameter ReferenceType String name FormalParameter ReferenceType Object type FormalParameter ReferenceType Integer multiplicity FormalParameter ReferenceType Object stereo FormalParameter BasicType boolean navigable FormalParameter ReferenceType Object order FormalParameter ReferenceType Object aggregation FormalParameter ReferenceType Object scope FormalParameter ReferenceType Object changeable FormalParameter ReferenceType Object visibility IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference aggregation Literal null MethodInvocation aggregation MemberReference AggregationKindEnum AK_COMPOSITE equals BinaryOperation != MemberReference multiplicity Literal null BinaryOperation || BinaryOperation > MemberReference ArraySelector Literal 1 multiplicity Literal 1 BinaryOperation == MemberReference ArraySelector Literal 1 multiplicity Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "aggregation is composite " Literal "and multiplicity > 1" LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator ae MethodInvocation MemberReference assoc MemberReference name MemberReference type MemberReference stereo MemberReference navigable MemberReference order MemberReference aggregation MemberReference scope MemberReference changeable MemberReference visibility buildAssociationEndInternal IfStatement BinaryOperation != MemberReference multiplicity Literal null BlockStatement LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator m MethodInvocation modelImpl MethodInvocation MemberReference ArraySelector Literal 0 multiplicity MemberReference ArraySelector Literal 1 multiplicity createMultiplicityInternal getDataTypesFactoryInternal StatementExpression MethodInvocation ae MemberReference m setMultiplicity ReturnStatement MemberReference ae	1
MethodDeclaration Modifier public Annotation Override action StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation getOffenders StatementExpression MethodInvocation select	0
MethodDeclaration Modifier public endMemberDeclaration StatementExpression MemberReference -- memberDeclarationCount StatementExpression MethodInvocation finish StatementExpression Assignment MemberReference Literal null =	0
MethodDeclaration Modifier public vetoableChange FormalParameter ReferenceType PropertyChangeEvent pce LocalVariableDeclaration ReferenceType DelayedChangeNotify VariableDeclarator delayedNotify ClassCreator ReferenceType DelayedChangeNotify This MemberReference pce StatementExpression MethodInvocation SwingUtilities MemberReference delayedNotify invokeLater	0
MethodDeclaration Modifier public FormalParameter ReferenceType DiagramSettings StatementExpression Assignment MemberReference settings MemberReference = StatementExpression MethodInvocation renderingChanged	0
MethodDeclaration Modifier public Annotation Override removeFromDiagram StatementExpression MethodInvocation ArgoEventPump MemberReference ArgoEventTypes ANY_NOTATION_EVENT This removeListener StatementExpression MethodInvocation notationProvider cleanListener StatementExpression SuperMethodInvocation removeFromDiagram	0
MethodDeclaration Modifier public static BasicType boolean load ReturnStatement MethodInvocation config loadDefault	0
MethodDeclaration Modifier protected ReferenceType FormalParameter ReferenceType Editor ce FormalParameter ReferenceType Object edgeType FormalParameter BasicType boolean postProcess FormalParameter ReferenceType SelectionNodeClarifiers2 nodeCreator ReturnStatement ClassCreator ReferenceType MemberReference ce MemberReference edgeType MemberReference postProcess MemberReference nodeCreator	0
MethodDeclaration Modifier public ReferenceType String getTabKey ReturnStatement Literal	0
MethodDeclaration Modifier public applyCppClassStereotype FormalParameter ReferenceType Object aClass StatementExpression MethodInvocation MemberReference STEREO_NAME_CLASS MemberReference aClass applyStereotype	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType getRealizedInterfaces FormalParameter ReferenceType Object cls IfStatement BinaryOperation instanceof MemberReference cls ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "'cls' must be instance of UML2 Class" ReturnStatement Cast ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class MemberReference cls	0
MethodDeclaration Modifier private FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String propertyNames IfStatement BinaryOperation || BinaryOperation == MemberReference listener Literal null BinaryOperation == MemberReference modelElement Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal listener (" MemberReference listener Literal ") or modelElement (" MemberReference modelElement Literal ") can be null! [Property names: " MemberReference propertyNames Literal "]" LocalVariableDeclaration ReferenceType String VariableDeclarator mofId Cast ReferenceType RefBaseObject MemberReference modelElement TryStatement StatementExpression MethodInvocation Cast ReferenceType RefBaseObject MemberReference modelElement MemberReference propertyNames verifyAttributeNames CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Register [" Literal " element:" MethodInvocation MemberReference modelElement formatElement Literal ", properties:" MethodInvocation MemberReference propertyNames formatArray Literal ", listener:" MemberReference listener Literal "]" debug SynchronizedStatement MemberReference registrationMutex StatementExpression MethodInvocation elements MemberReference listener MemberReference mofId MemberReference propertyNames register	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Collection selected IfStatement BinaryOperation && BinaryOperation != MemberReference selected Literal null BinaryOperation >= MethodInvocation selected size Literal 1 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation selected MethodInvocation next iterator setInstantiation getCommonBehaviorHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget Literal null setInstantiation getCommonBehaviorHelper	1
MethodDeclaration Modifier private ReferenceType ZipInputStream openZipStreamAt FormalParameter ReferenceType URL url FormalParameter ReferenceType String ext IOException LocalVariableDeclaration ReferenceType ZipInputStream VariableDeclarator zis ClassCreator ReferenceType ZipInputStream MethodInvocation url openStream LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry MethodInvocation zis getNextEntry WhileStatement BinaryOperation && BinaryOperation != MemberReference entry Literal null MethodInvocation ! entry MethodInvocation MemberReference ext endsWith getName BlockStatement StatementExpression Assignment MemberReference entry MethodInvocation zis getNextEntry = IfStatement BinaryOperation == MemberReference entry Literal null BlockStatement StatementExpression MethodInvocation zis close ReturnStatement Literal null ReturnStatement MemberReference zis	1
MethodDeclaration Modifier protected ReferenceType FigEdge getCurrentEdge ReturnStatement MemberReference	0
MethodDeclaration Modifier private BasicType boolean isValidNamespace FormalParameter Modifier final ReferenceType UmlAssociation assoc FormalParameter Modifier final ReferenceType Namespace ns ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end MethodInvocation assoc getConnection BlockStatement IfStatement MethodInvocation ! MethodInvocation end getParticipant MemberReference ns isVisible BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation head MemberReference w setLineWidth	0
MethodDeclaration Modifier private writeFile FormalParameter ReferenceType String filename FormalParameter ReferenceType String content LocalVariableDeclaration ReferenceType BufferedWriter VariableDeclarator fos Literal null TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator inputSrcEnc MethodInvocation Configuration MemberReference Argo KEY_INPUT_SOURCE_ENCODING getString IfStatement BinaryOperation || BinaryOperation == MemberReference inputSrcEnc Literal null MethodInvocation inputSrcEnc MethodInvocation Literal "" equals trim BlockStatement StatementExpression Assignment MemberReference inputSrcEnc MethodInvocation System Literal "file.encoding" getProperty = StatementExpression Assignment MemberReference fos ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType OutputStreamWriter ClassCreator ReferenceType FileOutputStream MemberReference filename MemberReference inputSrcEnc = StatementExpression MethodInvocation fos MemberReference content write CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "IO Exception: " MemberReference e error TryStatement IfStatement BinaryOperation != MemberReference fos Literal null BlockStatement StatementExpression MethodInvocation fos close CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "FAILED: " MemberReference filename error	1
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator aSize MethodInvocation MethodInvocation getMinimumSize getNameFig StatementExpression Assignment MemberReference aSize MethodInvocation MemberReference aSize MethodInvocation getStereotypeFig addChildWidth = ForStatement EnhancedForControl VariableDeclaration ReferenceType FigCompartment VariableDeclarator c MemberReference compartments BlockStatement StatementExpression Assignment MemberReference aSize MethodInvocation MemberReference aSize MemberReference c addChildDimensions = StatementExpression Assignment MemberReference aSize width MethodInvocation Math MemberReference MemberReference aSize width max = StatementExpression Assignment MemberReference aSize MethodInvocation MemberReference aSize = ReturnStatement MemberReference aSize	0
MethodDeclaration Modifier private ReferenceType UncheckedStatement parseUnchecked FeatureNotSupportedException LocalVariableDeclaration ReferenceType UncheckedStatement VariableDeclarator node ClassCreator ReferenceType UncheckedStatement StatementExpression MethodInvocation advance IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi StatementExpression MethodInvocation advance ReturnStatement MemberReference node	1
MethodDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType String getCommands IfStatement BinaryOperation == MemberReference labelTextsAndActionCommands Literal null BlockStatement StatementExpression Assignment MemberReference labelTextsAndActionCommands ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String = StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal "label.concurrency-sequential" localize MemberReference SEQUENTIAL_COMMAND add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal "label.concurrency-guarded" localize MemberReference GUARDED_COMMAND add StatementExpression MethodInvocation labelTextsAndActionCommands ArrayCreator ReferenceType String ArrayInitializer MethodInvocation Translator Literal "label.concurrency-concurrent" localize MemberReference CONCURRENT_COMMAND add ReturnStatement MemberReference labelTextsAndActionCommands	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig createBigPortFig LocalVariableDeclaration ReferenceType VariableDeclarator port ClassCreator ReferenceType Literal 0 Literal 0 MemberReference MemberReference HEIGHT MemberReference DEPTH StatementExpression MethodInvocation port Literal false setFilled StatementExpression MethodInvocation port Literal 1 setLineWidth ReturnStatement MemberReference port	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object compositeState ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public BasicType boolean enable StatementExpression MethodInvocation LOG Literal Module info LocalVariableDeclaration ReferenceType NotationLanguage VariableDeclarator lang ClassCreator ReferenceType StatementExpression MethodInvocation NotationManager MethodInvocation MemberReference lang addNotationLanguage getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType Action theAction StatementExpression Assignment MemberReference selectedAction MemberReference theAction = LocalVariableDeclaration BasicType int VariableDeclarator toolCount MethodInvocation toolBar getComponentCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference toolCount MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Component VariableDeclarator c MethodInvocation toolBar MemberReference i getComponent IfStatement BinaryOperation instanceof MemberReference c ReferenceType ToolButton BlockStatement LocalVariableDeclaration ReferenceType ToolButton VariableDeclarator tb Cast ReferenceType ToolButton MemberReference c LocalVariableDeclaration ReferenceType Action VariableDeclarator action MethodInvocation tb getRealAction IfStatement BinaryOperation instanceof MemberReference action ReferenceType RadioAction BlockStatement StatementExpression Assignment MemberReference action Cast ReferenceType RadioAction MemberReference action = LocalVariableDeclaration ReferenceType Action VariableDeclarator otherAction MemberReference theAction IfStatement BinaryOperation instanceof MemberReference theAction ReferenceType RadioAction BlockStatement StatementExpression Assignment MemberReference otherAction Cast ReferenceType RadioAction MemberReference theAction = IfStatement BinaryOperation && BinaryOperation != MemberReference action Literal null MethodInvocation ! action MemberReference otherAction equals BlockStatement StatementExpression MethodInvocation tb Literal false setSelected LocalVariableDeclaration ReferenceType ButtonModel VariableDeclarator bm MethodInvocation tb getModel StatementExpression MethodInvocation bm Literal false setRollover StatementExpression MethodInvocation bm Literal false setSelected StatementExpression MethodInvocation bm Literal false setArmed StatementExpression MethodInvocation bm Literal false setPressed IfStatement MethodInvocation ! ToolBarManager alwaysUseStandardRollover BlockStatement StatementExpression MethodInvocation tb Literal false setBorderPainted BlockStatement StatementExpression MethodInvocation tb Literal true setSelected LocalVariableDeclaration ReferenceType ButtonModel VariableDeclarator bm MethodInvocation tb getModel StatementExpression MethodInvocation bm Literal true setRollover IfStatement MethodInvocation ! ToolBarManager alwaysUseStandardRollover BlockStatement StatementExpression MethodInvocation tb Literal true setBorderPainted	1
MethodDeclaration Modifier public BasicType boolean isARelationship FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Relationship	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed StatementExpression MethodInvocation Literal true doStereotype	0
MethodDeclaration Modifier public final ptr_operator RecognitionException TokenStreamException IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m beginPtrOperator BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase AMPERSAND BlockStatement StatementExpression MethodInvocation MemberReference AMPERSAND match IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m Literal "&" ptrOperator BreakStatement SwitchStatementCase LITERAL__cdecl LITERAL___cdecl BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL__cdecl BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__cdecl match BreakStatement SwitchStatementCase LITERAL___cdecl BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___cdecl match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase LITERAL__near LITERAL___near BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL__near BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__near match BreakStatement SwitchStatementCase LITERAL___near BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___near match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase LITERAL__far LITERAL___far BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL__far BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__far match BreakStatement SwitchStatementCase LITERAL___far BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___far match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase LITERAL___interrupt BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___interrupt match BreakStatement SwitchStatementCase LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_pascal BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_pascal match BreakStatement SwitchStatementCase LITERAL__pascal BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__pascal match BreakStatement SwitchStatementCase LITERAL___pascal BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___pascal match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase LITERAL__stdcall LITERAL___stdcall BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL__stdcall BlockStatement StatementExpression MethodInvocation MemberReference LITERAL__stdcall match BreakStatement SwitchStatementCase LITERAL___stdcall BlockStatement StatementExpression MethodInvocation MemberReference LITERAL___stdcall match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase ID STAR SCOPE BlockStatement StatementExpression MethodInvocation ptr_to_member BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m endPtrOperator	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Collection getRaisedSignals FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public ReferenceType Action getAction ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getAction getFacade addElement	0
MethodDeclaration Modifier public Annotation Override mouseClicked FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me mouseClicked StatementExpression MethodInvocation MemberReference LINE_COLOR setLineColor	0
MethodDeclaration Modifier private doImportPass FormalParameter ReferenceType Project p FormalParameter ReferenceType Collection files FormalParameter ReferenceType ImportSettings settings FormalParameter ReferenceType ProgressMonitor monitor FormalParameter BasicType int startCount FormalParameter BasicType int pass ImportException LocalVariableDeclaration BasicType int VariableDeclarator count MemberReference startCount ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation files iterator MethodInvocation it hasNext BlockStatement IfStatement MethodInvocation monitor isCanceled BlockStatement StatementExpression MethodInvocation monitor MethodInvocation Translator Literal "dialog.import.cancelled" localize updateSubTask ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator file MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference file ReferenceType File BlockStatement StatementExpression MethodInvocation System.out Cast ReferenceType File MemberReference file println StatementExpression MethodInvocation MemberReference p Cast ReferenceType File MemberReference file MemberReference settings MemberReference pass parseFile StatementExpression MethodInvocation monitor MemberReference ++ count updateProgress StatementExpression MethodInvocation monitor MethodInvocation Translator Literal "dialog.import.parsingAction" ArrayCreator ReferenceType Object ArrayInitializer Cast ReferenceType File MemberReference file localize updateSubTask BlockStatement ThrowStatement ClassCreator ReferenceType ImportException BinaryOperation + Literal "Object isn't a file " MemberReference file	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ReferenceType SqlCodeCreator getCodeCreators LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Class VariableDeclarator classes ClassCreator ReferenceType HashSet TypeArgument ReferenceType Class StatementExpression Assignment MemberReference moduleDir ClassCreator ReferenceType File MethodInvocation Utils getModuleRoot = StatementExpression MethodInvocation classes MethodInvocation MemberReference moduleDir getClassesFromDir addAll LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ReferenceType SqlCodeCreator VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType Class TypeArgument ReferenceType SqlCodeCreator ForStatement EnhancedForControl VariableDeclaration ReferenceType Class VariableDeclarator foundClass MemberReference classes BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference foundClass ClassReference ReferenceType SqlCodeCreator ClassReference MethodInvocation MemberReference foundClass isAssignableFrom ReferenceType SqlCodeCreator BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Class TypeArgument ReferenceType SqlCodeCreator MemberReference foundClass add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public stateChanged FormalParameter ReferenceType e IfStatement BinaryOperation != MemberReference lastTab Literal null BlockStatement StatementExpression MethodInvocation lastTab Literal false setVisible StatementExpression Assignment MemberReference lastTab MethodInvocation tabs getSelectedComponent = StatementExpression MethodInvocation LOG BinaryOperation + Literal "MultiEditorPane state changed:" MethodInvocation lastTab MethodInvocation getName getClass debug StatementExpression MethodInvocation lastTab Literal true setVisible IfStatement BinaryOperation instanceof MemberReference lastTab ReferenceType TabModelTarget BlockStatement StatementExpression Cast ReferenceType TabModelTarget MemberReference lastTab	1
MethodDeclaration Modifier public ReferenceType Object getActivityGraph FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier final protected StatementExpression MethodInvocation Literal 0	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String s ReturnStatement MethodInvocation MemberReference s Literal true	0
MethodDeclaration Modifier public Annotation Deprecated setMultiplicity FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object arg IfStatement BinaryOperation instanceof MemberReference arg ReferenceType String BlockStatement StatementExpression MethodInvocation MemberReference handle Cast ReferenceType String MemberReference arg setMultiplicity ReturnStatement IfStatement BinaryOperation || BinaryOperation == MemberReference arg Literal null BinaryOperation instanceof MemberReference arg ReferenceType Multiplicity BlockStatement StatementExpression MethodInvocation MemberReference handle Cast ReferenceType Multiplicity MemberReference arg BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or arg: " MemberReference arg	1
MethodDeclaration Modifier public removeSearchPathDirectory FormalParameter ReferenceType String path IfStatement BinaryOperation != MemberReference path Literal null BlockStatement StatementExpression MethodInvocation searchDirectories MemberReference path remove StatementExpression MethodInvocation updateSearchDirectoriesConfiguration TryStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference path removeSearchPath getXmiReader CatchClause CatchClauseParameter UmlException e StatementExpression MethodInvocation LOG Literal "Couldn't retrive XMI Reader from Model." MemberReference e error	0
MethodDeclaration Modifier public Annotation Override ReferenceType Icon getClarifier ReturnStatement MethodInvocation ClAttributeCompartment getTheInstance	0
MethodDeclaration Modifier private endFileGeneration IfStatement BinaryOperation == MemberReference -- generateRecur Literal 0 BlockStatement StatementExpression Assignment MemberReference generatedFiles Literal null =	0
MethodDeclaration Modifier private parseUsingDirectives FeatureNotSupportedException DoStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Using BlockStatement StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType VariableDeclarator node ClassCreator ReferenceType LocalVariableDeclaration ReferenceType IdentifierExpression VariableDeclarator nameOrAlias MethodInvocation parseQualifiedIdentifier IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Equal BlockStatement StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType IdentifierExpression VariableDeclarator target MethodInvocation parseQualifiedIdentifier StatementExpression MethodInvocation node MemberReference nameOrAlias setAliasName StatementExpression Assignment MemberReference node Target MemberReference target = BlockStatement StatementExpression Assignment MemberReference node Target MemberReference nameOrAlias = StatementExpression MethodInvocation MemberReference TokenID Semi AssertAndAdvance StatementExpression MethodInvocation MemberReference node add	0
MethodDeclaration Modifier public ReferenceType List getNodes IfStatement BinaryOperation != MethodInvocation getGraphModel Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation getNodes getGraphModel ReturnStatement SuperMethodInvocation getNodes	0
MethodDeclaration Modifier public BasicType boolean isAAcceptEventAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AcceptEventAction	0
MethodDeclaration Modifier private doAdd LocalVariableDeclaration ReferenceType Designer VariableDeclarator designer MethodInvocation Designer theDesigner LocalVariableDeclaration ReferenceType String VariableDeclarator headline MethodInvocation headLineTextField getText LocalVariableDeclaration BasicType int VariableDeclarator priority MemberReference ToDoItem HIGH_PRIORITY SwitchStatement MethodInvocation priorityComboBox getSelectedIndex SwitchStatementCase Literal 0 StatementExpression Assignment MemberReference priority MemberReference ToDoItem HIGH_PRIORITY = BreakStatement SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference priority MemberReference ToDoItem MED_PRIORITY = BreakStatement SwitchStatementCase Literal 2 StatementExpression Assignment MemberReference priority MemberReference ToDoItem LOW_PRIORITY = BreakStatement LocalVariableDeclaration ReferenceType String VariableDeclarator desc MethodInvocation descriptionTextArea getText LocalVariableDeclaration ReferenceType String VariableDeclarator moreInfoURL MethodInvocation moreinfoTextField getText LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffenders ClassCreator ReferenceType ListSet ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation offenderList MethodInvocation getSize getModel MemberReference ++ i BlockStatement StatementExpression MethodInvocation newOffenders MethodInvocation offenderList MethodInvocation MemberReference i getElementAt getModel add LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item ClassCreator ReferenceType UMLToDoItem MemberReference designer MemberReference headline MemberReference priority MemberReference desc MemberReference moreInfoURL MemberReference newOffenders StatementExpression MethodInvocation designer MethodInvocation MemberReference item addElement getToDoList StatementExpression MethodInvocation Designer MemberReference Designer MODEL_TODOITEM_ADDED Literal null MemberReference item firePropertyChange	1
MethodDeclaration Modifier public setClassifiers FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection classifiers StatementExpression MethodInvocation impl MemberReference handle MemberReference classifiers setClassifiers	0
MethodDeclaration Modifier protected ReferenceType Action getActionModel IfStatement BinaryOperation == MemberReference actionModel Literal null BlockStatement StatementExpression Assignment MemberReference actionModel MethodInvocation MethodInvocation Model MethodInvocation getModel getMetaTypes Literal "Model" makeCreateNodeAction = ReturnStatement MemberReference actionModel	0
MethodDeclaration Modifier protected ReferenceType String getText LocalVariableDeclaration ReferenceType String VariableDeclarator text Literal "" IfStatement MethodInvocation Model MethodInvocation MethodInvocation getSource isACallEvent getFacade BlockStatement StatementExpression Assignment MemberReference text MethodInvocation Model MethodInvocation MethodInvocation getSource getName getFacade = IfStatement MethodInvocation Model MethodInvocation MethodInvocation getSource isAChangeEvent getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator changeExpr MethodInvocation Model MethodInvocation MethodInvocation getSource getFacade IfStatement BinaryOperation != MemberReference changeExpr Literal null BlockStatement StatementExpression Assignment MemberReference text MethodInvocation Model MethodInvocation MemberReference changeExpr getBody = IfStatement MethodInvocation Model MethodInvocation MethodInvocation getSource getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator timeExpr MethodInvocation Model MethodInvocation MethodInvocation getSource getWhen getFacade IfStatement BinaryOperation != MemberReference timeExpr Literal null BlockStatement StatementExpression Assignment MemberReference text MethodInvocation Model MethodInvocation MemberReference timeExpr getBody = IfStatement MethodInvocation Model MethodInvocation MethodInvocation getSource getFacade BlockStatement StatementExpression Assignment MemberReference text MethodInvocation Model MethodInvocation MethodInvocation getSource getName getFacade = ReturnStatement MemberReference text	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation e getSource IfStatement BinaryOperation == MemberReference src MemberReference addStButton BlockStatement StatementExpression MethodInvocation doAddStereotype IfStatement BinaryOperation == MemberReference src MemberReference removeStButton BlockStatement StatementExpression MethodInvocation doRemoveStereotype	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object param FormalParameter ReferenceType String isConst StatementExpression MethodInvocation MemberReference MemberReference MemberReference param MemberReference isConst applyTaggedValue	0
MethodDeclaration Modifier protected fireConstraintDataChanged FormalParameter BasicType int nIdx FormalParameter ReferenceType Object mcOld FormalParameter ReferenceType Object mcNew LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation theMEllListeners getListenerList LocalVariableDeclaration ReferenceType ConstraintChangeEvent VariableDeclarator cce Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType ConstraintChangeListener BlockStatement IfStatement BinaryOperation == MemberReference cce Literal null BlockStatement StatementExpression Assignment MemberReference cce ClassCreator ReferenceType ConstraintChangeEvent This MemberReference nIdx ClassCreator ReferenceType CR MemberReference mcOld MemberReference nIdx ClassCreator ReferenceType CR MemberReference mcNew MemberReference nIdx = StatementExpression Cast ReferenceType ConstraintChangeListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference BASE instructions	0
MethodDeclaration ReferenceType DiagramElement createBorder FormalParameter ReferenceType Rectangle rect FormalParameter ReferenceType Color lineColor FormalParameter ReferenceType Color fillColor ReturnStatement ClassCreator ReferenceType MemberReference rect x MemberReference rect y MemberReference rect width MemberReference rect height MemberReference lineColor MemberReference fillColor	0
MethodDeclaration Modifier private ReferenceType Object findOrCreateGeneralization FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child LocalVariableDeclaration ReferenceType Object VariableDeclarator generalization MethodInvocation Model MethodInvocation MemberReference child MemberReference parent getGeneralization getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype Literal null IfStatement BinaryOperation == MemberReference generalization Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference generalization MethodInvocation MethodInvocation MethodInvocation MethodInvocation getGeneralization getMetaTypes MemberReference child Literal null MemberReference parent Literal null Literal null Literal null buildConnection getUmlFactory = CatchClause CatchClauseParameter IllegalModelElementConnectionException e StatementExpression MethodInvocation LOG Literal "Exception while creating generalization." MemberReference e error ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereotypes MethodInvocation MethodInvocation MemberReference generalization getStereotypes getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator aStereotype MemberReference stereotypes BlockStatement IfStatement MethodInvocation MethodInvocation MethodInvocation MemberReference aStereotype getName getFacade equals BlockStatement StatementExpression Assignment MemberReference stereotype MemberReference aStereotype = AssertStatement BinaryOperation != MemberReference generalization Literal null IfStatement BinaryOperation == MemberReference stereotype Literal null BlockStatement StatementExpression Assignment MemberReference stereotype MethodInvocation profile getCppGeneralizationStereotype = AssertStatement BinaryOperation != MemberReference stereotype Literal null StatementExpression MethodInvocation MethodInvocation MemberReference generalization MemberReference stereotype addStereotype getCoreHelper ReturnStatement MemberReference generalization	1
MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text StatementExpression MethodInvocation MemberReference modelElement MemberReference text parseExtensionPointFig	1
MethodDeclaration Modifier public final external_declaration RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_namespace BlockStatement StatementExpression MethodInvocation decl_namespace BreakStatement SwitchStatementCase SEMICOLON BlockStatement StatementExpression MethodInvocation MemberReference SEMICOLON match BreakStatement SwitchStatementCase LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched7 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m7 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched7 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_template match StatementExpression MethodInvocation MemberReference LESSTHAN match StatementExpression MethodInvocation MemberReference GREATERTHAN match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched7 Literal false = StatementExpression MethodInvocation MemberReference _m7 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched7 BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_template match StatementExpression MethodInvocation MemberReference LESSTHAN match StatementExpression MethodInvocation MemberReference GREATERTHAN match StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched10 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m10 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched10 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_typedef BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_typedef match BreakStatement SwitchStatementCase LITERAL_class LITERAL_struct LITERAL_union BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation class_head CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched10 Literal false = StatementExpression MethodInvocation MemberReference _m10 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched10 BlockStatement StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched12 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m12 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched12 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation class_head CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched12 Literal false = StatementExpression MethodInvocation MemberReference _m12 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched12 BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched15 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_enum BinaryOperation || BinaryOperation == MethodInvocation Literal 2 LA MemberReference ID BinaryOperation == MethodInvocation Literal 2 LA MemberReference LCURLY BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m15 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched15 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_enum match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID BlockStatement StatementExpression MethodInvocation MemberReference ID match BreakStatement SwitchStatementCase LCURLY BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched15 Literal false = StatementExpression MethodInvocation MemberReference _m15 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched15 BlockStatement StatementExpression MethodInvocation enum_specifier BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation init_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched19 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_3 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_4 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m19 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched19 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_template BlockStatement StatementExpression MethodInvocation template_head BreakStatement SwitchStatementCase ID LITERAL_inline LITERAL__inline LITERAL___inline LITERAL_virtual TILDE SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation dtor_head StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched19 Literal false = StatementExpression MethodInvocation MemberReference _m19 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched19 BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_template BlockStatement StatementExpression MethodInvocation template_head BreakStatement SwitchStatementCase ID LITERAL_inline LITERAL__inline LITERAL___inline LITERAL_virtual TILDE SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation dtor_head StatementExpression MethodInvocation dtor_body BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched23 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_5 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_6 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m23 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched23 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement BlockStatement IfStatement BinaryOperation && Literal true Literal true BlockStatement StatementExpression MethodInvocation ctor_decl_spec BlockStatement IfStatement MethodInvocation ! MemberReference CPPvariables QI_CTOR Literal 0 qualifiedItemIsOneOf ThrowStatement ClassCreator ReferenceType SemanticException Literal "qualifiedItemIsOneOf(CPPvariables.QI_CTOR,0)" CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched23 Literal false = StatementExpression MethodInvocation MemberReference _m23 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched23 BlockStatement StatementExpression MethodInvocation ctor_definition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched26 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_7 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_8 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m26 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched26 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_inline match BreakStatement SwitchStatementCase ID OPERATOR SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation scope_override StatementExpression MethodInvocation conversion_function_decl_or_def CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched26 Literal false = StatementExpression MethodInvocation MemberReference _m26 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched26 BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_inline BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_inline match BreakStatement SwitchStatementCase ID OPERATOR SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression Assignment MemberReference s MethodInvocation scope_override = StatementExpression MethodInvocation conversion_function_decl_or_def BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched29 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m29 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched29 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched29 Literal false = StatementExpression MethodInvocation MemberReference _m29 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched29 BlockStatement StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched31 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_9 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_10 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m31 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched31 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched31 Literal false = StatementExpression MethodInvocation MemberReference _m31 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched31 BlockStatement IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m beginFunctionDefinition StatementExpression MethodInvocation function_definition IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m endFunctionDefinition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched33 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_9 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_10 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m33 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched33 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation declaration CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched33 Literal false = StatementExpression MethodInvocation MemberReference _m33 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched33 BlockStatement StatementExpression MethodInvocation function_definition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched36 Literal false IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m36 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched36 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation declaration_specifiers BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation init_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched36 Literal false = StatementExpression MethodInvocation MemberReference _m36 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched36 BlockStatement StatementExpression MethodInvocation template_head StatementExpression MethodInvocation declaration_specifiers BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall LPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation init_declarator_list BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_template BinaryOperation == MethodInvocation Literal 2 LA MemberReference LESSTHAN BlockStatement StatementExpression MethodInvocation template_head BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched40 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_5 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_6 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m40 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched40 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation ctor_decl_spec IfStatement MethodInvocation ! MemberReference CPPvariables QI_CTOR Literal 0 qualifiedItemIsOneOf ThrowStatement ClassCreator ReferenceType SemanticException Literal "qualifiedItemIsOneOf(CPPvariables.QI_CTOR,0)" CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched40 Literal false = StatementExpression MethodInvocation MemberReference _m40 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched40 BlockStatement StatementExpression MethodInvocation ctor_definition BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched42 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m42 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched42 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference SEMICOLON match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched42 Literal false = StatementExpression MethodInvocation MemberReference _m42 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched42 BlockStatement StatementExpression MethodInvocation declaration BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched44 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_9 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_10 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m44 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched44 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration_specifiers StatementExpression MethodInvocation function_declarator StatementExpression MethodInvocation MemberReference LCURLY match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched44 Literal false = StatementExpression MethodInvocation MemberReference _m44 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched44 BlockStatement StatementExpression MethodInvocation function_definition BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation declaration BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int buttonCode ReturnStatement MethodInvocation Model MethodInvocation getCommonBehaviorFactory	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType GUISettingsTabInterface StatementExpression MethodInvocation result ClassCreator ReferenceType SettingsTabDiagramAppearance MemberReference Argo add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType getDefaults ReturnStatement ClassCreator ReferenceType MethodDeclaration Modifier public ReferenceType Object getDefaultType FormalParameter ReferenceType Object metaType IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getOperation getMetaTypes MemberReference metaType BlockStatement IfStatement BinaryOperation != MethodInvocation profileConfiguration getDefaultTypeStrategy Literal null BlockStatement ReturnStatement MethodInvocation profileConfiguration MethodInvocation getDefaultReturnType getDefaultTypeStrategy IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getAttribute getMetaTypes MemberReference metaType BlockStatement IfStatement BinaryOperation != MethodInvocation profileConfiguration getDefaultTypeStrategy Literal null BlockStatement ReturnStatement MethodInvocation profileConfiguration MethodInvocation getDefaultAttributeType getDefaultTypeStrategy IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getParameter getMetaTypes MemberReference metaType BlockStatement IfStatement BinaryOperation != MethodInvocation profileConfiguration getDefaultTypeStrategy Literal null BlockStatement ReturnStatement MethodInvocation profileConfiguration MethodInvocation getDefaultTypeStrategy ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object metaType IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getOperation getMetaTypes MemberReference metaType BlockStatement ReturnStatement Literal "newOperation" IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getAttribute getMetaTypes MemberReference metaType BlockStatement ReturnStatement Literal IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getEnumerationLiteral getMetaTypes MemberReference metaType BlockStatement ReturnStatement Literal "newLiteral" ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Object getSubsystemInstance ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier private ReferenceType String generateStateBody FormalParameter ReferenceType Object state StatementExpression MethodInvocation LOG Literal "GeneratorCSharp: generating state body" debug LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator entry MethodInvocation Model MethodInvocation MemberReference state getEntry getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator exit MethodInvocation Model MethodInvocation MemberReference state getExit getFacade IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator entryStr MethodInvocation MemberReference entry generateAction IfStatement BinaryOperation > MethodInvocation entryStr length Literal 0 BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + Literal "entry / " MemberReference entryStr += IfStatement BinaryOperation != MemberReference exit Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator exitStr MethodInvocation MemberReference exit generateAction IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement StatementExpression Assignment MemberReference s Literal "\n" += IfStatement BinaryOperation > MethodInvocation exitStr length Literal 0 BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + Literal "exit / " MemberReference exitStr += LocalVariableDeclaration ReferenceType Collection VariableDeclarator trans MethodInvocation Model MethodInvocation MemberReference state getInternalTransitions getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator tran MemberReference trans BlockStatement IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement StatementExpression Assignment MemberReference s Literal "\n" += StatementExpression Assignment MemberReference s MethodInvocation MemberReference tran generateTransition += ReturnStatement MemberReference s	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter BlockStatement LocalVariableDeclaration ReferenceType Parameter VariableDeclarator parameter Cast ReferenceType Parameter MemberReference handle ReturnStatement MethodInvocation ParameterDirectionKindEnum.PDK_RETURN MethodInvocation parameter getKind equals CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Goal getSupportedGoals ReturnStatement MemberReference unspecifiedGoal	0
MethodDeclaration Modifier public static ReferenceType getTheInstance ReturnStatement MemberReference theInstance	0
MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text TryStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference text parseRole CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoHelpEvent MemberReference ArgoEventTypes HELP_CHANGED This MethodInvocation Translator MemberReference msg MemberReference args	0
MethodDeclaration Modifier protected ReferenceType ListSet computeOffenders FormalParameter ReferenceType Object dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs ClassCreator ReferenceType ListSet MemberReference dm StatementExpression MethodInvocation offs MethodInvocation Model MethodInvocation MemberReference dm getOwner getFacade add ReturnStatement MemberReference offs	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference MemberReference b =	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object namespace IfStatement MethodInvocation Model MethodInvocation MemberReference namespace isANamespace getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator returnList ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Project VariableDeclarator proj MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation proj getDiagramList BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference diagram ReferenceType UMLStateDiagram BinaryOperation instanceof MemberReference diagram ReferenceType UMLActivityDiagram BinaryOperation instanceof MemberReference diagram ReferenceType SequenceDiagram BlockStatement ContinueStatement IfStatement BinaryOperation == MethodInvocation diagram getNamespace MemberReference namespace BlockStatement StatementExpression MethodInvocation returnList MemberReference diagram add ReturnStatement MemberReference returnList ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator o Literal null IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression Assignment MemberReference o MethodInvocation Model MethodInvocation MethodInvocation getTarget getType getFacade = ReturnStatement MemberReference o	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation head getLineColor	0
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase DESCRIPTION ReturnStatement Literal "Java notation and code generator" SwitchStatementCase AUTHOR ReturnStatement MemberReference JavaModuleGlobals MODULE_AUTHOR SwitchStatementCase ReturnStatement MemberReference JavaModuleGlobals MODULE_VERSION SwitchStatementCase DOWNLOADSITE ReturnStatement MemberReference JavaModuleGlobals MODULE_DOWNLOADSITE SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public setReferenceState FormalParameter ReferenceType Object o FormalParameter ReferenceType String referenced IfStatement BinaryOperation instanceof MemberReference o ReferenceType StubState BlockStatement StatementExpression Cast ReferenceType StubState MemberReference o ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference o	0
MethodDeclaration Modifier protected ReferenceType List TypeArgument ReferenceType File getFileList FormalParameter ReferenceType ProgressMonitor monitor LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType File VariableDeclarator files MethodInvocation Arrays MethodInvocation getSelectedFiles asList IfStatement BinaryOperation == MethodInvocation files size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file MethodInvocation files Literal 0 get LocalVariableDeclaration ReferenceType SuffixFilter VariableDeclarator suffixFilters ArrayInitializer MemberReference selectedSuffixFilter IfStatement BinaryOperation == MemberReference ArraySelector Literal 0 suffixFilters Literal null BlockStatement StatementExpression Assignment MemberReference suffixFilters MethodInvocation currentModule getSuffixFilters = StatementExpression Assignment MemberReference files MethodInvocation MemberReference file MethodInvocation isDescendSelected MemberReference suffixFilters MemberReference monitor getList = IfStatement MethodInvocation file isDirectory BlockStatement StatementExpression MethodInvocation MethodInvocation file getAbsolutePath setSrcPath BlockStatement StatementExpression MethodInvocation Literal null setSrcPath IfStatement MethodInvocation isChangedOnlySelected BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation files size Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator f MethodInvocation files MemberReference i get LocalVariableDeclaration ReferenceType String VariableDeclarator fn MethodInvocation f getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator lm MethodInvocation String MethodInvocation f lastModified valueOf IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement IfStatement MethodInvocation lm MethodInvocation Model MethodInvocation MemberReference model MemberReference fn getTaggedValueValue getFacade equals BlockStatement StatementExpression MethodInvocation files MemberReference i remove ReturnStatement MemberReference files	1
MethodDeclaration Modifier public parseXmiExtensions FormalParameter ReferenceType Project project OpenException IfStatement BinaryOperation != MemberReference argoString Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Parsing argoString " MethodInvocation argoString length info LocalVariableDeclaration ReferenceType StringReader VariableDeclarator inputStream ClassCreator ReferenceType StringReader MemberReference argoString LocalVariableDeclaration ReferenceType ArgoParser VariableDeclarator parser ClassCreator ReferenceType ArgoParser TryStatement StatementExpression MethodInvocation parser MemberReference project MemberReference inputStream readProject CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType OpenException Literal "Exception caught" MemberReference e BlockStatement StatementExpression MethodInvocation project ClassCreator ReferenceType ProjectMemberTodoList Literal "" MemberReference project addMember ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator pgml MemberReference pgmlStrings BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Parsing pgml " MethodInvocation pgml length info LocalVariableDeclaration ReferenceType InputStream VariableDeclarator inputStream ClassCreator ReferenceType ByteArrayInputStream MethodInvocation pgml getBytes LocalVariableDeclaration ReferenceType MemberFilePersister VariableDeclarator persister MethodInvocation PersistenceManager MethodInvocation getInstance StatementExpression MethodInvocation persister MemberReference project MemberReference inputStream load IfStatement BinaryOperation != MemberReference todoString Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Parsing todoString " MethodInvocation todoString length info LocalVariableDeclaration ReferenceType InputStream VariableDeclarator inputStream ClassCreator ReferenceType ByteArrayInputStream MethodInvocation todoString getBytes LocalVariableDeclaration ReferenceType MemberFilePersister VariableDeclarator persister Literal null StatementExpression Assignment MemberReference persister ClassCreator ReferenceType TodoListMemberFilePersister = StatementExpression MethodInvocation persister MemberReference project MemberReference inputStream load BlockStatement StatementExpression MethodInvocation project ClassCreator ReferenceType ProjectMemberTodoList Literal "" MemberReference project addMember	1
MethodDeclaration Modifier private addRootNamesapce FormalParameter ReferenceType String name IfStatement BinaryOperation != MethodInvocation ele BinaryOperation + MemberReference TAG_NS MemberReference name get Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator pk MethodInvocation Model MethodInvocation MemberReference name getModelManagementFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference pk Literal true setRoot getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference pk MemberReference model setNamespace getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference model MemberReference pk addOwnedElement getCoreHelper StatementExpression MethodInvocation ele BinaryOperation + MemberReference TAG_NS MemberReference name MemberReference pk put	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference target setTarget	0
MethodDeclaration Modifier private BasicType int illegalArgumentInt FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg illegalArgument ReturnStatement Literal 0	0
MethodDeclaration Modifier protected remove FormalParameter ReferenceType Object obj StatementExpression MethodInvocation MemberReference obj removeTarget	0
MethodDeclaration Modifier public BasicType boolean removeAll FormalParameter ReferenceType Collection TypeArgument ? arg0 ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Property getAssociationEnds FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of Classifier" LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Property VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Property ForStatement EnhancedForControl VariableDeclaration ReferenceType Property VariableDeclarator p Cast ReferenceType Classifier MemberReference handle BlockStatement IfStatement BinaryOperation != MethodInvocation p getAssociation Literal null BlockStatement StatementExpression MethodInvocation result MemberReference p add ForStatement EnhancedForControl VariableDeclaration ReferenceType Association VariableDeclarator a Cast ReferenceType Classifier MemberReference handle BlockStatement LocalVariableDeclaration ReferenceType Property VariableDeclarator p MethodInvocation MemberReference handle MemberReference a IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression MethodInvocation result MemberReference p add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType WizNavigable	0
MethodDeclaration Modifier public BasicType boolean isAInteraction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent	0
MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType Object VariableDeclarator classCls MethodInvocation Model MethodInvocation getUMLClass getMetaTypes LocalVariableDeclaration ReferenceType Object VariableDeclarator interfaceCls MethodInvocation Model MethodInvocation getInterface getMetaTypes StatementExpression MethodInvocation MemberReference crMultiInherit MemberReference classCls register StatementExpression MethodInvocation MemberReference crMultiRealization MemberReference interfaceCls register	0
MethodDeclaration Modifier public ReferenceType Iterator getTags ReturnStatement MethodInvocation llsTags iterator	0
MethodDeclaration Modifier private static ReferenceType NotationSettings getNotationSettings LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType NotationSettings VariableDeclarator settings IfStatement BinaryOperation != MemberReference p Literal null BlockStatement StatementExpression Assignment MemberReference settings MethodInvocation p MethodInvocation getNotationSettings getProjectSettings = BlockStatement StatementExpression Assignment MemberReference settings MethodInvocation NotationSettings getDefaultSettings = ReturnStatement MemberReference settings	0
MethodDeclaration Modifier public keyTyped FormalParameter ReferenceType KeyEvent ke StatementExpression MethodInvocation ke consume	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation resultsLabel MethodInvocation Translator Literal localize setText StatementExpression MethodInvocation results clear StatementExpression MethodInvocation MemberReference root Literal null depthFirst StatementExpression MethodInvocation MemberReference results MemberReference diagrams setResults	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object element IfStatement BinaryOperation instanceof MemberReference element ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "element must be instance of UML2 Class" LocalVariableDeclaration Modifier final ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class VariableDeclarator theClass Cast ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class MemberReference element ReturnStatement MethodInvocation theClass	0
MethodDeclaration Modifier public ReferenceType String getTableName ReturnStatement MethodInvocation table getName	0
MethodDeclaration Modifier private ReferenceType Object getTarget ReturnStatement MethodInvocation multiplicityComboBox getTarget	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget Literal false setTarget StatementExpression MethodInvocation MemberReference e	0
MethodDeclaration Modifier public setNotationSettings FormalParameter ReferenceType NotationSettings notationSettings StatementExpression Assignment This MemberReference notationSettings MemberReference notationSettings =	0
MethodDeclaration Modifier private clearActivations ForStatement EnhancedForControl VariableDeclaration ReferenceType FigActivation VariableDeclarator oldActivation MemberReference activations BlockStatement StatementExpression MethodInvocation MemberReference oldActivation removeFig ForStatement EnhancedForControl VariableDeclaration ReferenceType FigActivation VariableDeclarator oldActivation MemberReference stackedActivations BlockStatement StatementExpression MethodInvocation MemberReference oldActivation removeFig StatementExpression MethodInvocation activations clear StatementExpression MethodInvocation stackedActivations clear	0
MethodDeclaration Modifier public BasicType boolean setFilename FormalParameter ReferenceType String sBlockFilename IfStatement BinaryOperation != MemberReference objDocBlock Literal null BlockStatement IfStatement BinaryOperation == MemberReference iDocBlockType MemberReference BLOCK_TYPE_FILE BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference sBlockFilename Literal null BinaryOperation > MethodInvocation sBlockFilename MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference sFilename MethodInvocation sBlockFilename trim = StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Set filename " MemberReference sFilename Literal " successfull." info TryStatement StatementExpression MethodInvocation MemberReference objModelElement updateFile CatchClause CatchClauseParameter Exception exp StatementExpression MethodInvocation LOG BinaryOperation + Literal "Update file level DocBlock FAILED: " MethodInvocation exp getMessage warn ReturnStatement Literal true ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "can not be empty" StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "method setFilename is only available for file " Literal "level DocBlock, not for type " MemberReference iDocBlockType error ReturnStatement Literal false ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Font getFont FormalParameter BasicType int IfStatement BinaryOperation != BinaryOperation & MemberReference MemberReference Font ITALIC Literal 0 BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference MemberReference Font BOLD Literal 0 BlockStatement ReturnStatement MethodInvocation getFontBoldItalic BlockStatement ReturnStatement MethodInvocation getFontItalic BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference MemberReference Font BOLD Literal 0 BlockStatement ReturnStatement MethodInvocation getFontBold BlockStatement ReturnStatement MethodInvocation getFontPlain	0
MethodDeclaration Modifier public removeGoal FormalParameter ReferenceType Goal g StatementExpression MethodInvocation goals MemberReference g remove	0
MethodDeclaration Modifier public Annotation Override BasicType boolean add FormalParameter ReferenceType E o IfStatement MemberReference BlockStatement IfStatement MethodInvocation MemberReference o BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference o ReferenceType JMenu BlockStatement StatementExpression Assignment MemberReference o Cast ReferenceType E MethodInvocation Cast ReferenceType JMenu MemberReference o = IfStatement BinaryOperation != MemberReference o Literal null BlockStatement ReturnStatement SuperMethodInvocation MemberReference o add BlockStatement ReturnStatement Literal false	0
MethodDeclaration Modifier public getText FormalParameter BasicType int offset FormalParameter BasicType int length FormalParameter ReferenceType Segment BadLocationException StatementExpression MethodInvocation document MemberReference offset MemberReference length MemberReference getText	0
MethodDeclaration Modifier protected handleAuthorEmail FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator authoremail MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation project MemberReference authoremail setAuthoremail	0
MethodDeclaration Modifier private ReferenceType String getId ReturnStatement MethodInvocation label getText	0
MethodDeclaration Modifier private doRemoveStereotype LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation selectedList getSelectedValue LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement BinaryOperation == MemberReference modelElement Literal null BlockStatement ReturnStatement IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes MethodInvocation MemberReference stereotype contains getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference stereotype removeStereotype getCoreHelper StatementExpression MethodInvocation ProjectManager MethodInvocation updateRoots getManager	0
MethodDeclaration Modifier public addParameter FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter StatementExpression MethodInvocation MemberReference handle MemberReference CommandParameter NO_INDEX MemberReference parameter addParameter	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setLineColor	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object from FormalParameter ReferenceType Object to IfStatement MemberReference ! BlockStatement ReturnStatement Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference from getName getFacade MethodInvocation Model MethodInvocation MemberReference to getName getFacade	0
MethodDeclaration Modifier public setItemUID FormalParameter ReferenceType ItemUID newId StatementExpression Assignment MemberReference MemberReference newId =	0
MethodDeclaration Modifier protected ReferenceType File getSaveDir FormalParameter ReferenceType Project p LocalVariableDeclaration ReferenceType JFileChooser VariableDeclarator chooser MethodInvocation MemberReference p LocalVariableDeclaration ReferenceType String VariableDeclarator fn MethodInvocation Configuration MemberReference SaveGraphicsManager KEY_SAVEALL_GRAPHICS_PATH getString IfStatement BinaryOperation > MethodInvocation fn length Literal 0 BlockStatement StatementExpression MethodInvocation chooser ClassCreator ReferenceType File MemberReference fn setSelectedFile LocalVariableDeclaration BasicType int VariableDeclarator retval MethodInvocation chooser MethodInvocation ArgoFrame getFrame showSaveDialog IfStatement BinaryOperation == MemberReference retval MemberReference JFileChooser APPROVE_OPTION BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator theFile MethodInvocation chooser getSelectedFile LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation theFile getPath StatementExpression MethodInvocation Configuration MemberReference SaveGraphicsManager KEY_SAVEALL_GRAPHICS_PATH MemberReference path setString ReturnStatement MemberReference theFile ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object context ReturnStatement BinaryOperation instanceof MemberReference context ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType	1
MethodDeclaration Modifier public FormalParameter ReferenceType DocumentEvent e IfStatement BinaryOperation && BinaryOperation == MethodInvocation e getDocument MethodInvocation getDocument BinaryOperation != MemberReference target Literal null BlockStatement StatementExpression MethodInvocation target MethodInvocation getText setText StatementExpression MethodInvocation target damage	1
MethodDeclaration Modifier public BasicType boolean isCellEditable FormalParameter BasicType int rowIndex FormalParameter BasicType int columnIndex ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation < MemberReference rowIndex MethodInvocation getRowCount BinaryOperation >= MemberReference columnIndex Literal 0 BinaryOperation <= MemberReference columnIndex Literal 1	1
MethodDeclaration Modifier static protected BasicType int FormalParameter BasicType char symbol FormalParameter BasicType char openBracket FormalParameter BasicType char FormalParameter ReferenceType String text LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 ForStatement EnhancedForControl VariableDeclaration BasicType char VariableDeclarator c MethodInvocation text toCharArray BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference c MemberReference symbol BinaryOperation == MemberReference count Literal 0 BlockStatement BreakStatement IfStatement BinaryOperation == MemberReference c MemberReference openBracket BlockStatement StatementExpression MemberReference ++ count IfStatement BinaryOperation == MemberReference c MemberReference BlockStatement StatementExpression MemberReference -- count StatementExpression MemberReference ++ index ReturnStatement MemberReference index	0
MethodDeclaration Modifier private ReferenceType DeploymentDiagramGraphModel createGraphModel IfStatement BinaryOperation instanceof MethodInvocation getGraphModel ReferenceType DeploymentDiagramGraphModel BlockStatement ReturnStatement Cast ReferenceType DeploymentDiagramGraphModel MethodInvocation getGraphModel BlockStatement ReturnStatement ClassCreator ReferenceType DeploymentDiagramGraphModel	1
MethodDeclaration Modifier public BasicType boolean isAParameter FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter	0
MethodDeclaration Modifier public ReferenceType CollaborationsFactory getCollaborationsFactory IfStatement BinaryOperation == MemberReference theCollaborationsFactory Literal null BlockStatement StatementExpression Assignment MemberReference theCollaborationsFactory ClassCreator ReferenceType CollaborationsFactoryMDRImpl This = ReturnStatement MemberReference theCollaborationsFactory	0
MethodDeclaration Modifier public ReferenceType String strip FormalParameter ReferenceType String s LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator res ClassCreator ReferenceType StringBuffer MethodInvocation s length LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation s length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation s MemberReference i charAt IfStatement MethodInvocation Character MemberReference c isLetterOrDigit BlockStatement StatementExpression MethodInvocation res MethodInvocation Character MemberReference c toLowerCase append IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference c Literal ']' BinaryOperation > MemberReference i Literal 1 BinaryOperation == MethodInvocation s BinaryOperation - MemberReference i Literal 1 charAt Literal '[' BlockStatement StatementExpression MethodInvocation res Literal "[]" append ReturnStatement MethodInvocation res toString	1
MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation cover getLineColor	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator newNode MethodInvocation Model MethodInvocation MethodInvocation Literal "className" buildNode getUmlFactory ReturnStatement MemberReference newNode	1
MethodDeclaration Modifier private static BasicType int findMsgOrderBreak FormalParameter ReferenceType String s LocalVariableDeclaration BasicType int VariableDeclarator i VariableDeclarator t StatementExpression Assignment MemberReference t MethodInvocation s length = ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference t MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation s MemberReference i charAt IfStatement BinaryOperation || BinaryOperation < MemberReference c Literal '0' BinaryOperation > MemberReference c Literal '9' BlockStatement BreakStatement ReturnStatement MemberReference i	1
MethodDeclaration Modifier public Annotation Override ReferenceType String getExtension ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType Dependency createDependency ReturnStatement MethodInvocation createDependency	0
MethodDeclaration Modifier public damage IfStatement BinaryOperation && BinaryOperation != MethodInvocation getLayer Literal null BinaryOperation != MethodInvocation MethodInvocation getEditors getLayer Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation getEditors MethodInvocation iterator getLayer WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Cast ReferenceType Editor MethodInvocation it next	0
MethodDeclaration Modifier public addNodeRelatedEdges FormalParameter ReferenceType Object node IfStatement MethodInvocation Model MethodInvocation MemberReference node isANamedElement getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator specs ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference node getClientDependencies getFacade StatementExpression MethodInvocation specs MethodInvocation Model MethodInvocation MemberReference node getSupplierDependencies getFacade addAll LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation specs iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator dependency MethodInvocation iter next IfStatement MethodInvocation MemberReference dependency canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference dependency addEdge LocalVariableDeclaration ReferenceType Collection VariableDeclarator cmnt ClassCreator ReferenceType ArrayList IfStatement MethodInvocation Model MethodInvocation MemberReference node isAComment getFacade BlockStatement StatementExpression MethodInvocation cmnt MethodInvocation Model MethodInvocation MemberReference node getAnnotatedElements getFacade addAll IfStatement MethodInvocation Model MethodInvocation MemberReference node isAModelElement getFacade BlockStatement StatementExpression MethodInvocation cmnt MethodInvocation Model MethodInvocation MemberReference node getComments getFacade addAll LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation cmnt iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation iter next LocalVariableDeclaration ReferenceType CommentEdge VariableDeclarator ce ClassCreator ReferenceType CommentEdge MemberReference node MemberReference ae IfStatement MethodInvocation MemberReference ce canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference ce addEdge	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ev StatementExpression SuperMethodInvocation MemberReference ev actionPerformed IfStatement BinaryOperation == MethodInvocation ev getSource MethodInvocation getOkButton BlockStatement StatementExpression MethodInvocation handleSave IfStatement BinaryOperation == MethodInvocation ev getSource MethodInvocation BlockStatement StatementExpression MethodInvocation handleCancel	0
MethodDeclaration Modifier private ReferenceType TableDefinition getTableDefinition FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType TableDefinition VariableDeclarator tableDefinition ClassCreator ReferenceType TableDefinition StatementExpression MethodInvocation tableDefinition MethodInvocation Model MethodInvocation MemberReference element getName getFacade setName ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator attribute MethodInvocation Model MethodInvocation MemberReference element getAttributes getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference attribute getName getFacade LocalVariableDeclaration ReferenceType ColumnDefinition VariableDeclarator cd ClassCreator ReferenceType ColumnDefinition StatementExpression MethodInvocation cd MemberReference name setName LocalVariableDeclaration ReferenceType Object VariableDeclarator domain MethodInvocation Model MethodInvocation MemberReference attribute getType getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator domainName MethodInvocation Model MethodInvocation MemberReference domain getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator datatype MethodInvocation domainMapper MethodInvocation getClass MemberReference domainName StatementExpression MethodInvocation cd MemberReference datatype setDatatype IfStatement MethodInvocation Utils MemberReference attribute isNull BlockStatement StatementExpression MethodInvocation cd MemberReference Boolean TRUE setNullable IfStatement MethodInvocation Utils MemberReference attribute isNotNull BlockStatement StatementExpression MethodInvocation cd MemberReference Boolean FALSE setNullable BlockStatement StatementExpression MethodInvocation cd Literal null setNullable StatementExpression MethodInvocation tableDefinition MemberReference cd IfStatement MethodInvocation Utils MemberReference attribute BlockStatement StatementExpression MethodInvocation cd MemberReference Boolean FALSE setNullable StatementExpression MethodInvocation tableDefinition MemberReference name addPrimaryKeyField ReturnStatement MemberReference tableDefinition	0
MethodDeclaration Modifier public BasicType int getSelectedIndex ReturnStatement MemberReference selectedIndex	0
MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation classTable repaint	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object pack FormalParameter ReferenceType Collection imports IfStatement BinaryOperation instanceof MemberReference pack ReferenceType UmlPackage BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ElementImport VariableDeclarator currentImports Cast ReferenceType UmlPackage MemberReference pack LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ElementImport VariableDeclarator toRemove ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ElementImport LocalVariableDeclaration ReferenceType Collection VariableDeclarator toAdd ClassCreator ReferenceType ArrayList MemberReference imports ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType ElementImport VariableDeclarator ei MemberReference currentImports BlockStatement IfStatement MethodInvocation imports MethodInvocation ei getImportedElement contains BlockStatement StatementExpression MethodInvocation toAdd MethodInvocation ei getImportedElement remove BlockStatement StatementExpression MethodInvocation toRemove MemberReference ei add StatementExpression MethodInvocation currentImports MemberReference toRemove removeAll LocalVariableDeclaration ReferenceType Collection VariableDeclarator toAddEIs ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation toAdd iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MethodInvocation i next StatementExpression MethodInvocation toAddEIs MethodInvocation modelImpl MethodInvocation MemberReference pack MemberReference me getModelManagementFactory add StatementExpression MethodInvocation currentImports MemberReference toAddEIs addAll ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "There must be a and a ModelElement"	1
MethodDeclaration Modifier protected ReferenceType ColorUIResource ReturnStatement MemberReference	0
MethodDeclaration Modifier public setEnabled FormalParameter BasicType boolean enabled StatementExpression MethodInvocation theComboBox MemberReference enabled setEnabled StatementExpression MethodInvocation theComboBox MemberReference enabled	1
MethodDeclaration Modifier private static BasicType boolean isValidJavaClassName FormalParameter ReferenceType String name ReturnStatement Literal true	1
MethodDeclaration Modifier protected ReferenceType Action getActionPackage IfStatement BinaryOperation == MemberReference actionPackage Literal null BlockStatement StatementExpression Assignment MemberReference actionPackage MethodInvocation MethodInvocation Model MethodInvocation getPackage getMetaTypes Literal makeCreateNodeAction = ReturnStatement MemberReference actionPackage	0
MethodDeclaration Modifier protected removeProjectMemberDiagram FormalParameter ReferenceType ArgoDiagram d IfStatement BinaryOperation == MemberReference activeDiagram MemberReference d BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Deleting active diagram " MemberReference d debug LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator defaultDiagram Literal null IfStatement BinaryOperation == MethodInvocation diagrams size Literal 1 BlockStatement StatementExpression MethodInvocation LOG Literal "Deleting last diagram - creating new default diag" debug LocalVariableDeclaration ReferenceType Object VariableDeclarator projectRoot MethodInvocation getRoot IfStatement MethodInvocation ! Model MethodInvocation MemberReference projectRoot isRemoved getUmlFactory BlockStatement StatementExpression Assignment MemberReference defaultDiagram MethodInvocation DiagramFactory MethodInvocation MemberReference projectRoot createDefaultDiagram getInstance = StatementExpression MethodInvocation MemberReference defaultDiagram addMember BlockStatement StatementExpression Assignment MemberReference defaultDiagram MethodInvocation diagrams Literal 0 get = StatementExpression MethodInvocation LOG BinaryOperation + Literal "Candidate default diagram is " MemberReference defaultDiagram debug IfStatement BinaryOperation == MemberReference defaultDiagram MemberReference d BlockStatement StatementExpression Assignment MemberReference defaultDiagram MethodInvocation diagrams Literal 1 get = StatementExpression MethodInvocation LOG BinaryOperation + Literal "Switching default diagram to " MemberReference defaultDiagram debug StatementExpression Assignment MemberReference activeDiagram MemberReference defaultDiagram = StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference activeDiagram setTarget getInstance StatementExpression MethodInvocation LOG BinaryOperation + Literal "New active diagram is " MemberReference defaultDiagram debug StatementExpression MethodInvocation MemberReference d removeDiagram StatementExpression MethodInvocation members MemberReference d remove StatementExpression MethodInvocation d remove StatementExpression MethodInvocation Literal true setSaveEnabled	1
MethodDeclaration Modifier private ReferenceType Object buildReturnParameter FormalParameter ReferenceType Object operation FormalParameter ReferenceType Object classifier LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation MemberReference operation MemberReference classifier Literal "return" StatementExpression MethodInvocation Model MethodInvocation MemberReference parameter MethodInvocation Model MethodInvocation getReturnParameter getDirectionKind setKind getCoreHelper ReturnStatement MemberReference parameter	0
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MemberReference handle	0
MethodDeclaration Modifier public setActualArguments FormalParameter ReferenceType Object action FormalParameter ReferenceType List arguments TryStatement IfStatement BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement StatementExpression Cast ReferenceType Action MemberReference action StatementExpression Cast ReferenceType Action MemberReference action ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unrecognized object " MemberReference action Literal " or " MemberReference arguments	0
MethodDeclaration Modifier public Annotation Override BasicType boolean supports FormalParameter ReferenceType Goal g ForStatement EnhancedForControl VariableDeclaration ReferenceType Critic VariableDeclarator c MemberReference critics BlockStatement IfStatement MethodInvocation c MemberReference g supports BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier private endXtor IfStatement MethodInvocation ! ignore BlockStatement IfStatement MethodInvocation ! xtorModeler isIgnorable BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator poppedXtor MethodInvocation contextStack pop AssertStatement MethodInvocation xtorModeler MemberReference poppedXtor isTheXtor StatementExpression MethodInvocation xtorModeler finish StatementExpression Assignment MemberReference xtorModeler Literal null =	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator myChangeEvent MethodInvocation MethodInvocation getChangeEvent MethodInvocation getSmPackage StatementExpression SuperMethodInvocation MemberReference myChangeEvent ReturnStatement MemberReference myChangeEvent	0
MethodDeclaration Modifier public Annotation Override BasicType int hashCode ReturnStatement MethodInvocation MethodInvocation hashCode getDescription	0
MethodDeclaration Modifier public Annotation Override BasicType int hashCode IfStatement BinaryOperation == MemberReference critic Literal null BlockStatement ReturnStatement Literal 0 ReturnStatement MethodInvocation critic hashCode	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateMachine getFacade BlockStatement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType ArgoDiagram VariableDeclarator returnList ClassCreator ReferenceType HashSet TypeArgument ReferenceType ArgoDiagram LocalVariableDeclaration ReferenceType Project VariableDeclarator proj MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation proj getDiagramList BlockStatement IfStatement BinaryOperation instanceof MemberReference diagram ReferenceType UMLActivityDiagram BlockStatement LocalVariableDeclaration ReferenceType UMLActivityDiagram VariableDeclarator activityDiagram Cast ReferenceType UMLActivityDiagram MemberReference diagram LocalVariableDeclaration ReferenceType Object VariableDeclarator activityGraph MethodInvocation activityDiagram getStateMachine IfStatement BinaryOperation == MemberReference activityGraph MemberReference parent BlockStatement StatementExpression MethodInvocation returnList MemberReference activityDiagram add ContinueStatement IfStatement BinaryOperation instanceof MemberReference diagram ReferenceType UMLStateDiagram BlockStatement LocalVariableDeclaration ReferenceType UMLStateDiagram VariableDeclarator stateDiagram Cast ReferenceType UMLStateDiagram MemberReference diagram LocalVariableDeclaration ReferenceType Object VariableDeclarator stateMachine MethodInvocation stateDiagram getStateMachine IfStatement BinaryOperation == MemberReference stateMachine MemberReference parent BlockStatement StatementExpression MethodInvocation returnList MemberReference stateDiagram add ContinueStatement ReturnStatement MemberReference returnList ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation MemberReference e runGCActionPerformed	0
MethodDeclaration Modifier public removeStereotype FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereotype StatementExpression SuperMethodInvocation MemberReference modelElement MemberReference stereotype removeStereotype StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAClassifier getFacade BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getRepresentedClassifier getFacade MemberReference element	0
MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier static protected ReferenceType String convertFieldDescriptor FormalParameter ReferenceType List TypeArgument ReferenceType Token tokens LocalVariableDeclaration ReferenceType String VariableDeclarator brackets Literal "" ForStatement EnhancedForControl VariableDeclaration ReferenceType Token VariableDeclarator t MemberReference tokens BlockStatement IfStatement BinaryOperation == MethodInvocation t getType MemberReference Token BlockStatement ReturnStatement BinaryOperation + MethodInvocation MethodInvocation t getValue convertBaseType MemberReference brackets IfStatement BinaryOperation == MethodInvocation t getType MemberReference Token CLASS_NAME BlockStatement ReturnStatement BinaryOperation + MethodInvocation t MethodInvocation Literal "/" Literal "." replaceAll getValue MemberReference brackets IfStatement BinaryOperation == MethodInvocation t getType MemberReference Token BlockStatement StatementExpression Assignment MemberReference brackets MethodInvocation t getValue += ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Can not parse field descriptor"	1
MethodDeclaration Modifier public ReferenceType Object getCommunicationConnection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object trans IfStatement BinaryOperation instanceof MemberReference trans ReferenceType Transition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference trans ThrowStatement ClassCreator ReferenceType IllegalArgumentException	1
MethodDeclaration Modifier protected Annotation Override updateStereotypeText LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation getOwner IfStatement BinaryOperation == MemberReference me Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator rect MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator stereoMin MethodInvocation MethodInvocation getMinimumSize getStereotypeFig IfStatement MethodInvocation Model MethodInvocation MemberReference me getStereotypes MethodInvocation isEmpty getFacade BlockStatement IfStatement MethodInvocation MethodInvocation isVisible getStereotypeFig BlockStatement StatementExpression MethodInvocation MethodInvocation Literal false setVisible getStereotypeFig StatementExpression Assignment MemberReference rect y MemberReference stereoMin height += StatementExpression Assignment MemberReference rect height MemberReference stereoMin height -= StatementExpression MethodInvocation MemberReference rect x MemberReference rect y MemberReference rect width MemberReference rect height setBounds StatementExpression MethodInvocation calcBounds BlockStatement IfStatement MethodInvocation ! MethodInvocation isVisible getStereotypeFig BlockStatement StatementExpression MethodInvocation MethodInvocation Literal true setVisible getStereotypeFig IfStatement MemberReference ! newlyCreated BlockStatement StatementExpression Assignment MemberReference rect y MemberReference stereoMin height -= StatementExpression Assignment MemberReference rect height MemberReference stereoMin height += StatementExpression Assignment MemberReference rect width MethodInvocation Math MethodInvocation MemberReference width getMinimumSize MemberReference rect width max = StatementExpression MethodInvocation MemberReference rect x MemberReference rect y MemberReference rect width MemberReference rect height setBounds StatementExpression MethodInvocation calcBounds StatementExpression Assignment MemberReference newlyCreated Literal false =	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object method FormalParameter ReferenceType Object specification ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private removeElementListener FormalParameter ReferenceType Object element StatementExpression MethodInvocation Model MethodInvocation This MemberReference element removeModelEventListener getPump	0
MethodDeclaration Modifier public static BasicType int indexOf FormalParameter Modifier final ReferenceType Collection c FormalParameter Modifier final ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference c ReferenceType List BlockStatement ReturnStatement Cast ReferenceType List MemberReference c BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference c BlockStatement IfStatement BinaryOperation == MemberReference element MemberReference elem BlockStatement ReturnStatement MemberReference index BlockStatement StatementExpression MemberReference ++ index ReturnStatement Literal - 1	0
MethodDeclaration Modifier public BasicType int computeVector FormalParameter ReferenceType Point point LocalVariableDeclaration ReferenceType Point VariableDeclarator anchor MethodInvocation getAnchorPosition LocalVariableDeclaration BasicType int VariableDeclarator distance Cast BasicType int MethodInvocation anchor MemberReference point distance LocalVariableDeclaration BasicType int VariableDeclarator angl Literal 0 LocalVariableDeclaration BasicType double VariableDeclarator pathSlope MethodInvocation getSlope LocalVariableDeclaration BasicType double VariableDeclarator offsetSlope MethodInvocation MemberReference anchor MemberReference point getSlope IfStatement BinaryOperation && BinaryOperation && MemberReference swap BinaryOperation > MemberReference pathSlope BinaryOperation / MemberReference Math PI Literal 2 BinaryOperation < MemberReference pathSlope BinaryOperation / BinaryOperation * MemberReference Math PI Literal 3 Literal 2 BlockStatement StatementExpression Assignment MemberReference angl Cast BasicType int BinaryOperation * BinaryOperation / BinaryOperation - MemberReference offsetSlope MemberReference pathSlope MemberReference Math PI Literal 180 = BlockStatement StatementExpression Assignment MemberReference angl Cast BasicType int BinaryOperation * BinaryOperation / BinaryOperation - MemberReference offsetSlope MemberReference pathSlope MemberReference Math PI Literal 180 = LocalVariableDeclaration BasicType int VariableDeclarator result ArrayCreator BasicType int ArrayInitializer MemberReference angl MemberReference distance ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement toString	0
MethodDeclaration Modifier private static FormalParameter ReferenceType String shortcutKey FormalParameter ReferenceType KeyStroke defaultKeyStroke FormalParameter ReferenceType AbstractAction action StatementExpression MethodInvocation MemberReference shortcutKey MemberReference defaultKeyStroke MemberReference action MethodInvocation MemberReference action getActionDefaultName	0
MethodDeclaration Modifier public setContainer FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object component StatementExpression MethodInvocation impl MemberReference handle MemberReference component setContainer	0
MethodDeclaration Modifier private BasicType boolean hasChildren FormalParameter ReferenceType Object parent ReturnStatement BinaryOperation > MethodInvocation MemberReference parent Literal true getChildCountCond Literal 0	0
MethodDeclaration Modifier public BasicType boolean relocate FormalParameter ReferenceType Object base ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation Override BasicType int hashCode IfStatement BinaryOperation != MemberReference listener Literal null BlockStatement ReturnStatement BinaryOperation + MemberReference MethodInvocation listener hashCode ReturnStatement MemberReference	0
MethodDeclaration Modifier public setMachine FormalParameter ReferenceType Object sm IfStatement MethodInvocation ! Model MethodInvocation MemberReference sm isAStateMachine getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation != MemberReference sm Literal null BlockStatement StatementExpression Assignment MemberReference machine MemberReference sm =	0
MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent StatementExpression MethodInvocation MethodInvocation TargetManager MethodInvocation getInstance setTarget StatementExpression MethodInvocation MemberReference IfStatement BinaryOperation > MethodInvocation listenerList Literal 0 BlockStatement StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint	0
MethodDeclaration Modifier public BasicType boolean SynchronizedStatement MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType DocumentEvent e LocalVariableDeclaration ReferenceType Document VariableDeclarator roundingDoc MethodInvocation getDocument IfStatement BinaryOperation == MethodInvocation e getDocument MemberReference roundingDoc BlockStatement StatementExpression MethodInvocation setTargetRounding StatementExpression SuperMethodInvocation MemberReference e	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object attribute StatementExpression MethodInvocation MemberReference MemberReference attribute applyStereotype	0
MethodDeclaration Modifier public ReferenceType AggregationKindEUMLImpl getAggregationKind IfStatement BinaryOperation == MemberReference theAggregationKind Literal null BlockStatement StatementExpression Assignment MemberReference theAggregationKind ClassCreator ReferenceType AggregationKindEUMLImpl = ReturnStatement MemberReference theAggregationKind	0
MethodDeclaration Modifier public static ReferenceType Object getFirstItem FormalParameter ReferenceType Collection c IfStatement BinaryOperation instanceof MemberReference c ReferenceType List BlockStatement ReturnStatement Cast ReferenceType List MemberReference c ReturnStatement MethodInvocation c MethodInvocation next iterator	0
MethodDeclaration Modifier protected handleShowSingularMultiplicities FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator showSingularMultiplicities MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation notationSettings MethodInvocation Boolean MemberReference showSingularMultiplicities parseBoolean setShowSingularMultiplicities	0
MethodDeclaration Modifier public setMultiplicity FormalParameter ReferenceType Object handle FormalParameter ReferenceType String arg IfStatement BinaryOperation == MemberReference arg Literal null BlockStatement StatementExpression MethodInvocation MemberReference handle Literal null BlockStatement StatementExpression MethodInvocation MemberReference handle MethodInvocation MemberReference arg createMultiplicity	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement Literal true toString	0
MethodDeclaration Modifier public final remainder_expression RecognitionException TokenStreamException BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched355 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_42 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_43 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m355 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched355 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation conditional_expression BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase COMMA BlockStatement StatementExpression MethodInvocation MemberReference COMMA match BreakStatement SwitchStatementCase SEMICOLON BlockStatement StatementExpression MethodInvocation MemberReference SEMICOLON match BreakStatement SwitchStatementCase RPAREN BlockStatement StatementExpression MethodInvocation MemberReference RPAREN match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched355 Literal false = StatementExpression MethodInvocation MemberReference _m355 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched355 BlockStatement StatementExpression MethodInvocation assignment_expression IfStatement BinaryOperation && MethodInvocation _tokenSet_42 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_43 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation assignment_expression BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType String getMetaModelName FormalParameter ReferenceType Object m ReturnStatement MethodInvocation impl MemberReference m getMetaModelName	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "Not a UML1.4 element"	0
MethodDeclaration Modifier public ReferenceType Dimension FormalParameter ReferenceType Container parent SynchronizedStatement MethodInvocation parent getTreeLock LocalVariableDeclaration Modifier final ReferenceType Insets VariableDeclarator insets MethodInvocation parent getInsets LocalVariableDeclaration BasicType int VariableDeclarator preferredWidth Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator preferredHeight Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator widestLabel Literal 0 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator componentCount MethodInvocation parent getComponentCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference componentCount MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Component VariableDeclarator childComp MethodInvocation parent MemberReference i getComponent IfStatement BinaryOperation && MethodInvocation childComp isVisible BinaryOperation instanceof MemberReference childComp ReferenceType BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator childHeight MethodInvocation MemberReference childComp StatementExpression Assignment MemberReference preferredHeight BinaryOperation + MemberReference childHeight This MemberReference vgap += StatementExpression Assignment MemberReference preferredWidth BinaryOperation + BinaryOperation + MemberReference insets left MemberReference widestLabel MemberReference insets right += StatementExpression Assignment MemberReference preferredHeight BinaryOperation + MemberReference insets top MemberReference insets bottom += ReturnStatement ClassCreator ReferenceType Dimension BinaryOperation + BinaryOperation + BinaryOperation + MemberReference insets left MemberReference widestLabel MemberReference preferredWidth MemberReference insets right MemberReference preferredHeight	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation historyManager	0
MethodDeclaration Modifier public ReferenceType getWindowTitleFont ReturnStatement MemberReference windowTitleFont	0
MethodDeclaration Modifier public BasicType boolean isPrivate FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator elem Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation VisibilityKindEnum.VK_PRIVATE MethodInvocation elem getVisibility equals ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public Annotation Override renderingChanged StatementExpression SuperMethodInvocation renderingChanged IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement StatementExpression MethodInvocation updateExtensionPoints	0
MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType Profile loadUnresolved FormalParameter ReferenceType Collection TypeArgument ReferenceType String unresolved LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Profile VariableDeclarator profiles ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Profile LocalVariableDeclaration ReferenceType ProfileManager VariableDeclarator profileManager MethodInvocation ProfileFacade getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator filename MemberReference unresolved BlockStatement ReturnStatement MemberReference profiles	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType FigEdge getFigEdgeFor FormalParameter ReferenceType Object edge FormalParameter ReferenceType Map styleAttributes ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType CollaborationsHelperEUMLImpl getCollaborationsHelper IfStatement BinaryOperation == MemberReference theCollaborationsHelper Literal null BlockStatement StatementExpression Assignment MemberReference theCollaborationsHelper ClassCreator ReferenceType CollaborationsHelperEUMLImpl This = ReturnStatement MemberReference theCollaborationsHelper	0
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType This	0
MethodDeclaration Modifier protected ReferenceType String getPathSeparator ReturnStatement Literal "::"	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType String getColumnName FormalParameter BasicType int column ReturnStatement MemberReference ArraySelector MemberReference column columnNames	1
MethodDeclaration Modifier public ReferenceType Collection getAllModelElementsOfKind FormalParameter ReferenceType Object nsa FormalParameter ReferenceType String kind IfStatement BinaryOperation || BinaryOperation == MemberReference nsa Literal null BinaryOperation == MemberReference kind Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST IfStatement BinaryOperation instanceof MemberReference nsa ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "given argument " MemberReference nsa Literal " is not a namespace" LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Literal null TryStatement StatementExpression Assignment MemberReference col MethodInvocation MemberReference nsa MethodInvocation Class MemberReference kind forName getAllModelElementsOfKind = CatchClause CatchClauseParameter ClassNotFoundException cnfe ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Can't derive a class name from " MemberReference kind ReturnStatement MemberReference col	1
MethodDeclaration Modifier public addComponent LocalVariableDeclaration ReferenceType Object VariableDeclarator component MethodInvocation Model MethodInvocation MemberReference currentPackage MemberReference fileName lookupIn getFacade IfStatement BinaryOperation == MemberReference component Literal null BlockStatement StatementExpression Assignment MemberReference component MethodInvocation Model MethodInvocation createComponent getCoreFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference component MemberReference fileName setName getCoreHelper StatementExpression MethodInvocation newElements MemberReference component add StatementExpression MethodInvocation parseState MemberReference component addComponent StatementExpression MethodInvocation Model MethodInvocation MethodInvocation parseState getComponent MemberReference model setNamespace getCoreHelper	0
MethodDeclaration Modifier protected nextPhase InterruptedException StatementExpression MethodInvocation ThreadUtils checkIfInterrupted StatementExpression MemberReference ++ phasesCompleted StatementExpression Assignment MemberReference percentPhasesComplete BinaryOperation / BinaryOperation * MemberReference phasesCompleted Literal 100 MemberReference numberOfPhases = StatementExpression MethodInvocation MemberReference percentPhasesComplete fireProgressEvent	0
MethodDeclaration Modifier public setParent FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parent IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Generalization BinaryOperation instanceof MemberReference parent ReferenceType GeneralizableElement BlockStatement StatementExpression Cast ReferenceType Generalization MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or parent: " MemberReference parent	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Icon getIcons IfStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent isReadOnly getModelManagementHelper BlockStatement ReturnStatement ArrayCreator ReferenceType Icon ArrayInitializer Literal null MemberReference Literal null Literal null Literal null ReturnStatement MemberReference icons	0
MethodDeclaration Modifier public static BasicType boolean isJre5 LocalVariableDeclaration ReferenceType String VariableDeclarator javaVersion MethodInvocation System Literal "java.version" Literal "" getProperty ReturnStatement MethodInvocation javaVersion Literal startsWith	0
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getAction getMetaTypes	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object ofs FormalParameter ReferenceType String s ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType newTreeModel StatementExpression Assignment MemberReference treeModel MemberReference newTreeModel =	0
MethodDeclaration Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType Collection VariableDeclarator asc MethodInvocation Model MethodInvocation MemberReference cls getAssociationEnds getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference asc Literal null BinaryOperation == MethodInvocation asc size Literal 0 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator descendEnum MethodInvocation GenDescendantClasses MethodInvocation MemberReference cls gen getSINGLETON IfStatement MethodInvocation ! descendEnum hasMoreElements BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType ListSet VariableDeclarator descendants ClassCreator ReferenceType ListSet WhileStatement MethodInvocation descendEnum hasMoreElements BlockStatement StatementExpression MethodInvocation descendants MethodInvocation descendEnum nextElement add LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator ae MemberReference asc BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator a MethodInvocation Model MethodInvocation MemberReference ae getAssociation getFacade LocalVariableDeclaration ReferenceType List VariableDeclarator conn ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference a getConnections getFacade IfStatement BinaryOperation != MethodInvocation conn size Literal 2 BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator otherEnd MethodInvocation conn Literal 0 get IfStatement BinaryOperation == MemberReference ae MethodInvocation conn Literal 0 get BlockStatement StatementExpression Assignment MemberReference otherEnd MethodInvocation conn Literal 1 get = IfStatement MethodInvocation ! Model MethodInvocation MemberReference otherEnd isNavigable getFacade BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator otherCls MethodInvocation Model MethodInvocation MemberReference otherEnd getType getFacade IfStatement MethodInvocation descendants MemberReference otherCls contains BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference cls add StatementExpression MethodInvocation offs MemberReference a add StatementExpression MethodInvocation offs MemberReference otherCls add ReturnStatement MemberReference offs	1
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getMetaTypes	0
MethodDeclaration Modifier public addFeature FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object f IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The handle must be instance of Classifier" IfStatement BinaryOperation instanceof MemberReference f ReferenceType Feature BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "f must be instance of Feature" StatementExpression MethodInvocation editingDomain MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MethodInvocation Cast ReferenceType Classifier MemberReference handle MemberReference index Cast ReferenceType Feature MemberReference f Literal "Add the feature to the classifier #" MemberReference f MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object FormalParameter ReferenceType Object include TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ReferenceType UseCase BinaryOperation instanceof MemberReference include ReferenceType Include BlockStatement StatementExpression Cast ReferenceType UseCase MemberReference ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "usecase: " MemberReference Literal " or " MemberReference include	0
MethodDeclaration Modifier public setUUIDRefs FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object uUIDRefs StatementExpression Assignment MemberReference MemberReference uUIDRefs =	0
MethodDeclaration Modifier public ReferenceType Object createElementResidence ThrowStatement ClassCreator ReferenceType NotImplementedException	1
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType ToDoItem BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator i Cast ReferenceType ToDoItem MemberReference o IfStatement MethodInvocation ! MethodInvocation MethodInvocation i getHeadline equals getHeadline BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MethodInvocation getPoster MethodInvocation i getPoster BlockStatement ReturnStatement Literal false IfStatement MethodInvocation ! MethodInvocation MethodInvocation i getOffenders equals getOffenders BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int arg0 ReturnStatement MethodInvocation Model MethodInvocation getActivityGraphsFactory	0
MethodDeclaration ReferenceType Object valueOfTarget FormalParameter ReferenceType Object t IfStatement BinaryOperation instanceof MemberReference t ReferenceType FigNodeModelElement BlockStatement ReturnStatement MethodInvocation Integer Cast ReferenceType FigNodeModelElement MemberReference t valueOf BlockStatement ReturnStatement MemberReference t	0
MethodDeclaration Modifier private loadPosition FormalParameter ReferenceType Property position FormalParameter ReferenceType Class tab LocalVariableDeclaration ReferenceType ConfigurationKey VariableDeclarator key MethodInvocation MemberReference tab makeKey StatementExpression MethodInvocation position MethodInvocation Configuration MemberReference key Literal "South" getString setCurrentValue	1
MethodDeclaration Modifier public beginClassDefinition FormalParameter ReferenceType String oType FormalParameter ReferenceType String identifier IfStatement MethodInvocation ! ignore BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation getCurrentNamespace LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation MemberReference identifier MemberReference ns findClass IfStatement BinaryOperation == MemberReference cls Literal null BlockStatement StatementExpression Assignment MemberReference cls MethodInvocation MethodInvocation MemberReference identifier MemberReference ns buildClass getCoreFactory = StatementExpression MethodInvocation profile MemberReference cls applyCppClassStereotype StatementExpression MethodInvocation newElements MemberReference cls add StatementExpression MethodInvocation contextStack MemberReference cls push IfStatement MethodInvocation CPPvariables.OT_CLASS MemberReference oType equals BlockStatement StatementExpression Assignment MemberReference contextAccessSpecifier MethodInvocation MethodInvocation getPrivate getVisibilityKind = IfStatement MethodInvocation CPPvariables.OT_STRUCT MemberReference oType equals BlockStatement StatementExpression Assignment MemberReference contextAccessSpecifier MethodInvocation MethodInvocation getPublic getVisibilityKind = StatementExpression MethodInvocation profile MemberReference cls Literal "struct" applyClassSpecifierTaggedValue IfStatement MethodInvocation CPPvariables.OT_UNION MemberReference oType equals BlockStatement Statement BlockStatement AssertStatement Literal false BinaryOperation + Literal "Not expecting any other oType than class, struct and " Literal "union!"	1
MethodDeclaration Modifier public ReferenceType String getVersion ReturnStatement MemberReference version	0
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation MethodInvocation getClass getOwner	0
MethodDeclaration Modifier private BasicType boolean isSomeSubvertexOf FormalParameter ReferenceType Object subject FormalParameter ReferenceType Object composite LocalVariableDeclaration ReferenceType Object VariableDeclarator c MemberReference subject WhileStatement BinaryOperation != MemberReference c Literal null BlockStatement IfStatement BinaryOperation == MemberReference c MemberReference composite BlockStatement ReturnStatement Literal true StatementExpression Assignment MemberReference c MethodInvocation Model MethodInvocation MemberReference c getContainer getFacade = ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Class getColumnClass FormalParameter BasicType int c ReturnStatement ClassReference ReferenceType String	1
MethodDeclaration Modifier public setKind FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object kind IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Parameter BinaryOperation instanceof MemberReference kind ReferenceType ParameterDirectionKind BlockStatement StatementExpression Cast ReferenceType Parameter MemberReference handle ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference kind ReferenceType PseudostateKind BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or kind: " MemberReference kind	0
MethodDeclaration Modifier public addCopyStereotype FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereotype StatementExpression MethodInvocation impl MemberReference modelElement MemberReference stereotype addCopyStereotype	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getReceiver getFacade addElement	0
MethodDeclaration Modifier public ReferenceType Object getUsage ReturnStatement ClassReference ReferenceType Usage	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType TemplateParameter BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or parameter: " MemberReference parameter	1
MethodDeclaration Modifier public BasicType boolean isQuery FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement ReturnStatement Literal false ReturnStatement Cast ReferenceType Operation MemberReference handle	0
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public ReferenceType getAttribute ReturnStatement MemberReference attribute	0
MethodDeclaration Modifier private BasicType boolean isUML14 FormalParameter ReferenceType Resource r ForStatement EnhancedForControl VariableDeclaration ReferenceType EObject VariableDeclarator eobj MethodInvocation r getContents BlockStatement IfStatement Literal MethodInvocation MethodInvocation eobj MethodInvocation getName eClass equals "XMI.header" BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry VariableDeclarator e1 Cast ReferenceType AnyType MemberReference eobj BlockStatement IfStatement BinaryOperation instanceof MemberReference e1 ReferenceType BasicFeatureMapEntry BlockStatement LocalVariableDeclaration ReferenceType BasicFeatureMapEntry VariableDeclarator x1 Cast ReferenceType BasicFeatureMapEntry MemberReference e1 LocalVariableDeclaration ReferenceType String VariableDeclarator n1 MethodInvocation x1 MethodInvocation getName getEStructuralFeature IfStatement Literal MethodInvocation MemberReference n1 equals "XMI.metamodel" BlockStatement LocalVariableDeclaration ReferenceType AnyType VariableDeclarator v Cast ReferenceType AnyType MethodInvocation x1 getValue ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry VariableDeclarator e2 MethodInvocation v getAnyAttribute BlockStatement IfStatement BinaryOperation instanceof MemberReference e2 ReferenceType SimpleFeatureMapEntry BlockStatement LocalVariableDeclaration ReferenceType SimpleFeatureMapEntry VariableDeclarator x Cast ReferenceType SimpleFeatureMapEntry MemberReference e2 LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation x MethodInvocation getName getEStructuralFeature IfStatement Literal MethodInvocation MemberReference n equals "xmi.name" BlockStatement IfStatement Literal ! "UML" BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Tried to parse XMI file with " Literal "XMI.header/XMI.metamodel/xmi.name = " Cast ReferenceType String MethodInvocation x getValue warn ReturnStatement Literal false IfStatement Literal MethodInvocation MemberReference n equals "xmi.version" BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator version Cast ReferenceType String MethodInvocation x getValue IfStatement BinaryOperation && BinaryOperation != MemberReference version Literal null MethodInvocation version Literal "1.4" startsWith BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Tried to parse XMI file with " Literal "XMI.header/XMI.metamodel/xmi.version = " MemberReference version debug ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType AEnumLiteral node StatementExpression Assignment MemberReference val ClassCreator ReferenceType OclEnumLiteral MethodInvocation node MethodInvocation toString MethodInvocation trim getName = StatementExpression MethodInvocation MemberReference node	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Diagram BlockStatement ReturnStatement Cast ReferenceType Diagram MemberReference parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier static ReferenceType getNotation FormalParameter ReferenceType String k1 ReturnStatement MethodInvocation MethodInvocation MemberReference k1 Literal null	0
MethodDeclaration Modifier public BasicType boolean accept FormalParameter ReferenceType File file ReturnStatement BinaryOperation || MethodInvocation file isDirectory MethodInvocation MemberReference file isXmiFile	0
MethodDeclaration Modifier public paint FormalParameter ReferenceType Graphics g StatementExpression SuperMethodInvocation MemberReference g paint IfStatement BinaryOperation != MemberReference bgImage Literal null BlockStatement StatementExpression MethodInvocation g MemberReference bgImage Literal 0 Literal 40 Literal null drawImage	0
MethodDeclaration Modifier protected updateLabel StatementExpression MethodInvocation label MethodInvocation getLabel setText	0
MethodDeclaration Modifier public BasicType int getIconWidth ReturnStatement Literal 0	0
MethodDeclaration Modifier public ReferenceType Link createLink LocalVariableDeclaration ReferenceType Link VariableDeclarator myLink MethodInvocation MethodInvocation getLink MethodInvocation createLink getCbPackage StatementExpression SuperMethodInvocation MemberReference myLink ReturnStatement MemberReference myLink	0
MethodDeclaration Modifier private ReferenceType String generateConstraintEnrichedDocComment FormalParameter ReferenceType Object me FormalParameter ReferenceType String header FormalParameter ReferenceType String prefix FormalParameter ReferenceType String footer LocalVariableDeclaration ReferenceType String VariableDeclarator sDocComment MethodInvocation DocumentationManager MemberReference me Literal "" MemberReference header MemberReference prefix MemberReference footer getDocs StatementExpression MethodInvocation LOG BinaryOperation + Literal "sDocComment: " MemberReference sDocComment debug IfStatement BinaryOperation != MemberReference sDocComment Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MethodInvocation sDocComment Literal '\n' indexOf BinaryOperation && BinaryOperation >= MemberReference i Literal 0 BinaryOperation < MemberReference i MethodInvocation sDocComment length Assignment MemberReference i MethodInvocation sDocComment Literal '\n' BinaryOperation + MemberReference i Literal 1 indexOf = BlockStatement StatementExpression Assignment MemberReference sDocComment BinaryOperation + BinaryOperation + MethodInvocation sDocComment Literal 0 BinaryOperation + MemberReference i Literal 1 substring MemberReference INDENT MethodInvocation sDocComment BinaryOperation + MemberReference i Literal 1 substring = LocalVariableDeclaration ReferenceType Collection VariableDeclarator cConstraints MethodInvocation Model MethodInvocation MemberReference me getConstraints getFacade IfStatement BinaryOperation == MethodInvocation cConstraints size Literal 0 BlockStatement IfStatement BinaryOperation != MemberReference sDocComment Literal null BlockStatement ReturnStatement MemberReference sDocComment BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation != MemberReference sDocComment Literal null BlockStatement StatementExpression Assignment MemberReference sDocComment MethodInvocation sDocComment Literal 0 BinaryOperation + MethodInvocation sDocComment MemberReference footer indexOf Literal 1 substring = BlockStatement IfStatement MemberReference VERBOSE BlockStatement StatementExpression Assignment MemberReference sDocComment BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference INDENT MemberReference footer Literal "\n" MemberReference INDENT Literal " /// \n" MemberReference INDENT Literal " ///" = BlockStatement StatementExpression Assignment MemberReference sDocComment Literal "" = ClassDeclaration TagExtractor FieldDeclaration Modifier private ReferenceType LinkedList TypeArgument ReferenceType String VariableDeclarator llsTags ClassCreator ReferenceType LinkedList TypeArgument ReferenceType String FieldDeclaration Modifier private ReferenceType String VariableDeclarator constraintName FieldDeclaration Modifier private BasicType int VariableDeclarator constraintID Literal 0 ConstructorDeclaration Modifier public * * @param */ TagExtractor FormalParameter ReferenceType String sConstraintName StatementExpression SuperConstructorInvocation StatementExpression Assignment MemberReference constraintName MemberReference sConstraintName = MethodDeclaration Modifier public ReferenceType Iterator TypeArgument ReferenceType String getTags ReturnStatement MethodInvocation llsTags iterator MethodDeclaration Modifier public caseAConstraintBody FormalParameter ReferenceType AConstraintBody node LocalVariableDeclaration ReferenceType String VariableDeclarator sKind Literal null IfStatement BinaryOperation != MethodInvocation node getStereotype Literal null BlockStatement StatementExpression Assignment MemberReference sKind MethodInvocation node MethodInvocation toString getStereotype = LocalVariableDeclaration ReferenceType String VariableDeclarator sExpression Literal null IfStatement BinaryOperation != MethodInvocation node getExpression Literal null BlockStatement StatementExpression Assignment MemberReference sExpression MethodInvocation node MethodInvocation toString getExpression = LocalVariableDeclaration ReferenceType String VariableDeclarator sName IfStatement BinaryOperation != MethodInvocation node getName Literal null BlockStatement StatementExpression Assignment MemberReference sName MethodInvocation node MethodInvocation getText getName = BlockStatement StatementExpression Assignment MemberReference sName BinaryOperation + BinaryOperation + MemberReference constraintName Literal "_" MemberReference constraintID = IfStatement BinaryOperation || BinaryOperation == MemberReference sKind Literal null BinaryOperation == MemberReference sExpression Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sTag IfStatement MethodInvocation sKind Literal "inv " equals BlockStatement StatementExpression Assignment MemberReference sTag Literal "@invariant " = IfStatement MethodInvocation sKind Literal "post " equals BlockStatement StatementExpression Assignment MemberReference sTag Literal "@post-condition " = IfStatement MethodInvocation sKind Literal "pre " equals BlockStatement StatementExpression Assignment MemberReference sTag Literal "@pre-condition " = BlockStatement ReturnStatement StatementExpression Assignment MemberReference sTag BinaryOperation + BinaryOperation + MemberReference sName Literal ": " MemberReference sExpression += StatementExpression MethodInvocation llsTags MemberReference sTag addLast ReferenceType tudresden ReferenceType ocl ReferenceType parser ReferenceType ReferenceType DepthFirstAdapter LocalVariableDeclaration ReferenceType tudresden ReferenceType ocl ReferenceType check ReferenceType types ReferenceType ModelFacade VariableDeclarator mf ClassCreator ReferenceType org ReferenceType argouml ReferenceType ocl ReferenceType ArgoFacade MemberReference me ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator constraint MemberReference cConstraints BlockStatement TryStatement LocalVariableDeclaration ReferenceType tudresden ReferenceType ocl ReferenceType OclTree VariableDeclarator otParsed MethodInvocation tudresden.ocl.OclTree Cast ReferenceType String MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference constraint getBody getFacade getBody getFacade MemberReference mf createTree LocalVariableDeclaration ReferenceType TagExtractor VariableDeclarator te ClassCreator ReferenceType TagExtractor MethodInvocation Model MethodInvocation MemberReference constraint getName getFacade StatementExpression MethodInvocation otParsed MemberReference te apply ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator j MethodInvocation te getTags MethodInvocation j hasNext BlockStatement StatementExpression Assignment MemberReference sDocComment BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " " MethodInvocation j next Literal "\n" MemberReference INDENT Literal " ///" += CatchClause CatchClauseParameter IOException ioe StatementExpression Assignment MemberReference sDocComment BinaryOperation + Literal "\n" MemberReference footer += ReturnStatement MemberReference sDocComment	1
MethodDeclaration Modifier public ReferenceType Parameter FormalParameter ReferenceType Object o FormalParameter ReferenceType Object type IfStatement BinaryOperation instanceof MemberReference o ReferenceType Event BlockStatement LocalVariableDeclaration ReferenceType Event VariableDeclarator event Cast ReferenceType Event MemberReference o LocalVariableDeclaration ReferenceType Parameter VariableDeclarator res MethodInvocation Cast ReferenceType Classifier MemberReference type MemberReference event StatementExpression MethodInvocation res MemberReference ParameterDirectionKindEnum PDK_IN setKind StatementExpression MethodInvocation event MethodInvocation MemberReference res add getParameter StatementExpression MethodInvocation res BinaryOperation + Literal "arg" MethodInvocation event MethodInvocation size getParameter setName ReturnStatement MemberReference res IfStatement BinaryOperation instanceof MemberReference o ReferenceType ObjectFlowState BlockStatement LocalVariableDeclaration ReferenceType ObjectFlowState VariableDeclarator ofs Cast ReferenceType ObjectFlowState MemberReference o LocalVariableDeclaration ReferenceType Parameter VariableDeclarator res MethodInvocation Cast ReferenceType Classifier MemberReference type MemberReference ofs StatementExpression MethodInvocation res MemberReference ParameterDirectionKindEnum PDK_IN setKind StatementExpression MethodInvocation ofs MethodInvocation MemberReference res add getParameter StatementExpression MethodInvocation res BinaryOperation + Literal "arg" MethodInvocation ofs MethodInvocation size getParameter setName ReturnStatement MemberReference res IfStatement BinaryOperation instanceof MemberReference o ReferenceType BehavioralFeature BlockStatement LocalVariableDeclaration ReferenceType BehavioralFeature VariableDeclarator oper Cast ReferenceType BehavioralFeature MemberReference o LocalVariableDeclaration ReferenceType Parameter VariableDeclarator res MethodInvocation Cast ReferenceType Classifier MemberReference type MemberReference oper StatementExpression MethodInvocation res MemberReference ParameterDirectionKindEnum PDK_IN setKind StatementExpression MethodInvocation oper MethodInvocation MemberReference res add getParameter StatementExpression MethodInvocation res BinaryOperation + Literal "arg" MethodInvocation oper MethodInvocation size getParameter setName ReturnStatement MemberReference res IfStatement BinaryOperation == MemberReference o Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A containing element must be supplied for the parameter" BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Unsupported element for parameter " MethodInvocation o MethodInvocation getName getClass	0
MethodDeclaration Modifier public ReferenceType NotationType getNotationType ReturnStatement MethodInvocation notatedItem getNotationType	0
MethodDeclaration Modifier public ReferenceType String multiplicityToString FormalParameter ReferenceType Object multiplicity IfStatement BinaryOperation instanceof MemberReference multiplicity ReferenceType Multiplicity BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Unrecognized object: " MemberReference multiplicity TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator rc Literal "" LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i Cast ReferenceType Multiplicity MemberReference multiplicity LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true WhileStatement MethodInvocation i hasNext BlockStatement IfStatement MemberReference first BlockStatement StatementExpression Assignment MemberReference first Literal false = BlockStatement StatementExpression Assignment MemberReference rc Literal "," += StatementExpression Assignment MemberReference rc MethodInvocation Cast ReferenceType MultiplicityRange MethodInvocation i next multiplicityRangeToString += ReturnStatement MemberReference rc CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public ReferenceType java ReferenceType util ReferenceType BitSet qualifiedItemIs FormalParameter BasicType int lookahead_offset TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator value LocalVariableDeclaration BasicType int VariableDeclarator k BinaryOperation + MemberReference lookahead_offset Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator final_type_idx Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator scope_found Literal false IfStatement BinaryOperation == MethodInvocation MethodInvocation getType MemberReference k LT MemberReference SCOPE BlockStatement StatementExpression MemberReference ++ k StatementExpression Assignment MemberReference scope_found Literal true = WhileStatement BinaryOperation && BinaryOperation == MethodInvocation MethodInvocation getType MemberReference k LT MemberReference ID MethodInvocation MethodInvocation MethodInvocation getText MemberReference k LT isTypeName BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference final_type_idx Literal 0 MethodInvocation MemberReference final_type_idx LT BlockStatement IfStatement BinaryOperation == MethodInvocation MethodInvocation getType BinaryOperation + MemberReference k Literal 1 LT MemberReference SCOPE BlockStatement ReturnStatement MemberReference CPPvariables QI_INVALID BlockStatement ReturnStatement MemberReference CPPvariables QI_CTOR StatementExpression Assignment MemberReference final_type_idx MemberReference k = StatementExpression MemberReference ++ k IfStatement BinaryOperation == MethodInvocation MethodInvocation getType MemberReference k LT MemberReference LESSTHAN BlockStatement StatementExpression Assignment MemberReference value MethodInvocation MemberReference k skipTemplateQualifiers = IfStatement BinaryOperation == MemberReference value MemberReference k BlockStatement ReturnStatement MemberReference CPPvariables QI_INVALID StatementExpression Assignment MemberReference k MemberReference value = IfStatement BinaryOperation == MethodInvocation MethodInvocation getType MemberReference k LT MemberReference SCOPE BlockStatement StatementExpression MemberReference ++ k StatementExpression Assignment MemberReference scope_found Literal true = BlockStatement IfStatement MethodInvocation enclosingClass MethodInvocation MethodInvocation getText MemberReference final_type_idx LT equals BlockStatement ReturnStatement MemberReference CPPvariables QI_CTOR BlockStatement ReturnStatement MemberReference CPPvariables QI_TYPE SwitchStatement MethodInvocation MethodInvocation getType MemberReference k LT SwitchStatementCase ID IfStatement BinaryOperation == MethodInvocation MethodInvocation getType BinaryOperation + MemberReference k Literal 1 LT MemberReference SCOPE BlockStatement ReturnStatement MemberReference CPPvariables QI_INVALID IfStatement MethodInvocation enclosingClass MethodInvocation MethodInvocation getText MemberReference k LT equals BlockStatement ReturnStatement MemberReference CPPvariables QI_CTOR BlockStatement IfStatement MemberReference scope_found ReturnStatement MemberReference CPPvariables QI_TYPE ReturnStatement MemberReference CPPvariables QI_VAR SwitchStatementCase TILDE IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation MethodInvocation getType BinaryOperation + MemberReference k Literal 1 LT MemberReference ID MethodInvocation MethodInvocation MethodInvocation getText BinaryOperation + MemberReference k Literal 1 LT isTypeName BinaryOperation != MethodInvocation MethodInvocation getType BinaryOperation + MemberReference k Literal 2 LT MemberReference SCOPE BlockStatement ReturnStatement MemberReference CPPvariables QI_DTOR BlockStatement ReturnStatement MemberReference CPPvariables QI_INVALID SwitchStatementCase STAR IfStatement BinaryOperation == MemberReference final_type_idx Literal 0 BlockStatement ReturnStatement MemberReference CPPvariables QI_INVALID BlockStatement ReturnStatement MemberReference CPPvariables QI_PTR_MEMBER SwitchStatementCase OPERATOR ReturnStatement MemberReference CPPvariables QI_OPERATOR SwitchStatementCase ReturnStatement MemberReference CPPvariables QI_INVALID	1
MethodDeclaration Modifier private ReferenceType SwitchStatement parseSwitch FeatureNotSupportedException LocalVariableDeclaration ReferenceType SwitchStatement VariableDeclarator node ClassCreator ReferenceType SwitchStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference TokenID LParen AssertAndAdvance StatementExpression Assignment MemberReference node Test MethodInvocation ParseExpression = StatementExpression MethodInvocation MemberReference TokenID RParen AssertAndAdvance StatementExpression MethodInvocation MemberReference TokenID LCurly AssertAndAdvance WhileStatement BinaryOperation || BinaryOperation == MemberReference curtok id MemberReference TokenID BinaryOperation == MemberReference curtok id MemberReference TokenID Default BlockStatement StatementExpression MethodInvocation node.Cases MethodInvocation parseCase add StatementExpression MethodInvocation MemberReference TokenID RCurly AssertAndAdvance IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi StatementExpression MethodInvocation advance ReturnStatement MemberReference node	1
MethodDeclaration Modifier public ReferenceType Object getDefaultReturnType ReturnStatement Literal null	0
MethodDeclaration Modifier public setItem FormalParameter ReferenceType Object anObject IfStatement Cast ReferenceType UMLComboBoxModel2 MethodInvocation getModel BlockStatement StatementExpression MethodInvocation editor Cast ReferenceType UMLListCellRenderer2 MethodInvocation getRenderer setText IfStatement BinaryOperation && MemberReference BinaryOperation != MemberReference anObject Literal null BlockStatement StatementExpression MethodInvocation panel MethodInvocation MethodInvocation MemberReference anObject getInstance setIcon BlockStatement StatementExpression SuperMethodInvocation MemberReference anObject setItem	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "{" MethodInvocation MethodInvocation getName getClass Literal ":" MemberReference Literal "(" MethodInvocation Literal "-" MethodInvocation getEventEndRange Literal ")" Literal "/" SuperMethodInvocation toString Literal "}"	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference label	0
MethodDeclaration Modifier public BasicType int getVgap ReturnStatement This MemberReference vgap	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object argument StatementExpression MethodInvocation impl MemberReference handle MemberReference argument	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Override ReferenceType DiagramElement drop FormalParameter ReferenceType Object droppedObject FormalParameter ReferenceType Point location LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNode Literal null LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator bounds Literal null IfStatement BinaryOperation != MemberReference location Literal null BlockStatement StatementExpression Assignment MemberReference bounds ClassCreator ReferenceType Rectangle MemberReference location x MemberReference location y Literal 0 Literal 0 = LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation getDiagramSettings IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isAActionState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigActionState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isAFinalState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigFinalState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isAStubState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigStubState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isASubmachineState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigSubmachineState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isACompositeState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigCompositeState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isASynchState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigSynchState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isAState getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigSimpleState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isAComment getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComment MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference droppedObject isAPseudostate getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference droppedObject getKind getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "found a null type pseudostate" warn ReturnStatement Literal null IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getInitial getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigInitialState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getChoice getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigBranchState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getJunction getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigJunctionState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getFork getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigForkState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getJoin getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigJoinState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getShallowHistory getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigShallowHistoryState MemberReference droppedObject MemberReference bounds MemberReference settings = IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getDeepHistory getPseudostateKind equals BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigDeepHistoryState MemberReference droppedObject MemberReference bounds MemberReference settings = BlockStatement StatementExpression MethodInvocation LOG Literal "found a type not known" warn IfStatement BinaryOperation != MemberReference figNode Literal null BlockStatement IfStatement BinaryOperation != MemberReference location Literal null BlockStatement StatementExpression MethodInvocation figNode MemberReference location x MemberReference location y setLocation StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Dropped object " MemberReference droppedObject Literal " converted to " MemberReference figNode debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Dropped object NOT added " MemberReference figNode debug ReturnStatement MemberReference figNode	1
MethodDeclaration Modifier public ReferenceType createPropPanel FormalParameter ReferenceType Object target IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference target isAElement getFacade MethodInvocation Model MethodInvocation MemberReference target getFacade BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator panel ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference panel MemberReference target build ReturnStatement MemberReference panel BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String getName FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz IfStatement BinaryOperation instanceof MemberReference element ReferenceType Class BlockStatement StatementExpression Assignment MemberReference clazz Cast ReferenceType Class MemberReference element = BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation element getClass = LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation clazz getName LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MethodInvocation name Literal '.' lastIndexOf Literal 1 LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator prefix Literal "UML" IfStatement MethodInvocation name MethodInvocation MemberReference prefix startsWith MemberReference substring BlockStatement StatementExpression Assignment MemberReference MethodInvocation prefix length += LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator suffix Literal "Impl" LocalVariableDeclaration BasicType int VariableDeclarator endName MethodInvocation name length IfStatement MethodInvocation name MemberReference suffix endsWith BlockStatement StatementExpression Assignment MemberReference endName MethodInvocation suffix length -= ReturnStatement MethodInvocation name MemberReference MemberReference endName substring	1
MethodDeclaration Modifier public ReferenceType Object getSubactivityState ReturnStatement ClassReference ReferenceType State	1
MethodDeclaration Modifier public componentShown FormalParameter ReferenceType ComponentEvent e StatementExpression MethodInvocation MemberReference mMmeiTarget setTargetInternal	0
MethodDeclaration Modifier protected BasicType int getNotationType ReturnStatement MemberReference NotationProviderFactory2 TYPE_ENUMERATION_LITERAL	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Object buildBinding FormalParameter ReferenceType Object client FormalParameter ReferenceType Object FormalParameter ReferenceType List arguments ReturnStatement MethodInvocation MemberReference client MemberReference MemberReference arguments buildTemplateBinding	1
MethodDeclaration Modifier private Annotation Deprecated initPorts FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object owner LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator sourceSV MethodInvocation Model MethodInvocation MemberReference owner getSource getFacade LocalVariableDeclaration Modifier final ReferenceType FigNode VariableDeclarator sourceFN Cast ReferenceType FigNode MethodInvocation lay MemberReference sourceSV presentationFor IfStatement BinaryOperation != MemberReference sourceFN Literal null BlockStatement StatementExpression MethodInvocation MemberReference sourceFN setSourcePortFig StatementExpression MethodInvocation MemberReference sourceFN setSourceFigNode LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator destSV MethodInvocation Model MethodInvocation MemberReference owner getTarget getFacade LocalVariableDeclaration Modifier final ReferenceType FigNode VariableDeclarator destFN Cast ReferenceType FigNode MethodInvocation lay MemberReference destSV presentationFor IfStatement BinaryOperation != MemberReference destFN Literal null BlockStatement StatementExpression MethodInvocation MemberReference destFN setDestPortFig StatementExpression MethodInvocation MemberReference destFN setDestFigNode	1
MethodDeclaration Modifier protected BasicType int getInitialY ReturnStatement Literal 0	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType JDialog VariableDeclarator dialog ClassCreator ReferenceType ExceptionDialog MethodInvocation ArgoFrame getFrame MethodInvocation Translator Literal "dialog.error.title" localize MethodInvocation Translator Literal "dialog.error.open.save.error" localize MemberReference message StatementExpression MethodInvocation dialog Literal true setVisible	0
MethodDeclaration Modifier public ReferenceType Dimension getPreferredSize IfStatement MemberReference expanded BlockStatement ReturnStatement MemberReference BlockStatement ReturnStatement MemberReference shrunkPreferredSize	0
MethodDeclaration Modifier public ReferenceType DirectionKindEUMLImpl getDirectionKind IfStatement BinaryOperation == MemberReference theDirectionKind Literal null BlockStatement StatementExpression Assignment MemberReference theDirectionKind ClassCreator ReferenceType DirectionKindEUMLImpl = ReturnStatement MemberReference theDirectionKind	0
MethodDeclaration Modifier protected StatementExpression SuperMethodInvocation IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation calcBounds	1
MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object oTarget StatementExpression Assignment MemberReference oTarget TernaryExpression BinaryOperation instanceof MemberReference oTarget ReferenceType Fig Cast ReferenceType Fig MemberReference oTarget MemberReference oTarget = IfStatement MethodInvocation ! Model getFacade BlockStatement StatementExpression Assignment MemberReference mMmeiTarget Literal null = ReturnStatement StatementExpression Assignment MemberReference mMmeiTarget MemberReference oTarget = IfStatement MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation MemberReference mMmeiTarget setTargetInternal	1
MethodDeclaration Modifier public addProgressListener FormalParameter ReferenceType ProgressListener listener StatementExpression MethodInvocation listenerList ClassReference ReferenceType ProgressListener MemberReference listener add	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Action getActions LocalVariableDeclaration Modifier final ReferenceType ArrayList TypeArgument ReferenceType Action VariableDeclarator actions ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Action StatementExpression MethodInvocation actions ClassCreator ReferenceType ActionCreateContainedModelElement MethodInvocation Model MethodInvocation getCallEvent getMetaTypes MethodInvocation getTarget add StatementExpression MethodInvocation actions ClassCreator ReferenceType ActionCreateContainedModelElement MethodInvocation Model MethodInvocation getChangeEvent getMetaTypes MethodInvocation getTarget add StatementExpression MethodInvocation actions ClassCreator ReferenceType ActionCreateContainedModelElement MethodInvocation Model MethodInvocation getSignalEvent getMetaTypes MethodInvocation getTarget add StatementExpression MethodInvocation actions ClassCreator ReferenceType ActionCreateContainedModelElement MethodInvocation Model MethodInvocation getTimeEvent getMetaTypes MethodInvocation getTarget add ReturnStatement MemberReference actions	1
MethodDeclaration Modifier public ReferenceType Element ReturnStatement MethodInvocation document	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public removeDeploymentLocation FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object node TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Component BinaryOperation instanceof MemberReference node ReferenceType Node BlockStatement StatementExpression Cast ReferenceType Component MemberReference handle ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or node: " MemberReference node	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference org.eclipse.uml2.uml.MessageSort ASYNCH_CALL_LITERAL	0
MethodDeclaration Modifier protected StatementExpression MethodInvocation initMenuFile StatementExpression MethodInvocation initMenuEdit StatementExpression MethodInvocation initMenuView StatementExpression MethodInvocation initMenuCreate StatementExpression MethodInvocation initMenuArrange StatementExpression MethodInvocation initMenuGeneration StatementExpression MethodInvocation initMenuCritique StatementExpression MethodInvocation initMenuTools StatementExpression MethodInvocation initMenuHelp	0
MethodDeclaration Modifier public ReferenceType Icon getIcon ReturnStatement MemberReference icon	0
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase DESCRIPTION ReturnStatement Literal "Java import from Java files." SwitchStatementCase AUTHOR ReturnStatement MemberReference JavaModuleGlobals MODULE_AUTHOR SwitchStatementCase ReturnStatement MemberReference JavaModuleGlobals MODULE_VERSION SwitchStatementCase MemberReference ModuleInterface DOWNLOADSITE ReturnStatement MemberReference JavaModuleGlobals MODULE_DOWNLOADSITE SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType int getSize ReturnStatement MethodInvocation objects size	0
MethodDeclaration Modifier public ReferenceType Operation FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Object returnType ReturnStatement MethodInvocation MemberReference classifier MemberReference returnType Literal null buildOperation2	0
MethodDeclaration Modifier public ReferenceType LayoutedObject getObject FormalParameter BasicType int index ReturnStatement MethodInvocation layoutedObjects MemberReference index get	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dm getKind getFacade IfStatement BinaryOperation && MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getDeepHistory getPseudostateKind equalsPseudostateKind getFacade MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getShallowHistory getPseudostateKind equalsPseudostateKind getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator outgoing MethodInvocation Model MethodInvocation MemberReference dm getOutgoings getFacade LocalVariableDeclaration BasicType int VariableDeclarator TernaryExpression BinaryOperation == MemberReference outgoing Literal null Literal 0 MethodInvocation outgoing size IfStatement BinaryOperation > MemberReference Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	0
MethodDeclaration Modifier public ReferenceType String getDisplayName ReturnStatement MemberReference NAME	0
MethodDeclaration deleteUsage FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Usage BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier public removeTreeModelListener FormalParameter ReferenceType l StatementExpression MethodInvocation listenerList ClassReference ReferenceType MemberReference l remove	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAUseCase getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public setBody FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr ThrowStatement ClassCreator ReferenceType NotImplementedException	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getPackage getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public handleEndElement FormalParameter ReferenceType XMLElement e SAXException TryStatement SwitchStatement MethodInvocation tokens MethodInvocation e getName Literal false toToken SwitchStatementCase MemberReference ProfileConfigurationTokenTable TOKEN_PROFILE StatementExpression MethodInvocation MemberReference e handleProfileEnd BreakStatement SwitchStatementCase MemberReference ProfileConfigurationTokenTable TOKEN_PLUGIN StatementExpression MethodInvocation MemberReference e handlePluginEnd BreakStatement SwitchStatementCase MemberReference ProfileConfigurationTokenTable TOKEN_USER_DEFINED StatementExpression MethodInvocation MemberReference e handleUserDefinedEnd BreakStatement SwitchStatementCase MemberReference ProfileConfigurationTokenTable TOKEN_FILENAME StatementExpression MethodInvocation MemberReference e handleFilenameEnd BreakStatement SwitchStatementCase MemberReference ProfileConfigurationTokenTable TOKEN_MODEL StatementExpression MethodInvocation MemberReference e handleModelEnd BreakStatement SwitchStatementCase StatementExpression MethodInvocation LOG BinaryOperation + Literal "WARNING: unknown end tag:" MethodInvocation e getName warn BreakStatement CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType SAXException MemberReference ex	1
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setFillColor	0
MethodDeclaration Modifier public notationRenderingChanged FormalParameter ReferenceType NotationProvider FormalParameter ReferenceType String rendering IfStatement BinaryOperation == MemberReference notationProviderName MemberReference BlockStatement StatementExpression MethodInvocation nameFig MemberReference rendering setText StatementExpression MethodInvocation damage	0
MethodDeclaration Modifier public ReferenceType Object getAssociationRole ReturnStatement ClassReference ReferenceType Connector	0
MethodDeclaration Modifier public addOwnedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object me FormalParameter ReferenceType String msg FormalParameter ReferenceType Object objects IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The handle must be instance of Namespace" IfStatement BinaryOperation instanceof MemberReference me ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "'me' must be instance of Element, we got a " MemberReference me LocalVariableDeclaration ReferenceType Element VariableDeclarator element Cast ReferenceType Element MemberReference me IfStatement BinaryOperation != MethodInvocation element getOwner Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Setting ignore delete for " MemberReference element info LocalVariableDeclaration ReferenceType VariableDeclarator pump Cast ReferenceType MethodInvocation Model getPump StatementExpression MethodInvocation pump MemberReference element StatementExpression MethodInvocation editingDomain MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MethodInvocation Cast ReferenceType Namespace MemberReference handle Cast ReferenceType Element MemberReference me MemberReference msg MemberReference objects execute getCommandStack	1
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType Dependency MemberReference dependency	0
MethodDeclaration Modifier public setBounds FormalParameter BasicType int FormalParameter BasicType int FormalParameter BasicType int w FormalParameter BasicType boolean concurrency IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration BasicType int VariableDeclarator x BinaryOperation + MemberReference oldBounds x MemberReference LocalVariableDeclaration BasicType int VariableDeclarator y BinaryOperation + MemberReference oldBounds y MemberReference LocalVariableDeclaration BasicType int VariableDeclarator h MemberReference oldBounds height StatementExpression MethodInvocation dividerline MemberReference x MemberReference y BinaryOperation + MemberReference x MemberReference w MemberReference y setShape StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x Literal 2 BinaryOperation + MemberReference y Literal 2 BinaryOperation - MemberReference w Literal 4 MemberReference nameDim height setBounds getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x Literal 2 BinaryOperation + BinaryOperation + MemberReference y MemberReference nameDim height Literal 4 BinaryOperation - MemberReference w Literal 4 BinaryOperation - BinaryOperation - MemberReference h MemberReference nameDim height Literal 8 setBounds getInternal StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation cover MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation StatementExpression MethodInvocation Literal "bounds" MemberReference oldBounds MethodInvocation getBounds	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation createComment IfStatement BinaryOperation != MemberReference element Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Cast ReferenceType Element MemberReference element add getAnnotatedElements StatementExpression Cast ReferenceType Namespace MemberReference model StatementExpression MethodInvocation MethodInvocation MemberReference add getParams	0
MethodDeclaration Modifier public characters FormalParameter BasicType char chars FormalParameter BasicType int start FormalParameter BasicType int len javax.xml.transform.TransformerException IfStatement BinaryOperation == MemberReference numLines Literal 0 BlockStatement StatementExpression MemberReference ++ numLines ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count MemberReference start BinaryOperation < MemberReference count BinaryOperation + MemberReference start MemberReference len MemberReference ++ count BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference count chars Literal '\n' BlockStatement StatementExpression MemberReference ++ numLines	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue LocalVariableDeclaration BasicType boolean VariableDeclarator bContinue Literal true IfStatement MethodInvocation ! curLanguage MethodInvocation MemberReference ArraySelector BinaryOperation + BinaryOperation * Literal 2 MemberReference currentIndex Literal 1 tabValues equals getText BlockStatement StatementExpression Assignment MemberReference bContinue MethodInvocation MemberReference tabValues MethodInvocation curLanguage getText isUniqueLanguage = IfStatement MemberReference bContinue BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation * Literal 2 MemberReference currentIndex tabValues MethodInvocation curBody getText = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * Literal 2 MemberReference currentIndex Literal 1 tabValues MethodInvocation curLanguage getText = StatementExpression MethodInvocation model MemberReference tabValues setValue StatementExpression MethodInvocation updateFields	1
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference BASE instructions	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public FormalParameter ReferenceType node StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType boolean StatementExpression MethodInvocation impl MemberReference handle MemberReference	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewEdgeType FormalParameter BasicType int index ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Collection features ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public BasicType boolean isMultiSelect ReturnStatement MemberReference multiSelect	0
MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType CollaborationDiagramPropPanelFactory StatementExpression MethodInvocation PropPanelFactoryManager MemberReference addPropPanelFactory	0
MethodDeclaration BasicType int getTopMargin ReturnStatement MemberReference MARGIN	0
MethodDeclaration Modifier protected ReferenceType List getAllSiblings LocalVariableDeclaration ReferenceType List VariableDeclarator list Literal null LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator owner MethodInvocation Model MethodInvocation MemberReference modelElement getModelElementContainer getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAttribute getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference modelElement getOwner getFacade isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference list MethodInvocation Model MethodInvocation MemberReference owner getQualifiers getFacade = BlockStatement StatementExpression Assignment MemberReference list MethodInvocation Model MethodInvocation MemberReference owner getAttributes getFacade = IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference modelElement isAOperation getFacade MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement StatementExpression Assignment MemberReference list MethodInvocation Model MethodInvocation MemberReference owner getOperationsAndReceptions getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAParameter getFacade BlockStatement StatementExpression Assignment MemberReference list MethodInvocation Model MethodInvocation MemberReference owner getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference list ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference owner getConnections getFacade = ReturnStatement MemberReference list	0
MethodDeclaration Modifier public ReferenceType Object getValueAt FormalParameter BasicType int row FormalParameter BasicType int col IfStatement BinaryOperation && BinaryOperation < MemberReference row MemberReference elements length BinaryOperation < MemberReference col Literal 3 BlockStatement ReturnStatement MemberReference ArraySelector MemberReference row ArraySelector MemberReference col elements BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Index out of bounds"	0
MethodDeclaration Modifier public updateRoots IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation getOpenProjects BlockStatement StatementExpression MethodInvocation p updateRoots StatementExpression MethodInvocation MemberReference OPEN_PROJECTS_PROPERTY ArrayCreator ReferenceType Project ArrayInitializer MemberReference currentProject ArrayCreator ReferenceType Project ArrayInitializer MemberReference currentProject firePropertyChanged	0
MethodDeclaration Modifier public addSupplierDependency FormalParameter ReferenceType Object FormalParameter ReferenceType Object dependency StatementExpression MethodInvocation MemberReference dependency MemberReference	0
MethodDeclaration Modifier public ReferenceType Object getActionExpression ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier protected ReferenceType String getIconName ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType DiagramElement createDiagramElement FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Rectangle bounds LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNode Literal null LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation getDiagramSettings IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComment getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComment MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAClassifierRole getFacade BlockStatement IfStatement MethodInvocation ! MethodInvocation getNodes MethodInvocation MemberReference modelElement contains getGraphModel BlockStatement StatementExpression Assignment MemberReference figNode MethodInvocation MemberReference modelElement Literal null makeNewFigCR = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference figNode MethodInvocation MethodInvocation MemberReference modelElement makeNewCR MethodInvocation bounds getLocation makeNewFigCR = IfStatement BinaryOperation != MemberReference figNode Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Model element " MemberReference modelElement Literal " converted to " MemberReference figNode debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Dropped object NOT added " MemberReference figNode debug ReturnStatement MemberReference figNode	1
MethodDeclaration Modifier public BasicType boolean matchReason FormalParameter BasicType long patternCode ReturnStatement BinaryOperation || BinaryOperation == MemberReference triggerMask Literal 0 BinaryOperation != BinaryOperation & MemberReference triggerMask MemberReference patternCode Literal 0	1
MethodDeclaration Modifier public BasicType int ReturnStatement TernaryExpression BinaryOperation && MemberReference hasCr MemberReference hasLf Literal 2 Literal 1	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter BasicType int index ReturnStatement MethodInvocation MemberReference index getElementAt	0
MethodDeclaration Modifier static protected ReferenceType String readObjectID FormalParameter ReferenceType Object obj IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAUMLElement getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference obj getUUID getFacade IfStatement BinaryOperation instanceof MemberReference obj ReferenceType IItemUID BlockStatement LocalVariableDeclaration Modifier final ReferenceType ItemUID VariableDeclarator Cast ReferenceType IItemUID MemberReference obj ReturnStatement TernaryExpression BinaryOperation == MemberReference Literal null Literal null MethodInvocation toString LocalVariableDeclaration ReferenceType Object VariableDeclarator rv TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation obj MethodInvocation Literal "getItemUID" Cast ReferenceType Class Literal null getMethod getClass StatementExpression Assignment MemberReference rv MethodInvocation m MemberReference obj Cast ReferenceType Object Literal null invoke = CatchClause CatchClauseParameter NoSuchMethodException nsme TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation obj MethodInvocation Literal "getUUID" Cast ReferenceType Class Literal null getMethod getClass StatementExpression Assignment MemberReference rv MethodInvocation m MemberReference obj Cast ReferenceType Object Literal null invoke = ReturnStatement Cast ReferenceType String MemberReference rv CatchClause CatchClauseParameter NoSuchMethodException nsme2 ReturnStatement Literal null CatchClause CatchClauseParameter IllegalArgumentException iare StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "getUUID for " MethodInvocation obj getClass Literal " takes strange parameter: " MemberReference iare error ReturnStatement Literal null CatchClause CatchClauseParameter IllegalAccessException iace ReturnStatement Literal null CatchClause CatchClauseParameter InvocationTargetException tie StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "getUUID for " MethodInvocation obj getClass Literal " threw: " MemberReference tie error ReturnStatement Literal null CatchClause CatchClauseParameter SecurityException se ReturnStatement Literal null CatchClause CatchClauseParameter InvocationTargetException tie StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "getItemUID for " MethodInvocation obj getClass Literal " threw: " MemberReference tie error ReturnStatement Literal null CatchClause CatchClauseParameter IllegalAccessException iace ReturnStatement Literal null CatchClause CatchClauseParameter IllegalArgumentException iare StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "getItemUID for " MethodInvocation obj getClass Literal " takes strange parameter: " MemberReference iare error ReturnStatement Literal null CatchClause CatchClauseParameter eiie StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "getItemUID for " MethodInvocation obj getClass Literal " exception: " MemberReference eiie error ReturnStatement Literal null IfStatement BinaryOperation == MemberReference rv Literal null BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference rv ReferenceType ItemUID BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "getItemUID for " MethodInvocation obj getClass Literal " returns strange value: " MethodInvocation rv getClass error ReturnStatement Literal null ReturnStatement MethodInvocation rv toString	1
MethodDeclaration Modifier public ReferenceType Collection getSpecifications FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Property BlockStatement ReturnStatement MethodInvocation Collections emptySet IfStatement BinaryOperation instanceof MemberReference handle ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator theClass Cast ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class MemberReference handle ReturnStatement MethodInvocation theClass getInterfaceRealizations ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object theComment IfStatement BinaryOperation == MemberReference theComment Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A must be supplied" IfStatement MethodInvocation ! Model MethodInvocation MemberReference theComment isAComment getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "A cannot be a " MethodInvocation theComment MethodInvocation getName getClass StatementExpression Assignment This MemberReference MemberReference theComment =	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Project getOpenProjects LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Project VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Project IfStatement BinaryOperation != MemberReference currentProject Literal null BlockStatement StatementExpression MethodInvocation result MemberReference currentProject add ReturnStatement MemberReference result	1
MethodDeclaration Modifier private ReferenceType String generateMessageNumber FormalParameter ReferenceType Object message LocalVariableDeclaration ReferenceType MsgPtr VariableDeclarator ptr ClassCreator ReferenceType MsgPtr LocalVariableDeclaration BasicType int VariableDeclarator pos BinaryOperation + MethodInvocation MemberReference message MemberReference ptr recCountPredecessors Literal 1 ReturnStatement MethodInvocation MemberReference message MemberReference ptr message MemberReference pos generateMessageNumber	0
MethodDeclaration Modifier private ReferenceType String generateScope FormalParameter ReferenceType Object me IfStatement MethodInvocation MethodInvocation MemberReference me isStatic getFacade BlockStatement ReturnStatement Literal "static " ReturnStatement Literal ""	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public ReferenceType Object getInclude ReturnStatement ClassReference ReferenceType Include	0
MethodDeclaration Modifier public BasicType boolean isEnabled ReturnStatement MethodInvocation dummyAction isEnabled	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int width StatementExpression SuperMethodInvocation MemberReference width setLineWidth	1
MethodDeclaration Modifier private ReferenceType Type FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Type params FormalParameter BasicType boolean fCheckIsQuery OclTypeException IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException Literal "attempting to access features of Void" LocalVariableDeclaration ReferenceType Type VariableDeclarator type MethodInvocation Basic MemberReference name MemberReference params navigateAnyParameterized IfStatement BinaryOperation != MemberReference type Literal null BlockStatement ReturnStatement MemberReference type LocalVariableDeclaration ReferenceType Object VariableDeclarator foundOp Literal null LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType Collection VariableDeclarator operations MethodInvocation Model MethodInvocation MemberReference classifier getOperations getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation operations iterator WhileStatement BinaryOperation && MethodInvocation iter hasNext BinaryOperation == MemberReference foundOp Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation iter next IfStatement MethodInvocation MemberReference op MemberReference name MemberReference params operationMatchesCall BlockStatement StatementExpression Assignment MemberReference foundOp MemberReference op = IfStatement BinaryOperation == MemberReference foundOp Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException BinaryOperation + BinaryOperation + BinaryOperation + Literal "operation " MemberReference name Literal " not found in classifier " MethodInvocation toString IfStatement MemberReference fCheckIsQuery BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference foundOp isQuery getFacade BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Non-query operations cannot " Literal "be used in OCL expressions. (" MemberReference name Literal ")" LocalVariableDeclaration ReferenceType Collection VariableDeclarator returnParams MethodInvocation Model MethodInvocation MemberReference foundOp getReturnParameters getCoreHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator rp IfStatement BinaryOperation == MethodInvocation returnParams size Literal 0 BlockStatement StatementExpression Assignment MemberReference rp Literal null = BlockStatement StatementExpression Assignment MemberReference rp MethodInvocation returnParams MethodInvocation next iterator = IfStatement BinaryOperation > MethodInvocation returnParams size Literal 1 BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "OCL compiler only handles one return parameter" Literal " - Found " MethodInvocation returnParams size Literal " for " MethodInvocation Model MethodInvocation MemberReference foundOp getName getFacade warn IfStatement BinaryOperation || BinaryOperation == MemberReference rp Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference rp getType getFacade Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "WARNING: supposing return type void!" warn ReturnStatement ClassCreator ReferenceType ArgoAny Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation Model MethodInvocation MemberReference rp getType getFacade ReturnStatement MethodInvocation MemberReference returnType getOclRepresentation	1
MethodDeclaration Modifier public ReferenceType Object getElementImport ReturnStatement ClassReference ReferenceType ElementImport	0
MethodDeclaration Modifier protected ReferenceType JTable getTable ReturnStatement MemberReference table	0
MethodDeclaration Modifier public BasicType boolean isAInteractionInstanceSet FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getName	0
MethodDeclaration Modifier public ReferenceType Object getClassifier ReturnStatement ClassReference ReferenceType Classifier	0
MethodDeclaration Modifier public addTranslation FormalParameter Modifier final ReferenceType String originalClassName FormalParameter Modifier final ReferenceType String newClassName StatementExpression MethodInvocation CLASS_TRANSLATIONS MemberReference originalClassName MemberReference newClassName put	0
MethodDeclaration Modifier private ReferenceType Object countNodesAndEdges FormalParameter ReferenceType Diagram d LocalVariableDeclaration BasicType int VariableDeclarator numNodes MethodInvocation d MethodInvocation size getNodes LocalVariableDeclaration BasicType int VariableDeclarator numEdges MethodInvocation d MethodInvocation size getEdges LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MethodInvocation Integer MemberReference numNodes valueOf MethodInvocation Integer MemberReference numEdges valueOf ReturnStatement MethodInvocation Translator Literal "dialog.nodes-and-edges" MemberReference msgArgs	0
MethodDeclaration Modifier public BasicType boolean isA FormalParameter ReferenceType String metatypeName FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType MofClass VariableDeclarator metaObject Cast ReferenceType MofClass Cast ReferenceType RefObject MemberReference element ReturnStatement BinaryOperation && BinaryOperation != MemberReference metatypeName Literal null MethodInvocation metatypeName MethodInvocation metaObject getName equals	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MethodInvocation getTarget getAllPossibleImports getModelManagementHelper addAll ReturnStatement MemberReference list	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType PackageableElement FormalParameter ReferenceType Object pack IfStatement BinaryOperation instanceof MemberReference pack ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType Namespace MemberReference pack	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Constraint getConstraints FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public BasicType int getIndexOf FormalParameter ReferenceType Object o ReturnStatement MethodInvocation objects MemberReference o indexOf	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getLinkEnds MethodInvocation MemberReference element contains getFacade	0
MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object node IfStatement BinaryOperation instanceof MemberReference node ReferenceType ToDoList BlockStatement ReturnStatement Literal false IfStatement BinaryOperation > MethodInvocation MemberReference node getChildCount Literal 0 BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier private ReferenceType String generateParameterChangeability FormalParameter ReferenceType Object par LocalVariableDeclaration BasicType int VariableDeclarator parType MethodInvocation MemberReference par getAttributeModifierType IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference parType Literal - 1 BinaryOperation != MemberReference parType MemberReference NORMAL_MOD BinaryOperation != MethodInvocation MethodInvocation MemberReference par getKind getFacade Literal null MethodInvocation MethodInvocation MethodInvocation MethodInvocation getInParameter getDirectionKind equals getFacade BlockStatement ReturnStatement Literal "const " ReturnStatement Literal ""	1
MethodDeclaration Modifier public setActivator FormalParameter ReferenceType Object ames FormalParameter ReferenceType Object anactivator StatementExpression MethodInvocation impl MemberReference ames MemberReference anactivator setActivator	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setLineColor	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object residence ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public Annotation Override BasicType boolean getUseTrapRect ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Constraint createConstraint ReturnStatement MethodInvocation createConstraint	0
MethodDeclaration Modifier protected textEdited FormalParameter ReferenceType FigText ft IfStatement BinaryOperation == MemberReference ft MemberReference nameFig BlockStatement IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation notationProviderName MethodInvocation getOwner MethodInvocation ft getText parse StatementExpression MethodInvocation ft MethodInvocation notationProviderName MethodInvocation getOwner MethodInvocation getNotationSettings toString setText	0
MethodDeclaration Modifier private setLookAndFeel FormalParameter ReferenceType String lafClass TryStatement IfStatement BinaryOperation && BinaryOperation == MemberReference lafClass Literal null BinaryOperation != MemberReference defaultLafClass Literal null BlockStatement StatementExpression MethodInvocation UIManager MemberReference defaultLafClass setLookAndFeel BlockStatement StatementExpression MethodInvocation UIManager MemberReference lafClass setLookAndFeel CatchClause CatchClauseParameter UnsupportedLookAndFeelException e StatementExpression MethodInvocation LOG MemberReference e error CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation LOG MemberReference e error CatchClause CatchClauseParameter InstantiationException e StatementExpression MethodInvocation LOG MemberReference e error CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation LOG MemberReference e error	1
MethodDeclaration Modifier private ReferenceType String generateOperation FormalParameter ReferenceType Object op FormalParameter BasicType boolean documented LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" LocalVariableDeclaration BasicType boolean VariableDeclarator isDestructor Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation Model MethodInvocation MemberReference op getOwner getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr MethodInvocation Model MethodInvocation MemberReference op getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator clsName MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference op getOwner getFacade getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator tagStr Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator tag MethodInvocation Model MethodInvocation MemberReference op Literal "override" getTaggedValueValue getFacade IfStatement Literal MethodInvocation MemberReference tag equals "true" BlockStatement StatementExpression Assignment MemberReference tagStr Literal " override " = IfStatement MethodInvocation Model MethodInvocation MemberReference op Literal "destroy" hasStereotype getExtensionMechanismsHelper BlockStatement StatementExpression Assignment MemberReference nameStr BinaryOperation + Literal "~" MemberReference nameStr = StatementExpression Assignment MemberReference isDestructor Literal true = LocalVariableDeclaration ReferenceType List VariableDeclarator rps MethodInvocation Model MethodInvocation MemberReference op getReturnParameters getCoreHelper IfStatement BinaryOperation > MethodInvocation rps size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Multiple return parameters not supported" LocalVariableDeclaration ReferenceType Object VariableDeclarator rp Literal null IfStatement BinaryOperation == MethodInvocation rps size Literal 1 BlockStatement StatementExpression Assignment MemberReference rp MethodInvocation rps Literal 0 get = LocalVariableDeclaration ReferenceType List VariableDeclarator params ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference op getParameters getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator returnDoc BinaryOperation + BinaryOperation + MethodInvocation MemberReference rp Literal "/// <returns>" Literal "/// " Literal "/// </returns>" generateConstraintEnrichedDocComment Literal "\n" MemberReference INDENT StatementExpression MethodInvocation params MemberReference rp remove IfStatement MemberReference documented BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + MethodInvocation MemberReference op Literal "/// <summary>" Literal "/// " Literal "/// </summary>" generateConstraintEnrichedDocComment Literal "\n" MemberReference INDENT += ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator p MemberReference params BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + MethodInvocation MemberReference p BinaryOperation + BinaryOperation + Literal "/// <param name=\"" MethodInvocation Model MethodInvocation MemberReference p getName getFacade Literal "\">" Literal "/// " Literal "/// </param>" generateConstraintEnrichedDocComment Literal "\n" MemberReference INDENT += StatementExpression Assignment MemberReference s MemberReference returnDoc += IfStatement BinaryOperation && MethodInvocation ! Model getFacade MemberReference ! isDestructor BlockStatement StatementExpression Assignment MemberReference s MethodInvocation MemberReference op generateAbstractness += StatementExpression Assignment MemberReference s MethodInvocation MemberReference op generateScope += StatementExpression Assignment MemberReference s MethodInvocation MemberReference op generateChangeability += StatementExpression Assignment MemberReference s MethodInvocation MemberReference op generateVisibility += StatementExpression Assignment MemberReference s MemberReference tagStr += IfStatement BinaryOperation != MemberReference rp Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation Model MethodInvocation MemberReference rp getType getFacade IfStatement BinaryOperation && BinaryOperation == MemberReference returnType Literal null MethodInvocation ! nameStr MemberReference clsName equals BlockStatement StatementExpression Assignment MemberReference s Literal " void " += IfStatement BinaryOperation != MemberReference returnType Literal null BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + Literal " " MethodInvocation MemberReference returnType generateClassifierRef Literal " " += StatementExpression Assignment MemberReference s BinaryOperation + MemberReference nameStr Literal "(" += LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator p MemberReference params BlockStatement IfStatement MemberReference ! first BlockStatement StatementExpression Assignment MemberReference s Literal ", " += StatementExpression Assignment MemberReference s MethodInvocation MemberReference p generateParameter += StatementExpression Assignment MemberReference first Literal false = StatementExpression Assignment MemberReference s Literal ")" += ReturnStatement MemberReference s	1
MethodDeclaration Modifier public BasicType boolean isAPackage FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlPackage	0
MethodDeclaration Modifier public ReferenceType Include buildInclude FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType Object includingCase IfStatement BinaryOperation || BinaryOperation instanceof MemberReference ReferenceType UseCase BinaryOperation instanceof MemberReference includingCase ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Include VariableDeclarator include MethodInvocation createInclude StatementExpression MethodInvocation include Cast ReferenceType UseCase MemberReference StatementExpression MethodInvocation include Cast ReferenceType UseCase MemberReference includingCase setIncludingCase StatementExpression MethodInvocation MethodInvocation MemberReference include add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the include of the including case that include the case #" StatementExpression MethodInvocation modelImpl MethodInvocation getCommandStack MethodInvocation MemberReference cmd execute getEditingDomain StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference includingCase MemberReference ReturnStatement Cast ReferenceType Include MethodInvocation run MethodInvocation Literal 0 get getParams	0
MethodDeclaration Modifier public FormalParameter ReferenceType Component comp FormalParameter ReferenceType Position position StatementExpression MethodInvocation MemberReference comp MethodInvocation position toString add	0
MethodDeclaration Modifier private ReferenceType JComponent LocalVariableDeclaration Modifier final ReferenceType JTabbedPane VariableDeclarator tab ClassCreator ReferenceType JTabbedPane IfStatement BinaryOperation == MemberReference configPanel Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation ClassCreator ReferenceType GridLayout2 Literal 20 Literal 1 Literal 0 Literal 0 MemberReference GridLayout2 NONE setLayout StatementExpression MethodInvocation ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize add LocalVariableDeclaration ReferenceType JComboBox VariableDeclarator selectedLanguage ClassCreator ReferenceType JComboBox MethodInvocation MethodInvocation keySet MethodInvocation toArray getModules StatementExpression MethodInvocation selectedLanguage ClassCreator ReferenceType MemberReference tab addActionListener StatementExpression MethodInvocation MemberReference selectedLanguage add StatementExpression MethodInvocation MemberReference addConfigCheckboxes StatementExpression MethodInvocation MemberReference addDetailLevelButtons StatementExpression MethodInvocation MemberReference addSourceEncoding StatementExpression MethodInvocation tab MemberReference MethodInvocation Translator Literal localize add LocalVariableDeclaration ReferenceType ImportInterface VariableDeclarator current MethodInvocation getCurrentModule IfStatement BinaryOperation != MemberReference current Literal null BlockStatement StatementExpression MethodInvocation tab MethodInvocation getConfigPanelExtension MethodInvocation current getName add StatementExpression Assignment MemberReference configPanel MemberReference tab = ReturnStatement MemberReference configPanel	0
MethodDeclaration Modifier public setItem FormalParameter ReferenceType Object anObject IfStatement Cast ReferenceType UMLComboBoxModel MethodInvocation getModel BlockStatement StatementExpression MethodInvocation editor Cast ReferenceType UMLListCellRenderer2 MethodInvocation getRenderer setText IfStatement BinaryOperation && MemberReference BinaryOperation != MemberReference anObject Literal null StatementExpression MethodInvocation panel MethodInvocation MethodInvocation MemberReference anObject getInstance setIcon IfStatement MethodInvocation Model MethodInvocation MemberReference anObject isAUMLElement getFacade BlockStatement StatementExpression SuperMethodInvocation MethodInvocation Model MethodInvocation MemberReference anObject getName getFacade setItem BlockStatement StatementExpression SuperMethodInvocation MemberReference anObject setItem	1
MethodDeclaration Modifier static ReferenceType String generateExpression FormalParameter ReferenceType Object expr IfStatement MethodInvocation Model MethodInvocation MemberReference expr isAExpression getFacade BlockStatement ReturnStatement MethodInvocation Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade generateUninterpreted IfStatement MethodInvocation Model MethodInvocation MemberReference expr getFacade BlockStatement ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade generateExpression ReturnStatement Literal ""	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType Object include IfStatement BinaryOperation instanceof MemberReference ReferenceType UseCase BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation instanceof MemberReference include ReferenceType Include BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType UseCase MemberReference StatementExpression MethodInvocation modelImpl MethodInvocation getCommandStack MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Add the include to the case #" MemberReference include MemberReference execute getEditingDomain	0
MethodDeclaration Modifier public BasicType boolean retainAll FormalParameter ReferenceType Collection TypeArgument ? arg0 ReturnStatement MethodInvocation list MemberReference arg0 retainAll	0
MethodDeclaration Modifier public BasicType boolean isConnectionValid FormalParameter ReferenceType Object connectionType FormalParameter ReferenceType Object fromElement FormalParameter ReferenceType Object toElement FormalParameter BasicType boolean checkWFR IfStatement MethodInvocation Model MethodInvocation MemberReference fromElement isReadOnly getModelManagementHelper BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Class TypeArgument ? VariableDeclarator validItems MethodInvocation validConnectionMap MemberReference connectionType get IfStatement BinaryOperation == MemberReference validItems Literal null BlockStatement ReturnStatement Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator modeElementPair MemberReference validItems BlockStatement IfStatement BinaryOperation && MemberReference ArraySelector Literal 0 MethodInvocation MemberReference fromElement isInstance modeElementPair MemberReference ArraySelector Literal 1 MethodInvocation MemberReference toElement isInstance modeElementPair BlockStatement IfStatement MemberReference checkWFR BlockStatement ReturnStatement MethodInvocation Cast ReferenceType Class TypeArgument ? MemberReference connectionType Cast ReferenceType ModelElement MemberReference fromElement Cast ReferenceType ModelElement MemberReference toElement isConnectionWellformed BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public projectSaved FormalParameter ReferenceType ArgoStatusEvent e LocalVariableDeclaration ReferenceType String VariableDeclarator status MethodInvocation MessageFormat MethodInvocation Translator Literal localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation e getText format StatementExpression MethodInvocation MemberReference status showStatusOnSwingThread	0
MethodDeclaration Modifier public ReferenceType Signal LocalVariableDeclaration ReferenceType Signal VariableDeclarator mySignal MethodInvocation MethodInvocation getSignal MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference mySignal ReturnStatement MemberReference mySignal	0
MethodDeclaration Modifier public addDeploymentLocation FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object node ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier private createLabel FormalParameter Modifier final ReferenceType Object target FormalParameter Modifier final ReferenceType PanelData panelData FormalParameter Modifier final ReferenceType panel LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MemberReference target getName getMetaTypes LocalVariableDeclaration Modifier final ReferenceType ToolBarFactory VariableDeclarator tbf ClassCreator ReferenceType ToolBarFactory ArrayCreator ReferenceType Object Literal 0 StatementExpression MethodInvocation tbf Literal true setRollover LocalVariableDeclaration Modifier final ReferenceType JToolBar VariableDeclarator tb MethodInvocation tbf createToolBar LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator label IfStatement MethodInvocation Model MethodInvocation MemberReference target isAPseudostate getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator pseudostateKind MethodInvocation Model MethodInvocation MemberReference target getKind getFacade StatementExpression Assignment MemberReference label MethodInvocation Model MethodInvocation MemberReference pseudostateKind getName getFacade = BlockStatement StatementExpression Assignment MemberReference label MemberReference = StatementExpression MethodInvocation tb ClassCreator ReferenceType JLabel MemberReference label MethodInvocation MemberReference label lookupIconResource MemberReference JLabel LEFT add IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isReadOnly getModelManagementHelper BlockStatement StatementExpression MethodInvocation tb ClassCreator ReferenceType NavigateUpAction MemberReference target add IfStatement MethodInvocation panelData isSiblingNavigation BlockStatement StatementExpression MethodInvocation tb ClassCreator ReferenceType NavigatePreviousAction MemberReference target add StatementExpression MethodInvocation tb ClassCreator ReferenceType NavigateNextAction MemberReference target add StatementExpression MethodInvocation tb ClassCreator ReferenceType ActionDeleteModelElements add StatementExpression MethodInvocation tb ClassCreator ReferenceType ActionNewStereotype add StatementExpression MethodInvocation MemberReference target MemberReference tb MethodInvocation panelData getNewChildElements addCreateButtons LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MemberReference target getModelElementContainer getFacade StatementExpression MethodInvocation MemberReference parent MemberReference tb MethodInvocation panelData getNewSiblingElements addCreateButtons StatementExpression MethodInvocation panel MemberReference tb add	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType String name ClassifierNotFoundException ReturnStatement MethodInvocation MemberReference name Literal false get	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae LocalVariableDeclaration ReferenceType PerspectiveConfigurator VariableDeclarator ncd ClassCreator ReferenceType PerspectiveConfigurator StatementExpression MethodInvocation ncd Literal true setVisible	0
MethodDeclaration Modifier private ReferenceType Fig determineFigTarget FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference target ReferenceType Fig BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation p MemberReference target findFigsForMember IfStatement BinaryOperation || BinaryOperation == MemberReference col Literal null MethodInvocation col isEmpty BlockStatement StatementExpression Assignment MemberReference target Literal null = BlockStatement StatementExpression Assignment MemberReference target MethodInvocation col MethodInvocation next iterator = ReturnStatement TernaryExpression BinaryOperation instanceof MemberReference target ReferenceType Fig Cast ReferenceType Fig MemberReference target Literal null	1
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal "misc.use-case.extension-point" localize	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_60 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal - 8070450533321761824L Literal 4611686018410610711L Literal 16128L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae IfStatement BinaryOperation != MemberReference agg Literal null BlockStatement StatementExpression MethodInvocation MemberReference ae oldActionPerformed BlockStatement StatementExpression SuperMethodInvocation MemberReference ae actionPerformed IfStatement BinaryOperation == MemberReference aggr MemberReference BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd1 MethodInvocation Model MethodInvocation getAggregate getAggregationKind setAggregation2 getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd2 MethodInvocation Model MethodInvocation getAggregationKind setAggregation2 getCoreHelper IfStatement BinaryOperation == MemberReference aggr MemberReference BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd1 MethodInvocation Model MethodInvocation getAggregationKind setAggregation2 getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd2 MethodInvocation Model MethodInvocation getAggregate getAggregationKind setAggregation2 getCoreHelper IfStatement BinaryOperation == MemberReference aggr MemberReference BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd1 MethodInvocation Model MethodInvocation getComposite getAggregationKind setAggregation2 getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd2 MethodInvocation Model MethodInvocation getAggregationKind setAggregation2 getCoreHelper IfStatement BinaryOperation == MemberReference aggr MemberReference BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd1 MethodInvocation Model MethodInvocation getAggregationKind setAggregation2 getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd2 MethodInvocation Model MethodInvocation getComposite getAggregationKind setAggregation2 getCoreHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd1 MethodInvocation Model MethodInvocation getAggregationKind setAggregation2 getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference associationEnd2 MethodInvocation Model MethodInvocation getAggregationKind setAggregation2 getCoreHelper	0
MethodDeclaration Modifier public Annotation Override ReferenceType String instructions ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public removeLiteral FormalParameter ReferenceType Object enu FormalParameter ReferenceType Object literal TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference enu ReferenceType Enumeration BinaryOperation instanceof MemberReference literal ReferenceType EnumerationLiteral BlockStatement StatementExpression Cast ReferenceType Enumeration MemberReference enu ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "enumeration: " MemberReference enu Literal " or " MemberReference literal	0
MethodDeclaration Modifier private setTargetMoreInfo IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mi MethodInvocation getText StatementExpression MethodInvocation target MemberReference mi setMoreInfoURL	0
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType BehavioralFeature MemberReference handle	0
MethodDeclaration Modifier public Annotation Deprecated BasicType int getDefaultStereotypeViewValue ReturnStatement MethodInvocation diaDefault	0
MethodDeclaration Modifier public ReferenceType Collection getBehaviors FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines MethodInvocation getABehaviorContext MethodInvocation Cast ReferenceType ModelElement MemberReference handle MemberReference handle getRefOutermostPackage CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getProjectSettingsTabs LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType GUISettingsTabInterface StatementExpression MethodInvocation result ClassCreator ReferenceType SettingsTabNotation MemberReference Argo add ReturnStatement MemberReference result	1
MethodDeclaration ReferenceType Color getActiveLinkColor ReturnStatement MemberReference colorPressed	0
MethodDeclaration Modifier public endElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String localname FormalParameter ReferenceType String name SAXException IfStatement MethodInvocation MemberReference name isElementOfInterest BlockStatement LocalVariableDeclaration ReferenceType XMLElement VariableDeclarator e MemberReference ArraySelector MemberReference -- nElements elements IfStatement MethodInvocation LOG isDebugEnabled BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "END: " MethodInvocation e getName Literal " [" MethodInvocation e getText Literal "] " MemberReference e Literal "\n" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation e getNumAttributes MemberReference ++ i BlockStatement StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " ATT: " MethodInvocation e MemberReference i getAttributeName Literal " " MethodInvocation e MemberReference i getAttributeValue Literal "\n" append StatementExpression MethodInvocation LOG MemberReference buf debug StatementExpression MethodInvocation MemberReference e handleEndElement	1
MethodDeclaration Modifier public BasicType int getIndexOfChild FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference child indexOf getDecisionList IfStatement BinaryOperation instanceof MemberReference parent ReferenceType BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator candidates ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ToDoItem LocalVariableDeclaration ReferenceType VariableDeclarator dec Cast ReferenceType MemberReference parent LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator itemList MethodInvocation Designer MethodInvocation getToDoList MethodInvocation theDesigner SynchronizedStatement MemberReference itemList ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference itemList BlockStatement IfStatement MethodInvocation item MethodInvocation MemberReference dec supports getPoster BlockStatement StatementExpression MethodInvocation candidates MemberReference item add ReturnStatement MethodInvocation candidates MemberReference child indexOf ReturnStatement Literal - 1	1
MethodDeclaration Modifier public BasicType float getWeight ReturnStatement MemberReference weight	0
MethodDeclaration Modifier public setMaximumProgress FormalParameter Modifier final BasicType int i StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation progress MemberReference i StatementExpression MethodInvocation Literal true setVisible invokeLater	1
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase DESCRIPTION ReturnStatement Literal "The notation subsystem" SwitchStatementCase AUTHOR ReturnStatement Literal "The ArgoUML Team" SwitchStatementCase ReturnStatement Literal SwitchStatementCase DOWNLOADSITE ReturnStatement Literal "http://argouml.tigris.org" SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public removeExtend FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object extend TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference elem ReferenceType UseCase BinaryOperation instanceof MemberReference extend ReferenceType Extend BlockStatement StatementExpression Cast ReferenceType UseCase MemberReference elem ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference elem ReferenceType BinaryOperation instanceof MemberReference extend ReferenceType Extend BlockStatement StatementExpression Cast ReferenceType Extend MemberReference extend ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "elem: " MemberReference elem Literal " or extend: " MemberReference extend	1
MethodDeclaration Modifier protected ReferenceType String getLocalizedString FormalParameter ReferenceType String suffix ReturnStatement MethodInvocation MethodInvocation MemberReference suffix getLocalizedString	0
MethodDeclaration Modifier public ReferenceType Object addOperation FormalParameter BasicType short modifiers FormalParameter ReferenceType String returnType FormalParameter ReferenceType String name FormalParameter ReferenceType List TypeArgument ReferenceType ParameterDeclaration parameters FormalParameter ReferenceType String javadoc ReturnStatement MethodInvocation MemberReference modifiers MemberReference EMPTY_STRING_LIST MemberReference returnType MemberReference name MemberReference parameters MemberReference javadoc Literal false addOperation	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isATransition getFacade BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference target setTarget StatementExpression SuperMethodInvocation MemberReference e actionPerformed	0
MethodDeclaration Modifier public final ReferenceType String qualified_type RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType String VariableDeclarator q Literal "" LocalVariableDeclaration ReferenceType Token VariableDeclarator id Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator qitem Literal "" StatementExpression Assignment MemberReference s MethodInvocation scope_override = StatementExpression Assignment MemberReference id MethodInvocation Literal 1 LT = StatementExpression MethodInvocation MemberReference ID match BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LESSTHAN MethodInvocation _tokenSet_24 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation MemberReference LESSTHAN match StatementExpression MethodInvocation template_argument_list StatementExpression MethodInvocation MemberReference GREATERTHAN match IfStatement BinaryOperation && MethodInvocation _tokenSet_25 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_26 MethodInvocation Literal 2 LA member BlockStatement BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression Assignment MemberReference qitem MemberReference s = StatementExpression Assignment MemberReference qitem BinaryOperation + MemberReference qitem MethodInvocation id getText = StatementExpression Assignment MemberReference q MemberReference qitem = ReturnStatement MemberReference q	1
MethodDeclaration Modifier private ReferenceType String getOrderingName FormalParameter ReferenceType Object orderingKind IfStatement BinaryOperation == MemberReference orderingKind Literal null BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference orderingKind getName getFacade Literal null BlockStatement ReturnStatement Literal "" IfStatement Literal MethodInvocation MethodInvocation Model MethodInvocation MemberReference orderingKind getName getFacade equals "" BlockStatement ReturnStatement Literal "" IfStatement Literal MethodInvocation MethodInvocation Model MethodInvocation MemberReference orderingKind getName getFacade equals "unordered" BlockStatement ReturnStatement Literal "" ReturnStatement BinaryOperation + BinaryOperation + Literal "{" MethodInvocation Model MethodInvocation MemberReference orderingKind getName getFacade Literal "}"	1
MethodDeclaration Modifier public ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator internalDim MethodInvocation MethodInvocation getMinimumSize getInternal LocalVariableDeclaration BasicType int VariableDeclarator h BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MemberReference nameDim height MemberReference MemberReference internalDim height MemberReference LocalVariableDeclaration BasicType int VariableDeclarator w MethodInvocation Math BinaryOperation + MemberReference nameDim width BinaryOperation * Literal 2 MemberReference MARGIN BinaryOperation + MemberReference internalDim width BinaryOperation * Literal 2 MemberReference MARGIN max ReturnStatement ClassCreator ReferenceType Dimension MemberReference w MemberReference h	0
MethodDeclaration Modifier public ReferenceType Collection getSourceFlows FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference actionMAssociation Literal null BlockStatement StatementExpression Assignment MemberReference actionMAssociation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal "edgeClass" MethodInvocation Model MethodInvocation getAssociation getMetaTypes Literal "button.new-association" = ReturnStatement MemberReference actionMAssociation	0
MethodDeclaration Modifier public BasicType int getTypeOrderNumer ReturnStatement TernaryExpression BinaryOperation == MethodInvocation first Literal null SuperMethodInvocation getTypeOrderNumer MethodInvocation MethodInvocation getTypeOrderNumer first	1
MethodDeclaration Modifier private static ReferenceType Object getFirstItemOrNull FormalParameter ReferenceType Collection c IfStatement BinaryOperation == MethodInvocation c size Literal 0 BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference c ReferenceType List BlockStatement ReturnStatement Cast ReferenceType List MemberReference c ReturnStatement MethodInvocation c MethodInvocation next iterator	1
MethodDeclaration Modifier public ReferenceType String getLabelName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public act FormalParameter ReferenceType File f IOException IfStatement BinaryOperation && MethodInvocation ! f isDirectory MethodInvocation ! f MethodInvocation Literal ".bak" endsWith getName BlockStatement LocalVariableDeclaration ReferenceType FileReader VariableDeclarator fr ClassCreator ReferenceType FileReader MemberReference f LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator bfr ClassCreator ReferenceType BufferedReader MemberReference fr TryStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer Cast BasicType int MethodInvocation f length LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation bfr readLine DoStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression MethodInvocation result MemberReference line append StatementExpression Assignment MemberReference line MethodInvocation bfr readLine = IfStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression MethodInvocation result Literal '\n' append StatementExpression MethodInvocation ret ClassCreator ReferenceType SourceUnit MethodInvocation f MethodInvocation MemberReference prefix substring toString MethodInvocation result toString add StatementExpression MethodInvocation bfr close StatementExpression MethodInvocation fr close	1
MethodDeclaration Modifier public ReferenceType Action getAction ReturnStatement ClassCreator ReferenceType SetAction	0
MethodDeclaration Modifier public ReferenceType Namespace LocalVariableDeclaration ReferenceType StringNamespace VariableDeclarator result Literal null TryStatement StatementExpression Assignment MemberReference result Cast ReferenceType StringNamespace This MethodInvocation clone = CatchClause CatchClauseParameter CloneNotSupportedException e StatementExpression MethodInvocation LOG MemberReference e debug ReturnStatement Literal null StatementExpression MethodInvocation result ReturnStatement MemberReference result	0
MethodDeclaration Modifier public BasicType boolean isCompartmentVisible FormalParameter ReferenceType Object metaType LocalVariableDeclaration ReferenceType FigCompartment VariableDeclarator f MethodInvocation MemberReference metaType getCompartment IfStatement BinaryOperation == MemberReference f Literal null BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation f isVisible	0
MethodDeclaration Modifier public BasicType boolean isVerboseDocs ReturnStatement MemberReference verboseDocs	0
MethodDeclaration Modifier public ReferenceType Enumeration FormalParameter ReferenceType Object handle ReturnStatement Cast ReferenceType EnumerationLiteral MemberReference handle	0
MethodDeclaration Modifier public static FormalParameter ReferenceType ArgoEvent event StatementExpression MethodInvocation SINGLETON MemberReference event doFireEvent	0
MethodDeclaration Modifier public ReferenceType Font getFontBoldItalic IfStatement BinaryOperation == MemberReference fontBoldItalic Literal null BlockStatement ReturnStatement MethodInvocation parent getFontBoldItalic ReturnStatement MemberReference fontBoldItalic	0
MethodDeclaration Modifier public updateSubTask FormalParameter Modifier final ReferenceType String action StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation progressLabel MemberReference action setText invokeLater	1
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getConnections getFacade setAllElements	0
MethodDeclaration Modifier private ReferenceType JFileChooser IfStatement BinaryOperation == MemberReference fileChooser Literal null BlockStatement StatementExpression Assignment MemberReference fileChooser ClassCreator ReferenceType JFileChooser = StatementExpression MethodInvocation fileChooser ClassCreator ReferenceType setFileFilter ReturnStatement MemberReference fileChooser	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent e StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation getSelectedIndex getList Literal 0 setEnabled	0
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public Annotation Override updateListener FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType PropertyChangeEvent pce IfStatement BinaryOperation && BinaryOperation == MethodInvocation pce getSource MemberReference modelElement BinaryOperation || BinaryOperation || Literal MethodInvocation MethodInvocation pce getPropertyName equals "stereotype" Literal "taggedValue" Literal "type" BlockStatement IfStatement BinaryOperation instanceof MemberReference pce ReferenceType AddAssociationEvent BlockStatement StatementExpression MethodInvocation MethodInvocation pce getNewValue addElementListener IfStatement BinaryOperation instanceof MemberReference pce ReferenceType RemoveAssociationEvent BlockStatement StatementExpression MethodInvocation MethodInvocation pce getOldValue removeElementListener	1
MethodDeclaration Modifier public Annotation Override removeFigEdge FormalParameter ReferenceType FigEdge edge StatementExpression SuperMethodInvocation MemberReference edge removeFigEdge IfStatement BinaryOperation instanceof MemberReference edge ReferenceType FigMessage BlockStatement LocalVariableDeclaration Modifier final ReferenceType FigMessage VariableDeclarator figMessage Cast ReferenceType FigMessage MemberReference edge StatementExpression MethodInvocation MemberReference figMessage StatementExpression MethodInvocation createActivations	0
MethodDeclaration Modifier private ReferenceType getCorePackage ReturnStatement MethodInvocation modelImpl MethodInvocation getCore getUmlPackage	0
MethodDeclaration Modifier public ReferenceType Stereotype createStereotype LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression MethodInvocation MethodInvocation MethodInvocation createStereotype add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal a StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack ReturnStatement Cast ReferenceType Stereotype MethodInvocation run MethodInvocation Literal 0 get getParams	0
MethodDeclaration Modifier private BasicType boolean isUniqueLanguage FormalParameter ReferenceType String tabValues FormalParameter ReferenceType String newLanguage LocalVariableDeclaration BasicType boolean VariableDeclarator bContinue Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation && BinaryOperation < MemberReference i MemberReference tabValues length MemberReference bContinue Assignment MemberReference i Literal 2 += BlockStatement IfStatement BinaryOperation != MemberReference i MemberReference currentIndex BlockStatement StatementExpression Assignment MemberReference bContinue MemberReference ! ArraySelector MemberReference i MethodInvocation MemberReference newLanguage equals tabValues = ReturnStatement MemberReference bContinue	1
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean overwrite FormalParameter Modifier final ReferenceType File file FormalParameter Modifier final BasicType boolean exit IfStatement MethodInvocation ! PersistenceManager MethodInvocation MethodInvocation ArgoFrame getFrame MemberReference overwrite MemberReference file getInstance BlockStatement ReturnStatement IfStatement This MethodInvocation MemberReference file isFileReadonly BlockStatement StatementExpression MethodInvocation JOptionPane This MethodInvocation Translator Literal "optionpane.save-project-read-only" localize MethodInvocation Translator Literal "optionpane.save-project-read-only-title" localize MemberReference JOptionPane INFORMATION_MESSAGE showMessageDialog ReturnStatement LocalVariableDeclaration ReferenceType SaveSwingWorker VariableDeclarator worker ClassCreator ReferenceType SaveSwingWorker MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager MemberReference file MemberReference exit StatementExpression MethodInvocation LOG Literal "Starting save thread" info StatementExpression MethodInvocation worker start	1
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener FormalParameter ReferenceType NotificationFilter filter FormalParameter ReferenceType Object handback ListenerNotFoundException StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference handback removeNotificationListener	0
MethodDeclaration Modifier public BasicType boolean isAAggregationKind FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AggregationKind	0
MethodDeclaration Modifier public ReferenceType Object clone LocalVariableDeclaration ReferenceType FigCompositeState VariableDeclarator figClone Cast ReferenceType FigCompositeState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig StatementExpression Assignment MemberReference figClone Cast ReferenceType FigLine MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setInternal ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType String VariableDeclarator ret Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator action MethodInvocation Model MethodInvocation MemberReference modelElement getEntry getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference action isACallAction getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator operation MethodInvocation Model MethodInvocation MemberReference action getOperation getFacade IfStatement BinaryOperation != MemberReference operation Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator n MethodInvocation Model MethodInvocation MemberReference operation getName getFacade IfStatement BinaryOperation != MemberReference n Literal null BlockStatement StatementExpression Assignment MemberReference ret Cast ReferenceType String MemberReference n = StatementExpression Assignment MemberReference n MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference operation getOwner getFacade getName getFacade = IfStatement BinaryOperation && BinaryOperation != MemberReference n Literal null MethodInvocation ! n Literal "" equals BlockStatement StatementExpression Assignment MemberReference ret BinaryOperation + BinaryOperation + Literal "\n(" Cast ReferenceType String MemberReference n Literal ")" += IfStatement BinaryOperation == MemberReference ret Literal null BlockStatement ReturnStatement Literal "" ReturnStatement MemberReference ret	0
MethodDeclaration Modifier protected ReferenceType Action getActionDestroyAction IfStatement BinaryOperation == MemberReference actionDestroyAction Literal null BlockStatement StatementExpression Assignment MemberReference actionDestroyAction MethodInvocation = ReturnStatement MemberReference actionDestroyAction	0
MethodDeclaration Modifier private BasicType boolean isVisiblyOwned FormalParameter Modifier final ReferenceType ModelElement element FormalParameter Modifier final ReferenceType GeneralizableElement ge FormalParameter Modifier final ReferenceType Set TypeArgument ReferenceType ModelElement dupCheck AssertStatement BinaryOperation != MemberReference dupCheck Literal null AssertStatement BinaryOperation != MemberReference ge Literal null AssertStatement BinaryOperation != MemberReference element Literal null LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator alreadyChecked MethodInvocation ! dupCheck MemberReference ge add IfStatement MemberReference alreadyChecked BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Cyclic generalization found " MethodInvocation MemberReference ge getFullName warn ReturnStatement Literal false ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType Generalization VariableDeclarator g MethodInvocation ge getGeneralization BlockStatement LocalVariableDeclaration Modifier final ReferenceType GeneralizableElement VariableDeclarator parent MethodInvocation g getParent IfStatement BinaryOperation && BinaryOperation instanceof MemberReference parent ReferenceType Namespace MethodInvocation MemberReference element Cast ReferenceType Namespace MemberReference parent isVisiblyOwned BlockStatement ReturnStatement Literal true ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType Generalization VariableDeclarator g MethodInvocation ge getGeneralization BlockStatement IfStatement MethodInvocation MemberReference element MethodInvocation g getParent MemberReference dupCheck isVisiblyOwned BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier protected ReferenceType String getProperty ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getName getFacade	0
MethodDeclaration Modifier private ReferenceType AssociationEnd buildAssociationEndInternal FormalParameter ReferenceType Object assoc FormalParameter ReferenceType String name FormalParameter ReferenceType Object type FormalParameter ReferenceType Object stereo FormalParameter BasicType boolean navigable FormalParameter ReferenceType Object order FormalParameter ReferenceType Object aggregation FormalParameter ReferenceType Object scope FormalParameter ReferenceType Object changeable FormalParameter ReferenceType Object visibility IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference assoc Literal null BinaryOperation instanceof MemberReference assoc ReferenceType UmlAssociation BinaryOperation == MemberReference type Literal null BinaryOperation instanceof MemberReference type ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "either type or association " Literal "are null" IfStatement BinaryOperation && BinaryOperation != MemberReference stereo Literal null BinaryOperation instanceof MemberReference stereo ReferenceType Stereotype BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Stereotype" IfStatement BinaryOperation && BinaryOperation != MemberReference order Literal null BinaryOperation instanceof MemberReference order ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "OrderingKind" IfStatement BinaryOperation && BinaryOperation != MemberReference aggregation Literal null BinaryOperation instanceof MemberReference aggregation ReferenceType AggregationKind BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "AggregationKind" IfStatement BinaryOperation && BinaryOperation != MemberReference scope Literal null BinaryOperation instanceof MemberReference scope ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "ScopeKind" IfStatement BinaryOperation && BinaryOperation != MemberReference changeable Literal null BinaryOperation instanceof MemberReference changeable ReferenceType ChangeableKind BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "ChangeableKind" IfStatement BinaryOperation && BinaryOperation != MemberReference visibility Literal null BinaryOperation instanceof MemberReference visibility ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "VisibilityKind" LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator end MethodInvocation StatementExpression MethodInvocation end Cast ReferenceType UmlAssociation MemberReference assoc StatementExpression MethodInvocation end Cast ReferenceType Classifier MemberReference type setParticipant StatementExpression MethodInvocation end MemberReference name setName LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AssociationEnd VariableDeclarator ends Cast ReferenceType UmlAssociation MemberReference assoc IfStatement BinaryOperation >= MethodInvocation ends size Literal 3 BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator e MemberReference ends BlockStatement StatementExpression MethodInvocation e MemberReference AggregationKindEnum AK_NONE setAggregation IfStatement BinaryOperation != MemberReference stereo Literal null BlockStatement StatementExpression MethodInvocation end MethodInvocation clear getStereotype StatementExpression MethodInvocation end MethodInvocation Cast ReferenceType Stereotype MemberReference stereo add getStereotype StatementExpression MethodInvocation end MemberReference navigable setNavigable IfStatement BinaryOperation != MemberReference order Literal null BlockStatement StatementExpression MethodInvocation end Cast ReferenceType MemberReference order BlockStatement StatementExpression MethodInvocation end MemberReference OrderingKindEnum OK_UNORDERED IfStatement BinaryOperation != MemberReference aggregation Literal null BlockStatement StatementExpression MethodInvocation end Cast ReferenceType AggregationKind MemberReference aggregation setAggregation BlockStatement StatementExpression MethodInvocation end MemberReference AggregationKindEnum AK_NONE setAggregation IfStatement BinaryOperation != MemberReference scope Literal null BlockStatement StatementExpression MethodInvocation end Cast ReferenceType MemberReference scope setTargetScope BlockStatement StatementExpression MethodInvocation end MemberReference setTargetScope IfStatement BinaryOperation != MemberReference changeable Literal null BlockStatement StatementExpression MethodInvocation end Cast ReferenceType ChangeableKind MemberReference changeable setChangeability BlockStatement StatementExpression MethodInvocation end MemberReference setChangeability IfStatement BinaryOperation != MemberReference visibility Literal null BlockStatement StatementExpression MethodInvocation end Cast ReferenceType MemberReference visibility setVisibility BlockStatement StatementExpression MethodInvocation end MemberReference setVisibility ReturnStatement MemberReference end	1
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getClientDependencies getFacade setAllElements	0
MethodDeclaration Modifier public ReferenceType Object getTop FormalParameter ReferenceType Object sm ReturnStatement MethodInvocation impl MemberReference sm getTop	0
MethodDeclaration Modifier public BasicType int getMinY StatementExpression MethodInvocation LOG Literal = 0" debug ReturnStatement Literal 0	0
MethodDeclaration Modifier private copyActionPerformed FormalParameter ReferenceType ActionEvent e AssertStatement BinaryOperation == MethodInvocation e getSource MemberReference copyButton LocalVariableDeclaration ReferenceType String VariableDeclarator infoText MethodInvocation info getText LocalVariableDeclaration ReferenceType VariableDeclarator contents ClassCreator ReferenceType MemberReference infoText LocalVariableDeclaration ReferenceType Clipboard VariableDeclarator clipboard MethodInvocation MethodInvocation getSystemClipboard getToolkit StatementExpression MethodInvocation clipboard MemberReference contents MemberReference defaultClipboardOwner setContents	1
MethodDeclaration Modifier public delete FormalParameter Modifier final ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType EObject BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of EObject" LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression MethodInvocation EcoreUtil Cast ReferenceType EObject MemberReference elem delete StatementExpression MethodInvocation modelImpl MethodInvocation getCommandStack MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Remove from the model the element #" MemberReference elem execute getEditingDomain	0
MethodDeclaration doCopyMethod FormalParameter ReferenceType Method source FormalParameter ReferenceType Method target LocalVariableDeclaration ReferenceType VariableDeclarator pe MethodInvocation source getBody LocalVariableDeclaration ReferenceType VariableDeclarator oldPe MethodInvocation target getBody IfStatement MethodInvocation ! MemberReference oldPe MemberReference pe equal BlockStatement StatementExpression MethodInvocation target Cast ReferenceType MethodInvocation modelImpl MethodInvocation MethodInvocation pe getLanguage MethodInvocation pe getBody createProcedureExpression getDataTypesFactory setBody IfStatement BinaryOperation != MemberReference oldPe Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference oldPe delete getUmlFactory StatementExpression MethodInvocation MemberReference source MemberReference target doCopyBehavioralFeature	0
MethodDeclaration Modifier public setEnabled FormalParameter BasicType boolean enabled StatementExpression MethodInvocation theComboBox MemberReference enabled setEnabled StatementExpression MethodInvocation theComboBox MemberReference enabled	0
MethodDeclaration Modifier private ReferenceType String generateKind FormalParameter ReferenceType Object kind LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator s ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || BinaryOperation == MemberReference kind Literal null BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getInParameter getDirectionKind BlockStatement StatementExpression MethodInvocation s Literal "" append IfStatement BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getInOutParameter getDirectionKind BlockStatement StatementExpression MethodInvocation s Literal "inout" append IfStatement BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getReturnParameter getDirectionKind BlockStatement IfStatement BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getOutParameter getDirectionKind BlockStatement StatementExpression MethodInvocation s Literal "out" append ReturnStatement MethodInvocation s toString	1
MethodDeclaration Modifier protected setContext FormalParameter ReferenceType Context c StatementExpression Assignment This MemberReference context MemberReference c =	0
MethodDeclaration Modifier private static getContents FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType ModelElement results FormalParameter Modifier final ReferenceType UmlPackage pkg LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ElementImport VariableDeclarator c MethodInvocation pkg getElementImport ForStatement EnhancedForControl VariableDeclaration ReferenceType ElementImport VariableDeclarator ei MemberReference c BlockStatement StatementExpression MethodInvocation results MethodInvocation ei getImportedElement add StatementExpression MethodInvocation MemberReference results Cast ReferenceType Namespace MemberReference pkg getContents	0
MethodDeclaration Modifier public BasicType int getIndexOfChild FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child ReturnStatement MethodInvocation MethodInvocation MemberReference child indexOf MemberReference parent	0
MethodDeclaration Modifier public BasicType boolean isTopState FormalParameter ReferenceType Object o TryStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType CompositeState VariableDeclarator cs Cast ReferenceType CompositeState MemberReference o ReturnStatement BinaryOperation == MethodInvocation cs getContainer Literal null ReturnStatement Literal false CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter StatementExpression SuperMethodInvocation MemberReference handle MemberReference parameter StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public reset StatementExpression Assignment MemberReference numLines Literal 0 =	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getStateMachine getFacade addElement	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getIncludes MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier static ReferenceType List TypeArgument ReferenceType getAvailableNotations ReturnStatement MethodInvocation Collections MemberReference	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType String VariableDeclarator key MethodInvocation ae getActionCommand ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MethodInvocation Notation getAvailableNotations BlockStatement IfStatement MethodInvocation key MethodInvocation getTitle equals BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager StatementExpression MethodInvocation p MethodInvocation MemberReference setNotationLanguage getProjectSettings BreakStatement	0
MethodDeclaration Modifier public static assignAccelerator FormalParameter ReferenceType JMenuItem menuItem FormalParameter ReferenceType String shortcutKey LocalVariableDeclaration ReferenceType ActionWrapper VariableDeclarator shortcut MethodInvocation shortcutHash MemberReference shortcutKey get IfStatement BinaryOperation != MemberReference shortcut Literal null BlockStatement LocalVariableDeclaration ReferenceType KeyStroke VariableDeclarator keyStroke MethodInvocation shortcut getCurrentShortcut IfStatement BinaryOperation != MemberReference keyStroke Literal null BlockStatement StatementExpression MethodInvocation menuItem MemberReference keyStroke setAccelerator LocalVariableDeclaration ReferenceType KeyStroke VariableDeclarator alternativeKeyStroke MethodInvocation duplicate MemberReference keyStroke get IfStatement BinaryOperation != MemberReference alternativeKeyStroke Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator actionName Cast ReferenceType String MethodInvocation menuItem MethodInvocation MemberReference AbstractAction NAME getValue getAction StatementExpression MethodInvocation menuItem MethodInvocation MemberReference alternativeKeyStroke MemberReference actionName put MemberReference JComponent WHEN_IN_FOCUSED_WINDOW getInputMap StatementExpression MethodInvocation menuItem MethodInvocation MemberReference actionName MethodInvocation menuItem getAction put getActionMap	0
MethodDeclaration Modifier public setRaisedSignals FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection raisedSignals StatementExpression SuperMethodInvocation MemberReference handle MemberReference raisedSignals setRaisedSignals StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation MethodInvocation MethodInvocation add getParams	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal "Parsing in Java not yet supported"	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType getInteractions FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Collaboration BlockStatement ReturnStatement Cast ReferenceType Collaboration MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public ReferenceType getTabPanel IfStatement BinaryOperation == MemberReference table Literal null BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType setLayout StatementExpression Assignment MemberReference table ClassCreator ReferenceType JTable ClassCreator ReferenceType ModuleTableModel = StatementExpression MethodInvocation table MemberReference JTable AUTO_RESIZE_LAST_COLUMN setAutoResizeMode StatementExpression MethodInvocation table Literal true StatementExpression MethodInvocation ClassCreator ReferenceType JScrollPane MemberReference table MemberReference CENTER add LocalVariableDeclaration BasicType int VariableDeclarator labelGap Literal 10 LocalVariableDeclaration BasicType int VariableDeclarator componentGap Literal 5 LocalVariableDeclaration ReferenceType VariableDeclarator top ClassCreator ReferenceType ClassCreator ReferenceType LabelledLayout MemberReference labelGap MemberReference componentGap LocalVariableDeclaration ReferenceType JLabel VariableDeclarator label ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize LocalVariableDeclaration ReferenceType JTextField VariableDeclarator j ClassCreator ReferenceType JTextField StatementExpression Assignment MemberReference MemberReference j = StatementExpression MethodInvocation Literal false setEnabled StatementExpression MethodInvocation label MemberReference setLabelFor StatementExpression MethodInvocation top MemberReference label add StatementExpression MethodInvocation top MemberReference add StatementExpression MethodInvocation MemberReference top MemberReference add ReturnStatement This	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation createNode getCoreFactory	0
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner StatementExpression Assignment MemberReference action MethodInvocation Model MethodInvocation MemberReference newOwner getAction getFacade = LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator listeners ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator action MethodInvocation getAction StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation getOwner Literal "remove" add IfStatement BinaryOperation != MemberReference action Literal null BlockStatement StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference action Literal "isAsynchronous" add TryStatement StatementExpression MethodInvocation MemberReference listeners updateElementListeners CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG Literal "Exception caught" MemberReference e error	1
MethodDeclaration Modifier public ReferenceType Context getContext ReturnStatement MemberReference context	0
MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getSubmachine getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean isAUninterpretedAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType UninterpretedAction	0
MethodDeclaration Modifier private ReferenceType Object buildRealization FormalParameter ReferenceType Object child FormalParameter ReferenceType Object parnt FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType Object VariableDeclarator rel MethodInvocation Model MethodInvocation MemberReference child MemberReference parnt MemberReference namespace buildRealization getCoreFactory ReturnStatement MemberReference rel	1
MethodDeclaration Modifier public removeElement FormalParameter ReferenceType Object o LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation objects MemberReference o indexOf IfStatement BinaryOperation == MethodInvocation MemberReference index getElementAt MemberReference selectedObject BlockStatement IfStatement MemberReference ! BlockStatement IfStatement BinaryOperation == MemberReference index Literal 0 BlockStatement StatementExpression MethodInvocation TernaryExpression BinaryOperation == MethodInvocation getSize Literal 1 Literal null MethodInvocation BinaryOperation + MemberReference index Literal 1 getElementAt setSelectedItem BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation - MemberReference index Literal 1 getElementAt setSelectedItem IfStatement BinaryOperation >= MemberReference index Literal 0 BlockStatement StatementExpression MethodInvocation objects MemberReference index remove StatementExpression MethodInvocation This MemberReference index MemberReference index fireIntervalRemoved	1
MethodDeclaration Modifier protected ReferenceType String getDesc ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement BinaryOperation instanceof MemberReference dm ReferenceType UMLDeploymentDiagram BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	0
MethodDeclaration Modifier public BasicType boolean isActive FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlClass BlockStatement ReturnStatement Cast ReferenceType UmlClass MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean	0
MethodDeclaration Modifier public ReferenceType String getSourceFigNodeId ReturnStatement MemberReference sourceFigNodeId	0
MethodDeclaration Modifier public ReferenceType Object execute LocalVariableDeclaration ReferenceType UMLAddDialog VariableDeclarator dialog ClassCreator ReferenceType UMLAddDialog MethodInvocation MethodInvocation getSelected MethodInvocation getDialogTitle MethodInvocation isMultiSelect MethodInvocation isExclusive LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation dialog MethodInvocation ArgoFrame getFrame showDialog IfStatement BinaryOperation == MemberReference result MemberReference JOptionPane BlockStatement StatementExpression MethodInvocation MethodInvocation dialog getSelected ReturnStatement Literal null	0
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade setAllElements	0
MethodDeclaration Modifier public IfStatement BinaryOperation == MemberReference target Literal null BlockStatement StatementExpression MethodInvocation backButton Literal false setEnabled StatementExpression MethodInvocation nextButton Literal false setEnabled StatementExpression MethodInvocation finishButton Literal false setEnabled StatementExpression MethodInvocation helpButton Literal false setEnabled IfStatement BinaryOperation instanceof MemberReference target ReferenceType ToDoItem BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator tdi Cast ReferenceType ToDoItem MemberReference target LocalVariableDeclaration ReferenceType Wizard VariableDeclarator w MethodInvocation StatementExpression MethodInvocation backButton TernaryExpression BinaryOperation != MemberReference w Literal null MethodInvocation w canGoBack Literal false setEnabled StatementExpression MethodInvocation nextButton TernaryExpression BinaryOperation != MemberReference w Literal null MethodInvocation w Literal false setEnabled StatementExpression MethodInvocation finishButton TernaryExpression BinaryOperation != MemberReference w Literal null MethodInvocation w canFinish Literal false setEnabled IfStatement BinaryOperation || BinaryOperation == MethodInvocation tdi getMoreInfoURL Literal null Literal MethodInvocation MethodInvocation tdi getMoreInfoURL equals "" BlockStatement StatementExpression MethodInvocation helpButton Literal false setEnabled BlockStatement StatementExpression MethodInvocation helpButton Literal true setEnabled BlockStatement ReturnStatement	1
MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int i IfStatement BinaryOperation || BinaryOperation == MemberReference i MemberReference BOTTOM BinaryOperation == MemberReference i MemberReference LEFT BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType String getHeader ReturnStatement MemberReference xmiHeader	0
MethodDeclaration Modifier public ReferenceType List getBehavioralFeatures FormalParameter ReferenceType Object clazz ReturnStatement MethodInvocation impl MemberReference clazz getBehavioralFeatures	0
MethodDeclaration Modifier private ReferenceType String generateSectionTop FormalParameter ReferenceType Object op FormalParameter ReferenceType String localIndent LocalVariableDeclaration ReferenceType String VariableDeclarator id MethodInvocation MemberReference op getUUID ReturnStatement MethodInvocation Section MemberReference id MemberReference localIndent generateTop	0
MethodDeclaration Modifier public static setCritiquingRoot FormalParameter ReferenceType Object d SynchronizedStatement MethodInvocation theDesigner StatementExpression Assignment MemberReference critiquingRoot MemberReference d =	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType UmlAssociation ReturnStatement MethodInvocation MethodInvocation modelImpl getUmlPackage	0
MethodDeclaration Modifier protected ReferenceType Object getTarget ReturnStatement MemberReference target	0
MethodDeclaration Modifier protected Annotation Override removeOtherModelEventListeners FormalParameter ReferenceType Object oldTarget StatementExpression SuperMethodInvocation MemberReference oldTarget removeOtherModelEventListeners StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getNamespace getMetaTypes Literal "ownedElement" removeClassModelEventListener getPump StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getUMLClass getMetaTypes Literal "name" removeClassModelEventListener getPump StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getInterface getMetaTypes Literal "name" removeClassModelEventListener getPump StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getDataType getMetaTypes Literal "name" removeClassModelEventListener getPump	0
MethodDeclaration Modifier public setParent FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parent StatementExpression SuperMethodInvocation MemberReference handle MemberReference parent setParent StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public ReferenceType String areaLabel FormalParameter ReferenceType Element area LocalVariableDeclaration ReferenceType String VariableDeclarator label Literal null IfStatement BinaryOperation != MethodInvocation area Literal "label" getAttribute Literal null BlockStatement StatementExpression Assignment MemberReference label MethodInvocation area Literal "label" getAttribute = BlockStatement LocalVariableDeclaration ReferenceType Element VariableDeclarator parent Cast ReferenceType Element MethodInvocation area getParentNode IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference parent Literal null MethodInvocation parent MethodInvocation Literal "areaset" equals getNodeName BinaryOperation != MethodInvocation parent Literal "label" getAttribute Literal null BlockStatement StatementExpression Assignment MemberReference label MethodInvocation parent Literal "label" getAttribute = ReturnStatement MemberReference label	1
MethodDeclaration Modifier public ReferenceType Object getOwner ReturnStatement MemberReference owner	0
MethodDeclaration Modifier private ReferenceType Object getCommentActions LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer Literal null MemberReference actionComment MemberReference actionCommentLink ReturnStatement MemberReference actions	1
MethodDeclaration Modifier public Annotation Override doAction FormalParameter BasicType int oldStep IfStatement MemberReference ! BlockStatement StatementExpression SuperMethodInvocation MemberReference oldStep doAction ReturnStatement SwitchStatement MemberReference oldStep SwitchStatementCase Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator choice Literal - 1 IfStatement BinaryOperation != MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference choice MethodInvocation step1 getSelectedIndex = SwitchStatement MemberReference choice SwitchStatementCase Literal - 1 ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "nothing selected, should not get here" SwitchStatementCase Literal 0 StatementExpression Assignment MemberReference stereotypePathChosen Literal true = LocalVariableDeclaration ReferenceType Object VariableDeclarator oper MethodInvocation getModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MethodInvocation Model MethodInvocation MemberReference oper getRoot getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator theStereotype Literal null ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference m getOwnedElements MethodInvocation iterator getFacade MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator candidate MethodInvocation iter next IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement IfStatement Literal ! "create" BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator baseClasses MethodInvocation Model MethodInvocation MemberReference candidate getBaseClasses getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter2 TernaryExpression BinaryOperation != MemberReference baseClasses Literal null MethodInvocation baseClasses iterator Literal null IfStatement BinaryOperation || BinaryOperation == MemberReference iter2 Literal null Literal ! "BehavioralFeature" BlockStatement ContinueStatement StatementExpression Assignment MemberReference theStereotype MemberReference candidate = BreakStatement IfStatement BinaryOperation == MemberReference theStereotype Literal null BlockStatement StatementExpression Assignment MemberReference theStereotype MethodInvocation Model MethodInvocation Literal "create" MemberReference m buildStereotype getExtensionMechanismsFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference theStereotype Literal "create" setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference theStereotype Literal "BehavioralFeature" addBaseClass getExtensionMechanismsHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator targetNS MethodInvocation MethodInvocation Model MethodInvocation MemberReference oper getNamespace getFacade MethodInvocation Model MethodInvocation MemberReference oper getRoot getFacade findNamespace StatementExpression MethodInvocation Model MethodInvocation MemberReference targetNS MemberReference theStereotype addOwnedElement getCoreHelper TryStatement StatementExpression Assignment MemberReference createStereotype MemberReference theStereotype = StatementExpression MethodInvocation Model MethodInvocation MemberReference oper MemberReference theStereotype addStereotype getCoreHelper StatementExpression MethodInvocation ProjectManager MethodInvocation updateRoots getManager StatementExpression Assignment MemberReference addedCreateStereotype Literal true = CatchClause CatchClauseParameter Exception pve StatementExpression MethodInvocation LOG Literal "could not set MemberReference pve error ReturnStatement SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference stereotypePathChosen Literal false = ReturnStatement SwitchStatementCase ReturnStatement SwitchStatementCase Literal 2 IfStatement MemberReference ! stereotypePathChosen BlockStatement StatementExpression SuperMethodInvocation Literal 1 doAction ReturnStatement SwitchStatementCase	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String multiplicityToString FormalParameter ReferenceType Object multiplicity IfStatement BinaryOperation instanceof MemberReference multiplicity ReferenceType MultiplicityElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "multiplicity must be instance " Literal "of LocalVariableDeclaration ReferenceType MultiplicityElement VariableDeclarator mult Cast ReferenceType MultiplicityElement MemberReference multiplicity IfStatement BinaryOperation == MethodInvocation mult getLower MethodInvocation mult getUpper BlockStatement ReturnStatement MethodInvocation DataTypesFactoryEUMLImpl MethodInvocation mult getLower boundToString BlockStatement ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation DataTypesFactoryEUMLImpl MethodInvocation mult getLower boundToString Literal ".." MethodInvocation DataTypesFactoryEUMLImpl MethodInvocation mult getUpper boundToString	0
MethodDeclaration Modifier public setIncomingLeftButtonEnabled FormalParameter BasicType boolean b StatementExpression Assignment MemberReference showIncomingLeft MemberReference b =	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference progress updateProgress	0
MethodDeclaration Modifier public ReferenceType Object getUMLClass ReturnStatement ClassReference ReferenceType UmlClass	0
MethodDeclaration Modifier static ReferenceType Object findDataType FormalParameter ReferenceType String typeName FormalParameter ReferenceType Object model2 LocalVariableDeclaration ReferenceType Collection VariableDeclarator dataTypes MethodInvocation MethodInvocation MemberReference model2 getCoreHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dt MemberReference dataTypes BlockStatement IfStatement MethodInvocation MethodInvocation MemberReference dt getName MethodInvocation MemberReference typeName equals getFacade BlockStatement ReturnStatement MemberReference dt ReturnStatement Literal null	0
MethodDeclaration Modifier protected BasicType int getPersistenceVersion FormalParameter ReferenceType InputStream inputStream OpenException LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader Literal null TryStatement StatementExpression Assignment MemberReference reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference inputStream MethodInvocation Argo getEncoding = LocalVariableDeclaration ReferenceType String VariableDeclarator rootLine MethodInvocation reader readLine WhileStatement BinaryOperation && BinaryOperation != MemberReference rootLine Literal null MethodInvocation ! rootLine MethodInvocation Literal "<argo " startsWith trim BlockStatement StatementExpression Assignment MemberReference rootLine MethodInvocation reader readLine = IfStatement BinaryOperation == MemberReference rootLine Literal null BlockStatement ReturnStatement Literal 1 ReturnStatement MethodInvocation Integer MethodInvocation MemberReference rootLine getVersion parseInt CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e CatchClause CatchClauseParameter NumberFormatException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e TryStatement IfStatement BinaryOperation != MemberReference reader Literal null BlockStatement StatementExpression MethodInvocation reader close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation close StatementExpression Assignment MemberReference canceled Literal true =	0
MethodDeclaration Modifier public Annotation Override addNodeRelatedEdges FormalParameter ReferenceType Object node StatementExpression SuperMethodInvocation MemberReference node addNodeRelatedEdges IfStatement MethodInvocation Model MethodInvocation MemberReference node isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation Model MethodInvocation MemberReference node getAssociationEnds getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation ends iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator associationEnd MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator association MethodInvocation Model MethodInvocation MemberReference associationEnd getAssociation getFacade IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference association isANaryAssociation getFacade MethodInvocation MemberReference associationEnd canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference associationEnd addEdge IfStatement MethodInvocation MemberReference association canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference association addEdge IfStatement MethodInvocation Model MethodInvocation MemberReference node isAGeneralizableElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator generalizations MethodInvocation Model MethodInvocation MemberReference node getGeneralizations getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation generalizations iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator generalization MethodInvocation iter next IfStatement MethodInvocation MemberReference generalization canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference generalization addEdge LocalVariableDeclaration ReferenceType Collection VariableDeclarator specializations MethodInvocation Model MethodInvocation MemberReference node getSpecializations getFacade StatementExpression Assignment MemberReference iter MethodInvocation specializations iterator = WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator specialization MethodInvocation iter next IfStatement MethodInvocation MemberReference specialization canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference specialization addEdge IfStatement MethodInvocation Model MethodInvocation MemberReference node isAAssociation getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation Model MethodInvocation MemberReference node getConnections getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation ends iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnd MethodInvocation iter next IfStatement MethodInvocation MemberReference associationEnd canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference associationEnd addEdge	1
MethodDeclaration Modifier public ReferenceType Object getTarget ReturnStatement MemberReference currentTarget	0
MethodDeclaration Modifier public ReferenceType String getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public ReferenceType Collection getConnections FormalParameter ReferenceType Object handle IfStatement BinaryOperation == MemberReference handle Literal null BlockStatement ReturnStatement MethodInvocation Collections emptyList IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Connector BlockStatement ReturnStatement Cast ReferenceType Connector MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Association BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of ReturnStatement Cast ReferenceType Association MemberReference handle	1
MethodDeclaration Modifier public final mBITWISEXOR FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference BITWISEXOR = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal '^' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType Object getMessage ReturnStatement ClassReference ReferenceType Message	0
MethodDeclaration Modifier public final mEQUAL FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference EQUAL = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal "==" match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String desc LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Token VariableDeclarator lexer ClassCreator MethodInvocation parse ReferenceType MemberReference desc ReturnStatement MethodInvocation MemberReference lexer	0
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator l ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation l ArrayCreator ReferenceType Object ArrayInitializer MemberReference newOwner Literal null add LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference newOwner getStereotypes getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator st MethodInvocation i next StatementExpression MethodInvocation l ArrayCreator ReferenceType Object ArrayInitializer MemberReference st Literal "name" add StatementExpression MethodInvocation MemberReference l updateElementListeners	1
MethodDeclaration Modifier public ReferenceType String getLabel ReturnStatement MemberReference label	0
MethodDeclaration Modifier protected ReferenceType ListSet computeOffenders FormalParameter ReferenceType Object ps LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs ClassCreator ReferenceType ListSet MemberReference ps LocalVariableDeclaration ReferenceType Object VariableDeclarator cs MethodInvocation Model MethodInvocation MemberReference ps getContainer getFacade IfStatement BinaryOperation == MemberReference cs Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "null parent in still valid" debug ReturnStatement MemberReference offs LocalVariableDeclaration ReferenceType Collection VariableDeclarator peers MethodInvocation Model MethodInvocation MemberReference cs getSubvertices getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator sv MemberReference peers BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference sv isAPseudostate getFacade MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference sv getKind getFacade MethodInvocation Model MethodInvocation getInitial getPseudostateKind equalsPseudostateKind getFacade BlockStatement StatementExpression MethodInvocation offs MemberReference sv add ReturnStatement MemberReference offs	0
MethodDeclaration Modifier public final exception_declaration RecognitionException TokenStreamException StatementExpression MethodInvocation parameter_declaration_list	1
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference cls computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier private static ReferenceType String getDescription FormalParameter Modifier final ReferenceType Object assocEnd1 FormalParameter Modifier final ReferenceType Object assocEnd2 FormalParameter Modifier final BasicType int aggr LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference assocEnd1 getType getFacade getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator endName MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference assocEnd2 getType getFacade getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation == MethodInvocation length Literal 0 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Translator Literal "action.navigation.anon" localize = IfStatement BinaryOperation || BinaryOperation == MemberReference endName Literal null BinaryOperation == MethodInvocation endName length Literal 0 BlockStatement StatementExpression Assignment MemberReference endName MethodInvocation Translator Literal "action.navigation.anon" localize = IfStatement BinaryOperation == MemberReference aggr MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal "action.aggregation.composite" ArrayCreator ReferenceType Object ArrayInitializer MemberReference MemberReference endName IfStatement BinaryOperation == MemberReference aggr MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal "action.aggregation.composite" ArrayCreator ReferenceType Object ArrayInitializer MemberReference endName MemberReference IfStatement BinaryOperation == MemberReference aggr MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal "action.aggregation.aggregate" ArrayCreator ReferenceType Object ArrayInitializer MemberReference MemberReference endName IfStatement BinaryOperation == MemberReference aggr MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal "action.aggregation.aggregate" ArrayCreator ReferenceType Object ArrayInitializer MemberReference endName MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public setBounds FormalParameter BasicType int FormalParameter BasicType int hInc IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration BasicType int VariableDeclarator x MemberReference oldBounds x LocalVariableDeclaration BasicType int VariableDeclarator y BinaryOperation + MemberReference oldBounds y MemberReference LocalVariableDeclaration BasicType int VariableDeclarator w MemberReference oldBounds width LocalVariableDeclaration BasicType int VariableDeclarator h BinaryOperation + MemberReference oldBounds height MemberReference hInc StatementExpression MethodInvocation dividerline MemberReference x MemberReference y BinaryOperation + MemberReference x MemberReference w MemberReference y setShape StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x Literal 2 BinaryOperation + MemberReference y Literal 2 BinaryOperation - MemberReference w Literal 4 MemberReference nameDim height setBounds getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x Literal 2 BinaryOperation + BinaryOperation + MemberReference y MemberReference nameDim height Literal 4 BinaryOperation - MemberReference w Literal 4 BinaryOperation - BinaryOperation - MemberReference h MemberReference nameDim height Literal 8 setBounds getInternal StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation cover MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation StatementExpression MethodInvocation Literal "bounds" MemberReference oldBounds MethodInvocation getBounds	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Guard BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType BooleanExpression BlockStatement LocalVariableDeclaration ReferenceType Expression VariableDeclarator oldExp Cast ReferenceType Guard MemberReference handle IfStatement MethodInvocation ! MemberReference oldExp Cast ReferenceType Expression MemberReference value equal BlockStatement StatementExpression Cast ReferenceType Guard MemberReference handle IfStatement BinaryOperation != MemberReference oldExp Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference oldExp delete getUmlFactory ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType BooleanExpression BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ce Cast ReferenceType MemberReference handle LocalVariableDeclaration ReferenceType Expression VariableDeclarator oldExp MethodInvocation ce IfStatement MethodInvocation ! MemberReference oldExp Cast ReferenceType Expression MemberReference value equal BlockStatement StatementExpression MethodInvocation ce Cast ReferenceType BooleanExpression MemberReference value setChangeExpression IfStatement BinaryOperation != MemberReference oldExp Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference oldExp delete getUmlFactory ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType Expression BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator arg Cast ReferenceType MemberReference handle LocalVariableDeclaration ReferenceType Expression VariableDeclarator oldExp MethodInvocation arg getValue IfStatement MethodInvocation ! MemberReference oldExp Cast ReferenceType Expression MemberReference value equal BlockStatement StatementExpression MethodInvocation arg Cast ReferenceType Expression MemberReference value setValue IfStatement BinaryOperation != MemberReference oldExp Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference oldExp delete getUmlFactory ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or value: " MemberReference value	1
MethodDeclaration Modifier protected doOnEdit FormalParameter ReferenceType Object item LocalVariableDeclaration ReferenceType String VariableDeclarator text Cast ReferenceType String MemberReference item StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference text setMultiplicity getCoreHelper StatementExpression Assignment MemberReference text MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getMultiplicity getFacade toString getFacade = LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference text search IfStatement BinaryOperation == MemberReference o Literal null BlockStatement StatementExpression Cast ReferenceType MethodInvocation getModel StatementExpression MethodInvocation MemberReference text setSelectedItem StatementExpression MethodInvocation MethodInvocation MemberReference text setItem getEditor	0
MethodDeclaration Modifier private final createInclude FormalParameter ReferenceType Object modelElement Exception IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAClassifier getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Classifier required" StatementExpression Assignment MemberReference objDocBlock ClassCreator ReferenceType DocBlock = StatementExpression Assignment MemberReference objModelElement MemberReference modelElement = StatementExpression Assignment MemberReference iDocBlockType MemberReference BLOCK_TYPE_INCLUDE = StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS disableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_STATIC disableTag StatementExpression MethodInvocation objDocBlock BinaryOperation + Literal "include " MethodInvocation NameGenerator MemberReference modelElement generateClassifierName setDescription StatementExpression MethodInvocation objDocBlock MethodInvocation Model MethodInvocation MemberReference modelElement getTaggedValues getFacade setTags	1
MethodDeclaration Modifier public Annotation Override propertyChange FormalParameter ReferenceType PropertyChangeEvent pce IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType AttributeChangeEvent BinaryOperation || MethodInvocation pce MethodInvocation Literal "isNavigable" equals getPropertyName MethodInvocation pce MethodInvocation Literal "aggregation" equals getPropertyName BlockStatement StatementExpression Cast ReferenceType FigAssociation MemberReference figEdge StatementExpression MethodInvocation damage IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType AddAssociationEvent MethodInvocation pce MethodInvocation Literal "participant" equals getPropertyName BlockStatement StatementExpression MethodInvocation figEdge determineFigNodes LocalVariableDeclaration ReferenceType String VariableDeclarator pName MethodInvocation pce getPropertyName IfStatement BinaryOperation && MethodInvocation pName Literal "editing" equals MethodInvocation Boolean.FALSE MethodInvocation pce getNewValue equals BlockStatement StatementExpression MethodInvocation role textEdited StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation endTrans IfStatement BinaryOperation && MethodInvocation pName Literal "editing" equals MethodInvocation Boolean.TRUE MethodInvocation pce getNewValue equals BlockStatement StatementExpression MethodInvocation role textEditStarted BlockStatement StatementExpression SuperMethodInvocation MemberReference pce propertyChange	1
MethodDeclaration Modifier public ReferenceType Object createTemplateArgument ThrowStatement ClassCreator ReferenceType NotImplementedException	1
MethodDeclaration Modifier public synchronized static ReferenceType GeneratorCpp getInstance IfStatement BinaryOperation != MemberReference singleton Literal null ReturnStatement MemberReference singleton ReturnStatement ClassCreator ReferenceType GeneratorCpp	1
MethodDeclaration Modifier public Annotation Override BasicType int getRank ReturnStatement TernaryExpression BinaryOperation == MethodInvocation first Literal null Literal 0 MethodInvocation MethodInvocation getRank first	1
MethodDeclaration Modifier public setInitialValue FormalParameter ReferenceType Object at FormalParameter ReferenceType Object expr IfStatement BinaryOperation && BinaryOperation instanceof MemberReference at ReferenceType Attribute BinaryOperation || BinaryOperation == MemberReference expr Literal null BinaryOperation instanceof MemberReference expr ReferenceType Expression BlockStatement LocalVariableDeclaration ReferenceType Expression VariableDeclarator oldExp Cast ReferenceType Attribute MemberReference at IfStatement MethodInvocation ! MemberReference oldExp Cast ReferenceType Expression MemberReference expr equal BlockStatement StatementExpression Cast ReferenceType Attribute MemberReference at IfStatement BinaryOperation != MemberReference oldExp Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference oldExp delete getUmlFactory ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference at Literal " or " MemberReference expr	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unchecked" addProfile FormalParameter ReferenceType Profile p FormalParameter ReferenceType Object m IfStatement MethodInvocation ! profiles MemberReference p contains BlockStatement StatementExpression MethodInvocation profiles MemberReference p add TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator profile MethodInvocation p getProfilePackages BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference m MemberReference profile getExtensionMechanismsHelper StatementExpression MethodInvocation profileModels MethodInvocation p getProfilePackages addAll CatchClause CatchClauseParameter ProfileException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Error retrieving profile's " MemberReference p Literal " packages." MemberReference e warn LocalVariableDeclaration ReferenceType VariableDeclarator fns MethodInvocation p IfStatement BinaryOperation != MemberReference fns Literal null BlockStatement StatementExpression MethodInvocation figNodeStrategies MemberReference fns add ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator dependency MethodInvocation p getDependencies BlockStatement StatementExpression MethodInvocation MemberReference dependency MemberReference m addProfile StatementExpression MethodInvocation updateStrategies StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoProfileEvent MemberReference ArgoEventTypes PROFILE_ADDED ClassCreator ReferenceType PropertyChangeEvent This Literal "profile" Literal null MemberReference p	1
MethodDeclaration Modifier public ReferenceType Map TypeArgument ReferenceType Resource TypeArgument ReferenceType Boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType Fig getPortFig FormalParameter ReferenceType FigNode figNode IfStatement BinaryOperation instanceof MemberReference figNode ReferenceType FigEdgePort BlockStatement ReturnStatement MemberReference figNode BlockStatement ReturnStatement Cast ReferenceType Fig MethodInvocation figNode MethodInvocation Literal 0 get getPortFigs	1
MethodDeclaration Modifier public ReferenceType getTabProps ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator tab MemberReference tabPanelList BlockStatement IfStatement BinaryOperation instanceof MemberReference tab ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference tab ReturnStatement Literal null	0
MethodDeclaration Modifier public resume SynchronizedStatement MemberReference StatementExpression Assignment MemberReference Literal false = StatementExpression MethodInvocation notifyAll	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public setCondition FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object booleanExpression IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Extend BinaryOperation || BinaryOperation == MemberReference booleanExpression Literal null BinaryOperation instanceof MemberReference booleanExpression ReferenceType BooleanExpression BlockStatement LocalVariableDeclaration ReferenceType Expression VariableDeclarator oldExp Cast ReferenceType Extend MemberReference handle IfStatement MethodInvocation ! MemberReference oldExp Cast ReferenceType Expression MemberReference booleanExpression equal BlockStatement StatementExpression Cast ReferenceType Extend MemberReference handle IfStatement BinaryOperation != MemberReference oldExp Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference oldExp delete getUmlFactory ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or booleanExpression: " MemberReference booleanExpression	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setFillColor	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String getAllMetaDatatypeNames LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator names ClassCreator ReferenceType HashSet TypeArgument ReferenceType String ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation modelImpl MethodInvocation getDataType MethodInvocation refAllOfClass getModelPackage BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType DataType MemberReference element IfStatement MethodInvocation names MemberReference name add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal " DataType " MemberReference name debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Found duplicate datatype " MemberReference name Literal " in metamodel" error ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation modelImpl MethodInvocation getEnumerationType MethodInvocation refAllOfClass getModelPackage BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType EnumerationType MemberReference element IfStatement MethodInvocation names MemberReference name add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal " EnumerationType " MemberReference name debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Found duplicate EnumerationType " MemberReference name Literal " in metamodel" error ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation modelImpl MethodInvocation MethodInvocation refAllOfClass getModelPackage BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType javax ReferenceType jmi ReferenceType model ReferenceType PrimitiveType MemberReference element IfStatement MethodInvocation names MemberReference name add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal " PrimitiveType " MemberReference name debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Found duplicate primitive type " MemberReference name Literal " in metamodel" error ReturnStatement MemberReference names	1
MethodDeclaration Modifier public Annotation Override keyPressed FormalParameter ReferenceType KeyEvent ke IfStatement BinaryOperation || BinaryOperation == MethodInvocation ke getKeyCode MemberReference KeyEvent VK_LEFT BinaryOperation == MethodInvocation ke getKeyCode MemberReference KeyEvent VK_RIGHT BlockStatement StatementExpression MethodInvocation ke consume BlockStatement StatementExpression MethodInvocation handleMovement	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference BASE instructions	0
MethodDeclaration Modifier protected ReferenceType ArrowHead createEndArrow ReturnStatement ClassCreator ReferenceType ArrowHeadGreater	0
MethodDeclaration Modifier public addDesrciptor FormalParameter ReferenceType FigNodeDescriptor fnd StatementExpression MethodInvocation images MemberReference fnd stereotype MemberReference fnd img put	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Message FormalParameter ReferenceType Object from FormalParameter ReferenceType Object to LocalVariableDeclaration ReferenceType Lifeline VariableDeclarator l1 Cast ReferenceType Lifeline MemberReference from LocalVariableDeclaration ReferenceType Lifeline VariableDeclarator l2 Cast ReferenceType Lifeline MemberReference to LocalVariableDeclaration ReferenceType Message VariableDeclarator message MethodInvocation createMessage LocalVariableDeclaration ReferenceType MessageOccurrenceSpecification VariableDeclarator receive MethodInvocation createMessageOccurrenceSpecification LocalVariableDeclaration ReferenceType MessageOccurrenceSpecification VariableDeclarator send MethodInvocation createMessageOccurrenceSpecification StatementExpression MethodInvocation message MemberReference receive StatementExpression MethodInvocation message MemberReference send StatementExpression MethodInvocation l1 MethodInvocation MemberReference send add getCoveredBys StatementExpression MethodInvocation l2 MethodInvocation MemberReference receive add getCoveredBys ReturnStatement MemberReference message	0
MethodDeclaration Modifier public ReferenceType Collection getRelocationCandidates FormalParameter ReferenceType Object root ReturnStatement MemberReference Collections EMPTY_LIST	1
MethodDeclaration Modifier public ReferenceType Object getNodeInstance ReturnStatement ClassReference ReferenceType InstanceSpecification	1
MethodDeclaration Modifier public ReferenceType Object getPackageImport ReturnStatement ClassReference ReferenceType Permission	0
MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getMultiplicity getFacade toString getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object source ReturnStatement MethodInvocation Model MethodInvocation MemberReference source getAssociation getFacade	0
MethodDeclaration Modifier public Annotation Override mouseReleased FormalParameter ReferenceType MouseEvent me IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement IfStatement BinaryOperation == MethodInvocation getSourceFigNode Literal null BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation me getX VariableDeclarator y MethodInvocation me getY LocalVariableDeclaration ReferenceType Fig VariableDeclarator destFig MethodInvocation editor MemberReference x MemberReference y hit IfStatement BinaryOperation == MemberReference destFig Literal null BlockStatement StatementExpression Assignment MemberReference destFig MethodInvocation editor BinaryOperation - MemberReference x Literal 16 BinaryOperation - MemberReference y Literal 16 Literal 32 Literal 32 hit = LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator Cast ReferenceType MutableGraphModel MethodInvocation editor getGraphModel IfStatement MethodInvocation ! MemberReference sourceFig MemberReference destFig isConnectionValid BlockStatement StatementExpression Assignment MemberReference destFig Literal null = BlockStatement StatementExpression MethodInvocation LOG Literal "Connection valid" info IfStatement BinaryOperation && BinaryOperation instanceof MemberReference destFig ReferenceType FigEdgeModelElement BinaryOperation instanceof MemberReference destFig ReferenceType FigEdgeNote BlockStatement LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator destEdge Cast ReferenceType FigEdgeModelElement MemberReference destFig StatementExpression MethodInvocation destEdge makeEdgePort StatementExpression Assignment MemberReference destFig MethodInvocation destEdge getEdgePort = StatementExpression MethodInvocation destEdge computeRoute IfStatement BinaryOperation instanceof MemberReference destFig ReferenceType FigNodeModelElement BlockStatement LocalVariableDeclaration ReferenceType FigNode VariableDeclarator destFigNode Cast ReferenceType FigNode MemberReference destFig LocalVariableDeclaration ReferenceType Object VariableDeclarator foundPort MethodInvocation destFigNode getOwner IfStatement BinaryOperation && BinaryOperation == MemberReference foundPort MethodInvocation getStartPort BinaryOperation < MemberReference _npoints Literal 4 BlockStatement StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement IfStatement BinaryOperation != MemberReference foundPort Literal null BlockStatement LocalVariableDeclaration ReferenceType FigPoly VariableDeclarator p Cast ReferenceType FigPoly MemberReference IfStatement BinaryOperation && BinaryOperation == MemberReference foundPort MethodInvocation getStartPort BinaryOperation >= MemberReference _npoints Literal 4 BlockStatement StatementExpression MethodInvocation p Literal true setSelfLoop StatementExpression MethodInvocation editor damageAll StatementExpression MethodInvocation p Literal true setComplete StatementExpression MethodInvocation LOG Literal "Connecting" info LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator fe MethodInvocation MemberReference MethodInvocation getMetaType MemberReference sourceFig MemberReference destFig buildConnection IfStatement BinaryOperation != MemberReference fe Literal null BlockStatement StatementExpression MethodInvocation editor MethodInvocation MemberReference fe select getSelectionManager StatementExpression MethodInvocation editor damageAll IfStatement BinaryOperation instanceof MemberReference fe ReferenceType MouseListener BlockStatement StatementExpression Cast ReferenceType MouseListener MemberReference fe StatementExpression MethodInvocation MemberReference fe endAttached StatementExpression MethodInvocation done StatementExpression MethodInvocation me consume ReturnStatement IfStatement MethodInvocation ! MemberReference x MemberReference y nearLast BlockStatement StatementExpression MethodInvocation editor damageAll LocalVariableDeclaration ReferenceType Point VariableDeclarator snapPt ClassCreator ReferenceType Point MemberReference x MemberReference y StatementExpression MethodInvocation editor MemberReference snapPt snap StatementExpression Cast ReferenceType FigPoly MemberReference StatementExpression MemberReference ++ _npoints StatementExpression MethodInvocation editor damageAll StatementExpression Assignment MemberReference MemberReference x = StatementExpression Assignment MemberReference MemberReference y = StatementExpression MethodInvocation me consume	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation PseudostateKind.INITIAL_LITERAL MemberReference kind equals	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String getUnresolvedFilenames ReturnStatement MemberReference unresolvedFilenames	0
MethodDeclaration Modifier public ReferenceType ImportInterface FormalParameter ReferenceType String importerName ReturnStatement MethodInvocation MethodInvocation MemberReference importerName get getModules	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression MethodInvocation Literal false	0
MethodDeclaration Modifier public addCritic FormalParameter ReferenceType Critic c StatementExpression MethodInvocation critics MemberReference c add	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb Literal "using " append StatementExpression MethodInvocation Target MemberReference sb ToSource IfStatement MemberReference IsAlias BlockStatement StatementExpression MethodInvocation sb Literal " = " append StatementExpression MethodInvocation aliasName MemberReference sb ToSource StatementExpression MethodInvocation sb Literal ";" append StatementExpression This MethodInvocation MemberReference sb NewLine	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator source Cast ReferenceType MethodInvocation e getSource LocalVariableDeclaration ReferenceType String VariableDeclarator actionCommand MethodInvocation source getActionCommand LocalVariableDeclaration ReferenceType Object VariableDeclarator target Cast ReferenceType UMLRadioButtonPanel MethodInvocation source getParent IfStatement MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference target LocalVariableDeclaration ReferenceType Object VariableDeclarator kind Literal null IfStatement MethodInvocation actionCommand MemberReference SEQUENTIAL_COMMAND equals BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getSequential getConcurrencyKind = IfStatement MethodInvocation actionCommand MemberReference GUARDED_COMMAND equals BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getGuarded getConcurrencyKind = BlockStatement StatementExpression Assignment MemberReference kind MethodInvocation Model MethodInvocation getConcurrent getConcurrencyKind = StatementExpression MethodInvocation Model MethodInvocation MemberReference m MemberReference kind setConcurrency getCoreHelper	1
MethodDeclaration Modifier private updateInclude StatementExpression MethodInvocation include MethodInvocation MethodInvocation getOwner generateSubmachine setText StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation MethodInvocation getBounds setBounds StatementExpression MethodInvocation damage	0
MethodDeclaration Modifier public ReferenceType Object getRelationship ReturnStatement ClassReference ReferenceType Relationship	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType JComponent createComponent FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType String propName FormalParameter Modifier final ReferenceType List TypeArgument ReferenceType Class TypeArgument ? types LocalVariableDeclaration ReferenceType JComponent VariableDeclarator list Literal null LocalVariableDeclaration ReferenceType DefaultListModel VariableDeclarator model Literal null IfStatement Literal MethodInvocation MemberReference propName equals "annotatedElement" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLCommentAnnotatedElementListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "associationRole" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLAssociationAssociationRoleListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "availableContents" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLClassifierRoleAvailableContentsListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "availableFeature" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLClassifierRoleAvailableFeaturesListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "classifierInState" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLOFSStateListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "client" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLDependencyClientListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "clientDependency" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLModelElementClientDependencyListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "connection" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLAssociationConnectionListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "constrainingElement" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLCollaborationConstrainingElementListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "contents" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLPartitionContentListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "context" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLSignalContextListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "deployedComponent" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLNodeDeployedComponentListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "extend" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLUseCaseExtendListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "extended_elements" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLExtendedElementsListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "generalization" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLGeneralizableElementGeneralizationListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "include" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLUseCaseIncludeListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "incoming" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLStateVertexIncomingListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "instantiation" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLCreateActionClassifierListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "link" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLAssociationLinkListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "outgoing" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLStateVertexOutgoingListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLActivityGraphPartitionListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "predecessor" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLMessagePredecessorListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "resident" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLContainerResidentListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "specialization" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLGeneralizableElementSpecializationListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "specification" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLAssociationEndSpecificationListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "submachineState" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLStateMachineSubmachineStateListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "supplier" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLDependencySupplierListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "supplierDependency" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLModelElementSupplierDependencyListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "top" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLStateMachineTopListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "transition" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLEventTransitionListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "transitions" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLStateMachineTransitionListModel MemberReference modelElement = IfStatement Literal MethodInvocation MemberReference propName equals "typedValue" BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType UMLTagDefinitionTypedValuesListModel MemberReference modelElement = IfStatement BinaryOperation == MemberReference model Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType GetterSetterManager VariableDeclarator getterSetterManager MethodInvocation GetterSetterManager MethodInvocation types Literal 0 get getGetterSetter IfStatement MethodInvocation getterSetterManager MemberReference propName contains BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType SimpleListModel MemberReference propName MemberReference types MemberReference modelElement MemberReference getterSetterManager = IfStatement BinaryOperation != MemberReference list Literal null BlockStatement ReturnStatement MemberReference list IfStatement BinaryOperation != MemberReference model Literal null BlockStatement ReturnStatement ClassCreator ReferenceType RowSelector MemberReference model ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color c StatementExpression SuperMethodInvocation MemberReference c setLineColor StatementExpression MethodInvocation MethodInvocation MemberReference c setFillColor getDestArrowHead	0
MethodDeclaration Modifier public BasicType boolean endChar FormalParameter BasicType char c StatementExpression MemberReference ++ IfStatement MemberReference esced BlockStatement StatementExpression Assignment MemberReference esced Literal false = ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference escChr Literal 0 BinaryOperation == MemberReference c MemberReference escChr BlockStatement StatementExpression Assignment MemberReference esced Literal true = ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation != MemberReference startChr Literal 0 BinaryOperation == MemberReference c MemberReference startChr BlockStatement StatementExpression MemberReference ++ level IfStatement BinaryOperation == MemberReference c MemberReference stopChr BlockStatement StatementExpression MemberReference -- level ReturnStatement BinaryOperation <= MemberReference level Literal 0	0
MethodDeclaration Modifier public BasicType boolean isProtected FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MethodInvocation MemberReference handle getVisibility equals	0
MethodDeclaration Modifier protected Annotation Override textEditStarted FormalParameter ReferenceType FigText ft IfStatement BinaryOperation == MemberReference ft MethodInvocation getNameFig BlockStatement StatementExpression MethodInvocation Literal showHelp	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object source FormalParameter ReferenceType Object dest ReturnStatement MethodInvocation impl MemberReference source MemberReference dest	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator assEnd Cast ReferenceType AssociationEnd MemberReference handle LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType AssociationEnd VariableDeclarator assEnds MethodInvocation assEnd MethodInvocation getConnection getAssociation LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType AssociationEnd VariableDeclarator it MethodInvocation assEnds iterator LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator other MethodInvocation it next IfStatement BinaryOperation != MemberReference other MemberReference assEnd BlockStatement ReturnStatement MethodInvocation other BlockStatement StatementExpression Assignment MemberReference other MethodInvocation it next = ReturnStatement MethodInvocation other CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public BasicType boolean isExpanded ReturnStatement MemberReference expanded	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType boolean specification StatementExpression MethodInvocation impl MemberReference handle MemberReference specification	0
MethodDeclaration Modifier public ReferenceType Object getType FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement ReturnStatement Cast ReferenceType StructuralFeature MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter BlockStatement ReturnStatement Cast ReferenceType Parameter MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ObjectFlowState BlockStatement ReturnStatement Cast ReferenceType ObjectFlowState MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BlockStatement ReturnStatement Cast ReferenceType TaggedValue MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public activateDefaultTypeStrategy FormalParameter ReferenceType Profile profile IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference profile Literal null BinaryOperation != MethodInvocation profile getDefaultTypeStrategy Literal null MethodInvocation MethodInvocation MemberReference profile contains getProfiles BlockStatement StatementExpression Assignment This MemberReference defaultTypeStrategy MethodInvocation profile getDefaultTypeStrategy =	0
MethodDeclaration Modifier public ReferenceType DiagramInterchangeModel getDiagramInterchangeModel ReturnStatement Literal null	0
MethodDeclaration Modifier private determineRemoveEnabled LocalVariableDeclaration ReferenceType Editor VariableDeclarator editor MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation editor MethodInvocation getFigs getSelectionManager LocalVariableDeclaration BasicType boolean VariableDeclarator removeEnabled MethodInvocation ! figs isEmpty LocalVariableDeclaration ReferenceType GraphModel VariableDeclarator gm MethodInvocation editor getGraphModel IfStatement BinaryOperation instanceof MemberReference gm ReferenceType UMLMutableGraphSupport BlockStatement StatementExpression Assignment MemberReference removeEnabled Cast ReferenceType UMLMutableGraphSupport MemberReference gm = StatementExpression MethodInvocation removeFromDiagram MemberReference removeEnabled setEnabled	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation offs Literal 0 get IfStatement MethodInvocation ! MemberReference f MemberReference dsgr predicate BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference f computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier protected ReferenceType Rectangle LocalVariableDeclaration ReferenceType Fig VariableDeclarator target MethodInvocation getPanelTarget LocalVariableDeclaration ReferenceType String VariableDeclarator bboxStr MethodInvocation bboxField MethodInvocation trim getText IfStatement BinaryOperation == MethodInvocation bboxStr length Literal 0 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator res ClassCreator ReferenceType Rectangle LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType java ReferenceType util ReferenceType StringTokenizer MemberReference bboxStr Literal ", " TryStatement LocalVariableDeclaration BasicType boolean VariableDeclarator changed Literal false IfStatement MethodInvocation ! st hasMoreTokens BlockStatement ReturnStatement MethodInvocation target getBounds StatementExpression Assignment MemberReference res x MethodInvocation Integer MethodInvocation st nextToken parseInt = IfStatement MethodInvocation ! st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference res y MethodInvocation target MemberReference y getBounds = StatementExpression Assignment MemberReference res width MethodInvocation target MemberReference width getBounds = StatementExpression Assignment MemberReference res height MethodInvocation target MemberReference height getBounds = ReturnStatement MemberReference res StatementExpression Assignment MemberReference res y MethodInvocation Integer MethodInvocation st nextToken parseInt = IfStatement MethodInvocation ! st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference res width MethodInvocation target MemberReference width getBounds = StatementExpression Assignment MemberReference res height MethodInvocation target MemberReference height getBounds = ReturnStatement MemberReference res StatementExpression Assignment MemberReference res width MethodInvocation Integer MethodInvocation st nextToken parseInt = IfStatement BinaryOperation > BinaryOperation + MemberReference res width MemberReference res x Literal 6000 BlockStatement StatementExpression Assignment MemberReference res width BinaryOperation - Literal 6000 MemberReference res x = StatementExpression Assignment MemberReference changed Literal true = IfStatement MethodInvocation ! st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference res width MethodInvocation target MemberReference width getBounds = ReturnStatement MemberReference res StatementExpression Assignment MemberReference res height MethodInvocation Integer MethodInvocation st nextToken parseInt = IfStatement BinaryOperation > BinaryOperation + MemberReference res height MemberReference res y Literal 6000 BlockStatement StatementExpression Assignment MemberReference res height BinaryOperation - Literal 6000 MemberReference res y = StatementExpression Assignment MemberReference changed Literal true = IfStatement BinaryOperation || BinaryOperation < MemberReference res x Literal 0 BinaryOperation < MemberReference res y Literal 0 BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Part of box is off screen " MemberReference res warn IfStatement BinaryOperation || BinaryOperation < MemberReference res width Literal 0 BinaryOperation < MemberReference res height Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Bounding box has negative size " MemberReference res IfStatement MemberReference changed BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb MethodInvocation Integer MemberReference res x toString append StatementExpression MethodInvocation sb Literal "," append StatementExpression MethodInvocation sb MethodInvocation Integer MemberReference res y toString append StatementExpression MethodInvocation sb Literal "," append StatementExpression MethodInvocation sb MethodInvocation Integer MemberReference res width toString append StatementExpression MethodInvocation sb Literal "," append StatementExpression MethodInvocation sb MethodInvocation Integer MemberReference res height toString append StatementExpression MethodInvocation bboxField MethodInvocation sb toString setText CatchClause CatchClauseParameter NumberFormatException ex StatementExpression MethodInvocation bboxField MemberReference Color RED setBackground ReturnStatement Literal null CatchClause CatchClauseParameter IllegalArgumentException iae StatementExpression MethodInvocation bboxField MemberReference Color RED setBackground ReturnStatement Literal null StatementExpression MethodInvocation bboxField Literal null setBackground ReturnStatement MemberReference res	1
MethodDeclaration Modifier public ReferenceType Collection getSpecifications FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference handle getRealizedInterfaces getCoreHelper ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewEdgeType FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference BASE edgeType	0
MethodDeclaration Modifier public ReferenceType Dimension getPreferredSize ReturnStatement ClassCreator ReferenceType Dimension SuperMethodInvocation MemberReference width getPreferredSize MethodInvocation MemberReference height getMinimumSize	1
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Usage VariableDeclarator usage MethodInvocation createUsage StatementExpression MethodInvocation usage MethodInvocation Cast ReferenceType NamedElement MemberReference client add StatementExpression MethodInvocation usage MethodInvocation Cast ReferenceType NamedElement MemberReference add getSuppliers StatementExpression Cast ReferenceType NamedElement MemberReference client StatementExpression MethodInvocation MethodInvocation MemberReference usage add getParams	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setFillColor	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isAStateVertex getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference dm isACompositeState getFacade MethodInvocation Model MethodInvocation MemberReference dm getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAFinalState getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAPseudostate getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAActionState getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType String VariableDeclarator myName MethodInvocation Model MethodInvocation MemberReference dm getName getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference myName Literal null MethodInvocation myName Literal "" equals BinaryOperation == MethodInvocation myName length Literal 0 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	0
MethodDeclaration removeSearchPath FormalParameter ReferenceType String path StatementExpression MethodInvocation searchDirs MemberReference path remove	0
MethodDeclaration Modifier protected handleSearchpath FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator searchpath MethodInvocation e MethodInvocation trim Literal "href" getAttribute StatementExpression MethodInvocation project MemberReference searchpath	0
MethodDeclaration Modifier public ReferenceType AssociationClass createAssociationClass ReturnStatement MethodInvocation createAssociationClass	0
MethodDeclaration Modifier public Annotation Override ReferenceType Vector TypeArgument ReferenceType Fig getEnclosedFigs LocalVariableDeclaration ReferenceType Vector TypeArgument ReferenceType Fig VariableDeclarator enclosedFigs SuperMethodInvocation getEnclosedFigs IfStatement MethodInvocation isConcurrent BlockStatement LocalVariableDeclaration ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType Fig VariableDeclarator figsByY ClassCreator ReferenceType TreeMap TypeArgument ReferenceType Integer TypeArgument ReferenceType Fig ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator fig MemberReference enclosedFigs BlockStatement IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigConcurrentRegion BlockStatement StatementExpression MethodInvocation figsByY MethodInvocation fig getY MemberReference fig put ReturnStatement ClassCreator ReferenceType Vector TypeArgument ReferenceType Fig MethodInvocation figsByY values ReturnStatement MemberReference enclosedFigs	1
MethodDeclaration Modifier public setBase FormalParameter ReferenceType Object arole FormalParameter ReferenceType Object abase IfStatement BinaryOperation == MemberReference arole Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "role is null" IfStatement BinaryOperation instanceof MemberReference arole ReferenceType AssociationRole BlockStatement LocalVariableDeclaration ReferenceType AssociationRole VariableDeclarator role Cast ReferenceType AssociationRole MemberReference arole LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator base Cast ReferenceType UmlAssociation MemberReference abase IfStatement BinaryOperation && BinaryOperation != MemberReference base Literal null MethodInvocation ! MethodInvocation MemberReference base contains MemberReference role getAllPossibleBases BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "base is not allowed for " Literal "this role" StatementExpression MethodInvocation role MemberReference base setBase LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator sender Cast ReferenceType ClassifierRole MethodInvocation modelImpl MethodInvocation MemberReference role getSource getCoreHelper LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator receiver Cast ReferenceType ClassifierRole MethodInvocation modelImpl MethodInvocation MemberReference role getDestination getCoreHelper LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Classifier VariableDeclarator senderBases MethodInvocation sender getBase LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Classifier VariableDeclarator receiverBases MethodInvocation receiver getBase LocalVariableDeclaration ReferenceType AssociationEndRole VariableDeclarator senderRole Cast ReferenceType AssociationEndRole MethodInvocation modelImpl MethodInvocation MemberReference sender MemberReference role getCoreHelper LocalVariableDeclaration ReferenceType AssociationEndRole VariableDeclarator receiverRole Cast ReferenceType AssociationEndRole MethodInvocation modelImpl MethodInvocation MemberReference receiver MemberReference role getCoreHelper IfStatement BinaryOperation != MemberReference base Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end MethodInvocation base getConnection BlockStatement IfStatement MethodInvocation senderBases MethodInvocation end getParticipant contains BlockStatement StatementExpression MethodInvocation senderRole MemberReference end setBase IfStatement MethodInvocation receiverBases MethodInvocation end getParticipant contains BlockStatement StatementExpression MethodInvocation receiverRole MemberReference end setBase ReturnStatement IfStatement BinaryOperation instanceof MemberReference arole ReferenceType AssociationEndRole BlockStatement LocalVariableDeclaration ReferenceType AssociationEndRole VariableDeclarator role Cast ReferenceType AssociationEndRole MemberReference arole LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator base Cast ReferenceType AssociationEnd MemberReference abase StatementExpression MethodInvocation role MemberReference base setBase ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "role"	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier protected ReferenceType Object getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation != MemberReference owner Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference owner getSource getCoreHelper ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean isAClass FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlClass	0
MethodDeclaration Modifier public Annotation Override ReferenceType List ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement toString	0
MethodDeclaration Modifier protected ReferenceType Object getChangedElement FormalParameter ReferenceType PropertyChangeEvent e IfStatement BinaryOperation instanceof MemberReference e ReferenceType AssociationChangeEvent BlockStatement ReturnStatement Cast ReferenceType AssociationChangeEvent MemberReference e IfStatement BinaryOperation instanceof MemberReference e ReferenceType AttributeChangeEvent BlockStatement ReturnStatement Cast ReferenceType AttributeChangeEvent MemberReference e ReturnStatement MethodInvocation e getNewValue	0
MethodDeclaration Modifier protected modelChanged FormalParameter ReferenceType PropertyChangeEvent mee IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation ! Model MethodInvocation MethodInvocation mee getNewValue isATransition getFacade Literal ! "container" Literal ! "isConcurrent" Literal ! "subvertex" BlockStatement StatementExpression SuperMethodInvocation MemberReference mee modelChanged	1
MethodDeclaration Modifier private static setupUnwrapLinks FormalParameter ReferenceType Context context LocalVariableDeclaration ReferenceType String VariableDeclarator varString MethodInvocation MemberReference context Literal "stylesheet.result.type" getVariable StatementExpression Assignment MemberReference foStylesheet MethodInvocation varString Literal "fo" equals =	1
MethodDeclaration Modifier public ReferenceType String getCriticCategory ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType Collection getAllAttributes FormalParameter ReferenceType Object clazz ReturnStatement MethodInvocation impl MemberReference clazz getAllAttributes	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigComponentInstance VariableDeclarator figClone Cast ReferenceType FigComponentInstance SuperMethodInvocation clone ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier private setOwnerScope FormalParameter ReferenceType Object feature FormalParameter BasicType short modifiers StatementExpression MethodInvocation Model MethodInvocation MemberReference feature BinaryOperation > BinaryOperation & MemberReference modifiers MemberReference JavaParser ACC_STATIC Literal 0 getCoreHelper	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ordering StatementExpression Cast ReferenceType MultiplicityElement MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAState getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public final pm_expression RecognitionException TokenStreamException StatementExpression MethodInvocation cast_expression BlockStatement DoStatement _loop397 Literal true BlockStatement IfStatement BinaryOperation || BinaryOperation == MethodInvocation Literal 1 LA MemberReference DOTMBR BinaryOperation == MethodInvocation Literal 1 LA MemberReference POINTERTOMBR BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase DOTMBR BlockStatement StatementExpression MethodInvocation MemberReference DOTMBR match BreakStatement SwitchStatementCase POINTERTOMBR BlockStatement StatementExpression MethodInvocation MemberReference POINTERTOMBR match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation cast_expression BlockStatement BreakStatement _loop397	1
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElementType MethodInvocation Model MethodInvocation getModelElement getMetaTypes StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference model MemberReference modelElementType getAllModelElementsOfKind getModelManagementHelper addAll StatementExpression MethodInvocation ret MethodInvocation getTarget remove ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb IfStatement BinaryOperation != MemberReference attributes Literal null BlockStatement StatementExpression MethodInvocation attributes MemberReference sb ToSource StatementExpression This MethodInvocation MemberReference sb NewLine StatementExpression This MethodInvocation This MemberReference modifiers MemberReference sb TraceModifiers StatementExpression MethodInvocation sb Literal "const " append StatementExpression This MemberReference type MethodInvocation MemberReference sb ToSource StatementExpression MethodInvocation sb Literal " " append LocalVariableDeclaration ReferenceType String VariableDeclarator comma Literal "" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i This MemberReference names MethodInvocation size MemberReference ++ i BlockStatement StatementExpression MethodInvocation sb MemberReference comma append StatementExpression Assignment MemberReference comma Literal ", " = StatementExpression This MemberReference names MethodInvocation MemberReference i get MethodInvocation MemberReference sb ToSource IfStatement BinaryOperation != This MemberReference Value Literal null BlockStatement StatementExpression MethodInvocation sb Literal " = " append StatementExpression This MemberReference Value MethodInvocation MemberReference sb ToSource StatementExpression MethodInvocation sb Literal ";" append StatementExpression This MethodInvocation MemberReference sb NewLine	1
MethodDeclaration Modifier public ReferenceType Any getClassifier FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation && BinaryOperation != MemberReference target Literal null MethodInvocation Model MethodInvocation MemberReference target getName MethodInvocation MemberReference name equals getFacade BlockStatement ReturnStatement ClassCreator ReferenceType ArgoAny MemberReference target LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation p MemberReference name MethodInvocation p getModel findTypeInModel IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement StatementExpression Assignment MemberReference classifier MethodInvocation p MemberReference name Literal false = IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OclTypeException BinaryOperation + Literal "cannot find classifier: " MemberReference name ReturnStatement ClassCreator ReferenceType ArgoAny MemberReference classifier	0
MethodDeclaration Modifier public static addResourceLocation FormalParameter ReferenceType String location IfStatement MethodInvocation ! MemberReference location containsLocation BlockStatement StatementExpression MethodInvocation MemberReference location add	0
MethodDeclaration Modifier private ReferenceType String generateMultiplicity FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation LOG Literal "generateMultiplicity(Multiplicity modelElement)" debug IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAMultiplicity getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Multiplicity required" ReturnStatement Literal "// generateMultiplicity(Multiplicity modelElement)"	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object extendedElement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BinaryOperation instanceof MemberReference extendedElement ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference extendedElement ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or extendedElement: " MemberReference extendedElement	1
MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object item StatementExpression Assignment MemberReference target MemberReference item = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public FormalParameter BasicType boolean expanded StatementExpression Assignment This MemberReference expanded MemberReference expanded =	0
MethodDeclaration Modifier public ReferenceType JList getList ReturnStatement MemberReference list	0
MethodDeclaration Modifier public static register FormalParameter ReferenceType String crClassName FormalParameter ReferenceType String dmClassName LocalVariableDeclaration ReferenceType Class VariableDeclarator dmClass TryStatement StatementExpression Assignment MemberReference dmClass MethodInvocation Class MemberReference dmClassName forName = CatchClause CatchClauseParameter java.lang.ClassNotFoundException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error loading dm " MemberReference dmClassName MemberReference e error ReturnStatement LocalVariableDeclaration ReferenceType Critic VariableDeclarator cr MethodInvocation singletonCritics MemberReference crClassName get IfStatement BinaryOperation == MemberReference cr Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator crClass TryStatement StatementExpression Assignment MemberReference crClass MethodInvocation Class MemberReference crClassName forName = CatchClause CatchClauseParameter java.lang.ClassNotFoundException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error loading cr " MemberReference crClassName MemberReference e error ReturnStatement TryStatement StatementExpression Assignment MemberReference cr Cast ReferenceType Critic MethodInvocation crClass newInstance = CatchClause CatchClauseParameter java.lang.IllegalAccessException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error instancating cr " MemberReference crClassName MemberReference e error ReturnStatement CatchClause CatchClauseParameter java.lang.InstantiationException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error instancating cr " MemberReference crClassName MemberReference e error ReturnStatement StatementExpression MethodInvocation singletonCritics MemberReference crClassName MemberReference cr put StatementExpression MethodInvocation MemberReference cr addCritic StatementExpression MethodInvocation MemberReference cr MemberReference dmClass register	1
MethodDeclaration Modifier public Annotation Override ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions StatementExpression MethodInvocation popUpActions MethodInvocation MethodInvocation getRemoveFromDiagramAction getInstance remove StatementExpression MethodInvocation popUpActions ClassCreator ReferenceType JSeparator add StatementExpression MethodInvocation popUpActions ClassCreator ReferenceType ActionAddConcurrentRegion addElement ReturnStatement MemberReference popUpActions	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType State	1
MethodDeclaration Modifier public ReferenceType Object getAssociationRole FormalParameter ReferenceType Object afrom FormalParameter ReferenceType Object ato ReturnStatement Literal null	0
MethodDeclaration Modifier protected BasicType boolean operationMatchesCall FormalParameter ReferenceType Object operation FormalParameter ReferenceType String callName FormalParameter ReferenceType Type callParams IfStatement MethodInvocation ! callName MethodInvocation Model MethodInvocation MemberReference operation getName getFacade equals BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Collection VariableDeclarator operationParameters MethodInvocation Model MethodInvocation MemberReference operation getParameters getFacade IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation operationParameters MethodInvocation next iterator isReturn getFacade BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal the first operation parameter " Literal "to be the return type; this isn't the warn IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MethodInvocation operationParameters MethodInvocation next iterator isReturn getFacade BinaryOperation == MethodInvocation operationParameters size BinaryOperation + MemberReference callParams length Literal 1 BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Iterator VariableDeclarator paramIter MethodInvocation operationParameters iterator StatementExpression MethodInvocation paramIter next LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 WhileStatement MethodInvocation paramIter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator nextParam MethodInvocation paramIter next LocalVariableDeclaration ReferenceType Object VariableDeclarator paramType MethodInvocation Model MethodInvocation MemberReference nextParam getType getFacade LocalVariableDeclaration ReferenceType Type VariableDeclarator operationParam MethodInvocation MemberReference paramType getOclRepresentation IfStatement MemberReference ! ArraySelector MemberReference index MethodInvocation MemberReference operationParam conformsTo callParams BlockStatement ReturnStatement Literal false StatementExpression MemberReference ++ index ReturnStatement Literal true	0
MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget isSynch getFacade setSelected	0
MethodDeclaration Modifier private ReferenceType Object getCompositionActions LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MethodInvocation getActionComposition MethodInvocation getActionUniComposition StatementExpression MethodInvocation ToolBarUtility MemberReference actions Literal manageDefault ReturnStatement MemberReference actions	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getPreferredSize ReturnStatement ClassCreator ReferenceType Dimension Literal 400 Literal 500	0
MethodDeclaration Modifier private makeSubStatesIcon FormalParameter BasicType int x FormalParameter BasicType int y StatementExpression Assignment MemberReference s1 ClassCreator ReferenceType BinaryOperation - MemberReference x Literal 22 BinaryOperation + MemberReference y Literal 3 Literal 8 Literal 6 MemberReference LINE_COLOR MemberReference FILL_COLOR = StatementExpression Assignment MemberReference s2 ClassCreator ReferenceType BinaryOperation - MemberReference x Literal 11 BinaryOperation + MemberReference y Literal 9 Literal 8 Literal 6 MemberReference LINE_COLOR MemberReference FILL_COLOR = StatementExpression MethodInvocation s1 Literal true setFilled StatementExpression MethodInvocation s2 Literal true setFilled StatementExpression MethodInvocation s1 MemberReference setLineWidth StatementExpression MethodInvocation s2 MemberReference setLineWidth StatementExpression MethodInvocation s1 MemberReference SH setCornerRadius StatementExpression MethodInvocation s2 MemberReference SH setCornerRadius StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine BinaryOperation - MemberReference x Literal 18 BinaryOperation + MemberReference y Literal 6 BinaryOperation - MemberReference x Literal 7 BinaryOperation + MemberReference y Literal 12 MemberReference LINE_COLOR = StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MemberReference s1 addFig StatementExpression MethodInvocation MemberReference s2 addFig	0
MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType MultiplicityRange parseRanges FormalParameter ReferenceType String str LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType MultiplicityRange VariableDeclarator rc ClassCreator ReferenceType ArrayList TypeArgument ReferenceType MultiplicityRange IfStatement Literal MethodInvocation MemberReference str equals "" BlockStatement StatementExpression MethodInvocation rc MethodInvocation Literal "1..1" createMultiplicityRange add ReturnStatement MemberReference rc LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator stk ClassCreator ReferenceType StringTokenizer MemberReference str Literal "," WhileStatement MethodInvocation stk hasMoreTokens BlockStatement StatementExpression MethodInvocation rc MethodInvocation MethodInvocation stk nextToken createMultiplicityRange add IfStatement BinaryOperation > MethodInvocation rc size Literal 1 BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal 2.x does not support multiple multiplicity ranges. " MemberReference str debug ReturnStatement MemberReference rc	1
MethodDeclaration Modifier public ReferenceType Object getComponentRealization ReturnStatement ClassReference ReferenceType ComponentRealization	0
MethodDeclaration Modifier public ReferenceType String getNotationLanguage IfStatement BinaryOperation == MemberReference notationLanguage Literal null BlockStatement IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement ReturnStatement MethodInvocation parent getNotationLanguage BlockStatement ReturnStatement MemberReference Notation DEFAULT_NOTATION ReturnStatement MemberReference notationLanguage	0
MethodDeclaration Modifier public ReferenceType Object getPort ReturnStatement ClassReference ReferenceType Port	0
MethodDeclaration Modifier protected BasicType boolean handleSequenceNumber FormalParameter ReferenceType Object umlMessage FormalParameter ReferenceType List TypeArgument ReferenceType Integer seqno FormalParameter BasicType boolean refindOperation ParseException LocalVariableDeclaration BasicType int VariableDeclarator i IfStatement BinaryOperation != MemberReference seqno Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator root LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator pname ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator mname ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType String VariableDeclarator gname MethodInvocation MemberReference umlMessage generateMessageNumber LocalVariableDeclaration BasicType boolean VariableDeclarator swapRoles Literal false LocalVariableDeclaration BasicType int VariableDeclarator majval Literal 0 IfStatement BinaryOperation != MethodInvocation seqno BinaryOperation - MethodInvocation seqno size Literal 2 get Literal null BlockStatement StatementExpression Assignment MemberReference majval MethodInvocation Math BinaryOperation - MethodInvocation seqno MethodInvocation intValue BinaryOperation - MethodInvocation seqno size Literal 2 get Literal 1 Literal 0 max = LocalVariableDeclaration BasicType int VariableDeclarator minval Literal 0 IfStatement BinaryOperation != MethodInvocation seqno BinaryOperation - MethodInvocation seqno size Literal 1 get Literal null BlockStatement StatementExpression Assignment MemberReference minval MethodInvocation Math MethodInvocation seqno MethodInvocation intValue BinaryOperation - MethodInvocation seqno size Literal 1 get Literal 0 max = ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < BinaryOperation + MemberReference i Literal 1 MethodInvocation seqno size Assignment MemberReference i Literal 2 += BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator bv Literal 1 IfStatement BinaryOperation != MethodInvocation seqno MemberReference i get Literal null BlockStatement StatementExpression Assignment MemberReference bv MethodInvocation Math MethodInvocation seqno MethodInvocation intValue MemberReference i get Literal 1 max = LocalVariableDeclaration BasicType int VariableDeclarator sv Literal 0 IfStatement BinaryOperation != MethodInvocation seqno BinaryOperation + MemberReference i Literal 1 get Literal null BlockStatement StatementExpression Assignment MemberReference sv MethodInvocation Math MethodInvocation seqno MethodInvocation intValue BinaryOperation + MemberReference i Literal 1 get Literal 0 max = IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation mname Literal "." append StatementExpression MethodInvocation mname BinaryOperation + MethodInvocation Integer MemberReference bv toString Cast BasicType char BinaryOperation + Literal 'a' MemberReference sv append IfStatement BinaryOperation < BinaryOperation + MemberReference i Literal 3 MethodInvocation seqno size BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation pname Literal "." append StatementExpression MethodInvocation pname BinaryOperation + MethodInvocation Integer MemberReference bv toString Cast BasicType char BinaryOperation + Literal 'a' MemberReference sv append StatementExpression Assignment MemberReference root Literal null = IfStatement BinaryOperation > MethodInvocation pname length Literal 0 BlockStatement StatementExpression Assignment MemberReference root MethodInvocation MethodInvocation Model MethodInvocation MemberReference umlMessage getSender getFacade MethodInvocation pname toString findMsg = IfStatement BinaryOperation == MemberReference root Literal null BlockStatement StatementExpression Assignment MemberReference root MethodInvocation MethodInvocation Model MethodInvocation MemberReference umlMessage getReceiver getFacade MethodInvocation pname toString findMsg = IfStatement BinaryOperation != MemberReference root Literal null BlockStatement StatementExpression Assignment MemberReference swapRoles Literal true = IfStatement BinaryOperation && MethodInvocation ! MethodInvocation Model MethodInvocation MemberReference umlMessage getSender getFacade Literal null hasMsgWithActivator MethodInvocation MethodInvocation Model MethodInvocation MemberReference umlMessage getReceiver getFacade Literal null hasMsgWithActivator BlockStatement StatementExpression Assignment MemberReference swapRoles Literal true = IfStatement MethodInvocation MethodInvocation mname toString MethodInvocation gname toString compareMsgNumbers BlockStatement IfStatement MethodInvocation MethodInvocation gname toString MethodInvocation mname toString isMsgNumberStartOf BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.message.subtree-rooted-self" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 IfStatement BinaryOperation && BinaryOperation > MethodInvocation Model MethodInvocation MemberReference umlMessage getPredecessors MethodInvocation size getFacade Literal 1 BinaryOperation > MethodInvocation Model MethodInvocation MemberReference umlMessage getSuccessors MethodInvocation size getFacade Literal 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.message.start-end-many-threads" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 IfStatement BinaryOperation && BinaryOperation == MemberReference root Literal null BinaryOperation > MethodInvocation pname length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.message.activator-not-found" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 IfStatement BinaryOperation && BinaryOperation && MemberReference swapRoles BinaryOperation > MethodInvocation Model MethodInvocation MemberReference umlMessage getActivatedMessages MethodInvocation size getFacade Literal 0 BinaryOperation != MethodInvocation Model MethodInvocation MemberReference umlMessage getSender getFacade MethodInvocation Model MethodInvocation MemberReference umlMessage getReceiver getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.message.reverse-direction-message" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference umlMessage getPredecessors getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator c2 ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference umlMessage getSuccessors getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it StatementExpression Assignment MemberReference it MethodInvocation c2 iterator = WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference umlMessage MethodInvocation it next getCollaborationsHelper StatementExpression Assignment MemberReference it MethodInvocation c iterator = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it2 MethodInvocation c2 iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator pre MethodInvocation it next StatementExpression MethodInvocation Model MethodInvocation MemberReference umlMessage MemberReference pre getCollaborationsHelper WhileStatement MethodInvocation it2 hasNext BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation it2 next MemberReference pre addPredecessor getCollaborationsHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference umlMessage MemberReference root setActivator getCollaborationsHelper IfStatement MemberReference swapRoles BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator r MethodInvocation Model MethodInvocation MemberReference umlMessage getSender getFacade StatementExpression MethodInvocation Model MethodInvocation MemberReference umlMessage MethodInvocation Model MethodInvocation MemberReference umlMessage getReceiver getFacade setSender getCollaborationsHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference umlMessage MemberReference r setReceiver getCommonBehaviorHelper IfStatement BinaryOperation == MemberReference root Literal null BlockStatement StatementExpression Assignment MemberReference c MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference umlMessage getSender getFacade getSentMessages getFacade Literal null filterWithActivator = BlockStatement StatementExpression Assignment MemberReference c MethodInvocation Model MethodInvocation MemberReference root getActivatedMessages getFacade = StatementExpression Assignment MemberReference c2 MethodInvocation MemberReference c MemberReference root MemberReference umlMessage findCandidateRoots = StatementExpression Assignment MemberReference it MethodInvocation c2 iterator = IfStatement BinaryOperation <= MemberReference majval Literal 0 BlockStatement WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference umlMessage MethodInvocation it next addSuccessor getCollaborationsHelper IfStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator pre MethodInvocation MethodInvocation it next BinaryOperation - MemberReference majval Literal 1 Literal false walk LocalVariableDeclaration ReferenceType Object VariableDeclarator post MethodInvocation MemberReference pre MemberReference minval IfStatement BinaryOperation != MemberReference post Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference post MemberReference pre getCollaborationsHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference post MemberReference umlMessage addPredecessor getCollaborationsHelper StatementExpression MethodInvocation MemberReference pre MemberReference umlMessage MemberReference minval insertSuccessor StatementExpression Assignment MemberReference refindOperation Literal true = ReturnStatement MemberReference refindOperation	1
MethodDeclaration deleteExtend FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Extend BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType Extend MemberReference elem deleteCollection getUmlHelper	0
MethodDeclaration Modifier public Annotation Override BasicType int getNumSteps IfStatement MemberReference BlockStatement ReturnStatement Literal 2 ReturnStatement Literal 1	0
MethodDeclaration deleteClass FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType UmlClass BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier public ReferenceType MappingExpression createMappingExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body LocalVariableDeclaration ReferenceType MappingExpression VariableDeclarator myMappingExpression MethodInvocation modelImpl MethodInvocation getDataTypes MethodInvocation MethodInvocation MemberReference language MemberReference body createMappingExpression getUmlPackage StatementExpression SuperMethodInvocation MemberReference myMappingExpression ReturnStatement MemberReference myMappingExpression	0
MethodDeclaration Modifier public ReferenceType Collection getFeatures FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator list ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MemberReference obsoleteFeatures BlockStatement IfStatement MethodInvocation name MethodInvocation Model MethodInvocation MemberReference getName getFacade equals BlockStatement StatementExpression MethodInvocation list MemberReference add ReturnStatement MemberReference list	0
MethodDeclaration ReferenceType JTabbedPane getTabs ReturnStatement MemberReference topLevelTabbedPane	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object theModelElement FormalParameter ReferenceType Object theStereotype ReturnStatement MethodInvocation impl MemberReference theModelElement MemberReference theStereotype	0
MethodDeclaration Modifier protected ReferenceType Action getActionChangeEvent IfStatement BinaryOperation == MemberReference actionChangeEvent Literal null BlockStatement StatementExpression Assignment MemberReference actionChangeEvent ClassCreator ReferenceType = ReturnStatement MemberReference actionChangeEvent	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isANamespace getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getOwnedElements getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public init StatementExpression MethodInvocation ImporterManager MethodInvocation This getInstance	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Stereotype getStereotypes FormalParameter ReferenceType Object ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Profile BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Stereotype Cast ReferenceType Profile MemberReference ns ReturnStatement MethodInvocation Collections emptySet	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Classifier getExtendingClassifiers FormalParameter ReferenceType Object clazz IfStatement BinaryOperation == MemberReference clazz Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Classifier VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Classifier TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator gen MethodInvocation Model MethodInvocation MemberReference clazz getSpecializations getFacade BlockStatement LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator client Cast ReferenceType Generalization MemberReference gen IfStatement BinaryOperation instanceof MemberReference client ReferenceType Classifier BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Classifier MemberReference client add CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public BasicType boolean isFrozen FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle isReadOnly	0
MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getActivator getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public notifyMessage FormalParameter Modifier final ReferenceType String title FormalParameter Modifier final ReferenceType String introduction FormalParameter Modifier final ReferenceType String message StatementExpression Assignment MemberReference hasMessages Literal true = StatementExpression MethodInvocation messageArea BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation messageArea getText MemberReference title Literal "\n" MemberReference introduction Literal "\n" MemberReference message Literal "\n\n" setText StatementExpression MethodInvocation messageArea MethodInvocation messageArea MethodInvocation length getText setCaretPosition	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getUMLClass getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions IfStatement BinaryOperation == MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation size getInstance Literal 1 BlockStatement StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset ClassCreator ReferenceType ActionCreateContainedModelElement MethodInvocation Model MethodInvocation getRegion getMetaTypes MethodInvocation getOwner add ReturnStatement MemberReference popUpActions	1
MethodDeclaration Modifier public BasicType boolean doCommand FormalParameter ReferenceType String argument IfStatement BinaryOperation == MemberReference argument Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "An argument has to be provided." error ReturnStatement Literal false LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation argument Literal ':' indexOf IfStatement BinaryOperation || BinaryOperation == MemberReference index Literal - 1 BinaryOperation <= MethodInvocation argument length MemberReference index BlockStatement StatementExpression MethodInvocation LOG Literal "Argument must be <importmodule>:<importpath>" error ReturnStatement Literal false LocalVariableDeclaration ReferenceType Import VariableDeclarator imp ClassCreator ReferenceType Import Literal null LocalVariableDeclaration ReferenceType Collection VariableDeclarator languages MethodInvocation imp getLanguages IfStatement BinaryOperation || BinaryOperation == MemberReference languages Literal null MethodInvocation languages isEmpty BlockStatement StatementExpression MethodInvocation LOG Literal "No importers available." error ReturnStatement Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator importerName MethodInvocation argument Literal 0 MemberReference index substring LocalVariableDeclaration ReferenceType ImportInterface VariableDeclarator importer MethodInvocation imp MemberReference importerName IfStatement BinaryOperation == MemberReference importer Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "No import support for language " MemberReference importerName error ReturnStatement Literal false StatementExpression MethodInvocation imp MemberReference importer LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MethodInvocation argument BinaryOperation + MemberReference index Literal 1 substring IfStatement MethodInvocation ! file exists BlockStatement StatementExpression MethodInvocation LOG Literal "The specified file/directory doesn't exist." error ReturnStatement Literal false StatementExpression MethodInvocation imp ArrayCreator ReferenceType File ArrayInitializer MemberReference file LocalVariableDeclaration ReferenceType ImportStatusScreen VariableDeclarator ClassCreator ReferenceType ImportStatusScreen ClassCreator ReferenceType JFrame Literal "Importing" Literal "Splash" StatementExpression MethodInvocation imp MemberReference doImport ReturnStatement Literal true	1
MethodDeclaration Modifier public Annotation Override initWizard FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType WizAddInstanceVariable BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator sug SuperMethodInvocation getDefaultSuggestion StatementExpression Cast ReferenceType WizAddInstanceVariable MemberReference w StatementExpression Cast ReferenceType WizAddInstanceVariable MemberReference w	0
MethodDeclaration Modifier private ReferenceType Stereotype buildStereotype FormalParameter ReferenceType String text LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getStereotype MethodInvocation createStereotype getUmlPackage StatementExpression SuperMethodInvocation MemberReference stereotype StatementExpression MethodInvocation stereotype MemberReference text setName ReturnStatement MemberReference stereotype	0
MethodDeclaration Modifier public ReferenceType String getCurrentThemeClassName LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation Configuration MemberReference Argo KEY_THEME_CLASS Literal null getString IfStatement MethodInvocation DEFAULT_KEY MemberReference value equals BlockStatement StatementExpression Assignment MemberReference value Literal null = ReturnStatement MemberReference value	0
MethodDeclaration Modifier public Annotation Override BasicType boolean hit FormalParameter ReferenceType Rectangle r LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator getPathItemFigs WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f Cast ReferenceType Fig MethodInvocation it next IfStatement MethodInvocation f MemberReference r hit BlockStatement ReturnStatement Literal true ReturnStatement SuperMethodInvocation MemberReference r hit	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MemberReference MemberReference showem BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Memento VariableDeclarator ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_SHOW_STEREOTYPES MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference MemberReference showem = StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference MemberReference ! showem = StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent StatementExpression MethodInvocation MemberReference doUndoable	0
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getOwner getFacade addElement	0
MethodDeclaration Modifier public setNamespace FormalParameter ReferenceType Object ns IfStatement MethodInvocation ! Model MethodInvocation MemberReference ns isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "Not a namespace" error StatementExpression MethodInvocation LOG MemberReference ns error ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Given object not a namespace" IfStatement BinaryOperation && BinaryOperation != MemberReference namespace Literal null BinaryOperation != MemberReference namespace MemberReference ns BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference namespace removeModelEventListener getPump LocalVariableDeclaration ReferenceType Object VariableDeclarator oldNs MemberReference namespace StatementExpression Assignment MemberReference namespace MemberReference ns = StatementExpression MethodInvocation MemberReference NAMESPACE_KEY MemberReference oldNs MemberReference ns firePropertyChange StatementExpression MethodInvocation Model MethodInvocation This MemberReference namespace Literal "remove" addModelEventListener getPump	1
MethodDeclaration Modifier public BasicType boolean isACallState FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isASignal getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation head getLineColor	0
MethodDeclaration Modifier public Annotation Override computeRouteImpl StatementExpression SuperMethodInvocation computeRouteImpl StatementExpression MethodInvocation updateActivations	0
MethodDeclaration Modifier public ReferenceType FigEdge getFigEdgeFor FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object edge FormalParameter ReferenceType Map styleAttributes AssertStatement BinaryOperation != MemberReference edge Literal null AssertStatement BinaryOperation instanceof MemberReference lay ReferenceType LayerPerspective LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diag Cast ReferenceType ArgoDiagram Cast ReferenceType LayerPerspective MemberReference lay LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation diag getDiagramSettings LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator newEdge Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAActivityEdge getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigActivityEdge MemberReference edge MemberReference settings = IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigEdgeNote MemberReference edge MemberReference settings = StatementExpression MethodInvocation MemberReference lay MemberReference newEdge MemberReference edge addEdge ReturnStatement MemberReference newEdge	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString IfStatement BinaryOperation != MemberReference printString Literal null BlockStatement ReturnStatement MemberReference printString IfStatement BinaryOperation == MemberReference patternCount Literal 0 BlockStatement ReturnStatement Literal "Any Type" LocalVariableDeclaration ReferenceType String VariableDeclarator res Literal "" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference patternCount MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator clsName MemberReference ArraySelector MemberReference i MethodInvocation getName patterns LocalVariableDeclaration BasicType int VariableDeclarator lastDot MethodInvocation clsName Literal "." lastIndexOf StatementExpression Assignment MemberReference clsName MethodInvocation clsName BinaryOperation + MemberReference lastDot Literal 1 substring = StatementExpression Assignment MemberReference res MemberReference clsName += IfStatement BinaryOperation < MemberReference i BinaryOperation - MemberReference patternCount Literal 1 BlockStatement StatementExpression Assignment MemberReference res Literal ", " += StatementExpression Assignment MemberReference printString MemberReference res = ReturnStatement MemberReference res	1
MethodDeclaration Modifier public BasicType boolean isRedoable ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object taggedValue ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration addEnumeration FormalParameter ReferenceType String name FormalParameter BasicType short modifiers FormalParameter ReferenceType List TypeArgument ReferenceType String interfaces FormalParameter ReferenceType String javadoc FormalParameter BasicType boolean forceIt LocalVariableDeclaration ReferenceType Object VariableDeclarator mEnum Literal null IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression Assignment MemberReference mEnum MethodInvocation MethodInvocation Model MethodInvocation createClass getCoreFactory MemberReference name MemberReference modifiers MemberReference javadoc MemberReference EMPTY_STRING_LIST addClassifier = StatementExpression MethodInvocation Model MethodInvocation MemberReference mEnum MethodInvocation Literal "enumeration" getUML1Stereotype addStereotype getCoreHelper StatementExpression MethodInvocation ProjectManager MethodInvocation updateRoots getManager BlockStatement StatementExpression Assignment MemberReference mEnum MethodInvocation Model MethodInvocation createEnumeration getCoreFactory = LocalVariableDeclaration ReferenceType Object VariableDeclarator mNamespace IfStatement BinaryOperation != MethodInvocation parseState getClassifier Literal null BlockStatement StatementExpression Assignment MemberReference mNamespace MethodInvocation parseState getClassifier = BlockStatement StatementExpression MethodInvocation parseState outerClassifier StatementExpression Assignment MemberReference mNamespace MemberReference currentPackage = IfStatement MethodInvocation LOG isInfoEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Created new enumeration for " MemberReference name info StatementExpression MethodInvocation Model MethodInvocation MemberReference mEnum MemberReference name setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference mEnum MemberReference mNamespace setNamespace getCoreHelper StatementExpression MethodInvocation newElements MemberReference mEnum add StatementExpression MethodInvocation parseState MemberReference mEnum innerClassifier StatementExpression MethodInvocation parseStateStack MemberReference parseState push StatementExpression Assignment MemberReference parseState ClassCreator ReferenceType ParseState MemberReference parseState MemberReference mEnum MemberReference currentPackage = StatementExpression MethodInvocation MemberReference mEnum MemberReference modifiers setVisibility IfStatement BinaryOperation <= MethodInvocation getLevel Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference mEnum MemberReference javadoc addDocumentationTag IfStatement BinaryOperation > BinaryOperation & MemberReference modifiers MemberReference JavaParser ACC_ABSTRACT Literal 0 BlockStatement StatementExpression MethodInvocation Literal "Illegal \"abstract\" modifier on enum " MemberReference name logError BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mEnum Literal false setAbstract getCoreHelper IfStatement BinaryOperation > BinaryOperation & MemberReference modifiers MemberReference JavaParser ACC_FINAL Literal 0 BlockStatement StatementExpression MethodInvocation Literal "Illegal \"final\" modifier on enum " MemberReference name logError BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mEnum Literal true setLeaf getCoreHelper IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mEnum Literal false setRoot getCoreHelper IfStatement BinaryOperation == MethodInvocation getLevel Literal 0 BlockStatement ReturnStatement IfStatement BinaryOperation != MemberReference interfaces Literal null BlockStatement StatementExpression MethodInvocation MemberReference mEnum MemberReference interfaces MemberReference forceIt addInterfaces	1
MethodDeclaration Modifier public static FormalParameter ReferenceType Object o FormalParameter ReferenceType String s LocalVariableDeclaration ReferenceType Object VariableDeclarator taggedValue MethodInvocation Model MethodInvocation MemberReference o MemberReference Argo DOCUMENTATION_TAG getTaggedValue getFacade IfStatement BinaryOperation == MemberReference taggedValue Literal null BlockStatement StatementExpression Assignment MemberReference taggedValue MethodInvocation Model MethodInvocation MemberReference Argo DOCUMENTATION_TAG MemberReference s buildTaggedValue getExtensionMechanismsFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference o MemberReference taggedValue addTaggedValue getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference taggedValue MemberReference s getExtensionMechanismsHelper	0
MethodDeclaration Modifier protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort LocalVariableDeclaration ReferenceType Dimension VariableDeclarator stereoDim MethodInvocation MethodInvocation getMinimumSize getStereotypeFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MethodInvocation getLeftMargin BinaryOperation + MemberReference y MethodInvocation getTopMargin BinaryOperation - BinaryOperation - MemberReference w MethodInvocation getLeftMargin MethodInvocation getRightMargin MemberReference stereoDim height setBounds getStereotypeFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MethodInvocation getLeftMargin BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation getY getStereotypeFig MemberReference stereoDim height Literal 1 BinaryOperation - BinaryOperation - MemberReference w MethodInvocation getLeftMargin MethodInvocation getRightMargin MemberReference nameDim height setBounds getNameFig StatementExpression Assignment MemberReference _x MemberReference x = StatementExpression Assignment MemberReference _y MemberReference y = StatementExpression Assignment MemberReference _w MemberReference w = StatementExpression Assignment MemberReference MemberReference h = StatementExpression MethodInvocation	0
MethodDeclaration Modifier private Annotation Deprecated ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Class type FormalParameter ReferenceType Object namespace FormalParameter ReferenceType Object machine LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram Literal null LocalVariableDeclaration ReferenceType Class VariableDeclarator diType Literal null IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLClassDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLClassDiagram MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType ClassDiagram = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLUseCaseDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLUseCaseDiagram MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType UseCaseDiagram = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLStateDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLStateDiagram MemberReference namespace MemberReference machine = StatementExpression Assignment MemberReference diType ClassReference ReferenceType StateDiagram = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLDeploymentDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLDeploymentDiagram MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType DeploymentDiagram = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLCollaborationDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLCollaborationDiagram MemberReference namespace = StatementExpression Assignment MemberReference diType ClassReference ReferenceType CollaborationDiagram = IfStatement BinaryOperation == MemberReference type ClassReference ReferenceType UMLActivityDiagram BlockStatement StatementExpression Assignment MemberReference diagram ClassCreator ReferenceType UMLActivityDiagram MemberReference namespace MemberReference machine = StatementExpression Assignment MemberReference diType ClassReference ReferenceType ActivityDiagram = IfStatement BinaryOperation == MemberReference diagram Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Unknown diagram type" IfStatement BinaryOperation != MethodInvocation Model getDiagramInterchangeModel Literal null BlockStatement StatementExpression MethodInvocation diagram MethodInvocation MethodInvocation GraphChangeAdapter getInstance addGraphEventListener getGraphModel LocalVariableDeclaration ReferenceType VariableDeclarator dd MethodInvocation GraphChangeAdapter MethodInvocation MemberReference diType MemberReference namespace createDiagram getInstance StatementExpression Cast ReferenceType UMLMutableGraphSupport MethodInvocation diagram getGraphModel ReturnStatement MemberReference diagram	1
MethodDeclaration Modifier private ReferenceType Object getStereotype FormalParameter ReferenceType Object me FormalParameter ReferenceType String name FormalParameter ReferenceType String baseClass LocalVariableDeclaration ReferenceType Collection VariableDeclarator models MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModels getManager LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereos MethodInvocation Model MethodInvocation MemberReference models MemberReference me getAllPossibleStereotypes getExtensionMechanismsHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference stereos Literal null BinaryOperation > MethodInvocation stereos size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation stereos iterator WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference stereotype MethodInvocation iter next = IfStatement MethodInvocation Model MethodInvocation MemberReference stereotype MemberReference name MemberReference baseClass isStereotypeInh getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Returning the existing stereotype of <<" MethodInvocation Model MethodInvocation MemberReference stereotype getName getFacade Literal ">>" info ReturnStatement MemberReference stereotype StatementExpression Assignment MemberReference stereotype MethodInvocation MemberReference name getStereotype = IfStatement BinaryOperation != MemberReference stereotype Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference stereotype MemberReference me addBaseClass getExtensionMechanismsHelper ReturnStatement MemberReference stereotype ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not find " Literal "a suitable stereotype for " MethodInvocation Model MethodInvocation MemberReference me getName getFacade Literal " - stereotype: <<" MemberReference name Literal ">> base: " MemberReference baseClass	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MemberReference dm IfStatement MethodInvocation Model MethodInvocation MemberReference asc isAAssociationRole getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator conns MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference conns Literal null BinaryOperation != MethodInvocation conns size Literal 2 BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration BasicType int VariableDeclarator aggCount Literal 0 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator assocEnds MethodInvocation conns iterator WhileStatement MethodInvocation assocEnds hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation assocEnds next IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference ae isAggregate getFacade MethodInvocation Model MethodInvocation MemberReference ae isComposite getFacade BlockStatement StatementExpression MemberReference ++ aggCount IfStatement BinaryOperation > MemberReference aggCount Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND BlockStatement ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public Annotation Override mouseReleased FormalParameter ReferenceType MouseEvent e StatementExpression Assignment MemberReference curHandle index Literal - 1 =	0
MethodDeclaration Modifier public setConcurrency FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType Object concurrencyKind StatementExpression MethodInvocation UMLUtil ArrayCreator ReferenceType Object ArrayInitializer MemberReference handle MemberReference concurrencyKind ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Element ClassReference ReferenceType CallConcurrencyKind checkArgs LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType Operation MemberReference handle StatementExpression MethodInvocation editingDomain MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Set the concurrencyKind of the element #" MemberReference concurrencyKind MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier private ReferenceType Permission buildPermissionInternal FormalParameter ReferenceType ModelElement client FormalParameter ReferenceType ModelElement LocalVariableDeclaration ReferenceType Permission VariableDeclarator permission MethodInvocation createPackageImport StatementExpression MethodInvocation permission MethodInvocation MemberReference add getSupplier StatementExpression MethodInvocation permission MethodInvocation MemberReference client add getClient IfStatement BinaryOperation instanceof MemberReference client ReferenceType Namespace BlockStatement StatementExpression MethodInvocation permission Cast ReferenceType Namespace MemberReference client setNamespace IfStatement BinaryOperation != MethodInvocation client getNamespace Literal null BlockStatement StatementExpression MethodInvocation permission MethodInvocation client getNamespace setNamespace ReturnStatement MemberReference permission	0
MethodDeclaration Modifier private initFigs StatementExpression MethodInvocation Literal false StatementExpression Assignment MemberReference head ClassCreator ReferenceType FigCircle MemberReference X MemberReference MemberReference STATE_WIDTH MemberReference HEIGHT MemberReference LINE_COLOR MemberReference SOLID_FILL_COLOR = StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference head addFig StatementExpression MethodInvocation Literal false setBlinkPorts	0
MethodDeclaration Modifier protected handleHeadline FormalParameter ReferenceType XMLElement e StatementExpression Assignment MemberReference headline MethodInvocation MethodInvocation trim MethodInvocation e getText decode =	0
MethodDeclaration Modifier protected Annotation Override endAttached FormalParameter ReferenceType FigEdge fe LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation editor MethodInvocation getActiveLayer getLayerManager LocalVariableDeclaration ReferenceType FigAssociationClass VariableDeclarator thisFig Cast ReferenceType FigAssociationClass MethodInvocation lay MethodInvocation getNewEdge presentationFor StatementExpression MethodInvocation MemberReference editor MemberReference thisFig MemberReference lay	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal	0
MethodDeclaration Modifier public BasicType boolean isOrthogonal FormalParameter ReferenceType Object handle ReturnStatement Cast ReferenceType State MemberReference handle	0
MethodDeclaration Modifier private ReferenceType Object findTarget FormalParameter ReferenceType Object t IfStatement BinaryOperation instanceof MemberReference t ReferenceType Fig BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f Cast ReferenceType Fig MemberReference t StatementExpression Assignment MemberReference t MethodInvocation f getOwner = ReturnStatement MemberReference t	0
MethodDeclaration Modifier protected ReferenceType Object getTarget ReturnStatement MemberReference target	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType getScopeKind ReturnStatement MethodInvocation impl getScopeKind	0
MethodDeclaration Modifier private ReferenceType String generateObjectFlowState FormalParameter ReferenceType Object m LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference m getType getFacade IfStatement BinaryOperation == MemberReference c Literal null BlockStatement ReturnStatement Literal "" ReturnStatement MethodInvocation Model MethodInvocation MemberReference c getName getFacade	1
MethodDeclaration Modifier public BasicType boolean getUseTrapRect ReturnStatement Literal true	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference BASE instructions	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Flow	0
MethodDeclaration Modifier public ReferenceType ConnectorEnd buildAssociationEndRole FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType Lifeline VariableDeclarator lifeline Cast ReferenceType Lifeline MemberReference LocalVariableDeclaration ReferenceType ConnectorEnd VariableDeclarator end MethodInvocation LocalVariableDeclaration ReferenceType ConnectableElement VariableDeclarator prop MethodInvocation lifeline getRepresents IfStatement BinaryOperation == MemberReference prop Literal null BlockStatement StatementExpression Assignment MemberReference prop MethodInvocation createProperty = StatementExpression MethodInvocation lifeline MemberReference prop StatementExpression MethodInvocation end MemberReference prop ReturnStatement MemberReference end	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType UMLCheckBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLCheckBox2 VariableDeclarator source Cast ReferenceType UMLCheckBox2 MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation source getTarget IfStatement BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference target isAGeneralizableElement getFacade MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade MethodInvocation Model MethodInvocation MemberReference target getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MethodInvocation source isSelected setRoot getCoreHelper	0
MethodDeclaration Modifier public BasicType boolean askConfirmationAndSave LocalVariableDeclaration ReferenceType ProjectBrowser VariableDeclarator MethodInvocation ProjectBrowser getInstance LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation && BinaryOperation != MemberReference p Literal null MethodInvocation saveAction isEnabled BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation MessageFormat MethodInvocation Translator Literal localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation p getName format LocalVariableDeclaration BasicType int VariableDeclarator response MethodInvocation JOptionPane MemberReference MemberReference t MemberReference t MemberReference JOptionPane YES_NO_CANCEL_OPTION showConfirmDialog IfStatement BinaryOperation || BinaryOperation == MemberReference response MemberReference JOptionPane CANCEL_OPTION BinaryOperation == MemberReference response MemberReference JOptionPane CLOSED_OPTION BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MemberReference response MemberReference JOptionPane YES_OPTION BlockStatement StatementExpression MethodInvocation BinaryOperation && BinaryOperation != MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager Literal null BinaryOperation != MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getURI getManager Literal null IfStatement MethodInvocation saveAction isEnabled BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType InheritanceNode BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation Cast ReferenceType InheritanceNode MemberReference parent getSupplierDependencies MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator next MethodInvocation it next IfStatement MethodInvocation Model MethodInvocation MemberReference next isAAbstraction getFacade BlockStatement StatementExpression MethodInvocation list MemberReference next add StatementExpression Assignment MemberReference it MethodInvocation Model MethodInvocation Cast ReferenceType InheritanceNode MemberReference parent getClientDependencies MethodInvocation iterator getFacade = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator next MethodInvocation it next IfStatement MethodInvocation Model MethodInvocation MemberReference next isAAbstraction getFacade BlockStatement StatementExpression MethodInvocation list MemberReference next add LocalVariableDeclaration ReferenceType Iterator VariableDeclarator generalizationsIt MethodInvocation Model MethodInvocation Cast ReferenceType InheritanceNode MemberReference parent getGeneralizations MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator specializationsIt MethodInvocation Model MethodInvocation Cast ReferenceType InheritanceNode MemberReference parent getSpecializations MethodInvocation iterator getFacade WhileStatement MethodInvocation generalizationsIt hasNext BlockStatement StatementExpression MethodInvocation list MethodInvocation generalizationsIt next add WhileStatement MethodInvocation specializationsIt hasNext BlockStatement StatementExpression MethodInvocation list MethodInvocation specializationsIt next add ReturnStatement MemberReference list ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType Object getDestination FormalParameter ReferenceType Object link TryStatement IfStatement BinaryOperation instanceof MemberReference link ReferenceType Link BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference link getDestination getCoreHelper CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument is not a link"	0
MethodDeclaration Modifier protected ReferenceType Action getActionUniComposition IfStatement BinaryOperation == MemberReference actionUniComposition Literal null BlockStatement StatementExpression Assignment MemberReference actionUniComposition ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionAddAssociationRole MethodInvocation Model MethodInvocation getComposite getAggregationKind Literal true Literal "button.new-unicomposition" = ReturnStatement MemberReference actionUniComposition	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Object getParams ReturnStatement MemberReference params	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType ElementResidence getResidentElements FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Component BlockStatement ReturnStatement Cast ReferenceType Component MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier private addDiagramMember FormalParameter ReferenceType ArgoDiagram d LocalVariableDeclaration BasicType int VariableDeclarator serial MethodInvocation getDiagramCount WhileStatement MethodInvocation ! MethodInvocation d getName BlockStatement TryStatement StatementExpression MethodInvocation d BinaryOperation + BinaryOperation + MethodInvocation d getName Literal " " MemberReference serial setName CatchClause CatchClauseParameter PropertyVetoException e StatementExpression MemberReference ++ serial LocalVariableDeclaration ReferenceType ProjectMember VariableDeclarator pm ClassCreator ReferenceType ProjectMemberDiagram MemberReference d This StatementExpression MethodInvocation MemberReference d addDiagram StatementExpression MethodInvocation members MemberReference pm add	0
MethodDeclaration Modifier public ReferenceType Object getValueOfTag FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object property IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference property ReferenceType Property BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Element VariableDeclarator elem Cast ReferenceType Element MemberReference handle LocalVariableDeclaration ReferenceType Property VariableDeclarator prop Cast ReferenceType Property MemberReference property LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MethodInvocation prop eContainer LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation UMLUtil MemberReference elem MethodInvocation stereotype getQualifiedName MethodInvocation prop getName getTaggedValue IfStatement BinaryOperation && MethodInvocation prop isMultivalued BinaryOperation instanceof MemberReference value ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator newValue ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation newValue MemberReference value add StatementExpression Assignment MemberReference value MemberReference newValue = IfStatement BinaryOperation instanceof MemberReference value ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator newValue ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator v Cast ReferenceType Collection MemberReference value BlockStatement StatementExpression MethodInvocation newValue MethodInvocation MemberReference prop MemberReference v postprocessPropertyValue add StatementExpression Assignment MemberReference value MemberReference newValue = BlockStatement StatementExpression Assignment MemberReference value MethodInvocation MemberReference prop MemberReference value postprocessPropertyValue = ReturnStatement MemberReference value	1
MethodDeclaration Modifier public ReferenceType Object getModel ReturnStatement ClassReference ReferenceType Model	0
MethodDeclaration Modifier protected ReferenceType String getInitiatorOfAction FormalParameter ReferenceType Object umlAction LocalVariableDeclaration ReferenceType String VariableDeclarator result Literal "" IfStatement MethodInvocation Model MethodInvocation MemberReference umlAction isACallAction getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator umlOperation MethodInvocation Model MethodInvocation MemberReference umlAction getOperation getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference umlOperation isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder MethodInvocation Model MethodInvocation MemberReference umlOperation getName getFacade IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal "()" append StatementExpression Assignment MemberReference result MethodInvocation sb toString = IfStatement MethodInvocation Model MethodInvocation MemberReference umlAction getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator umlSignal MethodInvocation Model MethodInvocation MemberReference umlAction getSignal getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference umlSignal isASignal getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation Model MethodInvocation MemberReference umlSignal getName getFacade IfStatement BinaryOperation != MemberReference n Literal null BlockStatement StatementExpression Assignment MemberReference result MemberReference n = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public static ReferenceType getSingleton ReturnStatement MemberReference singleton	0
MethodDeclaration Modifier public ReferenceType Object getNewTarget ReturnStatement TernaryExpression BinaryOperation || BinaryOperation == MemberReference theNewTargets Literal null BinaryOperation < MemberReference theNewTargets length Literal 1 Literal null MemberReference ArraySelector Literal 0 theNewTargets	0
MethodDeclaration Modifier public setInstructions FormalParameter ReferenceType String s StatementExpression Assignment MemberReference instructions MemberReference s =	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal "parsing.help.java.fig-nodemodelelement"	0
MethodDeclaration Modifier public ReferenceType getSubTextFont ReturnStatement MemberReference	0
MethodDeclaration Modifier private BasicType int countFiles FormalParameter ReferenceType Collection TypeArgument ReferenceType File files LocalVariableDeclaration BasicType int VariableDeclarator total Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator f MemberReference files BlockStatement IfStatement MethodInvocation f MethodInvocation Literal ".jar" endsWith getName BlockStatement TryStatement ForStatement ForControl VariableDeclaration ReferenceType Enumeration TypeArgument ReferenceType JarEntry VariableDeclarator e ClassCreator MethodInvocation entries ReferenceType JarFile MemberReference f MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry MethodInvocation e nextElement IfStatement BinaryOperation && MethodInvocation ! entry isDirectory MethodInvocation entry MethodInvocation Literal ".class" endsWith getName BlockStatement StatementExpression MemberReference ++ total CatchClause CatchClauseParameter IOException e StatementExpression MemberReference ++ total BlockStatement StatementExpression MemberReference ++ total ReturnStatement MemberReference total	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isEnabled ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement BinaryOperation instanceof MemberReference dm ReferenceType FigEdge BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator fe Cast ReferenceType FigEdge MemberReference dm LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation fe IfStatement BinaryOperation > MemberReference length MemberReference THRESHOLD BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	0
MethodDeclaration Modifier private parseStateDoAction FormalParameter ReferenceType Object st FormalParameter ReferenceType String s IfStatement BinaryOperation > MethodInvocation s Literal "/" indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference s MethodInvocation s MethodInvocation trim BinaryOperation + MethodInvocation s Literal "/" indexOf Literal 1 substring = LocalVariableDeclaration ReferenceType Object VariableDeclarator oldDo MethodInvocation Model MethodInvocation MemberReference st getDoActivity getFacade IfStatement BinaryOperation == MemberReference oldDo Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference st MethodInvocation MemberReference s buildNewCallAction setDoActivity getStateMachinesHelper BlockStatement StatementExpression MethodInvocation MemberReference oldDo MemberReference s	1
MethodDeclaration Modifier public setName FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType String name IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType StringSetter MethodDeclaration Modifier public set FormalParameter ReferenceType String value StatementExpression Cast ReferenceType ModelElement MemberReference handle MemberReference name MethodInvocation Model MethodInvocation MemberReference handle getName getFacade BinaryOperation + Literal "name = " MemberReference name createCommand ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or name: " MemberReference name	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator aSize MethodInvocation MethodInvocation getMinimumSize getNameFig IfStatement MethodInvocation MethodInvocation isVisible getStereotypeFig BlockStatement LocalVariableDeclaration ReferenceType Dimension VariableDeclarator stereoMin MethodInvocation MethodInvocation getMinimumSize getStereotypeFig StatementExpression Assignment MemberReference aSize width MethodInvocation Math MemberReference aSize width MemberReference stereoMin width max = StatementExpression Assignment MemberReference aSize height MemberReference stereoMin height += StatementExpression Assignment MemberReference aSize width MethodInvocation Math Literal 70 MemberReference aSize width max = LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation Math MemberReference aSize width MemberReference aSize height max StatementExpression Assignment MemberReference aSize width MemberReference size = StatementExpression Assignment MemberReference aSize height MemberReference size = ReturnStatement MemberReference aSize	0
MethodDeclaration Modifier public Annotation Deprecated notationChanged FormalParameter ReferenceType ArgoNotationEvent event IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation renderingChanged	1
MethodDeclaration Modifier public StatementExpression MethodInvocation updateMappings StatementExpression MethodInvocation MethodInvocation getDomainMapper MethodInvocation save getInstance	0
MethodDeclaration Modifier public ReferenceType SignalEvent createSignalEvent LocalVariableDeclaration ReferenceType SignalEvent VariableDeclarator mySignalEvent MethodInvocation MethodInvocation getSignalEvent MethodInvocation createSignalEvent getSmPackage StatementExpression SuperMethodInvocation MemberReference mySignalEvent ReturnStatement MemberReference mySignalEvent	0
MethodDeclaration Modifier protected BasicType int getLeftMargin ReturnStatement MemberReference RADIUS	0
MethodDeclaration Modifier protected setEventName FormalParameter ReferenceType String theEventName StatementExpression Assignment MemberReference MemberReference theEventName =	0
MethodDeclaration Modifier public ReferenceType Object getValueAt FormalParameter BasicType int row FormalParameter BasicType int col IfStatement BinaryOperation < MemberReference row MemberReference elements length BlockStatement ReturnStatement MemberReference ArraySelector MemberReference row ArraySelector MemberReference col elements BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType TemplateBinding buildTemplateBinding FormalParameter Modifier final ReferenceType Object client FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType List arguments IfStatement BinaryOperation instanceof MemberReference client ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The must be instance of " Literal "TemplateableElement." IfStatement BinaryOperation instanceof MemberReference ReferenceType TemplateSignature BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The must be instance of " Literal "TemplateSignature." IfStatement BinaryOperation != MemberReference arguments Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference arguments BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType TemplateParameterSubstitution BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The list of arguments must be instances" Literal " of TemplateParameterSubstitutions." LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType TemplateBinding VariableDeclarator templateBinding MethodInvocation StatementExpression MethodInvocation templateBinding Cast ReferenceType MemberReference client setBoundElement StatementExpression MethodInvocation templateBinding Cast ReferenceType TemplateSignature MemberReference setSignature IfStatement BinaryOperation != MemberReference arguments Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference arguments BlockStatement StatementExpression MethodInvocation templateBinding MethodInvocation Cast ReferenceType TemplateParameterSubstitution MemberReference o add getParameterSubstitutions StatementExpression MethodInvocation MethodInvocation MemberReference templateBinding add getParams LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run BinaryOperation + Literal the template binding between " Literal "the client and the #" StatementExpression MethodInvocation editingDomain MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get getParams MemberReference client MemberReference ReturnStatement Cast ReferenceType TemplateBinding MethodInvocation run MethodInvocation Literal 0 get getParams	1
MethodDeclaration Modifier private ReferenceType Object findConstructor FormalParameter ReferenceType Object modelElement IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAClass getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Class required" ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier private BasicType boolean isValidEventRemove FormalParameter ReferenceType PropertyChangeEvent e LocalVariableDeclaration BasicType boolean VariableDeclarator valid Literal false IfStatement BinaryOperation instanceof MethodInvocation MemberReference e getChangedElement ReferenceType Collection BlockStatement IfStatement BinaryOperation || BinaryOperation && BinaryOperation != MethodInvocation e getNewValue Literal null BinaryOperation == MethodInvocation e getOldValue Literal null MethodInvocation MethodInvocation MemberReference e getChangedElement isValidElement BlockStatement StatementExpression Assignment MemberReference valid Literal true = BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MethodInvocation MemberReference e getChangedElement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator IfStatement MethodInvocation ! col isEmpty BlockStatement StatementExpression Assignment MemberReference valid Literal true = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement MethodInvocation ! MemberReference o isValidElement BlockStatement StatementExpression Assignment MemberReference valid Literal false = BreakStatement BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MethodInvocation e getOldValue ReferenceType Collection Cast ReferenceType Collection MethodInvocation e getOldValue BlockStatement StatementExpression Assignment MemberReference valid Literal true = ReturnStatement MemberReference valid	1
MethodDeclaration Modifier public ReferenceType String getDescription LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer MemberReference desc StatementExpression MethodInvocation result Literal " (" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation result Literal '.' append StatementExpression MethodInvocation result MemberReference ArraySelector MemberReference i append IfStatement BinaryOperation < MemberReference i BinaryOperation - MemberReference length Literal 1 BlockStatement StatementExpression MethodInvocation result Literal ", " append StatementExpression MethodInvocation result Literal ')' append ReturnStatement MethodInvocation result toString	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Collection LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation getOwner ReturnStatement MethodInvocation Model MethodInvocation MemberReference getExtensionPoints getFacade	1
MethodDeclaration Modifier public ReferenceType UseCase LocalVariableDeclaration ReferenceType UseCase VariableDeclarator myUseCase MethodInvocation modelImpl MethodInvocation getUseCases MethodInvocation MethodInvocation getUmlPackage StatementExpression SuperMethodInvocation MemberReference myUseCase ReturnStatement MemberReference myUseCase	0
MethodDeclaration Modifier public IfStatement BinaryOperation > MethodInvocation MemberReference length getPoints Literal 0 BlockStatement LocalVariableDeclaration ReferenceType FigMessageSpline VariableDeclarator spline ClassCreator ReferenceType FigMessageSpline MethodInvocation Literal 0 getPoint StatementExpression MethodInvocation spline MethodInvocation StatementExpression SuperMethodInvocation MemberReference spline setFig StatementExpression MethodInvocation computeRoute	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator tr MemberReference dm LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation Model MethodInvocation MemberReference tr getTrigger getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator g MethodInvocation Model MethodInvocation MemberReference tr getGuard getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator dv MethodInvocation Model MethodInvocation MemberReference tr getTarget getFacade IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dv getKind getFacade IfStatement MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getJoin getPseudostateKind equalsPseudostateKind getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration BasicType boolean VariableDeclarator hasTrigger BinaryOperation && BinaryOperation && BinaryOperation != MemberReference t Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference t getName getFacade Literal null BinaryOperation > MethodInvocation Model MethodInvocation MemberReference t getName MethodInvocation length getFacade Literal 0 IfStatement MemberReference hasTrigger BlockStatement ReturnStatement MemberReference PROBLEM_FOUND LocalVariableDeclaration BasicType boolean VariableDeclarator noGuard BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference g Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference g getExpression getFacade Literal null BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference g getExpression getFacade getBody getFacade Literal null BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference g getExpression getFacade getBody MethodInvocation toString MethodInvocation length getFacade Literal 0 IfStatement MemberReference ! noGuard BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier private ReferenceType ParamDeclNode parseParamDecl FeatureNotSupportedException LocalVariableDeclaration ReferenceType ParamDeclNode VariableDeclarator node ClassCreator ReferenceType ParamDeclNode StatementExpression MethodInvocation Literal false parsePossibleAttributes IfStatement BinaryOperation > MethodInvocation curAttributes size Literal 0 BlockStatement StatementExpression Assignment MemberReference node attributes MemberReference curAttributes = StatementExpression Assignment MemberReference curAttributes ClassCreator ReferenceType NodeCollection TypeArgument ReferenceType AttributeNode = StatementExpression Assignment MemberReference node type MethodInvocation parseType = IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Ident BlockStatement StatementExpression Assignment MemberReference node name MethodInvocation strings MemberReference curtok data get = StatementExpression MethodInvocation advance BlockStatement StatementExpression MethodInvocation Literal "Expected arg name." MemberReference TokenID Ident RecoverFromError ReturnStatement MemberReference node	0
MethodDeclaration Modifier private ReferenceType String menuLocalize FormalParameter ReferenceType String key ReturnStatement MethodInvocation Translator MemberReference key localize	0
MethodDeclaration Modifier protected ReferenceType JCheckBox createCheckBox FormalParameter ReferenceType String key LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator j ClassCreator ReferenceType JCheckBox MethodInvocation Translator MemberReference key localize ReturnStatement MemberReference j	1
MethodDeclaration Modifier static ReferenceType Collection TypeArgument ReferenceType ModelElement getContents FormalParameter ReferenceType UmlPackage pkg LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ModelElement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ElementImport VariableDeclarator c MethodInvocation pkg getElementImport ForStatement EnhancedForControl VariableDeclaration ReferenceType ElementImport VariableDeclarator ei MemberReference c BlockStatement StatementExpression MethodInvocation results MethodInvocation ei getImportedElement add StatementExpression MethodInvocation results MethodInvocation Cast ReferenceType Namespace MemberReference pkg getContents addAll ReturnStatement MemberReference results	1
MethodDeclaration Modifier public ReferenceType Object getParent ReturnStatement MemberReference parent	0
MethodDeclaration Modifier public BasicType boolean setNotationLanguage FormalParameter Modifier final ReferenceType String newLanguage IfStatement MethodInvocation MethodInvocation MemberReference newLanguage equals getNotationLanguage BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MethodInvocation Notation MemberReference newLanguage Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MethodInvocation getNotationLanguage LocalVariableDeclaration ReferenceType Memento VariableDeclarator ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_DEFAULT_NOTATION MethodDeclaration Modifier public redo StatementExpression MethodInvocation npSettings MemberReference newLanguage setNotationLanguage StatementExpression MethodInvocation MemberReference key MemberReference MemberReference newLanguage fireNotationEvent MethodDeclaration Modifier public undo StatementExpression MethodInvocation npSettings MemberReference setNotationLanguage StatementExpression MethodInvocation MemberReference key MemberReference newLanguage MemberReference fireNotationEvent StatementExpression MethodInvocation MemberReference doUndoable ReturnStatement Literal true	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation getModelElements setAllElements	0
MethodDeclaration Modifier public setIcon FormalParameter ReferenceType Icon theIcon StatementExpression Assignment This MemberReference icon MemberReference theIcon =	0
MethodDeclaration Modifier public Annotation Override initialiseListener FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference modelElement addElementListener LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation Model MethodInvocation MemberReference modelElement getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference classifier isAClassifier getFacade BlockStatement StatementExpression MethodInvocation MemberReference classifier ArrayCreator ReferenceType String ArrayInitializer Literal "remove" Literal "name" addElementListener	0
MethodDeclaration Modifier public static ReferenceType getConfiguredNotation LocalVariableDeclaration ReferenceType VariableDeclarator n MethodInvocation NotationNameImpl MethodInvocation Configuration MemberReference KEY_DEFAULT_NOTATION MethodInvocation notationArgo getConfigurationValue getString IfStatement BinaryOperation == MemberReference n Literal null BlockStatement StatementExpression Assignment MemberReference n MethodInvocation NotationNameImpl MemberReference DEFAULT_NOTATION = StatementExpression MethodInvocation LOG BinaryOperation + Literal "default notation is " MethodInvocation n getConfigurationValue debug ReturnStatement MemberReference n	1
MethodDeclaration Modifier static ReferenceType Collection loadProfileModels LocalVariableDeclaration ReferenceType ProfileModelLoader VariableDeclarator profileModelLoader ClassCreator ReferenceType ResourceModelLoader ClassReference ReferenceType BaseProfile LocalVariableDeclaration ReferenceType Collection VariableDeclarator elements TryStatement StatementExpression Assignment MemberReference elements MethodInvocation profileModelLoader MemberReference loadModel = CatchClause CatchClauseParameter ProfileException e ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e ReturnStatement MemberReference elements	0
MethodDeclaration Modifier protected ReferenceType String generateMessageNumber FormalParameter ReferenceType Object umlMessage FormalParameter ReferenceType Object umlPredecessor FormalParameter BasicType int position LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it LocalVariableDeclaration ReferenceType String VariableDeclarator activatorIntNo Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator umlActivator LocalVariableDeclaration BasicType int VariableDeclarator subpos Literal 0 VariableDeclarator submax Literal 1 IfStatement BinaryOperation == MemberReference umlMessage Literal null BlockStatement ReturnStatement Literal null StatementExpression Assignment MemberReference umlActivator MethodInvocation Model MethodInvocation MemberReference umlMessage getActivator getFacade = IfStatement BinaryOperation != MemberReference umlActivator Literal null BlockStatement StatementExpression Assignment MemberReference activatorIntNo MethodInvocation MemberReference umlActivator generateMessageNumber = IfStatement BinaryOperation != MemberReference umlPredecessor Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference umlPredecessor getSuccessors getFacade StatementExpression Assignment MemberReference submax MethodInvocation c size = StatementExpression Assignment MemberReference it MethodInvocation c iterator = WhileStatement BinaryOperation && MethodInvocation it hasNext BinaryOperation != MethodInvocation it next MemberReference umlMessage BlockStatement StatementExpression MemberReference ++ subpos LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator result ClassCreator ReferenceType StringBuilder MemberReference activatorIntNo IfStatement BinaryOperation > MethodInvocation activatorIntNo length Literal 0 BlockStatement StatementExpression MethodInvocation result Literal "." append StatementExpression MethodInvocation result MemberReference position append IfStatement BinaryOperation > MemberReference submax Literal 1 BlockStatement StatementExpression MethodInvocation result Cast BasicType char BinaryOperation + Literal 'a' MemberReference subpos append ReturnStatement MethodInvocation result toString	1
MethodDeclaration Modifier protected ReferenceType String getProperty LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation DiagramUtils getActiveDiagram IfStatement BinaryOperation instanceof MemberReference target ReferenceType ArgoDiagram BlockStatement ReturnStatement Cast ReferenceType ArgoDiagram MemberReference target ReturnStatement Literal ""	0
MethodDeclaration Modifier public componentShown FormalParameter ReferenceType ComponentEvent e StatementExpression MethodInvocation MemberReference target setTargetInternal	0
MethodDeclaration Modifier private BasicType boolean isUML2 FormalParameter ReferenceType Resource r ForStatement EnhancedForControl VariableDeclaration ReferenceType EObject VariableDeclarator eobj MethodInvocation r getContents BlockStatement IfStatement BinaryOperation instanceof MemberReference eobj ReferenceType Element BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Goal getGoalList ReturnStatement MethodInvocation Designer MethodInvocation getGoalModel MethodInvocation getGoalList theDesigner	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object constraint TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Collaboration BinaryOperation instanceof MemberReference constraint ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType Collaboration VariableDeclarator Cast ReferenceType Collaboration MemberReference handle StatementExpression MethodInvocation MethodInvocation MemberReference constraint remove getConstrainingElement ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or constraint: " MemberReference constraint	1
MethodDeclaration Modifier public ReferenceType Fig getFigTarget ReturnStatement MemberReference figTarget	0
MethodDeclaration Modifier private ReferenceType JList createProfileList LocalVariableDeclaration ReferenceType JList VariableDeclarator list ClassCreator ReferenceType JList StatementExpression MethodInvocation list ClassCreator ReferenceType Dimension Literal 50 Literal 50 setMinimumSize ReturnStatement MemberReference list	0
MethodDeclaration Modifier protected parseAssociationEnd FormalParameter ReferenceType Object role FormalParameter ReferenceType String text ParseException LocalVariableDeclaration ReferenceType MyTokenizer VariableDeclarator st LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator stereotype Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator token LocalVariableDeclaration BasicType boolean VariableDeclarator derived Literal false StatementExpression Assignment MemberReference text MethodInvocation text trim = IfStatement BinaryOperation && BinaryOperation > MethodInvocation text length Literal 0 BinaryOperation >= Literal MethodInvocation MethodInvocation text Literal 0 charAt indexOf "/" Literal 0 BlockStatement StatementExpression Assignment MemberReference derived Literal true = StatementExpression Assignment MemberReference text MethodInvocation text Literal 1 substring = StatementExpression Assignment MemberReference text MethodInvocation text trim = TryStatement StatementExpression Assignment MemberReference st ClassCreator ReferenceType MyTokenizer MemberReference text Literal "<<,«,»,>>" = WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference token MethodInvocation st nextToken = IfStatement BinaryOperation || Literal MethodInvocation MemberReference token equals "<<" Literal MethodInvocation MemberReference token equals "«" BlockStatement IfStatement BinaryOperation != MemberReference stereotype Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.association-name.twin-stereotypes" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex StatementExpression Assignment MemberReference stereotype ClassCreator ReferenceType StringBuilder = WhileStatement Literal true BlockStatement StatementExpression Assignment MemberReference token MethodInvocation st nextToken = IfStatement BinaryOperation || Literal MethodInvocation MemberReference token equals ">>" Literal MethodInvocation MemberReference token equals "»" BlockStatement BreakStatement StatementExpression MethodInvocation stereotype MemberReference token append BlockStatement IfStatement BinaryOperation != MemberReference name Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.association-name.twin-names" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex StatementExpression Assignment MemberReference name MemberReference token = CatchClause CatchClauseParameter NoSuchElementException nsee LocalVariableDeclaration ReferenceType String VariableDeclarator ms Literal "parsing.error.association-name.unexpected-end-element" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference ms localize MethodInvocation text length CatchClause CatchClauseParameter ParseException pre ThrowStatement MemberReference pre StatementExpression MethodInvocation MemberReference role MemberReference derived dealWithDerived IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name trim = IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name Literal "+" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation trim Literal 1 substring = StatementExpression MethodInvocation Model MethodInvocation MemberReference role MethodInvocation Model MethodInvocation getPublic getVisibilityKind setVisibility getCoreHelper IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name Literal "-" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation trim Literal 1 substring = StatementExpression MethodInvocation Model MethodInvocation MemberReference role MethodInvocation Model MethodInvocation getPrivate getVisibilityKind setVisibility getCoreHelper IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name Literal "#" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation trim Literal 1 substring = StatementExpression MethodInvocation Model MethodInvocation MemberReference role MethodInvocation Model MethodInvocation getProtected getVisibilityKind setVisibility getCoreHelper IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name Literal "~" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation trim Literal 1 substring = StatementExpression MethodInvocation Model MethodInvocation MemberReference role MethodInvocation Model MethodInvocation getPackage getVisibilityKind setVisibility getCoreHelper IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference role MemberReference name setName getCoreHelper StatementExpression MethodInvocation StereotypeUtility MemberReference role MemberReference stereotype Literal true dealWithStereotypes	1
MethodDeclaration Modifier public FormalParameter ReferenceType TreeExpansionEvent tee LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType ProjectSettings VariableDeclarator ps MethodInvocation p getProjectSettings StatementExpression MethodInvocation MethodInvocation ps getShowStereotypesValue setShowStereotype IfStatement BinaryOperation instanceof MethodInvocation getModel ReferenceType ExplorerTreeModel BlockStatement StatementExpression Cast ReferenceType ExplorerTreeModel MethodInvocation getModel	1
MethodDeclaration Modifier public Annotation Override setEnclosingFig FormalParameter ReferenceType Fig encloser IfStatement BinaryOperation || BinaryOperation == MemberReference encloser Literal null BinaryOperation && BinaryOperation != MemberReference encloser Literal null MethodInvocation Model MethodInvocation MethodInvocation encloser getOwner isANode getFacade BlockStatement StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig	1
MethodDeclaration Modifier public setObjectToRemove FormalParameter ReferenceType Object theObjectToRemove StatementExpression Assignment MemberReference objectToRemove MemberReference theObjectToRemove = StatementExpression MethodInvocation MethodInvocation isEnabled setEnabled	0
MethodDeclaration Modifier public ReferenceType Command getRemoveCommand FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object objectToRemove ReturnStatement ClassCreator ReferenceType RemoveCommand MemberReference modelElement MemberReference objectToRemove	0
MethodDeclaration Modifier public ReferenceType Object getTransition ReturnStatement ClassReference ReferenceType Transition	0
MethodDeclaration Modifier public BasicType int getColumnNumber ReturnStatement This MemberReference columnNumber	0
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dm computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public ReferenceType Object createSubsystemInstance ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget ReturnStatement MethodInvocation MemberReference target shouldBeEnabled	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget getStateMachinesFactory	0
MethodDeclaration Modifier public ReferenceType getModePlace FormalParameter ReferenceType GraphFactory gf FormalParameter ReferenceType String instructions ReturnStatement ClassCreator ReferenceType MemberReference gf MemberReference instructions	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Region	0
MethodDeclaration Modifier public ReferenceType buildInterface FormalParameter ReferenceType Object owner ReturnStatement MethodInvocation Literal null MemberReference owner buildInterface	0
MethodDeclaration Modifier public BasicType boolean canConnect FormalParameter ReferenceType Object fromPort FormalParameter ReferenceType Object toPort IfStatement MethodInvocation ! Model getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "internal error not from sv" error ReturnStatement Literal false IfStatement MethodInvocation ! Model getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "internal error not to sv" error ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference fromPort isAFinalState getFacade BlockStatement ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference toPort isAPseudostate getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference toPort getKind getFacade equals getPseudostateKind BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object metaType LocalVariableDeclaration Modifier final ReferenceType Class TypeArgument ? VariableDeclarator movableMetaType ArrayInitializer ClassReference ReferenceType Action ClassReference ReferenceType EnumerationLiteral ClassReference ReferenceType Extend ClassReference ReferenceType ClassReference ReferenceType Operation ClassReference ReferenceType Parameter ClassReference ReferenceType Property ReturnStatement MethodInvocation Arrays MethodInvocation MemberReference metaType contains MemberReference movableMetaType asList	0
MethodDeclaration Modifier public undo StatementExpression MethodInvocation diaDefault MemberReference oldValue	0
MethodDeclaration Modifier final ReferenceType Object ReturnStatement MemberReference object	0
MethodDeclaration Modifier private ReferenceType URL makeZipEntryUrl FormalParameter ReferenceType URL url FormalParameter ReferenceType String entryName MalformedURLException LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + BinaryOperation + Literal "jar:" MemberReference url Literal "!/" MemberReference entryName ReturnStatement ClassCreator ReferenceType URL MemberReference	0
MethodDeclaration Modifier protected ReferenceType Action getActionInstanceSpecification IfStatement BinaryOperation == MemberReference actionInstanceSpecification Literal null BlockStatement StatementExpression Assignment MemberReference actionInstanceSpecification MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes Literal makeCreateNodeAction = ReturnStatement MemberReference actionInstanceSpecification	0
MethodDeclaration Modifier public removeModelEventListener FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelelement StatementExpression MethodInvocation MemberReference listener MemberReference modelelement Literal null	0
MethodDeclaration Modifier private myDoubleClick FormalParameter ReferenceType Object src LocalVariableDeclaration ReferenceType Object VariableDeclarator sel Literal null LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator d Literal null IfStatement BinaryOperation == MemberReference src MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator row MethodInvocation MethodInvocation getMinSelectionIndex getSelectionModel IfStatement BinaryOperation < MemberReference row Literal 0 BlockStatement ReturnStatement StatementExpression Assignment MemberReference sel MethodInvocation results MemberReference row get = StatementExpression Assignment MemberReference d MethodInvocation diagrams MemberReference row get = IfStatement BinaryOperation == MemberReference src MemberReference relatedTable BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator row MethodInvocation relatedTable MethodInvocation getMinSelectionIndex getSelectionModel IfStatement BinaryOperation < MemberReference row Literal 0 BlockStatement ReturnStatement StatementExpression MemberReference ++ numJumpToRelated StatementExpression Assignment MemberReference sel MethodInvocation related MemberReference row get = IfStatement BinaryOperation != MemberReference d Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "go " MemberReference sel Literal " in " MethodInvocation d getName debug StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference d setTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference sel isATaggedValue getFacade BlockStatement StatementExpression Assignment MemberReference sel MethodInvocation Model MethodInvocation MemberReference sel getModelElementContainer getFacade = StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference sel setTarget getInstance	1
MethodDeclaration Modifier public setReadOnly FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final BasicType boolean isReadOnly IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of StructuralFeature" LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType StructuralFeature MemberReference handle StatementExpression MethodInvocation editingDomain MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Set isReadOnly to for the feature #" MemberReference isReadOnly MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier private BasicType int countLineBreaks FormalParameter ReferenceType Node node LocalVariableDeclaration BasicType int VariableDeclarator numLines Literal 0 IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MethodInvocation node getNodeType MemberReference Node DOCUMENT_FRAGMENT_NODE BinaryOperation == MethodInvocation node getNodeType MemberReference Node DOCUMENT_NODE BinaryOperation == MethodInvocation node getNodeType MemberReference Node ELEMENT_NODE BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator child MethodInvocation node getFirstChild WhileStatement BinaryOperation != MemberReference child Literal null BlockStatement StatementExpression Assignment MemberReference numLines MethodInvocation MemberReference child countLineBreaks += StatementExpression Assignment MemberReference child MethodInvocation child getNextSibling = IfStatement BinaryOperation == MethodInvocation node getNodeType MemberReference Node TEXT_NODE BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation node getNodeValue LocalVariableDeclaration BasicType int VariableDeclarator pos Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MethodInvocation text length MemberReference ++ count BlockStatement IfStatement BinaryOperation == MethodInvocation text MemberReference count charAt Literal '\n' BlockStatement StatementExpression MemberReference ++ numLines BlockStatement ReturnStatement MemberReference numLines	1
MethodDeclaration Modifier private ReferenceType RunnableClass FormalParameter ReferenceType Element owner FormalParameter ReferenceType Element element ReturnStatement MethodInvocation MemberReference owner MemberReference CommandParameter NO_INDEX MemberReference element	0
MethodDeclaration Modifier public Annotation Override propertyChange FormalParameter ReferenceType PropertyChangeEvent pce IfStatement BinaryOperation && Literal MethodInvocation MethodInvocation pce getPropertyName equals "remove" BinaryOperation == MethodInvocation pce getSource MethodInvocation getOwner BlockStatement StatementExpression MethodInvocation deleteFromModel IfStatement BinaryOperation instanceof MemberReference pce ReferenceType UmlChangeEvent BlockStatement LocalVariableDeclaration Modifier final ReferenceType UmlChangeEvent VariableDeclarator event Cast ReferenceType UmlChangeEvent MemberReference pce LocalVariableDeclaration ReferenceType Runnable VariableDeclarator doWorkRunnable ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation MemberReference event updateLayout CatchClause CatchClauseParameter InvalidElementException e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "event = " MethodInvocation event MethodInvocation getName getClass debug StatementExpression MethodInvocation LOG BinaryOperation + Literal = " MethodInvocation event getSource debug StatementExpression MethodInvocation LOG BinaryOperation + Literal "old = " MethodInvocation event getOldValue debug StatementExpression MethodInvocation LOG BinaryOperation + Literal "name = " MethodInvocation event getPropertyName debug StatementExpression MethodInvocation LOG BinaryOperation + Literal "updateLayout method accessed " Literal "deleted element " MemberReference e debug StatementExpression MethodInvocation SwingUtilities MemberReference doWorkRunnable invokeLater	1
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_65 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 0L Literal 422212465065985L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType SubmachineState FormalParameter ReferenceType Object compositeState IfStatement BinaryOperation instanceof MemberReference compositeState ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType SubmachineState VariableDeclarator state MethodInvocation StatementExpression MethodInvocation state Cast ReferenceType CompositeState MemberReference compositeState setContainer ReturnStatement MemberReference state ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a	0
MethodDeclaration Modifier public ReferenceType createComment ReturnStatement MethodInvocation createComment	0
MethodDeclaration Modifier public ReferenceType UninterpretedAction LocalVariableDeclaration ReferenceType UninterpretedAction VariableDeclarator myUninterpretedAction MethodInvocation MethodInvocation getUninterpretedAction MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference myUninterpretedAction ReturnStatement MemberReference myUninterpretedAction	0
MethodDeclaration Modifier protected ReferenceType JLabel ReturnStatement MemberReference bboxLabel	0
MethodDeclaration Modifier protected ReferenceType getComponent ReturnStatement MemberReference impl	0
MethodDeclaration Modifier public clearLocalVariableDeclarations StatementExpression MethodInvocation localVariables clear	0
MethodDeclaration Modifier public Annotation Deprecated setMultiplicity FormalParameter Modifier final ReferenceType Object handle FormalParameter ReferenceType Object arg StatementExpression MethodInvocation ClassCreator ReferenceType ObjectSetter MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setMultiplicity getComponent MemberReference arg MethodInvocation Model MethodInvocation MemberReference handle getMultiplicity getFacade createCommand	1
MethodDeclaration Modifier public showStep FormalParameter ReferenceType ws IfStatement BinaryOperation != MemberReference lastPanel Literal null BlockStatement StatementExpression MethodInvocation splitPane MemberReference lastPanel remove IfStatement BinaryOperation != MemberReference ws Literal null BlockStatement StatementExpression MethodInvocation splitPane MemberReference ws MemberReference BorderSplitPane CENTER add StatementExpression Assignment MemberReference lastPanel MemberReference ws = BlockStatement StatementExpression MethodInvocation splitPane MemberReference description MemberReference BorderSplitPane CENTER add StatementExpression Assignment MemberReference lastPanel MemberReference description = StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEndRole	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation command execute	0
MethodDeclaration Modifier private ReferenceType ArgoDiagram buildSequenceDiagram FormalParameter ReferenceType Object theClassifier LocalVariableDeclaration ReferenceType Object VariableDeclarator collaboration MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference theClassifier getNamespace getFacade MemberReference theClassifier buildCollaboration getCollaborationsFactory LocalVariableDeclaration Modifier final ReferenceType ArgoDiagram VariableDeclarator newDiagram MethodInvocation DiagramFactory MethodInvocation MemberReference DiagramType Sequence MemberReference collaboration Literal null createDiagram getInstance StatementExpression MethodInvocation project MemberReference newDiagram addMember StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference newDiagram setTarget getInstance ReturnStatement MemberReference newDiagram	1
MethodDeclaration Modifier public FormalParameter ReferenceType String tableName StatementExpression Assignment This MemberReference tableName MemberReference tableName =	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType getAllPossibleStatemachines FormalParameter ReferenceType Object model FormalParameter ReferenceType Object oSubmachineState TryStatement IfStatement BinaryOperation instanceof MemberReference oSubmachineState ReferenceType SubmachineState BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType VariableDeclarator statemachines MethodInvocation Model MethodInvocation MemberReference model ClassReference ReferenceType getAllModelElementsOfKind getModelManagementHelper StatementExpression MethodInvocation statemachines MethodInvocation MemberReference oSubmachineState getStateMachine remove ReturnStatement MemberReference statemachines CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Parameter FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement ReturnStatement Cast ReferenceType BehavioralFeature MemberReference handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object o TryStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType StubState BlockStatement ReturnStatement Cast ReferenceType StubState MemberReference o CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference o illegalArgumentString	0
MethodDeclaration Modifier private FormalParameter ReferenceType Feature elem StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BehavioralFeature BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteBehavioralFeature getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Operation BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteOperation getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Method BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteMethod getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Reception BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteReception IfStatement BinaryOperation instanceof MemberReference elem ReferenceType StructuralFeature BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteStructuralFeature getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Attribute BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteAttribute getCore	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement Cast ReferenceType Boolean MemberReference value getCoreHelper	0
MethodDeclaration Modifier private ReferenceType UsingStatement ParseUsing FeatureNotSupportedException LocalVariableDeclaration ReferenceType UsingStatement VariableDeclarator node ClassCreator ReferenceType UsingStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference TokenID LParen AssertAndAdvance StatementExpression Assignment MemberReference node Resource MethodInvocation ParseExpression = StatementExpression MethodInvocation MemberReference TokenID RParen AssertAndAdvance StatementExpression MethodInvocation MemberReference node Statements parseBlock IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi StatementExpression MethodInvocation advance ReturnStatement MemberReference node	1
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType Object attribute ReturnStatement MethodInvocation Model MethodInvocation MemberReference attribute MemberReference isStereotype getFacade	0
MethodDeclaration Modifier public ReferenceType Object buildNode FormalParameter ReferenceType Object elementType FormalParameter ReferenceType Object container FormalParameter ReferenceType String property FormalParameter ReferenceType defaults LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation MemberReference elementType MemberReference container MemberReference property buildNode IfStatement BinaryOperation != MemberReference defaults Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator type MethodInvocation defaults MemberReference elementType getDefaultType LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator name MethodInvocation defaults MemberReference elementType IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference element MemberReference type setType getCoreHelper IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference element MemberReference name setName getCoreHelper BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference element Literal "" setName getCoreHelper ReturnStatement MemberReference element	0
MethodDeclaration Modifier public ReferenceType getSubTextFont ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter BasicType boolean flag StatementExpression MethodInvocation ClassCreator ReferenceType BooleanSetter MethodDeclaration Modifier public set FormalParameter BasicType boolean value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent MemberReference flag MethodInvocation Model MethodInvocation MemberReference handle isQuery getFacade createCommand	1
MethodDeclaration Modifier public ReferenceType String getClassnamePrefix ReturnStatement MemberReference classnamePrefix	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference target ReferenceType Fig BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Cast ReferenceType Fig MemberReference target IfStatement MethodInvocation Model MethodInvocation MemberReference owner isAUMLElement getFacade BlockStatement StatementExpression Assignment MemberReference target MemberReference owner = ReturnStatement TernaryExpression BinaryOperation || BinaryOperation instanceof MemberReference target ReferenceType Diagram MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade MemberReference target Literal null	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression SuperMethodInvocation MemberReference col setFillColor StatementExpression MethodInvocation MethodInvocation Literal null setFillColor getStereotypeFig StatementExpression MethodInvocation MethodInvocation Literal null setFillColor getNameFig	0
MethodDeclaration Modifier public setSource FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object state StatementExpression MethodInvocation impl MemberReference handle MemberReference state setSource	0
MethodDeclaration Modifier public BasicType boolean disable StatementExpression MethodInvocation MethodInvocation MemberReference myLang getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType AddAssociationEvent evt LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation evt getNewValue LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator childBounds ClassCreator ReferenceType Rectangle BinaryOperation + MethodInvocation getX MethodInvocation getHeight MethodInvocation getY Literal 0 Literal 0 LocalVariableDeclaration ReferenceType FigNotation VariableDeclarator fn ClassCreator ReferenceType FigNotation MemberReference element MemberReference childBounds MethodInvocation getDiagramSettings MemberReference NotationType NAME StatementExpression MethodInvocation MemberReference fn addFig StatementExpression MethodInvocation calcBounds	0
MethodDeclaration Modifier public BasicType boolean isTopState FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference o ReferenceType State BinaryOperation == Cast ReferenceType State MemberReference o Literal null	1
MethodDeclaration Modifier static protected ReferenceType String getVariable FormalParameter ReferenceType Context context FormalParameter ReferenceType String varName LocalVariableDeclaration ReferenceType Value VariableDeclarator variable Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator varString Literal null TryStatement StatementExpression Assignment MemberReference variable MethodInvocation Extensions MemberReference context BinaryOperation + Literal "$" MemberReference varName evaluate = StatementExpression Assignment MemberReference varString MethodInvocation variable asString = ReturnStatement MemberReference varString CatchClause CatchClauseParameter TransformerException te StatementExpression MethodInvocation System.out BinaryOperation + Literal "Undefined variable: " MemberReference varName println ReturnStatement Literal "" CatchClause CatchClauseParameter IllegalArgumentException iae StatementExpression MethodInvocation System.out BinaryOperation + Literal "Undefined variable: " MemberReference varName println ReturnStatement Literal ""	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType GeneralizableElement getChildren FormalParameter ReferenceType Object handle TryStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference handle getChildren getCoreHelper CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public ReferenceType Association buildAssociation FormalParameter ReferenceType Object c1 FormalParameter BasicType boolean FormalParameter ReferenceType Object c2 FormalParameter BasicType boolean FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference c1 MemberReference Literal null MemberReference c2 MemberReference Literal null MemberReference name buildAssociation	0
MethodDeclaration BasicType boolean isIgnorable ReturnStatement MemberReference ignorable	0
MethodDeclaration Modifier private updateTabbedPane LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType ModuleInterface MethodInvocation getCurrentModule IfStatement BinaryOperation < MethodInvocation tab MemberReference name indexOfTab Literal 0 BlockStatement StatementExpression MethodInvocation tab MethodInvocation getConfigPanelExtension MemberReference name add	0
MethodDeclaration Modifier public setUpper FormalParameter BasicType int upper StatementExpression Assignment This MemberReference upper MemberReference upper =	0
MethodDeclaration Modifier public remove FormalParameter ReferenceType LayoutedObject obj StatementExpression MethodInvocation layoutedObjects MemberReference obj remove	0
MethodDeclaration Modifier public inform FormalParameter ReferenceType ToDoItem item StatementExpression MethodInvocation toDoList MemberReference item addElement	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier public FormalParameter BasicType int aPhasesCompleted StatementExpression Assignment This MemberReference phasesCompleted MemberReference aPhasesCompleted =	0
MethodDeclaration deleteGeneralization FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Generalization BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal "dialog.title.add-specifications" localize	0
MethodDeclaration Modifier public BasicType int getNumAttributes ReturnStatement MethodInvocation attributes getLength	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent lse IfStatement MethodInvocation lse getValueIsAdjusting BlockStatement ReturnStatement IfStatement MemberReference relatedShown BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator row MethodInvocation lse getFirstIndex LocalVariableDeclaration ReferenceType Object VariableDeclarator sel MethodInvocation results MemberReference row get StatementExpression MethodInvocation LOG BinaryOperation + Literal "selected " MemberReference sel debug StatementExpression MethodInvocation related clear LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator elems MethodInvocation ChildGenRelated MethodInvocation MemberReference sel gen getSingleton IfStatement BinaryOperation != MemberReference elems Literal null BlockStatement WhileStatement MethodInvocation elems hasMoreElements BlockStatement StatementExpression MethodInvocation related MethodInvocation elems nextElement add StatementExpression MethodInvocation relatedModel MemberReference related Literal null setTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MethodInvocation Integer MethodInvocation related size valueOf StatementExpression MethodInvocation relatedLabel MethodInvocation Translator Literal "dialog.find.related-elements" MemberReference msgArgs setText	1
MethodDeclaration Modifier protected updateLayout FormalParameter ReferenceType UmlChangeEvent event AssertStatement BinaryOperation != MemberReference event Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference notationProvider Literal null BinaryOperation || Literal ! MethodInvocation MethodInvocation event getPropertyName equals "remove" BinaryOperation != MethodInvocation event getSource MethodInvocation getOwner BlockStatement StatementExpression This MethodInvocation MethodInvocation notationProvider MethodInvocation getOwner MethodInvocation getNotationSettings toString setText StatementExpression MethodInvocation damage	0
MethodDeclaration Modifier public doBack LocalVariableDeclaration ReferenceType Wizard VariableDeclarator w MethodInvocation IfStatement BinaryOperation != MemberReference w Literal null BlockStatement StatementExpression MethodInvocation w back StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String getAuthorname ReturnStatement MemberReference authorname	0
MethodDeclaration Modifier public ReferenceType Font getFontItalic IfStatement BinaryOperation == MemberReference fontItalic Literal null BlockStatement ReturnStatement MethodInvocation parent getFontItalic ReturnStatement MemberReference fontItalic	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference STEREO_NAME_CLASS getCppStereotypeInModel	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BlockStatement ReturnStatement MethodInvocation MethodInvocation getCollaborations MethodInvocation MethodInvocation Cast ReferenceType UmlAssociation MemberReference handle getAssociationRole MemberReference handle getRefOutermostPackage ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String getPathList IfStatement BinaryOperation == MemberReference pathlistSetting Literal null BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String ReturnStatement MethodInvocation pathlistSetting getPathList	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation Model MethodInvocation MemberReference element getOwner getFacade ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isATagDefinition getFacade BinaryOperation || BinaryOperation == MemberReference owner Literal null MethodInvocation Model MethodInvocation MethodInvocation getTarget getStereotypes MethodInvocation MemberReference owner contains getFacade	1
MethodDeclaration Modifier public ReferenceType List getInEdges FormalParameter ReferenceType Object port IfStatement MethodInvocation Model MethodInvocation MemberReference port isAStateVertex getFacade BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference port getIncomings getFacade StatementExpression MethodInvocation LOG Literal "TODO: getInEdges of MState" debug ReturnStatement MemberReference Collections EMPTY_LIST	1
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object createTemplateArgument FormalParameter ReferenceType Object extent ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public BasicType boolean isALiteralString FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public setEdgeOffset FormalParameter BasicType int newOffset StatementExpression Assignment MemberReference edgeOffset MemberReference newOffset =	0
MethodDeclaration Modifier private BasicType boolean isDocCommentTag FormalParameter ReferenceType String tagName LocalVariableDeclaration BasicType boolean VariableDeclarator result Literal false IfStatement MethodInvocation tagName Literal "inv" equals BlockStatement StatementExpression Assignment MemberReference result Literal true = IfStatement MethodInvocation tagName Literal "post" equals BlockStatement StatementExpression Assignment MemberReference result Literal true = IfStatement MethodInvocation tagName Literal "pre" equals BlockStatement StatementExpression Assignment MemberReference result Literal true = IfStatement MethodInvocation tagName Literal "author" equals BlockStatement StatementExpression Assignment MemberReference result Literal true = IfStatement MethodInvocation tagName Literal "version" equals BlockStatement StatementExpression Assignment MemberReference result Literal true = IfStatement MethodInvocation tagName Literal "see" equals BlockStatement StatementExpression Assignment MemberReference result Literal true = IfStatement MethodInvocation tagName Literal "param" equals BlockStatement StatementExpression Assignment MemberReference result Literal true = ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getSupplierDependencies getFacade setAllElements	0
MethodDeclaration Modifier private verifyAttributeNames FormalParameter ReferenceType String className FormalParameter ReferenceType String attributes LocalVariableDeclaration ReferenceType RefObject VariableDeclarator ro Literal null StatementExpression MethodInvocation MemberReference ro MemberReference attributes verifyAttributeNames	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String getAllMetaDatatypeNames ReturnStatement MethodInvocation Collections emptySet	1
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation Literal 0 setLineWidth StatementExpression MethodInvocation outlineFig MemberReference w setLineWidth StatementExpression MethodInvocation urCorner MemberReference w setLineWidth	0
MethodDeclaration Modifier public BasicType int getLine ReturnStatement MemberReference line	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer d LocalVariableDeclaration ReferenceType Class VariableDeclarator dmClazz MethodInvocation dm getClass LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Critic VariableDeclarator c MethodInvocation MemberReference dmClazz criticsForClass StatementExpression MethodInvocation MemberReference dm MemberReference d MemberReference c Literal - 1L	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Command getAdditionalCommands ReturnStatement MethodInvocation getterSetterManager MemberReference propertyName MemberReference umlElement getAdditionalCommands	0
MethodDeclaration Modifier public setBody FormalParameter Modifier final ReferenceType Object handle FormalParameter ReferenceType String body StatementExpression MethodInvocation ClassCreator ReferenceType StringSetter MethodDeclaration Modifier public set FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setBody getComponent MemberReference body MethodInvocation Model MethodInvocation MemberReference handle getBody getCoreHelper createCommand	1
MethodDeclaration Modifier protected Annotation Override ReferenceType List TypeArgument ReferenceType String getSelected LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget isAStereotype getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator bases MethodInvocation Model MethodInvocation MethodInvocation getTarget getBaseClasses getFacade StatementExpression MethodInvocation result MemberReference bases addAll ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType String createTable FormalParameter ReferenceType TableDefinition tableDefinition LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb Literal "CREATE TABLE " append StatementExpression MethodInvocation sb MethodInvocation tableDefinition getName append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal " (" append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation tableDefinition MethodInvocation iterator getColumnDefinitions WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType ColumnDefinition VariableDeclarator colDef Cast ReferenceType ColumnDefinition MethodInvocation it next StatementExpression MethodInvocation sb MethodInvocation Literal " " append MethodInvocation colDef getName append StatementExpression MethodInvocation sb MethodInvocation colDef append LocalVariableDeclaration ReferenceType Boolean VariableDeclarator nullable MethodInvocation colDef IfStatement BinaryOperation != MemberReference nullable Literal null BlockStatement IfStatement MethodInvocation nullable MemberReference Boolean TRUE equals BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "NULL" append Literal " " append IfStatement MethodInvocation nullable MemberReference Boolean FALSE equals BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "NOT NULL" append Literal " " append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal "," append LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbPk ClassCreator ReferenceType StringBuffer StatementExpression Assignment MemberReference it MethodInvocation tableDefinition MethodInvocation iterator getPrimaryKeyFields = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator primaryKeyField Cast ReferenceType String MethodInvocation it next IfStatement BinaryOperation > MethodInvocation sbPk length Literal 0 BlockStatement StatementExpression MethodInvocation sbPk Literal ", " append StatementExpression MethodInvocation sbPk MemberReference primaryKeyField append StatementExpression MethodInvocation sb Literal "PRIMARY KEY (" append StatementExpression MethodInvocation sb MemberReference sbPk append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal ")" append StatementExpression MethodInvocation sb Literal ");" append StatementExpression MemberReference ++ primaryKeyCounter ReturnStatement MethodInvocation sb toString	1
MethodDeclaration deleteAssociationRole FormalParameter ReferenceType Object elem LocalVariableDeclaration ReferenceType AssociationRole VariableDeclarator role Cast ReferenceType AssociationRole MemberReference elem ForStatement EnhancedForControl VariableDeclaration ReferenceType Message VariableDeclarator message MethodInvocation role getMessage BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference message delete getUmlFactory	0
MethodDeclaration Modifier public FormalParameter ReferenceType ActionListener l StatementExpression MethodInvocation panel MemberReference l	1
MethodDeclaration Modifier public removeClassModelEventListener FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelClass FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference listener MemberReference modelClass ArrayCreator ReferenceType String ArrayInitializer MemberReference removeClassModelEventListener	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement BinaryOperation instanceof MemberReference dm ReferenceType UMLDeploymentDiagram BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	0
MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index MemberReference LEFT BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Object getPublic ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier private ReferenceType String getSuffix FormalParameter ReferenceType String systemId LocalVariableDeclaration BasicType int VariableDeclarator lastSlash MethodInvocation systemId Literal "/" lastIndexOf IfStatement BinaryOperation > MemberReference lastSlash Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator suffix MethodInvocation systemId BinaryOperation + MemberReference lastSlash Literal 1 substring ReturnStatement MemberReference suffix ReturnStatement MemberReference systemId	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object cls FormalParameter ReferenceType Object feature TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference cls ReferenceType Classifier BinaryOperation instanceof MemberReference feature ReferenceType Feature BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference cls ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "classifier: " MemberReference cls Literal " or " MemberReference feature	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression SuperMethodInvocation Literal 0 setLineWidth	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType OperationsNode BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set Cast ReferenceType OperationsNode MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object elem ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getSender getFacade MemberReference elem	0
MethodDeclaration Modifier public BasicType boolean isType FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle Literal "type" isStereotype	0
MethodDeclaration Modifier final BasicType byte getValue ReturnStatement MemberReference val	0
MethodDeclaration Modifier public Annotation Override setSourceFigNode FormalParameter ReferenceType FigNode fn IfStatement BinaryOperation && BinaryOperation != MemberReference fn Literal null MethodInvocation Model MethodInvocation MethodInvocation fn getOwner isAComment getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator oldComment MemberReference IfStatement BinaryOperation != MemberReference oldComment Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldComment removeElementListener StatementExpression Assignment MemberReference MethodInvocation fn getOwner = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference addElementListener StatementExpression Cast ReferenceType CommentEdge MethodInvocation getOwner IfStatement BinaryOperation && BinaryOperation != MemberReference fn Literal null MethodInvocation ! Model MethodInvocation MethodInvocation fn getOwner isAComment getFacade BlockStatement StatementExpression Assignment MemberReference annotatedElement MethodInvocation fn getOwner = StatementExpression Cast ReferenceType CommentEdge MethodInvocation getOwner StatementExpression SuperMethodInvocation MemberReference fn setSourceFigNode	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public mouseEntered FormalParameter ReferenceType MouseEvent e IfStatement MethodInvocation hasPopup BlockStatement StatementExpression MethodInvocation MethodInvocation Cursor MemberReference Cursor CROSSHAIR_CURSOR getPredefinedCursor setCursor	0
MethodDeclaration Modifier public BasicType boolean isRelevant FormalParameter ReferenceType Critic c FormalParameter ReferenceType Designer d ReturnStatement MethodInvocation ! c MethodInvocation getSnoozed snoozeOrder	0
MethodDeclaration Modifier public Annotation Override ReferenceType Point getClosestPoint FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration ReferenceType Point VariableDeclarator p MethodInvocation MethodInvocation MemberReference anotherPt connectionPoint getBigPort ReturnStatement MemberReference p	1
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener ListenerNotFoundException StatementExpression MethodInvocation notifier MemberReference listener removeNotificationListener	0
MethodDeclaration Modifier public Annotation Override mouseReleased FormalParameter ReferenceType MouseEvent me StatementExpression Assignment MemberReference shouldDraw Literal false = StatementExpression MethodInvocation me consume StatementExpression MethodInvocation editor damageAll StatementExpression MethodInvocation done	0
MethodDeclaration ReferenceType StringBuffer appendClassifierEnd FormalParameter ReferenceType StringBuffer sbPrefix FormalParameter ReferenceType Object cls StatementExpression MethodInvocation sbPrefix MethodInvocation MemberReference cls generateClassifierEnd append ReturnStatement MemberReference sbPrefix	1
MethodDeclaration Modifier public static ReferenceType String formatStereotype FormalParameter ReferenceType String name FormalParameter BasicType boolean useGuillemets IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation == MethodInvocation name length Literal 0 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator key BinaryOperation + Literal MethodInvocation Boolean MemberReference useGuillemets toString ReturnStatement MethodInvocation Translator MemberReference key ArrayCreator ReferenceType Object ArrayInitializer MemberReference name localize	0
MethodDeclaration Modifier public found FormalParameter ReferenceType Object element FormalParameter ReferenceType String value LocalVariableDeclaration BasicType boolean VariableDeclarator isQuery Literal true IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation value Literal "false" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference isQuery Literal false = IfStatement MethodInvocation Model MethodInvocation MemberReference element isABehavioralFeature getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element MemberReference isQuery getCoreHelper	0
MethodDeclaration Modifier private BasicType boolean isNameTerminator FormalParameter BasicType char ch ReturnStatement BinaryOperation || BinaryOperation == MemberReference ch Literal '>' MethodInvocation Character MemberReference ch isWhitespace	1
MethodDeclaration Modifier private static BasicType boolean copyFile FormalParameter Modifier final ReferenceType File source FormalParameter Modifier final ReferenceType File dest TryStatement LocalVariableDeclaration Modifier final ReferenceType FileInputStream VariableDeclarator fis ClassCreator ReferenceType FileInputStream MemberReference source LocalVariableDeclaration Modifier final ReferenceType FileOutputStream VariableDeclarator fos ClassCreator ReferenceType FileOutputStream MemberReference dest LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 WhileStatement BinaryOperation != Assignment MemberReference i MethodInvocation fis MemberReference buf read = Literal - 1 BlockStatement StatementExpression MethodInvocation fos MemberReference buf Literal 0 MemberReference i write StatementExpression MethodInvocation fis close StatementExpression MethodInvocation fos close ReturnStatement Literal true CatchClause CatchClauseParameter FileNotFoundException e StatementExpression MethodInvocation LOG Literal "File not found while copying" MemberReference e error ReturnStatement Literal false CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG Literal "IO error copying file" MemberReference e error ReturnStatement Literal false CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation LOG Literal "You are not allowed to copy these files" MemberReference e error ReturnStatement Literal false	1
MethodDeclaration Modifier private ReferenceType StringBuffer generateClassifierEnd FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || MethodInvocation MethodInvocation MemberReference cls isAClass getFacade MethodInvocation MethodInvocation MemberReference cls isAInterface getFacade BlockStatement IfStatement BinaryOperation && MemberReference verboseDocs BinaryOperation != MemberReference generatorPass MemberReference SOURCE_PASS BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classifierkeyword Literal null IfStatement MethodInvocation MethodInvocation MemberReference cls isAClass getFacade BlockStatement StatementExpression Assignment MemberReference classifierkeyword Literal "class" = BlockStatement StatementExpression Assignment MemberReference classifierkeyword Literal "class" = StatementExpression MethodInvocation sb MethodInvocation Literal "//end of " append MethodInvocation MemberReference classifierkeyword append MethodInvocation Literal " " append MethodInvocation MethodInvocation MethodInvocation MemberReference cls getName getFacade append MethodInvocation MemberReference LINE_SEPARATOR append MemberReference LINE_SEPARATOR append IfStatement BinaryOperation != MemberReference generatorPass MemberReference SOURCE_PASS StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal "};" append ReturnStatement MemberReference sb	1
MethodDeclaration Modifier public ReferenceType String getLanguage IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference expression MethodInvocation getExpression = IfStatement BinaryOperation == MemberReference expression Literal null BlockStatement ReturnStatement MemberReference EMPTYSTRING ReturnStatement MethodInvocation Model MethodInvocation MemberReference expression getLanguage	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index MemberReference TOP BlockStatement ReturnStatement MethodInvocation Model MethodInvocation getInterface getMetaTypes IfStatement BinaryOperation == MemberReference index MemberReference BOTTOM BlockStatement ReturnStatement MethodInvocation Model MethodInvocation getUMLClass getMetaTypes ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String toString IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ReturnStatement Literal "Void" ReturnStatement MethodInvocation Model MethodInvocation MemberReference classifier getName getFacade	0
MethodDeclaration Modifier static ReferenceType Collection TypeArgument ReferenceType ModelElement getContents FormalParameter ReferenceType instance LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ModelElement StatementExpression MethodInvocation results MethodInvocation instance getOwnedInstance addAll StatementExpression MethodInvocation results MethodInvocation instance getOwnedLink addAll ReturnStatement MemberReference results	1
MethodDeclaration Modifier public static ReferenceType String localize FormalParameter ReferenceType String key FormalParameter ReferenceType Object args ReturnStatement MethodInvocation MemberReference key MemberReference args	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object getOwner IfStatement BinaryOperation instanceof MethodInvocation getGraphModel ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "Incorrect graph model of " MethodInvocation MethodInvocation getClass MethodInvocation getName getGraphModel LocalVariableDeclaration ReferenceType VariableDeclarator gm Cast ReferenceType MethodInvocation getGraphModel ReturnStatement MethodInvocation gm	0
MethodDeclaration Modifier private navigateBackward IfStatement BinaryOperation == MemberReference currentTarget Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + BinaryOperation + Literal "NavigateBackward is not allowed " Literal "since the targetpointer is at " Literal "the lower boundary " Literal "of the history" StatementExpression Assignment MemberReference navigateBackward Literal true = IfStatement BinaryOperation == MethodInvocation targets size Literal 0 BlockStatement StatementExpression MethodInvocation Cast ReferenceType WeakReference MethodInvocation history MemberReference currentTarget get setTarget BlockStatement StatementExpression MethodInvocation Cast ReferenceType WeakReference MethodInvocation history MemberReference -- currentTarget get setTarget StatementExpression Assignment MemberReference navigateBackward Literal false =	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ToDoItem FormalParameter ReferenceType Object parent IfStatement MethodInvocation parent MemberReference lastParent equals BlockStatement ReturnStatement MemberReference cachedChildrenList StatementExpression Assignment MemberReference lastParent MemberReference parent = LocalVariableDeclaration ReferenceType ListSet TypeArgument ReferenceType ToDoItem VariableDeclarator allOffenders ClassCreator ReferenceType ListSet TypeArgument ReferenceType ToDoItem LocalVariableDeclaration ReferenceType ListSet TypeArgument ReferenceType ToDoItem VariableDeclarator designerOffenders MethodInvocation Designer MethodInvocation getToDoList MethodInvocation getOffenders theDesigner SynchronizedStatement MemberReference designerOffenders StatementExpression MethodInvocation allOffenders MemberReference designerOffenders MethodInvocation getPredicate addAllElementsSuchThat IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement StatementExpression Assignment MemberReference cachedChildrenList MemberReference allOffenders = ReturnStatement MemberReference cachedChildrenList IfStatement MethodInvocation allOffenders MemberReference parent contains BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ToDoItem LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator itemList MethodInvocation Designer MethodInvocation getToDoList MethodInvocation theDesigner SynchronizedStatement MemberReference itemList ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference itemList BlockStatement LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs ClassCreator ReferenceType ListSet StatementExpression MethodInvocation offs MethodInvocation item getOffenders MethodInvocation getPredicate addAllElementsSuchThat IfStatement MethodInvocation offs MemberReference parent contains BlockStatement StatementExpression MethodInvocation result MemberReference item add StatementExpression Assignment MemberReference cachedChildrenList MemberReference result = ReturnStatement MemberReference cachedChildrenList StatementExpression Assignment MemberReference cachedChildrenList MethodInvocation Collections emptyList = ReturnStatement MemberReference cachedChildrenList	1
MethodDeclaration Modifier private StatementExpression Assignment MemberReference argoRenderingHints ClassCreator ReferenceType RenderingHints Literal null = StatementExpression MethodInvocation argoRenderingHints MemberReference RenderingHints KEY_FRACTIONALMETRICS MemberReference RenderingHints VALUE_FRACTIONALMETRICS_ON put IfStatement MethodInvocation Configuration MemberReference Argo KEY_SMOOTH_EDGES Literal false getBoolean BlockStatement StatementExpression MethodInvocation argoRenderingHints MemberReference RenderingHints KEY_RENDERING MemberReference RenderingHints put StatementExpression MethodInvocation argoRenderingHints MemberReference RenderingHints KEY_ANTIALIASING MemberReference RenderingHints VALUE_ANTIALIAS_ON put StatementExpression MethodInvocation argoRenderingHints MemberReference RenderingHints KEY_TEXT_ANTIALIASING MemberReference RenderingHints put BlockStatement StatementExpression MethodInvocation argoRenderingHints MemberReference RenderingHints KEY_RENDERING MemberReference RenderingHints put StatementExpression MethodInvocation argoRenderingHints MemberReference RenderingHints KEY_ANTIALIASING MemberReference RenderingHints put StatementExpression MethodInvocation argoRenderingHints MemberReference RenderingHints KEY_TEXT_ANTIALIASING MemberReference RenderingHints VALUE_TEXT_ANTIALIAS_OFF put	0
MethodDeclaration Modifier public endClassDefinition IfStatement MethodInvocation ! ignore BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation contextStack pop AssertStatement MethodInvocation MethodInvocation MemberReference cls isAClass getFacade BinaryOperation + BinaryOperation + Literal "The popped context (\"" MethodInvocation MethodInvocation MemberReference cls getName getFacade Literal "\") isn't a class!" StatementExpression Assignment MemberReference contextAccessSpecifier Literal null =	0
MethodDeclaration Modifier public synchronized static ReferenceType XMLPropPanelFactory getInstance Exception IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement StatementExpression Assignment MemberReference instance ClassCreator ReferenceType XMLPropPanelFactory = ReturnStatement MemberReference instance	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget getCommonBehaviorFactory	0
MethodDeclaration Modifier private static BasicType boolean registerPersister FormalParameter ReferenceType Class target FormalParameter ReferenceType String tag FormalParameter ReferenceType Class TypeArgument ReferenceType MemberFilePersister extends persister StatementExpression MethodInvocation persistersByClass MemberReference target MemberReference persister put StatementExpression MethodInvocation persistersByTag MemberReference tag MemberReference persister put ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType List getRegions FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation impl MemberReference handle getRegions	0
MethodDeclaration Modifier public Annotation Override ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType WizMEName	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index Literal 0 BlockStatement StatementExpression Assignment MemberReference index MethodInvocation getButton = IfStatement BinaryOperation || BinaryOperation == MemberReference index MemberReference TOP BinaryOperation == MemberReference index MemberReference BOTTOM BlockStatement ReturnStatement MethodInvocation Model MethodInvocation getUseCasesFactory BlockStatement ReturnStatement MethodInvocation Model MethodInvocation getUseCasesFactory	0
MethodDeclaration Modifier private ReferenceType Object copyTaggedValue FormalParameter ReferenceType TaggedValue source LocalVariableDeclaration ReferenceType TaggedValue VariableDeclarator tv MethodInvocation StatementExpression MethodInvocation tv MethodInvocation source getType setType StatementExpression MethodInvocation tv MethodInvocation MethodInvocation source addAll StatementExpression MethodInvocation tv MethodInvocation MethodInvocation source addAll ReturnStatement MemberReference tv	0
MethodDeclaration Modifier public BasicType boolean isRoot FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement ReturnStatement Cast ReferenceType GeneralizableElement MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement Cast ReferenceType Operation MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement ReturnStatement Cast ReferenceType Reception MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e IfStatement MethodInvocation MemberReference handle isAUMLElement BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType PerspectiveRule ReturnStatement MemberReference rules	0
MethodDeclaration Modifier public Annotation Override ReferenceType String instructions ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator event MethodInvocation getTarget IfStatement BinaryOperation || BinaryOperation == MemberReference selected Literal null BinaryOperation == MethodInvocation selected size Literal 0 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference event Literal null setSignal getCommonBehaviorHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference event MethodInvocation selected MethodInvocation next iterator setSignal getCommonBehaviorHelper	1
MethodDeclaration Modifier public removeObsoleteInnerClasses IfStatement BinaryOperation == MemberReference obsoleteInnerClasses Literal null BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference obsoleteInnerClasses BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference element isAClassifier getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element delete getUmlFactory	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public setNext FormalParameter ReferenceType TokenSep n StatementExpression Assignment This MemberReference next MemberReference n =	0
MethodDeclaration Modifier public final unary_operator RecognitionException TokenStreamException SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase AMPERSAND BlockStatement StatementExpression MethodInvocation MemberReference AMPERSAND match BreakStatement SwitchStatementCase STAR BlockStatement StatementExpression MethodInvocation MemberReference STAR match BreakStatement SwitchStatementCase PLUS BlockStatement StatementExpression MethodInvocation MemberReference PLUS match BreakStatement SwitchStatementCase MINUS BlockStatement StatementExpression MethodInvocation MemberReference MINUS match BreakStatement SwitchStatementCase TILDE BlockStatement StatementExpression MethodInvocation MemberReference TILDE match BreakStatement SwitchStatementCase NOT BlockStatement StatementExpression MethodInvocation MemberReference NOT match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public BasicType int size ReturnStatement MethodInvocation getSize	0
MethodDeclaration Modifier public setFillColor FormalParameter ReferenceType Color c StatementExpression SuperMethodInvocation MemberReference c setFillColor	1
MethodDeclaration Modifier public ReferenceType Rectangle getTrapRect ReturnStatement ClassCreator ReferenceType Rectangle MemberReference _x BinaryOperation + MemberReference _y MemberReference DEPTH BinaryOperation - MemberReference _w MemberReference DEPTH BinaryOperation - MemberReference MemberReference DEPTH	0
MethodDeclaration Modifier public Annotation Override insertElementAt FormalParameter ReferenceType E o FormalParameter BasicType int index IfStatement MemberReference BlockStatement IfStatement MethodInvocation MemberReference o BlockStatement ReturnStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType JMenu BlockStatement StatementExpression Assignment MemberReference o Cast ReferenceType E MethodInvocation Cast ReferenceType JMenu MemberReference o = IfStatement BinaryOperation != MemberReference o Literal null BlockStatement StatementExpression SuperMethodInvocation MemberReference o MemberReference index insertElementAt	0
MethodDeclaration Modifier public static ReferenceType String generateMultiplicity FormalParameter ReferenceType Object element FormalParameter BasicType boolean showSingularMultiplicity LocalVariableDeclaration ReferenceType Object VariableDeclarator multiplicity IfStatement MethodInvocation Model MethodInvocation MemberReference element isAMultiplicity getFacade BlockStatement StatementExpression Assignment MemberReference multiplicity MemberReference element = IfStatement MethodInvocation Model MethodInvocation MemberReference element isAUMLElement getFacade BlockStatement StatementExpression Assignment MemberReference multiplicity MethodInvocation Model MethodInvocation MemberReference element getMultiplicity getFacade = BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation != MemberReference multiplicity Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator upper MethodInvocation Model MethodInvocation MemberReference multiplicity getUpper getFacade LocalVariableDeclaration BasicType int VariableDeclarator lower MethodInvocation Model MethodInvocation MemberReference multiplicity getLower getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation != MemberReference lower Literal 1 BinaryOperation != MemberReference upper Literal 1 MemberReference showSingularMultiplicity BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference multiplicity toString getFacade ReturnStatement Literal ""	1
MethodDeclaration Modifier public buildModel LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement BinaryOperation && BinaryOperation != MemberReference target Literal null MethodInvocation Model MethodInvocation MemberReference target isAElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference target getVisibility getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation Literal null setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPublic getVisibilityKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetModelElementVisibility setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPackage getVisibilityKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetModelElementVisibility PACKAGE_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getProtected getVisibilityKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetModelElementVisibility PROTECTED_COMMAND setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getPrivate getVisibilityKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetModelElementVisibility setSelected BlockStatement StatementExpression MethodInvocation MemberReference ActionSetModelElementVisibility setSelected	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dm computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration ReferenceType Collection TypeArgument ReferenceType MofClass getMetaClasses LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType MofClass VariableDeclarator metaTypes MethodInvocation modelImpl MethodInvocation getMofClass MethodInvocation refAllOfClass getModelPackage ReturnStatement MemberReference metaTypes	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation MemberReference e copyActionPerformed	0
MethodDeclaration Modifier public final typeID RecognitionException TokenStreamException IfStatement MethodInvocation ! MethodInvocation MethodInvocation getText Literal 1 LT isTypeName ThrowStatement ClassCreator ReferenceType SemanticException Literal "isTypeName(LT(1).getText())" StatementExpression MethodInvocation MemberReference ID match	1
MethodDeclaration Modifier public ReferenceType FinalState FormalParameter ReferenceType Object compositeState IfStatement BinaryOperation instanceof MemberReference compositeState ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType FinalState VariableDeclarator state MethodInvocation StatementExpression MethodInvocation state Cast ReferenceType CompositeState MemberReference compositeState setContainer ReturnStatement MemberReference state ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a	0
MethodDeclaration Modifier public windowClosing FormalParameter ReferenceType WindowEvent e StatementExpression MethodInvocation handleCancel	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int position FormalParameter ReferenceType Object argument StatementExpression MethodInvocation impl MemberReference handle MemberReference position MemberReference argument	0
MethodDeclaration Modifier public ReferenceType Object getParent ReturnStatement MemberReference parent	0
MethodDeclaration Modifier public buildModel LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference tagName getTaggedValue getFacade IfStatement BinaryOperation != MemberReference tv Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tag MethodInvocation Model MethodInvocation MemberReference tv getValueOfTag getFacade IfStatement Literal MethodInvocation MemberReference tag equals "true" BlockStatement StatementExpression MethodInvocation Literal true setSelected ReturnStatement StatementExpression MethodInvocation Literal false setSelected	0
MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal "dialog.title.add-imported-elements" localize	0
MethodDeclaration Modifier public treeExpanded FormalParameter ReferenceType TreeExpansionEvent event StatementExpression MethodInvocation MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation toArray getInstance setSelection	0
MethodDeclaration Modifier protected ReferenceType JLabel ReturnStatement MemberReference titleLabel	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType PerspectiveComboBox BlockStatement StatementExpression Assignment MemberReference rules Cast ReferenceType ExplorerPerspective MethodInvocation e getItem = BlockStatement StatementExpression Assignment MemberReference order Cast ReferenceType Comparator MethodInvocation e getItem = StatementExpression MethodInvocation structureChanged StatementExpression MethodInvocation tree MethodInvocation tree Literal 1 getPathForRow expandPath	1
MethodDeclaration Modifier public final mSCOPE FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference SCOPE = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal "::" match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType Object getInnerContainingModel FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAModel BlockStatement ReturnStatement MemberReference handle IfStatement MethodInvocation ! MemberReference handle isAUMLElement BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject IfStatement BinaryOperation == MethodInvocation MemberReference handle getModelElementContainer Literal null BlockStatement ReturnStatement MemberReference handle ReturnStatement MethodInvocation MethodInvocation MemberReference handle getModelElementContainer getInnerContainingModel CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClass getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType Object getActionOwner FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation impl MemberReference handle getActionOwner	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation || BinaryOperation == MemberReference p Literal null MethodInvocation ! ProjectBrowser MethodInvocation MethodInvocation isEnabled getInstance BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator message MethodInvocation MessageFormat MethodInvocation Translator Literal localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation p getName format LocalVariableDeclaration BasicType int VariableDeclarator response MethodInvocation JOptionPane MethodInvocation ArgoFrame getFrame MemberReference message MethodInvocation Translator Literal "optionpane.revert-to-saved-confirm-title" localize MemberReference JOptionPane YES_NO_OPTION showConfirmDialog IfStatement BinaryOperation == MemberReference response MemberReference JOptionPane YES_OPTION BlockStatement StatementExpression MethodInvocation ProjectBrowser MethodInvocation ClassCreator ReferenceType File MethodInvocation p getURI Literal true loadProjectWithProgressMonitor getInstance	0
MethodDeclaration Modifier public static setPreferencesHandler FormalParameter ReferenceType Object target FormalParameter ReferenceType Method prefsHandler LocalVariableDeclaration BasicType boolean VariableDeclarator enablePrefsMenu BinaryOperation && BinaryOperation != MemberReference target Literal null BinaryOperation != MemberReference prefsHandler Literal null IfStatement MemberReference enablePrefsMenu BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType OSXAdapter Literal "handlePreferences" MemberReference target MemberReference prefsHandler setHandler TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator enablePrefsMethod MethodInvocation macOSXApplication MethodInvocation Literal "setEnabledPreferencesMenu" ArrayCreator ReferenceType Class ArrayInitializer ClassReference BasicType boolean getDeclaredMethod getClass StatementExpression MethodInvocation enablePrefsMethod MemberReference macOSXApplication ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation Boolean MemberReference enablePrefsMenu valueOf invoke CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation LOG Literal "OSXAdapter could not access the About Menu" error StatementExpression MethodInvocation ex printStackTrace	1
MethodDeclaration Modifier public IfStatement BinaryOperation != MethodInvocation MethodInvocation ShortcutMgr MethodInvocation shortcutField getText decodeKeyStroke getActionAlreadyAssigned Literal null BlockStatement StatementExpression MethodInvocation JOptionPane This MethodInvocation Translator Literal localize MethodInvocation Translator Literal localize MemberReference JOptionPane WARNING_MESSAGE showMessageDialog BlockStatement StatementExpression MethodInvocation ShortcutMgr MemberReference actions saveShortcuts	0
MethodDeclaration Modifier protected ReferenceType Object getUmlActions LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MethodInvocation getActionState MethodInvocation Literal null MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation getActionSwimlane Literal null MethodInvocation getActionCallState MethodInvocation getActionObjectFlowState Literal null MethodInvocation MethodInvocation MethodInvocation ReturnStatement MemberReference actions	1
MethodDeclaration Modifier private parseMethod FormalParameter ReferenceType TypeNode type FormalParameter ReferenceType IdentifierExpression name FeatureNotSupportedException LocalVariableDeclaration BasicType long VariableDeclarator mask Cast BasicType long MemberReference Modifier MethodMods IfStatement BinaryOperation != BinaryOperation & Cast BasicType long MemberReference curmods MemberReference mask Cast BasicType long MemberReference Modifier Empty StatementExpression MethodInvocation Literal "method declaration contains illegal modifiers" ReportError LocalVariableDeclaration ReferenceType MethodNode VariableDeclarator node ClassCreator ReferenceType MethodNode StatementExpression MethodInvocation typeStack MemberReference Methods MethodInvocation MemberReference node add peek IfStatement BinaryOperation > MethodInvocation curAttributes size Literal 0 BlockStatement StatementExpression Assignment MemberReference node attributes MemberReference curAttributes = StatementExpression Assignment MemberReference curAttributes ClassCreator ReferenceType NodeCollection TypeArgument ReferenceType AttributeNode = StatementExpression Assignment MemberReference node modifiers MemberReference curmods = StatementExpression Assignment MemberReference curmods MemberReference Modifier Empty = StatementExpression Assignment MemberReference node type MemberReference type = StatementExpression MethodInvocation node.names MemberReference name add StatementExpression Assignment MemberReference node params MethodInvocation parseParamList = StatementExpression MethodInvocation MemberReference node statementBlock parseBlock	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection messages StatementExpression MethodInvocation impl MemberReference handle MemberReference messages	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType String ReturnStatement MethodInvocation diaDefault	0
MethodDeclaration Modifier public static ReferenceType ActionNewAction LocalVariableDeclaration ReferenceType ActionNewAction VariableDeclarator a ClassCreator ReferenceType MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isATransition getFacade BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference target setTarget StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation a MemberReference SHORT_DESCRIPTION MethodInvocation a MemberReference Action NAME getValue putValue LocalVariableDeclaration ReferenceType Object VariableDeclarator icon MethodInvocation Literal lookupIconResource StatementExpression MethodInvocation a MemberReference MemberReference icon putValue StatementExpression MethodInvocation a MemberReference ROLE MemberReference Roles EFFECT putValue ReturnStatement MemberReference a	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigHistoryState VariableDeclarator figClone Cast ReferenceType FigHistoryState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigCircle MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone head Cast ReferenceType FigCircle MethodInvocation it next = StatementExpression Assignment MemberReference figClone h Cast ReferenceType FigText MethodInvocation it next = ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public ReferenceType DocumentFragment insertTextCallouts FormalParameter ReferenceType NodeIterator areaspecNodeSet FormalParameter ReferenceType NodeIterator xalanNI FormalParameter BasicType int defaultColumn FormalParameter BasicType boolean useFO LocalVariableDeclaration ReferenceType VariableDeclarator ftc ClassCreator ReferenceType MemberReference useFO ReturnStatement MethodInvocation MemberReference areaspecNodeSet MemberReference xalanNI MemberReference defaultColumn MemberReference ftc insertCallouts	0
MethodDeclaration Modifier public ReferenceType Collection getOptions FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement getRegions getStateMachinesHelper	0
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator listeners ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference newOwner ArrayCreator ReferenceType String ArrayInitializer Literal "remove" Literal "name" Literal "isAbstract" Literal "extensionPoint" Literal "stereotype" add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator ep MethodInvocation Model MethodInvocation MemberReference newOwner getExtensionPoints getFacade BlockStatement StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference ep ArrayCreator ReferenceType String ArrayInitializer Literal "location" Literal "name" add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator st MethodInvocation Model MethodInvocation MemberReference newOwner getStereotypes getFacade BlockStatement StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference st Literal "name" add StatementExpression MethodInvocation MemberReference listeners updateElementListeners	1
MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text TryStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference text parseClassifierRole CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoHelpEvent MemberReference ArgoEventTypes HELP_CHANGED This MethodInvocation Translator MemberReference msg MemberReference args	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal true	1
MethodDeclaration Modifier public static ReferenceType getEnum FormalParameter BasicType int value LocalVariableDeclaration BasicType int VariableDeclarator counter Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator sv MethodInvocation values BlockStatement IfStatement BinaryOperation == MemberReference counter MemberReference value BlockStatement ReturnStatement MemberReference sv StatementExpression MemberReference ++ counter ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed StatementExpression MethodInvocation Literal false doVisibility	0
MethodDeclaration Modifier public BasicType boolean isLfBeforeCurly ReturnStatement MemberReference lfBeforeCurly	0
MethodDeclaration Modifier public FormalParameter ReferenceType String cat StatementExpression Assignment MemberReference nextCategory MemberReference cat =	0
MethodDeclaration Modifier public ReferenceType Object getNodeInstance FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ComponentInstance BlockStatement ReturnStatement Cast ReferenceType ComponentInstance MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier private static ReferenceType String generateUninterpreted FormalParameter ReferenceType String un IfStatement BinaryOperation == MemberReference un Literal null BlockStatement ReturnStatement Literal "" ReturnStatement MemberReference un	0
MethodDeclaration Modifier public BasicType int getRowCount IfStatement BinaryOperation == MemberReference critics Literal null BlockStatement ReturnStatement Literal 0 ReturnStatement MethodInvocation critics size	0
MethodDeclaration Modifier public setVisibility FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object visibility StatementExpression MethodInvocation impl MemberReference handle MemberReference visibility setVisibility	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation image	0
MethodDeclaration Modifier public ReferenceType Project doLoad FormalParameter ReferenceType File file OpenException InterruptedException LocalVariableDeclaration ReferenceType ProgressMgr VariableDeclarator progressMgr ClassCreator ReferenceType ProgressMgr StatementExpression MethodInvocation progressMgr MemberReference UML_PHASES_LOAD setNumberOfPhases StatementExpression MethodInvocation ThreadUtils checkIfInterrupted ReturnStatement MethodInvocation MemberReference file MemberReference file MemberReference progressMgr doLoad	0
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object d2 IfStatement BinaryOperation instanceof MemberReference d2 ReferenceType BlockStatement ReturnStatement Literal false ReturnStatement Cast ReferenceType MemberReference d2	0
MethodDeclaration Modifier private static ReferenceType ProfileManager getSomeProfileManager IfStatement MethodInvocation ProfileFacade isInitiated BlockStatement ReturnStatement MethodInvocation ProfileFacade getManager ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier private determineRemoveEnabled LocalVariableDeclaration ReferenceType Editor VariableDeclarator editor MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation editor MethodInvocation getFigs getSelectionManager LocalVariableDeclaration BasicType boolean VariableDeclarator removeEnabled MethodInvocation ! figs isEmpty LocalVariableDeclaration ReferenceType GraphModel VariableDeclarator gm MethodInvocation editor getGraphModel IfStatement BinaryOperation instanceof MemberReference gm ReferenceType UMLMutableGraphSupport BlockStatement StatementExpression Assignment MemberReference removeEnabled Cast ReferenceType UMLMutableGraphSupport MemberReference gm = StatementExpression MethodInvocation removeFromDiagram MemberReference removeEnabled setEnabled	0
MethodDeclaration Modifier public BasicType boolean isAConnector FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Connector	0
MethodDeclaration Modifier public ReferenceType Position createPosition FormalParameter BasicType int offs BadLocationException ReturnStatement MethodInvocation document MemberReference offs createPosition	0
MethodDeclaration Modifier public setOwner FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object owner StatementExpression SuperMethodInvocation MemberReference handle MemberReference owner setOwner StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration updateArrows ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator fm MethodInvocation getFigs BlockStatement StatementExpression Cast ReferenceType FigMessage MemberReference fm	0
MethodDeclaration Modifier protected ReferenceType ColorUIResource ReturnStatement MemberReference	0
MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation This	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType TreeSelectionEvent treeSelectionEvent StatementExpression Assignment MemberReference selectedTreePath MethodInvocation treeSelectionEvent getNewLeadSelectionPath =	0
MethodDeclaration Modifier public BasicType boolean isReverseDropConnection ReturnStatement MemberReference reverseDropConnection	0
MethodDeclaration Modifier public ReferenceType Object getMultiplicity ReturnStatement ClassReference ReferenceType Multiplicity	0
MethodDeclaration Modifier public ReferenceType Object getExpression ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getScript getFacade	0
MethodDeclaration Modifier public BasicType boolean subsumes FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType AssociationsNode	0
MethodDeclaration Modifier private printDebugInfo FormalParameter ReferenceType String s FormalParameter ReferenceType String fname FormalParameter ReferenceType StringBuilder guard FormalParameter ReferenceType String paramExpr FormalParameter ReferenceType StringBuilder varname FormalParameter ReferenceType List TypeArgument ReferenceType List predecessors FormalParameter ReferenceType List TypeArgument ReferenceType Integer seqno FormalParameter BasicType boolean parallell FormalParameter BasicType boolean iterative IfStatement MethodInvocation LOG isDebugEnabled BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + Literal "ParseMessage: " MemberReference s Literal "\n" append StatementExpression MethodInvocation buf Literal "Message: " append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation != MemberReference seqno Literal null BinaryOperation < BinaryOperation + MemberReference i Literal 1 MethodInvocation seqno size Assignment MemberReference i Literal 2 += BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation buf Literal ", " append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation seqno MemberReference i get Literal " (" MethodInvocation seqno BinaryOperation + MemberReference i Literal 1 get Literal ")" append StatementExpression MethodInvocation buf Literal "\n" append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + Literal "predecessors: " MethodInvocation predecessors size Literal "\n" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation predecessors size MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator j LocalVariableDeclaration ReferenceType List VariableDeclarator v MethodInvocation predecessors MemberReference i get StatementExpression MethodInvocation buf Literal " Predecessor: " append ForStatement ForControl Assignment MemberReference j Literal 0 = BinaryOperation && BinaryOperation != MemberReference v Literal null BinaryOperation < BinaryOperation + MemberReference j Literal 1 MethodInvocation v size Assignment MemberReference j Literal 2 += BlockStatement IfStatement BinaryOperation > MemberReference j Literal 0 BlockStatement StatementExpression MethodInvocation buf Literal ", " append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation v MemberReference j get Literal " (" MethodInvocation v BinaryOperation + MemberReference j Literal 1 get Literal ")" append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "guard: " MemberReference guard Literal " it: " MemberReference iterative Literal " pl: " MemberReference parallell Literal "\n" append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference varname Literal " " MemberReference fname Literal " ( " MemberReference paramExpr Literal " )" Literal "\n" append StatementExpression MethodInvocation LOG MemberReference buf debug	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation toString	0
MethodDeclaration Modifier public final mPLUSEQUAL FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference PLUSEQUAL = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal "+=" match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier protected buildModelList IfStatement MethodInvocation ! isEmpty StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getExtension getFacade addElement	1
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener FormalParameter ReferenceType NotificationFilter filter FormalParameter ReferenceType Object handback ListenerNotFoundException StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference handback removeNotificationListener	0
MethodDeclaration Modifier public BasicType boolean isAAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Action	0
MethodDeclaration Modifier public ReferenceType Attribute buildAttribute2 FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object type LocalVariableDeclaration ReferenceType Attribute VariableDeclarator attr MethodInvocation MemberReference type buildAttribute2 IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator cls Cast ReferenceType Classifier MemberReference handle StatementExpression MethodInvocation cls MethodInvocation MemberReference attr add getFeature IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator assend Cast ReferenceType AssociationEnd MemberReference handle StatementExpression MethodInvocation assend MethodInvocation MemberReference attr add getQualifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement MemberReference attr	0
MethodDeclaration Modifier private warnClassifierNotFound FormalParameter ReferenceType String name FormalParameter ReferenceType String operation StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Modeller.java: a classifier (" MemberReference name Literal ") that was in the source " Literal "file could not be generated in the model " MemberReference operation logError	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement BinaryOperation == MethodInvocation e getSource MemberReference combo BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public BasicType boolean isActive ReturnStatement MemberReference isActive	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType T subList FormalParameter BasicType int fromIndex FormalParameter BasicType int toIndex ReturnStatement MethodInvocation MemberReference fromIndex MemberReference toIndex subList	0
MethodDeclaration Modifier public static BasicType boolean getBoolean FormalParameter ReferenceType ConfigurationKey key ReturnStatement MethodInvocation MemberReference key Literal false getBoolean	0
MethodDeclaration Modifier public BasicType boolean enable StatementExpression MethodInvocation GUI MethodInvocation This getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier private ReferenceType String generateTransition FormalParameter ReferenceType Object m LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getName getFacade generateName LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getTrigger getFacade generateEvent LocalVariableDeclaration ReferenceType String VariableDeclarator g MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getGuard getFacade generateGuard LocalVariableDeclaration ReferenceType String VariableDeclarator e MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getFacade generateAction IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal ": " append StatementExpression MethodInvocation sb MemberReference t append IfStatement BinaryOperation > MethodInvocation g length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference g append MethodInvocation Literal ']' append Literal " [" append IfStatement BinaryOperation > MethodInvocation e length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference e append Literal " / " append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType Object buildSignalEvent FormalParameter ReferenceType Object ns ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private BasicType boolean isProfilePackage FormalParameter ReferenceType Namespace ns ReturnStatement MethodInvocation Model MethodInvocation MemberReference ns Literal "profile" isStereotype getFacade	0
MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation e getNewTarget targetChanged	0
MethodDeclaration Modifier private StatementExpression MethodInvocation ClassCreator ReferenceType ActionUseCaseDiagram add StatementExpression MethodInvocation ClassCreator ReferenceType ActionClassDiagram add StatementExpression MethodInvocation ClassCreator ReferenceType ActionSequenceDiagram add StatementExpression MethodInvocation ClassCreator ReferenceType ActionCollaborationDiagram add StatementExpression MethodInvocation ClassCreator ReferenceType ActionStateDiagram add StatementExpression MethodInvocation ClassCreator ReferenceType ActionActivityDiagram add StatementExpression MethodInvocation ClassCreator ReferenceType ActionDeploymentDiagram add	0
MethodDeclaration Modifier public ReferenceType Collection getOptions FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement ClassCreator ReferenceType LinkedList TypeArgument ReferenceType String MethodInvocation Model MethodInvocation MemberReference modelElement getTagDefinitions getFacade	0
MethodDeclaration Modifier public setSrcPath FormalParameter ReferenceType String path StatementExpression Assignment MemberReference MemberReference path =	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement ReturnStatement MethodInvocation MethodInvocation getCollaborations MethodInvocation getAReceiverMessage MethodInvocation Cast ReferenceType ClassifierRole MemberReference handle getMessage MemberReference handle getRefOutermostPackage CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier private addImport FormalParameter ReferenceType Set TypeArgument ReferenceType String imports FormalParameter ReferenceType Object element FormalParameter ReferenceType String exclude LocalVariableDeclaration ReferenceType String VariableDeclarator importString MethodInvocation MemberReference element MemberReference exclude generateImport IfStatement BinaryOperation != MemberReference importString Literal null BlockStatement StatementExpression MethodInvocation imports MemberReference importString add	0
MethodDeclaration Modifier private static ReferenceType TokenSep parseDelimString FormalParameter ReferenceType String str LocalVariableDeclaration ReferenceType TokenSep VariableDeclarator first Literal null LocalVariableDeclaration ReferenceType TokenSep VariableDeclarator p Literal null LocalVariableDeclaration BasicType int VariableDeclarator idx0 VariableDeclarator idx1 VariableDeclarator length LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator val ClassCreator ReferenceType StringBuilder LocalVariableDeclaration BasicType char VariableDeclarator c StatementExpression Assignment MemberReference length MethodInvocation str length = ForStatement ForControl Assignment MemberReference idx0 Literal 0 = BinaryOperation < MemberReference idx0 MemberReference length BlockStatement ForStatement ForControl Assignment MemberReference idx1 MemberReference idx0 = BinaryOperation < MemberReference idx1 MemberReference length MemberReference ++ idx1 BlockStatement StatementExpression Assignment MemberReference c MethodInvocation str MemberReference idx1 charAt = IfStatement BinaryOperation == MemberReference c Literal '\\' BlockStatement StatementExpression MemberReference ++ idx1 IfStatement BinaryOperation < MemberReference idx1 MemberReference length BlockStatement StatementExpression MethodInvocation val MethodInvocation str MemberReference idx1 charAt append IfStatement BinaryOperation == MemberReference c Literal ',' BlockStatement BreakStatement BlockStatement StatementExpression MethodInvocation val MemberReference c append StatementExpression Assignment MemberReference idx1 MethodInvocation Math MemberReference idx1 MemberReference length min = IfStatement BinaryOperation > MemberReference idx1 MemberReference idx0 BlockStatement StatementExpression Assignment MemberReference p ClassCreator ReferenceType TokenSep MethodInvocation val toString = StatementExpression Assignment MemberReference val ClassCreator ReferenceType StringBuilder = StatementExpression MethodInvocation p MemberReference first setNext StatementExpression Assignment MemberReference first MemberReference p = StatementExpression Assignment MemberReference idx0 BinaryOperation + MemberReference idx1 Literal 1 = ReturnStatement MemberReference first	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation us MemberReference index setSelection	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object exception StatementExpression MethodInvocation UMLUtil ArrayCreator ReferenceType Object ArrayInitializer MemberReference handle MemberReference exception ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Operation ClassReference ReferenceType Type checkArgs StatementExpression MethodInvocation editingDomain MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MethodInvocation Cast ReferenceType Operation MemberReference handle Cast ReferenceType Type MemberReference exception Literal "Add the Exception to the Operation #" MemberReference exception MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier protected addAll FormalParameter ReferenceType Collection col LocalVariableDeclaration ReferenceType Object VariableDeclarator selected MethodInvocation getSelectedItem StatementExpression Assignment MemberReference fireListEvents Literal false = LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation objects size ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference col BlockStatement StatementExpression MethodInvocation MemberReference o addElement StatementExpression MethodInvocation MethodInvocation MemberReference selected external2internal setSelectedItem StatementExpression Assignment MemberReference fireListEvents Literal true = IfStatement BinaryOperation != MethodInvocation objects size MemberReference BlockStatement StatementExpression MethodInvocation This TernaryExpression BinaryOperation == MemberReference Literal 0 Literal 0 BinaryOperation - MemberReference Literal 1 BinaryOperation - MethodInvocation objects size Literal 1 fireIntervalAdded	0
MethodDeclaration Modifier public BasicType int getColumnCount ReturnStatement MemberReference columnNames length	0
MethodDeclaration Modifier public ReferenceType Object getAction ReturnStatement ClassReference ReferenceType Action	0
MethodDeclaration Modifier private initFigs StatementExpression Assignment MemberReference leftLine ClassCreator ReferenceType FigLine MemberReference MemberReference Literal 10 Literal 300 MemberReference LINE_COLOR = StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine Literal 150 MemberReference Literal 160 Literal 300 MemberReference LINE_COLOR = StatementExpression Assignment MemberReference bottomLine ClassCreator ReferenceType FigLine MemberReference Literal 300 Literal 150 Literal 300 MemberReference LINE_COLOR = StatementExpression Assignment MemberReference topLine ClassCreator ReferenceType FigLine MemberReference MemberReference Literal 150 Literal 10 MemberReference LINE_COLOR = StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference Literal 50 Literal 25 setBounds getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig StatementExpression Assignment MemberReference seperator ClassCreator ReferenceType FigLine MemberReference BinaryOperation + MemberReference Literal 15 Literal 150 Literal 25 MemberReference LINE_COLOR = StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MemberReference leftLine addFig StatementExpression MethodInvocation MemberReference topLine addFig StatementExpression MethodInvocation MemberReference bottomLine addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MemberReference seperator addFig StatementExpression MethodInvocation Literal false setFilled StatementExpression MethodInvocation MethodInvocation getBounds setBounds	1
MethodDeclaration Modifier private ReferenceType Collection getModel IfStatement BinaryOperation == MemberReference model Literal null BlockStatement LocalVariableDeclaration ReferenceType ProfileModelLoader VariableDeclarator profileModelLoader ClassCreator ReferenceType ResourceModelLoader TryStatement StatementExpression Assignment MemberReference model MethodInvocation profileModelLoader MemberReference profileReference loadModel = CatchClause CatchClauseParameter ProfileException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Exception loading " MemberReference PROFILE_FILE MemberReference e error IfStatement BinaryOperation == MemberReference model Literal null BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation model MethodInvocation Model MethodInvocation createModel getModelManagementFactory add ReturnStatement MemberReference model	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier private ReferenceType String generateVisibility FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Object VariableDeclarator visibility IfStatement MethodInvocation Model MethodInvocation MemberReference handle isAFeature getFacade BlockStatement StatementExpression Assignment MemberReference visibility MethodInvocation Model MethodInvocation MemberReference handle getVisibility getFacade = BlockStatement StatementExpression Assignment MemberReference visibility MemberReference handle = IfStatement MethodInvocation Model MethodInvocation getPublic MethodInvocation MemberReference visibility equals getVisibilityKind BlockStatement ReturnStatement Literal "public " IfStatement MethodInvocation Model MethodInvocation getPrivate MethodInvocation MemberReference visibility equals getVisibilityKind BlockStatement ReturnStatement Literal "private " IfStatement MethodInvocation Model MethodInvocation getProtected MethodInvocation MemberReference visibility equals getVisibilityKind BlockStatement ReturnStatement Literal "protected " BlockStatement ReturnStatement Literal ""	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference INSTANCE	0
MethodDeclaration Modifier public ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression MethodInvocation MethodInvocation MethodInvocation add getParams StatementExpression MethodInvocation editingDomain MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference editingDomain MemberReference run execute getCommandStack ReturnStatement Cast ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType MethodInvocation run MethodInvocation Literal 0 get getParams	0
MethodDeclaration Modifier public Annotation Override setVisible FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference setVisible IfStatement MemberReference BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier private parseNamespace FeatureNotSupportedException IfStatement BinaryOperation != MemberReference curmods MemberReference Modifier Empty StatementExpression MethodInvocation Literal "Namespace can not contain modifiers" ReportError LocalVariableDeclaration ReferenceType NamespaceNode VariableDeclarator node ClassCreator ReferenceType NamespaceNode IfStatement BinaryOperation && BinaryOperation == MethodInvocation cu.Namespaces size Literal 1 BinaryOperation == MethodInvocation cu.Namespaces Literal 0 get MemberReference cu DefaultNamespace BlockStatement StatementExpression MethodInvocation cu.Namespaces clear StatementExpression MethodInvocation cu.Namespaces MemberReference node add StatementExpression MethodInvocation namespaceStack MemberReference node push StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference node Name MethodInvocation parseQualifiedIdentifier = StatementExpression MethodInvocation MemberReference TokenID LCurly AssertAndAdvance StatementExpression MethodInvocation parseNamespaceOrTypes StatementExpression MethodInvocation MemberReference TokenID RCurly AssertAndAdvance StatementExpression MethodInvocation namespaceStack pop	1
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter ReferenceType Object element FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types getOptions	0
MethodDeclaration Modifier public ReferenceType Profile FormalParameter ReferenceType String profile ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object getInterface FormalParameter ReferenceType String name ClassifierNotFoundException ReturnStatement MethodInvocation MemberReference name Literal true get	0
MethodDeclaration Modifier protected Annotation Override textEditStarted FormalParameter ReferenceType FigText ft StatementExpression SuperMethodInvocation MemberReference ft textEditStarted IfStatement BinaryOperation == MemberReference ft MemberReference state BlockStatement StatementExpression MethodInvocation MethodInvocation notationProviderState getParsingHelp showHelp	0
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setFillColor	0
MethodDeclaration Modifier public static ReferenceType makeLanguage FormalParameter ReferenceType String theName ReturnStatement MethodInvocation MemberReference theName MemberReference theName Literal null makeLanguage	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType ActionSequence	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_33 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 1080863912280836704L Literal - 1053842312821473217L Literal 511L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig createBigPortFig LocalVariableDeclaration ReferenceType Fig VariableDeclarator cpfr ClassCreator ReferenceType MemberReference BinaryOperation - MemberReference MemberReference DEPTH BinaryOperation + MemberReference DEFAULT_WIDTH MemberReference DEPTH BinaryOperation + MemberReference MemberReference DEPTH MemberReference DEPTH StatementExpression MethodInvocation cpfr Literal false setFilled StatementExpression MethodInvocation cpfr Literal 0 setLineWidth ReturnStatement MemberReference cpfr	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object state FormalParameter ReferenceType Object deferrableEvent StatementExpression MethodInvocation impl MemberReference state MemberReference deferrableEvent	0
MethodDeclaration Modifier public ReferenceType String getText ReturnStatement MemberReference text	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Collection arg0 SynchronizedStatement MemberReference mutex ReturnStatement MethodInvocation set MemberReference arg0	0
MethodDeclaration Modifier private initFigs StatementExpression Assignment MemberReference cover ClassCreator ReferenceType FigRect MemberReference BX Literal 10 MemberReference DEFAULT_WIDTH MemberReference MemberReference LINE_COLOR MemberReference FILL_COLOR = StatementExpression Assignment MemberReference ClassCreator ReferenceType FigRect Literal 0 BinaryOperation * Literal 2 MemberReference FINGER_HEIGHT MemberReference FINGER_WIDTH MemberReference FINGER_HEIGHT MemberReference LINE_COLOR MemberReference FILL_COLOR = StatementExpression Assignment MemberReference ClassCreator ReferenceType FigRect Literal 0 BinaryOperation * Literal 5 MemberReference FINGER_HEIGHT MemberReference FINGER_WIDTH MemberReference FINGER_HEIGHT MemberReference LINE_COLOR MemberReference FILL_COLOR = StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig StatementExpression MethodInvocation MethodInvocation MethodInvocation placeString setText getNameFig StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference cover addFig StatementExpression MethodInvocation MethodInvocation getStereotypeFig addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MemberReference addFig	0
MethodDeclaration Modifier public ReferenceType Object getComponent ReturnStatement ClassReference ReferenceType Component	0
MethodDeclaration ReferenceType List TypeArgument ReferenceType Point LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Point VariableDeclarator ret ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Point LocalVariableDeclaration BasicType int VariableDeclarator cx MethodInvocation MethodInvocation getCenter MemberReference x getBigPort LocalVariableDeclaration BasicType int VariableDeclarator cy MethodInvocation MethodInvocation getCenter MemberReference y getBigPort LocalVariableDeclaration BasicType double VariableDeclarator radius BinaryOperation + BinaryOperation / MethodInvocation MethodInvocation getWidth getBigPort Literal 2 Literal 1 LocalVariableDeclaration Modifier final BasicType double VariableDeclarator pi2 BinaryOperation * MemberReference Math PI Literal 2 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference CIRCLE_POINTS MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator x Cast BasicType int BinaryOperation + MemberReference cx BinaryOperation * MethodInvocation Math BinaryOperation / BinaryOperation * MemberReference pi2 MemberReference i MemberReference CIRCLE_POINTS cos MemberReference radius LocalVariableDeclaration BasicType int VariableDeclarator y Cast BasicType int BinaryOperation + MemberReference cy BinaryOperation * MethodInvocation Math BinaryOperation / BinaryOperation * MemberReference pi2 MemberReference i MemberReference CIRCLE_POINTS sin MemberReference radius StatementExpression MethodInvocation ret ClassCreator ReferenceType Point MemberReference x MemberReference y add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Connector VariableDeclarator connector Cast ReferenceType Connector Cast ReferenceType ConnectorEnd MemberReference handle LocalVariableDeclaration ReferenceType ConnectableElement VariableDeclarator prop Cast ReferenceType ConnectorEnd MemberReference handle LocalVariableDeclaration ReferenceType VariableDeclarator interaction Cast ReferenceType MethodInvocation connector getOwner ForStatement EnhancedForControl VariableDeclaration ReferenceType Lifeline VariableDeclarator lifeline MethodInvocation interaction BlockStatement IfStatement BinaryOperation == MethodInvocation lifeline getRepresents MemberReference prop BlockStatement ReturnStatement MemberReference lifeline ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The lifeline for " MemberReference handle Literal " can't be found in the interaction " MemberReference interaction	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object connection StatementExpression SuperMethodInvocation MemberReference handle MemberReference connection StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier protected BasicType boolean shouldBeEnabled ReturnStatement MemberReference enabled	0
MethodDeclaration ReferenceType Object FormalParameter ReferenceType Object me FormalParameter ReferenceType Object returnType ReturnStatement MethodInvocation MethodInvocation MemberReference me MemberReference returnType getCoreFactory	0
MethodDeclaration Modifier public static BasicType boolean ReturnStatement MethodInvocation System Literal "os.name" getProperty	0
MethodDeclaration Modifier public BasicType boolean isAGeneralization FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization	0
MethodDeclaration Modifier public BasicType boolean remove FormalParameter ReferenceType Object obj LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation MemberReference obj indexOf LocalVariableDeclaration BasicType boolean VariableDeclarator rv MethodInvocation MemberReference obj remove IfStatement BinaryOperation >= MemberReference index Literal 0 BlockStatement StatementExpression MethodInvocation This MemberReference index MemberReference index fireIntervalRemoved ReturnStatement MemberReference rv	0
MethodDeclaration Modifier public paintClarifiers FormalParameter ReferenceType Graphics g LocalVariableDeclaration BasicType int VariableDeclarator iconPos Literal 25 VariableDeclarator gap Literal 1 VariableDeclarator xOff Literal - 4 VariableDeclarator yOff Literal - 4 LocalVariableDeclaration ReferenceType Point VariableDeclarator p ClassCreator ReferenceType Point LocalVariableDeclaration ReferenceType ToDoList VariableDeclarator tdList MethodInvocation Designer MethodInvocation getToDoList theDesigner LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation tdList MethodInvocation getOwner elementListForOffender ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation item getClarifier IfStatement BinaryOperation instanceof MemberReference icon ReferenceType Clarifier BlockStatement StatementExpression Cast ReferenceType Clarifier MemberReference icon StatementExpression Cast ReferenceType Clarifier MemberReference icon IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation MemberReference iconPos MemberReference p stuffPointAlongPerimeter StatementExpression MethodInvocation icon Literal null MemberReference g BinaryOperation + MemberReference p x MemberReference xOff BinaryOperation + MemberReference p y MemberReference yOff paintIcon StatementExpression Assignment MemberReference iconPos BinaryOperation + MethodInvocation icon getIconWidth MemberReference gap += StatementExpression Assignment MemberReference items MethodInvocation tdList This elementListForOffender = ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement LocalVariableDeclaration ReferenceType Icon VariableDeclarator icon MethodInvocation item getClarifier IfStatement BinaryOperation instanceof MemberReference icon ReferenceType Clarifier BlockStatement StatementExpression Cast ReferenceType Clarifier MemberReference icon StatementExpression Cast ReferenceType Clarifier MemberReference icon IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation MemberReference iconPos MemberReference p stuffPointAlongPerimeter StatementExpression MethodInvocation icon Literal null MemberReference g BinaryOperation + MemberReference p x MemberReference xOff BinaryOperation + MemberReference p y MemberReference yOff paintIcon StatementExpression Assignment MemberReference iconPos BinaryOperation + MethodInvocation icon getIconWidth MemberReference gap +=	1
MethodDeclaration Modifier public Annotation Override setTarget FormalParameter ReferenceType Object theTarget StatementExpression SuperMethodInvocation MemberReference theTarget setTarget IfStatement MethodInvocation isVisible BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation getModelElement IfStatement BinaryOperation != MemberReference me Literal null BlockStatement StatementExpression MethodInvocation selectedListModel MemberReference me setTarget StatementExpression MethodInvocation validate	0
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation != MemberReference oldOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldOwner removeElementListener IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference newOwner addListener	0
MethodDeclaration Modifier private savePosition FormalParameter ReferenceType Property position FormalParameter ReferenceType Class tab LocalVariableDeclaration ReferenceType ConfigurationKey VariableDeclarator key MethodInvocation MemberReference tab makeKey StatementExpression MethodInvocation Configuration MemberReference key MethodInvocation position MethodInvocation toString getCurrentValue setString	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object elem FormalParameter BasicType int i FormalParameter ReferenceType Object feature StatementExpression MethodInvocation impl MemberReference elem MemberReference i MemberReference feature	0
MethodDeclaration Modifier private ReferenceType Context getContext FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Context VariableDeclarator context MethodInvocation parseState getContext LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference name getPackageName IfStatement Literal ! MethodInvocation MemberReference packageName equals "" BlockStatement StatementExpression Assignment MemberReference context ClassCreator ReferenceType PackageContext MemberReference context MethodInvocation MemberReference packageName getPackage = ReturnStatement MemberReference context	0
MethodDeclaration Modifier public removeContext FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object context StatementExpression MethodInvocation impl MemberReference handle MemberReference context removeContext	0
MethodDeclaration Modifier private ReferenceType PathItemPlacementStrategy getPips FormalParameter ReferenceType String figclassname FormalParameter ReferenceType String ownerhref IfStatement BinaryOperation instanceof MemberReference container ReferenceType FigEdgeHandler BlockStatement LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator fe Cast ReferenceType FigEdgeHandler MemberReference container LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation MethodInvocation MemberReference ownerhref findOwner getPGMLStackParser ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation fe getPathItemFigs BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f Cast ReferenceType Fig MemberReference o IfStatement BinaryOperation && MethodInvocation owner MethodInvocation f getOwner equals MethodInvocation figclassname MethodInvocation f MethodInvocation getName getClass equals BlockStatement ReturnStatement MethodInvocation fe MemberReference f getPathItemPlacementStrategy StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Could not load path item for fig '" MemberReference figclassname Literal "', using default placement." warn ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType int getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator attr MemberReference dm LocalVariableDeclaration ReferenceType String VariableDeclarator myName MethodInvocation Model MethodInvocation MemberReference attr getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference myName Literal null Literal MethodInvocation MemberReference myName equals "" BlockStatement ReturnStatement MemberReference PROBLEM_FOUND IfStatement BinaryOperation == MethodInvocation myName length Literal 0 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public BasicType boolean setContent FormalParameter ReferenceType String sTagContent IfStatement BinaryOperation && BinaryOperation != MemberReference sTagContent Literal null BinaryOperation > MethodInvocation sTagContent MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference sContent MethodInvocation sTagContent trim = ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb IfStatement BinaryOperation != MemberReference attributes Literal null BlockStatement StatementExpression MethodInvocation attributes MemberReference sb ToSource StatementExpression This MethodInvocation MemberReference sb NewLine StatementExpression This MethodInvocation This MemberReference modifiers MemberReference sb TraceModifiers StatementExpression This MemberReference type MethodInvocation MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "this [" append IfStatement BinaryOperation != MemberReference params Literal null BlockStatement StatementExpression MethodInvocation params MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "]{" append IfStatement MemberReference hasGetter BlockStatement StatementExpression MethodInvocation sb Literal "get;" append IfStatement MemberReference hasSetter BlockStatement StatementExpression MethodInvocation sb Literal "set;" append StatementExpression MethodInvocation sb Literal "}" append	1
MethodDeclaration ReferenceType Fig getDestFigNode ReturnStatement MemberReference destFigNode	0
MethodDeclaration Modifier public addBaseClass FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object baseClass IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BlockStatement IfStatement BinaryOperation instanceof MemberReference baseClass ReferenceType String BlockStatement StatementExpression Cast ReferenceType Stereotype MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference baseClass ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType Stereotype MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or baseClass: " MemberReference baseClass	0
MethodDeclaration Modifier public ReferenceType UndoManager getUndoManager ReturnStatement MemberReference undoManager	0
MethodDeclaration Modifier protected ReferenceType Action getActionSendAction IfStatement BinaryOperation == MemberReference actionSendAction Literal null BlockStatement StatementExpression Assignment MemberReference actionSendAction MethodInvocation = ReturnStatement MemberReference actionSendAction	0
MethodDeclaration Modifier private ReferenceType Document getDocument IOException DOMException ParserConfigurationException SAXException LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator filename MethodInvocation getDiagramXmlFile LocalVariableDeclaration ReferenceType InputStream VariableDeclarator inputStream This MethodInvocation getClass MethodInvocation getClassLoader MethodInvocation MemberReference filename getResourceAsStream LocalVariableDeclaration ReferenceType InputSource VariableDeclarator inputSource ClassCreator ReferenceType InputSource MemberReference inputStream LocalVariableDeclaration ReferenceType DocumentBuilderFactory VariableDeclarator dbf MethodInvocation DocumentBuilderFactory newInstance LocalVariableDeclaration ReferenceType DocumentBuilder VariableDeclarator db MethodInvocation dbf newDocumentBuilder ReturnStatement MethodInvocation db MemberReference inputSource parse	1
MethodDeclaration ReferenceType Object ReturnStatement MemberReference profile	0
MethodDeclaration Modifier public ReferenceType TargetListener ReturnStatement Cast ReferenceType TargetListener MethodInvocation getModel	0
MethodDeclaration Modifier public paint FormalParameter ReferenceType Graphics g StatementExpression SuperMethodInvocation MemberReference g paint StatementExpression MethodInvocation g BinaryOperation + Literal "v" MethodInvocation ApplicationVersion getVersion BinaryOperation + MethodInvocation MemberReference left getInsets Literal 10 BinaryOperation + MethodInvocation MemberReference top getInsets Literal 18 drawString	1
MethodDeclaration Modifier public set FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent	0
MethodDeclaration Modifier public BasicType int getChildCount FormalParameter ReferenceType Object parent ReturnStatement MethodInvocation MethodInvocation size MemberReference parent	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation head MemberReference w setLineWidth	0
MethodDeclaration Modifier public ReferenceType Object createMultiplicity FormalParameter BasicType int lower FormalParameter BasicType int upper ThrowStatement ClassCreator ReferenceType NotImplementedException	0
MethodDeclaration Modifier public handleResetToDefault IfStatement BinaryOperation == MemberReference scope MemberReference Argo BlockStatement StatementExpression MethodInvocation showBoldNames MethodInvocation MemberReference DiagramAppearance getBoolean setSelected StatementExpression Assignment MemberReference MethodInvocation DiagramAppearance MethodInvocation getInstance = StatementExpression Assignment MemberReference MethodInvocation Configuration MemberReference DiagramAppearance getInteger = StatementExpression MethodInvocation MethodInvocation Configuration MemberReference DiagramAppearance Literal true getBoolean setSelected StatementExpression MethodInvocation defaultShadowWidth MethodInvocation Configuration MemberReference DiagramAppearance Literal 1 getInteger setSelectedIndex	0
MethodDeclaration Modifier public setBoundsImpl FormalParameter Modifier final BasicType int x FormalParameter Modifier final BasicType int y FormalParameter Modifier final BasicType int w FormalParameter Modifier final BasicType int h LocalVariableDeclaration Modifier final BasicType int VariableDeclarator labelWidth MethodInvocation MemberReference width getNameBounds LocalVariableDeclaration Modifier final BasicType int VariableDeclarator labelHeight MethodInvocation MemberReference height getNameBounds LocalVariableDeclaration Modifier final BasicType int VariableDeclarator xs ArrayCreator BasicType int Literal 7 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ys ArrayCreator BasicType int Literal 7 StatementExpression Assignment MemberReference ArraySelector Literal 0 xs MemberReference x = StatementExpression Assignment MemberReference ArraySelector Literal 0 ys MemberReference y = StatementExpression Assignment MemberReference ArraySelector Literal 1 xs BinaryOperation - BinaryOperation + MemberReference x MemberReference labelWidth Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 1 ys MemberReference y = StatementExpression Assignment MemberReference ArraySelector Literal 2 xs BinaryOperation - BinaryOperation + MemberReference x MemberReference labelWidth Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 2 ys BinaryOperation - BinaryOperation + MemberReference y MemberReference labelHeight Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 3 xs BinaryOperation - BinaryOperation + MemberReference x MemberReference w Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 3 ys BinaryOperation - BinaryOperation + MemberReference y MemberReference labelHeight Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 4 xs BinaryOperation - BinaryOperation + MemberReference x MemberReference w Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 4 ys BinaryOperation - BinaryOperation + MemberReference y MemberReference h Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 5 xs MemberReference x = StatementExpression Assignment MemberReference ArraySelector Literal 5 ys BinaryOperation - BinaryOperation + MemberReference y MemberReference h Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 6 xs MemberReference x = StatementExpression Assignment MemberReference ArraySelector Literal 6 ys MemberReference y = LocalVariableDeclaration ReferenceType Polygon VariableDeclarator p ClassCreator ReferenceType Polygon MemberReference xs MemberReference ys Literal 7 StatementExpression SuperMethodInvocation MemberReference p setPolygon StatementExpression MethodInvocation Literal true setFilled StatementExpression MethodInvocation Literal 0 setLineWidth	0
MethodDeclaration Modifier private recursiveAdd FormalParameter ReferenceType MenuElement menu FormalParameter ReferenceType Action a IfStatement BinaryOperation instanceof MemberReference a ReferenceType List TypeArgument ? BlockStatement LocalVariableDeclaration ReferenceType JMenu VariableDeclarator m ClassCreator ReferenceType JMenu MemberReference a IfStatement BinaryOperation instanceof MemberReference menu ReferenceType JPopupMenu BlockStatement StatementExpression Cast ReferenceType JPopupMenu MemberReference menu IfStatement BinaryOperation instanceof MemberReference menu ReferenceType JMenu BlockStatement StatementExpression Cast ReferenceType JMenu MemberReference menu ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator subAction Cast ReferenceType List TypeArgument ReferenceType Action MemberReference a BlockStatement StatementExpression MethodInvocation MemberReference m MemberReference subAction recursiveAdd BlockStatement IfStatement BinaryOperation instanceof MemberReference menu ReferenceType JPopupMenu BlockStatement StatementExpression Cast ReferenceType JPopupMenu MemberReference menu IfStatement BinaryOperation instanceof MemberReference menu ReferenceType JMenu BlockStatement StatementExpression Cast ReferenceType JMenu MemberReference menu	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MemberReference dm LocalVariableDeclaration ReferenceType String VariableDeclarator designMaterialName MethodInvocation Model MethodInvocation MemberReference classifier getName getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference designMaterialName Literal null BinaryOperation == MethodInvocation designMaterialName length Literal 0 BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator elementImports MethodInvocation Model MethodInvocation MemberReference classifier getElementImports2 getFacade IfStatement BinaryOperation == MemberReference elementImports Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation elementImports iterator MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator imp MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator pack MethodInvocation Model MethodInvocation MemberReference imp getPackage getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator alias MethodInvocation Model MethodInvocation MemberReference imp getAlias getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference alias Literal null BinaryOperation == MethodInvocation alias length Literal 0 BlockStatement StatementExpression Assignment MemberReference alias MemberReference designMaterialName = LocalVariableDeclaration ReferenceType Collection VariableDeclarator siblings MethodInvocation Model MethodInvocation MemberReference pack getOwnedElements getFacade IfStatement BinaryOperation == MemberReference siblings Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Iterator VariableDeclarator elems MethodInvocation siblings iterator WhileStatement MethodInvocation elems hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator eo MethodInvocation elems next LocalVariableDeclaration ReferenceType Object VariableDeclarator me MemberReference eo IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement IfStatement BinaryOperation == MemberReference me MemberReference classifier BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator meName MethodInvocation Model MethodInvocation MemberReference me getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference meName Literal null MethodInvocation meName Literal "" equals BlockStatement ContinueStatement IfStatement MethodInvocation meName MemberReference alias equals BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier private static ReferenceType String getActionDefaultName FormalParameter ReferenceType AbstractAction action ReturnStatement Cast ReferenceType String MethodInvocation action MemberReference AbstractAction NAME getValue	0
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType SelectionActionState This	0
MethodDeclaration Modifier public deleteCollection FormalParameter ReferenceType Collection col LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation it next delete getUmlFactory	0
MethodDeclaration Modifier public ReferenceType SimpleState FormalParameter ReferenceType Object compositeState IfStatement BinaryOperation instanceof MemberReference compositeState ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType SimpleState VariableDeclarator state MethodInvocation StatementExpression MethodInvocation state Cast ReferenceType CompositeState MemberReference compositeState setContainer ReturnStatement MemberReference state ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent e StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation getSelectedIndex getList Literal - 1 setEnabled	0
MethodDeclaration Modifier public BasicType boolean isACallEvent FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType CallEvent	0
MethodDeclaration Modifier public Annotation Override startChain StatementExpression Assignment MemberReference startChain Literal true =	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement MethodInvocation ! isEnabled BlockStatement ReturnStatement StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation Model MethodInvocation MemberReference target getInnerContainingModel getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference target MemberReference model getStateMachinesHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator event MethodInvocation MemberReference ns createEvent StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference event getStateMachinesHelper StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference event setTarget getInstance	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType int getEventEndRange ReturnStatement TernaryExpression BinaryOperation == MethodInvocation Literal 0 MemberReference ARGO_EVENT_END BinaryOperation + MethodInvocation Literal 99	1
MethodDeclaration Modifier public modelElementAdded FormalParameter ReferenceType Object element IfStatement BinaryOperation == MemberReference treeModel Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation treeModel MemberReference element modelElementAdded	1
MethodDeclaration Modifier public BasicType int getColumnCount ReturnStatement Literal 2	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb IfStatement BinaryOperation != MemberReference attributes Literal null BlockStatement StatementExpression MethodInvocation attributes MemberReference sb ToSource StatementExpression This MethodInvocation MemberReference sb NewLine	1
MethodDeclaration ReferenceType DiagramMemberFilePersister ReturnStatement MemberReference diagramMemberFilePersister	0
MethodDeclaration Modifier public paintIcon FormalParameter ReferenceType Component c FormalParameter ReferenceType Graphics g FormalParameter BasicType int x FormalParameter BasicType int y IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigCompartmentBox BlockStatement LocalVariableDeclaration Modifier final ReferenceType FigCompartment VariableDeclarator fc Cast ReferenceType FigCompartmentBox MemberReference fig IfStatement BinaryOperation == MemberReference fc Literal null BlockStatement ReturnStatement IfStatement MethodInvocation ! fc isVisible BlockStatement StatementExpression Assignment MemberReference fig Literal null = ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator fr MethodInvocation fc getBounds LocalVariableDeclaration BasicType int VariableDeclarator left BinaryOperation + MemberReference fr x Literal 10 LocalVariableDeclaration BasicType int VariableDeclarator height BinaryOperation - BinaryOperation + MemberReference fr y MemberReference fr height Literal 7 LocalVariableDeclaration BasicType int VariableDeclarator right BinaryOperation - BinaryOperation + MemberReference fr x MemberReference fr width Literal 10 StatementExpression MethodInvocation g MemberReference Color red setColor LocalVariableDeclaration BasicType int VariableDeclarator i MemberReference left WhileStatement Literal true BlockStatement StatementExpression MethodInvocation g MemberReference i MemberReference height BinaryOperation + MemberReference i MemberReference WAVE_LENGTH BinaryOperation + MemberReference height MemberReference WAVE_HEIGHT drawLine StatementExpression Assignment MemberReference i MemberReference WAVE_LENGTH += IfStatement BinaryOperation >= MemberReference i MemberReference right BlockStatement BreakStatement StatementExpression MethodInvocation g MemberReference i BinaryOperation + MemberReference height MemberReference WAVE_HEIGHT BinaryOperation + MemberReference i MemberReference WAVE_LENGTH MemberReference height drawLine StatementExpression Assignment MemberReference i MemberReference WAVE_LENGTH += IfStatement BinaryOperation >= MemberReference i MemberReference right BlockStatement BreakStatement StatementExpression MethodInvocation g MemberReference i MemberReference height BinaryOperation + MemberReference i MemberReference WAVE_LENGTH BinaryOperation + MemberReference height BinaryOperation / MemberReference WAVE_HEIGHT Literal 2 drawLine StatementExpression Assignment MemberReference i MemberReference WAVE_LENGTH += IfStatement BinaryOperation >= MemberReference i MemberReference right BlockStatement BreakStatement StatementExpression MethodInvocation g MemberReference i BinaryOperation + MemberReference height BinaryOperation / MemberReference WAVE_HEIGHT Literal 2 BinaryOperation + MemberReference i MemberReference WAVE_LENGTH MemberReference height drawLine StatementExpression Assignment MemberReference i MemberReference WAVE_LENGTH += IfStatement BinaryOperation >= MemberReference i MemberReference right BlockStatement BreakStatement StatementExpression Assignment MemberReference fig Literal null =	1
MethodDeclaration Modifier public ReferenceType UmlHelperEUMLImpl getUmlHelper IfStatement BinaryOperation == MemberReference theUmlHelper Literal null BlockStatement StatementExpression Assignment MemberReference theUmlHelper ClassCreator ReferenceType UmlHelperEUMLImpl This = ReturnStatement MemberReference theUmlHelper	0
MethodDeclaration Modifier public BasicType double getAngle ReturnStatement BinaryOperation / BinaryOperation * MemberReference angle Literal 180 MemberReference Math PI	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation evt getSource MemberReference namespace BinaryOperation instanceof MemberReference evt ReferenceType DeleteInstanceEvent Literal MethodInvocation MethodInvocation evt getPropertyName equals "remove" BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference namespace Literal "remove" removeModelEventListener getPump IfStatement BinaryOperation != MethodInvocation getProject Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation This moveToTrash getProject	1
MethodDeclaration Modifier private BasicType int countParameters FormalParameter ReferenceType Object bf LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation Model MethodInvocation MemberReference bf getParameters getFacade BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference parameter isReturn getFacade BlockStatement StatementExpression MemberReference ++ count ReturnStatement MemberReference count	0
MethodDeclaration Modifier public ReferenceType Object execute StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference objectToRemove getCollaborationsHelper ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType StubState FormalParameter ReferenceType Object compositeState IfStatement BinaryOperation instanceof MemberReference compositeState ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType StubState VariableDeclarator state MethodInvocation StatementExpression MethodInvocation state Literal "" setReferenceState StatementExpression MethodInvocation state Cast ReferenceType CompositeState MemberReference compositeState setContainer ReturnStatement MemberReference state ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a	0
MethodDeclaration Modifier protected buildModelList IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getBehavioralFeature getFacade addElement	0
MethodDeclaration Modifier public setAnnotatedElements FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection elems IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference elems ReferenceType List BlockStatement StatementExpression MethodInvocation CollectionHelper Cast ReferenceType MemberReference handle MemberReference elems update ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString IfStatement BinaryOperation != MethodInvocation getName Literal null BlockStatement ReturnStatement MethodInvocation getName BlockStatement ReturnStatement SuperMethodInvocation toString	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement toString	0
MethodDeclaration Modifier public addActionListener FormalParameter ReferenceType ActionListener l StatementExpression MethodInvocation panel MemberReference l addActionListener	1
MethodDeclaration Modifier protected Annotation Override BasicType boolean isReverseEdge FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index MemberReference BOTTOM BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public removeRule FormalParameter ReferenceType PerspectiveRule rule StatementExpression MethodInvocation rules MemberReference rule remove	0
MethodDeclaration Modifier private BasicType boolean isValidDrag FormalParameter ReferenceType TreePath destinationPath FormalParameter ReferenceType Transferable tf IfStatement BinaryOperation == MemberReference destinationPath Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "No valid Drag: no destination found." debug ReturnStatement Literal false IfStatement MethodInvocation selectedTreePath MemberReference destinationPath isDescendant BlockStatement StatementExpression MethodInvocation LOG Literal "No valid Drag: move to descendent." debug ReturnStatement Literal false IfStatement MethodInvocation ! tf MemberReference TransferableModelElements UML_COLLECTION_FLAVOR isDataFlavorSupported BlockStatement StatementExpression MethodInvocation LOG Literal "No valid Drag: flavor not supported." debug ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator dest Cast ReferenceType DefaultMutableTreeNode MethodInvocation destinationPath getLastPathComponent IfStatement MethodInvocation ! Model MethodInvocation MemberReference dest isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "No valid Drag: not a namespace." debug ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference dest isReadOnly getModelManagementHelper BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "No valid Drag: " Literal "this is not an editable UML element (profile?)." debug ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference dest isADataType getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "No valid Drag: destination is a DataType." debug ReturnStatement Literal false TryStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator transfers Cast ReferenceType Collection MethodInvocation tf MemberReference TransferableModelElements UML_COLLECTION_FLAVOR getTransferData ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference transfers BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference element isAUMLElement getFacade BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference element isReadOnly getModelManagementHelper BlockStatement IfStatement BinaryOperation && BinaryOperation && MethodInvocation Model MethodInvocation MemberReference dest isAModelElement getFacade MethodInvocation Model MethodInvocation MemberReference element isANamespace getFacade MethodInvocation Model MethodInvocation MemberReference element MemberReference dest isValidNamespace getCoreHelper BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Valid Drag: namespace " MemberReference dest debug ReturnStatement Literal true IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAFeature getFacade MethodInvocation Model MethodInvocation MemberReference dest isAClassifier getFacade BlockStatement ReturnStatement Literal true IfStatement BinaryOperation instanceof MemberReference element ReferenceType Relocatable BlockStatement LocalVariableDeclaration ReferenceType Relocatable VariableDeclarator d Cast ReferenceType Relocatable MemberReference element IfStatement MethodInvocation d MemberReference dest isRelocationAllowed BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Valid Drag: diagram " MemberReference dest debug ReturnStatement Literal true CatchClause CatchClauseParameter UnsupportedFlavorException e StatementExpression MethodInvocation LOG MemberReference e debug CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG MemberReference e debug StatementExpression MethodInvocation LOG Literal "No valid Drag: not a valid namespace." debug ReturnStatement Literal false	1
MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference description MemberReference oldDescription =	0
MethodDeclaration Modifier public vetoableChange FormalParameter ReferenceType PropertyChangeEvent pce StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation invokeLater	1
MethodDeclaration Modifier public createRootClassDiagram StatementExpression MethodInvocation Literal null Literal "" selectClassDiagram	0
MethodDeclaration Modifier public removeUpdate FormalParameter ReferenceType DocumentEvent e StatementExpression MethodInvocation MemberReference e	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier public BasicType boolean isDataFlavorSupported FormalParameter ReferenceType DataFlavor dataFlavor ReturnStatement MethodInvocation dataFlavor MemberReference UML_COLLECTION_FLAVOR match	0
MethodDeclaration Modifier public ReferenceType ConcurrencyKindEUMLImpl getConcurrencyKind IfStatement BinaryOperation == MemberReference theConcurrencyKind Literal null BlockStatement StatementExpression Assignment MemberReference theConcurrencyKind ClassCreator ReferenceType ConcurrencyKindEUMLImpl = ReturnStatement MemberReference theConcurrencyKind	0
MethodDeclaration Modifier public targetChanged StatementExpression Assignment MemberReference Literal 0 =	0
MethodDeclaration Modifier public BasicType int getMinX StatementExpression MethodInvocation LOG Literal "getMinX = 0" debug ReturnStatement Literal 0	0
MethodDeclaration Modifier public ReferenceType Object getMultiplicity FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement LocalVariableDeclaration ReferenceType StructuralFeature VariableDeclarator sf Cast ReferenceType StructuralFeature MemberReference handle ReturnStatement MethodInvocation sf getMultiplicity IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator td Cast ReferenceType MemberReference handle ReturnStatement MethodInvocation td getMultiplicity IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator cr Cast ReferenceType ClassifierRole MemberReference handle ReturnStatement MethodInvocation cr getMultiplicity IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator ae Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement MethodInvocation ae getMultiplicity IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationRole BlockStatement LocalVariableDeclaration ReferenceType AssociationRole VariableDeclarator ar Cast ReferenceType AssociationRole MemberReference handle ReturnStatement MethodInvocation ar getMultiplicity CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public ReferenceType AbstractAction getActionInstance ReturnStatement This MemberReference	0
MethodDeclaration Modifier public updateFields StatementExpression Assignment MemberReference activeUpdateModele Literal false = LocalVariableDeclaration ReferenceType String VariableDeclarator oldText MethodInvocation curBody getText LocalVariableDeclaration ReferenceType String VariableDeclarator newTabText Cast ReferenceType String MethodInvocation MethodInvocation getValue getModel LocalVariableDeclaration ReferenceType String VariableDeclarator newText Literal "" IfStatement BinaryOperation != MemberReference newTabText Literal null BlockStatement StatementExpression Assignment MemberReference newText MemberReference ArraySelector BinaryOperation * Literal 2 MemberReference currentText newTabText = IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference oldText Literal null BinaryOperation == MemberReference newText Literal null MethodInvocation ! oldText MemberReference newText equals BlockStatement IfStatement BinaryOperation != MemberReference oldText MemberReference newText BlockStatement StatementExpression MethodInvocation curBody MemberReference newText setText StatementExpression Assignment MemberReference oldText MethodInvocation curLanguage getText = StatementExpression Assignment MemberReference newText Literal "" = IfStatement BinaryOperation != MemberReference newTabText Literal null BlockStatement StatementExpression Assignment MemberReference newText MemberReference ArraySelector BinaryOperation + BinaryOperation * Literal 2 MemberReference currentText Literal 1 newTabText = IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference oldText Literal null BinaryOperation == MemberReference newText Literal null MethodInvocation ! oldText MemberReference newText equals BlockStatement IfStatement BinaryOperation != MemberReference oldText MemberReference newText BlockStatement StatementExpression MethodInvocation curLanguage MemberReference newText setText StatementExpression Assignment MemberReference activeUpdateModele Literal true =	1
MethodDeclaration Modifier public static ReferenceType List TypeArgument ReferenceType File getList FormalParameter ReferenceType File file FormalParameter BasicType boolean recurse FormalParameter ReferenceType SuffixFilter filters FormalParameter ReferenceType ProgressMonitor monitor IfStatement BinaryOperation == MemberReference file Literal null BlockStatement ReturnStatement MethodInvocation Collections emptyList LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType File VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType File LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType File VariableDeclarator toDoDirectories ClassCreator ReferenceType LinkedList TypeArgument ReferenceType File LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType File VariableDeclarator seenDirectories ClassCreator ReferenceType HashSet TypeArgument ReferenceType File StatementExpression MethodInvocation toDoDirectories MemberReference file add WhileStatement MethodInvocation ! toDoDirectories isEmpty BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference monitor Literal null MethodInvocation monitor isCanceled BlockStatement ReturnStatement MethodInvocation Collections emptyList LocalVariableDeclaration ReferenceType File VariableDeclarator curDir MethodInvocation toDoDirectories Literal 0 remove IfStatement MethodInvocation ! curDir isDirectory BlockStatement StatementExpression MethodInvocation results MemberReference curDir add ContinueStatement LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation curDir listFiles IfStatement BinaryOperation != MemberReference files Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator curFile MethodInvocation curDir listFiles BlockStatement IfStatement MethodInvocation curFile isDirectory BlockStatement IfStatement BinaryOperation && MemberReference recurse MethodInvocation ! seenDirectories MemberReference curFile contains BlockStatement StatementExpression MethodInvocation toDoDirectories MemberReference curFile add StatementExpression MethodInvocation seenDirectories MemberReference curFile add BlockStatement IfStatement MethodInvocation MemberReference curFile MemberReference filters BlockStatement StatementExpression MethodInvocation results MemberReference curFile add ReturnStatement MemberReference results	1
MethodDeclaration Modifier private ReferenceType String generateImportType FormalParameter ReferenceType Object type FormalParameter ReferenceType String exclude LocalVariableDeclaration ReferenceType String VariableDeclarator ret Literal null IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference type isADataType getFacade MethodInvocation JAVA_TYPES MethodInvocation Model MethodInvocation MemberReference type getName getFacade contains BlockStatement ReturnStatement Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference type Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference type getNamespace getFacade Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator p MethodInvocation MethodInvocation Model MethodInvocation MemberReference type getNamespace getFacade getPackageName IfStatement BinaryOperation && MethodInvocation ! p MemberReference exclude equals MethodInvocation ! p MemberReference LANG_PACKAGE equals BlockStatement IfStatement BinaryOperation > MethodInvocation p length Literal 0 BlockStatement StatementExpression Assignment MemberReference ret BinaryOperation + BinaryOperation + MemberReference p Literal '.' MethodInvocation Model MethodInvocation MemberReference type getName getFacade = BlockStatement StatementExpression Assignment MemberReference ret MethodInvocation Model MethodInvocation MemberReference type getName getFacade = ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public handleSettingsTabCancel StatementExpression MethodInvocation	0
MethodDeclaration deletePartition FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType UmlClass getAllClasses FormalParameter ReferenceType Object ns IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType UmlClass VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UmlClass TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference o getAllClasses addAll IfStatement BinaryOperation instanceof MemberReference o ReferenceType UmlClass BlockStatement StatementExpression MethodInvocation result Cast ReferenceType UmlClass MemberReference o add CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected ReferenceType String getIconName ReturnStatement Literal "CallEvent"	0
MethodDeclaration Modifier public ReferenceType List getOutgoings FormalParameter ReferenceType Object handle IfStatement BinaryOperation || MethodInvocation MemberReference handle isAGuard MethodInvocation MemberReference handle isAAction BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference handle getTransition getOutgoings IfStatement MethodInvocation MemberReference handle isAEvent BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator trans MethodInvocation MethodInvocation iterator MemberReference handle getTransitions LocalVariableDeclaration ReferenceType List VariableDeclarator outgoings ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation trans hasNext BlockStatement StatementExpression MethodInvocation outgoings MethodInvocation MethodInvocation trans next getOutgoings addAll ReturnStatement MemberReference outgoings IfStatement MethodInvocation MemberReference handle isAStateVertex BlockStatement ReturnStatement Cast ReferenceType Vertex MemberReference handle IfStatement MethodInvocation MemberReference handle isATransition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle ThrowStatement ClassCreator ReferenceType IllegalArgumentException	1
MethodDeclaration Modifier public ReferenceType Object getElement ReturnStatement ClassReference ReferenceType Element	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getRuleName	0
MethodDeclaration Modifier private parseEvent FeatureNotSupportedException LocalVariableDeclaration BasicType long VariableDeclarator mask Cast BasicType long MemberReference Modifier EventMods IfStatement BinaryOperation != BinaryOperation & Cast BasicType long MemberReference curmods MemberReference mask Cast BasicType long MemberReference Modifier Empty StatementExpression MethodInvocation Literal "Event contains illegal modifiers" ReportError LocalVariableDeclaration ReferenceType EventNode VariableDeclarator node ClassCreator ReferenceType EventNode StatementExpression MethodInvocation typeStack MemberReference Events MethodInvocation MemberReference node add peek IfStatement BinaryOperation > MethodInvocation curAttributes size Literal 0 BlockStatement StatementExpression Assignment MemberReference node attributes MemberReference curAttributes = StatementExpression Assignment MemberReference curAttributes ClassCreator ReferenceType NodeCollection TypeArgument ReferenceType AttributeNode = StatementExpression Assignment MemberReference node modifiers MemberReference curmods = StatementExpression Assignment MemberReference curmods MemberReference Modifier Empty = StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference node type MethodInvocation parseType = IfStatement BinaryOperation != MemberReference curtok id MemberReference TokenID Ident StatementExpression MethodInvocation Literal "Expected event member name." ReportError WhileStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Ident BlockStatement StatementExpression MethodInvocation node.names MethodInvocation parseQualifiedIdentifier add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID LCurly BlockStatement StatementExpression MethodInvocation advance IfStatement BinaryOperation != MemberReference curtok id MemberReference TokenID Ident BlockStatement StatementExpression MethodInvocation Literal "Event accessor requires add or remove clause." ReportError LocalVariableDeclaration ReferenceType String VariableDeclarator curAccessor MethodInvocation strings MemberReference curtok data get StatementExpression MethodInvocation advance IfStatement MethodInvocation curAccessor Literal equals BlockStatement StatementExpression MethodInvocation MemberReference node addBlock parseBlock IfStatement BinaryOperation && BinaryOperation == MemberReference curtok id MemberReference TokenID Ident MethodInvocation strings MethodInvocation Literal "remove" equals MemberReference curtok data get BlockStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference node removeBlock parseBlock BlockStatement StatementExpression MethodInvocation Literal "Event accessor expected remove clause." ReportError IfStatement MethodInvocation curAccessor Literal "remove" equals BlockStatement StatementExpression MethodInvocation MemberReference node removeBlock parseBlock IfStatement BinaryOperation && BinaryOperation == MemberReference curtok id MemberReference TokenID Ident MethodInvocation strings MethodInvocation Literal equals MemberReference curtok data get BlockStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference node addBlock parseBlock BlockStatement StatementExpression MethodInvocation Literal "Event accessor expected add clause." ReportError BlockStatement StatementExpression MethodInvocation Literal "Event accessor requires add or remove clause." ReportError BlockStatement StatementExpression MethodInvocation MemberReference TokenID Semi AssertAndAdvance	1
MethodDeclaration Modifier private static ReferenceType String getExtension FormalParameter ReferenceType String filename LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation filename Literal '.' lastIndexOf IfStatement BinaryOperation && BinaryOperation > MemberReference i Literal 0 BinaryOperation < MemberReference i BinaryOperation - MethodInvocation filename length Literal 1 BlockStatement ReturnStatement MethodInvocation filename MethodInvocation toLowerCase BinaryOperation + MemberReference i Literal 1 substring ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean isShowIcon ReturnStatement MemberReference	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args ImportInterface.ImportException TryStatement StatementExpression MethodInvocation parseFile CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation e printStackTrace CatchClause CatchClauseParameter FeatureNotSupportedException e StatementExpression MethodInvocation e printStackTrace	1
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation Expression MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "++" append	1
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner StatementExpression SuperMethodInvocation MemberReference oldOwner MemberReference newOwner updateListeners IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation Model MethodInvocation MemberReference newOwner getClassifiers getFacade BlockStatement StatementExpression MethodInvocation MemberReference classifier Literal "name" addElementListener	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isATransition getFacade BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference target setTarget StatementExpression SuperMethodInvocation MemberReference e actionPerformed	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb Literal "(" append StatementExpression MethodInvocation Type MemberReference sb ToSource StatementExpression MethodInvocation sb Literal ")" append StatementExpression MethodInvocation Child MemberReference sb ToSource	1
MethodDeclaration register FormalParameter ReferenceType T item FormalParameter ReferenceType String key FormalParameter ReferenceType String subkeys LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType T VariableDeclarator entry MethodInvocation registry MemberReference key get IfStatement BinaryOperation == MemberReference entry Literal null BlockStatement StatementExpression Assignment MemberReference entry ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType T = StatementExpression MethodInvocation registry MemberReference key MemberReference entry put IfStatement BinaryOperation || BinaryOperation == MemberReference subkeys Literal null BinaryOperation < MemberReference subkeys length Literal 1 BlockStatement StatementExpression Assignment MemberReference subkeys ArrayCreator ReferenceType String ArrayInitializer Literal "" = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference subkeys length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator list MethodInvocation entry MemberReference ArraySelector MemberReference i subkeys get IfStatement BinaryOperation == MemberReference list Literal null BlockStatement StatementExpression Assignment MemberReference list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType T = StatementExpression MethodInvocation entry MemberReference ArraySelector MemberReference i subkeys MemberReference list put IfStatement MethodInvocation ! list MemberReference item contains BlockStatement StatementExpression MethodInvocation list MemberReference item add BlockStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Duplicate registration for " MemberReference key Literal ":" MemberReference subkeys Literal " Listener: " MemberReference item debug	1
MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation MethodInvocation doConstruct setValue StatementExpression MethodInvocation threadVar clear StatementExpression MethodInvocation SwingUtilities MemberReference doFinished invokeLater	0
MethodDeclaration Modifier public FormalParameter ReferenceType ActionListener l StatementExpression MethodInvocation panel MemberReference l	1
MethodDeclaration Modifier protected ReferenceType String getProperty IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MethodInvocation getTarget isAOperation getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getSpecification getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public setSqlCodeCreator FormalParameter ReferenceType SqlCodeCreator StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public setClosestPoint FormalParameter ReferenceType Point newPoint ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public BasicType boolean enable IfStatement BinaryOperation >= MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal "2" indexOf getFacade Literal 0 BlockStatement StatementExpression Assignment MemberReference propPanelFactory ClassCreator ReferenceType DeploymentDiagramPropPanelFactory = StatementExpression MethodInvocation PropPanelFactoryManager MemberReference propPanelFactory addPropPanelFactory StatementExpression MethodInvocation DiagramFactory MethodInvocation MemberReference DiagramType Deployment ClassCreator ReferenceType registerDiagramFactory getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getSubmachineStates MethodInvocation MemberReference element contains getFacade	0
MethodDeclaration Modifier private ReferenceType Class TypeArgument ? findClassOnUserClasspath FormalParameter ReferenceType String name FormalParameter BasicType boolean interfacesOnly LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator clazz Literal null TryStatement StatementExpression Assignment MemberReference clazz MethodInvocation ImportClassLoader MethodInvocation MemberReference name loadClass getInstance = CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation LOG Literal "Classpath configuration error" MemberReference e warn CatchClause CatchClauseParameter ClassNotFoundException e ReturnStatement Literal null CatchClause CatchClauseParameter LinkageError e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Linkage error loading found class " MemberReference name MemberReference e warn ReturnStatement Literal null IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference clazz Literal null MemberReference interfacesOnly MethodInvocation ! clazz isInterface BlockStatement ReturnStatement Literal null ReturnStatement MemberReference clazz	1
MethodDeclaration Modifier public Annotation Override BasicType boolean canConnect FormalParameter ReferenceType Object fromP FormalParameter ReferenceType Object toP IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference fromP isAActor getFacade MethodInvocation Model MethodInvocation MemberReference toP isAActor getFacade BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isEnabled ReturnStatement MethodInvocation ! MethodInvocation isEmpty	0
MethodDeclaration Modifier public ReferenceType SendAction LocalVariableDeclaration ReferenceType SendAction VariableDeclarator mySendAction MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference mySendAction ReturnStatement MemberReference mySendAction	0
MethodDeclaration Modifier static protected ReferenceType ImageIcon ReturnStatement MemberReference	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType String s StatementExpression MethodInvocation LOG BinaryOperation + Literal "TabSrc setting src for " MethodInvocation Model MethodInvocation MethodInvocation getTarget getName getFacade debug LocalVariableDeclaration ReferenceType Object VariableDeclarator modelObject MethodInvocation getTarget IfStatement BinaryOperation instanceof MethodInvocation getTarget ReferenceType FigNode BlockStatement StatementExpression Assignment MemberReference modelObject Cast ReferenceType FigNode MethodInvocation getTarget = IfStatement BinaryOperation instanceof MethodInvocation getTarget ReferenceType FigEdge BlockStatement StatementExpression Assignment MemberReference modelObject Cast ReferenceType FigEdge MethodInvocation getTarget = IfStatement BinaryOperation == MemberReference modelObject Literal null BlockStatement ReturnStatement	1
MethodDeclaration ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection getAllPossibleStatemachines FormalParameter ReferenceType Object model FormalParameter ReferenceType Object oSubmachineState ReturnStatement MethodInvocation impl MemberReference model MemberReference oSubmachineState getAllPossibleStatemachines	0
MethodDeclaration Modifier public Annotation Override ReferenceType getHandler FormalParameter ReferenceType HandlerStack stack FormalParameter ReferenceType Object container FormalParameter ReferenceType String uri FormalParameter ReferenceType String localname FormalParameter ReferenceType String qname FormalParameter ReferenceType Attributes attributes SAXException LocalVariableDeclaration ReferenceType String VariableDeclarator href MethodInvocation attributes Literal "href" getValue LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Literal null IfStatement BinaryOperation != MemberReference href Literal null BlockStatement StatementExpression Assignment MemberReference owner MethodInvocation MemberReference href findOwner = IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Found href of " MemberReference href Literal " with no matching element in model" warn ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference container ReferenceType FigGroupHandler BlockStatement LocalVariableDeclaration ReferenceType FigGroup VariableDeclarator group Cast ReferenceType FigGroupHandler MemberReference container IfStatement BinaryOperation && BinaryOperation instanceof MemberReference group ReferenceType FigNode MethodInvocation ! qname Literal "private" equals BlockStatement ReturnStatement Literal null IfStatement BinaryOperation && MethodInvocation qname Literal "private" equals BinaryOperation instanceof MemberReference container ReferenceType Container BlockStatement ReturnStatement ClassCreator ReferenceType PrivateHandler This Cast ReferenceType Container MemberReference container LocalVariableDeclaration ReferenceType VariableDeclarator handler SuperMethodInvocation MemberReference stack MemberReference container MemberReference uri MemberReference localname MemberReference qname MemberReference attributes getHandler IfStatement BinaryOperation instanceof MemberReference handler ReferenceType FigEdgeHandler BlockStatement ReturnStatement ClassCreator ReferenceType org ReferenceType argouml ReferenceType persistence ReferenceType FigEdgeHandler This Cast ReferenceType FigEdgeHandler MemberReference handler ReturnStatement MemberReference handler	1
MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference target getChangeability getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement StatementExpression MethodInvocation Literal null setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getChangeable getChangeableKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetChangeability setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getAddOnly getChangeableKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetChangeability setSelected IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getFrozen getChangeableKind equals BlockStatement StatementExpression MethodInvocation MemberReference ActionSetChangeability FROZEN_COMMAND setSelected BlockStatement StatementExpression MethodInvocation MemberReference ActionSetChangeability setSelected	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType String value StatementExpression MethodInvocation MemberReference handle ArrayCreator ReferenceType String ArrayInitializer MemberReference value setDataValues	0
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getAction getMetaTypes	0
MethodDeclaration Modifier private FormalParameter ReferenceType TargetEvent LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement TryStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners CatchClause CatchClauseParameter RuntimeException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "While calling targetRemoved for " MemberReference Literal " in " MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners Literal " an error is thrown." MemberReference e warn	1
MethodDeclaration Modifier public Annotation Override mouseMoved FormalParameter ReferenceType MouseEvent me StatementExpression MethodInvocation MemberReference me StatementExpression MethodInvocation Globals This curEditor StatementExpression MethodInvocation MemberReference me setUnderMouse LocalVariableDeclaration ReferenceType Fig VariableDeclarator currentFig MethodInvocation getCurrentFig IfStatement BinaryOperation && BinaryOperation != MemberReference currentFig Literal null MethodInvocation Globals getShowFigTips BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tip MethodInvocation currentFig MemberReference me getTipString IfStatement BinaryOperation && BinaryOperation != MemberReference tip Literal null BinaryOperation != MethodInvocation getJComponent Literal null BlockStatement LocalVariableDeclaration ReferenceType JComponent VariableDeclarator c MethodInvocation getJComponent IfStatement BinaryOperation || BinaryOperation == MethodInvocation c getToolTipText Literal null MethodInvocation ! c getToolTipText BlockStatement StatementExpression MethodInvocation c MemberReference tip setToolTipText IfStatement BinaryOperation && BinaryOperation != MethodInvocation getJComponent Literal null BinaryOperation != MethodInvocation MethodInvocation getToolTipText getJComponent Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Literal null setToolTipText getJComponent StatementExpression MethodInvocation _selectionManager MemberReference me mouseMoved StatementExpression MethodInvocation MemberReference me mouseMoved	1
MethodDeclaration Modifier private setPropertyInternal FormalParameter ReferenceType String newValue IfStatement BinaryOperation && MethodInvocation isFiring MethodInvocation ! newValue MethodInvocation getProperty equals BlockStatement StatementExpression MethodInvocation Literal false setFiring StatementExpression MethodInvocation MemberReference newValue setProperty StatementExpression MethodInvocation Model MethodInvocation flushModelEvents getPump StatementExpression MethodInvocation Literal true setFiring	1
MethodDeclaration Modifier public final abstract_declarator_suffix RecognitionException TokenStreamException SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LSQUARE BlockStatement StatementExpression MethodInvocation MemberReference LSQUARE match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID StringLiteral LITERAL__declspec LITERAL___declspec LPAREN LITERAL_const_cast LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void OPERATOR LITERAL_this LITERAL_true LITERAL_false OCTALINT STAR AMPERSAND TILDE PLUS MINUS PLUSPLUS MINUSMINUS LITERAL_sizeof SCOPE LITERAL_dynamic_cast LITERAL_static_cast LITERAL_reinterpret_cast NOT LITERAL_new LITERAL_delete DECIMALINT HEXADECIMALINT CharLiteral FLOATONE FLOATTWO BlockStatement StatementExpression MethodInvocation constant_expression BreakStatement SwitchStatementCase RSQUARE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RSQUARE match BreakStatement SwitchStatementCase LPAREN BlockStatement StatementExpression MethodInvocation MemberReference LPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_typedef LITERAL_enum ID LITERAL_inline LITERAL_extern LITERAL__inline LITERAL___inline LITERAL_virtual LITERAL_explicit LITERAL_friend LITERAL__stdcall LITERAL___stdcall LITERAL__declspec LITERAL___declspec LPAREN LITERAL_typename LITERAL_auto LITERAL_register LITERAL_static LITERAL_mutable LITERAL_const LITERAL_const_cast LITERAL_volatile LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void LITERAL_class LITERAL_struct LITERAL_union OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE ELLIPSIS SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation parameter_list BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RPAREN match StatementExpression MethodInvocation cv_qualifier_seq BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_throw BlockStatement StatementExpression MethodInvocation exception_specification BreakStatement SwitchStatementCase GREATERTHAN ASSIGNEQUAL COMMA LPAREN RPAREN LSQUARE ELLIPSIS BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public BasicType boolean isAArgument FormalParameter ReferenceType Object modelElement ReturnStatement BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType InputPin BinaryOperation instanceof MemberReference modelElement ReferenceType OutputPin	1
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType Object getFallbackModel LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator profile MethodInvocation Model MethodInvocation getModelManagementFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference profile Literal Java profile" setName getCoreHelper StatementExpression MethodInvocation result MemberReference profile add ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType TypeExpression createTypeExpression FormalParameter ReferenceType String language FormalParameter ReferenceType String body LocalVariableDeclaration ReferenceType TypeExpression VariableDeclarator myTypeExpression MethodInvocation modelImpl MethodInvocation getDataTypes MethodInvocation MethodInvocation MemberReference language MemberReference body createTypeExpression getUmlPackage StatementExpression SuperMethodInvocation MemberReference myTypeExpression ReturnStatement MemberReference myTypeExpression	0
MethodDeclaration Modifier protected ReferenceType Action getActionUninterpretedAction IfStatement BinaryOperation == MemberReference actionUninterpretedAction Literal null BlockStatement StatementExpression Assignment MemberReference actionUninterpretedAction MethodInvocation = ReturnStatement MemberReference actionUninterpretedAction	0
MethodDeclaration Modifier public BasicType boolean enable IfStatement BinaryOperation >= MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal "2" indexOf getFacade Literal 0 BlockStatement StatementExpression Assignment MemberReference propPanelFactory ClassCreator ReferenceType ActivityDiagramPropPanelFactory = StatementExpression MethodInvocation PropPanelFactoryManager MemberReference propPanelFactory addPropPanelFactory StatementExpression MethodInvocation DiagramFactory MethodInvocation MemberReference DiagramType Activity ClassCreator ReferenceType registerDiagramFactory getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter BasicType boolean overwrite FormalParameter BasicType boolean saveNewFile StatementExpression MethodInvocation MemberReference overwrite MemberReference saveNewFile Literal false	0
MethodDeclaration Modifier public removeTargetFlow FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object flow TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference flow ReferenceType Flow BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference flow	0
MethodDeclaration Modifier public ReferenceType Collection getStereotypes FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection TryStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isATransition getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType URL url ReturnStatement Literal false	0
MethodDeclaration Modifier public final actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation iterator getInstance WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation i next StatementExpression MethodInvocation MemberReference t toggleValueOfTarget	0
MethodDeclaration Modifier public ReferenceType Object getNamespace FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Element MemberReference handle IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement ReturnStatement MemberReference o IfStatement BinaryOperation instanceof MemberReference handle ReferenceType DynamicEObjectImpl BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator c Cast ReferenceType DynamicEObjectImpl MemberReference handle IfStatement BinaryOperation != MemberReference c Literal null BlockStatement ReturnStatement MethodInvocation c eContainer ReturnStatement Literal null	0
MethodDeclaration deleteCollaboration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Collaboration BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType CheckBoxData getCheckboxes ReturnStatement MethodInvocation Collections MemberReference checkboxes	0
MethodDeclaration Modifier public ReferenceType Object getType FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Connector BlockStatement ReturnStatement Cast ReferenceType Connector MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TypedElement BlockStatement ReturnStatement Cast ReferenceType TypedElement MemberReference handle ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal most be a TypedElement or a Connector." Literal "Got " MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Override propertyChange FormalParameter ReferenceType PropertyChangeEvent pce StatementExpression SuperMethodInvocation MemberReference pce propertyChange IfStatement Literal MethodInvocation MethodInvocation pce getPropertyName equals "isAbstract" BlockStatement StatementExpression MethodInvocation renderingChanged	0
MethodDeclaration deleteSynchState FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType SynchState BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public ReferenceType String getString ReturnStatement MemberReference theString	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb IfStatement BinaryOperation != MemberReference attributes Literal null BlockStatement StatementExpression MethodInvocation attributes MemberReference sb ToSource StatementExpression This MethodInvocation MemberReference sb NewLine	1
MethodDeclaration Modifier public BasicType int getOffset ReturnStatement MemberReference offset	0
MethodDeclaration Modifier public ReferenceType String getResultName ReturnStatement MemberReference resultName	0
MethodDeclaration Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType Token parse LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation Literal ';' Literal '<' Literal '>' MemberReference desc LocalVariableDeclaration ReferenceType String VariableDeclarator classTypeSignature MethodInvocation desc Literal 0 BinaryOperation + MemberReference index Literal 1 substring StatementExpression Assignment MemberReference desc MethodInvocation desc BinaryOperation + MemberReference index Literal 1 substring = LocalVariableDeclaration ReferenceType Matcher VariableDeclarator m MethodInvocation Pattern MethodInvocation MemberReference classTypeSignature matcher Literal compile IfStatement MethodInvocation m matches BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator packageSpecifier MethodInvocation m Literal 1 group LocalVariableDeclaration ReferenceType String VariableDeclarator identifier MethodInvocation m Literal 2 group LocalVariableDeclaration ReferenceType String VariableDeclarator other MethodInvocation m Literal 3 group LocalVariableDeclaration ReferenceType String VariableDeclarator arguments Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator Literal "" IfStatement BinaryOperation && BinaryOperation != MemberReference other Literal null BinaryOperation > MethodInvocation other length Literal 0 BlockStatement IfStatement BinaryOperation == MethodInvocation other Literal 0 charAt Literal '<' BlockStatement StatementExpression Assignment MemberReference arguments MethodInvocation other Literal 0 BinaryOperation + MethodInvocation MemberReference other Literal '<' Literal '>' Literal 1 substring = StatementExpression Assignment MemberReference MethodInvocation other MethodInvocation arguments length substring = IfStatement BinaryOperation && BinaryOperation != MemberReference packageSpecifier Literal null BinaryOperation > MethodInvocation packageSpecifier length Literal 0 BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token PACKAGE MethodInvocation packageSpecifier Literal "/" Literal "." replaceAll add LocalVariableDeclaration ReferenceType SimpleClassTypeSignatureLexer VariableDeclarator sl ClassCreator ReferenceType SimpleClassTypeSignatureLexer BinaryOperation + MemberReference identifier MemberReference arguments StatementExpression MethodInvocation result MethodInvocation sl parse addAll WhileStatement BinaryOperation > MethodInvocation length Literal 0 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Literal 1 substring = StatementExpression Assignment MemberReference index MethodInvocation Literal '.' Literal '<' Literal '>' MemberReference = LocalVariableDeclaration ReferenceType String VariableDeclarator suffix MethodInvocation Literal 0 MemberReference index substring StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token Literal "." add StatementExpression MethodInvocation result ClassCreator MethodInvocation parse ReferenceType SimpleClassTypeSignatureLexer MemberReference suffix addAll StatementExpression Assignment MemberReference MethodInvocation MemberReference index substring = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public static ReferenceType ActionAddOperation getTargetFollower IfStatement BinaryOperation == MemberReference targetFollower Literal null BlockStatement StatementExpression Assignment MemberReference targetFollower ClassCreator ReferenceType ActionAddOperation = StatementExpression MethodInvocation TargetManager MethodInvocation ClassCreator ReferenceType TargetListener MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation setTarget MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation setTarget MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation setTarget MethodDeclaration Modifier private setTarget StatementExpression MethodInvocation targetFollower MethodInvocation targetFollower shouldBeEnabled setEnabled addTargetListener getInstance StatementExpression MethodInvocation targetFollower MethodInvocation targetFollower shouldBeEnabled setEnabled ReturnStatement MemberReference targetFollower	1
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_31 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 1152921501384777632L Literal - 4593671619917905901L Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public FormalParameter ReferenceType Predicate p StatementExpression Assignment MemberReference predicate MemberReference p =	0
MethodDeclaration Modifier public final BasicType double getDouble FormalParameter ReferenceType ConfigurationKey key FormalParameter BasicType double defaultValue StatementExpression MethodInvocation loadIfNecessary TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MethodInvocation key getKey MethodInvocation Double MemberReference defaultValue toString getValue ReturnStatement MethodInvocation Double MemberReference s parseDouble CatchClause CatchClauseParameter NumberFormatException nfe ReturnStatement MemberReference defaultValue	0
MethodDeclaration Modifier protected BasicType boolean determineFigNodes LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "The FigEdge has no owner" error ReturnStatement Literal false IfStatement BinaryOperation == MethodInvocation getLayer Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "The FigEdge has no error ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator newSource MethodInvocation getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator newDest MethodInvocation getDestination LocalVariableDeclaration ReferenceType Fig VariableDeclarator currentSourceFig MethodInvocation getSourceFigNode LocalVariableDeclaration ReferenceType Fig VariableDeclarator currentDestFig MethodInvocation getDestFigNode LocalVariableDeclaration ReferenceType Object VariableDeclarator currentSource Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator currentDestination Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference currentSourceFig Literal null BinaryOperation != MemberReference currentDestFig Literal null BlockStatement StatementExpression Assignment MemberReference currentSource MethodInvocation currentSourceFig getOwner = StatementExpression Assignment MemberReference currentDestination MethodInvocation currentDestFig getOwner = IfStatement BinaryOperation || BinaryOperation != MemberReference newSource MemberReference currentSource BinaryOperation != MemberReference newDest MemberReference currentDestination BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator newSourceFig MethodInvocation MemberReference newSource getNoEdgePresentationFor LocalVariableDeclaration ReferenceType Fig VariableDeclarator newDestFig MethodInvocation MemberReference newDest getNoEdgePresentationFor IfStatement BinaryOperation != MemberReference newSourceFig MemberReference currentSourceFig BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigNode MemberReference newSourceFig setSourceFigNode StatementExpression MethodInvocation MemberReference newSourceFig setSourcePortFig IfStatement BinaryOperation != MemberReference newDestFig MemberReference currentDestFig BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigNode MemberReference newDestFig setDestFigNode StatementExpression MethodInvocation MemberReference newDestFig setDestPortFig StatementExpression Cast ReferenceType FigNode MemberReference newSourceFig StatementExpression Cast ReferenceType FigNode MemberReference newDestFig StatementExpression MethodInvocation calcBounds IfStatement BinaryOperation == MemberReference newSourceFig MemberReference newDestFig BlockStatement StatementExpression MethodInvocation layoutThisToSelf ReturnStatement Literal true	0
MethodDeclaration Modifier private StatementExpression MethodInvocation ClassCreator ReferenceType FigPoly MemberReference LINE_COLOR MemberReference SOLID_FILL_COLOR setFigPoly LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 125 Literal 130 Literal 135 Literal 125 LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 45 Literal 40 Literal 45 Literal 45 LocalVariableDeclaration ReferenceType Polygon VariableDeclarator polygon ClassCreator ReferenceType Polygon MemberReference MemberReference Literal 4 StatementExpression MethodInvocation MethodInvocation MemberReference polygon setPolygon getFigPoly StatementExpression MethodInvocation MethodInvocation Literal false setFilled getFigPoly StatementExpression MethodInvocation MethodInvocation getFigPoly addFig StatementExpression MethodInvocation MethodInvocation getBounds setBounds StatementExpression MethodInvocation	0
MethodDeclaration Modifier private initModulesActions ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator action MemberReference moduleCreateDiagramActions BlockStatement StatementExpression MethodInvocation createDiagramToolbar MemberReference action add	0
MethodDeclaration Modifier public BasicType int getUpper FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAAssociationEnd BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator upper Literal 0 LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator end Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation != MethodInvocation end getMultiplicity Literal null BlockStatement StatementExpression Assignment MemberReference upper MethodInvocation MethodInvocation end getMultiplicity getUpper = ReturnStatement MemberReference upper IfStatement MethodInvocation MemberReference handle isAMultiplicity BlockStatement LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator up Cast ReferenceType Multiplicity MemberReference handle LocalVariableDeclaration ReferenceType List VariableDeclarator ranges ClassCreator ReferenceType ArrayList MethodInvocation up getRange ReturnStatement MethodInvocation MethodInvocation ranges BinaryOperation - MethodInvocation ranges size Literal 1 get getUpper IfStatement MethodInvocation MemberReference handle isAMultiplicityRange BlockStatement LocalVariableDeclaration ReferenceType MultiplicityRange VariableDeclarator up Cast ReferenceType MultiplicityRange MemberReference handle ReturnStatement MethodInvocation up getUpper CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e StatementExpression MethodInvocation MemberReference handle illegalArgument ReturnStatement Literal 0	1
MethodDeclaration Modifier public targetAdded FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation setTarget	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType DocumentEvent p1 StatementExpression MethodInvocation model MethodInvocation getText setLanguage	0
MethodDeclaration Modifier private ReferenceType Object ReturnStatement ArrayCreator ReferenceType Object ArrayInitializer MemberReference vt MemberReference val MemberReference	0
MethodDeclaration Modifier protected removeElementListener FormalParameter ReferenceType Object element StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference element Literal null remove StatementExpression MethodInvocation Model MethodInvocation This MemberReference element removeModelEventListener getPump	0
MethodDeclaration Modifier private ReferenceType String generateGeneralization FormalParameter ReferenceType Collection generalizations IfStatement BinaryOperation == MemberReference generalizations Literal null BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 80 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator genEnum MethodInvocation generalizations iterator WhileStatement MethodInvocation genEnum hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator generalization MethodInvocation genEnum next LocalVariableDeclaration ReferenceType Object VariableDeclarator ge MethodInvocation MethodInvocation MemberReference generalization getGeneral getFacade IfStatement BinaryOperation != MemberReference ge Literal null BlockStatement IfStatement BinaryOperation > MethodInvocation sb length Literal 0 StatementExpression MethodInvocation sb Literal ", " append LocalVariableDeclaration ReferenceType String VariableDeclarator visTag MethodInvocation MethodInvocation MemberReference generalization MemberReference TV_NAME_INHERITANCE_VISIBILITY getTaggedValueValue MethodInvocation trim getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference visTag Literal null MethodInvocation ! visTag Literal "" equals BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal " " append MemberReference visTag append BlockStatement IfStatement MethodInvocation MethodInvocation MemberReference ge isAInterface getFacade BlockStatement StatementExpression MethodInvocation sb Literal "virtual public " append BlockStatement StatementExpression MethodInvocation sb Literal "public " append StatementExpression MethodInvocation sb MethodInvocation MemberReference ge generateNameWithPkgSelection append StatementExpression MethodInvocation MemberReference ge Literal false addDependency ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier private BasicType boolean isSystemClipBoardEmpty LocalVariableDeclaration BasicType boolean VariableDeclarator hasContents Literal false LocalVariableDeclaration ReferenceType Transferable VariableDeclarator content MethodInvocation Toolkit MethodInvocation getSystemClipboard MethodInvocation Literal null getContents getDefaultToolkit LocalVariableDeclaration ReferenceType DataFlavor VariableDeclarator flavors MethodInvocation content getTransferDataFlavors TryStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference flavors length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MethodInvocation content MemberReference ArraySelector MemberReference i flavors getTransferData Literal null BlockStatement StatementExpression Assignment MemberReference hasContents Literal true = BreakStatement CatchClause CatchClauseParameter UnsupportedFlavorException ignorable CatchClause CatchClauseParameter IOException ignorable ReturnStatement MemberReference ! hasContents	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType boolean IfStatement BinaryOperation instanceof MemberReference handle ReferenceType CompositeState BlockStatement StatementExpression Cast ReferenceType CompositeState MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public static ReferenceType String getStableVersion ReturnStatement MemberReference stableVersion	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference defaultTypeName getDefaultType	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Critic getCritics IfStatement BinaryOperation == MemberReference critics Literal null BlockStatement StatementExpression MethodInvocation ReturnStatement SuperMethodInvocation getCritics	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType ElementImport VariableDeclarator elementImport MethodInvocation StatementExpression MethodInvocation elementImport Cast ReferenceType Namespace MemberReference pack setImportingNamespace StatementExpression MethodInvocation elementImport Cast ReferenceType PackageableElement MemberReference me setImportedElement StatementExpression MethodInvocation MethodInvocation MemberReference elementImport add getParams	0
MethodDeclaration Modifier protected ReferenceType Action getActionChangeEvent IfStatement BinaryOperation == MemberReference actionChangeEvent Literal null BlockStatement StatementExpression Assignment MemberReference actionChangeEvent ClassCreator ReferenceType = ReturnStatement MemberReference actionChangeEvent	0
MethodDeclaration Modifier public addAllElements FormalParameter ReferenceType Iterator TypeArgument ReferenceType T iter WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation MethodInvocation iter next add	0
MethodDeclaration Modifier public ReferenceType List getActions FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ActionSequence BlockStatement ReturnStatement Cast ReferenceType ActionSequence MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentList	0
MethodDeclaration Modifier public setAggregation2 FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType Object aggregationKind IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Property BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of Property" IfStatement BinaryOperation instanceof MemberReference aggregationKind ReferenceType AggregationKind BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "aggregationKind must be instance of AggregationKind " MemberReference aggregationKind Literal " recieved" LocalVariableDeclaration Modifier final ReferenceType Property VariableDeclarator property Cast ReferenceType Property MemberReference handle LocalVariableDeclaration Modifier final ReferenceType AggregationKind VariableDeclarator aggregation Cast ReferenceType AggregationKind MemberReference aggregationKind LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression MethodInvocation property MemberReference aggregation setAggregation IfStatement BinaryOperation || BinaryOperation == MemberReference aggregation MemberReference AggregationKind COMPOSITE_LITERAL BinaryOperation == MemberReference aggregation MemberReference AggregationKind SHARED_LITERAL BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Property VariableDeclarator end MethodInvocation property MethodInvocation getMemberEnds getAssociation BlockStatement IfStatement MethodInvocation ! end MemberReference property equals BlockStatement StatementExpression MethodInvocation end MemberReference AggregationKind NONE_LITERAL setAggregation StatementExpression MethodInvocation editingDomain MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Set the aggregation to the association end #" MemberReference aggregationKind MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier private ReferenceType NodeCollection TypeArgument ReferenceType ParamDeclNode parseParamList FormalParameter BasicType int openToken FormalParameter BasicType int closeToken FeatureNotSupportedException StatementExpression MethodInvocation MemberReference openToken AssertAndAdvance IfStatement BinaryOperation == MemberReference curtok id MemberReference closeToken BlockStatement StatementExpression MethodInvocation advance ReturnStatement Literal null LocalVariableDeclaration ReferenceType NodeCollection TypeArgument ReferenceType ParamDeclNode VariableDeclarator result ClassCreator ReferenceType NodeCollection TypeArgument ReferenceType ParamDeclNode LocalVariableDeclaration BasicType boolean VariableDeclarator isParams Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator hasComma Literal false DoStatement BinaryOperation && MemberReference ! isParams MemberReference hasComma BlockStatement LocalVariableDeclaration ReferenceType ParamDeclNode VariableDeclarator node ClassCreator ReferenceType ParamDeclNode StatementExpression MethodInvocation result MemberReference node add StatementExpression Assignment MemberReference isParams Literal false = StatementExpression MethodInvocation Literal false parsePossibleAttributes IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Ref BlockStatement StatementExpression Assignment MemberReference node modifiers MemberReference Modifier Ref |= StatementExpression MethodInvocation advance IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Out BlockStatement StatementExpression Assignment MemberReference node modifiers MemberReference Modifier Out |= StatementExpression MethodInvocation advance IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Params BlockStatement StatementExpression Assignment MemberReference isParams Literal true = StatementExpression Assignment MemberReference node modifiers MemberReference Modifier Params |= StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference node type MethodInvocation parseType = IfStatement MemberReference isParams BlockStatement IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Ident BlockStatement StatementExpression Assignment MemberReference node name MethodInvocation strings MemberReference curtok data get = StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference hasComma Literal false = IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Comma BlockStatement StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference hasComma Literal true = StatementExpression MethodInvocation MemberReference closeToken AssertAndAdvance ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object trans IfStatement BinaryOperation instanceof MemberReference trans ReferenceType Transition BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Guard BlockStatement StatementExpression Cast ReferenceType Guard MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement StatementExpression Cast ReferenceType Transition MemberReference trans ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference trans	0
MethodDeclaration Modifier public final logical_or_expression RecognitionException TokenStreamException StatementExpression MethodInvocation logical_and_expression BlockStatement DoStatement _loop361 Literal true BlockStatement IfStatement BinaryOperation == MethodInvocation Literal 1 LA MemberReference OR BlockStatement StatementExpression MethodInvocation MemberReference OR match StatementExpression MethodInvocation logical_and_expression BlockStatement BreakStatement _loop361	1
MethodDeclaration Modifier public BasicType boolean remove FormalParameter ReferenceType Object o SynchronizedStatement MemberReference mutex LocalVariableDeclaration BasicType boolean VariableDeclarator result MethodInvocation MemberReference o contains IfStatement BinaryOperation != MemberReference o Literal null BlockStatement StatementExpression MethodInvocation list MemberReference o remove StatementExpression MethodInvocation set MemberReference o remove ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType pop LocalVariableDeclaration ReferenceType VariableDeclarator item SuperMethodInvocation pop IfStatement BinaryOperation || BinaryOperation == MethodInvocation size Literal 0 MethodInvocation ! MethodInvocation isRedoable peek BlockStatement StatementExpression MethodInvocation Literal Literal false ReturnStatement MemberReference item	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement isStatic getFacade	0
MethodDeclaration Modifier public ReferenceType Object getGuard FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isATransition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement Cast ReferenceType Boolean MemberReference value setLeaf getCoreHelper	0
MethodDeclaration Modifier public final Annotation Override removeFromDiagram IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference removeElementListener StatementExpression SuperMethodInvocation removeFromDiagram StatementExpression MethodInvocation damage	0
MethodDeclaration Modifier public BasicType int getRowCount IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal 0 ReturnStatement MethodInvocation size	0
MethodDeclaration Modifier public Annotation Deprecated structureChanged IfStatement BinaryOperation == MemberReference treeModel Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation treeModel structureChanged	1
MethodDeclaration Modifier public removeStereotype FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Object stereo StatementExpression MethodInvocation UMLUtil ArrayCreator ReferenceType Object ArrayInitializer MemberReference modelElement MemberReference stereo ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Element ClassReference ReferenceType Stereotype checkArgs LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MemberReference stereo StatementExpression Cast ReferenceType Element MemberReference modelElement StatementExpression MethodInvocation MemberReference modelElement MemberReference stereotype fireUnapplyStereotypeEvent MethodDeclaration * Call the model event pump and ask it to an event * a stereotype has been removed. This is a stop-gap until we * how the event pump can detect that a * has been * @param * @param */ Modifier private fireUnapplyStereotypeEvent FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereotype LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator pump Cast ReferenceType MethodInvocation Model getPump StatementExpression MethodInvocation pump MemberReference modelElement MemberReference stereotype Literal null MemberReference REMOVE Literal "stereotype" Literal null StatementExpression MethodInvocation editingDomain MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Remove the stereotype from the element #" MemberReference stereo MemberReference modelElement execute getCommandStack	0
MethodDeclaration Modifier public ReferenceType Object getPackage ReturnStatement ClassReference org.eclipse.uml2.uml ReferenceType	0
MethodDeclaration Modifier final static protected ReferenceType String generateAttributeName FormalParameter ReferenceType Object modelElement FormalParameter BasicType int iMajorVersion IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAAttribute getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Attribute required" LocalVariableDeclaration ReferenceType String VariableDeclarator sAttributeName MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade IfStatement BinaryOperation && BinaryOperation < MemberReference iMajorVersion Literal 5 MethodInvocation ! Model getFacade BlockStatement ReturnStatement BinaryOperation + Literal "_" MemberReference sAttributeName ReturnStatement MemberReference sAttributeName	1
MethodDeclaration Modifier public setModelElementNamespace FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType Facade VariableDeclarator facade MethodInvocation Model getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation facade MemberReference modelElement isANode MethodInvocation facade MemberReference modelElement isANodeInstance MethodInvocation facade MemberReference modelElement isAComponent MethodInvocation facade MemberReference modelElement isAComponentInstance BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Setting namespace of " MemberReference modelElement info StatementExpression SuperMethodInvocation MemberReference modelElement MemberReference namespace setModelElementNamespace	1
MethodDeclaration Modifier public addAttribute FormalParameter BasicType short modifiers FormalParameter ReferenceType String typeSpec FormalParameter ReferenceType String name FormalParameter ReferenceType String initializer FormalParameter ReferenceType String javadoc StatementExpression MethodInvocation MemberReference modifiers MemberReference typeSpec MemberReference name MemberReference initializer MemberReference javadoc Literal false addAttribute	0
MethodDeclaration Modifier private ReferenceType String getPackageName FormalParameter ReferenceType String name StatementExpression Assignment MemberReference name MethodInvocation MemberReference name stripVarargAndGenerics = LocalVariableDeclaration BasicType int VariableDeclarator lastDot MethodInvocation name Literal '.' lastIndexOf IfStatement BinaryOperation == MemberReference lastDot Literal - 1 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator pkgName MethodInvocation name Literal 0 MemberReference lastDot substring IfStatement MethodInvocation Character MethodInvocation MethodInvocation Literal 0 charAt MemberReference pkgName getRelativePackageName isUpperCase BlockStatement ReturnStatement MethodInvocation MemberReference pkgName getPackageName BlockStatement ReturnStatement MemberReference pkgName	1
MethodDeclaration Modifier public removeClassModelEventListener FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelClass FormalParameter ReferenceType String propertyNames IfStatement BinaryOperation && BinaryOperation instanceof MemberReference modelClass ReferenceType Class ClassReference MethodInvocation Cast ReferenceType Class MemberReference modelClass isAssignableFrom ReferenceType EObject BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException StatementExpression MethodInvocation MemberReference modelClass MemberReference listener MemberReference propertyNames MemberReference registerForClasses	0
MethodDeclaration Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType Point LocalVariableDeclaration Modifier final BasicType int VariableDeclarator maxPoints Literal 20 LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Point VariableDeclarator ret ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Point LocalVariableDeclaration BasicType int VariableDeclarator cx MethodInvocation MethodInvocation getCenter MemberReference x MemberReference HEAD_POSN getFigAt LocalVariableDeclaration BasicType int VariableDeclarator cy MethodInvocation MethodInvocation getCenter MemberReference y MemberReference HEAD_POSN getFigAt LocalVariableDeclaration BasicType int VariableDeclarator radiusx BinaryOperation + MethodInvocation Math BinaryOperation / MethodInvocation MethodInvocation getWidth MemberReference HEAD_POSN getFigAt Literal 2 round Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator radiusy BinaryOperation + MethodInvocation Math BinaryOperation / MethodInvocation MethodInvocation getHeight MemberReference HEAD_POSN getFigAt Literal 2 round Literal 1 LocalVariableDeclaration ReferenceType Point VariableDeclarator point Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference maxPoints MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType double VariableDeclarator angle BinaryOperation * BinaryOperation / BinaryOperation * Literal 2 MemberReference Math PI MemberReference maxPoints MemberReference i StatementExpression Assignment MemberReference point ClassCreator ReferenceType Point Cast BasicType int BinaryOperation + MemberReference cx BinaryOperation * MethodInvocation Math MemberReference angle cos MemberReference radiusx Cast BasicType int BinaryOperation + MemberReference cy BinaryOperation * MethodInvocation Math MemberReference angle sin MemberReference radiusy = StatementExpression MethodInvocation ret MemberReference point add StatementExpression MethodInvocation ret ClassCreator ReferenceType Point Cast ReferenceType FigLine MethodInvocation MemberReference LEFT_LEG_POSN getFigAt Cast ReferenceType FigLine MethodInvocation MemberReference LEFT_LEG_POSN getFigAt add StatementExpression MethodInvocation ret ClassCreator ReferenceType Point Cast ReferenceType FigLine MethodInvocation MemberReference RIGHT_LEG_POSN getFigAt Cast ReferenceType FigLine MethodInvocation MemberReference RIGHT_LEG_POSN getFigAt add StatementExpression MethodInvocation ret ClassCreator ReferenceType Point Cast ReferenceType FigLine MethodInvocation MemberReference RIGHT_LEG_POSN getFigAt BinaryOperation + Cast ReferenceType FigLine MethodInvocation MemberReference RIGHT_LEG_POSN getFigAt MethodInvocation MethodInvocation getHeight getNameFig add StatementExpression MethodInvocation ret ClassCreator ReferenceType Point Cast ReferenceType FigLine MethodInvocation MemberReference ARMS_POSN getFigAt Cast ReferenceType FigLine MethodInvocation MemberReference ARMS_POSN getFigAt add StatementExpression MethodInvocation ret ClassCreator ReferenceType Point Cast ReferenceType FigLine MethodInvocation MemberReference ARMS_POSN getFigAt Cast ReferenceType FigLine MethodInvocation MemberReference ARMS_POSN getFigAt add StatementExpression MethodInvocation ret ClassCreator ReferenceType Point Cast ReferenceType FigLine MethodInvocation MemberReference LEFT_LEG_POSN getFigAt BinaryOperation + Cast ReferenceType FigLine MethodInvocation MemberReference LEFT_LEG_POSN getFigAt MethodInvocation MethodInvocation getHeight getNameFig add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier private deleteNonNull FormalParameter ReferenceType ModelElement action IfStatement BinaryOperation != MemberReference action Literal null BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference action delete getUmlFactory	0
MethodDeclaration Modifier public ReferenceType String getType ReturnStatement MemberReference	0
MethodDeclaration Modifier protected handleModelEnd FormalParameter ReferenceType XMLElement e StatementExpression Assignment MemberReference model MethodInvocation e MethodInvocation trim getText = StatementExpression MethodInvocation LOG BinaryOperation + Literal "Got model = " MemberReference model debug	1
MethodDeclaration Modifier private buildPanel StatementExpression MethodInvocation ClassCreator ReferenceType setLayout StatementExpression Assignment MemberReference topPanel ClassCreator ReferenceType = StatementExpression MethodInvocation topPanel ClassCreator ReferenceType setLayout LocalVariableDeclaration ReferenceType VariableDeclarator warning ClassCreator ReferenceType StatementExpression MethodInvocation warning ClassCreator ReferenceType BoxLayout MemberReference warning MemberReference BoxLayout PAGE_AXIS setLayout LocalVariableDeclaration ReferenceType JLabel VariableDeclarator warningLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal "label.warning" localize StatementExpression MethodInvocation warningLabel MemberReference Component RIGHT_ALIGNMENT setAlignmentX StatementExpression MethodInvocation warning MemberReference warningLabel add LocalVariableDeclaration ReferenceType JLinkButton VariableDeclarator projectSettings ClassCreator ReferenceType JLinkButton StatementExpression MethodInvocation projectSettings ClassCreator ReferenceType StatementExpression MethodInvocation projectSettings MethodInvocation Translator Literal "button.project-settings" localize setText StatementExpression MethodInvocation projectSettings Literal null setIcon StatementExpression MethodInvocation projectSettings MemberReference Component RIGHT_ALIGNMENT setAlignmentX StatementExpression MethodInvocation warning MemberReference projectSettings add StatementExpression MethodInvocation topPanel MemberReference warning MemberReference add LocalVariableDeclaration ReferenceType VariableDeclarator settings ClassCreator ReferenceType StatementExpression MethodInvocation settings ClassCreator ReferenceType GridBagLayout setLayout LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator labelConstraints ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference labelConstraints anchor MemberReference GridBagConstraints WEST = StatementExpression Assignment MemberReference labelConstraints gridy Literal 0 = StatementExpression Assignment MemberReference labelConstraints gridx Literal 0 = StatementExpression Assignment MemberReference labelConstraints gridwidth Literal 1 = StatementExpression Assignment MemberReference labelConstraints gridheight Literal 1 = StatementExpression Assignment MemberReference labelConstraints insets ClassCreator ReferenceType Insets Literal 2 Literal 20 Literal 2 Literal 4 = LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator fieldConstraints ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference fieldConstraints anchor MemberReference GridBagConstraints EAST = StatementExpression Assignment MemberReference fieldConstraints fill MemberReference GridBagConstraints HORIZONTAL = StatementExpression Assignment MemberReference fieldConstraints gridy Literal 0 = StatementExpression Assignment MemberReference fieldConstraints gridx Literal 1 = StatementExpression Assignment MemberReference fieldConstraints gridwidth Literal 3 = StatementExpression Assignment MemberReference fieldConstraints gridheight Literal 1 = StatementExpression Assignment MemberReference fieldConstraints weightx Literal 1.0 = StatementExpression Assignment MemberReference fieldConstraints insets ClassCreator ReferenceType Insets Literal 2 Literal 4 Literal 2 Literal 20 = StatementExpression Assignment MemberReference labelConstraints gridy Literal 0 = StatementExpression Assignment MemberReference fieldConstraints gridy Literal 0 = StatementExpression MethodInvocation settings ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize MemberReference labelConstraints add LocalVariableDeclaration ReferenceType JTextField VariableDeclarator j ClassCreator ReferenceType JTextField StatementExpression Assignment MemberReference userFullname MemberReference j = StatementExpression MethodInvocation settings MemberReference userFullname MemberReference fieldConstraints add StatementExpression Assignment MemberReference labelConstraints gridy Literal 1 = StatementExpression Assignment MemberReference fieldConstraints gridy Literal 1 = StatementExpression MethodInvocation settings ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize MemberReference labelConstraints add LocalVariableDeclaration ReferenceType JTextField VariableDeclarator j1 ClassCreator ReferenceType JTextField StatementExpression Assignment MemberReference userEmail MemberReference j1 = StatementExpression MethodInvocation settings MemberReference userEmail MemberReference fieldConstraints add StatementExpression MethodInvocation topPanel MemberReference settings MemberReference CENTER add StatementExpression MethodInvocation MemberReference topPanel MemberReference add	0
MethodDeclaration Modifier private static ReferenceType String generateExpression FormalParameter ReferenceType Object expr IfStatement MethodInvocation Model MethodInvocation MemberReference expr isAExpression getFacade ReturnStatement MethodInvocation Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade generateUninterpreted IfStatement MethodInvocation Model MethodInvocation MemberReference expr getFacade ReturnStatement MethodInvocation MethodInvocation Model MethodInvocation MemberReference expr getBody getFacade generateExpression ReturnStatement Literal ""	1
MethodDeclaration Modifier public ReferenceType Object getReply ReturnStatement MemberReference org.eclipse.uml2.uml.MessageSort REPLY_LITERAL	0
MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference authorname MemberReference oldAuthorName =	0
MethodDeclaration Modifier public removeTargetFlow FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object flow ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType FigRole getRole ReturnStatement MethodInvocation group getRole	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isActive ForStatement EnhancedForControl VariableDeclaration ReferenceType Critic VariableDeclarator c MemberReference critics BlockStatement IfStatement MethodInvocation c isActive BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation Override ReferenceType Point connectionPoint FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration BasicType double VariableDeclarator rx BinaryOperation / MemberReference _w Literal 2 LocalVariableDeclaration BasicType double VariableDeclarator ry BinaryOperation / MemberReference Literal 2 LocalVariableDeclaration BasicType double VariableDeclarator dx BinaryOperation - MemberReference anotherPt x BinaryOperation + MemberReference _x MemberReference rx LocalVariableDeclaration BasicType double VariableDeclarator dy BinaryOperation - MemberReference anotherPt y BinaryOperation + MemberReference _y MemberReference ry LocalVariableDeclaration BasicType double VariableDeclarator dd BinaryOperation + BinaryOperation * BinaryOperation * BinaryOperation * MemberReference ry MemberReference ry MemberReference dx MemberReference dx BinaryOperation * BinaryOperation * BinaryOperation * MemberReference rx MemberReference rx MemberReference dy MemberReference dy LocalVariableDeclaration BasicType double VariableDeclarator mu BinaryOperation / BinaryOperation * MemberReference rx MemberReference ry MethodInvocation Math MemberReference dd sqrt LocalVariableDeclaration ReferenceType Point VariableDeclarator res ClassCreator ReferenceType Point Cast BasicType int BinaryOperation + BinaryOperation + BinaryOperation * MemberReference mu MemberReference dx MemberReference _x MemberReference rx Cast BasicType int BinaryOperation + BinaryOperation + BinaryOperation * MemberReference mu MemberReference dy MemberReference _y MemberReference ry ReturnStatement MemberReference res	1
MethodDeclaration Modifier public ReferenceType Object newExpression StatementExpression MethodInvocation LOG Literal "new boolean expression" debug ReturnStatement MethodInvocation Model MethodInvocation Literal "" Literal "" createBooleanExpression getDataTypesFactory	0
MethodDeclaration Modifier private BasicType int getVGap ReturnStatement MemberReference V_GAP	0
MethodDeclaration Modifier public ReferenceType Property FormalParameter ReferenceType Object type FormalParameter ReferenceType Object assoc IfStatement BinaryOperation instanceof MemberReference type ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "type must be instance of Classifier" IfStatement BinaryOperation instanceof MemberReference assoc ReferenceType Association BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of ReturnStatement Cast ReferenceType Association MemberReference assoc	0
MethodDeclaration Modifier public propertyChange FormalParameter Modifier final ReferenceType PropertyChangeEvent pve LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator src MethodInvocation pve getSource LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator pName MethodInvocation pve getPropertyName IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pve ReferenceType DeleteInstanceEvent BinaryOperation == MemberReference src MethodInvocation getOwner BlockStatement StatementExpression MethodInvocation removeFromDiagram ReturnStatement IfStatement BinaryOperation && MethodInvocation pve MethodInvocation Literal "supplierDependency" equals getPropertyName MethodInvocation Model MethodInvocation MethodInvocation pve getOldValue isADependency getFacade BlockStatement ReturnStatement IfStatement BinaryOperation && MethodInvocation pName Literal "editing" equals MethodInvocation Boolean.FALSE MethodInvocation pve getNewValue equals BlockStatement TryStatement StatementExpression MethodInvocation Cast ReferenceType FigText MemberReference src textEdited LocalVariableDeclaration Modifier final ReferenceType Rectangle VariableDeclarator bbox MethodInvocation getBounds LocalVariableDeclaration Modifier final ReferenceType Dimension VariableDeclarator minSize MethodInvocation getMinimumSize StatementExpression Assignment MemberReference bbox width MethodInvocation Math MemberReference bbox width MemberReference minSize width max = StatementExpression Assignment MemberReference bbox height MethodInvocation Math MemberReference bbox height MemberReference minSize height max = StatementExpression MethodInvocation MemberReference bbox x MemberReference bbox y MemberReference bbox width MemberReference bbox height setBounds StatementExpression MethodInvocation endTrans CatchClause CatchClauseParameter PropertyVetoException ex StatementExpression MethodInvocation LOG BinaryOperation + Literal "could not parse the text entered. " Literal "PropertyVetoException" MemberReference ex error IfStatement BinaryOperation && MethodInvocation pName Literal "editing" equals MethodInvocation Boolean.TRUE MethodInvocation pve getNewValue equals BlockStatement IfStatement MethodInvocation ! isReadOnly BlockStatement StatementExpression MethodInvocation Cast ReferenceType FigText MemberReference src textEditStarted BlockStatement StatementExpression SuperMethodInvocation MemberReference pve propertyChange IfStatement MethodInvocation Model MethodInvocation MemberReference src isAUMLElement getFacade BlockStatement LocalVariableDeclaration Modifier final ReferenceType UmlChangeEvent VariableDeclarator event Cast ReferenceType UmlChangeEvent MemberReference pve LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement ReturnStatement TryStatement StatementExpression MethodInvocation MemberReference event modelChanged CatchClause CatchClauseParameter InvalidElementException e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "modelChanged method accessed deleted element" MethodInvocation MemberReference event formatEvent MemberReference e debug IfStatement BinaryOperation && BinaryOperation == MethodInvocation event getSource MemberReference owner Literal MethodInvocation MethodInvocation event getPropertyName equals "stereotype" BlockStatement StatementExpression MethodInvocation MemberReference event stereotypeChanged LocalVariableDeclaration ReferenceType Runnable VariableDeclarator doWorkRunnable ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation MemberReference event updateLayout CatchClause CatchClauseParameter InvalidElementException e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "updateLayout method accessed " Literal "deleted element " MethodInvocation MemberReference event formatEvent MemberReference e debug StatementExpression MethodInvocation SwingUtilities MemberReference doWorkRunnable invokeLater	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Object t StatementExpression Assignment This MemberReference listTarget MemberReference t =	0
MethodDeclaration Modifier public ReferenceType Object getAbstraction ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public static BasicType boolean hasDocs FormalParameter ReferenceType Object o IfStatement MethodInvocation Model MethodInvocation MemberReference o isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation Model MethodInvocation MemberReference o getTaggedValues getFacade IfStatement BinaryOperation != MemberReference i Literal null BlockStatement WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation i next LocalVariableDeclaration ReferenceType String VariableDeclarator tag MethodInvocation Model MethodInvocation MemberReference tv getTagOfTag getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator value MethodInvocation Model MethodInvocation MemberReference tv getValueOfTag getFacade IfStatement BinaryOperation && BinaryOperation && BinaryOperation || MethodInvocation Argo.DOCUMENTATION_TAG MemberReference tag equals MethodInvocation Argo.DOCUMENTATION_TAG_ALT MemberReference tag equals BinaryOperation != MemberReference value Literal null BinaryOperation > MethodInvocation value MethodInvocation length trim Literal 0 BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "Not a UML1.4 element"	0
MethodDeclaration Modifier public BasicType boolean relocate FormalParameter ReferenceType Object base StatementExpression MethodInvocation MemberReference base setNamespace StatementExpression MethodInvocation damage ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator node Literal null LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType GraphModel VariableDeclarator gm MethodInvocation ce getGraphModel IfStatement BinaryOperation instanceof MemberReference gm ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Cast ReferenceType MemberReference gm StatementExpression Assignment MemberReference node MethodInvocation Model MethodInvocation MemberReference owner buildLifeline getCollaborationsFactory = BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "Graphmodel is not a " Literal diagram graph model" ReturnStatement MemberReference node	0
MethodDeclaration Modifier public BasicType int getLength ReturnStatement MethodInvocation document getLength	0
MethodDeclaration Modifier protected ReferenceType Object createEdgeAbove FormalParameter ReferenceType MutableGraphModel gm FormalParameter ReferenceType Object newNode ReturnStatement MethodInvocation MemberReference gm MemberReference newNode MemberReference TOP createEdge	0
MethodDeclaration Modifier public BasicType boolean isACompositeState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType CompositeState	0
MethodDeclaration Modifier private removeElementListeners FormalParameter ReferenceType Set TypeArgument ReferenceType Object listenerSet ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator listener MemberReference listenerSet BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator property MemberReference ArraySelector Literal 1 listener IfStatement BinaryOperation == MemberReference property Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference ArraySelector Literal 0 listener removeModelEventListener getPump IfStatement BinaryOperation instanceof MemberReference property ReferenceType String BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference ArraySelector Literal 0 listener Cast ReferenceType String MemberReference property removeModelEventListener getPump IfStatement BinaryOperation instanceof MemberReference property ReferenceType String BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference ArraySelector Literal 0 listener Cast ReferenceType String MemberReference property removeModelEventListener getPump BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Internal error in removeAllElementListeners" StatementExpression MethodInvocation listeners MemberReference listenerSet removeAll	1
MethodDeclaration Modifier public clear StatementExpression SuperMethodInvocation clear StatementExpression MethodInvocation Literal MethodInvocation size StatementExpression MethodInvocation Literal Literal false	0
MethodDeclaration Modifier public Annotation Override initWizard FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType WizAddConstructor BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation w getToDoItem LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation item MethodInvocation Literal 0 get getOffenders LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator sug Literal null IfStatement BinaryOperation != MemberReference me Literal null BlockStatement StatementExpression Assignment MemberReference sug MethodInvocation Model MethodInvocation MemberReference me getName getFacade = IfStatement Literal MethodInvocation MemberReference sug equals "" BlockStatement StatementExpression Assignment MemberReference sug SuperMethodInvocation getDefaultSuggestion = StatementExpression Cast ReferenceType WizAddConstructor MemberReference w StatementExpression Cast ReferenceType WizAddConstructor MemberReference w	0
MethodDeclaration ReferenceType MofClass getMofClass FormalParameter ReferenceType String metatypeName LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType MofClass VariableDeclarator metaTypes MethodInvocation getMetaClasses ForStatement EnhancedForControl VariableDeclaration ReferenceType MofClass VariableDeclarator mofClass MemberReference metaTypes BlockStatement IfStatement MethodInvocation metatypeName MethodInvocation mofClass getName equals BlockStatement ReturnStatement MemberReference mofClass ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClass getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getAssociation getFacade addElement	0
MethodDeclaration Modifier protected ReferenceType Action getActionSubmachineState IfStatement BinaryOperation == MemberReference actionSubmachineState Literal null BlockStatement StatementExpression Assignment MemberReference actionSubmachineState ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getSubmachineState getMetaTypes Literal "button.new-submachinestate" = ReturnStatement MemberReference actionSubmachineState	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModel getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent MethodInvocation Model MethodInvocation getNode getMetaTypes getAllModelElementsOfKind getModelManagementHelper ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType Object getArtifact ReturnStatement ClassReference ReferenceType Artifact	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAAction getFacade	0
MethodDeclaration Modifier public Annotation Override setValueAt FormalParameter ReferenceType Object ob FormalParameter BasicType int row FormalParameter BasicType int col IfStatement BinaryOperation instanceof MemberReference ob ReferenceType ActionWrapper BlockStatement LocalVariableDeclaration ReferenceType ActionWrapper VariableDeclarator newValueAction Cast ReferenceType ActionWrapper MemberReference ob ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference elements length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i ArraySelector Literal 0 MethodInvocation MethodInvocation newValueAction getActionName equals elements BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i ArraySelector Literal 1 elements MethodInvocation newValueAction getCurrentShortcut = StatementExpression MethodInvocation repaint BreakStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference actions length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation getKey MethodInvocation MethodInvocation newValueAction getKey equals actions BlockStatement StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation MethodInvocation newValueAction getCurrentShortcut setCurrentShortcut actions BreakStatement BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference row ArraySelector MemberReference col elements MemberReference ob =	1
MethodDeclaration Modifier public BasicType boolean disable StatementExpression MethodInvocation MethodInvocation MemberReference myLang getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType boolean isAASynchSignalMessage FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Message VariableDeclarator m Cast ReferenceType Message MemberReference handle ReturnStatement BinaryOperation == MethodInvocation m MemberReference MessageSort ASYNCH_SIGNAL_LITERAL	0
MethodDeclaration Modifier public Annotation Deprecated BasicType boolean getShowTypesValue ReturnStatement MethodInvocation npSettings isShowTypes	0
MethodDeclaration Modifier public Annotation Override ReferenceType ListSet getOffenders LocalVariableDeclaration Modifier final ReferenceType ListSet VariableDeclarator offenders SuperMethodInvocation getOffenders AssertStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation <= MethodInvocation offenders size Literal 0 MethodInvocation Model MethodInvocation MethodInvocation offenders Literal 0 get isAUMLElement getFacade BinaryOperation instanceof MethodInvocation offenders Literal 0 get ReferenceType Fig BinaryOperation instanceof MethodInvocation offenders Literal 0 get ReferenceType Diagram ReturnStatement MemberReference offenders	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType EnumerationLiteral BlockStatement ReturnStatement Cast ReferenceType EnumerationLiteral MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public BasicType int getHgap ReturnStatement This MemberReference hgap	0
MethodDeclaration Modifier private final createAttribute FormalParameter ReferenceType Object modelElement Exception IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAAttribute getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Attribute required" StatementExpression Assignment MemberReference objDocBlock ClassCreator ReferenceType DocBlock = StatementExpression Assignment MemberReference objModelElement MemberReference modelElement = StatementExpression Assignment MemberReference iDocBlockType MemberReference BLOCK_TYPE_ATTRIBUTE = StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_STATIC enableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_VAR enableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_AUTHOR disableTag StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_VERSION disableTag StatementExpression MethodInvocation objDocBlock BinaryOperation + Literal "Short description of attribute " MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade setDefaultDescription StatementExpression MethodInvocation objDocBlock MethodInvocation Model MethodInvocation MemberReference modelElement getTaggedValues getFacade setTags LocalVariableDeclaration ReferenceType Object VariableDeclarator objVarType MethodInvocation Model MethodInvocation MemberReference modelElement getType getFacade IfStatement BinaryOperation != MemberReference objVarType Literal null BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_VAR MethodInvocation Model MethodInvocation MemberReference objVarType getName getFacade setTag IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isPublic getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS Literal "public" setTag IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isProtected getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS Literal "protected" setTag IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isPrivate getFacade BlockStatement StatementExpression MethodInvocation objDocBlock MemberReference DocBlock TAG_TYPE_ACCESS Literal "private" setTag	1
MethodDeclaration Modifier public BasicType boolean canAddNode FormalParameter ReferenceType Object node IfStatement MethodInvocation MemberReference node containsNode BlockStatement ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference node getFacade BlockStatement ReturnStatement Literal true ReturnStatement SuperMethodInvocation MemberReference node canAddNode	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier static removeTopStateFrom FormalParameter ReferenceType Collection ret LocalVariableDeclaration ReferenceType Collection VariableDeclarator tops ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator state MemberReference ret BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference state isACompositeState getFacade MethodInvocation Model MethodInvocation MemberReference state getFacade BlockStatement StatementExpression MethodInvocation tops MemberReference state add StatementExpression MethodInvocation ret MemberReference tops removeAll	0
MethodDeclaration Modifier public act FormalParameter ReferenceType File f IfStatement MethodInvocation ! f isDirectory BlockStatement StatementExpression MethodInvocation ret MethodInvocation f MethodInvocation MemberReference prefix substring toString add	0
MethodDeclaration unregister FormalParameter ReferenceType T item FormalParameter ReferenceType String key FormalParameter ReferenceType String subkeys LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType T VariableDeclarator entry MethodInvocation registry MemberReference key get IfStatement BinaryOperation == MemberReference entry Literal null BlockStatement ReturnStatement IfStatement BinaryOperation && BinaryOperation != MemberReference subkeys Literal null BinaryOperation > MemberReference subkeys length Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference subkeys length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference entry MemberReference ArraySelector MemberReference i subkeys MemberReference item lookupRemoveItem BlockStatement IfStatement BinaryOperation == MemberReference item Literal null BlockStatement StatementExpression MethodInvocation registry MemberReference key remove BlockStatement StatementExpression MethodInvocation MemberReference entry Literal "" MemberReference item lookupRemoveItem	1
MethodDeclaration Modifier public FormalParameter ReferenceType event StatementExpression MethodInvocation ClassCreator ReferenceType NotificationImpl MemberReference COMMAND_STACK_UPDATE Literal false Literal false	0
MethodDeclaration Modifier private emptyTrashCan StatementExpression MethodInvocation clear	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAStereotype getFacade	0
MethodDeclaration Modifier public insertString FormalParameter BasicType int offset FormalParameter ReferenceType String str FormalParameter ReferenceType AttributeSet a BadLocationException TryStatement StatementExpression MethodInvocation Integer MemberReference str parseInt StatementExpression SuperMethodInvocation MemberReference offset MemberReference str MemberReference a insertString CatchClause CatchClauseParameter NumberFormatException e	1
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent event IfStatement BinaryOperation == MethodInvocation event getSource MemberReference theComboBox BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator item MethodInvocation theComboBox getSelectedItem StatementExpression MethodInvocation MemberReference item setButtonEnabled	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getComments getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation && BinaryOperation != MethodInvocation getTarget Literal null BinaryOperation != MethodInvocation getTarget MethodInvocation ProjectManager getManager	0
MethodDeclaration Modifier public BasicType boolean isAPort FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType TemplateParameter	0
MethodDeclaration Modifier protected ReferenceType TabTaggedValuesModel ReturnStatement Cast ReferenceType TabTaggedValuesModel MethodInvocation table getModel	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAStateVertex getFacade MethodInvocation ! Model MethodInvocation MemberReference element isAConcurrentRegion getFacade BinaryOperation != MethodInvocation Model MethodInvocation MemberReference element getName getFacade Literal null	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object utilizedElement ThrowStatement ClassCreator ReferenceType NotImplementedException Literal has no manifestations"	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter ReferenceType Object ok StatementExpression MethodInvocation ClassCreator ReferenceType ObjectSetter MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent MemberReference ok MethodInvocation Model MethodInvocation MemberReference handle getFacade createCommand	1
MethodDeclaration Modifier public Annotation Override ReferenceType Collection IfStatement BinaryOperation == MemberReference profilePackages Literal null BlockStatement ReturnStatement MethodInvocation Collections emptySet BlockStatement ReturnStatement MethodInvocation Collections MemberReference profilePackages unmodifiableCollection	0
MethodDeclaration ReferenceType getListener ReturnStatement MemberReference listener	0
MethodDeclaration Modifier public Annotation Override setFig FormalParameter ReferenceType Fig f StatementExpression MethodInvocation LOG BinaryOperation + Literal "Setting the internal fig to " MemberReference f info StatementExpression SuperMethodInvocation MemberReference f setFig StatementExpression MethodInvocation MethodInvocation Literal true getFig	1
MethodDeclaration resolve IfStatement MethodInvocation unresolvedItems isEmpty BlockStatement ReturnStatement LocalVariableDeclaration Modifier final ReferenceType Collection TypeArgument ReferenceType T VariableDeclarator items MethodInvocation Collections emptyList StatementExpression MethodInvocation MemberReference items resolve	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getDesc ReturnStatement MethodInvocation Translator Literal "combobox.filefilter.zargo" localize	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getUMLClass getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType String specification IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Reception BlockStatement StatementExpression Cast ReferenceType Reception MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public setMultiplicity FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final BasicType int lower FormalParameter Modifier final BasicType int upper LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MultiplicityElement MemberReference handle StatementExpression Cast ReferenceType MultiplicityElement MemberReference handle StatementExpression Cast ReferenceType MultiplicityElement MemberReference handle StatementExpression Cast ReferenceType MultiplicityElement MemberReference handle StatementExpression MethodInvocation editingDomain MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Set the multiplicity #..# to the element #" MemberReference lower MemberReference upper MemberReference handle execute getCommandStack	1
MethodDeclaration Modifier public outerClassifier StatementExpression Assignment MemberReference classnamePrefix Literal "" = StatementExpression Assignment MemberReference anonymousClassCounter Literal 0 =	0
MethodDeclaration Modifier public BasicType boolean containsNode FormalParameter ReferenceType Object node ReturnStatement MethodInvocation nodes MemberReference node contains	0
MethodDeclaration Modifier public seek FormalParameter BasicType int index StatementExpression Assignment MemberReference p MemberReference index =	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_1 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 72057592426402688L Literal 18014398511579136L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier synchronized protected ReferenceType String FormalParameter ReferenceType Object self FormalParameter ReferenceType String expr FormalParameter ReferenceType String sep ExpansionException StatementExpression MethodInvocation _scratchBindings Literal MemberReference self put LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType List VariableDeclarator values MethodInvocation MemberReference _scratchBindings MemberReference expr eval StatementExpression MethodInvocation _strBuf Literal 0 setLength LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation values iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation MethodInvocation iter next value2String IfStatement Literal ! MethodInvocation MemberReference v equals "" BlockStatement StatementExpression MethodInvocation _strBuf MemberReference v append IfStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation _strBuf MemberReference sep append ReturnStatement MethodInvocation _strBuf toString	0
MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation MethodInvocation isEnabled setEnabled	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier protected ReferenceType Action getActionReturnAction IfStatement BinaryOperation == MemberReference actionReturnAction Literal null BlockStatement StatementExpression Assignment MemberReference actionReturnAction MethodInvocation = ReturnStatement MemberReference actionReturnAction	0
MethodDeclaration Modifier public BasicType boolean isAUseCase FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType UseCase	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public BasicType boolean isRelocationAllowed FormalParameter ReferenceType Object base ReturnStatement MethodInvocation Model MethodInvocation MemberReference base isANamespace getFacade	0
MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget isAsynchronous getFacade setSelected	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private ReferenceType String generateParameter FormalParameter ReferenceType Object param LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 20 LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation MethodInvocation MemberReference param getType getFacade StatementExpression MethodInvocation sb MethodInvocation MemberReference param generateParameterChangeability append LocalVariableDeclaration ReferenceType String VariableDeclarator constModifier MethodInvocation MemberReference param generateConstAttributeParameterModifier IfStatement BinaryOperation != MemberReference constModifier Literal null BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal ' ' append MemberReference constModifier append StatementExpression MethodInvocation sb MethodInvocation MemberReference type generateNameWithPkgSelection append StatementExpression MethodInvocation sb Literal ' ' append StatementExpression MethodInvocation sb MethodInvocation MemberReference param generateAttributeParameterModifier append StatementExpression MethodInvocation sb MethodInvocation MethodInvocation MemberReference param getName getFacade append IfStatement BinaryOperation != MemberReference generatorPass MemberReference SOURCE_PASS BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator defvalObj MethodInvocation MethodInvocation MemberReference param getDefaultValue getFacade IfStatement BinaryOperation != MemberReference defvalObj Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator defval MethodInvocation MethodInvocation MemberReference defvalObj getBody MethodInvocation toString MethodInvocation trim getFacade IfStatement BinaryOperation > MethodInvocation defval length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference defval append Literal " = " append LocalVariableDeclaration BasicType boolean VariableDeclarator predecl MethodInvocation ! MemberReference param checkIncludeNeeded4Element StatementExpression MethodInvocation MemberReference type MemberReference predecl addDependency ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getStateVertex getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator fontName MethodInvocation Configuration MemberReference DiagramAppearance KEY_FONT_NAME getString IfStatement MethodInvocation fontName Literal "" equals BlockStatement LocalVariableDeclaration ReferenceType Font VariableDeclarator f MethodInvocation getStandardFont StatementExpression Assignment MemberReference fontName MethodInvocation f getName = StatementExpression MethodInvocation Configuration MemberReference DiagramAppearance KEY_FONT_NAME MethodInvocation f getName setString StatementExpression MethodInvocation Configuration MemberReference DiagramAppearance MethodInvocation f getSize setInteger ReturnStatement MemberReference fontName	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isSaveEnabled ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Collection getRelocationCandidates FormalParameter ReferenceType Object root ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Stereotype buildStereotype FormalParameter ReferenceType Object theModelElementObject FormalParameter ReferenceType Object theName FormalParameter ReferenceType Object theNamespaceObject IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference theModelElementObject Literal null BinaryOperation == MemberReference theName Literal null BinaryOperation == MemberReference theNamespaceObject Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "one of the arguments is null: modelElement=" MemberReference theModelElementObject Literal " name=" MemberReference theName Literal " namespace=" MemberReference theNamespaceObject LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MemberReference theModelElementObject LocalVariableDeclaration ReferenceType String VariableDeclarator text Cast ReferenceType String MemberReference theName LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Namespace MemberReference theNamespaceObject LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereo MethodInvocation MemberReference text buildStereotype StatementExpression MethodInvocation stereo MethodInvocation MethodInvocation modelImpl MethodInvocation MemberReference me getName getMetaTypes add getBaseClass LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereo2 Cast ReferenceType Stereotype MethodInvocation extensionHelper MemberReference ns MemberReference stereo getStereotype IfStatement BinaryOperation != MemberReference stereo2 Literal null BlockStatement StatementExpression MethodInvocation me MethodInvocation MemberReference stereo2 add getStereotype StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference stereo delete getUmlFactory ReturnStatement MemberReference stereo2 StatementExpression MethodInvocation stereo MemberReference ns setNamespace StatementExpression MethodInvocation me MethodInvocation MemberReference stereo add getStereotype ReturnStatement MemberReference stereo	1
MethodDeclaration Modifier public BasicType int selectionForKey FormalParameter BasicType char key FormalParameter ReferenceType ComboBoxModel model LocalVariableDeclaration BasicType long VariableDeclarator now MethodInvocation System currentTimeMillis LocalVariableDeclaration BasicType int VariableDeclarator index Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator startAtIndex Literal 0 IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference searchString Literal null BinaryOperation == MemberReference key MemberReference KeyEvent VK_BACK_SPACE BinaryOperation > MethodInvocation searchString length Literal 0 BlockStatement StatementExpression Assignment MemberReference searchString MethodInvocation searchString Literal 0 BinaryOperation - MethodInvocation searchString length Literal 1 substring = BlockStatement IfStatement BinaryOperation < BinaryOperation + MemberReference lastKeyEventTime MemberReference KEY_TIME_THRESHOLD_MILLIS MemberReference now BlockStatement StatementExpression Assignment MemberReference searchString MethodInvocation Character MemberReference key toString = BlockStatement StatementExpression Assignment MemberReference searchString BinaryOperation + MemberReference searchString MemberReference key = StatementExpression Assignment MemberReference startAtIndex MethodInvocation getSelectedIndex = IfStatement BinaryOperation < MemberReference startAtIndex Literal 0 BlockStatement StatementExpression Assignment MemberReference startAtIndex Literal 0 = LocalVariableDeclaration ReferenceType String VariableDeclarator umlElemName Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator searchStringLowerCase MethodInvocation searchString toLowerCase LocalVariableDeclaration ReferenceType ListCellRenderer VariableDeclarator cellRenderer MethodInvocation getRenderer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference startAtIndex VariableDeclarator length MethodInvocation model getSize BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value MethodInvocation model MemberReference i getElementAt IfStatement BinaryOperation instanceof MemberReference cellRenderer ReferenceType UMLListCellRenderer2 BlockStatement StatementExpression Assignment MemberReference umlElemName Cast ReferenceType UMLListCellRenderer2 MemberReference cellRenderer = BlockStatement StatementExpression Assignment MemberReference umlElemName MethodInvocation value toString = IfStatement MethodInvocation umlElemName MethodInvocation MemberReference searchStringLowerCase startsWith toLowerCase BlockStatement StatementExpression Assignment MemberReference index MemberReference i = BreakStatement StatementExpression Assignment MemberReference lastKeyEventTime MemberReference now = ReturnStatement MemberReference index	1
MethodDeclaration Modifier public Annotation Override removeFromDiagram ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator fig MethodInvocation getFigs BlockStatement StatementExpression MethodInvocation fig removeFromDiagram StatementExpression SuperMethodInvocation removeFromDiagram	0
MethodDeclaration Modifier public static ReferenceType UndoableAction ReturnStatement MemberReference srcAgg	0
MethodDeclaration Modifier public ReferenceType DataType createDataType LocalVariableDeclaration ReferenceType DataType VariableDeclarator dataType MethodInvocation MethodInvocation getDataType MethodInvocation createDataType getCorePackage StatementExpression SuperMethodInvocation MemberReference dataType ReturnStatement MemberReference dataType	0
MethodDeclaration Modifier public BasicType boolean isSingleton FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType ModelElement getConstrainingElements FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Collaboration BlockStatement ReturnStatement Cast ReferenceType Collaboration MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public ReferenceType Command getRemoveCommand FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object objectToRemove ReturnStatement ClassCreator ReferenceType RemoveCommand MemberReference modelElement MemberReference objectToRemove	0
MethodDeclaration Modifier private BasicType boolean isSystemClipBoardEmpty TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator text MethodInvocation Toolkit MethodInvocation getSystemClipboard MethodInvocation Literal null getContents MethodInvocation MemberReference DataFlavor stringFlavor getTransferData getDefaultToolkit ReturnStatement BinaryOperation == MemberReference text Literal null CatchClause CatchClauseParameter IOException ignorable CatchClause CatchClauseParameter UnsupportedFlavorException ignorable ReturnStatement Literal true	1
MethodDeclaration Modifier public synchronized BasicType boolean contains FormalParameter ReferenceType Object member IfStatement BinaryOperation == MemberReference todoList MemberReference member BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference model MemberReference member BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference profileConfiguration MemberReference member BlockStatement ReturnStatement Literal true ReturnStatement MethodInvocation diagramMembers MemberReference member contains	0
MethodDeclaration Modifier public ReferenceType List getEnumerationLiterals FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation ! MemberReference handle isAEnumeration BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle ReturnStatement Cast ReferenceType Enumeration MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public Annotation Override BasicType boolean canFinish IfStatement SuperMethodInvocation ! canFinish BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MethodInvocation getStep Literal 0 BlockStatement ReturnStatement Literal true IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation getStep Literal 1 BinaryOperation != MemberReference step1 Literal null BinaryOperation != MethodInvocation step1 getSelectedIndex Literal - 1 BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public BasicType boolean isReadOnly FormalParameter ReferenceType Object element ReturnStatement Literal false	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator enumeration MethodInvocation createEnumeration IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation enumeration MemberReference name setName IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType BlockStatement StatementExpression MethodInvocation enumeration Cast ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType MemberReference owner setPackage IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class BlockStatement StatementExpression Cast ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class MemberReference owner IfStatement BinaryOperation instanceof MemberReference owner ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference owner StatementExpression MethodInvocation MethodInvocation MemberReference enumeration add getParams	0
MethodDeclaration Modifier public static ReferenceType ActionSetChangeability getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier private verifyAttributeNames FormalParameter ReferenceType RefObject metaobject FormalParameter ReferenceType String attributes IfStatement MethodInvocation LOG isDebugEnabled BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference metaobject Literal null BinaryOperation == MemberReference attributes Literal null BlockStatement ReturnStatement IfStatement BinaryOperation instanceof MemberReference metaobject ReferenceType MofClass BlockStatement StatementExpression Assignment MemberReference metaobject MethodInvocation metaobject refMetaObject = IfStatement BinaryOperation instanceof MemberReference metaobject ReferenceType MofClass BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be MofClass or instance of MofClass" LocalVariableDeclaration ReferenceType MofClass VariableDeclarator metaclass Cast ReferenceType MofClass MemberReference metaobject LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator names MethodInvocation propertyNameMap MethodInvocation metaclass getName get IfStatement BinaryOperation == MemberReference names Literal null BlockStatement StatementExpression Assignment MemberReference names MethodInvocation Collections emptySet = ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator attribute MemberReference attributes BlockStatement IfStatement BinaryOperation && MethodInvocation ! names MemberReference attribute contains Literal ! MethodInvocation MemberReference attribute equals "remove" BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Property '" MemberReference attribute Literal "' for class '" MethodInvocation metaclass getName Literal "' doesn't exist in metamodel" error	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object role ReturnStatement MethodInvocation impl MemberReference role	0
MethodDeclaration Modifier public Annotation Override BasicType int getLineWidth ReturnStatement MethodInvocation dividerline getLineWidth	0
MethodDeclaration Modifier protected LocalVariableDeclaration ReferenceType ToDoPerspective VariableDeclarator tm Cast ReferenceType ToDoPerspective MethodInvocation combo getSelectedItem StatementExpression Assignment MemberReference MemberReference tm = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation tree Literal false setVisible BlockStatement StatementExpression MethodInvocation LOG Literal "ToDoPane setting tree model" debug StatementExpression MethodInvocation MemberReference root setRoot StatementExpression MethodInvocation tree Literal true StatementExpression MethodInvocation tree MemberReference setModel StatementExpression MethodInvocation tree Literal true setVisible	0
MethodDeclaration Modifier public addChangeListener FormalParameter ReferenceType ChangeListener l StatementExpression MethodInvocation listenerList ClassReference ReferenceType ChangeListener MemberReference l add StatementExpression MethodInvocation LOG Literal ">>Add listener" debug	0
MethodDeclaration Modifier private doCopyPackage FormalParameter ReferenceType UmlPackage source FormalParameter ReferenceType UmlPackage target StatementExpression Cast ReferenceType MethodInvocation modelImpl getCoreFactory	0
MethodDeclaration Modifier public BasicType int getChildCount FormalParameter ReferenceType Object parent ReturnStatement MethodInvocation MemberReference parent Literal false getChildCountCond	0
MethodDeclaration Modifier public ReferenceType String getSystemId ReturnStatement This MemberReference systemId	0
MethodDeclaration Modifier private addMethods FormalParameter ReferenceType InterfaceNode FormalParameter ReferenceType String namespace ForStatement EnhancedForControl VariableDeclaration ReferenceType InterfaceMethodNode VariableDeclarator mn MemberReference Methods BlockStatement StatementExpression MethodInvocation MemberReference cn.Name ArraySelector Literal 0 Identifier MemberReference mn MemberReference namespace addOperation	0
MethodDeclaration Modifier public ReferenceType Node createNode ReturnStatement MethodInvocation createNode	0
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference target ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference target Cast ReferenceType Fig MemberReference target = ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference target ReferenceType Diagram MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BinaryOperation && BinaryOperation instanceof MemberReference target ReferenceType Critic BinaryOperation != MethodInvocation MemberReference target findPanelFor Literal null	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet IfStatement MethodInvocation Model MethodInvocation MemberReference parent isANamespace getFacade BlockStatement StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set	0
MethodDeclaration ReferenceType Object getInterfaceByName FormalParameter ReferenceType String paramType FormalParameter ReferenceType String cPackage LocalVariableDeclaration ReferenceType Object VariableDeclarator kx Literal null IfStatement MethodInvocation paramType Literal "." contains BlockStatement ReturnStatement MethodInvocation ele BinaryOperation + MemberReference TAG_INTERFACE MemberReference paramType get BlockStatement StatementExpression Assignment MemberReference kx MethodInvocation ele BinaryOperation + BinaryOperation + BinaryOperation + MemberReference TAG_INTERFACE MemberReference cPackage Literal "." MemberReference paramType get = IfStatement BinaryOperation != MemberReference kx Literal null BlockStatement ReturnStatement MemberReference kx ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator u MemberReference cu UsingDirectives BlockStatement StatementExpression Assignment MemberReference kx MethodInvocation ele BinaryOperation + BinaryOperation + BinaryOperation + MemberReference TAG_INTERFACE MethodInvocation MemberReference u.Target Identifier MemberReference u.Target.Identifier length buildToParent Literal "." MemberReference paramType get = IfStatement BinaryOperation != MemberReference kx Literal null BlockStatement ReturnStatement MemberReference kx ReturnStatement Literal null	0
MethodDeclaration Modifier private stereotypeChanged FormalParameter Modifier final ReferenceType UmlChangeEvent event LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator owner MethodInvocation getOwner AssertStatement BinaryOperation != MemberReference owner Literal null TryStatement IfStatement BinaryOperation != MethodInvocation event getOldValue Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation event getOldValue removeElementListener IfStatement BinaryOperation != MethodInvocation event getNewValue Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation event getNewValue Literal "name" addElementListener CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG Literal method accessed deleted element " MemberReference e debug	0
MethodDeclaration Modifier public Annotation Override renderingChanged StatementExpression SuperMethodInvocation renderingChanged IfStatement BinaryOperation != MemberReference notationProviderBody Literal null BlockStatement StatementExpression MethodInvocation bodyText MethodInvocation notationProviderBody MethodInvocation getOwner MethodInvocation getNotationSettings toString setText StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation MethodInvocation getBounds setBounds	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration addInterface FormalParameter ReferenceType String name FormalParameter BasicType short modifiers FormalParameter ReferenceType List TypeArgument ReferenceType String typeParameters FormalParameter ReferenceType List TypeArgument ReferenceType String interfaces FormalParameter ReferenceType String javadoc FormalParameter BasicType boolean forceIt IfStatement BinaryOperation && BinaryOperation != MemberReference typeParameters Literal null BinaryOperation > MethodInvocation typeParameters size Literal 0 BlockStatement StatementExpression MethodInvocation Literal "type parameters not supported on Interface" MemberReference name logError LocalVariableDeclaration ReferenceType Object VariableDeclarator mInterface MethodInvocation MethodInvocation Model MethodInvocation getCoreFactory MemberReference name MemberReference modifiers MemberReference javadoc MemberReference typeParameters addClassifier IfStatement BinaryOperation == MethodInvocation getLevel Literal 0 BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator interfaceName MemberReference interfaces BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parentInterface Literal null TryStatement StatementExpression Assignment MemberReference parentInterface MethodInvocation MethodInvocation MethodInvocation MemberReference interfaceName getClassifierName Literal true MemberReference javaProfile get MemberReference interfaceName getContext = StatementExpression MethodInvocation MemberReference currentPackage MemberReference parentInterface MemberReference mInterface getGeneralization CatchClause CatchClauseParameter ClassifierNotFoundException e IfStatement BinaryOperation && BinaryOperation && MemberReference forceIt BinaryOperation != MemberReference interfaceName Literal null BinaryOperation != MemberReference model Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Modeller.java: " Literal "forced creation of unknown interface " MemberReference interfaceName info LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference interfaceName getPackageName LocalVariableDeclaration ReferenceType String VariableDeclarator classifierName MethodInvocation MemberReference interfaceName getClassifierName LocalVariableDeclaration ReferenceType Object VariableDeclarator mPackage TernaryExpression BinaryOperation > MethodInvocation packageName length Literal 0 MethodInvocation MemberReference packageName Literal false getPackage MemberReference model StatementExpression Assignment MemberReference parentInterface MethodInvocation Model MethodInvocation MemberReference mPackage MemberReference classifierName lookupIn getFacade = IfStatement BinaryOperation == MemberReference parentInterface Literal null BlockStatement StatementExpression Assignment MemberReference parentInterface MethodInvocation Model MethodInvocation MemberReference classifierName MemberReference mPackage buildInterface getCoreFactory = StatementExpression MethodInvocation newElements MemberReference parentInterface add StatementExpression MethodInvocation MemberReference currentPackage MemberReference parentInterface MemberReference mInterface getGeneralization BlockStatement StatementExpression MethodInvocation MemberReference interfaceName Literal "a generalization" warnClassifierNotFound	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigConcurrentRegion VariableDeclarator figClone Cast ReferenceType FigConcurrentRegion SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig StatementExpression Assignment MemberReference figClone dividerline Cast ReferenceType FigLine MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setInternal ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public setShowSequenceNumbers FormalParameter BasicType boolean showThem StatementExpression Assignment This MemberReference showSequenceNumbers MemberReference showThem =	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MethodInvocation getUseGuillemotsValue MemberReference showem BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Memento VariableDeclarator ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_USE_GUILLEMOTS MethodDeclaration Modifier public redo StatementExpression MethodInvocation npSettings MemberReference showem setUseGuillemets StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression MethodInvocation npSettings MemberReference ! showem setUseGuillemets StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent StatementExpression MethodInvocation MemberReference doUndoable	0
MethodDeclaration Modifier public setEnabled FormalParameter BasicType boolean enabled ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType Component VariableDeclarator component MethodInvocation getComponents BlockStatement StatementExpression MethodInvocation component MemberReference enabled setEnabled	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType AbstractArgoJPanel getDetailsTabs ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public BasicType boolean isALinkObject FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType LinkObject	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType UMLCheckBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLCheckBox2 VariableDeclarator source Cast ReferenceType UMLCheckBox2 MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation source getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAStructuralFeature getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference target StatementExpression MethodInvocation Model MethodInvocation MemberReference m TernaryExpression MethodInvocation source isSelected MethodInvocation Model MethodInvocation getClassifier getScopeKind MethodInvocation Model MethodInvocation getInstance getScopeKind setTargetScope getCoreHelper	0
MethodDeclaration Modifier final protected removeAllElementListeners FormalParameter ReferenceType PropertyChangeListener listener ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator lis MemberReference listeners BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator property MemberReference ArraySelector Literal 1 lis IfStatement BinaryOperation == MemberReference property Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference listener MemberReference ArraySelector Literal 0 lis removeModelEventListener getPump IfStatement BinaryOperation instanceof MemberReference property ReferenceType String BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference listener MemberReference ArraySelector Literal 0 lis Cast ReferenceType String MemberReference property removeModelEventListener getPump IfStatement BinaryOperation instanceof MemberReference property ReferenceType String BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference listener MemberReference ArraySelector Literal 0 lis Cast ReferenceType String MemberReference property removeModelEventListener getPump BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Internal error in removeAllElementListeners" StatementExpression MethodInvocation listeners clear	1
MethodDeclaration Modifier public targetRemoved FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation setTarget	0
MethodDeclaration Modifier public ReferenceType Object getCallEvent ReturnStatement ClassReference ReferenceType CallEvent	0
MethodDeclaration Modifier protected ReferenceType Object getNewNode FormalParameter BasicType int arg0 ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override BasicType boolean canAddNode FormalParameter ReferenceType Object node IfStatement BinaryOperation == MemberReference node Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation MethodInvocation MemberReference node contains getNodes BlockStatement ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference node isAComment getFacade BlockStatement ReturnStatement Literal true ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference node isAModelElement getFacade BinaryOperation == MethodInvocation Model MethodInvocation MemberReference node getNamespace getFacade MethodInvocation	0
MethodDeclaration Modifier public ReferenceType List getUserDefinedModelList ReturnStatement MemberReference models	0
MethodDeclaration Modifier public ReferenceType Object getTarget ReturnStatement MemberReference panelTarget	0
MethodDeclaration Modifier private static ReferenceType Profile getMatchingUserDefinedProfile FormalParameter ReferenceType String fileName FormalParameter ReferenceType ProfileManager profileManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator candidateProfile MethodInvocation profileManager getRegisteredProfiles BlockStatement IfStatement BinaryOperation instanceof MemberReference candidateProfile ReferenceType UserDefinedProfile BlockStatement LocalVariableDeclaration ReferenceType UserDefinedProfile VariableDeclarator userProfile Cast ReferenceType UserDefinedProfile MemberReference candidateProfile IfStatement BinaryOperation && BinaryOperation != MethodInvocation userProfile Literal null MethodInvocation fileName MethodInvocation userProfile MethodInvocation getName equals BlockStatement ReturnStatement MemberReference userProfile ReturnStatement Literal null	0
MethodDeclaration deletePseudostate FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier private FormalParameter ReferenceType Rectangle r StatementExpression MethodInvocation ClassCreator ReferenceType FigEmptyRect MemberReference r x MemberReference r y MemberReference r width MemberReference r height setBigPort StatementExpression MethodInvocation MethodInvocation Literal false setFilled getBigPort StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getBigPort StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference r setBounds	1
MethodDeclaration Modifier public setEnabled FormalParameter BasicType boolean enabled StatementExpression SuperMethodInvocation MemberReference enabled setEnabled ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType Component VariableDeclarator component MethodInvocation getComponents BlockStatement StatementExpression MethodInvocation component MemberReference enabled setEnabled	1
MethodDeclaration Modifier public remove FormalParameter ReferenceType LayoutedObject object StatementExpression MethodInvocation objects MemberReference object remove	0
MethodDeclaration Modifier public ReferenceType String getHeadline ReturnStatement MemberReference headline	0
MethodDeclaration Modifier public targetSet FormalParameter ReferenceType TargetEvent e StatementExpression MethodInvocation setTarget	0
MethodDeclaration Modifier public final mLSQUARE FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference LSQUARE = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal '[' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference MemberReference TV_NAME_POINTER getTagDefinition	0
MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType DestroyObjectAction	0
MethodDeclaration Modifier private addUserDefinedProfile FormalParameter ReferenceType String fileName FormalParameter ReferenceType StringBuffer xmi FormalParameter ReferenceType ProfileManager profileManager IOException LocalVariableDeclaration ReferenceType File VariableDeclarator profilesDirectory MethodInvocation MemberReference profileManager getProfilesDirectory LocalVariableDeclaration ReferenceType File VariableDeclarator profileFile ClassCreator ReferenceType File MemberReference profilesDirectory MemberReference fileName LocalVariableDeclaration ReferenceType OutputStreamWriter VariableDeclarator writer ClassCreator ReferenceType OutputStreamWriter ClassCreator ReferenceType FileOutputStream MemberReference profileFile MethodInvocation Argo getEncoding StatementExpression MethodInvocation writer MethodInvocation xmi toString write StatementExpression MethodInvocation writer close StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Wrote user defined profile \"" MemberReference profileFile Literal "\", with size " MethodInvocation xmi length Literal "." info IfStatement MethodInvocation MemberReference profileManager BlockStatement StatementExpression MethodInvocation profileManager refreshRegisteredProfiles BlockStatement StatementExpression MethodInvocation profileManager MethodInvocation profilesDirectory getAbsolutePath addSearchPathDirectory	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation getDesignerName	1
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dm computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier private preRead FormalParameter ReferenceType Project theProject StatementExpression MethodInvocation LOG Literal "=======================================" info StatementExpression MethodInvocation LOG BinaryOperation + Literal "== READING PROJECT " MemberReference theProject info StatementExpression Assignment MemberReference project MemberReference theProject = StatementExpression Assignment MemberReference ps MethodInvocation project getProjectSettings = StatementExpression Assignment MemberReference MethodInvocation ps getDefaultDiagramSettings = StatementExpression Assignment MemberReference notationSettings MethodInvocation ps getNotationSettings =	1
MethodDeclaration Modifier public BasicType boolean isUndoable LocalVariableDeclaration Modifier final ReferenceType Iterator TypeArgument ReferenceType Command VariableDeclarator it MethodInvocation commands iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration Modifier final ReferenceType Command VariableDeclarator command MethodInvocation it next IfStatement MethodInvocation ! command isUndoable BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType String getAlias FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier private addMenuItemForBothEndsOf FormalParameter ReferenceType Object edge LocalVariableDeclaration ReferenceType Collection VariableDeclarator coll Literal null IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference edge isAAssociation getFacade MethodInvocation Model MethodInvocation MemberReference edge isALink getFacade BlockStatement StatementExpression Assignment MemberReference coll MethodInvocation Model MethodInvocation MemberReference edge getConnections getFacade = IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference edge isAAbstraction getFacade MethodInvocation Model MethodInvocation MemberReference edge isADependency getFacade BlockStatement StatementExpression Assignment MemberReference coll ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation coll MethodInvocation Model MethodInvocation MemberReference edge getFacade addAll StatementExpression MethodInvocation coll MethodInvocation Model MethodInvocation MemberReference edge getSuppliers getFacade addAll IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAGeneralization getFacade BlockStatement StatementExpression Assignment MemberReference coll ClassCreator ReferenceType ArrayList = LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MemberReference edge getGeneral getFacade StatementExpression MethodInvocation coll MemberReference parent add StatementExpression MethodInvocation coll MethodInvocation Model MethodInvocation MemberReference parent getChildren getFacade addAll IfStatement BinaryOperation == MemberReference coll Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation coll iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation iter next IfStatement BinaryOperation != MemberReference me Literal null BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference me isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference me MethodInvocation Model MethodInvocation MemberReference me getType getFacade = IfStatement BinaryOperation != MemberReference me Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference me getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation == MethodInvocation name length Literal 0 BlockStatement StatementExpression Assignment MemberReference name Literal "(anon element)" = LocalVariableDeclaration ReferenceType Action VariableDeclarator action ClassCreator ReferenceType ActionAddExistingRelatedNode BinaryOperation + BinaryOperation + MethodInvocation Literal "menu.popup.add-to-diagram" menuLocalize Literal ": " MemberReference name MemberReference me StatementExpression This MethodInvocation MemberReference action add	1
MethodDeclaration Modifier public setPlacementHint FormalParameter BasicType int hint StatementExpression Assignment MemberReference placementHint MemberReference hint =	0
MethodDeclaration Modifier public static ReferenceType TransformerManager getInstance ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Object ReturnStatement MemberReference theRootModel	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object source ReturnStatement MethodInvocation Model MethodInvocation MemberReference source getModelElementContainer getFacade	0
MethodDeclaration Modifier private ParseCastOrGroup FeatureNotSupportedException LocalVariableDeclaration ReferenceType ExpressionNode VariableDeclarator interior MethodInvocation ParseExpression StatementExpression MethodInvocation MemberReference TokenID RParen AssertAndAdvance LocalVariableDeclaration BasicType int VariableDeclarator rightTok MemberReference curtok id IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference interior ReferenceType IType BinaryOperation == MemberReference rightTok MemberReference TokenID Semi BinaryOperation == MemberReference rightTok MemberReference TokenID RParen BinaryOperation == MemberReference rightTok MemberReference TokenID RCurly BinaryOperation == MemberReference rightTok MemberReference TokenID RBracket BinaryOperation == MemberReference rightTok MemberReference TokenID Comma BlockStatement StatementExpression MethodInvocation exprStack ClassCreator ReferenceType ParenthesizedExpression MemberReference interior push StatementExpression MethodInvocation ParseContinuingPrimary BlockStatement LocalVariableDeclaration ReferenceType ParenthesizedExpression VariableDeclarator pe ClassCreator ReferenceType ParenthesizedExpression StatementExpression MethodInvocation exprStack MemberReference pe push StatementExpression MethodInvocation ParseExpressionSegment LocalVariableDeclaration ReferenceType ExpressionNode VariableDeclarator peek MethodInvocation exprStack peek IfStatement BinaryOperation || BinaryOperation instanceof MemberReference peek ReferenceType PrimaryExpression BinaryOperation instanceof MemberReference peek ReferenceType UnaryExpression BlockStatement LocalVariableDeclaration ReferenceType UnaryCastExpression VariableDeclarator castNode ClassCreator ReferenceType UnaryCastExpression StatementExpression Assignment MemberReference castNode Type Cast ReferenceType IType MemberReference interior = StatementExpression Assignment MemberReference castNode Child MethodInvocation exprStack pop = StatementExpression MethodInvocation exprStack pop StatementExpression MethodInvocation exprStack MemberReference castNode push BlockStatement StatementExpression Assignment MemberReference pe Expression MemberReference interior = StatementExpression MethodInvocation ParseContinuingPrimary	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig createBigPortFig ReturnStatement ClassCreator ReferenceType FigRect MemberReference MemberReference MemberReference DEFAULT_WIDTH MemberReference MemberReference DEBUG_COLOR MemberReference DEBUG_COLOR	0
MethodDeclaration Modifier protected Annotation Override BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2 TYPE_ATTRIBUTE	0
MethodDeclaration Modifier public BasicType boolean isRedoable ReturnStatement Literal true	0
MethodDeclaration Modifier private static traverseDir FormalParameter ReferenceType File dir FormalParameter ReferenceType FileAction action IOException IfStatement MethodInvocation dir exists BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation dir listFiles ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation isDirectory files BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i files MemberReference action traverseDir BlockStatement StatementExpression MethodInvocation action MemberReference ArraySelector MemberReference i files act StatementExpression MethodInvocation action MemberReference dir act	1
MethodDeclaration Modifier public start LocalVariableDeclaration ReferenceType Thread VariableDeclarator t MethodInvocation threadVar get IfStatement BinaryOperation != MemberReference t Literal null BlockStatement StatementExpression MethodInvocation t start	0
MethodDeclaration Modifier public ReferenceType SourcePathTableModel ReturnStatement ClassCreator ReferenceType SourcePathTableModel This	0
MethodDeclaration Modifier private ReferenceType String generateArtifactImports FormalParameter ReferenceType Object artifact LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator ret ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Object VariableDeclarator compNamespace MethodInvocation Model MethodInvocation MemberReference artifact getNamespace getFacade LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation Model MethodInvocation MemberReference artifact getClientDependencies getFacade BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator isJavaImport Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation Model MethodInvocation MemberReference o getStereotypes getFacade BlockStatement IfStatement Literal MethodInvocation MethodInvocation Model MethodInvocation MemberReference stereotype getName getFacade equals "javaImport" BlockStatement StatementExpression Assignment MemberReference isJavaImport Literal true = BreakStatement IfStatement MemberReference isJavaImport BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator elem MethodInvocation Model MethodInvocation MemberReference o getSuppliers getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference elem getNamespace getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference ns Literal null MethodInvocation ! ns MemberReference compNamespace equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference ns getPackageName StatementExpression MethodInvocation ret Literal "import " append IfStatement BinaryOperation && BinaryOperation != MemberReference packageName Literal null BinaryOperation > MethodInvocation packageName length Literal 0 BlockStatement StatementExpression MethodInvocation ret MethodInvocation MemberReference ns getPackageName append StatementExpression MethodInvocation ret Literal '.' append StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference elem getName getFacade append IfStatement MethodInvocation Model MethodInvocation MemberReference elem isAPackage getFacade BlockStatement StatementExpression MethodInvocation ret Literal ".*" append StatementExpression MethodInvocation ret Literal ";" append StatementExpression MethodInvocation ret MemberReference LINE_SEPARATOR append StatementExpression Assignment MemberReference found Literal true = IfStatement MemberReference found BlockStatement StatementExpression MethodInvocation ret MemberReference LINE_SEPARATOR append ReturnStatement MethodInvocation ret toString	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal " MethodInvocation getName	0
MethodDeclaration Modifier private update LocalVariableDeclaration ReferenceType String VariableDeclarator oldText MethodInvocation getText LocalVariableDeclaration ReferenceType String VariableDeclarator newText MethodInvocation model getLanguage IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference oldText Literal null BinaryOperation == MemberReference newText Literal null MethodInvocation ! oldText MemberReference newText equals BlockStatement IfStatement BinaryOperation != MemberReference oldText MemberReference newText BlockStatement StatementExpression MethodInvocation MemberReference newText setText	1
MethodDeclaration Modifier public Annotation Override BasicType int getLineWidth ReturnStatement MethodInvocation getLineWidth	0
MethodDeclaration Modifier public addListener FormalParameter ReferenceType PerspectiveManagerListener listener StatementExpression MethodInvocation perspectiveListeners MemberReference listener add	0
MethodDeclaration Modifier protected updateConditionText IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation Model MethodInvocation MethodInvocation getOwner getCondition getFacade IfStatement BinaryOperation == MemberReference c Literal null BlockStatement StatementExpression MethodInvocation condition Literal "" setText BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator expr MethodInvocation Model MethodInvocation MemberReference c getBody getFacade IfStatement BinaryOperation == MemberReference expr Literal null BlockStatement StatementExpression MethodInvocation condition Literal "" setText BlockStatement StatementExpression MethodInvocation condition Cast ReferenceType String MemberReference expr setText StatementExpression MethodInvocation fg calcBounds StatementExpression MethodInvocation endTrans	0
MethodDeclaration Modifier public FormalParameter ReferenceType node LocalVariableDeclaration ReferenceType Object VariableDeclarator left MemberReference val StatementExpression Assignment MemberReference val Literal null = StatementExpression MethodInvocation MemberReference node inAMultiplicativeExpressionTail IfStatement BinaryOperation != MethodInvocation node getMultiplyOperator Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getMultiplyOperator IfStatement BinaryOperation != MethodInvocation node getUnaryExpression Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getUnaryExpression LocalVariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation node getMultiplyOperator LocalVariableDeclaration ReferenceType Object VariableDeclarator right MemberReference val StatementExpression Assignment MemberReference val Literal null = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference left Literal null BinaryOperation != MemberReference op Literal null BinaryOperation != MemberReference right Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference op ReferenceType BlockStatement StatementExpression Assignment MemberReference val BinaryOperation / MethodInvocation MemberReference left MemberReference node asInteger MethodInvocation MemberReference right MemberReference node asInteger = IfStatement BinaryOperation instanceof MemberReference op ReferenceType BlockStatement StatementExpression Assignment MemberReference val BinaryOperation * MethodInvocation MemberReference left MemberReference node asInteger MethodInvocation MemberReference right MemberReference node asInteger = BlockStatement StatementExpression MethodInvocation MemberReference node error BlockStatement StatementExpression MethodInvocation MemberReference node error StatementExpression MethodInvocation MemberReference node outAMultiplicativeExpressionTail	0
MethodDeclaration Modifier public static ReferenceType StateMachinesFactory getStateMachinesFactory ReturnStatement MethodInvocation impl getStateMachinesFactory	0
MethodDeclaration Modifier public load FormalParameter ReferenceType Project project FormalParameter ReferenceType InputSource inputSource OpenException TryStatement LocalVariableDeclaration ReferenceType ProfileConfigurationParser VariableDeclarator parser ClassCreator ReferenceType ProfileConfigurationParser StatementExpression MethodInvocation parser MemberReference inputSource parse LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Profile VariableDeclarator profiles MethodInvocation parser getProfiles LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator unresolved MethodInvocation parser getUnresolvedFilenames IfStatement MethodInvocation ! unresolved isEmpty BlockStatement StatementExpression MethodInvocation profiles MethodInvocation MemberReference unresolved loadUnresolved addAll LocalVariableDeclaration ReferenceType ProfileConfiguration VariableDeclarator pc ClassCreator ReferenceType ProfileConfiguration MemberReference project MemberReference profiles StatementExpression MethodInvocation project MemberReference pc setProfileConfiguration CatchClause CatchClauseParameter Exception e IfStatement BinaryOperation instanceof MemberReference e ReferenceType OpenException BlockStatement ThrowStatement Cast ReferenceType OpenException MemberReference e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e	1
MethodDeclaration Modifier public final setSelected FormalParameter BasicType boolean selected StatementExpression Assignment This MemberReference value MemberReference selected =	0
MethodDeclaration Modifier protected ReferenceType JLabel getFillLabel ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType String makeAbstractionName FormalParameter ReferenceType Object child FormalParameter ReferenceType Object parent ReturnStatement MethodInvocation MemberReference child MemberReference parent	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated ReferenceType Project getProject ReturnStatement MethodInvocation This getProject	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object operation IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Collaboration BinaryOperation || BinaryOperation == MemberReference operation Literal null BinaryOperation instanceof MemberReference operation ReferenceType Operation BlockStatement StatementExpression Cast ReferenceType Collaboration MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or operation: " MemberReference operation	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object kind IfStatement BinaryOperation instanceof MemberReference kind ReferenceType PseudostateKind BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException TryStatement ReturnStatement MethodInvocation MemberReference kind equals CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public BasicType boolean setName FormalParameter ReferenceType String sAuthorName IfStatement BinaryOperation && BinaryOperation != MemberReference sAuthorName Literal null BinaryOperation > MethodInvocation sAuthorName MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment This MemberReference sName MethodInvocation sAuthorName trim = StatementExpression Assignment This MemberReference sEmail Literal null = ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAEnumeration getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList IfStatement BinaryOperation && BinaryOperation != MethodInvocation Model MethodInvocation MemberReference parent getEnumerationLiterals getFacade Literal null BinaryOperation > MethodInvocation Model MethodInvocation MemberReference parent getEnumerationLiterals MethodInvocation size getFacade Literal 0 BlockStatement StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference parent getEnumerationLiterals getFacade addAll ReturnStatement MemberReference list ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public BasicType int getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public BasicType boolean isSubType FormalParameter ReferenceType Object type FormalParameter ReferenceType Object IfStatement BinaryOperation || BinaryOperation instanceof MemberReference type ReferenceType Class BinaryOperation instanceof MemberReference ReferenceType Class BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "type and must be instances of ReturnStatement Cast ReferenceType Class MemberReference type	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object transition FormalParameter ReferenceType Object event StatementExpression MethodInvocation impl MemberReference transition MemberReference event	0
MethodDeclaration Modifier public mousePressed FormalParameter ReferenceType MouseEvent e IfStatement MethodInvocation e isPopupTrigger BlockStatement LocalVariableDeclaration ReferenceType JPopupMenu VariableDeclarator popup ClassCreator ReferenceType JPopupMenu ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator action MemberReference actions BlockStatement IfStatement BinaryOperation instanceof MemberReference action ReferenceType Action BlockStatement StatementExpression MethodInvocation popup Cast ReferenceType Action MemberReference action add IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation popup MemberReference add StatementExpression MethodInvocation popup MemberReference add StatementExpression MethodInvocation popup MemberReference add StatementExpression MethodInvocation popup MemberReference add IfStatement BinaryOperation > MethodInvocation popup getComponentCount Literal 0 BlockStatement StatementExpression MethodInvocation popup This MethodInvocation e getX MethodInvocation e getY show StatementExpression MethodInvocation e consume	0
MethodDeclaration Modifier public Annotation Override renderingChanged StatementExpression SuperMethodInvocation renderingChanged LocalVariableDeclaration ReferenceType Object VariableDeclarator state MethodInvocation getOwner AssertStatement BinaryOperation != MemberReference state Literal null IfStatement BinaryOperation == MemberReference state Literal null BlockStatement ReturnStatement IfStatement BinaryOperation != MemberReference notationProviderBody Literal null BlockStatement StatementExpression MethodInvocation internal MethodInvocation notationProviderBody MethodInvocation getOwner MethodInvocation getNotationSettings toString setText StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation MethodInvocation getBounds setBounds	1
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference actionMInterface Literal null BlockStatement StatementExpression Assignment MemberReference actionMInterface ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getInterface getMetaTypes Literal "button.new-interface" = ReturnStatement MemberReference actionMInterface	0
MethodDeclaration Modifier public ReferenceType Object getClassifier ReturnStatement ClassReference ReferenceType Classifier	0
MethodDeclaration Modifier public ReferenceType SuffixFilter getSuffixFilters LocalVariableDeclaration ReferenceType SuffixFilter VariableDeclarator result ArrayInitializer ClassCreator ReferenceType SuffixFilter ArrayCreator ReferenceType String ArrayInitializer Literal "class" Literal "jar" Literal "Java files" ClassCreator ReferenceType SuffixFilter Literal "class" Literal "Java class files" ClassCreator ReferenceType SuffixFilter Literal "jar" Literal "Java JAR files" ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getTransition getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public setOutgoingBelowButtonEnabled FormalParameter BasicType boolean b StatementExpression Assignment MemberReference showOutgoingBelow MemberReference b =	0
MethodDeclaration Modifier static markPosition FormalParameter ReferenceType FigEdge fe FormalParameter BasicType int pct FormalParameter BasicType int delta FormalParameter BasicType int angle FormalParameter BasicType int offset FormalParameter ReferenceType Color color IfStatement Literal false BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f StatementExpression Assignment MemberReference f ClassCreator ReferenceType FigCircle Literal 0 Literal 0 Literal 5 Literal 5 MemberReference color MemberReference Color red = StatementExpression MethodInvocation fe MemberReference f ClassCreator ReferenceType PathItemPlacement MemberReference fe MemberReference f MemberReference pct MemberReference delta MemberReference angle Literal 0 addPathItem StatementExpression Assignment MemberReference f ClassCreator ReferenceType FigRect Literal 0 Literal 0 Literal 100 Literal 20 MemberReference color MemberReference Color red = StatementExpression MethodInvocation f Literal false setFilled StatementExpression MethodInvocation fe MemberReference f ClassCreator ReferenceType PathItemPlacement MemberReference fe MemberReference f MemberReference pct MemberReference delta MemberReference angle MemberReference offset addPathItem StatementExpression Assignment MemberReference f ClassCreator ReferenceType FigCircle Literal 0 Literal 0 Literal 5 Literal 5 MemberReference color MemberReference Color blue = StatementExpression MethodInvocation fe MemberReference f ClassCreator ReferenceType PathItemPlacement MemberReference fe MemberReference f MemberReference pct MemberReference delta MemberReference angle MemberReference offset addPathItem	1
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator listeners ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference newOwner ArrayCreator ReferenceType String ArrayInitializer Literal "condition" Literal "remove" add StatementExpression MethodInvocation MemberReference listeners updateElementListeners	1
MethodDeclaration Modifier public addChangeListener FormalParameter ReferenceType ChangeListener l StatementExpression MethodInvocation listenerList ClassReference ReferenceType ChangeListener MemberReference l add StatementExpression MethodInvocation LOG Literal ">>Add listener" debug	0
MethodDeclaration Modifier public static ReferenceType Namespace parse FormalParameter ReferenceType String fqn FormalParameter ReferenceType String token LocalVariableDeclaration ReferenceType String VariableDeclarator myFqn MemberReference fqn LocalVariableDeclaration ReferenceType StringNamespace VariableDeclarator sns ClassCreator ReferenceType StringNamespace MemberReference token LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation myFqn MemberReference token indexOf WhileStatement BinaryOperation > MemberReference i Literal - 1 BlockStatement StatementExpression MethodInvocation sns MethodInvocation myFqn Literal 0 MemberReference i substring StatementExpression Assignment MemberReference myFqn MethodInvocation myFqn BinaryOperation + MemberReference i MethodInvocation token length substring = StatementExpression Assignment MemberReference i MethodInvocation myFqn MemberReference token indexOf = IfStatement BinaryOperation > MethodInvocation myFqn length Literal 0 BlockStatement StatementExpression MethodInvocation sns MemberReference myFqn ReturnStatement MemberReference sns	0
MethodDeclaration Modifier public BasicType boolean isAFinalState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType FinalState	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType GeneralizableElement FormalParameter ReferenceType Object cls1 IfStatement BinaryOperation instanceof MemberReference cls1 ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator ge Cast ReferenceType GeneralizableElement MemberReference cls1 LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType GeneralizableElement TryStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator toBeAdded MethodInvocation MemberReference ge getSupertypes DoStatement MethodInvocation ! toBeAdded isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator newlyAdded ClassCreator ReferenceType HashSet TypeArgument ReferenceType GeneralizableElement ForStatement EnhancedForControl VariableDeclaration ReferenceType GeneralizableElement VariableDeclarator element MemberReference toBeAdded BlockStatement StatementExpression MethodInvocation newlyAdded MethodInvocation MemberReference element getSupertypes addAll StatementExpression MethodInvocation result MemberReference toBeAdded addAll StatementExpression Assignment MemberReference toBeAdded MemberReference newlyAdded = StatementExpression MethodInvocation toBeAdded MemberReference result removeAll CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType Object getPseudostateKind ReturnStatement ClassReference ReferenceType PseudostateKind	0
MethodDeclaration Modifier public ReferenceType Object getOwner FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Attribute BinaryOperation != Cast ReferenceType Attribute MemberReference handle Literal null BlockStatement ReturnStatement Cast ReferenceType Attribute MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Feature BlockStatement ReturnStatement Cast ReferenceType Feature MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation MethodInvocation isFilled getBigPort	0
MethodDeclaration Modifier public Annotation Override ReferenceType String getExtension ReturnStatement Literal "xml"	0
MethodDeclaration Modifier public setSource FormalParameter ReferenceType Object theSource IfStatement BinaryOperation == MemberReference theSource Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The source of a edge cannot be null" IfStatement MethodInvocation ! Model getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The source of the CommentEdge cannot be a " MethodInvocation theSource MethodInvocation getName getClass StatementExpression Assignment This MemberReference source MemberReference theSource =	0
MethodDeclaration Modifier protected removeAll FormalParameter ReferenceType Collection col LocalVariableDeclaration BasicType int VariableDeclarator first Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator last Literal - 1 StatementExpression Assignment MemberReference fireListEvents Literal false = ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference col BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation MemberReference o getIndexOf StatementExpression MethodInvocation MemberReference o removeElement IfStatement BinaryOperation == MemberReference first Literal - 1 BlockStatement StatementExpression Assignment MemberReference first MemberReference index = StatementExpression Assignment MemberReference last MemberReference index = BlockStatement IfStatement BinaryOperation != MemberReference index BinaryOperation + MemberReference last Literal 1 BlockStatement StatementExpression Assignment MemberReference fireListEvents Literal true = StatementExpression MethodInvocation This MemberReference first MemberReference last fireIntervalRemoved StatementExpression Assignment MemberReference fireListEvents Literal false = StatementExpression Assignment MemberReference first MemberReference index = StatementExpression Assignment MemberReference last MemberReference index = BlockStatement StatementExpression MemberReference ++ last StatementExpression Assignment MemberReference fireListEvents Literal true =	0
MethodDeclaration Modifier public ReferenceType Object getLink ReturnStatement ClassReference ReferenceType Link	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object message FormalParameter ReferenceType Object ReturnStatement MethodInvocation impl MemberReference message MemberReference	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier private BasicType int getEmptyLanguage FormalParameter ReferenceType String tabValues LocalVariableDeclaration BasicType int VariableDeclarator num Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation && BinaryOperation < MemberReference i MemberReference tabValues length BinaryOperation == MemberReference num Literal - 1 Assignment MemberReference i Literal 2 += BlockStatement IfStatement MemberReference ArraySelector MemberReference i MethodInvocation Literal "" equals tabValues BlockStatement StatementExpression Assignment MemberReference num BinaryOperation / BinaryOperation - MemberReference i Literal 1 Literal 2 = ReturnStatement MemberReference num	1
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setFillColor	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference parent getOwner getFacade Literal null BlockStatement StatementExpression MethodInvocation set MethodInvocation Model MethodInvocation MemberReference parent getOwner getFacade add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent me IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement IfStatement BinaryOperation >= MethodInvocation me getClickCount Literal 2 BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation ClassCreator ReferenceType Rectangle BinaryOperation - MethodInvocation me getX Literal 2 BinaryOperation - MethodInvocation me getY Literal 2 Literal 4 Literal 4 IfStatement BinaryOperation instanceof MemberReference f ReferenceType MouseListener BlockStatement StatementExpression Cast ReferenceType MouseListener MemberReference f IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o This MethodInvocation getFigs BlockStatement StatementExpression Assignment MemberReference f Cast ReferenceType Fig MemberReference o = IfStatement BinaryOperation && BinaryOperation instanceof MemberReference f ReferenceType MouseListener BinaryOperation instanceof MemberReference f ReferenceType FigText BlockStatement IfStatement Cast ReferenceType FigText MemberReference f BlockStatement StatementExpression Cast ReferenceType MouseListener MemberReference f StatementExpression MethodInvocation me consume	1
MethodDeclaration Modifier protected handleMember FormalParameter ReferenceType XMLElement e SAXException IfStatement BinaryOperation == MemberReference e Literal null BlockStatement ThrowStatement ClassCreator ReferenceType SAXException Literal "XML element is null" LocalVariableDeclaration ReferenceType String VariableDeclarator type MethodInvocation e Literal "type" getAttribute StatementExpression MethodInvocation memberList MemberReference type add	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement BinaryOperation != MethodInvocation modeChoice getSelectedIndex Literal 1 BlockStatement StatementExpression MethodInvocation changingPanel MemberReference autoPanel remove StatementExpression MethodInvocation changingPanel MemberReference manuPanel MemberReference CENTER add StatementExpression MethodInvocation pack BlockStatement StatementExpression MethodInvocation changingPanel MemberReference manuPanel remove StatementExpression MethodInvocation changingPanel MemberReference autoPanel MemberReference CENTER add StatementExpression MethodInvocation pack	0
MethodDeclaration Modifier public Annotation Override addNode FormalParameter ReferenceType Object node IfStatement MethodInvocation ! MemberReference node canAddNode BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MemberReference node add getNodes IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference node isAModelElement getFacade BinaryOperation == MethodInvocation Model MethodInvocation MemberReference node getNamespace getFacade Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getHomeModel MemberReference node addOwnedElement getCoreHelper StatementExpression MethodInvocation MemberReference node fireNodeAdded	1
MethodDeclaration Modifier protected ReferenceType String getInstructions ReturnStatement MethodInvocation Literal "-ins" getLocalizedString	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigSimpleState VariableDeclarator figClone Cast ReferenceType FigSimpleState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType FigRect MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig StatementExpression Assignment MemberReference figClone Cast ReferenceType FigLine MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setInternal ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAAssociationEnd getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getConnections MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier public static ReferenceType ModelEventPump getPump ReturnStatement MethodInvocation impl getModelEventPump	0
MethodDeclaration Modifier public BasicType boolean isPackage FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MethodInvocation MemberReference handle getVisibility equals	0
MethodDeclaration Modifier public removeStereotype FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereo TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference modelElement ReferenceType ModelElement BinaryOperation instanceof MemberReference stereo ReferenceType Stereotype BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MemberReference modelElement LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MemberReference stereo IfStatement MethodInvocation me MethodInvocation MemberReference stereo contains getStereotype BlockStatement StatementExpression MethodInvocation me MethodInvocation MemberReference stereotype remove getStereotype ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference modelElement Literal " or " MemberReference stereo	0
MethodDeclaration Modifier public static ReferenceType DataTypesFactory getDataTypesFactory ReturnStatement MethodInvocation impl getDataTypesFactory	0
MethodDeclaration Modifier protected BasicType int countSuccessors FormalParameter ReferenceType Object message LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference message getActivator getFacade LocalVariableDeclaration Modifier final ReferenceType Collection VariableDeclarator successors MethodInvocation Model MethodInvocation MemberReference message getSuccessors getFacade IfStatement BinaryOperation != MemberReference successors Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator suc MemberReference successors BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference suc getActivator getFacade MemberReference BlockStatement ContinueStatement StatementExpression MemberReference ++ count ReturnStatement MemberReference count	0
MethodDeclaration Modifier public TypeParameter A ReferenceType A toArray FormalParameter ReferenceType A arg0 ReturnStatement MethodInvocation list MemberReference arg0 toArray	0
MethodDeclaration Modifier public startSpan FormalParameter ReferenceType DOMBuilder rtf SAXException IfStatement MemberReference ! stylesheetFO BlockStatement LocalVariableDeclaration ReferenceType AttributesImpl VariableDeclarator spanAttr ClassCreator ReferenceType AttributesImpl StatementExpression MethodInvocation spanAttr Literal "" Literal "class" Literal "class" Literal "CDATA" Literal "co" addAttribute StatementExpression MethodInvocation rtf Literal "" Literal "span" Literal "span" MemberReference spanAttr startElement	0
MethodDeclaration Modifier public undo StatementExpression MethodInvocation npSettings MemberReference ! showem setShowProperties StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent	0
MethodDeclaration Modifier public ReferenceType Object getDestination FormalParameter ReferenceType Object relationship IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference relationship ReferenceType Relationship BinaryOperation instanceof MemberReference relationship ReferenceType Link BinaryOperation instanceof MemberReference relationship ReferenceType Message BinaryOperation instanceof MemberReference relationship ReferenceType AssociationEnd BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Argument is not " Literal "a relationship" TryStatement IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Link BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation modelImpl MethodInvocation MemberReference relationship getConnections MethodInvocation iterator getFacade IfStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation it next IfStatement MethodInvocation it hasNext BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MethodInvocation it next getInstance getFacade BlockStatement ReturnStatement Literal null BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType UmlAssociation BlockStatement LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator assoc Cast ReferenceType UmlAssociation MemberReference relationship LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AssociationEnd VariableDeclarator conns MethodInvocation assoc getConnection IfStatement BinaryOperation <= MethodInvocation conns size Literal 1 BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation conns MethodInvocation getParticipant Literal 1 get IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Generalization BlockStatement LocalVariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Generalization MemberReference relationship ReturnStatement MethodInvocation gen getParent IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Dependency BlockStatement LocalVariableDeclaration ReferenceType Dependency VariableDeclarator dep Cast ReferenceType Dependency MemberReference relationship LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator col MethodInvocation dep getSupplier IfStatement MethodInvocation col isEmpty BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation MemberReference col getFirstItemOrNull IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Flow BlockStatement LocalVariableDeclaration ReferenceType Flow VariableDeclarator flow Cast ReferenceType Flow MemberReference relationship LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator col MethodInvocation flow getTarget IfStatement MethodInvocation col isEmpty BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation MemberReference col getFirstItemOrNull IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Extend BlockStatement LocalVariableDeclaration ReferenceType Extend VariableDeclarator extend Cast ReferenceType Extend MemberReference relationship ReturnStatement MethodInvocation extend getBase IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Include BlockStatement LocalVariableDeclaration ReferenceType Include VariableDeclarator include Cast ReferenceType Include MemberReference relationship ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference include getAddition getFacade IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference relationship IfStatement BinaryOperation instanceof MemberReference relationship ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference relationship CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType String getPath FormalParameter ReferenceType Object o TryStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType StateVertex BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o1 MemberReference o LocalVariableDeclaration ReferenceType Object VariableDeclarator o2 MethodInvocation Model MethodInvocation MemberReference o1 getContainer getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation Model MethodInvocation MemberReference o1 getName getFacade WhileStatement BinaryOperation && BinaryOperation != MemberReference o2 Literal null MethodInvocation Model getFacade BlockStatement StatementExpression Assignment MemberReference path BinaryOperation + BinaryOperation + MethodInvocation Model MethodInvocation MemberReference o2 getName getFacade Literal "::" MemberReference path = StatementExpression Assignment MemberReference o1 MemberReference o2 = StatementExpression Assignment MemberReference o2 MethodInvocation Model MethodInvocation MemberReference o1 getContainer getFacade = ReturnStatement MemberReference path CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a StateVertex"	1
MethodDeclaration Modifier public BasicType int getPriority FormalParameter ReferenceType ListSet offenders FormalParameter ReferenceType Designer dsgr ReturnStatement MemberReference priority	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration ReferenceType getTagDefinition FormalParameter ReferenceType String tagName IfStatement BinaryOperation == MemberReference tagName Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument may not be null" ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation modelImpl MethodInvocation getCore MethodInvocation getTagDefinition MethodInvocation refAllOfClass MethodInvocation iterator getUmlPackage MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator td Cast ReferenceType MethodInvocation i next IfStatement MethodInvocation tagName MethodInvocation td getName equals BlockStatement ReturnStatement MemberReference td LocalVariableDeclaration ReferenceType Object VariableDeclarator rootModel MethodInvocation modelImpl MethodInvocation getModelManagementFactory LocalVariableDeclaration ReferenceType VariableDeclarator td MethodInvocation MemberReference tagName Literal null MemberReference rootModel buildTagDefinition StatementExpression SuperMethodInvocation MemberReference td ReturnStatement MemberReference td	1
MethodDeclaration Modifier public registerToolbar FormalParameter ReferenceType Object key FormalParameter ReferenceType JToolBar newToolbar FormalParameter BasicType int prefferedMenuPosition StatementExpression MethodInvocation MemberReference key MemberReference newToolbar MemberReference prefferedMenuPosition	0
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public ReferenceType Object getParameter FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public readProject FormalParameter ReferenceType Project theProject FormalParameter ReferenceType Reader reader SAXException IfStatement BinaryOperation == MemberReference reader Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A reader must be supplied" StatementExpression MethodInvocation MemberReference theProject preRead TryStatement StatementExpression MethodInvocation MemberReference reader parse CatchClause CatchClauseParameter SAXException e StatementExpression MethodInvocation MethodInvocation reader toString MemberReference e logError ThrowStatement MemberReference e	0
MethodDeclaration Modifier private BasicType boolean isPointCloseToEdgeEnd FormalParameter ReferenceType Point p LocalVariableDeclaration ReferenceType Point VariableDeclarator firstPoint This MethodInvocation getFirstPoint LocalVariableDeclaration ReferenceType Point VariableDeclarator lastPoint This MethodInvocation getLastPoint LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator rSquared Cast BasicType int BinaryOperation * Literal .3 MemberReference length IfStatement BinaryOperation > MemberReference rSquared Literal 100 BlockStatement StatementExpression Assignment MemberReference rSquared Literal 10000 = BlockStatement StatementExpression Assignment MemberReference rSquared MemberReference rSquared *= LocalVariableDeclaration BasicType int VariableDeclarator srcDeterminingFactor MethodInvocation MemberReference p MemberReference firstPoint getSquaredDistance LocalVariableDeclaration BasicType int VariableDeclarator destDeterminingFactor MethodInvocation MemberReference p MemberReference lastPoint getSquaredDistance ReturnStatement BinaryOperation || BinaryOperation < MemberReference destDeterminingFactor MemberReference rSquared BinaryOperation && BinaryOperation < MemberReference srcDeterminingFactor MemberReference rSquared BinaryOperation < MemberReference srcDeterminingFactor MemberReference destDeterminingFactor	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement ReturnStatement Cast ReferenceType Action MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentList	0
MethodDeclaration Modifier private ReferenceType ModelManagementFactoryMDRImpl getModelManagement ReturnStatement Cast ReferenceType ModelManagementFactoryMDRImpl MethodInvocation modelImpl getModelManagementFactory	0
MethodDeclaration Modifier private handleFireGeneratorEvent FormalParameter ReferenceType ArgoGeneratorEvent event FormalParameter ReferenceType ArgoGeneratorEventListener listener SwitchStatement MethodInvocation event getEventType SwitchStatementCase MemberReference ArgoEventTypes GENERATOR_CHANGED StatementExpression MethodInvocation listener MemberReference event generatorChanged BreakStatement SwitchStatementCase MemberReference ArgoEventTypes GENERATOR_ADDED StatementExpression MethodInvocation listener MemberReference event generatorAdded BreakStatement SwitchStatementCase MemberReference ArgoEventTypes GENERATOR_REMOVED StatementExpression MethodInvocation listener MemberReference event generatorRemoved BreakStatement SwitchStatementCase StatementExpression MethodInvocation LOG BinaryOperation + Literal "Invalid event:" MethodInvocation event getEventType error BreakStatement	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object execute ReturnStatement Literal null	0
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project project AssertStatement BinaryOperation != MemberReference project Literal null StatementExpression Assignment MemberReference p MemberReference project =	1
MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation head getLineColor	0
MethodDeclaration Modifier public ReferenceType Object getActivity ReturnStatement ClassReference ReferenceType ActivityGraph	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType OclEnumLiteral BlockStatement ReturnStatement MethodInvocation name Cast ReferenceType OclEnumLiteral MemberReference obj equals IfStatement MethodInvocation Model MethodInvocation MemberReference obj getFacade BlockStatement ReturnStatement MethodInvocation name MethodInvocation Model MethodInvocation MemberReference obj getName getFacade equals BlockStatement ReturnStatement Literal false	0
MethodDeclaration Modifier public static ReferenceType NotationComboBox getInstance IfStatement BinaryOperation == MemberReference singleton Literal null BlockStatement StatementExpression Assignment MemberReference singleton ClassCreator ReferenceType NotationComboBox = ReturnStatement MemberReference singleton	0
MethodDeclaration Modifier public ReferenceType List getPorts FormalParameter ReferenceType Object nodeOrEdge IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAActor getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation result MemberReference nodeOrEdge add ReturnStatement MemberReference result IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAUseCase getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation result MemberReference nodeOrEdge add ReturnStatement MemberReference result ReturnStatement MemberReference Collections EMPTY_LIST	1
MethodDeclaration Modifier public BasicType int getChildCount FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MethodInvocation KnowledgeTypeNode MethodInvocation size IfStatement BinaryOperation instanceof MemberReference parent ReferenceType KnowledgeTypeNode BlockStatement LocalVariableDeclaration ReferenceType KnowledgeTypeNode VariableDeclarator ktn Cast ReferenceType KnowledgeTypeNode MemberReference parent LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator itemList MethodInvocation Designer MethodInvocation getToDoList MethodInvocation theDesigner SynchronizedStatement MemberReference itemList ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference itemList BlockStatement IfStatement MethodInvocation item MethodInvocation ktn getName containsKnowledgeType BlockStatement StatementExpression MemberReference ++ count ReturnStatement MemberReference count ReturnStatement Literal 0	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement StatementExpression MethodInvocation set MemberReference parent add StatementExpression MethodInvocation set MethodInvocation Model MethodInvocation MemberReference parent getModelElementContents getFacade addAll ReturnStatement MemberReference set	0
MethodDeclaration Modifier public static ReferenceType String getShortName FormalParameter ReferenceType String longName FormalParameter BasicType int maxLength LocalVariableDeclaration BasicType char VariableDeclarator vowels ArrayCreator BasicType char ArrayInitializer Literal 'a' Literal 'e' Literal 'i' Literal 'o' Literal 'u' LocalVariableDeclaration ReferenceType String VariableDeclarator shortName MemberReference longName WhileStatement BinaryOperation > MethodInvocation shortName length MemberReference maxLength BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference vowels length MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator lastIndex MethodInvocation shortName MemberReference ArraySelector MemberReference i vowels lastIndexOf IfStatement BinaryOperation > MemberReference lastIndex MemberReference index BlockStatement StatementExpression Assignment MemberReference index MemberReference lastIndex = IfStatement BinaryOperation == MemberReference index Literal - 1 BlockStatement BreakStatement LocalVariableDeclaration ReferenceType String VariableDeclarator firstPart MethodInvocation shortName Literal 0 MemberReference index substring LocalVariableDeclaration ReferenceType String VariableDeclarator lastPart MethodInvocation shortName BinaryOperation + MemberReference index Literal 1 MethodInvocation shortName length substring StatementExpression Assignment MemberReference shortName BinaryOperation + MemberReference firstPart MemberReference lastPart = IfStatement BinaryOperation > MethodInvocation shortName length MemberReference maxLength BlockStatement StatementExpression Assignment MemberReference shortName MethodInvocation shortName Literal 0 MemberReference maxLength substring = ReturnStatement MemberReference shortName	1
MethodDeclaration Modifier public FormalParameter ReferenceType Action save StatementExpression Assignment This MemberReference saveAction MemberReference save = StatementExpression MethodInvocation Designer MemberReference save	0
MethodDeclaration Modifier public Annotation Deprecated addProfile FormalParameter ReferenceType Profile p StatementExpression MethodInvocation MemberReference p Literal null addProfile	1
MethodDeclaration Modifier public handle FormalParameter ReferenceType Throwable t Throwable ThrowStatement MemberReference t	1
MethodDeclaration Modifier public BasicType boolean isValidNamespace FormalParameter ReferenceType Object mObj FormalParameter ReferenceType Object nsObj IfStatement BinaryOperation || BinaryOperation instanceof MemberReference mObj ReferenceType ModelElement BinaryOperation instanceof MemberReference nsObj ReferenceType Namespace BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator modelElement Cast ReferenceType ModelElement MemberReference mObj LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Namespace MemberReference nsObj TryStatement IfStatement BinaryOperation == MemberReference modelElement MemberReference ns BlockStatement ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference ns ReferenceType BinaryOperation instanceof MemberReference ns ReferenceType BinaryOperation instanceof MemberReference ns ReferenceType DataType BinaryOperation instanceof MemberReference ns ReferenceType BinaryOperation instanceof MemberReference ns ReferenceType BinaryOperation instanceof MemberReference ns ReferenceType Signal BinaryOperation instanceof MemberReference ns ReferenceType UseCaseInstance BinaryOperation instanceof MemberReference ns ReferenceType BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ns ReferenceType UseCase BinaryOperation instanceof MemberReference modelElement ReferenceType Classifier BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Component BlockStatement ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference modelElement ReferenceType Component BinaryOperation != MemberReference modelElement MemberReference ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType ComponentInstance BlockStatement ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference modelElement ReferenceType ComponentInstance BinaryOperation != MemberReference modelElement MemberReference ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType org ReferenceType omg ReferenceType uml ReferenceType behavioralelements ReferenceType commonbehavior ReferenceType Object BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType org ReferenceType omg ReferenceType uml ReferenceType behavioralelements ReferenceType commonbehavior ReferenceType Object BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType Link BinaryOperation instanceof MemberReference modelElement ReferenceType UseCaseInstance BinaryOperation instanceof MemberReference modelElement ReferenceType CollaborationInstanceSet BinaryOperation instanceof MemberReference modelElement ReferenceType BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType org ReferenceType omg ReferenceType uml ReferenceType behavioralelements ReferenceType commonbehavior ReferenceType Object BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType Link BinaryOperation instanceof MemberReference modelElement ReferenceType UseCaseInstance BinaryOperation instanceof MemberReference modelElement ReferenceType CollaborationInstanceSet BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType UmlPackage BinaryOperation instanceof MemberReference modelElement ReferenceType UmlClass BinaryOperation instanceof MemberReference modelElement ReferenceType DataType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType UseCase BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType Signal BinaryOperation instanceof MemberReference modelElement ReferenceType UmlAssociation BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BinaryOperation instanceof MemberReference modelElement ReferenceType Dependency BinaryOperation instanceof MemberReference modelElement ReferenceType Constraint BinaryOperation instanceof MemberReference modelElement ReferenceType Collaboration BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType Stereotype BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType ClassifierRole BlockStatement ReturnStatement BinaryOperation instanceof MemberReference ns ReferenceType Collaboration IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Collaboration BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType ClassifierRole BinaryOperation instanceof MemberReference modelElement ReferenceType AssociationRole BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BinaryOperation instanceof MemberReference modelElement ReferenceType Action BinaryOperation instanceof MemberReference modelElement ReferenceType Constraint BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType UmlPackage BlockStatement IfStatement MethodInvocation MemberReference ns isProfilePackage BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType Stereotype BinaryOperation instanceof MemberReference modelElement ReferenceType Constraint BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType DataType BlockStatement ReturnStatement Literal false BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType UmlPackage BinaryOperation instanceof MemberReference modelElement ReferenceType Classifier BinaryOperation instanceof MemberReference modelElement ReferenceType UmlAssociation BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BinaryOperation instanceof MemberReference modelElement ReferenceType Dependency BinaryOperation instanceof MemberReference modelElement ReferenceType Extend BinaryOperation instanceof MemberReference modelElement ReferenceType Include BinaryOperation instanceof MemberReference modelElement ReferenceType Constraint BinaryOperation instanceof MemberReference modelElement ReferenceType Collaboration BinaryOperation instanceof MemberReference modelElement ReferenceType BinaryOperation instanceof MemberReference modelElement ReferenceType Stereotype BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType UmlClass BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference modelElement ReferenceType UmlClass BinaryOperation instanceof MemberReference modelElement ReferenceType UmlAssociation BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BinaryOperation instanceof MemberReference modelElement ReferenceType UseCase BinaryOperation instanceof MemberReference modelElement ReferenceType Constraint BinaryOperation instanceof MemberReference modelElement ReferenceType Dependency BinaryOperation instanceof MemberReference modelElement ReferenceType Collaboration BinaryOperation instanceof MemberReference modelElement ReferenceType DataType BinaryOperation instanceof MemberReference modelElement ReferenceType BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference ns ReferenceType ClassifierRole BlockStatement LocalVariableDeclaration ReferenceType ClassifierRole VariableDeclarator cr Cast ReferenceType ClassifierRole MemberReference ns IfStatement BinaryOperation || MethodInvocation cr MethodInvocation MemberReference modelElement contains MethodInvocation cr MethodInvocation MemberReference modelElement contains BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType StructuralFeature BlockStatement IfStatement MethodInvocation ! Cast ReferenceType StructuralFeature MemberReference modelElement MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType Generalization BlockStatement IfStatement MethodInvocation ! Cast ReferenceType Generalization MemberReference modelElement MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType UmlAssociation BlockStatement IfStatement MethodInvocation ! Cast ReferenceType UmlAssociation MemberReference modelElement MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType Collaboration BlockStatement IfStatement MethodInvocation ! Cast ReferenceType Collaboration MemberReference modelElement MemberReference ns isValidNamespace BlockStatement ReturnStatement Literal false ReturnStatement Literal true CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public ReferenceType Signal buildSignal FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Signal VariableDeclarator signal IfStatement BinaryOperation instanceof MemberReference element ReferenceType BehavioralFeature BlockStatement StatementExpression Assignment MemberReference signal MethodInvocation MemberReference element buildSignalInt = LocalVariableDeclaration ReferenceType BehavioralFeature VariableDeclarator bf Cast ReferenceType BehavioralFeature MemberReference element StatementExpression Cast ReferenceType UmlPackage MethodInvocation bf refOutermostPackage IfStatement BinaryOperation instanceof MemberReference element ReferenceType Reception BlockStatement StatementExpression Assignment MemberReference signal MethodInvocation MemberReference element buildSignalInt = StatementExpression Cast ReferenceType Reception MemberReference element IfStatement BinaryOperation instanceof MemberReference element ReferenceType SendAction BlockStatement StatementExpression Assignment MemberReference signal MethodInvocation MemberReference element buildSignalInt = StatementExpression Cast ReferenceType SendAction MemberReference element IfStatement BinaryOperation instanceof MemberReference element ReferenceType SignalEvent BlockStatement StatementExpression Assignment MemberReference signal MethodInvocation MemberReference element buildSignalInt = StatementExpression Cast ReferenceType SignalEvent MemberReference element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Can't build a signal for a " MemberReference element LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace MemberReference element WhileStatement MethodInvocation ! Model MethodInvocation MemberReference namespace isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference namespace MethodInvocation Model MethodInvocation MemberReference namespace getModelElementContainer getFacade = StatementExpression MethodInvocation Model MethodInvocation MemberReference signal MemberReference namespace setNamespace getCoreHelper ReturnStatement MemberReference signal	1
MethodDeclaration Modifier private ReferenceType ActivityGraphsFactoryMDRImpl getActivityGraphs ReturnStatement Cast ReferenceType ActivityGraphsFactoryMDRImpl MethodInvocation modelImpl getActivityGraphsFactory	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface getProjectSettingsTabs ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public setModelElementContainer FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object container StatementExpression SuperMethodInvocation MemberReference handle MemberReference container setModelElementContainer StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public BasicType boolean resolve FormalParameter ReferenceType ToDoItem item LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation MemberReference item StatementExpression MethodInvocation MemberReference item ReturnStatement MemberReference res	0
MethodDeclaration Modifier private setStyleAttributes FormalParameter ReferenceType Fig fig FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String attributeMap LocalVariableDeclaration ReferenceType String VariableDeclarator name LocalVariableDeclaration ReferenceType String VariableDeclarator value ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator entry MethodInvocation attributeMap entrySet BlockStatement StatementExpression Assignment MemberReference name MethodInvocation entry getKey = StatementExpression Assignment MemberReference value MethodInvocation entry getValue = IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigCompartmentBox BlockStatement LocalVariableDeclaration ReferenceType FigCompartmentBox VariableDeclarator fcb Cast ReferenceType FigCompartmentBox MemberReference fig IfStatement Literal MethodInvocation MemberReference name equals "operationsVisible" BlockStatement StatementExpression MethodInvocation fcb MethodInvocation Model MethodInvocation getOperation getMetaTypes MethodInvocation value Literal "true" equalsIgnoreCase showCompartment IfStatement Literal MethodInvocation MemberReference name equals "attributesVisible" BlockStatement StatementExpression MethodInvocation fcb MethodInvocation Model MethodInvocation getAttribute getMetaTypes MethodInvocation value Literal "true" equalsIgnoreCase showCompartment IfStatement Literal MethodInvocation MemberReference name equals "enumerationLiteralsVisible" BlockStatement StatementExpression MethodInvocation fcb MethodInvocation Model MethodInvocation getEnumerationLiteral getMetaTypes MethodInvocation value Literal "true" equalsIgnoreCase showCompartment IfStatement Literal MethodInvocation MemberReference name equals "extensionPointVisible" BlockStatement StatementExpression MethodInvocation fcb MethodInvocation Model MethodInvocation getExtensionPoint getMetaTypes MethodInvocation value Literal "true" equalsIgnoreCase showCompartment	1
MethodDeclaration Modifier private ReferenceType Element FormalParameter ReferenceType Element element LocalVariableDeclaration ReferenceType Element VariableDeclarator result MemberReference element WhileStatement BinaryOperation != MethodInvocation result getOwner Literal null BlockStatement StatementExpression Assignment MemberReference result MethodInvocation result getOwner = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation getZipName	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation MemberReference kind equals	0
MethodDeclaration Modifier public FormalParameter ReferenceType tdp IfStatement MethodInvocation MethodInvocation MethodInvocation Horizontal getInstance equals getOrientation BlockStatement StatementExpression MethodInvocation splitPane MemberReference tdp MemberReference BorderSplitPane WEST add BlockStatement StatementExpression MethodInvocation splitPane MemberReference tdp MemberReference BorderSplitPane add	0
MethodDeclaration Modifier public BasicType boolean isNavigable FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MethodInvocation getTarget Literal null getStateMachinesHelper StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference parent MethodInvocation Model MethodInvocation getEvent getMetaTypes getAllModelElementsOfKind getModelManagementHelper addAll ReturnStatement MemberReference list	0
MethodDeclaration Modifier private ReferenceType FigActivation createActivationFig FormalParameter Modifier final ReferenceType Object owner FormalParameter Modifier final BasicType int x FormalParameter Modifier final BasicType int y FormalParameter Modifier final BasicType int w FormalParameter Modifier final BasicType int h FormalParameter Modifier final ReferenceType DiagramSettings settings FormalParameter Modifier final ReferenceType FigMessage messageFig ReturnStatement ClassCreator ReferenceType FigActivation MemberReference owner ClassCreator ReferenceType Rectangle MemberReference x MemberReference y MemberReference w MemberReference h MemberReference settings MemberReference messageFig	0
MethodDeclaration Modifier public ReferenceType String getMoreInfoURL ReturnStatement MethodInvocation TodoParser MethodInvocation item getMoreInfoURL encode	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Icon getIcons IfStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent isReadOnly getModelManagementHelper BlockStatement ReturnStatement ArrayCreator ReferenceType Icon ArrayInitializer Literal null MemberReference Literal null Literal null Literal null ReturnStatement MemberReference icons	0
MethodDeclaration Modifier private ReferenceType StringBuffer generateGlobalTypedefs FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || MethodInvocation MethodInvocation MemberReference cls isAClass getFacade MethodInvocation MethodInvocation MemberReference cls isAInstance getFacade BlockStatement IfStatement BinaryOperation == MemberReference generatorPass MemberReference HEADER_PASS BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator globalTypedefStatements MethodInvocation MemberReference cls Literal "typedef_global_header" findTagValues IfStatement MethodInvocation ! globalTypedefStatements isEmpty BlockStatement StatementExpression MethodInvocation sb BinaryOperation + Literal "// global type definitions for header defined " Literal "by Tag entries in ArgoUML" append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb BinaryOperation + Literal "// Result: typedef <typedef_global_header> " Literal "<tag_value>;" append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator typedefEnum MethodInvocation globalTypedefStatements iterator WhileStatement MethodInvocation typedefEnum hasNext BlockStatement StatementExpression MethodInvocation sb MethodInvocation MethodInvocation typedefEnum next append Literal "typedef " append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal ";" append BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator globalTypedefStatements MethodInvocation MemberReference cls Literal "typedef_global_source" findTagValues IfStatement MethodInvocation ! globalTypedefStatements isEmpty BlockStatement StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + Literal "// global type definitions for class " Literal in source file defined by Tag " Literal "entries in ArgoUML" append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb BinaryOperation + Literal "// Result: typedef <typedef_global_source> " Literal "<tag_value>;" append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append LocalVariableDeclaration ReferenceType Iterator VariableDeclarator typedefEnum MethodInvocation globalTypedefStatements iterator WhileStatement MethodInvocation typedefEnum hasNext BlockStatement StatementExpression MethodInvocation sb MethodInvocation MethodInvocation typedefEnum next append Literal "typedef " append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal ";" append ReturnStatement MemberReference sb	1
MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text StatementExpression MethodInvocation document MemberReference text setProperty	0
MethodDeclaration Modifier private ReferenceType Object buildImport FormalParameter ReferenceType Object element FormalParameter ReferenceType Object srcFile LocalVariableDeclaration ReferenceType Collection VariableDeclarator dependencies MethodInvocation Model MethodInvocation MemberReference element MemberReference srcFile getDependencies getCoreHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dep MemberReference dependencies BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference dep MemberReference IMPORT_STEREOTYPE hasStereotype getExtensionMechanismsHelper BlockStatement ReturnStatement MemberReference dep LocalVariableDeclaration ReferenceType Object VariableDeclarator pkgImport MethodInvocation Model MethodInvocation MemberReference srcFile MemberReference element getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference pkgImport MethodInvocation MemberReference IMPORT_STEREOTYPE getStereotype addStereotype getCoreHelper LocalVariableDeclaration ReferenceType String VariableDeclarator newName MethodInvocation MemberReference srcFile MemberReference element StatementExpression MethodInvocation Model MethodInvocation MemberReference pkgImport MemberReference newName setName getCoreHelper StatementExpression MethodInvocation newElements MemberReference pkgImport add ReturnStatement MemberReference pkgImport	0
MethodDeclaration Modifier private ReferenceType getManuallyTab LocalVariableDeclaration ReferenceType VariableDeclarator top ClassCreator ReferenceType StatementExpression MethodInvocation top ClassCreator ReferenceType GridBagLayout setLayout LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator labelConstraints ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference labelConstraints anchor MemberReference GridBagConstraints WEST = StatementExpression Assignment MemberReference labelConstraints gridx Literal 0 = StatementExpression Assignment MemberReference labelConstraints gridy Literal 0 = StatementExpression Assignment MemberReference labelConstraints insets ClassCreator ReferenceType Insets Literal 10 Literal 2 Literal 2 Literal 2 = LocalVariableDeclaration ReferenceType GridBagConstraints VariableDeclarator fieldConstraints ClassCreator ReferenceType GridBagConstraints StatementExpression Assignment MemberReference fieldConstraints anchor MemberReference GridBagConstraints WEST = StatementExpression Assignment MemberReference fieldConstraints fill MemberReference GridBagConstraints NONE = StatementExpression Assignment MemberReference fieldConstraints gridx Literal 1 = StatementExpression Assignment MemberReference fieldConstraints gridy Literal 0 = StatementExpression Assignment MemberReference fieldConstraints weightx Literal 1.0 = StatementExpression Assignment MemberReference fieldConstraints insets ClassCreator ReferenceType Insets Literal 4 Literal 2 Literal 2 Literal 2 = StatementExpression MethodInvocation top ClassCreator ReferenceType JLabel Literal "Method call MemberReference labelConstraints add StatementExpression Assignment MemberReference callTable ClassCreator ReferenceType CheckboxTableModel MethodInvocation calls toArray MethodInvocation calldata toArray Literal "Method calls" Literal "Enable" = LocalVariableDeclaration ReferenceType JTable VariableDeclarator table ClassCreator ReferenceType JTable MemberReference callTable StatementExpression MethodInvocation table Literal true StatementExpression Assignment MemberReference fieldConstraints gridx Literal 0 = StatementExpression Assignment MemberReference fieldConstraints gridy Literal 1 = StatementExpression Assignment MemberReference fieldConstraints gridwidth Literal 2 = StatementExpression Assignment MemberReference fieldConstraints anchor MemberReference GridBagConstraints CENTER = StatementExpression Assignment MemberReference fieldConstraints fill MemberReference GridBagConstraints BOTH = StatementExpression Assignment MemberReference fieldConstraints weighty Literal 1.0 = StatementExpression MethodInvocation top ClassCreator ReferenceType JScrollPane MemberReference table MemberReference fieldConstraints add StatementExpression Assignment MemberReference fieldConstraints insets ClassCreator ReferenceType Insets Literal 0 Literal 2 Literal 0 Literal 2 = LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator checkbox1 ClassCreator ReferenceType JCheckBox Literal "(un)check create calls" Literal true StatementExpression Assignment MemberReference fieldConstraints gridy Literal 2 = StatementExpression MethodInvocation top MemberReference checkbox1 MemberReference fieldConstraints add LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator checkbox2 ClassCreator ReferenceType JCheckBox Literal "(un)check local calls" Literal true StatementExpression Assignment MemberReference fieldConstraints gridy Literal 3 = StatementExpression MethodInvocation top MemberReference checkbox2 MemberReference fieldConstraints add LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator checkbox3 ClassCreator ReferenceType JCheckBox Literal "(un)check package calls" Literal true StatementExpression Assignment MemberReference fieldConstraints gridy Literal 4 = StatementExpression MethodInvocation top MemberReference checkbox3 MemberReference fieldConstraints add LocalVariableDeclaration ReferenceType JCheckBox VariableDeclarator checkbox4 ClassCreator ReferenceType JCheckBox Literal "(un)check far calls" Literal true StatementExpression Assignment MemberReference fieldConstraints gridy Literal 5 = StatementExpression MethodInvocation top MemberReference checkbox4 MemberReference fieldConstraints add ReturnStatement MemberReference top	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getStateVertex getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public run ForStatement EnhancedForControl VariableDeclaration ReferenceType JToolBar VariableDeclarator toolbar MethodInvocation BlockStatement StatementExpression MethodInvocation toolbar Cast ReferenceType JCheckBoxMenuItem MethodInvocation e getSource setVisible LocalVariableDeclaration ReferenceType ConfigurationKey VariableDeclarator configurationKey MethodInvocation Configuration MemberReference ArgoToolbarManager KEY_NAME MethodInvocation toolbar getName makeKey StatementExpression MethodInvocation Configuration MemberReference configurationKey Cast ReferenceType Boolean MethodInvocation toolbar isVisible setString	0
MethodDeclaration FormalParameter ReferenceType String type FormalParameter BasicType boolean forceIt LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation parseState anonymousClass TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mClassifier MethodInvocation MethodInvocation MethodInvocation MemberReference type getClassifierName get MemberReference type getContext LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator interfaces ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String IfStatement MethodInvocation Model MethodInvocation MemberReference mClassifier isAInterface getFacade BlockStatement StatementExpression MethodInvocation interfaces MemberReference type add StatementExpression MethodInvocation MemberReference name Cast BasicType short Literal 0 MemberReference EMPTY_STRING_LIST TernaryExpression MethodInvocation Model MethodInvocation MemberReference mClassifier isAClass getFacade MemberReference type Literal null MemberReference interfaces Literal "" MemberReference forceIt addClass CatchClause CatchClauseParameter ClassifierNotFoundException e StatementExpression MethodInvocation MemberReference name Cast BasicType short Literal 0 MemberReference EMPTY_STRING_LIST Literal null MemberReference EMPTY_STRING_LIST Literal "" MemberReference forceIt addClass StatementExpression MethodInvocation LOG BinaryOperation + Literal "Modeler.java: an anonymous class was created " Literal "although it could not be found in the classpath." info	1
MethodDeclaration Modifier public ReferenceType CollaborationInstanceSet createCollaborationInstanceSet LocalVariableDeclaration ReferenceType CollaborationInstanceSet VariableDeclarator obj MethodInvocation MethodInvocation getCollaborationInstanceSet MethodInvocation createCollaborationInstanceSet getCollabPkg StatementExpression SuperMethodInvocation MemberReference obj ReturnStatement MemberReference obj	0
MethodDeclaration Modifier protected handleShowTypes FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator showTypes MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation notationSettings MethodInvocation Boolean MemberReference showTypes parseBoolean setShowTypes	0
MethodDeclaration Modifier public ReferenceType FigEdge getFigEdgeFor FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object edge FormalParameter ReferenceType Map styleAttributes AssertStatement BinaryOperation != MemberReference edge Literal null AssertStatement BinaryOperation instanceof MemberReference lay ReferenceType LayerPerspective LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diag Cast ReferenceType ArgoDiagram Cast ReferenceType LayerPerspective MemberReference lay LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation diag getDiagramSettings LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator newEdge Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge isATransition getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType MemberReference edge MemberReference settings = IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigEdgeNote MemberReference edge MemberReference settings = StatementExpression MethodInvocation MemberReference lay MemberReference newEdge MemberReference edge addEdge ReturnStatement MemberReference newEdge	1
MethodDeclaration Modifier public ReferenceType Class panelClassFor FormalParameter ReferenceType Class targetClass IfStatement BinaryOperation == MemberReference targetClass Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType StringNamespace VariableDeclarator classNs Cast ReferenceType StringNamespace MethodInvocation StringNamespace MemberReference targetClass parse LocalVariableDeclaration ReferenceType StringNamespace VariableDeclarator baseNs Cast ReferenceType StringNamespace MethodInvocation StringNamespace Literal "org.argouml.ui." MemberReference Namespace parse LocalVariableDeclaration ReferenceType StringNamespaceElement VariableDeclarator targetClassElement Cast ReferenceType StringNamespaceElement MethodInvocation classNs peekNamespaceElement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Attempt to find style panel for: " MemberReference classNs debug StatementExpression MethodInvocation classNs LocalVariableDeclaration ReferenceType String VariableDeclarator bases ArrayCreator ReferenceType String ArrayInitializer MethodInvocation classNs toString MethodInvocation baseNs toString ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator stylePanelName MemberReference stylePanelNames BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator baseName MemberReference bases BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + BinaryOperation + BinaryOperation + MemberReference baseName Literal "." MemberReference stylePanelName MemberReference targetClassElement LocalVariableDeclaration ReferenceType Class VariableDeclarator cls MethodInvocation MemberReference name loadClass IfStatement BinaryOperation != MemberReference cls Literal null BlockStatement ReturnStatement MemberReference cls ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget ReturnStatement MethodInvocation MemberReference target shouldBeEnabled	0
MethodDeclaration Modifier public ReferenceType getTabPanel IfStatement BinaryOperation == MemberReference topPanel Literal null BlockStatement StatementExpression Assignment MemberReference topPanel MethodInvocation buildPanel = ReturnStatement MemberReference topPanel	0
MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object node IfStatement BinaryOperation instanceof MemberReference node ReferenceType ToDoList BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation instanceof MemberReference node ReferenceType Goal BinaryOperation > MethodInvocation MemberReference node getChildCount Literal 0 BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public addChangeListener FormalParameter ReferenceType ChangeListener l StatementExpression MethodInvocation listenerList ClassReference ReferenceType ChangeListener MemberReference l add StatementExpression MethodInvocation LOG Literal ">>Add listener" debug	0
MethodDeclaration Modifier public FormalParameter ReferenceType MouseEvent e IfStatement BinaryOperation == MemberReference curHandle index Literal - 1 BlockStatement StatementExpression MethodInvocation Globals MethodInvocation getSelectionManager MethodInvocation MethodInvocation getEnclosingFig select curEditor	0
MethodDeclaration Modifier public setReception FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection c IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Signal BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator actualReceptions MethodInvocation Model MethodInvocation MemberReference handle getFacade IfStatement MethodInvocation ! actualReceptions isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator receptions ClassCreator ReferenceType ArrayList MemberReference actualReceptions ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator reception MemberReference receptions BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference reception ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator reception MemberReference c BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference reception addReception ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public setInstance FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object inst StatementExpression MethodInvocation impl MemberReference handle MemberReference inst setInstance	0
MethodDeclaration Modifier public final BasicType boolean setDefaultDescription FormalParameter ReferenceType String sBlockDesc IfStatement BinaryOperation && BinaryOperation != MemberReference sBlockDesc Literal null BinaryOperation > MethodInvocation sBlockDesc MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference sDefaultDescription MethodInvocation sBlockDesc trim = ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public BasicType boolean isRemoveFromDiagramAllowed FormalParameter ReferenceType Collection figs IfStatement MethodInvocation figs isEmpty BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation figs iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation i next IfStatement BinaryOperation instanceof MemberReference obj ReferenceType Fig BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator uml Cast ReferenceType Fig MemberReference obj IfStatement BinaryOperation != MemberReference uml Literal null BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Object VariableDeclarator tabValues Literal null IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LiteralBoolean BlockStatement LocalVariableDeclaration ReferenceType LiteralBoolean VariableDeclarator lb Cast ReferenceType LiteralBoolean MemberReference handle StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType Boolean ArrayInitializer MethodInvocation lb isValue = IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LiteralNull BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LiteralString BlockStatement LocalVariableDeclaration ReferenceType LiteralString VariableDeclarator ls Cast ReferenceType LiteralString MemberReference handle StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType String ArrayInitializer MethodInvocation ls getValue = IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LiteralUnlimitedNatural BlockStatement LocalVariableDeclaration ReferenceType LiteralUnlimitedNatural VariableDeclarator lun Cast ReferenceType LiteralUnlimitedNatural MemberReference handle StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType String ArrayInitializer BinaryOperation + Literal "" MethodInvocation lun getValue = IfStatement BinaryOperation instanceof MemberReference handle ReferenceType LiteralInteger BlockStatement LocalVariableDeclaration ReferenceType LiteralInteger VariableDeclarator li Cast ReferenceType LiteralInteger MemberReference handle StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType Integer ArrayInitializer MethodInvocation li getValue = IfStatement BinaryOperation instanceof MemberReference handle ReferenceType OpaqueExpression BlockStatement LocalVariableDeclaration ReferenceType OpaqueExpression VariableDeclarator oe Cast ReferenceType OpaqueExpression MemberReference handle LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator bodies MethodInvocation oe getBodies LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator langs MethodInvocation oe getLanguages IfStatement BinaryOperation > MethodInvocation bodies size Literal 0 BlockStatement StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType String BinaryOperation * MethodInvocation bodies size Literal 2 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation bodies size MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation * MemberReference i Literal 2 tabValues MethodInvocation bodies MemberReference i get = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * MemberReference i Literal 2 Literal 1 tabValues MethodInvocation langs MemberReference i get = ReturnStatement MemberReference tabValues	1
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Object newTarget StatementExpression SuperMethodInvocation MemberReference newTarget LocalVariableDeclaration ReferenceType Collection VariableDeclarator connections MethodInvocation Model MethodInvocation MemberReference newTarget getConnections getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator types ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator conn MemberReference connections BlockStatement StatementExpression MethodInvocation types MethodInvocation Model MethodInvocation MemberReference conn getType getFacade add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifierRole MemberReference types BlockStatement StatementExpression MethodInvocation others MethodInvocation Model MethodInvocation MemberReference classifierRole getBases getFacade addAll ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifier MemberReference others BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference classifier Literal "feature" addModelEventListener getPump	0
MethodDeclaration Modifier protected BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2 TYPE_OBJECTFLOWSTATE_TYPE	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator tempDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation + MemberReference tempDim width BinaryOperation * MemberReference PADDING Literal 2 LocalVariableDeclaration BasicType int VariableDeclarator h BinaryOperation + MemberReference tempDim height MemberReference PADDING StatementExpression Assignment MemberReference tempDim MethodInvocation state getMinimumSize = StatementExpression Assignment MemberReference w MethodInvocation Math MemberReference w BinaryOperation + MemberReference tempDim width BinaryOperation * MemberReference PADDING Literal 2 max = StatementExpression Assignment MemberReference h BinaryOperation + BinaryOperation + BinaryOperation + MemberReference h MemberReference PADDING MemberReference tempDim height MemberReference PADDING = ReturnStatement ClassCreator ReferenceType Dimension MethodInvocation Math MemberReference w BinaryOperation / MemberReference OFS_WIDTH Literal 2 max MethodInvocation Math MemberReference h BinaryOperation / MemberReference HEIGHT Literal 2 max	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal default source path	0
MethodDeclaration Modifier protected ReferenceType Action getActionUniComposition IfStatement BinaryOperation == MemberReference actionUniComposition Literal null BlockStatement StatementExpression Assignment MemberReference actionUniComposition ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation getComposite getAggregationKind Literal true Literal "button.new-unicomposition" = ReturnStatement MemberReference actionUniComposition	0
MethodDeclaration Modifier public removeModelEventListener LocalVariableDeclaration ReferenceType Collection VariableDeclarator bases MethodInvocation Model MethodInvocation MethodInvocation getTarget getBases getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation bases iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation it next StatementExpression MethodInvocation Model MethodInvocation This MemberReference base Literal "feature" removeModelEventListener getPump StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation getTarget Literal "base" removeModelEventListener getPump	0
MethodDeclaration Modifier protected ReferenceType List getSelected LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MethodInvocation getTarget getExtensionPoints getFacade addAll ReturnStatement MemberReference ret	0
MethodDeclaration Modifier private BasicType float getSubtreeWeight LocalVariableDeclaration BasicType float VariableDeclarator w Literal 1 ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference downlinks BlockStatement StatementExpression Assignment MemberReference w BinaryOperation / MethodInvocation node getSubtreeWeight MemberReference UPLINK_FACTOR += ReturnStatement MemberReference w	0
MethodDeclaration Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType Token parse IfStatement BinaryOperation == MethodInvocation desc Literal 0 charAt Literal '<' BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token Literal "<" add LocalVariableDeclaration BasicType int VariableDeclarator formalTypeParametersEndIndex MethodInvocation MemberReference desc Literal '<' Literal '>' LocalVariableDeclaration ReferenceType String VariableDeclarator formalTypeParameters MethodInvocation desc Literal 1 MemberReference formalTypeParametersEndIndex substring StatementExpression Assignment MemberReference desc MethodInvocation desc BinaryOperation + MemberReference formalTypeParametersEndIndex Literal 1 substring = LocalVariableDeclaration ReferenceType FormalTypeParameterLexer VariableDeclarator l ClassCreator ReferenceType FormalTypeParameterLexer MemberReference formalTypeParameters StatementExpression MethodInvocation result MethodInvocation l parse addAll StatementExpression MethodInvocation Pattern MethodInvocation MemberReference formalTypeParameters matcher Literal "([^:]*):((.*))" compile StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token Literal ">" add LocalVariableDeclaration ReferenceType ClassTypeSignatureLexer VariableDeclarator l ClassCreator ReferenceType ClassTypeSignatureLexer MemberReference desc StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token Literal " extends " add StatementExpression MethodInvocation result MethodInvocation l parse addAll LocalVariableDeclaration ReferenceType String VariableDeclarator interfaces MethodInvocation l getRest IfStatement BinaryOperation > MethodInvocation interfaces length Literal 0 BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token Literal " implements " add LocalVariableDeclaration ReferenceType ClassTypeSignatureLexer VariableDeclarator l2 ClassCreator ReferenceType ClassTypeSignatureLexer MemberReference interfaces StatementExpression MethodInvocation result MethodInvocation l2 parse addAll LocalVariableDeclaration ReferenceType String VariableDeclarator others MethodInvocation l2 getRest WhileStatement BinaryOperation > MethodInvocation others length Literal 0 BlockStatement StatementExpression Assignment MemberReference l2 ClassCreator ReferenceType ClassTypeSignatureLexer MemberReference others = StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token COMMA Literal "," add StatementExpression MethodInvocation result MethodInvocation l2 parse addAll StatementExpression Assignment MemberReference others MethodInvocation l2 getRest = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType JPopupMenu popup FormalParameter BasicType int index ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType CodeGenerator FormalParameter ReferenceType lang LocalVariableDeclaration ReferenceType CodeGenerator VariableDeclarator old MethodInvocation MemberReference lang remove IfStatement MethodInvocation lang MemberReference currLanguage equals BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator keySet IfStatement MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference currLanguage Cast ReferenceType MethodInvocation it next = BlockStatement StatementExpression Assignment MemberReference currLanguage Literal null = IfStatement BinaryOperation != MemberReference old Literal null BlockStatement StatementExpression MethodInvocation ArgoEventPump ClassCreator ReferenceType ArgoGeneratorEvent MemberReference ArgoEventTypes GENERATOR_REMOVED MemberReference old StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Removed generator " MemberReference old Literal " for " MemberReference lang debug ReturnStatement MemberReference old	1
MethodDeclaration Modifier public ReferenceType push FormalParameter ReferenceType item StatementExpression SuperMethodInvocation MemberReference item push IfStatement MethodInvocation item isRedoable BlockStatement StatementExpression MethodInvocation Literal Literal true ReturnStatement MemberReference item	1
MethodDeclaration Modifier private warnUser FormalParameter ReferenceType ProgressMonitor monitor LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator lineSepAndListIndent BinaryOperation + MethodInvocation System Literal "line.separator" getProperty Literal " * " LocalVariableDeclaration ReferenceType String VariableDeclarator warnMsg BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Its known limits are: " MemberReference lineSepAndListIndent Literal "very few C++ constructs are supported, e.g., enums, unions, " Literal "templates, etc, aren't;" MemberReference lineSepAndListIndent Literal "no support for non-member variables and functions;" MemberReference lineSepAndListIndent Literal "no integration with the C++ generator => RTE won't work!;" MemberReference lineSepAndListIndent Literal "no operator overload support;" MemberReference lineSepAndListIndent Literal "very immature, certainly this list needs to grow!" StatementExpression MethodInvocation Configuration MemberReference KEY_USER_WARNING MemberReference userWarning setBoolean StatementExpression MethodInvocation LOG BinaryOperation + Literal "userWarning = " MemberReference userWarning debug StatementExpression Assignment MemberReference userWarning Literal false = StatementExpression MethodInvocation monitor Literal "C++ Import Limitations" Literal "The C++ reverse module is pre-alpha stage." MemberReference warnMsg notifyMessage	1
MethodDeclaration Modifier public setMessageSort FormalParameter ReferenceType Object message FormalParameter ReferenceType Object messageSort StatementExpression MethodInvocation MemberReference message MemberReference messageSort	0
MethodDeclaration Modifier public Annotation Override setTarget FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Object VariableDeclarator modelTarget TernaryExpression BinaryOperation instanceof MemberReference t ReferenceType Fig Cast ReferenceType Fig MemberReference t MemberReference t StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference modelTarget isAClassifier getFacade setShouldBeEnabled StatementExpression MethodInvocation cbFiles removeAllItems StatementExpression Assignment MemberReference files Literal null = StatementExpression SuperMethodInvocation MemberReference t setTarget	1
MethodDeclaration Modifier private initMenuEdit StatementExpression Assignment MemberReference edit MethodInvocation ClassCreator ReferenceType JMenu MethodInvocation Literal "Edit" menuLocalize add = StatementExpression MethodInvocation MemberReference edit Literal "Edit" setMnemonic StatementExpression Assignment MemberReference select ClassCreator ReferenceType JMenu MethodInvocation Literal menuLocalize = StatementExpression MethodInvocation MemberReference select Literal setMnemonic StatementExpression MethodInvocation edit MemberReference select add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator selectAllItem MethodInvocation select ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference selectAllItem Literal "Select All" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference selectAllItem MemberReference ShortcutMgr ACTION_SELECT_ALL assignAccelerator StatementExpression MethodInvocation select addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator backItem MethodInvocation select MemberReference navigateTargetBackAction add StatementExpression MethodInvocation MemberReference backItem Literal "Navigate setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference backItem MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator forwardItem MethodInvocation select MemberReference navigateTargetForwardAction add StatementExpression MethodInvocation MemberReference forwardItem Literal "Navigate Forward" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference forwardItem MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation select addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator selectInvert MethodInvocation select ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference selectInvert Literal "Invert setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference selectInvert MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation edit addSeparator LocalVariableDeclaration ReferenceType Action VariableDeclarator removeFromDiagram MethodInvocation MethodInvocation getRemoveFromDiagramAction getInstance LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator removeItem MethodInvocation edit MemberReference removeFromDiagram add StatementExpression MethodInvocation MemberReference removeItem Literal "Remove from Diagram" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference removeItem MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator deleteItem MethodInvocation edit MethodInvocation ActionDeleteModelElements getTargetFollower add StatementExpression MethodInvocation MemberReference deleteItem Literal "Delete from setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference deleteItem MemberReference ShortcutMgr ACTION_DELETE_MODEL_ELEMENTS assignAccelerator StatementExpression MethodInvocation edit addSeparator StatementExpression MethodInvocation ShortcutMgr MethodInvocation edit ClassCreator ReferenceType add MemberReference ShortcutMgr assignAccelerator StatementExpression Assignment MemberReference settingsAction ClassCreator ReferenceType = IfStatement MethodInvocation ! OsUtil BlockStatement LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator settingsItem MethodInvocation edit MemberReference settingsAction add StatementExpression MethodInvocation MemberReference settingsItem Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference settingsItem MemberReference ShortcutMgr assignAccelerator	0
MethodDeclaration Modifier public removeClassModelEventListener FormalParameter ReferenceType PropertyChangeListener listener FormalParameter ReferenceType Object modelClass FormalParameter ReferenceType String propertyNames StatementExpression MethodInvocation MemberReference listener MemberReference modelClass MemberReference propertyNames unregisterClassEvent	0
MethodDeclaration Modifier private ReferenceType String toString FormalParameter Modifier final ReferenceType Object modelElement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name Literal "" = IfStatement BinaryOperation > MethodInvocation name length Literal 0 BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + Literal "/" MemberReference name = LocalVariableDeclaration ReferenceType Object VariableDeclarator assoc MethodInvocation Model MethodInvocation MemberReference modelElement getBase getFacade IfStatement BinaryOperation != MemberReference assoc Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator baseName MethodInvocation Model MethodInvocation MemberReference assoc getName getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference baseName Literal null BinaryOperation > MethodInvocation baseName length Literal 0 BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + BinaryOperation + MemberReference name Literal ":" MemberReference baseName = ReturnStatement MemberReference name	0
MethodDeclaration Modifier public ReferenceType Collection getOptions FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types LocalVariableDeclaration Modifier final ReferenceType ArrayList VariableDeclarator list ClassCreator ReferenceType ArrayList Literal 1 StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference modelElement getEntry getFacade add ReturnStatement MemberReference list	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Collection selected StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference selected setReception getCommonBehaviorHelper	0
MethodDeclaration Modifier private ReferenceType Object getExpression LocalVariableDeclaration ReferenceType Object VariableDeclarator expression Literal null IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression Assignment MemberReference expression MethodInvocation getterSetterManager MemberReference target MemberReference propertyName MemberReference type get = StatementExpression MethodInvocation LOG BinaryOperation + Literal "Got the expression " MemberReference expression info BlockStatement StatementExpression Assignment MemberReference expression MemberReference target = ReturnStatement MemberReference expression	0
MethodDeclaration Modifier public ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object owner FormalParameter ReferenceType String name FormalParameter ReferenceType DiagramSettings settings ReturnStatement ClassCreator ReferenceType UMLDeploymentDiagram MemberReference name MemberReference owner	0
MethodDeclaration Modifier public FormalParameter ReferenceType String type StatementExpression MethodInvocation MemberReference type Literal false	0
MethodDeclaration Modifier public Annotation Override ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object namespace FormalParameter ReferenceType DiagramSettings settings IfStatement MethodInvocation ! Model MethodInvocation MemberReference namespace isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "No namespace as argument" error StatementExpression MethodInvocation LOG MemberReference namespace error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "The argument " MemberReference namespace Literal "is not a namespace." ReturnStatement MethodInvocation DiagramFactory MethodInvocation MemberReference UseCase MemberReference namespace MemberReference settings create getInstance	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object qualifier IfStatement BinaryOperation instanceof MemberReference qualifier ReferenceType Attribute BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or qualifier: " MemberReference qualifier	1
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener ListenerNotFoundException StatementExpression MethodInvocation notifier MemberReference listener removeNotificationListener	0
MethodDeclaration Modifier public ReferenceType Message createMessage LocalVariableDeclaration ReferenceType Message VariableDeclarator myMessage MethodInvocation MethodInvocation getMessage MethodInvocation createMessage getCollabPkg StatementExpression SuperMethodInvocation MemberReference myMessage ReturnStatement MemberReference myMessage	0
MethodDeclaration Modifier public ReferenceType URL getPublicReference ReturnStatement MemberReference url	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object elem FormalParameter BasicType int i FormalParameter ReferenceType Object feature StatementExpression SuperMethodInvocation MemberReference elem MemberReference i MemberReference feature StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String getLabel ReturnStatement MethodInvocation label getText	0
MethodDeclaration Modifier public qualifiedCtorId FormalParameter ReferenceType String identifier IfStatement MethodInvocation ! ignore BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator onlyDeclaration Literal false IfStatement BinaryOperation == MemberReference xtorModeler Literal null BlockStatement StatementExpression MethodInvocation beginCtor StatementExpression Assignment MemberReference onlyDeclaration Literal true = StatementExpression MethodInvocation xtorModeler MemberReference identifier setName IfStatement MethodInvocation ! xtorModeler isIgnorable BlockStatement AssertStatement MethodInvocation xtorModeler MethodInvocation contextStack peek isTheXtor IfStatement MemberReference onlyDeclaration BlockStatement StatementExpression MethodInvocation endXtor	0
MethodDeclaration Modifier private handleRefresh ForStatement EnhancedForControl VariableDeclaration ReferenceType GUISettingsTabInterface VariableDeclarator tab MemberReference BlockStatement StatementExpression MethodInvocation tab	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_0 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 1152921503532202896L Literal - 4593671619915808749L Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType ResolvedCritic rc ReturnStatement MethodInvocation MemberReference rc add	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation explanation Literal true setEnabled StatementExpression MethodInvocation explanation requestFocus StatementExpression MethodInvocation explanation selectAll	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference actionFinalPseudoState Literal null BlockStatement StatementExpression Assignment MemberReference actionFinalPseudoState ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getMetaTypes Literal "button.new-finalstate" = ReturnStatement MemberReference actionFinalPseudoState	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation sb BinaryOperation + MethodInvocation MethodInvocation getName getClass Literal " {\n" append ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator item This BlockStatement StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + Literal " " MethodInvocation item toString Literal "\n" append StatementExpression MethodInvocation sb Literal " }" append ReturnStatement MethodInvocation sb toString	0
MethodDeclaration Modifier public ReferenceType findLanguage FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator lang MethodInvocation getLanguages BlockStatement IfStatement MethodInvocation lang MethodInvocation MemberReference name equals getName BlockStatement ReturnStatement MemberReference lang ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Enumeration gen FormalParameter ReferenceType Object o ReturnStatement MethodInvocation theInstance	0
MethodDeclaration Modifier private BasicType boolean removeFromDiagramAllowed ReturnStatement Literal false	0
MethodDeclaration Modifier public final ReferenceType String toString FormalParameter ReferenceType String sIndent IfStatement BinaryOperation != MemberReference objDocBlock Literal null BlockStatement ReturnStatement MethodInvocation objDocBlock MemberReference sIndent toString ReturnStatement Literal null	1
MethodDeclaration Modifier public innerClassifier FormalParameter ReferenceType Object mClassifier StatementExpression MethodInvocation obsoleteInnerClasses MemberReference mClassifier remove	0
MethodDeclaration Modifier public BasicType boolean enable StatementExpression MethodInvocation ImporterManager MethodInvocation This getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType char c LocalVariableDeclaration BasicType int VariableDeclarator i ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i BinaryOperation - MemberReference match length Literal 1 MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i match MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 match = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference match length Literal 1 match MemberReference c = ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference match length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference i match MemberReference ArraySelector MemberReference i pattern BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation Test MemberReference sb ToSource StatementExpression MethodInvocation sb Literal " ? " append StatementExpression MethodInvocation Left MemberReference sb ToSource StatementExpression MethodInvocation sb Literal " : " append StatementExpression MethodInvocation Right MemberReference sb ToSource	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigJunctionState VariableDeclarator figClone Cast ReferenceType FigJunctionState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigDiamond MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone head Cast ReferenceType FigDiamond MethodInvocation it next = ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier private init FormalParameter BasicType boolean value FormalParameter ReferenceType ConfigurationKey key StatementExpression MethodInvocation MemberReference key MemberReference value MemberReference value fireNotationEvent	0
MethodDeclaration Modifier private ReferenceType ExtensionMechanismsFactoryMDRImpl getExtensionMechanisms ReturnStatement Cast ReferenceType ExtensionMechanismsFactoryMDRImpl MethodInvocation modelImpl getExtensionMechanismsFactory	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public Annotation Override mousePressed FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me mousePressed LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel MethodInvocation ce MethodInvocation This getSelectionManager IfStatement BinaryOperation instanceof MemberReference sel ReferenceType SelectionComponentInstance BlockStatement StatementExpression Cast ReferenceType SelectionComponentInstance MemberReference sel	0
MethodDeclaration Modifier public static ReferenceType List TypeArgument ReferenceType Token FormalParameter ReferenceType String s ReturnStatement ClassCreator MethodInvocation parse ReferenceType ClassSignatureLexer MemberReference s	0
MethodDeclaration Modifier public ReferenceType Object clone LocalVariableDeclaration ReferenceType FigClassifierBox VariableDeclarator figClone Cast ReferenceType FigClassifierBox SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator thisIter This MethodInvocation getFigs MethodInvocation iterator WhileStatement MethodInvocation thisIter hasNext BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator thisFig Cast ReferenceType Fig MethodInvocation thisIter next IfStatement BinaryOperation == MemberReference thisFig MemberReference operationsFigCompartment BlockStatement StatementExpression Assignment MemberReference figClone operationsFigCompartment Cast ReferenceType FigOperationsCompartment MemberReference thisFig = ReturnStatement MemberReference figClone ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object link ReturnStatement MethodInvocation impl MemberReference link getSource	0
MethodDeclaration Modifier public removeModelEventListener FormalParameter ReferenceType UmlChangeListener listener FormalParameter ReferenceType Object modelelement FormalParameter ReferenceType String propertyNames ThrowStatement ClassCreator ReferenceType NotImplementedException	0
MethodDeclaration Modifier private ReferenceType String generateScope FormalParameter ReferenceType Object feature IfStatement MethodInvocation Model MethodInvocation MemberReference feature isStatic getFacade BlockStatement IfStatement MemberReference VERBOSE BlockStatement ReturnStatement Literal "/* static */ " BlockStatement ReturnStatement Literal "static " ReturnStatement Literal ""	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateMachine getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getTransitions getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Override addNode FormalParameter ReferenceType Object node StatementExpression MethodInvocation LOG Literal "adding MClassifierRole node!!" debug IfStatement MethodInvocation ! MemberReference node canAddNode BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MemberReference node add getNodes IfStatement MethodInvocation Model MethodInvocation MemberReference node isAClassifier getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getHomeModel MemberReference node addOwnedElement getCoreHelper StatementExpression MethodInvocation MemberReference node fireNodeAdded	1
MethodDeclaration Modifier public ReferenceType Point getClosestPoint FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds LocalVariableDeclaration BasicType int VariableDeclarator xs ArrayInitializer MemberReference r x BinaryOperation + MemberReference r x MemberReference d BinaryOperation + MemberReference r x MemberReference r width BinaryOperation + MemberReference r x MemberReference r width BinaryOperation - BinaryOperation + MemberReference r x MemberReference r width MemberReference d MemberReference r x MemberReference r x LocalVariableDeclaration BasicType int VariableDeclarator ys ArrayInitializer BinaryOperation + MemberReference r y MemberReference d MemberReference r y MemberReference r y BinaryOperation - BinaryOperation + MemberReference r y MemberReference r height MemberReference d BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference d LocalVariableDeclaration ReferenceType Point VariableDeclarator p MethodInvocation Geometry MemberReference xs MemberReference ys Literal 7 MemberReference anotherPt ptClosestTo ReturnStatement MemberReference p	1
MethodDeclaration Modifier private doCopyStereotype FormalParameter ReferenceType Stereotype source FormalParameter ReferenceType Stereotype target StatementExpression Cast ReferenceType MethodInvocation modelImpl getCoreFactory StatementExpression MethodInvocation target MethodInvocation clear getBaseClass StatementExpression MethodInvocation target MethodInvocation MethodInvocation source getBaseClass addAll getBaseClass StatementExpression MethodInvocation target MethodInvocation source getIcon setIcon	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Stereotype getStereotypes FormalParameter ReferenceType Object ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "A namespace was expected we got " MemberReference ns LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Stereotype VariableDeclarator l ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Stereotype TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Stereotype BlockStatement StatementExpression MethodInvocation l Cast ReferenceType Stereotype MemberReference o add IfStatement BinaryOperation instanceof MemberReference o ReferenceType UmlPackage BlockStatement StatementExpression MethodInvocation l MethodInvocation MemberReference o getStereotypes addAll CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference l	1
MethodDeclaration Modifier public ReferenceType Collection getTargetFlows FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public setProjectURI FormalParameter ReferenceType URI theUri FormalParameter ReferenceType Project p IfStatement BinaryOperation != MemberReference theUri Literal null BlockStatement StatementExpression Assignment MemberReference theUri MethodInvocation MemberReference theUri fixUriExtension = StatementExpression MethodInvocation p MemberReference theUri setUri	0
MethodDeclaration Modifier public ReferenceType Object execute StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference objectToRemove getCommonBehaviorHelper ReturnStatement Literal null	0
MethodDeclaration Modifier public formatCallout FormalParameter ReferenceType DOMBuilder rtf FormalParameter ReferenceType Callout callout StatementExpression MethodInvocation MemberReference rtf MemberReference callout formatTextCallout	0
MethodDeclaration Modifier public ReferenceType Command getAddCommand FormalParameter ReferenceType Object modelElement ReturnStatement ClassCreator ReferenceType AddCommand MemberReference modelElement	0
MethodDeclaration Modifier public Annotation Deprecated setShowInitialValue FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf setShowInitialValue	1
MethodDeclaration Modifier public Annotation Override addFig FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f addFig StatementExpression MethodInvocation updateFigTexts StatementExpression MethodInvocation calcBounds	0
MethodDeclaration Modifier public addLocalVariableDeclaration FormalParameter ReferenceType String type FormalParameter ReferenceType String name StatementExpression MethodInvocation localVariables MemberReference name MemberReference type put	0
MethodDeclaration Modifier public Annotation Override caseAFeaturePrimaryExpression FormalParameter ReferenceType AFeaturePrimaryExpression node LocalVariableDeclaration ReferenceType Object VariableDeclarator subject MemberReference val LocalVariableDeclaration ReferenceType Object VariableDeclarator feature Literal null LocalVariableDeclaration ReferenceType List VariableDeclarator parameters Literal null StatementExpression MethodInvocation MemberReference node inAFeaturePrimaryExpression IfStatement BinaryOperation != MethodInvocation node getPathName Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getPathName StatementExpression Assignment MemberReference feature MethodInvocation node MethodInvocation toString MethodInvocation trim getPathName = IfStatement BinaryOperation != MethodInvocation node getTimeExpression Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getTimeExpression IfStatement BinaryOperation != MethodInvocation node getQualifiers Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getQualifiers IfStatement BinaryOperation != MethodInvocation node getFeatureCallParameters Literal null BlockStatement StatementExpression Assignment MemberReference val Literal null = StatementExpression MethodInvocation node MethodInvocation This apply getFeatureCallParameters StatementExpression Assignment MemberReference parameters Cast ReferenceType List MemberReference val = IfStatement BinaryOperation == MemberReference subject Literal null BlockStatement StatementExpression Assignment MemberReference val MethodInvocation vt MemberReference feature get = IfStatement BinaryOperation == MemberReference val Literal null BlockStatement StatementExpression Assignment MemberReference val This MemberReference interp MethodInvocation MethodInvocation feature MethodInvocation trim toString = BlockStatement StatementExpression Assignment MemberReference val MethodInvocation MemberReference subject MemberReference feature MemberReference MemberReference parameters runFeatureCall = StatementExpression MethodInvocation MemberReference node outAFeaturePrimaryExpression	1
MethodDeclaration Modifier public ReferenceType Model LocalVariableDeclaration ReferenceType Model VariableDeclarator profile MethodInvocation createModel LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereo Cast ReferenceType Stereotype MethodInvocation modelImpl MethodInvocation Literal "profile" MemberReference profile buildStereotype getExtensionMechanismsFactory StatementExpression MethodInvocation profile MethodInvocation MemberReference stereo add getStereotype ReturnStatement MemberReference profile	1
MethodDeclaration ReferenceType Multiplicity createMultiplicityInternal FormalParameter BasicType int lower FormalParameter BasicType int upper LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator multiplicity MethodInvocation modelImpl MethodInvocation getDataTypes MethodInvocation getMultiplicity MethodInvocation createMultiplicity getUmlPackage IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Multiplicity created for " MemberReference lower Literal ".." MemberReference upper debug StatementExpression MethodInvocation multiplicity MethodInvocation MethodInvocation MemberReference lower MemberReference upper createMultiplicityRange add getRange StatementExpression SuperMethodInvocation MemberReference multiplicity ReturnStatement MemberReference multiplicity	1
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb Literal "new " append StatementExpression MethodInvocation Type MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "[" append IfStatement BinaryOperation != MemberReference RankSpecifier Literal null BlockStatement StatementExpression MethodInvocation RankSpecifier MemberReference sb ToSource StatementExpression MethodInvocation sb Literal "]" append IfStatement BinaryOperation != MemberReference AdditionalRankSpecifiers Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation AdditionalRankSpecifiers size MemberReference ++ i BlockStatement StatementExpression MethodInvocation sb Literal "[" append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MethodInvocation AdditionalRankSpecifiers MemberReference j get MemberReference ++ j BlockStatement StatementExpression MethodInvocation sb Literal "," append StatementExpression MethodInvocation sb Literal "]" append IfStatement BinaryOperation != MemberReference Initializer Literal null BlockStatement StatementExpression MethodInvocation Initializer MemberReference sb ToSource	1
MethodDeclaration Modifier private removeHistoryTarget FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType Diagram BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it Cast ReferenceType Diagram MemberReference o WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation MethodInvocation it next removeHistoryTarget StatementExpression Assignment MemberReference it Cast ReferenceType Diagram MemberReference o = WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation MethodInvocation it next removeHistoryTarget LocalVariableDeclaration ReferenceType ListIterator VariableDeclarator it MethodInvocation history listIterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType WeakReference VariableDeclarator ref Cast ReferenceType WeakReference MethodInvocation it next LocalVariableDeclaration ReferenceType Object VariableDeclarator historyObject MethodInvocation ref get IfStatement MethodInvocation Model MethodInvocation MemberReference o isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference historyObject TernaryExpression BinaryOperation instanceof MemberReference historyObject ReferenceType Fig Cast ReferenceType Fig MemberReference historyObject MemberReference historyObject = IfStatement BinaryOperation == MemberReference o MemberReference historyObject BlockStatement IfStatement BinaryOperation <= MethodInvocation history MemberReference ref indexOf MemberReference currentTarget BlockStatement StatementExpression MemberReference -- currentTarget StatementExpression MethodInvocation it remove	1
MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal "dialog.title.add-events" localize	0
MethodDeclaration Modifier public Annotation Override updateListener FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType PropertyChangeEvent pce LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation pce getSource IfStatement BinaryOperation && BinaryOperation == MemberReference obj MemberReference modelElement BinaryOperation || Literal MethodInvocation MethodInvocation pce getPropertyName equals "stereotype" Literal MethodInvocation MethodInvocation pce getPropertyName equals "taggedValue" BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType AddAssociationEvent MethodInvocation Model MethodInvocation MethodInvocation pce getNewValue isAStereotype getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation pce getNewValue ArrayCreator ReferenceType String ArrayInitializer Literal "name" Literal "remove" addElementListener IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType RemoveAssociationEvent MethodInvocation Model MethodInvocation MethodInvocation pce getOldValue isAStereotype getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation pce getOldValue removeElementListener IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType AddAssociationEvent MethodInvocation Model MethodInvocation MethodInvocation pce getNewValue isATaggedValue getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation pce getNewValue addElementListener IfStatement BinaryOperation && BinaryOperation instanceof MemberReference pce ReferenceType RemoveAssociationEvent MethodInvocation Model MethodInvocation MethodInvocation pce getOldValue isATaggedValue getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation pce getOldValue removeElementListener	1
MethodDeclaration Modifier public ReferenceType Object getActivity FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ActivityNode BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of ReturnStatement Cast ReferenceType ActivityNode MemberReference handle	0
MethodDeclaration Modifier private static ReferenceType String generateAbstractness FormalParameter ReferenceType Object op IfStatement MethodInvocation Model MethodInvocation MemberReference op isAbstract getFacade BlockStatement ReturnStatement Literal "abstract " ReturnStatement Literal ""	0
MethodDeclaration Modifier public static ReferenceType UndoableAction getDestMultOne ReturnStatement MemberReference	0
MethodDeclaration Modifier public setEntry FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType State BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType Action BlockStatement StatementExpression Cast ReferenceType State MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or value: " MemberReference value	0
MethodDeclaration Modifier private initMenuCreateModelElements LocalVariableDeclaration ReferenceType List VariableDeclarator targets MethodInvocation TargetManager MethodInvocation getTargets getInstance LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType JMenuItem VariableDeclarator menuItems ClassCreator ReferenceType TreeSet TypeArgument ReferenceType JMenuItem IfStatement BinaryOperation >= MethodInvocation targets size Literal 2 BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator classifierRoleFound Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator classifierRolesOnly Literal true ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation targets iterator BinaryOperation && MethodInvocation it hasNext MemberReference classifierRolesOnly BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation it next isAClassifierRole getFacade BlockStatement StatementExpression Assignment MemberReference classifierRoleFound Literal true = BlockStatement StatementExpression Assignment MemberReference classifierRolesOnly Literal false = IfStatement MemberReference classifierRolesOnly BlockStatement StatementExpression MethodInvocation menuItems ClassCreator ReferenceType OrderedMenuItem ClassCreator ReferenceType ActionCreateAssociationRole MethodInvocation Model MethodInvocation getAssociationRole getMetaTypes MemberReference targets add IfStatement MemberReference ! classifierRoleFound BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator classifiersOnly Literal true ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation targets iterator BinaryOperation && MethodInvocation it hasNext MemberReference classifiersOnly BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation it next isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference classifiersOnly Literal false = IfStatement MemberReference classifiersOnly BlockStatement StatementExpression MethodInvocation menuItems ClassCreator ReferenceType OrderedMenuItem ClassCreator ReferenceType ActionCreateAssociation MethodInvocation Model MethodInvocation getAssociation getMetaTypes MemberReference targets add IfStatement BinaryOperation == MethodInvocation targets size Literal 2 BlockStatement StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal "menu.popup.depends-on" menuLocalize Literal " " addCreateModelElementAction StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getGeneralization getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal "menu.popup.generalizes" menuLocalize Literal " " addCreateModelElementAction StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getInclude getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal "menu.popup.includes" menuLocalize Literal " " addCreateModelElementAction StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getExtend getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal "menu.popup.extends" menuLocalize Literal " " addCreateModelElementAction StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getPackageImport getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal "menu.popup.has-permission-on" menuLocalize Literal " " addCreateModelElementAction StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getUsage getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal "menu.popup.uses" menuLocalize Literal " " addCreateModelElementAction StatementExpression MethodInvocation MemberReference menuItems MethodInvocation Model MethodInvocation getAbstraction getMetaTypes BinaryOperation + BinaryOperation + Literal " " MethodInvocation Literal "menu.popup.realizes" menuLocalize Literal " " addCreateModelElementAction IfStatement BinaryOperation == MethodInvocation targets size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation targets Literal 0 get ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator metaType MethodInvocation Model MethodInvocation getMetaTypes BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference metaType MemberReference target isContainmentValid getUmlFactory BlockStatement StatementExpression MethodInvocation menuItems ClassCreator ReferenceType OrderedMenuItem ClassCreator ReferenceType ActionCreateContainedModelElement MemberReference metaType MemberReference target add IfStatement BinaryOperation == MethodInvocation menuItems size Literal 1 BlockStatement StatementExpression MethodInvocation MethodInvocation menuItems MethodInvocation next iterator add IfStatement BinaryOperation > MethodInvocation menuItems size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType JMenu VariableDeclarator menu ClassCreator ReferenceType JMenu MethodInvocation Literal "menu.popup.create-model-element" menuLocalize StatementExpression MethodInvocation MemberReference menu add ForStatement EnhancedForControl VariableDeclaration ReferenceType JMenuItem VariableDeclarator item MemberReference menuItems BlockStatement StatementExpression MethodInvocation menu MemberReference item add	1
MethodDeclaration Modifier public ReferenceType String createForeignKey FormalParameter ReferenceType ForeignKeyDefinition foreignKeyDefinition LocalVariableDeclaration ReferenceType String VariableDeclarator tableName MethodInvocation foreignKeyDefinition getTableName LocalVariableDeclaration ReferenceType List VariableDeclarator columnNames MethodInvocation foreignKeyDefinition getColumnNames LocalVariableDeclaration ReferenceType String VariableDeclarator referencesTableName MethodInvocation foreignKeyDefinition getReferencesTableName LocalVariableDeclaration ReferenceType List VariableDeclarator referencesColumnNames MethodInvocation foreignKeyDefinition getReferencesColumnNames LocalVariableDeclaration ReferenceType String VariableDeclarator foreignKeyName MethodInvocation foreignKeyDefinition getForeignKeyName LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MethodInvocation MemberReference tableName append Literal "ALTER TABLE " append StatementExpression MethodInvocation sb MethodInvocation MemberReference foreignKeyName append MethodInvocation MemberReference LINE_SEPARATOR append Literal " ADD CONSTRAINT " append StatementExpression MethodInvocation sb Literal "FOREIGN KEY (" append StatementExpression MethodInvocation sb MethodInvocation Utils MemberReference columnNames stringsToCommaString append StatementExpression MethodInvocation sb Literal ") REFERENCES " append StatementExpression MethodInvocation sb MethodInvocation Literal " (" append MemberReference referencesTableName append StatementExpression MethodInvocation sb MethodInvocation Utils MemberReference referencesColumnNames stringsToCommaString append StatementExpression MethodInvocation sb Literal ")" append LocalVariableDeclaration BasicType int VariableDeclarator refLower MethodInvocation foreignKeyDefinition getReferencesLower IfStatement BinaryOperation == MemberReference refLower Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal " ON DELETE SET NULL" append BlockStatement StatementExpression MethodInvocation sb Literal " ON DELETE CASCADE" append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal ";" append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append LocalVariableDeclaration BasicType int VariableDeclarator upper MethodInvocation foreignKeyDefinition getUpper IfStatement BinaryOperation == MemberReference upper Literal 1 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference foreignKeyDefinition getOneToOneTrigger append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType Operation createOperation LocalVariableDeclaration ReferenceType Operation VariableDeclarator myOperation MethodInvocation MethodInvocation getOperation MethodInvocation createOperation getCorePackage StatementExpression SuperMethodInvocation MemberReference myOperation ReturnStatement MemberReference myOperation	0
MethodDeclaration Modifier public setMessageSort FormalParameter ReferenceType Object message FormalParameter ReferenceType Object messageSort LocalVariableDeclaration ReferenceType MessageSort VariableDeclarator ms Cast ReferenceType MessageSort MemberReference messageSort LocalVariableDeclaration ReferenceType Message VariableDeclarator m Cast ReferenceType Message MemberReference message StatementExpression MethodInvocation m MemberReference ms setMessageSort	0
MethodDeclaration Modifier public final ReferenceType List TypeArgument ReferenceType GUISettingsTabInterface ReturnStatement MethodInvocation Collections MemberReference	1
MethodDeclaration Modifier protected fireIntervalAdded FormalParameter ReferenceType Object source FormalParameter BasicType int index0 FormalParameter BasicType int index1 IfStatement BinaryOperation && MemberReference fireListEvents MemberReference ! buildingModel BlockStatement StatementExpression SuperMethodInvocation MemberReference source MemberReference index0 MemberReference index1 fireIntervalAdded	1
MethodDeclaration Modifier protected ReferenceType JComboBox ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType ArgoHelpEvent e StatementExpression MethodInvocation Literal "" showStatusOnSwingThread	0
MethodDeclaration Modifier public static ReferenceType FindDialog getInstance IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement StatementExpression Assignment MemberReference instance ClassCreator ReferenceType FindDialog = ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public changedUpdate FormalParameter ReferenceType DocumentEvent e IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MethodInvocation textArea getText	0
MethodDeclaration Modifier public BasicType boolean enable StatementExpression MethodInvocation ImporterManager MethodInvocation This getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Enumeration createEnumeration ReturnStatement MethodInvocation createEnumeration	0
MethodDeclaration FormalParameter Modifier final ReferenceType FigMessage message IfStatement BinaryOperation && BinaryOperation && MethodInvocation message MethodInvocation MethodInvocation message getDestFigNode equals MethodInvocation ! MethodInvocation message getSourceFigNode equals BlockStatement StatementExpression MethodInvocation updateHeadOffset StatementExpression MethodInvocation MethodInvocation getX MethodInvocation getY MethodInvocation getWidth MethodInvocation getHeight setBounds	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation cover getLineColor	0
MethodDeclaration Modifier public putToken FormalParameter ReferenceType String s IfStatement BinaryOperation == MemberReference s Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal "Cannot put a null token" StatementExpression Assignment MemberReference putToken MemberReference s =	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Extension	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated ReferenceType ArgoDiagram getActiveDiagram ReturnStatement MemberReference activeDiagram	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType InstanceSpecification	0
MethodDeclaration Modifier public setInitialValue FormalParameter ReferenceType Object at FormalParameter ReferenceType Object expr StatementExpression SuperMethodInvocation MemberReference at MemberReference expr setInitialValue StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier private setTargetPriority IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator p Cast ReferenceType String MethodInvocation priority getSelectedItem IfStatement BinaryOperation == MemberReference p Literal null BlockStatement ReturnStatement IfStatement MethodInvocation p MemberReference ArraySelector Literal 0 PRIORITIES equals BlockStatement StatementExpression MethodInvocation target MemberReference ToDoItem HIGH_PRIORITY setPriority IfStatement MethodInvocation p MemberReference ArraySelector Literal 1 PRIORITIES equals BlockStatement StatementExpression MethodInvocation target MemberReference ToDoItem MED_PRIORITY setPriority IfStatement MethodInvocation p MemberReference ArraySelector Literal 2 PRIORITIES equals BlockStatement StatementExpression MethodInvocation target MemberReference ToDoItem LOW_PRIORITY setPriority	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getSubmachineStates getFacade setAllElements	0
MethodDeclaration Modifier protected BasicType boolean isValidEvent FormalParameter ReferenceType PropertyChangeEvent e LocalVariableDeclaration BasicType boolean VariableDeclarator valid Literal false IfStatement BinaryOperation instanceof MethodInvocation MemberReference e getChangedElement ReferenceType Collection BlockStatement IfStatement BinaryOperation || BinaryOperation && BinaryOperation == MethodInvocation e getNewValue Literal null BinaryOperation != MethodInvocation e getOldValue Literal null MethodInvocation MethodInvocation MemberReference e getChangedElement isValidElement BlockStatement StatementExpression Assignment MemberReference valid Literal true = BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MethodInvocation MemberReference e getChangedElement IfStatement MethodInvocation ! col isEmpty BlockStatement StatementExpression Assignment MemberReference valid Literal true = ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference col BlockStatement IfStatement MethodInvocation ! MemberReference o isValidElement BlockStatement StatementExpression Assignment MemberReference valid Literal false = BreakStatement BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MethodInvocation e getOldValue ReferenceType Collection Cast ReferenceType Collection MethodInvocation e getOldValue BlockStatement StatementExpression Assignment MemberReference valid Literal true = ReturnStatement MemberReference valid	1
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation != MemberReference renderer Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation renderer This getOwner IfStatement BinaryOperation && BinaryOperation == MemberReference owner MethodInvocation evt getSource BinaryOperation instanceof MemberReference evt ReferenceType DeleteInstanceEvent BlockStatement ReturnStatement IfStatement BinaryOperation != MemberReference owner Literal null BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference owner isRemoved getUmlFactory BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Encountered deleted object during delete of " MemberReference owner warn ReturnStatement StatementExpression MethodInvocation renderer This MethodInvocation MemberReference owner MethodInvocation renderer This getNotationSettings toString notationRenderingChanged IfStatement BinaryOperation || BinaryOperation instanceof MemberReference evt ReferenceType AddAssociationEvent BinaryOperation instanceof MemberReference evt ReferenceType RemoveAssociationEvent BlockStatement StatementExpression MethodInvocation MemberReference owner initialiseListener	1
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase DESCRIPTION ReturnStatement Literal Notation Module for C++" SwitchStatementCase AUTHOR ReturnStatement Literal "Luis Sergio SwitchStatementCase ReturnStatement Literal SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference target setTarget	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator ep IfStatement BinaryOperation == MemberReference extensionLocation Literal null BlockStatement StatementExpression Assignment MemberReference ep MethodInvocation createExtensionPoint = StatementExpression Cast ReferenceType UseCase MemberReference extendedCase BlockStatement StatementExpression Assignment MemberReference ep Cast ReferenceType MemberReference extensionLocation = LocalVariableDeclaration ReferenceType Extend VariableDeclarator extend MethodInvocation createExtend StatementExpression MethodInvocation extend Cast ReferenceType UseCase MemberReference extendedCase setExtendedCase StatementExpression MethodInvocation extend Cast ReferenceType UseCase MemberReference extension setExtension StatementExpression MethodInvocation extend MethodInvocation MemberReference ep add getExtensionLocations StatementExpression MethodInvocation MethodInvocation MemberReference extend add getParams StatementExpression MethodInvocation MethodInvocation MemberReference ep add getParams	0
MethodDeclaration Modifier public BasicType boolean isReverseDropConnection ReturnStatement MemberReference reverseDropConnection	0
MethodDeclaration Modifier protected ReferenceType CommonBehaviorHelper getComponent ReturnStatement MemberReference impl	0
MethodDeclaration Modifier public clearMethodCalls StatementExpression MethodInvocation methodCalls clear	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isATransition getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType Object getContext FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAStateMachine BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement MethodInvocation MemberReference handle isAInteraction BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier protected applyArrowHeads IfStatement BinaryOperation || BinaryOperation == MemberReference srcEnd Literal null BinaryOperation == MemberReference destEnd Literal null BlockStatement ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator sourceArrowType MethodInvocation srcEnd LocalVariableDeclaration BasicType int VariableDeclarator destArrowType MethodInvocation destEnd IfStatement BinaryOperation && BinaryOperation && MethodInvocation ! MethodInvocation getSettings BinaryOperation > MemberReference sourceArrowType Literal 2 BinaryOperation > MemberReference destArrowType Literal 2 BlockStatement StatementExpression Assignment MemberReference sourceArrowType Literal 3 -= StatementExpression Assignment MemberReference destArrowType Literal 3 -= StatementExpression MethodInvocation MemberReference FigAssociationEndAnnotation ArraySelector MemberReference sourceArrowType ARROW_HEADS setSourceArrowHead StatementExpression MethodInvocation MemberReference FigAssociationEndAnnotation ArraySelector MemberReference destArrowType ARROW_HEADS	1
MethodDeclaration Modifier public static ReferenceType PredicateType create ReturnStatement ClassCreator ReferenceType PredicateMType Literal null Literal 0	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAUseCase getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getExtensionPoints getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Deprecated setShowProperties FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MethodInvocation npSettings isShowProperties MemberReference showem BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Memento VariableDeclarator ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation KEY_SHOW_PROPERTIES MethodDeclaration Modifier public redo StatementExpression MethodInvocation npSettings MemberReference showem setShowProperties StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression MethodInvocation npSettings MemberReference ! showem setShowProperties StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent StatementExpression MethodInvocation MemberReference doUndoable	0
MethodDeclaration Modifier private ReferenceType String illegalArgumentString FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg illegalArgument ReturnStatement Literal null	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Collection VariableDeclarator targets MethodInvocation TargetManager MethodInvocation getTargets getInstance StatementExpression Assignment MemberReference updatingSelectionViaTreeSelection Literal true = StatementExpression MethodInvocation MethodInvocation targets toArray setSelection StatementExpression Assignment MemberReference updatingSelectionViaTreeSelection Literal false =	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object FormalParameter BasicType int x FormalParameter BasicType int y ReturnStatement Literal null	0
MethodDeclaration Modifier protected ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation getCommonBehaviorFactory	0
MethodDeclaration Modifier protected IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference notationProviderName Literal null BinaryOperation != MethodInvocation getOwner Literal null MethodInvocation Model MethodInvocation MethodInvocation getOwner isANamedElement getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr MethodInvocation notationProviderName MethodInvocation getOwner MethodInvocation getNotationSettings toString StatementExpression MethodInvocation nameFig MemberReference nameStr setText StatementExpression MethodInvocation updateFont StatementExpression MethodInvocation calcBounds StatementExpression MethodInvocation MethodInvocation getBounds setBounds	0
MethodDeclaration Modifier public ReferenceType Object buildTransition FormalParameter ReferenceType Object owningState FormalParameter ReferenceType Object source FormalParameter ReferenceType Object dest IfStatement BinaryOperation || BinaryOperation instanceof MemberReference source ReferenceType Vertex BinaryOperation instanceof MemberReference dest ReferenceType Vertex BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "The source and dest must both be vertices. Source=" MemberReference source Literal " dest=" MemberReference dest IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference owningState ReferenceType BinaryOperation instanceof MemberReference owningState ReferenceType State BinaryOperation instanceof MemberReference owningState ReferenceType Region BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Did not expect a " MemberReference owningState LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator region IfStatement BinaryOperation || BinaryOperation instanceof MemberReference owningState ReferenceType BinaryOperation instanceof MemberReference owningState ReferenceType State BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator regions MethodInvocation Model MethodInvocation MemberReference owningState getRegions getStateMachinesHelper IfStatement MethodInvocation regions isEmpty BlockStatement StatementExpression Assignment MemberReference region MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation getRegion getMetaTypes MemberReference owningState buildNode getUmlFactory = BlockStatement StatementExpression Assignment MemberReference region MethodInvocation regions Literal 0 get = BlockStatement StatementExpression Assignment MemberReference region Cast ReferenceType Region MemberReference owningState = LocalVariableDeclaration ReferenceType Transition VariableDeclarator transition MethodInvocation createTransition StatementExpression MethodInvocation transition Cast ReferenceType Vertex MemberReference source setSource StatementExpression MethodInvocation transition Cast ReferenceType Vertex MemberReference dest setTarget StatementExpression MethodInvocation transition Cast ReferenceType Region MemberReference region setContainer ReturnStatement MemberReference transition	1
MethodDeclaration Modifier private handleFireHelpEvent FormalParameter ReferenceType ArgoHelpEvent event FormalParameter ReferenceType ArgoHelpEventListener listener SwitchStatement MethodInvocation event getEventType SwitchStatementCase MemberReference ArgoEventTypes HELP_CHANGED StatementExpression MethodInvocation listener MemberReference event BreakStatement SwitchStatementCase MemberReference ArgoEventTypes HELP_REMOVED StatementExpression MethodInvocation listener MemberReference event BreakStatement SwitchStatementCase StatementExpression MethodInvocation LOG BinaryOperation + Literal "Invalid event:" MethodInvocation event getEventType error BreakStatement	1
MethodDeclaration Modifier protected Annotation Override LocalVariableDeclaration ReferenceType Collection VariableDeclarator list ClassCreator ReferenceType ArrayList Literal 1 LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation getSelectedModelElement IfStatement BinaryOperation == MemberReference element Literal null BlockStatement StatementExpression Assignment MemberReference element Literal " " = StatementExpression MethodInvocation list MemberReference element add StatementExpression MethodInvocation MemberReference list setElements	0
MethodDeclaration ReferenceType DiagramElement createBorder FormalParameter Modifier final ReferenceType Rectangle rect FormalParameter Modifier final ReferenceType Color lineColor FormalParameter Modifier final ReferenceType Color fillColor ReturnStatement ClassCreator ReferenceType Rect MemberReference rect x MemberReference rect y MemberReference rect width MemberReference rect height MemberReference lineColor MemberReference fillColor	0
MethodDeclaration Modifier public addBaseClass FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object baseClass IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BlockStatement LocalVariableDeclaration ReferenceType org ReferenceType ReferenceType uml2 ReferenceType uml ReferenceType Class VariableDeclarator metaclass MethodInvocation MemberReference baseClass getMetaclass LocalVariableDeclaration ReferenceType Profile VariableDeclarator profile Cast ReferenceType Stereotype MemberReference handle IfStatement BinaryOperation && BinaryOperation != MemberReference metaclass Literal null BinaryOperation != MemberReference profile Literal null BlockStatement StatementExpression MethodInvocation profile MemberReference metaclass createMetaclassReference StatementExpression Cast ReferenceType Stereotype MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Not a Stereotype or illegal base class"	1
MethodDeclaration Modifier public ReferenceType PropPanel createPropPanel FormalParameter ReferenceType Object object IfStatement BinaryOperation instanceof MemberReference object ReferenceType UMLCollaborationDiagram BlockStatement ReturnStatement ClassCreator ReferenceType ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target ReturnStatement MethodInvocation impl MemberReference source MemberReference target	0
MethodDeclaration Modifier public static ReferenceType UndoableAction ReturnStatement MemberReference srcMultZeroToMany	0
