MethodDeclaration Modifier public BasicType int getOptionalArgsCount ReturnStatement TernaryExpression BinaryOperation == MemberReference optArgs Literal null Literal 0 MethodInvocation optArgs size	0
MethodDeclaration Modifier public static ReferenceType RubyModule createJavaInterfaceTemplateModule FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator javaInterfaceTemplate MethodInvocation runtime Literal "JavaInterfaceTemplate" defineModule LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator singleton MethodInvocation javaInterfaceTemplate getSingletonClass StatementExpression MethodInvocation singleton MemberReference context Literal "java_class" addReadAttribute StatementExpression MethodInvocation singleton ClassReference ReferenceType JavaInterfaceTemplate defineAnnotatedMethods ReturnStatement MemberReference javaInterfaceTemplate	1
MethodDeclaration Modifier public final ReferenceType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String varNamesDescriptor ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference varNamesDescriptor Literal 5 getScope	0
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object array FormalParameter BasicType int i ReturnStatement MethodInvocation RubyFixnum MemberReference runtime Cast BasicType long MemberReference array newFixnum	0
MethodDeclaration Modifier final public static BasicType byte intToCharBytes FormalParameter BasicType int i ReturnStatement MethodInvocation ByteList MethodInvocation Integer MemberReference i toString plain	0
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object array FormalParameter BasicType int i ReturnStatement MethodInvocation MemberReference runtime Cast ReferenceType BigInteger MemberReference array convert	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + SuperMethodInvocation toString Literal "(" MemberReference _class Literal ", " MemberReference Literal ")"	0
MethodDeclaration Modifier public Annotation Override BasicType int hashCode ReturnStatement BinaryOperation + BinaryOperation * Literal 53 Literal 5 Cast BasicType int BinaryOperation ^ This MemberReference offset BinaryOperation >>> This MemberReference offset Literal 32	0
MethodDeclaration Modifier public ReferenceType Object case386_line1462 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ArrayNode MethodInvocation getPosition = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject callIter FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block TryStatement ReturnStatement MethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference arg1 MemberReference block callBlock CatchClause CatchClauseParameter JumpException.BreakJump bj ReturnStatement MethodInvocation MemberReference context MemberReference bj handleBreakJump CatchClause CatchClauseParameter JumpException.RetryJump rj ThrowStatement MethodInvocation MemberReference context retryJumpError StatementExpression MethodInvocation block escape	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "new" ElementValuePair rest Literal true ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType IRubyObject newInstance FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType VariableDeclarator result ClassCreator ReferenceType MethodInvocation context getRuntime Cast ReferenceType RubyClass MemberReference recv StatementExpression MethodInvocation result MemberReference args MemberReference block callInit ReturnStatement MemberReference result	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getMethod FormalParameter ReferenceType String method FormalParameter ReferenceType Class arg1 FormalParameter ReferenceType Class arg2 LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator descriptor ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 MemberReference arg2 IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 MemberReference arg2 ClassReference ReferenceType Block LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtor LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCall StatementExpression MethodInvocation MemberReference mv MemberReference METHOD_ARGS_INDEX Literal 2 MemberReference descriptor loadArguments StatementExpression MethodInvocation mv MemberReference ALOAD Literal 3 visitVarInsn StatementExpression MethodInvocation mv MemberReference INVOKEVIRTUAL MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 4 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType InvocationCallback VariableDeclarator ic Cast ReferenceType InvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity twoArguments setArity StatementExpression MethodInvocation ic MemberReference descriptor setArgumentTypes StatementExpression MethodInvocation ic MemberReference method setJavaName ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation arg1 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock MethodInvocation RuntimeHelpers MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference aBlock getBlock call	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "detect/find" checkContext IfStatement MethodInvocation block MethodInvocation isTrue MemberReference ctx MemberReference larg yield BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference larg = ThrowStatement MemberReference JumpException SPECIAL_JUMP ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType Block block IfStatement BinaryOperation >= MemberReference box callCount Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference block call MemberReference context MemberReference name tryJitReturnMethod ReturnStatement MethodInvocation box.actualMethod MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference block call	0
MethodDeclaration Modifier public BasicType int getID ReturnStatement MemberReference _id	0
MethodDeclaration Modifier public Annotation Override BasicType int available IOException IfStatement MemberReference closed BlockStatement ThrowStatement ClassCreator ReferenceType IOException Literal is closed" ReturnStatement Cast ReferenceType Integer MethodInvocation inputJoin MemberReference Channel AVAILABLE Literal null call	0
MethodDeclaration Modifier public final ReferenceType CompiledBlockCallback FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String method ReturnStatement MethodInvocation runtimeCache This MemberReference runtime Literal 6 MemberReference method	0
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value1 FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType Block block StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MemberReference value1 MemberReference block Literal false assign StatementExpression MethodInvocation parameter2 MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference block Literal false assign	0
MethodDeclaration Modifier public synchronized Annotation JRubyMethod Annotation Override ReferenceType IRubyObject clear FormalParameter ReferenceType ThreadContext context StatementExpression SuperMethodInvocation MemberReference context clear StatementExpression MethodInvocation notifyAll ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier private ReferenceType IRubyObject openFile19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType RubyString VariableDeclarator filename MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args get_path StatementExpression MethodInvocation context MethodInvocation MemberReference filename checkSafeString getRuntime StatementExpression Assignment MemberReference path MethodInvocation filename getUnicodeValue = LocalVariableDeclaration ReferenceType String VariableDeclarator modeString LocalVariableDeclaration ReferenceType ModeFlags VariableDeclarator modes ClassCreator ReferenceType ModeFlags LocalVariableDeclaration BasicType int VariableDeclarator perm Literal 0 TryStatement IfStatement BinaryOperation > MemberReference args length Literal 1 BlockStatement StatementExpression Assignment MemberReference modeString MemberReference ArraySelector Literal 1 MethodInvocation convertToString MethodInvocation toString args = StatementExpression Assignment MemberReference modes MethodInvocation MemberReference context MemberReference ArraySelector Literal 1 args parseModes19 = BlockStatement StatementExpression Assignment MemberReference modeString Literal "r" = StatementExpression Assignment MemberReference modes MethodInvocation MemberReference context MethodInvocation RubyString MethodInvocation context getRuntime MemberReference modeString newString parseModes19 = IfStatement BinaryOperation && BinaryOperation > MemberReference args length Literal 2 MemberReference ! ArraySelector Literal 2 MethodInvocation isNil args BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector Literal 2 args ReferenceType RubyHash BlockStatement StatementExpression Assignment MemberReference modes MethodInvocation MemberReference context MemberReference ArraySelector Literal 2 args MemberReference modes parseOptions = BlockStatement StatementExpression Assignment MemberReference perm MethodInvocation MemberReference args getFilePermissions = IfStatement BinaryOperation > MemberReference perm Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference path MemberReference modes MemberReference perm sysopenInternal BlockStatement StatementExpression MethodInvocation MemberReference path MemberReference modeString MemberReference modes openInternal CatchClause CatchClauseParameter InvalidValueException ex ThrowStatement MethodInvocation context MethodInvocation newErrnoEINVALError getRuntime ReturnStatement This	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "hex" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject hex FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation Literal 16 Literal false	0
MethodDeclaration Modifier public BasicType long getAddress ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public final ReferenceType IRubyObject fromNative FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int value ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType Object case422_line1582 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals gettable = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static ReferenceType RubyClass createPointerClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule module LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation module Literal "Pointer" MethodInvocation module MemberReference AbstractMemory ABSTRACT_MEMORY_RUBY_CLASS getClass MemberReference PointerAllocator INSTANCE defineClassUnder StatementExpression MethodInvocation result ClassReference ReferenceType Pointer defineAnnotatedMethods StatementExpression MethodInvocation result ClassReference ReferenceType Pointer defineAnnotatedConstants StatementExpression MethodInvocation module Literal "NullPointerError" MethodInvocation runtime getRuntimeError MethodInvocation runtime MethodInvocation getAllocator getRuntimeError defineClassUnder StatementExpression MethodInvocation result Literal "NULL" ClassCreator ReferenceType Pointer MemberReference runtime MemberReference result ClassCreator ReferenceType MemberReference runtime fastSetConstant ReturnStatement MemberReference result	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "kill!" Literal "exit!" Literal "terminate!" ReferenceType IRubyObject kill_bang ThrowStatement MethodInvocation MethodInvocation Literal "Thread#kill!, exit!, and terminate! are not and not supported" newNotImplementedError getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "chr" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType RubyString chr FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType long VariableDeclarator value MethodInvocation getLongValue IfStatement BinaryOperation || BinaryOperation < MemberReference value Literal 0 BinaryOperation > MemberReference value Literal 0xff ThrowStatement MethodInvocation runtime BinaryOperation + This MethodInvocation toString Literal " out of char range" newRangeError ReturnStatement MethodInvocation RubyString MemberReference runtime MemberReference ArraySelector Cast BasicType int MemberReference value SINGLE_CHAR_BYTELISTS newStringShared	1
MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value TryStatement StatementExpression MethodInvocation output MemberReference key StatementExpression MethodInvocation output MemberReference value CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType VisitorIOException MemberReference e	0
MethodDeclaration Modifier public static ReferenceType RubyClass createBufferClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule module LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation module Literal "Buffer" MethodInvocation module MemberReference AbstractMemory ABSTRACT_MEMORY_RUBY_CLASS getClass MemberReference ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR defineClassUnder StatementExpression MethodInvocation result ClassReference ReferenceType Buffer defineAnnotatedMethods StatementExpression MethodInvocation result ClassReference ReferenceType Buffer defineAnnotatedConstants ReturnStatement MemberReference result	1
MethodDeclaration Modifier public static BasicType int dummy2 ReturnStatement Literal 1	1
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This visitVCallNode	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "bytes" ElementValuePair frame Literal true ReferenceType IRubyObject bytes FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block each_byte MethodInvocation MethodInvocation context getRuntime This Literal "bytes" enumeratorize	0
MethodDeclaration Modifier public trycatch FormalParameter ReferenceType String type FormalParameter ReferenceType Runnable body FormalParameter ReferenceType Runnable catchBody LocalVariableDeclaration ReferenceType Label VariableDeclarator before ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator after ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator catchStart ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator done ClassCreator ReferenceType Label StatementExpression MethodInvocation MemberReference before MemberReference after MemberReference catchStart MemberReference type trycatch StatementExpression MethodInvocation MemberReference before label StatementExpression MethodInvocation body run StatementExpression MethodInvocation MemberReference after label StatementExpression MethodInvocation MemberReference done go_to IfStatement BinaryOperation != MemberReference catchBody Literal null BlockStatement StatementExpression MethodInvocation MemberReference catchStart label StatementExpression MethodInvocation catchBody run StatementExpression MethodInvocation MemberReference done label	0
MethodDeclaration Modifier public ReferenceType String getJRubyHome IfStatement BinaryOperation == MemberReference jrubyHome Literal null BlockStatement IfStatement MethodInvocation ! Ruby isSecurityRestricted BlockStatement StatementExpression Assignment MemberReference jrubyHome MethodInvocation SafePropertyAccessor Literal "jruby.home" getProperty = IfStatement BinaryOperation != MemberReference jrubyHome Literal null BlockStatement StatementExpression Assignment MemberReference jrubyHome MethodInvocation MemberReference jrubyHome verifyHome = BlockStatement TryStatement StatementExpression Assignment MemberReference jrubyHome MethodInvocation MethodInvocation Literal "/META-INF/jruby.home" getResource MethodInvocation toURI MethodInvocation getSchemeSpecificPart getClass = CatchClause CatchClauseParameter Exception e IfStatement BinaryOperation != MemberReference jrubyHome Literal null BlockStatement StatementExpression Assignment MemberReference jrubyHome MethodInvocation MemberReference jrubyHome verifyHome = BlockStatement StatementExpression Assignment MemberReference jrubyHome MethodInvocation System Literal "java.io.tmpdir" getProperty = ReturnStatement MemberReference jrubyHome	1
MethodDeclaration Modifier public ReferenceType Label getNewLabel FormalParameter ReferenceType String lblPrefix LocalVariableDeclaration ReferenceType Integer VariableDeclarator idx MethodInvocation _nextVarIndex MemberReference lblPrefix get IfStatement BinaryOperation == MemberReference idx Literal null StatementExpression Assignment MemberReference idx Literal 0 = StatementExpression MethodInvocation _nextVarIndex MemberReference lblPrefix BinaryOperation + MemberReference idx Literal 1 put ReturnStatement ClassCreator ReferenceType Label BinaryOperation + MemberReference lblPrefix MemberReference idx	1
MethodDeclaration Modifier private BasicType boolean isCachedFrom FormalParameter ReferenceType RubyModule target FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter BasicType int index ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference value Literal null BinaryOperation == MemberReference ArraySelector MemberReference index MethodInvocation context MethodInvocation getRuntime BinaryOperation == MemberReference ArraySelector MemberReference index constantTargetHashes MethodInvocation target hashCode	0
MethodDeclaration Modifier public join InterruptedException LocalVariableDeclaration ReferenceType Thread VariableDeclarator thread MethodInvocation nativeThread get IfStatement BinaryOperation != MemberReference thread Literal null StatementExpression MethodInvocation thread join	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "avail_out" ReferenceType IRubyObject avail_out ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime zero	1
MethodDeclaration Modifier public ReferenceType Object case349_line1302 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ZSuperNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator proxy MethodInvocation oldNew MemberReference context MemberReference self MemberReference clazz Literal "new_proxy" MemberReference arg0 MemberReference block call IfStatement BinaryOperation instanceof MethodInvocation proxy dataGetStruct ReferenceType JavaObject BlockStatement StatementExpression MethodInvocation RuntimeHelpers MemberReference context MemberReference proxy Literal "__jcreate!" MemberReference arg0 MemberReference block invoke ReturnStatement MemberReference proxy	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation Integer MemberReference _index toString	0
MethodDeclaration Modifier public final ReferenceType RubyString FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 8 getString	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_a" Annotation Override ReferenceType RubyArray to_a LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime TryStatement LocalVariableDeclaration Modifier final ReferenceType RubyArray VariableDeclarator result MethodInvocation RubyArray MemberReference runtime MemberReference size newArray StatementExpression MethodInvocation ClassCreator ReferenceType Visitor MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation result MethodInvocation RubyArray MemberReference runtime MemberReference key MemberReference value newArray append visitAll StatementExpression MethodInvocation result MethodInvocation isTaint setTaint ReturnStatement MemberReference result CatchClause CatchClauseParameter NegativeArraySizeException ThrowStatement MethodInvocation concurrentModification	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType LISTNODE	0
MethodDeclaration Modifier public final BasicType int op_cmp19 FormalParameter ReferenceType RubyString other LocalVariableDeclaration BasicType int VariableDeclarator ret MethodInvocation value MemberReference other value cmp IfStatement BinaryOperation && BinaryOperation == MemberReference ret Literal 0 MethodInvocation ! MemberReference other isComparableWith BlockStatement ReturnStatement TernaryExpression BinaryOperation > MethodInvocation value.encoding getIndex MethodInvocation other.value.encoding getIndex Literal 1 Literal - 1 ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType Node getValue ReturnStatement MemberReference node	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject get ReturnStatement MethodInvocation runtime MethodInvocation getLoadedFeatures	0
MethodDeclaration Modifier private static ReferenceType IRubyObject expandPathInternal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter BasicType boolean expandUser LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType String VariableDeclarator relativePath MethodInvocation MethodInvocation getUnicodeValue MemberReference context MemberReference ArraySelector Literal 0 args get_path LocalVariableDeclaration BasicType boolean VariableDeclarator isAbsoluteWithFilePrefix MethodInvocation relativePath Literal "file:" startsWith LocalVariableDeclaration ReferenceType String VariableDeclarator cwd Literal null IfStatement MemberReference expandUser BlockStatement StatementExpression Assignment MemberReference relativePath MethodInvocation MemberReference context MemberReference relativePath expandUserPath = IfStatement BinaryOperation && BinaryOperation == MemberReference args length Literal 2 MemberReference ! ArraySelector Literal 1 MethodInvocation isNil args BlockStatement StatementExpression Assignment MemberReference cwd MethodInvocation MethodInvocation getUnicodeValue MemberReference context MemberReference ArraySelector Literal 1 args get_path = IfStatement MemberReference expandUser BlockStatement StatementExpression Assignment MemberReference cwd MethodInvocation MemberReference context MemberReference cwd expandUserPath = StatementExpression Assignment MemberReference cwd MethodInvocation MemberReference runtime MemberReference cwd Literal null adjustRootPathOnWindows = LocalVariableDeclaration BasicType boolean VariableDeclarator startsWithSlashNotOnWindows BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference cwd Literal null MemberReference ! Platform IS_WINDOWS BinaryOperation > MethodInvocation cwd length Literal 0 BinaryOperation == MethodInvocation cwd Literal 0 charAt Literal '/' IfStatement BinaryOperation && MemberReference ! startsWithSlashNotOnWindows MethodInvocation ! MemberReference cwd startsWithDriveLetterOnWindows BlockStatement StatementExpression Assignment MemberReference cwd ClassCreator MethodInvocation getAbsolutePath ReferenceType File MethodInvocation runtime getCurrentDirectory MemberReference cwd = BlockStatement StatementExpression Assignment MemberReference cwd MethodInvocation runtime getCurrentDirectory = IfStatement BinaryOperation == MemberReference cwd Literal null ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration ReferenceType String VariableDeclarator padSlashes Literal "" IfStatement MemberReference ! Platform IS_WINDOWS BlockStatement IfStatement BinaryOperation && BinaryOperation > MethodInvocation relativePath length Literal 0 BinaryOperation == MethodInvocation relativePath Literal 0 charAt Literal '/' BlockStatement StatementExpression Assignment MemberReference padSlashes MethodInvocation MemberReference relativePath countSlashes = IfStatement BinaryOperation && BinaryOperation > MethodInvocation cwd length Literal 0 BinaryOperation == MethodInvocation cwd Literal 0 charAt Literal '/' BlockStatement StatementExpression Assignment MemberReference padSlashes MethodInvocation MemberReference cwd countSlashes = LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator path IfStatement BinaryOperation == MethodInvocation relativePath length Literal 0 BlockStatement StatementExpression Assignment MemberReference path MethodInvocation JRubyFile MemberReference relativePath MemberReference cwd create = BlockStatement StatementExpression Assignment MemberReference relativePath MethodInvocation MemberReference runtime MemberReference relativePath MemberReference cwd adjustRootPathOnWindows = StatementExpression Assignment MemberReference path MethodInvocation JRubyFile MemberReference cwd MemberReference relativePath create = LocalVariableDeclaration ReferenceType String VariableDeclarator tempResult BinaryOperation + MemberReference padSlashes MethodInvocation MethodInvocation path getAbsolutePath canonicalize IfStatement MemberReference isAbsoluteWithFilePrefix BlockStatement StatementExpression Assignment MemberReference tempResult MethodInvocation tempResult MethodInvocation tempResult Literal "file:" indexOf substring = ReturnStatement MethodInvocation runtime MemberReference tempResult newString	1
MethodDeclaration Modifier public ReferenceType RubyEncoding getEncoding FormalParameter ReferenceType Encoding enc LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation enc getIndex LocalVariableDeclaration ReferenceType RubyEncoding VariableDeclarator rubyEncoding IfStatement BinaryOperation && BinaryOperation < MemberReference index MemberReference length BinaryOperation != Assignment MemberReference rubyEncoding MemberReference ArraySelector MemberReference index = Literal null BlockStatement ReturnStatement MemberReference rubyEncoding StatementExpression MethodInvocation ClassCreator ReferenceType ByteList MethodInvocation enc getName Literal false loadEncoding ReturnStatement MemberReference ArraySelector MemberReference index	1
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation MethodInvocation hashCode getClass	0
MethodDeclaration Modifier public ReferenceType Object case292_line1126 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration ReferenceType Node VariableDeclarator body TernaryExpression BinaryOperation == Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null MemberReference NilImplicitNode NIL Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType UntilNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 6 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getConditionNode MemberReference body = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation arg1 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock call	0
MethodDeclaration Modifier public Annotation Override BasicType boolean contains FormalParameter ReferenceType Object o ReturnStatement MethodInvocation view This RubyHash MemberReference o contains	0
MethodDeclaration Modifier public BasicType boolean isShowBytecode ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation isShowBytecode get	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType IRubyObject arg8 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 getRuntime Literal null Literal null Literal true MemberReference binding MemberReference type yield	1
MethodDeclaration Modifier public Annotation Override ReferenceType File getCanonicalFile IOException ReturnStatement ClassCreator ReferenceType NormalizedFile MethodInvocation getCanonicalPath	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getFastOptSingletonMethod FormalParameter ReferenceType String method ReturnStatement ClassCreator ReferenceType ReflectionCallback MemberReference type MemberReference method ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType IRubyObject Literal true Literal true MethodInvocation Arity optional Literal true	1
MethodDeclaration Modifier public BasicType boolean isVarArgs ReturnStatement MethodInvocation method isVarArgs	0
MethodDeclaration Modifier public synchronized Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation notifyAll ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType DynamicMethod getVariableMethodMissing ReturnStatement MemberReference variableMethodMissing	0
MethodDeclaration Modifier public ReferenceType Operand buildNthRef FormalParameter ReferenceType NthRefNode nthRefNode FormalParameter ReferenceType IR_Scope m ReturnStatement ClassCreator ReferenceType NthRef MethodInvocation nthRefNode getMatchNumber	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyBoolean ReturnStatement ClassCreator ReferenceType RubyBoolean MethodInvocation getRuntime MethodInvocation MethodInvocation accessibleObject	0
MethodDeclaration Modifier public handleException FormalParameter ReferenceType BSFException bsfExcptn StatementExpression MethodInvocation MemberReference runtime Cast ReferenceType Exception MethodInvocation bsfExcptn getTargetException printException	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "protected_methods" ElementValuePair optional Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject protected_methods FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MethodInvocation MethodInvocation MemberReference context MemberReference args trueIfNoArgument protected_instance_methods getMetaClass	1
MethodDeclaration Modifier public ReferenceType Node FormalParameter ReferenceType InputStream in FormalParameter ReferenceType String file FormalParameter ReferenceType DynamicScope scope IfStatement BinaryOperation != MemberReference parserStats Literal null StatementExpression MethodInvocation parserStats addEvalParse ReturnStatement MethodInvocation parser MemberReference file MemberReference in MemberReference scope ClassCreator ReferenceType ParserConfiguration MethodInvocation getKCode Literal 0 Literal false Literal true Literal false MemberReference config parse	1
MethodDeclaration setGC FormalParameter ReferenceType RubyModule gcModule StatementExpression Assignment This MemberReference gcModule MemberReference gcModule =	0
MethodDeclaration Modifier private ReferenceType IRubyObject inspectHash FormalParameter Modifier final ReferenceType ThreadContext context LocalVariableDeclaration Modifier final ReferenceType ByteList VariableDeclarator buffer ClassCreator ReferenceType ByteList StatementExpression MethodInvocation buffer Literal '{' append LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator ArrayCreator BasicType boolean Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 Literal true = StatementExpression MethodInvocation ClassCreator ReferenceType Visitor MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value IfStatement MemberReference ! ArraySelector Literal 0 StatementExpression MethodInvocation buffer MethodInvocation Literal ' ' append Literal ',' append StatementExpression MethodInvocation buffer MethodInvocation MethodInvocation getByteList MemberReference context MemberReference key inspect append StatementExpression MethodInvocation buffer MethodInvocation Literal '>' append Literal '=' append StatementExpression MethodInvocation buffer MethodInvocation MethodInvocation getByteList MemberReference context MemberReference value inspect append StatementExpression Assignment MemberReference ArraySelector Literal 0 Literal false = visitAll StatementExpression MethodInvocation buffer Literal '}' append ReturnStatement MethodInvocation MethodInvocation MemberReference buffer newString getRuntime	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType	0
MethodDeclaration Modifier private ReferenceType IRubyObject permutationCommon FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int r FormalParameter ReferenceType Block block IfStatement BinaryOperation == MemberReference r Literal 0 BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation MethodInvocation context getRuntime newEmptyArray yield IfStatement BinaryOperation == MemberReference r Literal 1 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference realLength MemberReference ++ i BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation MethodInvocation context getRuntime MemberReference ArraySelector BinaryOperation + MemberReference begin MemberReference i values newArray yield IfStatement BinaryOperation && BinaryOperation >= MemberReference r Literal 0 BinaryOperation >= MemberReference realLength MemberReference r BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n MemberReference realLength StatementExpression MethodInvocation MemberReference context MemberReference n MemberReference r ArrayCreator BasicType int MemberReference n Literal 0 ArrayCreator BasicType boolean MemberReference n MethodInvocation MemberReference begin MemberReference n MethodInvocation getMetaClass makeShared MemberReference block permute ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType IRubyObject op_div FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long other ReturnStatement MethodInvocation MemberReference context MemberReference other Literal "/" idiv	1
MethodDeclaration Modifier public final BasicType long longValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation Util MemberReference obj uint8Value	1
MethodDeclaration Modifier public ReferenceType Object case58_line510 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals new_super = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType boolean b ReturnStatement Literal "boolean"	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference dark	0
MethodDeclaration Modifier public static ReferenceType IRubyObject read FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 0 ThrowStatement MethodInvocation context MethodInvocation Literal 0 Literal 1 newArgumentError getRuntime SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference ArraySelector Literal 0 args MemberReference Block NULL_BLOCK read SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args read SwitchStatementCase Literal 3 ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference ArraySelector Literal 2 args read SwitchStatementCase ThrowStatement MethodInvocation context MethodInvocation MemberReference args length Literal 3 newArgumentError getRuntime	0
MethodDeclaration Modifier final public static Annotation Deprecated ReferenceType IRubyObject convertToType FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyClass target FormalParameter BasicType int convertMethodIndex FormalParameter ReferenceType String convertMethod FormalParameter BasicType boolean raise IfStatement MethodInvocation ! obj MemberReference convertMethod respondsTo BlockStatement ReturnStatement MethodInvocation MemberReference raise MemberReference obj MemberReference target ReturnStatement MethodInvocation obj MethodInvocation obj MethodInvocation getCurrentContext getRuntime MemberReference convertMethod callMethod	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier final static ReferenceType com ReferenceType kenai ReferenceType jffi ReferenceType Struct newStruct FormalParameter ReferenceType StructLayout layout ReturnStatement MethodInvocation MethodInvocation layout getRuntime MethodInvocation layout getFields newStruct	1
MethodDeclaration Modifier private ReferenceType String expectedTraceLine FormalParameter BasicType int index ReturnStatement BinaryOperation + Literal " MethodInvocation MemberReference index	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType CLASSVARASGNNODE	0
MethodDeclaration Modifier public pushInt FormalParameter BasicType int value IfStatement BinaryOperation && BinaryOperation <= MemberReference value MemberReference Byte MAX_VALUE BinaryOperation >= MemberReference value MemberReference Byte MIN_VALUE BlockStatement SwitchStatement MemberReference value SwitchStatementCase Literal - 1 StatementExpression MethodInvocation iconst_m1 BreakStatement SwitchStatementCase Literal 0 StatementExpression MethodInvocation iconst_0 BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation iconst_1 BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation iconst_2 BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation iconst_3 BreakStatement SwitchStatementCase Literal 4 StatementExpression MethodInvocation iconst_4 BreakStatement SwitchStatementCase Literal 5 StatementExpression MethodInvocation iconst_5 BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference value bipush BreakStatement IfStatement BinaryOperation && BinaryOperation <= MemberReference value MemberReference Short MAX_VALUE BinaryOperation >= MemberReference value MemberReference Short MIN_VALUE BlockStatement StatementExpression MethodInvocation MemberReference value sipush BlockStatement StatementExpression MethodInvocation MemberReference value ldc	0
MethodDeclaration Modifier private ReferenceType ISourcePosition getPosition FormalParameter ReferenceType ISourcePositionHolder start ReturnStatement TernaryExpression BinaryOperation != MemberReference start Literal null MethodInvocation lexer MethodInvocation start getPosition getPosition MethodInvocation lexer getPosition	0
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType Invocation invocation FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference parameter uint8Value putByte	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "key?" ElementValuePair required Literal 1 ReferenceType RubyBoolean key_p FormalParameter ReferenceType IRubyObject key StatementExpression Assignment MemberReference key MethodInvocation MemberReference key getSymbolKey = ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference key containsKey getThreadLocals newBoolean getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyTime ReturnStatement MethodInvocation MethodInvocation getRuntime MethodInvocation dt MethodInvocation MethodInvocation getRuntime getLocalTimeZone withZone MethodInvocation getUSec	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context loadTrue	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference binding MemberReference type call	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "call" Literal "[]" ElementValuePair rest Literal true ElementValuePair frame Literal true Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ThrowStatement MethodInvocation context MethodInvocation Literal "you cannot call unbound method; first" newTypeError getRuntime	0
MethodDeclaration Modifier public dup2 StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public put FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType StructLayout ReferenceType Storage cache FormalParameter ReferenceType IRubyObject ptr FormalParameter ReferenceType IRubyObject value ThrowStatement MethodInvocation runtime Literal "Cannot set Struct fields" newNotImplementedError	0
MethodDeclaration Modifier public BasicType int getPostCount ReturnStatement TernaryExpression BinaryOperation == MemberReference post Literal null Literal 0 MethodInvocation post size	0
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType float f ReturnStatement Literal "float"	0
MethodDeclaration Modifier public ReferenceType IRubyObject each_char FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator ch WhileStatement Assignment MemberReference ch MethodInvocation getc = BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator c Cast BasicType byte MethodInvocation RubyNumeric MemberReference ch fix2int LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation runtime MethodInvocation getEncoding MethodInvocation MemberReference c length getKCode LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation runtime newString StatementExpression MethodInvocation str Literal true setTaint StatementExpression MethodInvocation str MemberReference c cat WhileStatement BinaryOperation > MemberReference -- n Literal 0 BlockStatement IfStatement Assignment MemberReference ch MethodInvocation getc = BlockStatement StatementExpression MethodInvocation block MemberReference context MemberReference str yield ReturnStatement This StatementExpression Assignment MemberReference c Cast BasicType byte MethodInvocation RubyNumeric MemberReference ch fix2int = StatementExpression MethodInvocation str MemberReference c cat StatementExpression MethodInvocation block MemberReference context MemberReference str yield ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType File getPath ReturnStatement MemberReference path	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "[]" Literal "slice" ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject op_aref FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference arg1 ReferenceType RubyRegexp ReturnStatement MethodInvocation MemberReference runtime MemberReference context Cast ReferenceType RubyRegexp MemberReference arg1 MethodInvocation RubyNumeric MemberReference arg2 num2int subpat ReturnStatement MethodInvocation MemberReference runtime MethodInvocation RubyNumeric MemberReference arg1 num2int MethodInvocation RubyNumeric MemberReference arg2 num2int substr	1
MethodDeclaration Modifier public static createDigestSHA2 FormalParameter ReferenceType Ruby runtime StatementExpression MethodInvocation runtime MethodInvocation Literal "digest.so" require TryStatement StatementExpression MethodInvocation MemberReference runtime Literal "SHA-256" createMessageDigest CatchClause CatchClauseParameter NoSuchAlgorithmException e ThrowStatement MethodInvocation runtime Literal "SHA2 not supported" newLoadError LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator mDigest MethodInvocation runtime Literal "Digest" fastGetModule LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cDigestBase MethodInvocation mDigest Literal "Base" fastGetClass LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cDigest_SHA2_256 MethodInvocation mDigest Literal "SHA256" MemberReference cDigestBase MethodInvocation cDigestBase getAllocator defineClassUnder StatementExpression MethodInvocation cDigest_SHA2_256 Literal "metadata" MethodInvocation runtime Literal "SHA-256" newString setInternalModuleVariable StatementExpression MethodInvocation cDigest_SHA2_256 Literal "block_length" ClassCreator ReferenceType Callback MethodDeclaration Modifier public ReferenceType Arity getArity ReturnStatement MemberReference Arity NO_ARGUMENTS MethodDeclaration Modifier public ReferenceType IRubyObject execute FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RubyFixnum MethodInvocation recv getRuntime Literal 64 newFixnum defineFastMethod LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cDigest_SHA2_384 MethodInvocation mDigest Literal "SHA384" MemberReference cDigestBase MethodInvocation cDigestBase getAllocator defineClassUnder StatementExpression MethodInvocation cDigest_SHA2_384 Literal "metadata" MethodInvocation runtime Literal "SHA-384" newString setInternalModuleVariable StatementExpression MethodInvocation cDigest_SHA2_384 Literal "block_length" ClassCreator ReferenceType Callback MethodDeclaration Modifier public ReferenceType Arity getArity ReturnStatement MemberReference Arity NO_ARGUMENTS MethodDeclaration Modifier public ReferenceType IRubyObject execute FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RubyFixnum MethodInvocation recv getRuntime Literal 128 newFixnum defineFastMethod LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cDigest_SHA2_512 MethodInvocation mDigest Literal "SHA512" MemberReference cDigestBase MethodInvocation cDigestBase getAllocator defineClassUnder StatementExpression MethodInvocation cDigest_SHA2_512 Literal "metadata" MethodInvocation runtime Literal "SHA-512" newString setInternalModuleVariable StatementExpression MethodInvocation cDigest_SHA2_512 Literal "block_length" ClassCreator ReferenceType Callback MethodDeclaration Modifier public ReferenceType Arity getArity ReturnStatement MemberReference Arity NO_ARGUMENTS MethodDeclaration Modifier public ReferenceType IRubyObject execute FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RubyFixnum MethodInvocation recv getRuntime Literal 128 newFixnum defineFastMethod	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation MemberReference status newFixnum getRuntime	0
MethodDeclaration install FormalParameter ReferenceType RubyModule proxy IfStatement MethodInvocation hasLocalMethod BlockStatement LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method ClassCreator ReferenceType InstanceMethodInvoker MemberReference proxy MemberReference methods StatementExpression MethodInvocation proxy MemberReference name MemberReference method addMethod IfStatement BinaryOperation && BinaryOperation != MemberReference aliases Literal null MethodInvocation isPublic BlockStatement StatementExpression MethodInvocation proxy MemberReference aliases This MemberReference name defineAliases StatementExpression Assignment MemberReference aliases Literal null =	0
MethodDeclaration Modifier public static ReferenceType RubyObjectAdapter ReturnStatement ClassCreator ReferenceType RubyObjectAdapter MethodDeclaration Modifier public BasicType boolean isKindOf FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType RubyModule rubyModule ReturnStatement MethodInvocation rubyModule MemberReference value isInstance MethodDeclaration Modifier public ReferenceType IRubyObject setInstanceVariable FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType String variableName FormalParameter ReferenceType IRubyObject value ReturnStatement MethodInvocation obj MethodInvocation MemberReference variableName MemberReference value setInstanceVariable getInstanceVariables MethodDeclaration Modifier public ReferenceType IRubyObject convertToJavaArray FormalParameter ReferenceType IRubyObject array ReturnStatement Cast ReferenceType RubyArray MemberReference array MethodDeclaration Modifier public ReferenceType RubyInteger convertToRubyInteger FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation obj convertToInteger MethodDeclaration Modifier public ReferenceType IRubyObject getInstanceVariable FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType String variableName ReturnStatement MethodInvocation obj MethodInvocation MemberReference variableName getInstanceVariable getInstanceVariables MethodDeclaration Modifier public ReferenceType RubyString convertToRubyString FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation obj convertToString MethodDeclaration Modifier public ReferenceType IRubyObject callMethod FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType String methodName ReturnStatement MethodInvocation receiver MethodInvocation receiver MethodInvocation getCurrentContext getRuntime MemberReference methodName callMethod MethodDeclaration Modifier public ReferenceType IRubyObject callMethod FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType String methodName FormalParameter ReferenceType IRubyObject singleArg ReturnStatement MethodInvocation receiver MethodInvocation receiver MethodInvocation getCurrentContext getRuntime MemberReference methodName MemberReference singleArg callMethod MethodDeclaration Modifier public ReferenceType IRubyObject callMethod FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType String methodName FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation receiver MethodInvocation receiver MethodInvocation getCurrentContext getRuntime MemberReference methodName MemberReference args callMethod MethodDeclaration Modifier public ReferenceType IRubyObject callMethod FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType String methodName FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation receiver MethodInvocation receiver MethodInvocation getCurrentContext getRuntime MemberReference methodName MemberReference args MemberReference block callMethod MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation receiver MethodInvocation getCurrentContext getRuntime MemberReference receiver MemberReference args MemberReference Block NULL_BLOCK invokeSuper MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation receiver MethodInvocation getCurrentContext getRuntime MemberReference receiver MemberReference args MemberReference block invokeSuper	0
MethodDeclaration Modifier public setSingleton FormalParameter BasicType boolean isSingleton StatementExpression Assignment This MemberReference isSingleton MemberReference isSingleton =	0
MethodDeclaration Modifier public ReferenceType Object case196_line791 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal "&" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference _label	0
MethodDeclaration Modifier public putZeroTerminatedByteArray FormalParameter BasicType long offset FormalParameter BasicType byte bytes FormalParameter BasicType int off FormalParameter BasicType int len ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier private static ReferenceType Map TypeArgument ReferenceType IRubyObject TypeArgument ReferenceType Member FormalParameter ReferenceType Map TypeArgument ReferenceType IRubyObject TypeArgument ReferenceType Member fields ReturnStatement MethodInvocation Collections ClassCreator ReferenceType LinkedHashMap TypeArgument ReferenceType IRubyObject TypeArgument ReferenceType Member MemberReference fields unmodifiableMap	0
MethodDeclaration Modifier public final Annotation Override BasicType int hashCode ReturnStatement Cast BasicType int BinaryOperation ^ MemberReference value BinaryOperation >>> MemberReference value Literal 32	0
MethodDeclaration Modifier public BasicType boolean isDirect ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType String arg0 StatementExpression MethodInvocation MethodInvocation MemberReference ANEWARRAY MemberReference arg0 visitTypeInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation proc MemberReference context MemberReference args MemberReference self MemberReference block call	0
MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public static BasicType int codeLength FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Encoding enc FormalParameter BasicType int c LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation enc MemberReference c codeToMbcLength IfStatement BinaryOperation == MemberReference n Literal 0 ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "invalid codepoint " MethodInvocation String Literal "0x%x in " MemberReference c format MethodInvocation enc getName newArgumentError ReturnStatement MemberReference n	1
MethodDeclaration Modifier private ReferenceType IRubyObject callMethodMissing FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType DynamicMethod method FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MemberReference context MemberReference self MethodInvocation self getMetaClass MemberReference methodName MemberReference arg MemberReference Block NULL_BLOCK call MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference methodName MemberReference callType	0
MethodDeclaration Modifier public ReferenceType RaiseException newEOFError ReturnStatement MethodInvocation MethodInvocation getEOFError Literal "End of file reached" newRaiseException	0
MethodDeclaration Modifier final public static ReferenceType RubyArray newArray FormalParameter Modifier final ReferenceType Ruby runtime ReturnStatement MethodInvocation MemberReference runtime MemberReference ARRAY_DEFAULT_SIZE newArray	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject pop FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject num StatementExpression MethodInvocation modifyCheck LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator result MethodInvocation MemberReference context MemberReference num Literal true MethodInvocation context MethodInvocation getArray getRuntime StatementExpression Assignment MemberReference realLength MemberReference result realLength -= ReturnStatement MemberReference result	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Type type ThrowStatement MethodInvocation context MethodInvocation MemberReference RubyLocalJumpError.Reason NOREASON MethodInvocation context MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 newArrayNoCopy getRuntime Literal "yield called out of block" newLocalJumpError getRuntime	0
MethodDeclaration Modifier protected ReferenceType AccessibleObject accessibleObject ReturnStatement MemberReference method	0
MethodDeclaration Modifier public ReferenceType RubyClass getIOError ReturnStatement MemberReference ioError	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType IRubyObject sym ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference sym ReferenceType RubySymbol BinaryOperation == Cast ReferenceType RubySymbol MemberReference sym Literal 1	0
MethodDeclaration Modifier public BasicType int read FormalParameter BasicType byte b IOException LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator readValue MethodInvocation readAdapter MethodInvocation io MethodInvocation getCurrentContext getRuntime MemberReference io MemberReference io MethodInvocation io MethodInvocation MemberReference b length newFixnum getRuntime call LocalVariableDeclaration BasicType int VariableDeclarator returnValue Literal - 1 IfStatement MethodInvocation ! readValue isNil BlockStatement LocalVariableDeclaration ReferenceType ByteList VariableDeclarator str Cast ReferenceType RubyString MemberReference readValue StatementExpression MethodInvocation System MemberReference str bytes MemberReference str begin MemberReference b Literal 0 MemberReference str realSize arraycopy StatementExpression Assignment MemberReference returnValue MemberReference str realSize = ReturnStatement MemberReference returnValue	1
MethodDeclaration Modifier private BasicType int wrappedRead IOException LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation in read IfStatement BinaryOperation == MemberReference c Literal '\r' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation MemberReference c carriageReturn = StatementExpression MethodInvocation MemberReference c ReturnStatement MemberReference c	0
MethodDeclaration Modifier public ReferenceType DynamicScope cloneScope ReturnStatement ClassCreator ReferenceType MemberReference staticScope MemberReference parent	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject ctime ReturnStatement MethodInvocation MethodInvocation BinaryOperation * MethodInvocation stat ctime Literal 1000 getRuntime	0
MethodDeclaration Modifier public testRequireJavaClassFile TryStatement StatementExpression MethodInvocation loadService Literal "build/classes/test/org/jruby/test/NormalJavaClass.class" Literal false load StatementExpression MethodInvocation Literal "Exception should have been raised requiring a non-script .class file" fail CatchClause CatchClauseParameter Exception e	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType IR_Instr getInstrs ReturnStatement MemberReference _instrs	0
MethodDeclaration Modifier private ReferenceType String getClassNameFromFrame FormalParameter ReferenceType Frame current LocalVariableDeclaration ReferenceType String VariableDeclarator klazzName IfStatement BinaryOperation == MethodInvocation current Literal null BlockStatement StatementExpression Assignment MemberReference klazzName MemberReference = BlockStatement StatementExpression Assignment MemberReference klazzName MethodInvocation current MethodInvocation getName = ReturnStatement MemberReference klazzName	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType OPTARGNODE	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Block block FormalParameter BasicType boolean checkArity LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator module IfStatement BinaryOperation == MemberReference constNode Literal null BlockStatement StatementExpression Assignment MemberReference module MethodInvocation context MethodInvocation getStaticScope MethodInvocation getModule getCurrentScope = IfStatement BinaryOperation == MemberReference module Literal null BlockStatement ThrowStatement MethodInvocation runtime Literal "no class/module to define constant" newTypeError IfStatement BinaryOperation instanceof MemberReference constNode ReferenceType Colon2Node BlockStatement LocalVariableDeclaration ReferenceType Node VariableDeclarator leftNode Cast ReferenceType Colon2Node MemberReference constNode IfStatement BinaryOperation == MemberReference leftNode Literal null BlockStatement StatementExpression Assignment MemberReference module MethodInvocation runtime getNil = BlockStatement StatementExpression Assignment MemberReference module MethodInvocation leftNode MemberReference runtime MemberReference context MemberReference self MemberReference block = BlockStatement StatementExpression Assignment MemberReference module MethodInvocation runtime getObject = StatementExpression Cast ReferenceType RubyModule MemberReference module ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public final BasicType boolean await FormalParameter Modifier final BasicType long timeout FormalParameter ReferenceType TimeUnit unit InterruptedException SynchronizedStatement MemberReference monitor IfStatement MemberReference ! woken BlockStatement StatementExpression MethodInvocation monitor MethodInvocation TimeUnit.MILLISECONDS MemberReference timeout MemberReference unit convert wait IfStatement MemberReference interrupted BlockStatement ThrowStatement ClassCreator ReferenceType InterruptedException Literal "Interrupted" ReturnStatement MemberReference ready	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 call	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation get	0
MethodDeclaration Modifier public visitLabel FormalParameter ReferenceType Label arg0 StatementExpression MethodInvocation MethodInvocation MemberReference arg0 visitLabel getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType REGEXPNODE	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation opElementAsgnNode getValueNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public static ReferenceType LexerSource getSource FormalParameter ReferenceType String file FormalParameter ReferenceType ByteList content FormalParameter ReferenceType List TypeArgument ReferenceType String list FormalParameter ReferenceType ParserConfiguration configuration IfStatement BinaryOperation != MemberReference list Literal null BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference file MemberReference content MemberReference list MethodInvocation configuration getLineNumber MethodInvocation configuration ReturnStatement ClassCreator ReferenceType ByteListLexerSource MemberReference file MemberReference content MemberReference list MethodInvocation configuration getLineNumber MethodInvocation configuration	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "get" ElementValuePair required Literal 2 ReferenceType IRubyObject get FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject ptr FormalParameter ReferenceType IRubyObject name ReturnStatement MethodInvocation MethodInvocation MethodInvocation context getRuntime MemberReference nullStorage MemberReference ptr get MethodInvocation context getRuntime MemberReference name getMember	0
MethodDeclaration Modifier public ReferenceType Object case243_line944 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition ClassCreator ReferenceType HashNode MethodInvocation getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals newArrayNode Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals arg_concat = StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference yyVal Cast ReferenceType BlockPassNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_blk_pass = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private ReferenceType IRubyObject each_lineCommon19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation Literal "$/" get getRuntime MemberReference block each_lineCommon19	1
MethodDeclaration Modifier public visitMultiANewArrayInsn FormalParameter ReferenceType String arg0 FormalParameter BasicType int arg1 StatementExpression MethodInvocation MethodInvocation MemberReference arg0 MemberReference arg1 visitMultiANewArrayInsn getMethodVisitor	0
MethodDeclaration Modifier public BasicType int fileno SwitchStatement This SwitchStatementCase IN ReturnStatement Literal 0 SwitchStatementCase OUT ReturnStatement Literal 1 SwitchStatementCase ERR ReturnStatement Literal 2 SwitchStatementCase ThrowStatement ClassCreator ReferenceType RuntimeException	1
MethodDeclaration Modifier public BasicType boolean select FormalParameter ReferenceType Channel channel FormalParameter ReferenceType RubyIO io FormalParameter BasicType int ops IfStatement BinaryOperation instanceof MemberReference channel ReferenceType SelectableChannel BlockStatement LocalVariableDeclaration ReferenceType SelectableChannel VariableDeclarator selectable Cast ReferenceType SelectableChannel MemberReference channel SynchronizedStatement MethodInvocation selectable blockingLock LocalVariableDeclaration BasicType boolean VariableDeclarator oldBlocking MethodInvocation selectable isBlocking LocalVariableDeclaration ReferenceType SelectionKey VariableDeclarator key Literal null TryStatement StatementExpression MethodInvocation selectable Literal false configureBlocking IfStatement BinaryOperation != MemberReference io Literal null StatementExpression MethodInvocation io This addBlockingThread StatementExpression Assignment MemberReference currentSelector MethodInvocation MemberReference selectable getSelector = StatementExpression Assignment MemberReference key MethodInvocation selectable MemberReference currentSelector MemberReference ops register = StatementExpression MethodInvocation beforeBlockingCall LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation currentSelector select StatementExpression MethodInvocation pollThreadEvents IfStatement BinaryOperation == MemberReference result Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType SelectionKey VariableDeclarator keySet MethodInvocation currentSelector selectedKeys IfStatement BinaryOperation == MethodInvocation keySet MethodInvocation next iterator MemberReference key BlockStatement ReturnStatement Literal true ReturnStatement Literal false CatchClause CatchClauseParameter IOException ioe ThrowStatement MethodInvocation MethodInvocation BinaryOperation + Literal "Error with selector: " MemberReference ioe newRuntimeError getRuntime TryStatement IfStatement BinaryOperation != MemberReference key Literal null BlockStatement StatementExpression MethodInvocation key cancel StatementExpression MethodInvocation currentSelector selectNow StatementExpression MethodInvocation afterBlockingCall StatementExpression Assignment MemberReference currentSelector Literal null = IfStatement BinaryOperation != MemberReference io Literal null StatementExpression MethodInvocation io This removeBlockingThread StatementExpression MethodInvocation selectable MemberReference oldBlocking configureBlocking CatchClause CatchClauseParameter IOException ioe BlockStatement ReturnStatement Literal true	1
MethodDeclaration Modifier public BasicType int ungetc FormalParameter BasicType int c IfStatement BinaryOperation == MemberReference c Literal - 1 BlockStatement ReturnStatement Literal - 1 StatementExpression Assignment MemberReference eof Literal false = StatementExpression Assignment MemberReference ungotc MemberReference c = ReturnStatement MemberReference c	0
MethodDeclaration Modifier public static BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public markDead StatementExpression Assignment MemberReference _isDead Literal true =	0
MethodDeclaration Modifier public checkArgCount FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int argsLength StatementExpression MethodInvocation Arity MemberReference runtime MemberReference argsLength MemberReference requiredArgsCount MemberReference maxArgsCount checkArgumentCount	0
MethodDeclaration Modifier public ReferenceType Object case500_line1918 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType UnnamedRestArgNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation support MethodInvocation Literal "*" addVariable getCurrentScope = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType int getPriority LocalVariableDeclaration ReferenceType Thread VariableDeclarator thread MethodInvocation nativeThread get IfStatement BinaryOperation != MemberReference thread Literal null ReturnStatement MethodInvocation thread getPriority ReturnStatement Literal 0	1
MethodDeclaration Modifier private arg_ambiguous IfStatement MethodInvocation warnings isVerbose StatementExpression MethodInvocation warnings MemberReference ID AMBIGUOUS_ARGUMENT MethodInvocation getPosition Literal "Ambiguous first argument; make sure." warning	1
MethodDeclaration Modifier public static ReferenceType RubyFloat newFloat FormalParameter ReferenceType Ruby runtime FormalParameter BasicType double value ReturnStatement ClassCreator ReferenceType RubyFloat MemberReference runtime MemberReference value	0
MethodDeclaration Modifier public removeBuiltinLibrary FormalParameter ReferenceType String name StatementExpression MethodInvocation builtinLibraries MemberReference name remove	0
MethodDeclaration Modifier public ReferenceType PrintStream getOut ReturnStatement MemberReference out	0
MethodDeclaration Modifier public ReferenceType Object case284_line1105 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType LambdaNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override exec FormalParameter ReferenceType String file FormalParameter BasicType int line FormalParameter BasicType int col FormalParameter ReferenceType Object expr BSFException TryStatement StatementExpression MethodInvocation evaler MethodInvocation run MemberReference runtime MethodInvocation expr toString MemberReference file MemberReference line parse CatchClause CatchClauseParameter Exception excptn ThrowStatement ClassCreator ReferenceType BSFException MemberReference BSFException REASON_EXECUTION_ERROR Literal "Exception" MemberReference excptn	0
MethodDeclaration Modifier public FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr StatementExpression MethodInvocation Cast ReferenceType HashNode MemberReference node MemberReference context MemberReference expr	0
MethodDeclaration Modifier public final ReferenceType getMarshal ReturnStatement MemberReference marshal	0
MethodDeclaration Modifier public ReferenceType IRubyObject run ReturnStatement MethodInvocation runtime MemberReference node runInterpreter	0
MethodDeclaration Modifier public static ReferenceType IR_Scope buildFromMain FormalParameter ReferenceType String args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator ruby MethodInvocation Ruby getGlobalRuntime LocalVariableDeclaration ReferenceType Node VariableDeclarator node Literal null IfStatement MemberReference ArraySelector Literal 0 MethodInvocation Literal "-e" equals args BlockStatement StatementExpression Assignment MemberReference node MethodInvocation ruby MethodInvocation ByteList MemberReference ArraySelector Literal 1 args create Literal "-e" Literal null Literal 0 Literal false parse = BlockStatement TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference ArraySelector Literal 0 args LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis ClassCreator ReferenceType FileInputStream MemberReference file LocalVariableDeclaration BasicType long VariableDeclarator size MethodInvocation file length LocalVariableDeclaration BasicType byte VariableDeclarator bytes ArrayCreator BasicType byte Cast BasicType int MemberReference size StatementExpression MethodInvocation fis MemberReference bytes read StatementExpression Assignment MemberReference node MethodInvocation ruby ClassCreator ReferenceType ByteList MemberReference bytes MemberReference ArraySelector Literal 0 args Literal null Literal 0 Literal false parse = CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference ioe ReturnStatement ClassCreator MethodInvocation MemberReference node buildRoot ReferenceType IR_Builder	1
MethodDeclaration Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType Node childNodes ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "Not supported yet."	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject object FormalParameter ReferenceType IRubyObject method ReturnStatement MethodInvocation MemberReference object MemberReference method MemberReference NULL_ARRAY	0
MethodDeclaration Modifier public static ReferenceType RubyClass populateImplClass FormalParameter ReferenceType Ruby ruby FormalParameter ReferenceType Class newClass FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType Method simpleToAll LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator rubyCls Cast ReferenceType RubyClass MethodInvocation MemberReference ruby MemberReference newClass getMirrorForClass TryStatement StatementExpression MethodInvocation newClass MethodInvocation Literal null ArrayCreator ReferenceType Object ArrayInitializer MemberReference rubyCls invoke Literal "__setup__" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType RubyClass getMethod CatchClause CatchClauseParameter IllegalAccessException ex ThrowStatement MethodInvocation MemberReference ruby MemberReference ex BinaryOperation + Literal "Could not setup class: " MemberReference newClass error CatchClause CatchClauseParameter IllegalArgumentException ex ThrowStatement MethodInvocation MemberReference ruby MemberReference ex BinaryOperation + Literal "Could not setup class: " MemberReference newClass error CatchClause CatchClauseParameter InvocationTargetException ex ThrowStatement MethodInvocation MemberReference ruby MemberReference ex BinaryOperation + Literal "Could not setup class: " MemberReference newClass error CatchClause CatchClauseParameter NoSuchMethodException ex ThrowStatement MethodInvocation MemberReference ruby MemberReference ex BinaryOperation + Literal "Could not setup class: " MemberReference newClass error LocalVariableDeclaration Modifier final ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Field VariableDeclarator allFields ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Field TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType Method VariableDeclarator entry MethodInvocation simpleToAll entrySet BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator simpleName MethodInvocation entry getKey LocalVariableDeclaration ReferenceType Field VariableDeclarator simpleField MethodInvocation newClass MemberReference simpleName getField StatementExpression MethodInvocation allFields MemberReference simpleName MemberReference simpleField put ForStatement EnhancedForControl VariableDeclaration ReferenceType Method VariableDeclarator method MethodInvocation entry getValue BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator complexName BinaryOperation + MemberReference simpleName MethodInvocation MethodInvocation method getParameterTypes prettyParams LocalVariableDeclaration ReferenceType String VariableDeclarator fieldName MethodInvocation MemberReference simpleName MethodInvocation method getParameterTypes mangleMethodFieldName StatementExpression MethodInvocation allFields MemberReference complexName MethodInvocation newClass MemberReference fieldName getField put CatchClause CatchClauseParameter IllegalArgumentException ex ThrowStatement MethodInvocation MemberReference ruby MemberReference ex BinaryOperation + Literal "Could not prepare method fields: " MemberReference newClass error CatchClause CatchClauseParameter NoSuchFieldException ex ThrowStatement MethodInvocation MemberReference ruby MemberReference ex BinaryOperation + Literal "Could not prepare method fields: " MemberReference newClass error LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method_added ClassCreator ReferenceType JavaMethod MethodInvocation rubyCls getSingletonClass MemberReference Visibility PUBLIC MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator selfClass Cast ReferenceType RubyClass MemberReference self LocalVariableDeclaration ReferenceType Ruby VariableDeclarator ruby MethodInvocation selfClass getClassRuntime LocalVariableDeclaration ReferenceType String VariableDeclarator methodName MemberReference ArraySelector Literal 0 MethodInvocation asJavaString args LocalVariableDeclaration ReferenceType Field VariableDeclarator field MethodInvocation allFields MemberReference methodName get IfStatement BinaryOperation == MemberReference field Literal null BlockStatement BlockStatement TryStatement StatementExpression MethodInvocation field Literal null MethodInvocation selfClass MemberReference methodName searchMethod set CatchClause CatchClauseParameter IllegalAccessException iae ThrowStatement MethodInvocation MemberReference ruby MemberReference iae BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not set new method into field: " MemberReference selfClass Literal "." MemberReference methodName error CatchClause CatchClauseParameter IllegalArgumentException iae ThrowStatement MethodInvocation MemberReference ruby MemberReference iae BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not set new method into field: " MemberReference selfClass Literal "." MemberReference methodName error ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime StatementExpression MethodInvocation rubyCls MethodInvocation Literal "method_added" MemberReference method_added addMethod getSingletonClass ReturnStatement MemberReference rubyCls	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "values_at" ElementValuePair rest Literal true ReferenceType IRubyObject values_at FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference realLength MemberReference args values_at	1
MethodDeclaration Modifier public static ReferenceType RubyArray constructRubyArray FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject one ReturnStatement MethodInvocation RubyArray MemberReference runtime MemberReference one	0
MethodDeclaration Modifier public static ReferenceType Class params FormalParameter ReferenceType Class classes ReturnStatement MemberReference classes	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject frac IfStatement MemberReference isNaN BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime newNaN IfStatement MethodInvocation isInfinity BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime MemberReference infinitySign newInfinity IfStatement BinaryOperation && BinaryOperation > MethodInvocation value scale Literal 0 BinaryOperation < MethodInvocation value precision MethodInvocation value scale BlockStatement ReturnStatement ClassCreator ReferenceType RubyBigDecimal MethodInvocation getRuntime MemberReference value LocalVariableDeclaration ReferenceType BigDecimal VariableDeclarator val MethodInvocation value Cast ReferenceType RubyBigDecimal MethodInvocation fix subtract ReturnStatement ClassCreator ReferenceType RubyBigDecimal MethodInvocation getRuntime MemberReference val	0
MethodDeclaration Modifier private ReferenceType IRubyObject tryProxyInvocation FormalParameter ReferenceType Object javaInvokee FormalParameter ReferenceType Object args LocalVariableDeclaration ReferenceType JavaProxyClass VariableDeclarator jpc Cast ReferenceType InternalJavaProxy MemberReference javaInvokee LocalVariableDeclaration ReferenceType JavaProxyMethod VariableDeclarator jpm IfStatement BinaryOperation && BinaryOperation != Assignment MemberReference jpm MethodInvocation jpc MethodInvocation method getName MemberReference parameterTypes getMethod = Literal null MethodInvocation jpm hasSuperImplementation BlockStatement ReturnStatement MethodInvocation MethodInvocation jpm getSuperMethod MemberReference javaInvokee MemberReference args invokeDirectSuperWithExceptionHandling BlockStatement ReturnStatement MethodInvocation MemberReference method MemberReference javaInvokee MemberReference args invokeDirectWithExceptionHandling	1
MethodDeclaration Modifier public static unboxAndCast FormalParameter ReferenceType SkinnyMethodAdapter m FormalParameter ReferenceType Class paramClass IfStatement MethodInvocation paramClass isPrimitive BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator boxType MethodInvocation MemberReference paramClass getBoxType StatementExpression MethodInvocation m MethodInvocation MemberReference boxType p checkcast StatementExpression MethodInvocation m MethodInvocation MemberReference boxType p BinaryOperation + MethodInvocation paramClass toString Literal "Value" MethodInvocation MemberReference paramClass sig invokevirtual IfStatement BinaryOperation != MemberReference paramClass ClassReference ReferenceType Object BlockStatement StatementExpression MethodInvocation m MethodInvocation MemberReference paramClass p checkcast	0
MethodDeclaration Modifier public ReferenceType RubyFloat ReturnStatement Cast ReferenceType RubyFloat MethodInvocation TypeConverter This MethodInvocation MethodInvocation getRuntime Literal "to_f" convertToType	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<=>" ReferenceType IRubyObject op_cmp FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation || BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference den ReferenceType RubyFixnum BinaryOperation == Cast ReferenceType RubyFixnum MemberReference den Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference num MemberReference other f_cmp ReturnStatement MethodInvocation MemberReference context This MethodInvocation RubyRational MemberReference context MethodInvocation getMetaClass MemberReference other newRationalBang f_cmp IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context This f_to_f MemberReference other f_cmp IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyRational BlockStatement LocalVariableDeclaration ReferenceType RubyRational VariableDeclarator otherRational Cast ReferenceType RubyRational MemberReference other LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator num1 VariableDeclarator num2 IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference num ReferenceType RubyFixnum BinaryOperation instanceof MemberReference den ReferenceType RubyFixnum BinaryOperation instanceof MemberReference otherRational num ReferenceType RubyFixnum BinaryOperation instanceof MemberReference otherRational den ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference num1 MethodInvocation MemberReference context Cast ReferenceType RubyFixnum MemberReference num Cast ReferenceType RubyFixnum MemberReference otherRational den f_imul = StatementExpression Assignment MemberReference num2 MethodInvocation MemberReference context Cast ReferenceType RubyFixnum MemberReference otherRational num Cast ReferenceType RubyFixnum MemberReference den f_imul = BlockStatement StatementExpression Assignment MemberReference num1 MethodInvocation MemberReference context MemberReference num MemberReference otherRational den f_mul = StatementExpression Assignment MemberReference num2 MethodInvocation MemberReference context MemberReference otherRational num MemberReference den f_mul = ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context MemberReference num1 MemberReference num2 f_sub MethodInvocation RubyFixnum MethodInvocation context getRuntime zero f_cmp ReturnStatement MethodInvocation MemberReference context Literal "<=>" MemberReference other coerceBin	1
MethodDeclaration Modifier private traceReturn FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name StatementExpression MethodInvocation runtime MemberReference context MemberReference RubyEvent RETURN MethodInvocation context getFile MethodInvocation context getLine MemberReference name MethodInvocation getImplementationClass callEventHooks	0
MethodDeclaration Modifier private ReferenceType IRubyObject f_addsub FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject anum FormalParameter ReferenceType IRubyObject aden FormalParameter ReferenceType IRubyObject bnum FormalParameter ReferenceType IRubyObject bden FormalParameter BasicType boolean plus LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator num VariableDeclarator den VariableDeclarator g VariableDeclarator a VariableDeclarator b IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference anum ReferenceType RubyFixnum BinaryOperation instanceof MemberReference aden ReferenceType RubyFixnum BinaryOperation instanceof MemberReference bnum ReferenceType RubyFixnum BinaryOperation instanceof MemberReference bden ReferenceType RubyFixnum BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator an Cast ReferenceType RubyFixnum MemberReference anum LocalVariableDeclaration BasicType long VariableDeclarator ad Cast ReferenceType RubyFixnum MemberReference aden LocalVariableDeclaration BasicType long VariableDeclarator bn Cast ReferenceType RubyFixnum MemberReference bnum LocalVariableDeclaration BasicType long VariableDeclarator bd Cast ReferenceType RubyFixnum MemberReference bden LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation MemberReference ad MemberReference bd i_gcd StatementExpression Assignment MemberReference g MethodInvocation RubyFixnum MemberReference runtime MemberReference newFixnum = StatementExpression Assignment MemberReference a MethodInvocation MemberReference context MemberReference an BinaryOperation / MemberReference bd MemberReference f_imul = StatementExpression Assignment MemberReference b MethodInvocation MemberReference context MemberReference bn BinaryOperation / MemberReference ad MemberReference f_imul = BlockStatement StatementExpression Assignment MemberReference g MethodInvocation MemberReference context MemberReference aden MemberReference bden f_gcd = StatementExpression Assignment MemberReference a MethodInvocation MemberReference context MemberReference anum MethodInvocation MemberReference context MemberReference bden MemberReference g f_idiv f_mul = StatementExpression Assignment MemberReference b MethodInvocation MemberReference context MemberReference bnum MethodInvocation MemberReference context MemberReference aden MemberReference g f_idiv f_mul = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator c TernaryExpression MemberReference plus MethodInvocation MemberReference context MemberReference a MemberReference b f_add MethodInvocation MemberReference context MemberReference a MemberReference b f_sub StatementExpression Assignment MemberReference b MethodInvocation MemberReference context MemberReference aden MemberReference g f_idiv = StatementExpression Assignment MemberReference g MethodInvocation MemberReference context MemberReference c MemberReference g f_gcd = StatementExpression Assignment MemberReference num MethodInvocation MemberReference context MemberReference c MemberReference g f_idiv = StatementExpression Assignment MemberReference a MethodInvocation MemberReference context MemberReference bden MemberReference g f_idiv = StatementExpression Assignment MemberReference den MethodInvocation MemberReference context MemberReference a MemberReference b f_mul = ReturnStatement MethodInvocation RubyRational MemberReference context MethodInvocation getMetaClass MemberReference num MemberReference den newRationalNoReduce	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType DASGNNODE	0
MethodDeclaration Modifier final public static BasicType long uint32Value FormalParameter ReferenceType IRubyObject parameter LocalVariableDeclaration Modifier final BasicType long VariableDeclarator value MethodInvocation MemberReference parameter longValue IfStatement BinaryOperation || BinaryOperation < MemberReference value Literal 0 BinaryOperation > MemberReference value Literal 0xffffffffL BlockStatement ThrowStatement MethodInvocation parameter MethodInvocation BinaryOperation + BinaryOperation + Literal "Value " MemberReference value Literal " outside unsigned range" newRangeError getRuntime ReturnStatement MemberReference value	1
MethodDeclaration Modifier protected FormalParameter BasicType int size FormalParameter ReferenceType String message IfStatement BinaryOperation != MethodInvocation staticScope getNumberOfVariables MemberReference size BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference message	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference name MemberReference self MemberReference block MemberReference runtime pre StatementExpression MethodInvocation argsNode MemberReference runtime Literal 8 checkArgCount StatementExpression MethodInvocation argsNode MemberReference context MemberReference runtime MemberReference self MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference block prepare ReturnStatement MethodInvocation body MemberReference runtime MemberReference context MemberReference self MemberReference block CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter JumpException.RedoJump rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public ReferenceType RubyClass getNotImplementedError ReturnStatement MemberReference notImplementedError	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "orig_name=" ElementValuePair required Literal 1 ReferenceType IRubyObject set_orig_name FormalParameter ReferenceType IRubyObject str StatementExpression Assignment This MemberReference orig_name MethodInvocation str MethodInvocation toString convertToString = ReturnStatement MemberReference str	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "iconv" ElementValuePair required Literal 2 ElementValuePair rest Literal true ElementValuePair meta Literal true ReferenceType IRubyObject iconv FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block unusedBlock ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference args Literal "iconv"	0
MethodDeclaration Modifier public match StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyRegexp p Literal "op_match2" MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation ClassReference ReferenceType ThreadContext params sig invokevirtual	0
MethodDeclaration Modifier private ReferenceType RubyArray buildConstructors FormalParameter ReferenceType Constructor TypeArgument ? constructors LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator result MethodInvocation MethodInvocation MemberReference constructors length newArray getRuntime ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference constructors length MemberReference ++ i BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType JavaConstructor MethodInvocation getRuntime MemberReference ArraySelector MemberReference i constructors append ReturnStatement MemberReference result	1
MethodDeclaration Modifier public static BasicType int FormalParameter BasicType int arg ReturnStatement MemberReference arg	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "tr!" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject tr_bang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject src FormalParameter ReferenceType IRubyObject repl ReturnStatement MethodInvocation MemberReference context MemberReference src MemberReference repl Literal false trTrans	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "[]" Literal "slice" ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_aref19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference arg1 ReferenceType RubyRegexp ReturnStatement MethodInvocation MemberReference runtime MemberReference context Cast ReferenceType RubyRegexp MemberReference arg1 MemberReference arg2 subpat19 ReturnStatement MethodInvocation MemberReference runtime MethodInvocation RubyNumeric MemberReference arg1 num2int MethodInvocation RubyNumeric MemberReference arg2 num2int substr19	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getOptMethod FormalParameter ReferenceType String method LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal "_opt" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal "_opt" SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtor LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCall StatementExpression MethodInvocation mv MemberReference ALOAD MemberReference METHOD_ARGS_INDEX visitVarInsn StatementExpression MethodInvocation MemberReference mv ClassReference ReferenceType IRubyObject checkCast StatementExpression MethodInvocation mv MemberReference ALOAD Literal 3 visitVarInsn StatementExpression MethodInvocation mv MemberReference INVOKEVIRTUAL MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 2 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType InvocationCallback VariableDeclarator ic Cast ReferenceType InvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity optional setArity StatementExpression MethodInvocation ic MemberReference InvocationCallback OPTIONAL_ARGS setArgumentTypes StatementExpression MethodInvocation ic MemberReference method setJavaName ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "replace" Literal "initialize_copy" ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyString replace19 FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation == This MemberReference other ReturnStatement This StatementExpression MethodInvocation MethodInvocation MethodInvocation getCodeRange MemberReference other replaceCommon setCodeRange ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation callback MemberReference context ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "methods" ElementValuePair optional Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference context MemberReference args Literal true methods	0
MethodDeclaration Modifier public pushScope FormalParameter ReferenceType DynamicScope scope LocalVariableDeclaration BasicType int VariableDeclarator index MemberReference ++ LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator stack MemberReference scopeStack StatementExpression Assignment MemberReference ArraySelector MemberReference index stack MemberReference scope = IfStatement BinaryOperation == BinaryOperation + MemberReference index Literal 1 MemberReference stack length BlockStatement StatementExpression MethodInvocation expandScopesIfNecessary	0
MethodDeclaration Modifier private static ReferenceType IOSelector getSelector FormalParameter ReferenceType SelectorProvider provider IOException LocalVariableDeclaration ReferenceType IOSelector VariableDeclarator sel MethodInvocation selectors MemberReference provider get IfStatement BinaryOperation != MemberReference sel Literal null BlockStatement ReturnStatement MemberReference sel SynchronizedStatement MemberReference selectors StatementExpression Assignment MemberReference sel MethodInvocation selectors MemberReference provider get = IfStatement BinaryOperation == MemberReference sel Literal null BlockStatement StatementExpression Assignment MemberReference sel ClassCreator ReferenceType IOSelector MemberReference provider = StatementExpression MethodInvocation selectors MemberReference provider MemberReference sel put LocalVariableDeclaration ReferenceType Thread VariableDeclarator t ClassCreator ReferenceType Thread MemberReference sel StatementExpression MethodInvocation t Literal true setDaemon StatementExpression MethodInvocation t start ReturnStatement MemberReference sel	1
MethodDeclaration Modifier public ReferenceType Arity arity ReturnStatement MemberReference arity	0
MethodDeclaration Modifier private ReferenceType IRubyObject handleRetryJump FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType JumpException ReferenceType RetryJump rj ThrowStatement MethodInvocation runtime MemberReference RubyLocalJumpError.Reason Cast ReferenceType IRubyObject MethodInvocation rj getValue Literal not supported outside rescue" newLocalJumpError	0
MethodDeclaration Modifier public static ReferenceType RubyBignum newBignum FormalParameter ReferenceType Ruby runtime FormalParameter BasicType double value ReturnStatement MethodInvocation MemberReference runtime ClassCreator MethodInvocation toBigInteger ReferenceType BigDecimal MemberReference value newBignum	1
MethodDeclaration Modifier public ReferenceType IRubyObject getValue ReturnStatement MethodInvocation variable get	0
MethodDeclaration Modifier public static ReferenceType RubyString newEmptyString FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass metaClass FormalParameter ReferenceType Encoding enc LocalVariableDeclaration ReferenceType EmptyByteListHolder VariableDeclarator holder MethodInvocation MemberReference enc LocalVariableDeclaration ReferenceType RubyString VariableDeclarator empty ClassCreator ReferenceType RubyString MemberReference runtime MemberReference metaClass MemberReference holder bytes MemberReference holder cr StatementExpression Assignment MemberReference empty shareLevel MemberReference SHARE_LEVEL_BYTELIST = ReturnStatement MemberReference empty	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context LocalVariableDeclaration BasicType boolean VariableDeclarator oldIsAtRoot MemberReference isAtRoot StatementExpression Assignment MemberReference isAtRoot Literal false = IfStatement BinaryOperation != MethodInvocation sclassNode getBodyNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation sclassNode getBodyNode MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation context loadNil StatementExpression Assignment MemberReference isAtRoot MemberReference oldIsAtRoot =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject crc ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime zero	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType Block block IfStatement BinaryOperation >= MemberReference box callCount Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference block call MemberReference context MemberReference name tryJitReturnMethod ReturnStatement MethodInvocation box.actualMethod MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference block call	0
MethodDeclaration warn FormalParameter ReferenceType ID id FormalParameter ReferenceType String message StatementExpression MethodInvocation runtime MethodInvocation MemberReference id MemberReference message warn getWarnings	0
MethodDeclaration Modifier public static ReferenceType RubyClass createAbstractMemoryClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule module LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation module MemberReference ABSTRACT_MEMORY_RUBY_CLASS MethodInvocation runtime getObject MemberReference ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR defineClassUnder StatementExpression MethodInvocation result ClassReference ReferenceType AbstractMemory defineAnnotatedMethods StatementExpression MethodInvocation result ClassReference ReferenceType AbstractMemory defineAnnotatedConstants ReturnStatement MemberReference result	0
MethodDeclaration Modifier protected post FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name StatementExpression MethodInvocation context	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "clone" Annotation Override ReferenceType RubyMethod ReturnStatement MethodInvocation MemberReference implementationModule MemberReference methodName MemberReference originModule MemberReference originName MemberReference method MemberReference receiver newMethod	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getBlockMethod FormalParameter ReferenceType String method ReturnStatement ClassCreator ReferenceType ReflectionCallback MemberReference type MemberReference method ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject Literal false Literal true MethodInvocation Arity Literal 2 fixed Literal false	1
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public ReferenceType Object case24_line392 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals checkExpression StatementExpression Cast ReferenceType MultipleAsgn19Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal Cast ReferenceType MultipleAsgn19Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType IRubyObject defaultObjectUnmarshal IOException LocalVariableDeclaration ReferenceType RubySymbol VariableDeclarator className Cast ReferenceType RubySymbol MethodInvocation unmarshalObject LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator type Literal null TryStatement StatementExpression Assignment MemberReference type MethodInvocation MemberReference runtime MethodInvocation className toString getClassFromPath = CatchClause CatchClauseParameter RaiseException e IfStatement MethodInvocation runtime MethodInvocation MethodInvocation e getException isInstance Literal "NameError" fastGetModule BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "undefined class/module " MethodInvocation className asJavaString newArgumentError ThrowStatement MemberReference e AssertStatement BinaryOperation != MemberReference type Literal null Literal "type shouldn't be null." LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result Cast ReferenceType IRubyObject MethodInvocation type This unmarshal ReturnStatement MemberReference result	1
MethodDeclaration setYielder FormalParameter ReferenceType RubyClass yielderClass StatementExpression Assignment This MemberReference yielderClass MemberReference yielderClass =	0
MethodDeclaration Modifier public compileGetDefinition FormalParameter Modifier final ReferenceType Node node FormalParameter ReferenceType BodyCompiler context SwitchStatement MethodInvocation node getNodeType SwitchStatementCase CLASSVARASGNNODE CLASSVARDECLNODE CONSTDECLNODE DASGNNODE GLOBALASGNNODE LOCALASGNNODE MULTIPLEASGNNODE OPASGNNODE OPELEMENTASGNNODE StatementExpression MethodInvocation context Literal "assignment" pushString BreakStatement SwitchStatementCase BACKREFNODE StatementExpression MethodInvocation context backref StatementExpression MethodInvocation context ClassReference ReferenceType RubyMatchData ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context BinaryOperation + Literal "$" Cast ReferenceType BackRefNode MemberReference node pushString ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull BreakStatement SwitchStatementCase DVARNODE StatementExpression MethodInvocation context Literal "local-variable(in-block)" pushString BreakStatement SwitchStatementCase FALSENODE StatementExpression MethodInvocation context Literal "false" pushString BreakStatement SwitchStatementCase TRUENODE StatementExpression MethodInvocation context Literal "true" pushString BreakStatement SwitchStatementCase LOCALVARNODE StatementExpression MethodInvocation context Literal "local-variable" pushString BreakStatement SwitchStatementCase MATCH2NODE MATCH3NODE StatementExpression MethodInvocation context Literal "method" pushString BreakStatement SwitchStatementCase NILNODE StatementExpression MethodInvocation context Literal pushString BreakStatement SwitchStatementCase NTHREFNODE StatementExpression MethodInvocation context Cast ReferenceType NthRefNode MemberReference node ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context BinaryOperation + Literal "$" Cast ReferenceType NthRefNode MemberReference node pushString ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull BreakStatement SwitchStatementCase SELFNODE StatementExpression MethodInvocation context Literal pushString BreakStatement SwitchStatementCase VCALLNODE StatementExpression MethodInvocation context loadSelf StatementExpression MethodInvocation context Cast ReferenceType VCallNode MemberReference node ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context Literal "method" pushString ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull isMethodBound BreakStatement SwitchStatementCase YIELDNODE StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context Literal pushString ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull hasBlock BreakStatement SwitchStatementCase GLOBALVARNODE StatementExpression MethodInvocation context Cast ReferenceType GlobalVarNode MemberReference node ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context Literal pushString ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull isGlobalDefined BreakStatement SwitchStatementCase INSTVARNODE StatementExpression MethodInvocation context Cast ReferenceType InstVarNode MemberReference node ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context Literal pushString ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull isInstanceVariableDefined BreakStatement SwitchStatementCase CONSTNODE StatementExpression MethodInvocation context Cast ReferenceType ConstNode MemberReference node ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context Literal "constant" pushString ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull isConstantDefined BreakStatement SwitchStatementCase FCALLNODE StatementExpression MethodInvocation context loadSelf StatementExpression MethodInvocation context Cast ReferenceType FCallNode MemberReference node ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation Cast ReferenceType FCallNode MemberReference node MemberReference context Literal "method" compileGetArgumentDefinition ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull isMethodBound BreakStatement SwitchStatementCase COLON3NODE COLON2NODE BlockStatement LocalVariableDeclaration Modifier final ReferenceType Colon3Node VariableDeclarator iVisited Cast ReferenceType Colon3Node MemberReference node LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator name MethodInvocation iVisited getName LocalVariableDeclaration ReferenceType BranchCallback VariableDeclarator setup ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation instanceof MemberReference iVisited ReferenceType Colon2Node BlockStatement LocalVariableDeclaration Modifier final ReferenceType Node VariableDeclarator leftNode Cast ReferenceType Colon2Node MemberReference iVisited StatementExpression MethodInvocation MemberReference leftNode MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation context loadObject LocalVariableDeclaration ReferenceType BranchCallback VariableDeclarator isConstant ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context Literal "constant" pushString LocalVariableDeclaration ReferenceType BranchCallback VariableDeclarator isMethod ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context Literal "method" pushString LocalVariableDeclaration ReferenceType BranchCallback VariableDeclarator none ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull StatementExpression MethodInvocation context MemberReference setup MemberReference isConstant MemberReference isMethod MemberReference none MemberReference name isConstantBranch BreakStatement SwitchStatementCase CALLNODE BlockStatement LocalVariableDeclaration Modifier final ReferenceType CallNode VariableDeclarator iVisited Cast ReferenceType CallNode MemberReference node LocalVariableDeclaration ReferenceType Object VariableDeclarator isnull MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator ending MethodInvocation context getNewEnding StatementExpression MethodInvocation MethodInvocation iVisited getReceiverNode MemberReference context compileGetDefinition StatementExpression MethodInvocation context MemberReference isnull ifNull StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation iVisited getReceiverNode MemberReference context Literal true compile StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context metaclass StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context MethodInvocation iVisited getName StatementExpression MethodInvocation context duplicateCurrentValue LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator isfalse MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator isreal MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator ending MethodInvocation context getNewEnding StatementExpression MethodInvocation context MemberReference isfalse Literal 3 isPrivate StatementExpression MethodInvocation context MemberReference isreal Literal 1 StatementExpression MethodInvocation context MemberReference isreal StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context MemberReference isfalse go StatementExpression MethodInvocation context MemberReference isreal setEnding StatementExpression MethodInvocation context MethodInvocation iVisited getName ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation iVisited getArgsNode MemberReference context Literal "method" compileGetArgumentDefinition ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context MemberReference isfalse go isMethodBound StatementExpression MethodInvocation context MemberReference ending go StatementExpression MethodInvocation context MemberReference isfalse setEnding StatementExpression MethodInvocation context pushNull StatementExpression MethodInvocation context MemberReference ending setEnding ClassReference ReferenceType JumpException ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull ClassReference ReferenceType String rescue StatementExpression MethodInvocation context MemberReference ending go StatementExpression MethodInvocation context MemberReference isnull setEnding StatementExpression MethodInvocation context pushNull StatementExpression MethodInvocation context MemberReference ending setEnding BreakStatement SwitchStatementCase CLASSVARNODE BlockStatement LocalVariableDeclaration ReferenceType ClassVarNode VariableDeclarator iVisited Cast ReferenceType ClassVarNode MemberReference node LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator ending MethodInvocation context getNewEnding LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator failure MethodInvocation context getNewEnding LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator singleton MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator second MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation context getNewEnding StatementExpression MethodInvocation context loadCurrentModule StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context MemberReference second ifNotNull StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context loadSelf StatementExpression MethodInvocation context metaclass StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context MethodInvocation iVisited getName ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context Literal "class variable" pushString StatementExpression MethodInvocation context MemberReference ending go ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context isClassVarDefined StatementExpression MethodInvocation context MemberReference second setEnding StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context MethodInvocation iVisited getName ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context Literal "class variable" pushString StatementExpression MethodInvocation context MemberReference ending go ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context isClassVarDefined StatementExpression MethodInvocation context MemberReference setEnding StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context MemberReference singleton ifSingleton StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context MemberReference failure go StatementExpression MethodInvocation context MemberReference singleton setEnding StatementExpression MethodInvocation context attached StatementExpression MethodInvocation context MethodInvocation iVisited getName MemberReference failure notIsModuleAndClassVarDefined StatementExpression MethodInvocation context Literal "class variable" pushString StatementExpression MethodInvocation context MemberReference ending go StatementExpression MethodInvocation context MemberReference failure setEnding StatementExpression MethodInvocation context pushNull StatementExpression MethodInvocation context MemberReference ending setEnding BreakStatement SwitchStatementCase ZSUPERNODE BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator fail MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator fail2 MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator fail_easy MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator ending MethodInvocation context getNewEnding StatementExpression MethodInvocation context getFrameName StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context MemberReference fail ifNull StatementExpression MethodInvocation context getFrameKlazz StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context MemberReference fail2 ifNull StatementExpression MethodInvocation context superClass StatementExpression MethodInvocation context MemberReference fail_easy ifNotSuperMethodBound StatementExpression MethodInvocation context Literal "super" pushString StatementExpression MethodInvocation context MemberReference ending go StatementExpression MethodInvocation context MemberReference fail2 setEnding StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context MemberReference fail setEnding StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context MemberReference fail_easy setEnding StatementExpression MethodInvocation context pushNull StatementExpression MethodInvocation context MemberReference ending setEnding BreakStatement SwitchStatementCase SUPERNODE BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator fail MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator fail2 MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator fail_easy MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator ending MethodInvocation context getNewEnding StatementExpression MethodInvocation context getFrameName StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context MemberReference fail ifNull StatementExpression MethodInvocation context getFrameKlazz StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context MemberReference fail2 ifNull StatementExpression MethodInvocation context superClass StatementExpression MethodInvocation context MemberReference fail_easy ifNotSuperMethodBound StatementExpression MethodInvocation Cast ReferenceType SuperNode MemberReference node MemberReference context Literal "super" compileGetArgumentDefinition StatementExpression MethodInvocation context MemberReference ending go StatementExpression MethodInvocation context MemberReference fail2 setEnding StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context MemberReference fail setEnding StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context MemberReference fail_easy setEnding StatementExpression MethodInvocation context pushNull StatementExpression MethodInvocation context MemberReference ending setEnding BreakStatement SwitchStatementCase ATTRASSIGNNODE BlockStatement LocalVariableDeclaration Modifier final ReferenceType AttrAssignNode VariableDeclarator iVisited Cast ReferenceType AttrAssignNode MemberReference node LocalVariableDeclaration ReferenceType Object VariableDeclarator isnull MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator ending MethodInvocation context getNewEnding StatementExpression MethodInvocation MethodInvocation iVisited getReceiverNode MemberReference context compileGetDefinition StatementExpression MethodInvocation context MemberReference isnull ifNull StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation iVisited getReceiverNode MemberReference context Literal true compile StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context metaclass StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context MethodInvocation iVisited getName StatementExpression MethodInvocation context duplicateCurrentValue LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator isfalse MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator isreal MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator ending MethodInvocation context getNewEnding StatementExpression MethodInvocation context MemberReference isfalse Literal 3 isPrivate StatementExpression MethodInvocation context MemberReference isreal Literal 1 StatementExpression MethodInvocation context MemberReference isreal StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context MemberReference isfalse go StatementExpression MethodInvocation context MemberReference isreal setEnding StatementExpression MethodInvocation context MethodInvocation iVisited getName ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation iVisited getArgsNode MemberReference context Literal "assignment" compileGetArgumentDefinition ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context MemberReference isfalse go isMethodBound StatementExpression MethodInvocation context MemberReference ending go StatementExpression MethodInvocation context MemberReference isfalse setEnding StatementExpression MethodInvocation context pushNull StatementExpression MethodInvocation context MemberReference ending setEnding ClassReference ReferenceType JumpException ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull ClassReference ReferenceType String rescue StatementExpression MethodInvocation context MemberReference ending go StatementExpression MethodInvocation context MemberReference isnull setEnding StatementExpression MethodInvocation context pushNull StatementExpression MethodInvocation context MemberReference ending setEnding BreakStatement SwitchStatementCase StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MemberReference node MemberReference context Literal true compile StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context pushNull ClassReference ReferenceType JumpException ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull ClassReference ReferenceType String rescue StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context Literal "expression" pushString	1
MethodDeclaration Modifier public final put FormalParameter BasicType long offset FormalParameter BasicType int src FormalParameter BasicType int off FormalParameter BasicType int len ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public ReferenceType Object case176_line720 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType OpAsgnNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference binding MemberReference type	0
MethodDeclaration Modifier public synchronized Annotation Override paint FormalParameter ReferenceType Graphics g IfStatement MemberReference doubleBuffered BlockStatement StatementExpression MethodInvocation MemberReference g paintBuffered BlockStatement StatementExpression MethodInvocation MemberReference g	0
MethodDeclaration Modifier public compileAlias FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType AliasNode VariableDeclarator alias Cast ReferenceType AliasNode MemberReference node StatementExpression MethodInvocation context MethodInvocation alias getNewName MethodInvocation alias getOldName defineAlias IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier private BasicType boolean fastHashContains FormalParameter ReferenceType String internedName LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator table MemberReference vTable ForStatement ForControl VariableDeclaration ReferenceType VariableTableEntry VariableDeclarator e MemberReference ArraySelector BinaryOperation & MethodInvocation internedName hashCode BinaryOperation - MemberReference table length Literal 1 table BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement IfStatement BinaryOperation == MemberReference internedName MemberReference e name BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType ListNode getPre ReturnStatement MemberReference pre	0
MethodDeclaration Modifier static protected ReferenceType List TypeArgument ReferenceType RubyString getContents FormalParameter ReferenceType File directory FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType RubyString VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType RubyString LocalVariableDeclaration ReferenceType String VariableDeclarator contents MethodInvocation directory list ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference contents length MemberReference ++ i BlockStatement StatementExpression MethodInvocation result MethodInvocation runtime MemberReference ArraySelector MemberReference i contents newString add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + MemberReference _value Literal	0
MethodDeclaration Modifier public BasicType int parseSimpleStringIntoBuffer FormalParameter ReferenceType LexerSource src FormalParameter ReferenceType ByteList buffer java.io.IOException LocalVariableDeclaration BasicType int VariableDeclarator c WhileStatement BinaryOperation != Assignment MemberReference c MethodInvocation src read = MemberReference RubyYaccLexer EOF BlockStatement IfStatement BinaryOperation == MemberReference c MemberReference end BlockStatement StatementExpression MethodInvocation src MemberReference c unread BreakStatement IfStatement BinaryOperation == MemberReference c Literal '\\' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MemberReference c Literal '\n' BinaryOperation != MemberReference c MemberReference end BinaryOperation != MemberReference c Literal '\\' StatementExpression MethodInvocation buffer Literal '\\' append StatementExpression MethodInvocation buffer MemberReference c append ReturnStatement MemberReference c	1
MethodDeclaration Modifier public static ReferenceType IRubyObject convertJavaToRuby FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object FormalParameter ReferenceType Class javaClass ReturnStatement MethodInvocation MemberReference runtime MemberReference object MethodInvocation MemberReference javaClass convertJavaToUsableRubyObjectWithConverter	0
MethodDeclaration Modifier public compileDAsgn FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType DAsgnNode VariableDeclarator dasgnNode Cast ReferenceType DAsgnNode MemberReference node LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator value ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation dasgnNode getValueNode MemberReference context Literal true compile StatementExpression MethodInvocation context MethodInvocation MethodInvocation dasgnNode getIndex MethodInvocation dasgnNode getDepth MemberReference value MemberReference expr assignLocalVariable getVariableCompiler	0
MethodDeclaration Modifier public ReferenceType Object convertEntry FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyHashEntry entry ReturnStatement MethodInvocation entry.value ClassReference ReferenceType Object toJava	0
MethodDeclaration Modifier private ReferenceType RubyModule getInstanceEvalClass IfStatement MethodInvocation isImmediate BlockStatement ReturnStatement MethodInvocation MethodInvocation getDummy getRuntime BlockStatement ReturnStatement MethodInvocation getSingletonClass	0
MethodDeclaration Modifier public ReferenceType Object case85_line601 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation || MethodInvocation support isInDef MethodInvocation support isInSingle BlockStatement StatementExpression MethodInvocation Literal "dynamic constant assignment" yyerror LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ConstDeclNode MemberReference position Literal null MethodInvocation support MemberReference position Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_colon2 MemberReference NilImplicitNode NIL = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier final public static ReferenceType RubyHash newHash FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Map valueMap FormalParameter ReferenceType IRubyObject defaultValue AssertStatement BinaryOperation != MemberReference defaultValue Literal null ReturnStatement ClassCreator ReferenceType RubyHash MemberReference runtime MemberReference valueMap MemberReference defaultValue	1
MethodDeclaration Modifier public final ReferenceType RubyString strDup FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation MemberReference runtime MethodInvocation getMetaClass strDup	0
MethodDeclaration Modifier private ReferenceType String formatWeekYear FormalParameter BasicType int firstDayOfWeek LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType Calendar VariableDeclarator calendar MethodInvocation dt toGregorianCalendar StatementExpression MethodInvocation calendar MemberReference firstDayOfWeek setFirstDayOfWeek StatementExpression MethodInvocation calendar Literal 7 LocalVariableDeclaration BasicType int VariableDeclarator value MethodInvocation calendar MemberReference java.util.Calendar get IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MemberReference value Literal 52 BinaryOperation == MemberReference value Literal 53 BinaryOperation == MethodInvocation calendar MemberReference Calendar MONTH get MemberReference Calendar JANUARY BlockStatement StatementExpression Assignment MemberReference value Literal 0 = ReturnStatement MethodInvocation String Literal "%02d" MemberReference value format	1
MethodDeclaration Modifier public run ForStatement ForControl BlockStatement TryStatement StatementExpression MethodInvocation BinaryOperation * MemberReference VULTURE_RUN_FREQ_SECONDS Literal 1000 sleep CatchClause CatchClauseParameter InterruptedException e LocalVariableDeclaration BasicType boolean VariableDeclarator dump BinaryOperation > MethodInvocation size Literal 200 IfStatement MemberReference dump BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + Literal "***Vulture " MemberReference id Literal " waking, stats:" println StatementExpression MethodInvocation System.err MethodInvocation stats println ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference segments length BinaryOperation >= MemberReference -- i Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Segment TypeArgument ReferenceType T TypeArgument ReferenceType A VariableDeclarator seg MemberReference ArraySelector MemberReference i segments StatementExpression MethodInvocation seg lock TryStatement StatementExpression MethodInvocation seg expunge StatementExpression MethodInvocation seg unlock StatementExpression MethodInvocation yield IfStatement MemberReference dump BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + Literal "***Vulture " MemberReference id Literal " sleeping, stats:" println StatementExpression MethodInvocation System.err MethodInvocation stats println	1
MethodDeclaration Modifier final public static Annotation JRubyMethod ElementValuePair name Literal "new" ElementValuePair required Literal 2 ElementValuePair meta Literal true ReferenceType IRubyObject newInstance FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject klass FormalParameter ReferenceType IRubyObject componentType FormalParameter ReferenceType IRubyObject length IfStatement BinaryOperation instanceof MemberReference componentType ReferenceType Type BlockStatement ThrowStatement MethodInvocation context MethodInvocation MemberReference componentType MethodInvocation MethodInvocation context getRuntime getTypeClass newTypeError getRuntime ReturnStatement ClassCreator ReferenceType Array MethodInvocation context getRuntime Cast ReferenceType RubyClass MemberReference klass Cast ReferenceType Type MemberReference componentType MethodInvocation RubyNumeric MemberReference length fix2int	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock getReceiverNode ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference receiver MethodInvocation arg1 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock MethodInvocation arg2 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock MethodInvocation RuntimeHelpers MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference aBlock getBlock call	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair meta Literal true ReferenceType IRubyObject unpack_sockaddr_in FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject addr LocalVariableDeclaration ReferenceType String VariableDeclarator val MethodInvocation addr MethodInvocation toString convertToString IfStatement BinaryOperation || BinaryOperation && BinaryOperation && MemberReference Platform IS_BSD BinaryOperation != MethodInvocation val Literal 0 charAt Literal 16 BinaryOperation != MethodInvocation val Literal 1 charAt Literal 2 BinaryOperation && MemberReference ! Platform IS_BSD BinaryOperation != MethodInvocation val Literal 0 charAt Literal 2 BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "can't resolve socket address of wrong type" newArgumentError getRuntime LocalVariableDeclaration BasicType int VariableDeclarator port BinaryOperation + BinaryOperation << MethodInvocation val Literal 2 charAt Literal 8 MethodInvocation val Literal 3 charAt LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation sb Cast BasicType int MethodInvocation val Literal 4 charAt append StatementExpression MethodInvocation sb Literal "." append StatementExpression MethodInvocation sb Cast BasicType int MethodInvocation val Literal 5 charAt append StatementExpression MethodInvocation sb Literal "." append StatementExpression MethodInvocation sb Cast BasicType int MethodInvocation val Literal 6 charAt append StatementExpression MethodInvocation sb Literal "." append StatementExpression MethodInvocation sb Cast BasicType int MethodInvocation val Literal 7 charAt append LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation context MethodInvocation MemberReference port newFixnum getRuntime MethodInvocation context MethodInvocation MethodInvocation sb toString newString getRuntime ReturnStatement MethodInvocation context MethodInvocation MemberReference result newArrayNoCopy getRuntime	1
MethodDeclaration Modifier public ReferenceType RubyClass getFileStat ReturnStatement MemberReference fileStatClass	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self Literal "__jcreate!" MemberReference arg0 invoke	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_s" Annotation Override ReferenceType IRubyObject to_s StatementExpression MethodInvocation check LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator ss MethodInvocation RubyRegexp This IfStatement MethodInvocation ss isNil StatementExpression Assignment MemberReference ss MethodInvocation RubyString MethodInvocation getRuntime newEmptyString = IfStatement MethodInvocation isTaint StatementExpression MethodInvocation ss Literal true setTaint ReturnStatement MemberReference ss	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject runWithGetsLoop FormalParameter ReferenceType Node scriptNode FormalParameter BasicType boolean printing FormalParameter BasicType boolean processLineEnds FormalParameter BasicType boolean split FormalParameter BasicType boolean unused ReturnStatement MethodInvocation MemberReference scriptNode MemberReference printing MemberReference processLineEnds MemberReference split runWithGetsLoop	1
MethodDeclaration Modifier public Annotation Override printStackTrace FormalParameter ReferenceType PrintStream ps LocalVariableDeclaration ReferenceType StackTraceElement VariableDeclarator trace MethodInvocation getStackTrace LocalVariableDeclaration BasicType int VariableDeclarator externalIndex Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference trace length Literal 1 BinaryOperation > MemberReference i Literal 0 MemberReference -- i BlockStatement IfStatement BinaryOperation >= MemberReference ArraySelector MemberReference i MethodInvocation getClassName MethodInvocation Literal indexOf trace Literal 0 BlockStatement BreakStatement StatementExpression Assignment MemberReference externalIndex MemberReference i = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator backtrace MethodInvocation exception backtrace LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation backtrace getRuntime IfStatement BinaryOperation != MethodInvocation runtime getNil MemberReference backtrace BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator firstLine MethodInvocation backtrace MethodInvocation convertToString MethodInvocation toString MethodInvocation runtime getCurrentContext Literal "first" callMethod StatementExpression MethodInvocation ps BinaryOperation + MemberReference firstLine Literal ": " print LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator message MemberReference exception message StatementExpression MethodInvocation ps BinaryOperation + BinaryOperation + BinaryOperation + TernaryExpression MethodInvocation message isNil Literal "" MethodInvocation message convertToString Literal " (" MethodInvocation exception MethodInvocation toString getMetaClass Literal ")" println StatementExpression MethodInvocation exception MemberReference ps printBacktrace StatementExpression MethodInvocation ps Literal jruby stack println ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference externalIndex BinaryOperation < MemberReference i MemberReference trace length MemberReference ++ i BlockStatement StatementExpression MethodInvocation ps BinaryOperation + Literal " MemberReference ArraySelector MemberReference i MethodInvocation toString trace println	0
MethodDeclaration Modifier public go_to FormalParameter ReferenceType Label arg0 StatementExpression MethodInvocation MethodInvocation MemberReference GOTO MemberReference arg0 visitJumpInsn getMethodVisitor	1
MethodDeclaration Modifier public ReferenceType Object case336_line1276 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType MultipleAsgn19Node MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Literal null MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal null assignable Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Class getComponentType ReturnStatement MethodInvocation MethodInvocation getClass MethodInvocation getComponentType getValue	0
MethodDeclaration Modifier public final ReferenceType IRubyObject getConstantFrom0 FormalParameter ReferenceType RubyModule target FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference target MemberReference context MemberReference name Literal 0 getConstantFrom	0
MethodDeclaration Modifier final public static ReferenceType RubyArray FormalParameter Modifier final ReferenceType Ruby runtime ReturnStatement MethodInvocation MemberReference runtime MemberReference ARRAY_DEFAULT_SIZE	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "print" ElementValuePair rest Literal true ElementValuePair reads MemberReference FrameField LASTLINE ReferenceType IRubyObject print FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference context This MemberReference args print	0
MethodDeclaration Modifier private BasicType boolean getSign LocalVariableDeclaration BasicType boolean VariableDeclarator sign Literal true IfStatement BinaryOperation < MemberReference str MemberReference end BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference str data Literal '+' BlockStatement StatementExpression MemberReference ++ str IfStatement BinaryOperation == MemberReference ArraySelector MemberReference str data Literal '-' BlockStatement StatementExpression MemberReference ++ str StatementExpression Assignment MemberReference sign Literal false = ReturnStatement MemberReference sign	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type LocalVariableDeclaration ReferenceType Visibility VariableDeclarator oldVis MethodInvocation binding MethodInvocation getVisibility getFrame LocalVariableDeclaration ReferenceType Frame VariableDeclarator lastFrame MethodInvocation MemberReference context Literal null MemberReference binding pre LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator self MethodInvocation MemberReference binding prepareSelf TryStatement IfStatement MemberReference ! noargblock StatementExpression MethodInvocation assigner MethodInvocation context getRuntime MemberReference context MemberReference self MemberReference arg0 MemberReference Block NULL_BLOCK assign ReturnStatement MethodInvocation MemberReference context MemberReference self evalBlockBody CatchClause CatchClauseParameter JumpException.NextJump nj ReturnStatement MethodInvocation MemberReference context MemberReference nj MemberReference type handleNextJump StatementExpression MethodInvocation MemberReference context MemberReference binding MemberReference oldVis MemberReference lastFrame post	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "clone" Annotation Override ReferenceType IRubyObject LocalVariableDeclaration ReferenceType RubyProc VariableDeclarator newProc ClassCreator ReferenceType RubyProc MethodInvocation getRuntime MethodInvocation MethodInvocation getProc getRuntime MemberReference type StatementExpression Assignment MemberReference newProc block MethodInvocation getBlock = StatementExpression Assignment MemberReference newProc file MemberReference file = StatementExpression Assignment MemberReference newProc line MemberReference line = ReturnStatement MemberReference newProc	1
MethodDeclaration Modifier public compileZSuper FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType ZSuperNode VariableDeclarator zsuperNode Cast ReferenceType ZSuperNode MemberReference node LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator closure MethodInvocation MethodInvocation zsuperNode getIterNode getBlock StatementExpression MethodInvocation context MemberReference closure callZSuper IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name LocalVariableDeclaration BasicType int VariableDeclarator newGeneration MethodInvocation context MethodInvocation getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MethodInvocation context MemberReference name getConstant StatementExpression Assignment MemberReference cachedValue MemberReference value = IfStatement BinaryOperation != MemberReference value Literal null StatementExpression Assignment MemberReference generation MemberReference newGeneration = ReturnStatement MemberReference value	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "priority=" ElementValuePair required Literal 1 ReferenceType IRubyObject priority_set FormalParameter ReferenceType IRubyObject priority LocalVariableDeclaration BasicType int VariableDeclarator iPriority MethodInvocation RubyNumeric MemberReference priority fix2int IfStatement BinaryOperation < MemberReference iPriority MemberReference Thread MIN_PRIORITY BlockStatement StatementExpression Assignment MemberReference iPriority MemberReference Thread MIN_PRIORITY = IfStatement BinaryOperation > MemberReference iPriority MemberReference Thread MAX_PRIORITY BlockStatement StatementExpression Assignment MemberReference iPriority MemberReference Thread MAX_PRIORITY = StatementExpression Assignment This MemberReference priority MethodInvocation RubyFixnum MethodInvocation getRuntime MemberReference iPriority newFixnum = IfStatement MethodInvocation threadImpl isAlive BlockStatement StatementExpression MethodInvocation threadImpl MemberReference iPriority setPriority ReturnStatement This MemberReference priority	1
MethodDeclaration Modifier static ReferenceType EmptyByteListHolder FormalParameter ReferenceType Encoding enc LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation enc getIndex LocalVariableDeclaration ReferenceType EmptyByteListHolder VariableDeclarator bytes IfStatement BinaryOperation && BinaryOperation < MemberReference index MemberReference EMPTY_BYTELISTS length BinaryOperation != Assignment MemberReference bytes MemberReference ArraySelector MemberReference index EMPTY_BYTELISTS = Literal null BlockStatement ReturnStatement MemberReference bytes ReturnStatement MethodInvocation MemberReference enc prepareEmptyByteList	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation MethodInvocation context getRuntime	0
MethodDeclaration Modifier public ReferenceType Object case55_line503 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType IterNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_call = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyFixnum ReturnStatement MethodInvocation length	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator values Cast ReferenceType RubyArray MemberReference arg LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation values getLength SwitchStatement MemberReference length SwitchStatementCase Literal 0 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block assign BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 0 eltInternal MemberReference block assign BreakStatement	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair required Literal 1 ElementValuePair rest Literal true ReferenceType IRubyObject send FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args TryStatement LocalVariableDeclaration BasicType int VariableDeclarator written IfStatement BinaryOperation >= MemberReference args length Literal 3 BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator nameStr MemberReference ArraySelector Literal 2 MethodInvocation convertToString args LocalVariableDeclaration ReferenceType RubyString VariableDeclarator data MemberReference ArraySelector Literal 0 MethodInvocation convertToString args LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator buf MethodInvocation ByteBuffer MethodInvocation data getBytes wrap LocalVariableDeclaration ReferenceType InetAddress VariableDeclarator address MethodInvocation RubySocket MethodInvocation nameStr getByteList getRubyInetAddress LocalVariableDeclaration ReferenceType InetSocketAddress VariableDeclarator addr ClassCreator ReferenceType InetSocketAddress MemberReference address MethodInvocation RubyNumeric MemberReference ArraySelector Literal 3 args fix2int StatementExpression Assignment MemberReference written Cast ReferenceType DatagramChannel This MethodInvocation getChannel = BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator data MemberReference ArraySelector Literal 0 MethodInvocation convertToString args LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator buf MethodInvocation ByteBuffer MethodInvocation data getBytes wrap StatementExpression Assignment MemberReference written Cast ReferenceType DatagramChannel This MethodInvocation getChannel = ReturnStatement MethodInvocation context MethodInvocation MemberReference written newFixnum getRuntime CatchClause CatchClauseParameter UnknownHostException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "send: name or service not known" sockerr CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "send: name or service not known" sockerr	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType CompilerCallback value IfStatement BinaryOperation != MemberReference currentLoopLabels Literal null BlockStatement StatementExpression MethodInvocation value This call StatementExpression MethodInvocation issueLoopBreak IfStatement MemberReference inNestedMethod BlockStatement StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation value This call StatementExpression MethodInvocation Literal "breakJump" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject sig invokeUtilityMethod BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation value This call StatementExpression MethodInvocation Literal "breakLocalJumpError" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Ruby ClassReference ReferenceType IRubyObject sig invokeUtilityMethod	0
MethodDeclaration Modifier public ReferenceType Object case215_line866 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal "==" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation context getFrameName LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator klazz MethodInvocation context getFrameKlazz IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference name Literal null BinaryOperation != MemberReference klazz Literal null MethodInvocation klazz MethodInvocation MemberReference name Literal false isMethodBound getSuperClass BlockStatement ReturnStatement MethodInvocation ASTInterpreter MemberReference runtime MemberReference context MemberReference argsNode Literal "super" MemberReference self MemberReference aBlock getArgumentDefinition ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType PID getPid ReturnStatement MemberReference pid	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation method pop StatementExpression MethodInvocation method MemberReference topOfBody go_to	0
MethodDeclaration Modifier public append FormalParameter ReferenceType ByteList obj IfStatement MethodInvocation ! internalFinished BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator bytes MethodInvocation obj bytes StatementExpression MethodInvocation flater MemberReference bytes setInput StatementExpression Assignment MemberReference input ClassCreator ReferenceType ByteList MemberReference bytes Literal false = StatementExpression MethodInvocation Literal false run BlockStatement StatementExpression MethodInvocation input MemberReference obj append	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType VariableDeclarator posix MethodInvocation runtime getPosix LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator results MethodInvocation runtime newArray LocalVariableDeclaration BasicType int VariableDeclarator status ArrayCreator BasicType int Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation posix MemberReference status wait WhileStatement BinaryOperation != MemberReference result Literal - 1 BlockStatement StatementExpression MethodInvocation results MethodInvocation runtime MethodInvocation runtime MemberReference result newFixnum MethodInvocation MemberReference runtime MemberReference ArraySelector Literal 0 status newArray append StatementExpression Assignment MemberReference result MethodInvocation posix MemberReference status wait = ReturnStatement MemberReference results	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType RubyBinding newBinding FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self ReturnStatement MethodInvocation MemberReference runtime MethodInvocation runtime MethodInvocation MemberReference self currentBinding getCurrentContext newBinding	1
MethodDeclaration Modifier private ReferenceType IRubyObject callMethodMissing FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType DynamicMethod method FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MemberReference context MemberReference self MethodInvocation self getMetaClass MemberReference methodName MemberReference block call MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference methodName MemberReference callType	0
MethodDeclaration Modifier public append FormalParameter ReferenceType N t StatementExpression Assignment MemberReference tail tail MemberReference t = StatementExpression Assignment MemberReference tail MemberReference t =	0
MethodDeclaration Modifier public ReferenceType Object case348_line1299 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals new_super = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static ReferenceType RubyClass createRangeClass FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation runtime Literal "Range" MethodInvocation runtime getObject MemberReference defineClass StatementExpression MethodInvocation runtime MemberReference result setRange StatementExpression Assignment MemberReference result ClassCreator ReferenceType RubyModule ReferenceType MethodDeclaration Modifier public BasicType boolean isKindOf FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyRange = StatementExpression MethodInvocation result MemberReference setMarshal StatementExpression MethodInvocation result MethodInvocation runtime includeModule StatementExpression MethodInvocation result ClassReference ReferenceType RubyRange defineAnnotatedMethods ReturnStatement MemberReference result	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getSingletonMethod FormalParameter ReferenceType String method FormalParameter ReferenceType Class arg1 FormalParameter ReferenceType Class arg2 LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal "_S2" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal "_S2" SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator descriptor ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 MemberReference arg2 IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer MemberReference RubyKernel IRUBY_OBJECT MemberReference arg1 MemberReference arg2 ClassReference ReferenceType Block LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtor LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCallS StatementExpression MethodInvocation MemberReference mv MemberReference METHOD_ARGS_INDEX Literal 2 MemberReference descriptor loadArguments StatementExpression MethodInvocation mv MemberReference ALOAD Literal 3 visitVarInsn StatementExpression MethodInvocation mv MemberReference INVOKESTATIC MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 4 Literal 4 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType InvocationCallback VariableDeclarator ic Cast ReferenceType InvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity twoArguments setArity StatementExpression MethodInvocation ic MemberReference descriptor setArgumentTypes StatementExpression MethodInvocation ic MemberReference method setJavaName StatementExpression MethodInvocation ic Literal true setSingleton ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference binding MemberReference type MemberReference block call	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Type type ThrowStatement MethodInvocation context MethodInvocation MemberReference RubyLocalJumpError.Reason NOREASON MethodInvocation context MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 newArrayNoCopy getRuntime Literal "yield called out of block" newLocalJumpError getRuntime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "[]" ElementValuePair required Literal 1 ReferenceType IRubyObject op_aref FormalParameter ReferenceType IRubyObject key LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value IfStatement BinaryOperation != Assignment MemberReference value MethodInvocation MethodInvocation MethodInvocation MemberReference key getSymbolKey get getThreadLocals = Literal null BlockStatement ReturnStatement MemberReference value ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 getRuntime Literal null Literal null Literal true MemberReference binding MemberReference type yield	1
MethodDeclaration Modifier public ReferenceType Object case234_line932 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = IfStatement BinaryOperation != MemberReference yyVal Literal null StatementExpression Cast ReferenceType Node MemberReference yyVal ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType String asJavaString ReturnStatement MemberReference symbol	0
MethodDeclaration Modifier public ReferenceType RubyClass getNumeric ReturnStatement MemberReference numericClass	0
MethodDeclaration Modifier private ReferenceType IRubyObject match19Common FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg FormalParameter BasicType int pos FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope IfStatement MethodInvocation arg isNil BlockStatement StatementExpression MethodInvocation scope MemberReference arg setBackRef ReturnStatement MemberReference arg LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MemberReference runtime MemberReference arg operandCheck IfStatement BinaryOperation < MethodInvocation MemberReference context MemberReference str MemberReference pos matchPos Literal 0 BlockStatement StatementExpression MethodInvocation scope MethodInvocation runtime getNil setBackRef ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator backref MethodInvocation scope MemberReference runtime getBackRef StatementExpression Cast ReferenceType RubyMatchData MemberReference backref IfStatement MethodInvocation block isGiven ReturnStatement MethodInvocation block MemberReference context MemberReference backref yield ReturnStatement MemberReference backref	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation MemberReference arg0 MemberReference arg1 MemberReference arg2 getRuntime Literal null Literal null Literal true MemberReference binding MemberReference type yield	0
MethodDeclaration Modifier public ReferenceType AnnotationProcessor getProcessorFor FormalParameter ReferenceType Set TypeArgument ReferenceType AnnotationTypeDeclaration FormalParameter ReferenceType AnnotationProcessorEnvironment env ReturnStatement ClassCreator ReferenceType MemberReference env	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement TernaryExpression BinaryOperation != MemberReference Literal null MethodInvocation MemberReference argsNode MemberReference createList MethodInvocation MemberReference argsNode createList	0
MethodDeclaration Modifier public static BasicType boolean formatHasFloatingPointNotation FormalParameter ReferenceType String format ReturnStatement MethodInvocation format Literal "F" endsWith	0
MethodDeclaration Modifier final ReferenceType Encoding checkEncoding FormalParameter ReferenceType RubyString other LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation MemberReference other isCompatibleWith IfStatement BinaryOperation == MemberReference enc Literal null ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "incompatible character encodings: " MemberReference value encoding Literal " and " MemberReference other.value encoding newEncodingCompatibilityError getRuntime ReturnStatement MemberReference enc	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "chr" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyString chr19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType long VariableDeclarator value MethodInvocation getLongValue LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation arg MethodInvocation MemberReference runtime toEncoding convertToString LocalVariableDeclaration BasicType int VariableDeclarator n IfStatement BinaryOperation || BinaryOperation < MemberReference value Literal 0 BinaryOperation <= Assignment MemberReference n MethodInvocation StringSupport MemberReference runtime MemberReference enc Cast BasicType int MemberReference value codeLength = Literal 0 BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + This MethodInvocation toString Literal " out of char range" newRangeError LocalVariableDeclaration ReferenceType ByteList VariableDeclarator bytes ClassCreator ReferenceType ByteList MemberReference n StatementExpression MethodInvocation enc Cast BasicType int MemberReference value MemberReference bytes bytes Literal 0 codeToMbc StatementExpression Assignment MemberReference bytes realSize MemberReference n = ReturnStatement MethodInvocation RubyString MemberReference runtime MemberReference bytes MemberReference enc Literal 0	1
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value1 FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType Block block StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MemberReference value1 MemberReference block Literal false assign StatementExpression MethodInvocation parameter2 MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference block Literal false assign StatementExpression MethodInvocation parameter3 MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime getNil MemberReference block Literal false assign	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject pos ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public Annotation Override loadBlock StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType Block sig invokeThreadContext	0
MethodDeclaration Modifier public ReferenceType Class TypeArgument ? ReturnStatement MethodInvocation m	0
MethodDeclaration Modifier private ReferenceType String parseShebangOptions FormalParameter ReferenceType InputStream in LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator result ArrayCreator ReferenceType String Literal 0 IfStatement BinaryOperation == MemberReference in Literal null ReturnStatement MemberReference result TryStatement StatementExpression MethodInvocation in Literal 1024 mark StatementExpression Assignment MemberReference reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference in Literal "iso-8859-1" Literal 8192 = LocalVariableDeclaration ReferenceType String VariableDeclarator firstLine MethodInvocation reader readLine LocalVariableDeclaration BasicType boolean VariableDeclarator usesEnv Literal false IfStatement BinaryOperation && BinaryOperation && BinaryOperation > MethodInvocation firstLine length Literal 2 BinaryOperation == MethodInvocation firstLine Literal 0 charAt Literal '#' BinaryOperation == MethodInvocation firstLine Literal 1 charAt Literal '!' BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator options MethodInvocation firstLine MethodInvocation Literal split Literal 2 substring LocalVariableDeclaration BasicType int VariableDeclarator i ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference options length MemberReference ++ i BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference i Literal 0 MemberReference ArraySelector MemberReference i MethodInvocation Literal "/env" endsWith options BlockStatement StatementExpression Assignment MemberReference usesEnv Literal true = ContinueStatement IfStatement BinaryOperation && MemberReference usesEnv BinaryOperation > MemberReference ArraySelector MemberReference i MethodInvocation Literal '=' indexOf options Literal 0 BlockStatement ContinueStatement IfStatement BinaryOperation && MemberReference usesEnv MemberReference ArraySelector MemberReference i MethodInvocation Literal "-" startsWith options BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator basename ClassCreator MethodInvocation getName ReferenceType File MemberReference ArraySelector MemberReference i options IfStatement BinaryOperation > MethodInvocation basename Literal "ruby" indexOf Literal 0 BlockStatement BreakStatement StatementExpression MethodInvocation System MemberReference options MemberReference i MemberReference result Literal 0 BinaryOperation - MemberReference options length MemberReference i arraycopy CatchClause CatchClauseParameter Exception ex TryStatement StatementExpression MethodInvocation in reset CatchClause CatchClauseParameter IOException ex ReturnStatement MemberReference result	1
MethodDeclaration Modifier public final ReferenceType RubyRegexp FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int index FormalParameter ReferenceType String pattern FormalParameter BasicType int options LocalVariableDeclaration ReferenceType RubyRegexp VariableDeclarator regexp MemberReference ArraySelector MemberReference index regexps IfStatement BinaryOperation == MemberReference regexp Literal null BlockStatement StatementExpression Assignment MemberReference regexp MethodInvocation RubyRegexp MemberReference runtime MemberReference pattern MemberReference options newRegexp = StatementExpression MethodInvocation regexp setLiteral StatementExpression Assignment MemberReference ArraySelector MemberReference index regexps MemberReference regexp = ReturnStatement MemberReference regexp	0
MethodDeclaration Modifier public ReferenceType Operand buildStr FormalParameter ReferenceType StrNode strNode FormalParameter ReferenceType IR_Scope s ReturnStatement ClassCreator ReferenceType StringLiteral MethodInvocation strNode getValue	1
MethodDeclaration Modifier public ReferenceType Object case464_line1767 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ArgsNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression Cast ReferenceType ISourcePositionHolder MemberReference yyVal StatementExpression MethodInvocation lexer MemberReference LexState EXPR_BEG setState ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean retainAll FormalParameter ReferenceType Collection collection ReturnStatement MethodInvocation map MethodInvocation MemberReference collection retainAll keySet	0
MethodDeclaration Modifier public ReferenceType Object case440_line1702 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType RubyHash getCharsetMap IfStatement BinaryOperation == MemberReference charsetMap Literal null StatementExpression Assignment MemberReference charsetMap ClassCreator ReferenceType RubyHash This = ReturnStatement MemberReference charsetMap	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "map!" ElementValuePair frame Literal true ReferenceType IRubyObject map_bang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block collectBang MethodInvocation MethodInvocation context getRuntime This Literal "map!" enumeratorize	1
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock AssertStatement Literal false Literal should not ever for Colon2ImplicitNode" ReturnStatement Literal null	0
MethodDeclaration Modifier protected ReferenceType String getSignature ReturnStatement MethodInvocation StandardASMCompiler MethodInvocation script getClassname getStaticClosureSignature	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "change_privilege" ElementValuePair module Literal true ReferenceType IRubyObject change_privilege FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg ThrowStatement MethodInvocation self MethodInvocation Literal "Process::UID::change_privilege not implemented yet" newNotImplementedError getRuntime	1
MethodDeclaration Modifier public static ReferenceType IRubyObject convertToJavaArray FormalParameter ReferenceType IRubyObject value IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ReturnStatement MemberReference IRubyObject NULL_ARRAY IfStatement BinaryOperation instanceof MemberReference value ReferenceType RubyArray BlockStatement ReturnStatement Cast ReferenceType RubyArray MemberReference value ReturnStatement ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference value	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getSingletonMethod FormalParameter ReferenceType String method FormalParameter ReferenceType Class arg1 FormalParameter ReferenceType Class arg2 ReturnStatement ClassCreator ReferenceType ReflectionCallback MemberReference type MemberReference method ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 MemberReference arg2 Literal false Literal true MethodInvocation Arity Literal 2 fixed Literal false	1
MethodDeclaration Modifier public final ReferenceType RubyString FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 4 getString	0
MethodDeclaration Modifier public ReferenceType Object case55_line501 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType IterNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_call = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public synchronized ReferenceType Object StatementExpression MethodInvocation TypeConverter This checkData ReturnStatement This MethodInvocation Literal "__wrap_struct__" fastGetInternalVariable	0
MethodDeclaration Modifier public ReferenceType Object remove FormalParameter BasicType int hash FormalParameter ReferenceType Object key StatementExpression Assignment MemberReference key MethodInvocation MemberReference key maskKey = LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation MemberReference hash index LocalVariableDeclaration ReferenceType Entry VariableDeclarator entry MemberReference ArraySelector MemberReference idx table IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement IfStatement MethodInvocation entry MemberReference hash MemberReference key sameKey BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference idx table MemberReference entry next = StatementExpression Assignment MemberReference size Literal 1 -= ReturnStatement MethodInvocation entry getValue BlockStatement LocalVariableDeclaration ReferenceType Entry VariableDeclarator ahead MemberReference entry next WhileStatement BinaryOperation != MemberReference ahead Literal null BlockStatement IfStatement MethodInvocation ahead MemberReference hash MemberReference key sameKey BlockStatement StatementExpression Assignment MemberReference entry next MemberReference ahead next = StatementExpression Assignment MemberReference size Literal 1 -= ReturnStatement MethodInvocation ahead getValue StatementExpression Assignment MemberReference entry MemberReference ahead = StatementExpression Assignment MemberReference ahead MemberReference ahead next = ReturnStatement Literal null	0
MethodDeclaration Modifier public static ReferenceType IRubyObject javaToRuby FormalParameter ReferenceType Ruby ruby FormalParameter ReferenceType Object object IfStatement BinaryOperation == MemberReference object Literal null BlockStatement ReturnStatement MethodInvocation ruby getNil IfStatement BinaryOperation instanceof MemberReference object ReferenceType IRubyObject BlockStatement ReturnStatement Cast ReferenceType IRubyObject MemberReference object BlockStatement ReturnStatement ClassCreator ReferenceType JavaObjectWrapper Cast ReferenceType RubyClass MethodInvocation MemberReference ruby MethodInvocation object getClass getMirrorForClass MemberReference object	0
MethodDeclaration Modifier private BasicType int choppedLength LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation - MemberReference value realSize Literal 1 IfStatement BinaryOperation == MemberReference value bytes Literal '\n' BlockStatement IfStatement BinaryOperation && BinaryOperation > MemberReference end Literal 0 BinaryOperation == MemberReference value bytes Literal '\r' StatementExpression MemberReference -- end ReturnStatement MemberReference end	1
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation arg1 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock MethodInvocation arg2 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock call	0
MethodDeclaration Modifier public ReferenceType Object case216_line869 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal "===" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier protected Annotation Override BasicType boolean FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference name	0
MethodDeclaration Modifier public ReferenceType Object case7_line314 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getPosition newline_node appendToBlock = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public synchronized includeModule FormalParameter ReferenceType IRubyObject arg AssertStatement BinaryOperation != MemberReference arg Literal null StatementExpression MethodInvocation Literal "module" testFrozen IfStatement MethodInvocation ! isTaint BlockStatement StatementExpression MethodInvocation MethodInvocation Literal 4 secure getRuntime IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyModule BlockStatement ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "Wrong argument type " MethodInvocation arg MethodInvocation getName getMetaClass Literal " (expected Module)." newTypeError getRuntime LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module Cast ReferenceType RubyModule MemberReference arg StatementExpression MethodInvocation MemberReference module checkForCyclicInclude StatementExpression MethodInvocation MemberReference module infectBy StatementExpression MethodInvocation MemberReference module doIncludeModule StatementExpression MethodInvocation invalidateConstantCache StatementExpression MethodInvocation invalidateCacheDescendants	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation Node MemberReference MemberReference secondNode createList	0
MethodDeclaration Modifier public static ReferenceType IRubyObject putc FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject maybeIO FormalParameter ReferenceType IRubyObject object LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation RubyNumeric MemberReference object num2chr IfStatement BinaryOperation instanceof MemberReference maybeIO ReferenceType RubyIO BlockStatement LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator io Cast ReferenceType RubyIO MemberReference maybeIO TryStatement LocalVariableDeclaration ReferenceType OpenFile VariableDeclarator myOpenFile MethodInvocation io getOpenFileChecked StatementExpression MethodInvocation myOpenFile MethodInvocation context getRuntime checkWritable LocalVariableDeclaration ReferenceType Stream VariableDeclarator writeStream MethodInvocation myOpenFile getWriteStream StatementExpression MethodInvocation writeStream MethodInvocation RubyNumeric MemberReference object num2chr fputc IfStatement MethodInvocation myOpenFile isSync StatementExpression MethodInvocation myOpenFile MemberReference writeStream fflush CatchClause CatchClauseParameter IOException ex ThrowStatement MethodInvocation context MethodInvocation MemberReference ex newIOErrorFromException getRuntime CatchClause CatchClauseParameter BadDescriptorException e ThrowStatement MethodInvocation context MethodInvocation newErrnoEBADFError getRuntime CatchClause CatchClauseParameter InvalidValueException ex ThrowStatement MethodInvocation context MethodInvocation newErrnoEINVALError getRuntime CatchClause CatchClauseParameter PipeException ex ThrowStatement MethodInvocation context MethodInvocation newErrnoEPIPEError getRuntime BlockStatement StatementExpression MethodInvocation maybeIO MemberReference context Literal "write" MethodInvocation RubyString MethodInvocation context getRuntime ArrayCreator BasicType byte ArrayInitializer Cast BasicType byte MemberReference c callMethod ReturnStatement MemberReference object	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType IRubyObject arg8 FormalParameter ReferenceType IRubyObject arg9 FormalParameter ReferenceType Block block IfStatement BinaryOperation >= MemberReference box callCount Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 MemberReference arg9 MemberReference block call MemberReference context MemberReference name tryJitReturnMethod ReturnStatement MethodInvocation box.actualMethod MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 MemberReference arg9 MemberReference block call	0
MethodDeclaration Modifier public ReferenceType String virtualMethod ReturnStatement Literal "base"	0
MethodDeclaration Modifier public BasicType boolean isVerbose ReturnStatement MethodInvocation runtime isVerbose	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context LocalVariableDeclaration ReferenceType Node VariableDeclarator argsNode MethodInvocation multipleAsgnNode getArgsNode IfStatement BinaryOperation instanceof MemberReference argsNode ReferenceType StarNode BlockStatement StatementExpression MethodInvocation context consumeCurrentValue BlockStatement StatementExpression MethodInvocation MemberReference argsNode MemberReference context Literal false compileAssignment	0
MethodDeclaration Modifier public BasicType int write FormalParameter ReferenceType ByteBuffer buffer IOException BadDescriptorException StatementExpression MethodInvocation checkOpen ReturnStatement MethodInvocation MemberReference buffer	0
MethodDeclaration Modifier public ReferenceType Object convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyObject IfStatement MethodInvocation rubyObject Literal "to_i" respondsTo BlockStatement ReturnStatement ClassCreator ReferenceType Character Cast BasicType char Cast ReferenceType RubyNumeric MethodInvocation rubyObject MemberReference context Literal "to_i" callMethod ReturnStatement ClassCreator ReferenceType Character Cast BasicType char Literal 0	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ">" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_gt19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyString ReturnStatement MethodInvocation context MethodInvocation BinaryOperation > MethodInvocation Cast ReferenceType RubyString MemberReference other op_cmp19 Literal 0 newBoolean getRuntime ReturnStatement MethodInvocation RubyComparable MemberReference context This MemberReference other op_gt	1
MethodDeclaration Modifier private static ReferenceType JavaProxyClass generate FormalParameter Modifier final ReferenceType ClassLoader loader FormalParameter Modifier final ReferenceType String targetClassName FormalParameter Modifier final ReferenceType Class superClass FormalParameter Modifier final ReferenceType Class interfaces FormalParameter Modifier final ReferenceType Map methods FormalParameter Modifier final ReferenceType Type selfType LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference targetClassName MemberReference superClass MemberReference interfaces beginProxyClass LocalVariableDeclaration ReferenceType GeneratorAdapter VariableDeclarator clazzInit MethodInvocation MemberReference selfType MemberReference cw createClassInitializer StatementExpression MethodInvocation MemberReference superClass MemberReference selfType MemberReference cw generateConstructors StatementExpression MethodInvocation MemberReference selfType MemberReference cw generateGetProxyClass StatementExpression MethodInvocation MemberReference selfType MemberReference cw generateGetInvocationHandler StatementExpression MethodInvocation MemberReference superClass MemberReference methods MemberReference selfType MemberReference cw MemberReference clazzInit generateProxyMethods StatementExpression MethodInvocation clazzInit returnValue StatementExpression MethodInvocation clazzInit endMethod StatementExpression MethodInvocation cw visitEnd LocalVariableDeclaration BasicType byte VariableDeclarator data MethodInvocation cw toByteArray LocalVariableDeclaration ReferenceType Class VariableDeclarator clazz MethodInvocation MemberReference loader MethodInvocation selfType getClassName MemberReference data invokeDefineClass TryStatement LocalVariableDeclaration ReferenceType Field VariableDeclarator proxy_class MethodInvocation clazz MemberReference getDeclaredField StatementExpression MethodInvocation proxy_class Literal true setAccessible ReturnStatement Cast ReferenceType JavaProxyClass MethodInvocation proxy_class MemberReference clazz get CatchClause CatchClauseParameter Exception ex LocalVariableDeclaration ReferenceType InternalError VariableDeclarator ie ClassCreator ReferenceType InternalError StatementExpression MethodInvocation ie MemberReference ex initCause ThrowStatement MemberReference ie	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ElementValuePair frame Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject superObject FormalParameter ReferenceType Block block StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference superObject checkInheritable ReturnStatement MethodInvocation Cast ReferenceType RubyClass MemberReference superObject MemberReference block Literal true initializeCommon	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_s" ElementValuePair optional Literal 1 ReferenceType IRubyObject to_s FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType String VariableDeclarator arg MethodInvocation MemberReference args firstArgument IfStatement MethodInvocation isNaN BlockStatement ReturnStatement MethodInvocation MethodInvocation Literal "NaN" newString getRuntime IfStatement BinaryOperation != MemberReference infinitySign Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference infinitySign Literal - 1 BlockStatement ReturnStatement MethodInvocation MethodInvocation Literal "-Infinity" newString getRuntime BlockStatement ReturnStatement MethodInvocation MethodInvocation Literal "Infinity" newString getRuntime IfStatement MethodInvocation isZero BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator zero Literal IfStatement BinaryOperation < MemberReference zeroSign Literal 0 BlockStatement StatementExpression Assignment MemberReference zero BinaryOperation + Literal "-" MemberReference zero = ReturnStatement MethodInvocation MethodInvocation MemberReference zero newString getRuntime IfStatement MethodInvocation MemberReference arg asEngineering BlockStatement ReturnStatement MethodInvocation MemberReference arg engineeringValue BlockStatement ReturnStatement MethodInvocation MemberReference arg floatingPointValue	1
MethodDeclaration Modifier public static ReferenceType IRubyObject createRubyHybridBacktrace FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyStackTraceElement backtraceFrames FormalParameter ReferenceType RubyStackTraceElement stackTrace FormalParameter BasicType boolean debug LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator traceArray MethodInvocation RubyArray MemberReference runtime newArray LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation runtime getCurrentContext LocalVariableDeclaration BasicType int VariableDeclarator rubyFrameIndex BinaryOperation - MemberReference backtraceFrames length Literal 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference stackTrace length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType RubyStackTraceElement VariableDeclarator element MemberReference ArraySelector MemberReference i stackTrace LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation element MethodInvocation Literal "$RUBY$" indexOf getMethodName IfStatement BinaryOperation >= MemberReference index Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator unmangledMethod MethodInvocation element MethodInvocation BinaryOperation + MemberReference index Literal 6 substring getMethodName LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation RubyString MemberReference runtime BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation element getFileName Literal ":" MethodInvocation element getLineNumber Literal ":in `" MemberReference unmangledMethod Literal "'" newString StatementExpression MethodInvocation traceArray MemberReference str append IfStatement BinaryOperation || MethodInvocation element MethodInvocation Literal "__rescue__" contains getMethodName MethodInvocation element MethodInvocation Literal "__ensure__" contains getMethodName BlockStatement StatementExpression MemberReference -- rubyFrameIndex ContinueStatement IfStatement MethodInvocation element MethodInvocation Literal equals getMethodName BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation RubyString MemberReference runtime BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation element getFileName Literal ":" MethodInvocation element getLineNumber Literal ": `<toplevel>'" newString StatementExpression MethodInvocation traceArray MemberReference str append StatementExpression MemberReference -- rubyFrameIndex ContinueStatement StatementExpression Assignment MemberReference index MethodInvocation element MethodInvocation Literal "$RUBYINVOKER$" indexOf getClassName = IfStatement BinaryOperation >= MemberReference index Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator unmangledMethod MethodInvocation element MethodInvocation BinaryOperation + MemberReference index Literal 13 substring getClassName LocalVariableDeclaration ReferenceType Frame VariableDeclarator current MemberReference context ArraySelector MemberReference rubyFrameIndex frameStack LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation RubyString MemberReference runtime BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation current getFile Literal ":" BinaryOperation + MethodInvocation current getLine Literal 1 Literal ":in `" MemberReference unmangledMethod Literal "'" newString StatementExpression MethodInvocation traceArray MemberReference str append ContinueStatement StatementExpression Assignment MemberReference index MethodInvocation element MethodInvocation Literal "$RUBYFRAMEDINVOKER$" indexOf getClassName = IfStatement BinaryOperation >= MemberReference index Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference traceArray MemberReference ArraySelector MemberReference rubyFrameIndex backtraceFrames MemberReference ArraySelector BinaryOperation - MemberReference rubyFrameIndex Literal 1 backtraceFrames MemberReference FrameType METHOD addBackTraceElement StatementExpression MemberReference -- rubyFrameIndex ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classMethod BinaryOperation + BinaryOperation + MethodInvocation element getClassName Literal "." MethodInvocation element getMethodName LocalVariableDeclaration ReferenceType FrameType VariableDeclarator frameType MethodInvocation INTERPRETED_FRAMES MemberReference classMethod get IfStatement BinaryOperation != MemberReference frameType Literal null BlockStatement IfStatement BinaryOperation == MemberReference rubyFrameIndex Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference traceArray MemberReference ArraySelector MemberReference rubyFrameIndex backtraceFrames MemberReference ArraySelector MemberReference rubyFrameIndex backtraceFrames MemberReference frameType addBackTraceElement BlockStatement StatementExpression MethodInvocation MemberReference traceArray MemberReference ArraySelector MemberReference rubyFrameIndex backtraceFrames MemberReference ArraySelector BinaryOperation - MemberReference rubyFrameIndex Literal 1 backtraceFrames MemberReference frameType addBackTraceElement StatementExpression MemberReference -- rubyFrameIndex ContinueStatement BlockStatement IfStatement MemberReference debug BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation RubyString MemberReference runtime MethodInvocation MethodInvocation element getElement createRubyBacktraceString newString StatementExpression MethodInvocation traceArray MemberReference str append ContinueStatement ReturnStatement MemberReference traceArray	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyFixnum rewind FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType OpenFile VariableDeclarator myOpenfile MethodInvocation getOpenFileChecked TryStatement StatementExpression MethodInvocation myOpenfile MethodInvocation Literal 0L MemberReference Stream SEEK_SET lseek getMainStream StatementExpression MethodInvocation myOpenfile MethodInvocation clearerr getMainStream CatchClause CatchClauseParameter BadDescriptorException e ThrowStatement MethodInvocation context MethodInvocation newErrnoEBADFError getRuntime CatchClause CatchClauseParameter InvalidValueException e ThrowStatement MethodInvocation context MethodInvocation newErrnoEINVALError getRuntime CatchClause CatchClauseParameter PipeException e ThrowStatement MethodInvocation context MethodInvocation newErrnoESPIPEError getRuntime CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation context MethodInvocation MethodInvocation e getMessage newIOError getRuntime StatementExpression MethodInvocation myOpenfile Literal 0 setLineNumber ReturnStatement MethodInvocation RubyFixnum MethodInvocation context getRuntime zero	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "choice" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context IfStatement BinaryOperation == MemberReference realLength Literal 0 BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "undefined method for Literal null MethodInvocation context MethodInvocation getNil getRuntime newNoMethodError getRuntime ReturnStatement MethodInvocation MemberReference context choiceCommon	0
MethodDeclaration Modifier public cachedSetVariable FormalParameter ReferenceType method FormalParameter ReferenceType String name FormalParameter ReferenceType CompilerCallback valueCallback StatementExpression MethodInvocation method loadThis StatementExpression MethodInvocation method LocalVariableDeclaration BasicType int VariableDeclarator index MemberReference ++ inheritedVariableWriterCount IfStatement BinaryOperation < MemberReference index MemberReference AbstractScript NUMBERED_VARIABLEWRITER_COUNT BlockStatement StatementExpression MethodInvocation method.method MemberReference name ldc StatementExpression MethodInvocation method loadSelf StatementExpression MethodInvocation valueCallback MemberReference method call StatementExpression MethodInvocation method.method MethodInvocation scriptCompiler getClassname BinaryOperation + Literal "setVariable" MemberReference index MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Ruby ClassReference ReferenceType String ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokevirtual BlockStatement StatementExpression MethodInvocation method.method MemberReference index pushInt StatementExpression MethodInvocation method.method MemberReference name ldc StatementExpression MethodInvocation method loadSelf StatementExpression MethodInvocation valueCallback MemberReference method call StatementExpression MethodInvocation method.method MethodInvocation scriptCompiler getClassname Literal "setVariable" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Ruby ClassReference BasicType int ClassReference ReferenceType String ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokevirtual	0
MethodDeclaration Modifier public synchronized Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject run ReturnStatement MethodInvocation wakeup	0
MethodDeclaration Modifier public Annotation Override BasicType int getNativeTypeIndex ReturnStatement MemberReference ClassIndex ARRAY	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_s" ReferenceType IRubyObject to_s FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration BasicType boolean VariableDeclarator impos MethodInvocation MemberReference context MemberReference image tpositive_p LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation convertToString MemberReference context MemberReference real f_to_s StatementExpression MethodInvocation str TernaryExpression MemberReference impos Cast BasicType byte Literal '+' Cast BasicType byte Literal '-' cat StatementExpression MethodInvocation str MethodInvocation MethodInvocation convertToString MethodInvocation getByteList MemberReference context MethodInvocation MemberReference context MemberReference image f_abs f_to_s cat IfStatement MethodInvocation ! MemberReference str lastCharDigit StatementExpression MethodInvocation str Cast BasicType byte Literal '*' cat StatementExpression MethodInvocation str Cast BasicType byte Literal 'i' cat ReturnStatement MemberReference str	1
MethodDeclaration Modifier public ReferenceType IRubyObject convert FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object IfStatement BinaryOperation == MemberReference object Literal null ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation RubyBoolean MemberReference runtime Cast ReferenceType Boolean MemberReference object newBoolean	1
MethodDeclaration Modifier private ReferenceType IRubyObject getByName FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator member Cast ReferenceType RubyArray MethodInvocation MethodInvocation classOf Literal "__member__" getInternalVariable AssertStatement MethodInvocation ! member isNil Literal "uninitialized struct" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator k MethodInvocation member getLength BinaryOperation < MemberReference i MemberReference k MemberReference ++ i BlockStatement IfStatement MethodInvocation member MethodInvocation asJavaString MethodInvocation MemberReference name equals MemberReference i eltInternal BlockStatement ReturnStatement MemberReference ArraySelector MemberReference i values ThrowStatement MethodInvocation MemberReference name	0
MethodDeclaration Modifier protected BasicType boolean asBoolean FormalParameter ReferenceType IRubyObject val IfStatement BinaryOperation instanceof MemberReference val ReferenceType RubyString BlockStatement ReturnStatement BinaryOperation != MethodInvocation MemberReference val Literal 0 IfStatement BinaryOperation instanceof MemberReference val ReferenceType RubyNumeric BlockStatement ReturnStatement BinaryOperation != MethodInvocation RubyNumeric MemberReference val fix2int Literal 0 BlockStatement ReturnStatement MethodInvocation val isTrue	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_a" ElementValuePair visibility MemberReference Visibility PUBLIC ReferenceType RubyArray to_a StatementExpression MethodInvocation MethodInvocation getWarnings MethodInvocation MemberReference ID DEPRECATED_METHOD Literal "default 'to_a' will be obsolete" Literal "to_a" warn getRuntime ReturnStatement MethodInvocation MethodInvocation This newArray getRuntime	1
MethodDeclaration Modifier private setVisibility FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Visibility visibility IfStatement BinaryOperation && BinaryOperation >= MethodInvocation context MethodInvocation getSafeLevel getRuntime Literal 4 MethodInvocation ! isTaint BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "Insecure: can't change method visibility" newSecurityError getRuntime IfStatement BinaryOperation == MemberReference args length Literal 0 BlockStatement StatementExpression MethodInvocation context MemberReference visibility BlockStatement StatementExpression MethodInvocation MemberReference args MemberReference visibility setMethodVisibility	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation result MethodInvocation MemberReference runtime MemberReference largs checkArgs append ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public static BasicType int getInt FormalParameter ReferenceType String property ReturnStatement MethodInvocation MemberReference property Literal 0 getInt	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject each18 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block each_line MethodInvocation MethodInvocation context getRuntime This Literal enumeratorize	0
MethodDeclaration Modifier public ReferenceType Object unwrap ReturnStatement MethodInvocation getObject	0
MethodDeclaration Modifier private final static ReferenceType SignalFacade getSignalFacade TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator realFacadeClass MethodInvocation Class Literal "org.jruby.util.SunSignalFacade" forName ReturnStatement Cast ReferenceType SignalFacade MethodInvocation realFacadeClass newInstance CatchClause CatchClauseParameter Throwable e ReturnStatement ClassCreator ReferenceType NoFunctionalitySignalFacade	1
MethodDeclaration Modifier protected prepareRestArg FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType DynamicScope scope FormalParameter ReferenceType IRubyObject args FormalParameter BasicType int givenArgsCount IfStatement BinaryOperation >= MemberReference restArg Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator sizeOfRestArg BinaryOperation - BinaryOperation - MemberReference args length MemberReference postCount MemberReference givenArgsCount IfStatement BinaryOperation <= MemberReference sizeOfRestArg Literal 0 BlockStatement StatementExpression MethodInvocation scope MemberReference restArg MethodInvocation RubyArray MemberReference runtime newArray Literal 0 setValue BlockStatement StatementExpression MethodInvocation scope MemberReference restArg MethodInvocation RubyArray MemberReference runtime MemberReference args MemberReference givenArgsCount MemberReference sizeOfRestArg newArrayNoCopy Literal 0 setValue	0
MethodDeclaration Modifier private pumpInput FormalParameter ReferenceType Process child FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType InputStream VariableDeclarator childIn MethodInvocation MethodInvocation child getInputStream unwrapBufferedStream LocalVariableDeclaration ReferenceType FileChannel VariableDeclarator childInChannel Literal null IfStatement BinaryOperation instanceof MemberReference childIn ReferenceType FileInputStream BlockStatement StatementExpression Assignment MemberReference childInChannel Cast ReferenceType FileInputStream MemberReference childIn = LocalVariableDeclaration ReferenceType OutputStream VariableDeclarator parentOut MethodInvocation MethodInvocation runtime getOut unwrapBufferedStream LocalVariableDeclaration ReferenceType FileChannel VariableDeclarator parentOutChannel Literal null IfStatement BinaryOperation instanceof MemberReference parentOut ReferenceType FileOutputStream BlockStatement StatementExpression Assignment MemberReference parentOutChannel Cast ReferenceType FileOutputStream MemberReference parentOut = IfStatement BinaryOperation && BinaryOperation != MemberReference childInChannel Literal null BinaryOperation != MemberReference parentOutChannel Literal null BlockStatement StatementExpression Assignment MemberReference inputPumper ClassCreator ReferenceType ChannelPumper MemberReference childInChannel MemberReference parentOutChannel MemberReference Pumper.Slave IN This = BlockStatement StatementExpression Assignment MemberReference inputPumper ClassCreator ReferenceType StreamPumper MemberReference childIn MemberReference parentOut Literal false MemberReference Pumper.Slave IN This = StatementExpression MethodInvocation inputPumper start StatementExpression Assignment MemberReference input Literal null = StatementExpression Assignment MemberReference inputChannel Literal null =	1
MethodDeclaration Modifier public ReferenceType Object case381_line1439 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals ClassCreator ReferenceType Token Literal "call" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null new_call = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "respond_to?" ReferenceType RubyBoolean respond_to_p FormalParameter ReferenceType IRubyObject mname FormalParameter ReferenceType IRubyObject includePrivate LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation mname asJavaString ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference name MethodInvocation ! includePrivate isTrue isMethodBound getMetaClass newBoolean getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "first" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject first FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final BasicType int VariableDeclarator num MethodInvocation RubyNumeric MemberReference arg num2int LocalVariableDeclaration Modifier final ReferenceType RubyArray VariableDeclarator result MethodInvocation runtime MemberReference num newArray TryStatement StatementExpression MethodInvocation RubyEnumerable MemberReference runtime MemberReference context This ClassCreator ReferenceType BlockCallback FieldDeclaration BasicType int VariableDeclarator n MemberReference num MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk IfStatement BinaryOperation <= MemberReference -- n Literal 0 ThrowStatement MemberReference JumpException SPECIAL_JUMP StatementExpression MethodInvocation result MemberReference ArraySelector Literal 0 largs append ReturnStatement MethodInvocation runtime getNil callEach CatchClause CatchClauseParameter JumpException.SpecialJump sj ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "-@" ReferenceType IRubyObject op_uminus ReturnStatement MethodInvocation MethodInvocation getRuntime MethodInvocation value negate bignorm	1
MethodDeclaration Modifier public ReferenceType Object remove FormalParameter ReferenceType String name IfStatement MemberReference USE_PACKED_ARRAY BlockStatement IfStatement BinaryOperation != MemberReference packedVTable Literal null ReturnStatement MethodInvocation MemberReference name packedRemove IfStatement MemberReference USE_PACKED_FIELDS BlockStatement IfStatement BinaryOperation != MemberReference packedVFields Literal null ReturnStatement MethodInvocation packedVFields MemberReference name remove ReturnStatement MethodInvocation MemberReference name hashRemove	1
MethodDeclaration * public Operand buildPostExe(Node node, IR_Scope m) * final PostExeNode postExeNode = (PostExeNode) * // create the closure class and instantiate * final CompilerCallback closureBody = new * public void call(IR_Scope m) * if (postExeNode.getBodyNode() != null) * build(postExeNode.getBodyNode(), m, * } else * * * * * * * public Operand buildPreExe(Node node, IR_Scope m) * final PreExeNode preExeNode = (PreExeNode) * // create the closure class and instantiate * final CompilerCallback closureBody = new * public void call(IR_Scope m) * if (preExeNode.getBodyNode() != null) * build(preExeNode.getBodyNode(), * } else * * * * * m.runBeginBlock(preExeNode.getScope(), * */ Modifier public ReferenceType Operand buildRedo FormalParameter ReferenceType Node node FormalParameter ReferenceType IR_Scope s StatementExpression MethodInvocation s ClassCreator ReferenceType JUMP_Instr TernaryExpression BinaryOperation instanceof MemberReference s ReferenceType IR_Closure Cast ReferenceType IR_Closure MemberReference s MethodInvocation s MemberReference _iterStartLabel getCurrentLoop addInstr ReturnStatement MemberReference Nil NIL	1
MethodDeclaration Modifier public ReferenceType String getJRubyHome ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation getJRubyHome get	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType TimeOutputFormatter VariableDeclarator formatter MethodInvocation TimeOutputFormatter Literal getFormatter StatementExpression MethodInvocation Literal " up" MethodInvocation formatter Literal "up" format assertEquals	0
MethodDeclaration Modifier public quit StatementExpression MethodInvocation StatementExpression Assignment This MemberReference quit Literal true =	0
MethodDeclaration Modifier static ReferenceType IRubyObject newRationalCanonicalize FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation MemberReference context MemberReference x MethodInvocation RubyFixnum MethodInvocation context getRuntime one newRationalCanonicalize	0
MethodDeclaration Modifier public ReferenceType IRubyObject getValues ReturnStatement MemberReference variableValues	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Integer i ReturnStatement MethodInvocation String MemberReference i valueOf	0
MethodDeclaration Modifier public compileClassVarDecl FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType ClassVarDeclNode VariableDeclarator classVarDeclNode Cast ReferenceType ClassVarDeclNode MemberReference node LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator value ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation classVarDeclNode getValueNode MemberReference context Literal true compile StatementExpression MethodInvocation context MethodInvocation classVarDeclNode getName MemberReference value declareClassVariable IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "put_array_of_uint16" Literal "put_array_of_ushort" ElementValuePair required Literal 2 ReferenceType IRubyObject put_array_of_uint16 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset FormalParameter ReferenceType IRubyObject arrParam StatementExpression MethodInvocation MemoryUtil MethodInvocation context getRuntime MethodInvocation getMemoryIO MethodInvocation MemberReference offset getOffset MethodInvocation MemberReference arrParam checkArray putArrayOfUnsigned16 ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType double i FormalParameter ReferenceType Object o FormalParameter ReferenceType Object o2 FormalParameter ReferenceType Object o3 ReturnStatement Literal "double,object,object,object"	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<=" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject op_le FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum ReturnStatement MethodInvocation RubyBoolean MethodInvocation context getRuntime BinaryOperation <= MemberReference value Cast ReferenceType RubyFixnum MemberReference other newBoolean ReturnStatement MethodInvocation MemberReference context Literal "<=" MemberReference other coerceRelOp	1
MethodDeclaration Modifier public Annotation Override ReferenceType RubyFixnum hash ReturnStatement MethodInvocation MethodInvocation hashCode newFixnum	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "==" ElementValuePair required Literal 1 Annotation Override ReferenceType IRubyObject op_equal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement MethodInvocation Double MemberReference value isNaN BlockStatement ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime SwitchStatement MethodInvocation other MemberReference index getMetaClass SwitchStatementCase MemberReference ClassIndex FIXNUM MemberReference ClassIndex BIGNUM MemberReference ClassIndex FLOAT ReturnStatement MethodInvocation RubyBoolean MethodInvocation getRuntime BinaryOperation == MemberReference value Cast ReferenceType RubyNumeric MemberReference other newBoolean SwitchStatementCase ReturnStatement SuperMethodInvocation MemberReference context MemberReference other op_num_equal	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtime MethodInvocation runtime MethodInvocation getPosix newFixnum	0
MethodDeclaration Modifier public ReferenceType RaiseException newSystemCallError FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation getSystemCallError MemberReference message newRaiseException	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation iVisited getReceiverNode MemberReference context Literal true compile StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context metaclass StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context MethodInvocation iVisited getName StatementExpression MethodInvocation context duplicateCurrentValue LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator isfalse MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator isreal MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator ending MethodInvocation context getNewEnding StatementExpression MethodInvocation context MemberReference isfalse Literal 3 isPrivate StatementExpression MethodInvocation context MemberReference isreal Literal 1 StatementExpression MethodInvocation context MemberReference isreal StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context MemberReference isfalse go StatementExpression MethodInvocation context MemberReference isreal setEnding StatementExpression MethodInvocation context MethodInvocation iVisited getName ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation iVisited getArgsNode MemberReference context Literal "assignment" compileGetArgumentDefinition ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context MemberReference isfalse go isMethodBound StatementExpression MethodInvocation context MemberReference ending go StatementExpression MethodInvocation context MemberReference isfalse setEnding StatementExpression MethodInvocation context pushNull StatementExpression MethodInvocation context MemberReference ending setEnding	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "owner" ReferenceType IRubyObject owner FormalParameter ReferenceType ThreadContext context ReturnStatement MemberReference implementationModule	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType RubyClass sig invokeRuby	0
MethodDeclaration Modifier public static ReferenceType IRubyObject aValueSplat FormalParameter ReferenceType IRubyObject value IfStatement BinaryOperation || BinaryOperation instanceof MemberReference value ReferenceType RubyArray BinaryOperation == Cast ReferenceType RubyArray MemberReference value Literal 0 BlockStatement ReturnStatement MethodInvocation value MethodInvocation getNil getRuntime LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator array Cast ReferenceType RubyArray MemberReference value ReturnStatement TernaryExpression BinaryOperation == MethodInvocation array getLength Literal 1 MethodInvocation array first MemberReference array	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject clear FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation MethodInvocation Literal 0 MemberReference size Cast BasicType byte Literal 0 getMemoryIO ReturnStatement This	0
MethodDeclaration Modifier protected aset FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyHash hash FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation hash MemberReference runtime MemberReference key MemberReference value fastASetCheckString	0
MethodDeclaration Modifier public static ReferenceType IRubyObject evalSimple FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject src FormalParameter ReferenceType String file FormalParameter BasicType int lineNumber LocalVariableDeclaration ReferenceType RubyString VariableDeclarator source MethodInvocation src convertToString ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference source MemberReference file MemberReference lineNumber evalSimple	1
MethodDeclaration Modifier public ReferenceType RubyRegexp getPattern ReturnStatement MemberReference pattern	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "insert" ElementValuePair required Literal 1 ElementValuePair rest Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject args StatementExpression MethodInvocation modifyCheck ReturnStatement MethodInvocation MemberReference args insert	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject sub FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation context getRuntime strDup StatementExpression MethodInvocation str MemberReference context MemberReference args MemberReference block sub_bang ReturnStatement MemberReference str	1
MethodDeclaration Modifier public static ReferenceType RubyRegexp newRegexp FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList pattern ReturnStatement ClassCreator ReferenceType RubyRegexp MemberReference runtime MemberReference pattern	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "any?" ElementValuePair frame Literal true ReferenceType IRubyObject any_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType ThreadContext VariableDeclarator localContext MemberReference context TryStatement IfStatement MethodInvocation block isGiven BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "any?" checkContext LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation block MethodInvocation isTrue MemberReference ctx MemberReference larg yield BlockStatement ThrowStatement MemberReference JumpException SPECIAL_JUMP ReturnStatement MethodInvocation runtime getNil callEach BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "any?" checkContext LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation larg isTrue BlockStatement ThrowStatement MemberReference JumpException SPECIAL_JUMP ReturnStatement MethodInvocation runtime getNil callEach CatchClause CatchClauseParameter JumpException.SpecialJump sj ReturnStatement MethodInvocation runtime getTrue ReturnStatement MethodInvocation runtime getFalse	1
MethodDeclaration Modifier public lload FormalParameter BasicType int arg0 StatementExpression MethodInvocation MethodInvocation MemberReference LLOAD MemberReference arg0 visitVarInsn getMethodVisitor	0
MethodDeclaration Modifier private fixnumNode FormalParameter ReferenceType FixnumNode node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node getValue append Literal " " append	0
MethodDeclaration Modifier public ReferenceType Object case438_line1638 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType RestArgNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Literal null Literal null Cast ReferenceType RestArgNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject getValueOrNil FormalParameter BasicType int offset FormalParameter BasicType int depth FormalParameter ReferenceType IRubyObject nil IfStatement BinaryOperation > MemberReference depth Literal 0 BlockStatement ReturnStatement MethodInvocation parent MemberReference offset BinaryOperation - MemberReference depth Literal 1 MemberReference nil getValueOrNil BlockStatement ReturnStatement MethodInvocation MemberReference offset MemberReference nil getValueDepthZeroOrNil	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + Literal "\t" TernaryExpression MethodInvocation isDead Literal "[DEAD]" Literal "" TernaryExpression BinaryOperation == MemberReference Literal null Literal "" BinaryOperation + MemberReference Literal " = " MemberReference _op	0
MethodDeclaration Modifier private Annotation Deprecated ReferenceType ClassWriter createBlockCtor FormalParameter ReferenceType String namePath FormalParameter ReferenceType Class fieldClass Exception LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw ClassCreator ReferenceType ClassWriter BinaryOperation | MemberReference ClassWriter COMPUTE_MAXS MemberReference ClassWriter COMPUTE_FRAMES StatementExpression MethodInvocation cw MemberReference RubyInstanceConfig JAVA_VERSION BinaryOperation + MemberReference ACC_PUBLIC MemberReference ACC_SUPER MemberReference namePath Literal null MethodInvocation ClassReference ReferenceType CompiledBlockCallback p Literal null visit StatementExpression MethodInvocation cw BinaryOperation | MemberReference ACC_PRIVATE MemberReference ACC_FINAL Literal "$scriptObject" MethodInvocation MemberReference fieldClass ci Literal null Literal null visitField LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator mv ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cw MemberReference ACC_PUBLIC Literal "<init>" MethodInvocation MemberReference Void TYPE MethodInvocation ClassReference ReferenceType Object params sig Literal null Literal null visitMethod StatementExpression MethodInvocation mv start StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType CompiledBlockCallback p Literal "<init>" MethodInvocation VoidClassReference sig invokespecial StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv Literal 1 aload StatementExpression MethodInvocation mv MethodInvocation MemberReference fieldClass p checkcast StatementExpression MethodInvocation mv MemberReference namePath Literal "$scriptObject" MethodInvocation MemberReference fieldClass ci putfield StatementExpression MethodInvocation mv voidreturn StatementExpression MethodInvocation mv end ReturnStatement MemberReference cw	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType JavaClass component_type IfStatement MethodInvocation ! MethodInvocation isArray javaClass BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "not a java array-class" newTypeError getRuntime ReturnStatement MethodInvocation JavaClass MethodInvocation getRuntime MethodInvocation MethodInvocation getComponentType javaClass get	1
MethodDeclaration Modifier public final BasicType byte getZeroTerminatedByteArray FormalParameter BasicType long offset StatementExpression MethodInvocation MemberReference offset Literal 1 checkBounds ReturnStatement MethodInvocation FFIUtil BinaryOperation + MemberReference address MemberReference offset getZeroTerminatedByteArray	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "==" ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject op_equal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference other MethodInvocation context MethodInvocation getNil getRuntime callCmpMethod	1
MethodDeclaration Modifier private ensureRead IOException BadDescriptorException IfStatement MemberReference reading ReturnStatement StatementExpression MethodInvocation flushWrite StatementExpression MethodInvocation buffer clear StatementExpression MethodInvocation buffer flip StatementExpression Assignment MemberReference reading Literal true =	1
MethodDeclaration Modifier public ReferenceType Block LocalVariableDeclaration ReferenceType Block VariableDeclarator newBlock MethodInvocation body MemberReference binding StatementExpression Assignment MemberReference newBlock type MemberReference type = StatementExpression Assignment MemberReference newBlock escaped MemberReference escaped = ReturnStatement MemberReference newBlock	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String staticScopeNames FormalParameter ReferenceType CompiledBlockCallback callback LocalVariableDeclaration ReferenceType VariableDeclarator staticScope ClassCreator ReferenceType BlockStaticScope MethodInvocation context MethodInvocation getStaticScope getCurrentScope MemberReference staticScopeNames StatementExpression MethodInvocation staticScope determineModule StatementExpression MethodInvocation context MethodInvocation DynamicScope MemberReference staticScope MethodInvocation context getCurrentScope LocalVariableDeclaration ReferenceType Block VariableDeclarator block MethodInvocation CompiledBlock MemberReference context MemberReference self MethodInvocation Arity Literal 0 createArity MemberReference staticScope MemberReference callback Literal false MemberReference ZERO_ARGS newCompiledClosure TryStatement StatementExpression MethodInvocation block MemberReference context Literal null yield StatementExpression MethodInvocation context ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public BasicType int waitFor InterruptedException StatementExpression MethodInvocation processThread join ReturnStatement MemberReference result	0
MethodDeclaration Modifier private static fixnumStep FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter BasicType long value FormalParameter BasicType long end FormalParameter BasicType long diff FormalParameter ReferenceType Block block IfStatement BinaryOperation == MemberReference diff Literal 0 ThrowStatement MethodInvocation runtime Literal "step cannot be 0" newArgumentError IfStatement BinaryOperation > MemberReference diff Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType long VariableDeclarator i MemberReference value BinaryOperation <= MemberReference i MemberReference end Assignment MemberReference i MemberReference diff += BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation RubyFixnum MemberReference runtime MemberReference i newFixnum yield BlockStatement ForStatement ForControl VariableDeclaration BasicType long VariableDeclarator i MemberReference value BinaryOperation >= MemberReference i MemberReference end Assignment MemberReference i MemberReference diff += BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation RubyFixnum MemberReference runtime MemberReference i newFixnum yield	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "getbyte" ReferenceType IRubyObject getbyte FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation runtime isVerbose BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID DEPRECATED_METHOD Literal is obsolete; use instead" Literal Literal "#get_byte" warning getWarnings ReturnStatement MethodInvocation MemberReference context get_byte	0
MethodDeclaration Modifier private static ReferenceType Block getIterNodeBlock FormalParameter ReferenceType Node blockNode FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self LocalVariableDeclaration ReferenceType IterNode VariableDeclarator Cast ReferenceType IterNode MemberReference blockNode LocalVariableDeclaration ReferenceType VariableDeclarator scope MethodInvocation getScope StatementExpression MethodInvocation scope determineModule ReturnStatement MethodInvocation InterpretedBlock MemberReference context MethodInvocation getBlockBody MemberReference self newInterpretedClosure	1
MethodDeclaration Modifier private ReferenceType IRubyObject scan FormalParameter ReferenceType IRubyObject regex FormalParameter BasicType boolean succptr FormalParameter BasicType boolean getstr FormalParameter BasicType boolean headonly IfStatement BinaryOperation instanceof MemberReference regex ReferenceType RubyRegexp ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "wrong argument type " MethodInvocation regex getMetaClass Literal " (expected Regexp)" newTypeError getRuntime StatementExpression MethodInvocation check LocalVariableDeclaration ReferenceType Regex VariableDeclarator pattern Cast ReferenceType RubyRegexp MemberReference regex StatementExpression MethodInvocation clearMatched LocalVariableDeclaration BasicType int VariableDeclarator rest BinaryOperation - MethodInvocation str MemberReference realSize getByteList MemberReference pos IfStatement BinaryOperation < MemberReference rest Literal 0 ReturnStatement MethodInvocation MethodInvocation getNil getRuntime LocalVariableDeclaration ReferenceType ByteList VariableDeclarator value MethodInvocation str getByteList LocalVariableDeclaration ReferenceType Matcher VariableDeclarator matcher MethodInvocation pattern MemberReference value bytes BinaryOperation + MemberReference value begin MemberReference pos BinaryOperation + MemberReference value begin MemberReference value realSize matcher LocalVariableDeclaration Modifier final BasicType int VariableDeclarator ret IfStatement MemberReference headonly BlockStatement StatementExpression Assignment MemberReference ret MethodInvocation matcher BinaryOperation + MemberReference value begin MemberReference pos BinaryOperation + MemberReference value begin MemberReference value realSize MemberReference Option NONE match = BlockStatement StatementExpression Assignment MemberReference ret MethodInvocation matcher BinaryOperation + MemberReference value begin MemberReference pos BinaryOperation + MemberReference value begin MemberReference value realSize MemberReference Option NONE search = StatementExpression Assignment MemberReference regs MethodInvocation matcher getRegion = IfStatement BinaryOperation == MemberReference regs Literal null BlockStatement StatementExpression Assignment MemberReference beg MethodInvocation matcher getBegin = StatementExpression Assignment MemberReference end MethodInvocation matcher getEnd = BlockStatement StatementExpression Assignment MemberReference beg MemberReference regs ArraySelector Literal 0 beg = StatementExpression Assignment MemberReference end MemberReference regs ArraySelector Literal 0 end = IfStatement BinaryOperation < MemberReference ret Literal 0 ReturnStatement MethodInvocation MethodInvocation getNil getRuntime StatementExpression MethodInvocation setMatched StatementExpression Assignment MemberReference lastPos MemberReference pos = IfStatement MemberReference succptr StatementExpression Assignment MemberReference pos MemberReference end += ReturnStatement TernaryExpression MemberReference getstr MethodInvocation MethodInvocation getRuntime MemberReference lastPos MemberReference end extractBegLen MethodInvocation RubyFixnum MethodInvocation getRuntime MemberReference end newFixnum	1
MethodDeclaration Modifier public ReferenceType Node arg_concat FormalParameter ReferenceType ISourcePosition position FormalParameter ReferenceType Node node1 FormalParameter ReferenceType Node node2 ReturnStatement TernaryExpression BinaryOperation == MemberReference node2 Literal null MemberReference node1 ClassCreator ReferenceType ArgsCatNode MemberReference position MemberReference node1 MemberReference node2	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType ByteList bytes ReturnStatement MethodInvocation MethodInvocation bytes unsafeBytes MethodInvocation bytes begin MethodInvocation bytes length bytesToString	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "gmt_offset" Literal "gmtoff" Literal "utc_offset" ReferenceType RubyInteger gmt_offset LocalVariableDeclaration BasicType int VariableDeclarator offset MethodInvocation dt MethodInvocation MethodInvocation dt getMillis getOffsetFromLocal getZone ReturnStatement MethodInvocation MethodInvocation Cast BasicType int BinaryOperation / MemberReference offset Literal 1000 newFixnum getRuntime	1
MethodDeclaration Modifier public final BasicType int indexOf FormalParameter BasicType long offset FormalParameter BasicType byte value FormalParameter BasicType int maxlen LocalVariableDeclaration BasicType int VariableDeclarator off MethodInvocation MemberReference offset index ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation Math MemberReference length MemberReference maxlen min MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference off MemberReference i buffer MemberReference value BlockStatement ReturnStatement MemberReference i ReturnStatement Literal - 1	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MethodInvocation MethodInvocation getDeclaringClass	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "closed?" ReferenceType IRubyObject closed_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation ArgsFileData MemberReference recv getDataFrom StatementExpression MethodInvocation data MemberReference context next_argv ReturnStatement MethodInvocation RubyBoolean MethodInvocation context getRuntime MethodInvocation MemberReference context MemberReference data currentFile newBoolean	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klazz ReturnStatement ClassCreator ReferenceType JavaProxy MemberReference runtime MemberReference klazz	0
MethodDeclaration Modifier public Annotation Override ReferenceType InputStream getInputStream ReturnStatement MemberReference input	0
MethodDeclaration Modifier private FormalParameter ReferenceType IRubyObject self LocalVariableDeclaration BasicType int VariableDeclarator index This ++ MemberReference frameIndex LocalVariableDeclaration ReferenceType Frame VariableDeclarator stack MemberReference frameStack StatementExpression MemberReference ArraySelector MemberReference index MethodInvocation MemberReference self MemberReference file MemberReference line updateFrameForEval stack IfStatement BinaryOperation == BinaryOperation + MemberReference index Literal 1 MemberReference stack length BlockStatement StatementExpression MethodInvocation expandFramesIfNecessary	0
MethodDeclaration Modifier public BasicType long microseconds ReturnStatement BinaryOperation + BinaryOperation * BinaryOperation % MethodInvocation getTimeInMillis Literal 1000 Literal 1000 MemberReference usec	0
MethodDeclaration Modifier public final put FormalParameter BasicType long offset FormalParameter BasicType long src FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation MemberReference offset BinaryOperation << MemberReference len Literal 3 checkBounds StatementExpression MethodInvocation IO BinaryOperation + MemberReference address MemberReference offset MemberReference src MemberReference off MemberReference len putLongArray	0
MethodDeclaration Modifier public ReferenceType Stream getWriteStream ReturnStatement TernaryExpression BinaryOperation == MemberReference pipeStream Literal null MemberReference mainStream MemberReference pipeStream	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "put_string" ReferenceType IRubyObject put_string FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offArg FormalParameter ReferenceType IRubyObject strArg LocalVariableDeclaration BasicType long VariableDeclarator off MethodInvocation MemberReference offArg getOffset LocalVariableDeclaration ReferenceType ByteList VariableDeclarator bl MethodInvocation strArg MethodInvocation getByteList convertToString StatementExpression MethodInvocation MethodInvocation MemberReference off MethodInvocation bl unsafeBytes MethodInvocation bl begin MethodInvocation bl length putZeroTerminatedByteArray getMemoryIO ReturnStatement This	1
MethodDeclaration Modifier private BasicType int caret IOException LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation src read IfStatement BinaryOperation == MemberReference c Literal '=' BlockStatement StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "^" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tOP_ASGN StatementExpression MethodInvocation determineExpressionState StatementExpression MethodInvocation src MemberReference c unread StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "^" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tCARET	0
MethodDeclaration Modifier public BasicType boolean isSplit ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation isSplit get	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject set FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation runtime MethodInvocation KCode MemberReference runtime MethodInvocation value MethodInvocation toString convertToString create setKCode ReturnStatement MemberReference value	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "sync=" ElementValuePair required Literal 1 ReferenceType IRubyObject set_sync FormalParameter ReferenceType IRubyObject args ReturnStatement MemberReference args	1
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter ReferenceType CharSequence cs ReturnStatement Literal "CharSequence"	0
MethodDeclaration Modifier public static ReferenceType IRubyObject get_proxy_or_package_under_package FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject parentPackage FormalParameter ReferenceType IRubyObject sym LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime IfStatement BinaryOperation instanceof MemberReference parentPackage ReferenceType RubyModule BlockStatement ThrowStatement MethodInvocation runtime MemberReference parentPackage MethodInvocation runtime getModule newTypeError LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator result IfStatement BinaryOperation != Assignment MemberReference result MethodInvocation MemberReference context MemberReference runtime Cast ReferenceType RubyModule MemberReference parentPackage MethodInvocation sym asJavaString getProxyOrPackageUnderPackage = Literal null BlockStatement ReturnStatement MemberReference result ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public synchronized replaceSubclass FormalParameter ReferenceType RubyClass subclass FormalParameter ReferenceType RubyClass newSubclass SynchronizedStatement MethodInvocation runtime getHierarchyLock LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType RubyClass VariableDeclarator oldSubclasses MemberReference subclasses IfStatement BinaryOperation == MemberReference oldSubclasses Literal null ReturnStatement StatementExpression MethodInvocation oldSubclasses MemberReference subclass remove StatementExpression MethodInvocation oldSubclasses MemberReference newSubclass add	1
MethodDeclaration Modifier public isGlobalDefined FormalParameter ReferenceType String name FormalParameter ReferenceType BranchCallback FormalParameter ReferenceType BranchCallback falseBranch StatementExpression MethodInvocation StatementExpression MethodInvocation Literal "getGlobalVariables" MethodInvocation ClassReference ReferenceType GlobalVariables sig invokeRuby StatementExpression MethodInvocation method MemberReference name ldc StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType GlobalVariables p Literal MethodInvocation ClassReference BasicType boolean MethodInvocation ClassReference ReferenceType String params sig invokevirtual LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator exitLabel ClassCreator ReferenceType Label StatementExpression MethodInvocation method MemberReference ifeq StatementExpression MethodInvocation This branch StatementExpression MethodInvocation method MemberReference exitLabel go_to StatementExpression MethodInvocation method MemberReference label StatementExpression MethodInvocation falseBranch This branch StatementExpression MethodInvocation method MemberReference exitLabel label	0
MethodDeclaration Modifier public ReferenceType Object case499_line1911 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement MethodInvocation ! support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals is_local_id BlockStatement StatementExpression MethodInvocation Literal "duplicate rest argument name" yyerror StatementExpression MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals shadowing_lvar StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType RestArgNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_var = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case296_line1111 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation lexer MethodInvocation begin getConditionState ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private ReferenceType IRubyObject invokeDirectWithExceptionHandling FormalParameter ReferenceType Method method FormalParameter ReferenceType Object javaInvokee FormalParameter ReferenceType Object arg0 FormalParameter ReferenceType Object arg1 FormalParameter ReferenceType Object arg2 FormalParameter ReferenceType Object arg3 TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator result TernaryExpression BinaryOperation != MemberReference handle Literal null MethodInvocation handle MemberReference javaInvokee MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 invoke MethodInvocation method MemberReference javaInvokee MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 invoke ReturnStatement MethodInvocation MemberReference result convertReturn CatchClause CatchClauseParameter IllegalArgumentException iae ReturnStatement MethodInvocation MemberReference method MemberReference iae MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 handlelIllegalArgumentEx CatchClause CatchClauseParameter IllegalAccessException iae ReturnStatement MethodInvocation MemberReference method MemberReference iae handleIllegalAccessEx CatchClause CatchClauseParameter InvocationTargetException ite ReturnStatement MethodInvocation MemberReference ite MemberReference method handleInvocationTargetEx CatchClause CatchClauseParameter Throwable t ReturnStatement MethodInvocation MemberReference t MemberReference method handleThrowable	1
MethodDeclaration Modifier public ReferenceType String getCurrentLine LocalVariableDeclaration BasicType int VariableDeclarator errorLocation BinaryOperation - MethodInvocation lineBuffer length Literal 1 TryStatement StatementExpression MethodInvocation readLineBytes CatchClause CatchClauseParameter IOException e ReturnStatement BinaryOperation + MethodInvocation sourceLine toString MethodInvocation MemberReference errorLocation makePointer	1
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration BasicType double VariableDeclarator currentTime BinaryOperation / MethodInvocation System currentTimeMillis Literal 1000.0 LocalVariableDeclaration BasicType double VariableDeclarator startTime BinaryOperation / MethodInvocation runtime getStartTime Literal 1000.0 LocalVariableDeclaration ReferenceType RubyFloat VariableDeclarator zero MethodInvocation runtime Literal 0.0 newFloat ReturnStatement MethodInvocation RubyStruct MethodInvocation runtime getTmsStruct ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation runtime BinaryOperation - MemberReference currentTime MemberReference startTime newFloat MemberReference zero MemberReference zero MemberReference zero MemberReference Block NULL_BLOCK newStruct	0
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject on_paint FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType JRubyApplet VariableDeclarator applet Cast ReferenceType JRubyApplet MethodInvocation MemberReference recv SynchronizedStatement MemberReference applet StatementExpression Assignment MemberReference applet paintProc MethodInvocation MemberReference applet runtime MemberReference block blockToProc = StatementExpression MethodInvocation applet repaint ReturnStatement MemberReference recv	1
MethodDeclaration Modifier public ReferenceType String getArgv ReturnStatement MethodInvocation Arrays MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation getArgv get	0
MethodDeclaration Modifier public ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator self MethodInvocation MemberReference binding prepareSelf LocalVariableDeclaration ReferenceType Visibility VariableDeclarator oldVis MethodInvocation binding MethodInvocation getVisibility getFrame LocalVariableDeclaration ReferenceType Frame VariableDeclarator lastFrame MethodInvocation MemberReference context Literal null MemberReference binding pre TryStatement StatementExpression MethodInvocation MemberReference context MemberReference value MemberReference self MemberReference Block NULL_BLOCK MemberReference type ReturnStatement MethodInvocation MemberReference context MemberReference self evalBlockBody CatchClause CatchClauseParameter JumpException.NextJump nj ReturnStatement MethodInvocation MemberReference context MemberReference nj MemberReference type handleNextJump StatementExpression MethodInvocation MemberReference context MemberReference binding MemberReference oldVis MemberReference lastFrame post	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "inspect" ReferenceType IRubyObject inspect LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder Literal "#<" StatementExpression MethodInvocation buf MethodInvocation MethodInvocation getRealClass MethodInvocation getName getMetaClass append StatementExpression MethodInvocation buf Literal " " append TryStatement StatementExpression MethodInvocation buf MethodInvocation MethodInvocation Long MethodInvocation stat toHexString append MethodInvocation Literal ", " append Literal "dev=0x" append CatchClause CatchClauseParameter Exception e TryStatement StatementExpression MethodInvocation buf MethodInvocation MethodInvocation stat append MethodInvocation Literal ", " append Literal "ino=" append CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation buf MethodInvocation MethodInvocation Integer MethodInvocation stat mode toOctalString append MethodInvocation Literal ", " append Literal "mode=0" append TryStatement StatementExpression MethodInvocation buf MethodInvocation MethodInvocation stat append MethodInvocation Literal ", " append Literal "nlink=" append CatchClause CatchClauseParameter Exception e TryStatement StatementExpression MethodInvocation buf MethodInvocation MethodInvocation stat uid append MethodInvocation Literal ", " append Literal "uid=" append CatchClause CatchClauseParameter Exception e TryStatement StatementExpression MethodInvocation buf MethodInvocation MethodInvocation stat gid append MethodInvocation Literal ", " append Literal "gid=" append CatchClause CatchClauseParameter Exception e TryStatement StatementExpression MethodInvocation buf MethodInvocation MethodInvocation Long MethodInvocation stat toHexString append MethodInvocation Literal ", " append Literal "rdev=0x" append CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation buf MethodInvocation MethodInvocation sizeInternal append MethodInvocation Literal ", " append Literal "size=" append TryStatement StatementExpression MethodInvocation buf MethodInvocation MethodInvocation stat blockSize append MethodInvocation Literal ", " append Literal "blksize=" append CatchClause CatchClauseParameter Exception e TryStatement StatementExpression MethodInvocation buf MethodInvocation MethodInvocation stat blocks append MethodInvocation Literal ", " append Literal "blocks=" append CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation buf MethodInvocation MethodInvocation atime append MethodInvocation Literal ", " append Literal "atime=" append StatementExpression MethodInvocation buf MethodInvocation MethodInvocation append MethodInvocation Literal ", " append Literal "mtime=" append StatementExpression MethodInvocation buf MethodInvocation MethodInvocation ctime append Literal "ctime=" append StatementExpression MethodInvocation buf Literal ">" append ReturnStatement MethodInvocation MethodInvocation MethodInvocation buf toString newString getRuntime	1
MethodDeclaration Modifier public setValue FormalParameter ReferenceType Object yaccValue StatementExpression Assignment This MemberReference yaccValue MemberReference yaccValue =	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair meta Literal true ReferenceType IRubyObject s_digest FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject str LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType RubyClass MemberReference recv TryStatement LocalVariableDeclaration ReferenceType MessageDigest VariableDeclarator md MethodInvocation MemberReference runtime MemberReference name createMessageDigest ReturnStatement MethodInvocation RubyString MemberReference runtime MethodInvocation md MethodInvocation str MethodInvocation getBytes convertToString digest newStringShared CatchClause CatchClauseParameter NoSuchAlgorithmException e ThrowStatement MethodInvocation recv MethodInvocation BinaryOperation + BinaryOperation + Literal "Unsupported digest algorithm (" MemberReference name Literal ")" newNotImplementedError getRuntime	1
MethodDeclaration Modifier private ReferenceType Object newFixnumNode FormalParameter ReferenceType String value FormalParameter BasicType int radix NumberFormatException ReturnStatement ClassCreator ReferenceType FixnumNode MethodInvocation getPosition MethodInvocation Long MemberReference value MemberReference radix parseLong	1
MethodDeclaration Modifier public static ReferenceType IRubyObject callMethodMissing FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType Visibility visibility FormalParameter ReferenceType String name FormalParameter ReferenceType CallType callType FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MethodInvocation MemberReference context MemberReference receiver MethodInvocation receiver getMetaClass MemberReference name MemberReference args MemberReference block call MemberReference context MemberReference receiver MemberReference visibility MemberReference name MemberReference callType	0
MethodDeclaration Modifier private static addNameClassMappings FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType JavaClass nameClassMap LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator booleanPrimClass MethodInvocation JavaClass MemberReference runtime MemberReference Boolean TYPE get LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator booleanClass MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType Boolean get StatementExpression MethodInvocation nameClassMap Literal "boolean" MemberReference booleanPrimClass put StatementExpression MethodInvocation nameClassMap Literal MemberReference booleanClass put StatementExpression MethodInvocation nameClassMap Literal "java.lang.Boolean" MemberReference booleanClass put LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator bytePrimClass MethodInvocation JavaClass MemberReference runtime MemberReference Byte TYPE get LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator byteClass MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType Byte get StatementExpression MethodInvocation nameClassMap Literal "byte" MemberReference bytePrimClass put StatementExpression MethodInvocation nameClassMap Literal MemberReference byteClass put StatementExpression MethodInvocation nameClassMap Literal "java.lang.Byte" MemberReference byteClass put LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator shortPrimClass MethodInvocation JavaClass MemberReference runtime MemberReference Short TYPE get LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator shortClass MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType Short get StatementExpression MethodInvocation nameClassMap Literal "short" MemberReference shortPrimClass put StatementExpression MethodInvocation nameClassMap Literal "Short" MemberReference shortClass put StatementExpression MethodInvocation nameClassMap Literal "java.lang.Short" MemberReference shortClass put LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator charPrimClass MethodInvocation JavaClass MemberReference runtime MemberReference Character TYPE get LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator charClass MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType Character get StatementExpression MethodInvocation nameClassMap Literal "char" MemberReference charPrimClass put StatementExpression MethodInvocation nameClassMap Literal MemberReference charClass put StatementExpression MethodInvocation nameClassMap Literal "Char" MemberReference charClass put StatementExpression MethodInvocation nameClassMap Literal "java.lang.Character" MemberReference charClass put LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator intPrimClass MethodInvocation JavaClass MemberReference runtime MemberReference Integer TYPE get LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator intClass MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType Integer get StatementExpression MethodInvocation nameClassMap Literal "int" MemberReference intPrimClass put StatementExpression MethodInvocation nameClassMap Literal "Integer" MemberReference intClass put StatementExpression MethodInvocation nameClassMap Literal "Int" MemberReference intClass put StatementExpression MethodInvocation nameClassMap Literal "java.lang.Integer" MemberReference intClass put LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator longPrimClass MethodInvocation JavaClass MemberReference runtime MemberReference Long TYPE get LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator longClass MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType Long get StatementExpression MethodInvocation nameClassMap Literal "long" MemberReference longPrimClass put StatementExpression MethodInvocation nameClassMap Literal "Long" MemberReference longClass put StatementExpression MethodInvocation nameClassMap Literal "java.lang.Long" MemberReference longClass put LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator floatPrimClass MethodInvocation JavaClass MemberReference runtime MemberReference Float TYPE get LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator floatClass MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType Float get StatementExpression MethodInvocation nameClassMap Literal "float" MemberReference floatPrimClass put StatementExpression MethodInvocation nameClassMap Literal "Float" MemberReference floatClass put StatementExpression MethodInvocation nameClassMap Literal "java.lang.Float" MemberReference floatClass put LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator doublePrimClass MethodInvocation JavaClass MemberReference runtime MemberReference Double TYPE get LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator doubleClass MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType Double get StatementExpression MethodInvocation nameClassMap Literal "double" MemberReference doublePrimClass put StatementExpression MethodInvocation nameClassMap Literal "Double" MemberReference doubleClass put StatementExpression MethodInvocation nameClassMap Literal "java.lang.Double" MemberReference doubleClass put LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator bigintClass MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType BigInteger get StatementExpression MethodInvocation nameClassMap Literal MemberReference bigintClass put StatementExpression MethodInvocation nameClassMap Literal "big_integer" MemberReference bigintClass put StatementExpression MethodInvocation nameClassMap Literal "BigInteger" MemberReference bigintClass put StatementExpression MethodInvocation nameClassMap Literal MemberReference bigintClass put LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator bigdecimalClass MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType BigDecimal get StatementExpression MethodInvocation nameClassMap Literal "big_decimal" MemberReference bigdecimalClass put StatementExpression MethodInvocation nameClassMap Literal "BigDecimal" MemberReference bigdecimalClass put StatementExpression MethodInvocation nameClassMap Literal "java.math.BigDecimal" MemberReference bigdecimalClass put LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator objectClass MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType Object get StatementExpression MethodInvocation nameClassMap Literal MemberReference objectClass put StatementExpression MethodInvocation nameClassMap Literal "Object" MemberReference objectClass put StatementExpression MethodInvocation nameClassMap Literal "java.lang.Object" MemberReference objectClass put LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator stringClass MethodInvocation JavaClass MemberReference runtime ClassReference ReferenceType String get StatementExpression MethodInvocation nameClassMap Literal "string" MemberReference stringClass put StatementExpression MethodInvocation nameClassMap Literal "String" MemberReference stringClass put StatementExpression MethodInvocation nameClassMap Literal MemberReference stringClass put	0
MethodDeclaration Modifier public final ReferenceType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String descriptor ReturnStatement MethodInvocation runtimeCache This MemberReference context Literal 6 MemberReference descriptor getBlockBody	0
MethodDeclaration Modifier public setEnding FormalParameter ReferenceType Object endingToken StatementExpression MethodInvocation method Cast ReferenceType Label MemberReference endingToken label	0
MethodDeclaration Modifier private processMethod FormalParameter ReferenceType String methodName FormalParameter ReferenceType Node argsNode FormalParameter ReferenceType Node body StatementExpression MethodInvocation sb MethodInvocation MemberReference methodName append MethodInvocation Literal ' ' append Literal " append StatementExpression MethodInvocation MemberReference argsNode process StatementExpression MethodInvocation sb Literal " " append StatementExpression MethodInvocation MemberReference body process StatementExpression MethodInvocation sb Literal ")" append	0
MethodDeclaration Modifier public createNewSymbol FormalParameter ReferenceType String name StatementExpression MethodInvocation script MethodInvocation This MemberReference name cacheSymbol getCacheCompiler	0
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value1 FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType Block block StatementExpression MethodInvocation pre MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference value1 MemberReference block Literal false assign Literal 0 get StatementExpression MethodInvocation pre MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference value1 MemberReference block Literal false assign Literal 1 get StatementExpression MethodInvocation pre MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference value1 MemberReference block Literal false assign Literal 2 get StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block Literal 3	0
MethodDeclaration Modifier public ReferenceType IRubyObject callIter FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block TryStatement ReturnStatement MethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference arg1 MemberReference arg2 MemberReference block callBlock CatchClause CatchClauseParameter JumpException.BreakJump bj ReturnStatement MethodInvocation MemberReference context MemberReference bj handleBreakJump CatchClause CatchClauseParameter JumpException.RetryJump rj ThrowStatement MethodInvocation MemberReference context retryJumpError StatementExpression MethodInvocation block escape	1
MethodDeclaration Modifier public ReferenceType Arity getArity ReturnStatement MemberReference Arity	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType MemberReference runtime MemberReference klass	0
MethodDeclaration Modifier public static ReferenceType RubyClass createAutoPointerClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule module LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation module MemberReference AUTOPTR_CLASS_NAME MethodInvocation module Literal "Pointer" getClass MemberReference AutoPointerAllocator INSTANCE defineClassUnder StatementExpression MethodInvocation result ClassReference ReferenceType AutoPointer defineAnnotatedMethods StatementExpression MethodInvocation result ClassReference ReferenceType AutoPointer defineAnnotatedConstants ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override BasicType int getNativeTypeIndex ReturnStatement MemberReference ClassIndex FIXNUM	0
MethodDeclaration Modifier protected ReferenceType Frame pre FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyModule klass FormalParameter ReferenceType Binding binding ReturnStatement MethodInvocation context MemberReference binding MemberReference scope MemberReference klass preYieldSpecificBlock	0
MethodDeclaration Modifier public BasicType boolean isShouldCheckSyntax ReturnStatement MemberReference shouldCheckSyntax	0
MethodDeclaration Modifier public BasicType short receiveShort FormalParameter BasicType short s ReturnStatement MethodInvocation vri MemberReference s receiveShort	0
MethodDeclaration Modifier public final BasicType boolean isDirect ReturnStatement Literal false	1
MethodDeclaration Modifier private static BasicType int partition FormalParameter ReferenceType Object a FormalParameter BasicType int lo1 FormalParameter BasicType int hi FormalParameter ReferenceType Object x FormalParameter ReferenceType Comparator c LocalVariableDeclaration BasicType int VariableDeclarator lo MemberReference lo1 LocalVariableDeclaration BasicType int VariableDeclarator i MemberReference lo VariableDeclarator j MemberReference hi VariableDeclarator c1 Literal 0 WhileStatement BinaryOperation && BinaryOperation < MemberReference lo MemberReference hi BinaryOperation == MethodInvocation c MemberReference x MemberReference ArraySelector MemberReference lo a compare Literal 0 StatementExpression MemberReference ++ lo StatementExpression Assignment MemberReference i MemberReference lo = WhileStatement Literal true BlockStatement WhileStatement BinaryOperation && BinaryOperation < MemberReference i MemberReference j BinaryOperation <= Assignment MemberReference c1 MethodInvocation c MemberReference ArraySelector MemberReference i a MemberReference x compare = Literal 0 BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference c1 Literal 0 BinaryOperation != MemberReference i MemberReference lo BlockStatement WhileStatement BinaryOperation == MethodInvocation c MemberReference x MemberReference ArraySelector MemberReference lo a compare Literal 0 StatementExpression MemberReference ++ lo IfStatement BinaryOperation > MemberReference lo MemberReference i StatementExpression Assignment MemberReference i BinaryOperation - MemberReference lo Literal 1 = StatementExpression MethodInvocation MemberReference a MemberReference ++ lo MemberReference i swap StatementExpression MemberReference ++ i StatementExpression MemberReference -- j WhileStatement BinaryOperation && BinaryOperation >= MemberReference j MemberReference i BinaryOperation < Assignment MemberReference c1 MethodInvocation c MemberReference x MemberReference ArraySelector MemberReference j a compare = Literal 0 BlockStatement StatementExpression MemberReference -- j IfStatement BinaryOperation > MemberReference i MemberReference j BlockStatement BreakStatement IfStatement BinaryOperation == MemberReference c1 Literal 0 BlockStatement WhileStatement BinaryOperation == MethodInvocation c MemberReference x MemberReference ArraySelector MemberReference lo a compare Literal 0 StatementExpression MemberReference ++ lo StatementExpression MethodInvocation MemberReference a MemberReference i MemberReference j swap IfStatement BinaryOperation != MemberReference lo MemberReference i BlockStatement StatementExpression MethodInvocation MemberReference a MemberReference ++ lo MemberReference i swap BlockStatement StatementExpression MemberReference ++ lo IfStatement BinaryOperation > MemberReference lo MemberReference i StatementExpression Assignment MemberReference i BinaryOperation - MemberReference lo Literal 1 = BlockStatement StatementExpression MethodInvocation MemberReference a MemberReference i MemberReference j swap StatementExpression MemberReference ++ i StatementExpression Assignment MemberReference c1 TernaryExpression BinaryOperation >= MemberReference i MemberReference hi BinaryOperation - MemberReference hi Literal 1 MemberReference i = WhileStatement BinaryOperation && BinaryOperation > MemberReference c1 MemberReference lo1 BinaryOperation < MethodInvocation c MemberReference x MemberReference ArraySelector MemberReference c1 a compare Literal 0 BlockStatement StatementExpression MemberReference -- c1 WhileStatement BinaryOperation && BinaryOperation < MemberReference lo MemberReference hi BinaryOperation == MethodInvocation c MemberReference x MemberReference ArraySelector MemberReference lo a compare Literal 0 StatementExpression MemberReference ++ lo StatementExpression MemberReference -- lo WhileStatement BinaryOperation && BinaryOperation >= MemberReference lo MemberReference lo1 BinaryOperation > MemberReference c1 MemberReference lo StatementExpression MethodInvocation MemberReference a MemberReference ++ lo1 MemberReference -- c1 swap ReturnStatement ArrayCreator BasicType int ArrayInitializer TernaryExpression BinaryOperation > MemberReference c1 MemberReference lo BinaryOperation + MemberReference c1 Literal 1 MemberReference lo1 MemberReference i	1
MethodDeclaration Modifier public Annotation Override ReferenceType DynamicMethod getRealMethod ReturnStatement MemberReference realMethod	0
MethodDeclaration Modifier public initSolnForNode StatementExpression Assignment MemberReference _tmp ClassCreator ReferenceType BitSet MemberReference _setSize =	0
MethodDeclaration Modifier public static ReferenceType RubyException newException FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass excptnClass FormalParameter ReferenceType String msg ReturnStatement ClassCreator ReferenceType RubyException MemberReference runtime MemberReference excptnClass MemberReference msg	0
MethodDeclaration Modifier public final FormalParameter BasicType int size StatementExpression Assignment MemberReference ArrayCreator ReferenceType CompiledBlockCallback MemberReference size =	0
MethodDeclaration Modifier public final ReferenceType IRubyObject invoke FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Function function FormalParameter ReferenceType HeapInvocationBuffer args ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation invoker MemberReference function MemberReference args invokeInt newSigned32	1
MethodDeclaration Modifier public ReferenceType Script tryCompile FormalParameter ReferenceType Node node ReturnStatement MethodInvocation MemberReference node ClassCreator ReferenceType JRubyClassLoader MethodInvocation getJRubyClassLoader tryCompile	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator myVandC MemberReference ArraySelector MethodInvocation i getAndIncrement valuesAndCriteria StatementExpression Assignment MemberReference ArraySelector Literal 0 myVandC MemberReference larg = StatementExpression Assignment MemberReference ArraySelector Literal 1 myVandC MethodInvocation block MemberReference ctx MemberReference larg yield = ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public ReferenceType Object case200_line817 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal "/" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RubyKernel MemberReference context MemberReference self MemberReference name MemberReference PUBLIC MemberReference CallType NORMAL MemberReference args MemberReference block	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType Block block StatementExpression MethodInvocation handle TernaryExpression MemberReference isStatic Literal null Cast ReferenceType JavaObjectWrapper MemberReference self invoke ReturnStatement MemberReference self	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair frame Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType Block block ReturnStatement This	0
MethodDeclaration Modifier protected ReferenceType IRubyObject callCoerced FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String method FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args MethodInvocation MemberReference context MemberReference other Literal false IfStatement BinaryOperation == MemberReference args Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation getNil getRuntime ReturnStatement MemberReference ArraySelector Literal 0 MethodInvocation MemberReference context MemberReference method MemberReference ArraySelector Literal 1 args callMethod args	0
MethodDeclaration Modifier final public static ReferenceType RubyArray newArray FormalParameter Modifier final ReferenceType Ruby runtime FormalParameter Modifier final BasicType int len LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator array ClassCreator ReferenceType RubyArray MemberReference runtime MemberReference len StatementExpression MethodInvocation RuntimeHelpers MemberReference array values Literal 0 MemberReference array.values length MemberReference runtime fillNil ReturnStatement MemberReference array	0
MethodDeclaration Modifier public static ReferenceType IRubyObject newInstance FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject clazz FormalParameter ReferenceType IRubyObject num FormalParameter ReferenceType IRubyObject den StatementExpression Assignment MemberReference num MethodInvocation MemberReference context MemberReference num intValue = StatementExpression Assignment MemberReference den MethodInvocation MemberReference context MemberReference den intValue = ReturnStatement MethodInvocation MemberReference context MemberReference clazz MemberReference num MemberReference den	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name TryStatement LocalVariableDeclaration ReferenceType JavaProxy VariableDeclarator proxy MethodInvocation InstanceMethodInvoker MemberReference self castJavaProxy ReturnStatement MethodInvocation JavaUtil MethodInvocation context getRuntime MethodInvocation field MethodInvocation proxy getObject get convertJavaToUsableRubyObject CatchClause CatchClauseParameter IllegalAccessException iae ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "illegal access getting variable: " MethodInvocation iae getMessage newTypeError getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject to_s ReturnStatement MethodInvocation MethodInvocation MethodInvocation toString newString getRuntime	1
MethodDeclaration Modifier public execute StatementExpression MethodInvocation r run	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "private" ElementValuePair rest Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair writes MemberReference VISIBILITY ReferenceType RubyModule rbPrivate FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args StatementExpression MethodInvocation MemberReference context MemberReference args MemberReference PRIVATE setVisibility ReturnStatement This	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "limit" ElementValuePair optional Literal 1 ElementValuePair meta Literal true ReferenceType IRubyObject limit FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator c Cast ReferenceType RubyModule MemberReference recv LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator nCur MethodInvocation c Literal "vpPrecLimit" searchInternalModuleVariable IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator arg MemberReference ArraySelector Literal 0 args IfStatement MethodInvocation ! arg isNil BlockStatement IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyFixnum BlockStatement ThrowStatement MethodInvocation runtime MemberReference arg MethodInvocation runtime newTypeError IfStatement BinaryOperation > Literal 0 Cast ReferenceType RubyFixnum MemberReference arg BlockStatement ThrowStatement MethodInvocation runtime Literal "argument must be positive" newArgumentError StatementExpression MethodInvocation c Literal "vpPrecLimit" MemberReference arg setInternalModuleVariable ReturnStatement MemberReference nCur	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyArray entries ReturnStatement MethodInvocation MethodInvocation MethodInvocation JavaUtil MethodInvocation getRuntime MemberReference snapshot convertJavaArrayToRuby newArrayNoCopy getRuntime	0
MethodDeclaration Modifier public final put FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation io MemberReference offset MethodInvocation Util MemberReference value int64Value putLong	1
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject object ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 1 MemberReference name MemberReference object getVariable	0
MethodDeclaration Modifier public visitCode StatementExpression MethodInvocation MethodInvocation visitCode getMethodVisitor	0
MethodDeclaration Modifier public static ReferenceType IRubyObject newComplexCanonicalize FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation MemberReference context MemberReference x MethodInvocation RubyFixnum MethodInvocation context getRuntime zero newComplexCanonicalize	0
MethodDeclaration Modifier public ReferenceType Operand fetchCompileTimeArrayElement FormalParameter BasicType int argIndex FormalParameter BasicType boolean getSubArray IfStatement BinaryOperation instanceof MemberReference ReferenceType Array ReturnStatement Cast ReferenceType Array MemberReference IfStatement BinaryOperation instanceof MemberReference ReferenceType Range ReturnStatement Cast ReferenceType Range MemberReference ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType IRubyObject egid_set FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject arg StatementExpression MethodInvocation runtime MethodInvocation Cast BasicType int MethodInvocation arg MethodInvocation getLongValue convertToInteger setegid getPosix ReturnStatement MethodInvocation RubyFixnum MemberReference runtime zero	1
MethodDeclaration Modifier public ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Class getMethodSignatures IfStatement BinaryOperation == MemberReference methodSignatures Literal null ReturnStatement MemberReference Collections EMPTY_MAP ReturnStatement MemberReference methodSignatures	1
MethodDeclaration Modifier public static BasicType int strLength FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int end IfStatement MethodInvocation enc isFixedWidth BlockStatement ReturnStatement BinaryOperation / BinaryOperation - BinaryOperation + BinaryOperation - MemberReference end MemberReference p MethodInvocation enc minLength Literal 1 MethodInvocation enc minLength IfStatement MethodInvocation enc isAsciiCompatible BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c Literal 0 WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement IfStatement MethodInvocation Encoding MemberReference ArraySelector MemberReference p bytes isAscii BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator q MethodInvocation MemberReference bytes MemberReference p MemberReference end searchNonAscii IfStatement BinaryOperation == MemberReference q Literal - 1 ReturnStatement BinaryOperation + MemberReference c BinaryOperation - MemberReference end MemberReference p StatementExpression Assignment MemberReference c BinaryOperation - MemberReference q MemberReference p += StatementExpression Assignment MemberReference p MemberReference q = StatementExpression Assignment MemberReference p MethodInvocation MemberReference enc MemberReference bytes MemberReference p MemberReference end length += StatementExpression MemberReference ++ c ReturnStatement MemberReference c LocalVariableDeclaration BasicType int VariableDeclarator c ForStatement ForControl Assignment MemberReference c Literal 0 = BinaryOperation > MemberReference end MemberReference p MemberReference ++ c StatementExpression Assignment MemberReference p MethodInvocation MemberReference enc MemberReference bytes MemberReference p MemberReference end length += ReturnStatement MemberReference c	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType RubyConverter MemberReference runtime MemberReference klass	0
MethodDeclaration Modifier public ReferenceType Object case30_line420 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals backrefAssignError ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType IRubyObject arg8 FormalParameter ReferenceType IRubyObject arg9 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 MemberReference arg9 StatementExpression Assignment MemberReference args MethodInvocation MemberReference context MemberReference args MemberReference type prepareArgumentsForCall = ReturnStatement MethodInvocation MemberReference context MethodInvocation RubyArray MethodInvocation context getRuntime MemberReference args newArrayNoCopy Literal null Literal null Literal true MemberReference binding MemberReference type yield	1
MethodDeclaration Modifier public ReferenceType Object case75_line566 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public setObject FormalParameter ReferenceType Object obj StatementExpression Assignment MemberReference object MemberReference obj =	0
MethodDeclaration Modifier public ReferenceType Object case420_line1618 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType ISourcePosition getPosition ReturnStatement MemberReference position	0
MethodDeclaration Modifier public static ReferenceType String getProperty FormalParameter ReferenceType String property FormalParameter ReferenceType String TryStatement ReturnStatement MethodInvocation System MemberReference property MemberReference getProperty CatchClause CatchClauseParameter SecurityException se ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType boolean isValueReferenceNeeded ReturnStatement Literal false	0
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject add_parameter_annotations FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject maybeClass FormalParameter ReferenceType IRubyObject methodName FormalParameter ReferenceType IRubyObject paramAnnoMaps LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator clazz MethodInvocation MemberReference maybeClass MemberReference context getRubyClass LocalVariableDeclaration ReferenceType String VariableDeclarator method MethodInvocation methodName MethodInvocation asJavaString convertToString LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Map TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator annos Cast ReferenceType List TypeArgument ReferenceType Map TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object MemberReference paramAnnoMaps ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation annos size Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator paramAnnos MethodInvocation annos MemberReference i get ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator entry MethodInvocation paramAnnos entrySet BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator value MethodInvocation entry getValue IfStatement BinaryOperation == MemberReference value Literal null StatementExpression Assignment MemberReference value MemberReference Collections EMPTY_MAP = StatementExpression MethodInvocation clazz MemberReference method MemberReference i MethodInvocation MemberReference context MethodInvocation entry getKey getAnnoClass MemberReference value addParameterAnnotation ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "put_callback" ElementValuePair required Literal 3 ReferenceType IRubyObject put_callback FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset FormalParameter ReferenceType IRubyObject proc FormalParameter ReferenceType IRubyObject cbInfo IfStatement BinaryOperation instanceof MemberReference cbInfo ReferenceType CallbackInfo BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "invalid CallbackInfo" newArgumentError getRuntime LocalVariableDeclaration ReferenceType Pointer VariableDeclarator ptr MethodInvocation Factory MethodInvocation MethodInvocation MethodInvocation context getRuntime Cast ReferenceType CallbackInfo MemberReference cbInfo MemberReference proc getCallback getInstance StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference offset getOffset Cast ReferenceType AbstractMemory MemberReference ptr putMemoryIO getMemoryIO ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType getScope ReturnStatement MemberReference scope	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation RubyBigDecimal Literal "+" formatHasLeadingSpace assertFalse StatementExpression MethodInvocation MethodInvocation RubyBigDecimal Literal " " formatHasLeadingSpace assertTrue StatementExpression MethodInvocation MethodInvocation RubyBigDecimal Literal "1" formatHasLeadingSpace assertFalse	0
MethodDeclaration Modifier public static BasicType int execAndWait FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject rawArgs LocalVariableDeclaration ReferenceType String VariableDeclarator args MethodInvocation MethodInvocation runtime getCurrentContext MemberReference runtime MemberReference rawArgs parseCommandLine IfStatement MethodInvocation MemberReference runtime MemberReference args shouldRunInProcess BlockStatement TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator pwd ClassCreator ReferenceType File MethodInvocation runtime getCurrentDirectory LocalVariableDeclaration ReferenceType String VariableDeclarator command MemberReference ArraySelector Literal 0 args LocalVariableDeclaration BasicType int VariableDeclarator startIndex TernaryExpression MethodInvocation command Literal ".rb" endsWith Literal 0 Literal 1 IfStatement MethodInvocation command MethodInvocation Literal "irb" endsWith trim BlockStatement StatementExpression Assignment MemberReference startIndex Literal 0 = StatementExpression Assignment MemberReference ArraySelector Literal 0 args BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation runtime getJRubyHome MemberReference File separator Literal "bin" MemberReference File separator Literal "jirb" = LocalVariableDeclaration ReferenceType String VariableDeclarator newargs ArrayCreator ReferenceType String BinaryOperation - MemberReference args length MemberReference startIndex StatementExpression MethodInvocation System MemberReference args MemberReference startIndex MemberReference newargs Literal 0 MemberReference newargs length arraycopy LocalVariableDeclaration ReferenceType ScriptThreadProcess VariableDeclarator ipScript ClassCreator ReferenceType ScriptThreadProcess MemberReference runtime MemberReference newargs MethodInvocation MemberReference runtime getCurrentEnv MemberReference pwd Literal false StatementExpression MethodInvocation ipScript start ReturnStatement MethodInvocation ipScript waitFor CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation runtime MemberReference e newIOErrorFromException CatchClause CatchClauseParameter InterruptedException e ThrowStatement MethodInvocation runtime Literal "unexpected interrupt" newThreadError BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference rawArgs runAndWait	1
MethodDeclaration Modifier private ReferenceType RubyRegexp initializeCommon FormalParameter ReferenceType ByteList bytes FormalParameter BasicType int options LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime IfStatement BinaryOperation && MethodInvocation ! isTaint BinaryOperation >= MethodInvocation runtime getSafeLevel Literal 4 ThrowStatement MethodInvocation runtime Literal "Insecure: can't modify regexp" newSecurityError StatementExpression MethodInvocation checkFrozen IfStatement MethodInvocation isLiteral ThrowStatement MethodInvocation runtime Literal "can't modify literal regexp" newSecurityError StatementExpression MethodInvocation MemberReference runtime MemberReference options setKCode StatementExpression Assignment MemberReference pattern MethodInvocation MemberReference runtime MemberReference bytes MethodInvocation kcode getEncoding BinaryOperation & MemberReference options Literal 0xf getRegexpFromCache = StatementExpression Assignment MemberReference str MemberReference bytes = ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation MemberReference node createList	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object gotoToken StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyClass p Literal MethodInvocation ClassReference ReferenceType RubyClass sig invokevirtual StatementExpression MethodInvocation loadSelf StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyModule p Literal "isInstance" MethodInvocation ClassReference BasicType boolean MethodInvocation ClassReference ReferenceType IRubyObject params sig invokevirtual StatementExpression MethodInvocation method Cast ReferenceType Label MemberReference gotoToken ifne	0
MethodDeclaration Modifier private init FormalParameter BasicType int window_bits StatementExpression Assignment MemberReference flater ClassCreator ReferenceType Inflater BinaryOperation < MemberReference window_bits Literal 0 = StatementExpression Assignment MemberReference ClassCreator ReferenceType ByteList MemberReference BASE_SIZE = StatementExpression Assignment MemberReference input ClassCreator ReferenceType ByteList =	1
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object other ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference other ReferenceType JavaConstructor BinaryOperation == This MemberReference constructor Cast ReferenceType JavaConstructor MemberReference other	0
MethodDeclaration Modifier private final static BasicType int getTypeSize FormalParameter ReferenceType IRubyObject type LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation NativeType MethodInvocation ordinal MemberReference type valueOf ReturnStatement TernaryExpression BinaryOperation && BinaryOperation >= MemberReference index Literal 0 BinaryOperation < MemberReference index MemberReference sizes length MemberReference ArraySelector MemberReference index sizes Literal - 1	1
MethodDeclaration Modifier public ReferenceType Object case183_line745 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals checkExpression StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals checkExpression LocalVariableDeclaration BasicType boolean VariableDeclarator isLiteral BinaryOperation && BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals ReferenceType FixnumNode BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals ReferenceType FixnumNode StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType DotNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal true MemberReference isLiteral = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation threadImpl toString	0
MethodDeclaration Modifier final ReferenceType RubyBasicObject infectBy FormalParameter BasicType int tuFlags StatementExpression Assignment MemberReference flags BinaryOperation & MemberReference tuFlags BinaryOperation | MemberReference TAINTED_F MemberReference |= ReturnStatement This	1
MethodDeclaration Modifier public BasicType boolean isConstant ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair required Literal 1 ReferenceType IRubyObject lchmod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration BasicType int VariableDeclarator mode Cast BasicType int MethodInvocation arg MethodInvocation getLongValue convertToInteger IfStatement ClassCreator ! MethodInvocation exists ReferenceType File MemberReference path BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "No such file or directory - " MemberReference path newErrnoENOENTError getRuntime ReturnStatement MethodInvocation context MethodInvocation MethodInvocation context MethodInvocation getPosix MethodInvocation MemberReference path MemberReference mode lchmod getRuntime newFixnum getRuntime	0
MethodDeclaration Modifier protected createVariableCompiler IfStatement BinaryOperation == MemberReference inspector Literal null BlockStatement StatementExpression Assignment MemberReference variableCompiler ClassCreator ReferenceType HeapBasedVariableCompiler This MemberReference method MemberReference scope Literal false MemberReference StandardASMCompiler ARGS_INDEX MethodInvocation getFirstTempIndex = IfStatement BinaryOperation || MethodInvocation inspector hasClosure MethodInvocation inspector hasScopeAwareMethods BlockStatement StatementExpression Assignment MemberReference variableCompiler ClassCreator ReferenceType HeapBasedVariableCompiler This MemberReference method MemberReference scope Literal false MemberReference StandardASMCompiler ARGS_INDEX MethodInvocation getFirstTempIndex = BlockStatement StatementExpression Assignment MemberReference variableCompiler ClassCreator ReferenceType StackBasedVariableCompiler This MemberReference method MemberReference scope Literal false MemberReference StandardASMCompiler ARGS_INDEX MethodInvocation getFirstTempIndex =	0
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject copy_data_simple FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject from FormalParameter ReferenceType IRubyObject to LocalVariableDeclaration ReferenceType JavaArray VariableDeclarator javaArray Cast ReferenceType JavaArray MethodInvocation to dataGetStruct LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator rubyArray Cast ReferenceType RubyArray MemberReference from StatementExpression MethodInvocation MemberReference context MemberReference rubyArray MemberReference javaArray copyDataToJavaArray ReturnStatement MemberReference to	1
MethodDeclaration Modifier public ReferenceType Object case197_line808 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal "+" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier protected Annotation Override tearDown Exception IfStatement BinaryOperation != MemberReference testDir Literal null BlockStatement StatementExpression MethodInvocation testFile delete StatementExpression MethodInvocation testDir delete	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "name" ReferenceType IRubyObject name ReturnStatement MemberReference name	0
MethodDeclaration Modifier public nextValue FormalParameter ReferenceType BodyCompiler context FormalParameter ReferenceType Object sourceArray FormalParameter BasicType int index LocalVariableDeclaration ReferenceType ListNode VariableDeclarator headNode Cast ReferenceType ListNode MemberReference sourceArray LocalVariableDeclaration ReferenceType Node VariableDeclarator assignNode MethodInvocation headNode MemberReference index get StatementExpression MethodInvocation MemberReference assignNode MemberReference context Literal false compileAssignment	0
MethodDeclaration Modifier public ReferenceType Object getValue ReturnStatement MethodInvocation bri getValue	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal "\"abc\"" testPrintErrorWithBacktrace	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject reset StatementExpression MethodInvocation internalReset ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public static ReferenceType Block createBlock19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType body ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference body newCompiledClosure	0
MethodDeclaration Modifier public final ReferenceType OS getOS ReturnStatement MemberReference OS	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "floor" ElementValuePair optional Literal 1 ReferenceType IRubyObject floor FormalParameter ReferenceType IRubyObject args IfStatement MemberReference isNaN BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime newNaN IfStatement MethodInvocation isInfinity BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime MemberReference infinitySign newInfinity LocalVariableDeclaration BasicType int VariableDeclarator n Literal 0 IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement StatementExpression Assignment MemberReference n MethodInvocation RubyNumeric MemberReference ArraySelector Literal 0 args fix2int = IfStatement BinaryOperation > MethodInvocation value scale MemberReference n BlockStatement ReturnStatement ClassCreator ReferenceType RubyBigDecimal MethodInvocation getRuntime MethodInvocation value MemberReference n MemberReference RoundingMode setScale BlockStatement ReturnStatement This	0
MethodDeclaration Modifier public static ReferenceType RubyModule getClassVariableBase FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType VariableDeclarator scope MethodInvocation context MethodInvocation getStaticScope getCurrentScope LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator rubyClass MethodInvocation scope getModule IfStatement BinaryOperation || MethodInvocation rubyClass isSingleton BinaryOperation == MemberReference rubyClass MethodInvocation runtime getDummy BlockStatement StatementExpression Assignment MemberReference scope MethodInvocation scope = StatementExpression Assignment MemberReference rubyClass MethodInvocation scope getModule = IfStatement BinaryOperation == MethodInvocation scope Literal null BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID Literal "class variable access from singleton method" warn getWarnings ReturnStatement MemberReference rubyClass	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference _refName	0
MethodDeclaration Modifier public emitDEF_INST_METH FormalParameter ReferenceType DEFINE_INSTANCE_METHOD_Instr instr LocalVariableDeclaration ReferenceType IR_Method VariableDeclarator irMethod MemberReference instr LocalVariableDeclaration ReferenceType GeneratorAdapter VariableDeclarator adapter ClassCreator ReferenceType GeneratorAdapter MemberReference ACC_PUBLIC MethodInvocation Method BinaryOperation + BinaryOperation + Literal "void " MemberReference irMethod Literal " getMethod Literal null Literal null MethodInvocation cls StatementExpression MethodInvocation adapter loadThis StatementExpression MethodInvocation adapter loadArgs StatementExpression MethodInvocation adapter MethodInvocation Type ClassReference ReferenceType Object getType MethodInvocation Method BinaryOperation + BinaryOperation + Literal "Object __ruby__" MemberReference irMethod Literal " (Object)" getMethod invokeStatic StatementExpression MethodInvocation adapter returnValue StatementExpression MethodInvocation adapter endMethod	1
MethodDeclaration Modifier public Annotation Override ReferenceType String getParent ReturnStatement Literal ""	0
MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression Assignment MemberReference ArraySelector Literal 0 hash MethodInvocation key MethodInvocation convertToInteger MethodInvocation getLongValue MemberReference context Literal callMethod ^= StatementExpression Assignment MemberReference ArraySelector Literal 0 hash MethodInvocation value MethodInvocation convertToInteger MethodInvocation getLongValue MemberReference context Literal callMethod ^=	0
MethodDeclaration Modifier private ReferenceType ByteList getDigestHexNoClone ReturnStatement MethodInvocation MethodInvocation getDigestNoClone	0
MethodDeclaration Modifier public ReferenceType InputStream getInputStream ReturnStatement MemberReference inputStream	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation classVarDeclNode getValueNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public static ReferenceType RubyHash constructHash FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject value1 FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject key3 FormalParameter ReferenceType IRubyObject LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator hash MethodInvocation RubyHash MemberReference runtime newHash StatementExpression MethodInvocation hash MemberReference runtime MemberReference MemberReference value1 fastASetCheckString StatementExpression MethodInvocation hash MemberReference runtime MemberReference MemberReference fastASetCheckString StatementExpression MethodInvocation hash MemberReference runtime MemberReference key3 MemberReference fastASetCheckString ReturnStatement MemberReference hash	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType CallSite varSite ReturnStatement MethodInvocation varSite MemberReference context MemberReference self MemberReference receiver call	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject getegid FormalParameter ReferenceType IRubyObject self ReturnStatement MethodInvocation MethodInvocation self getRuntime egid	1
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation rescueNode getRescueNode MemberReference context MemberReference light	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_s" Annotation Override ReferenceType IRubyObject to_s LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime IfStatement MethodInvocation Double MemberReference value isInfinite ReturnStatement MethodInvocation RubyString MemberReference runtime TernaryExpression BinaryOperation < MemberReference value Literal 0 Literal "-Infinity" Literal "Infinity" newString IfStatement MethodInvocation Double MemberReference value isNaN ReturnStatement MethodInvocation RubyString MemberReference runtime Literal "NaN" newString LocalVariableDeclaration ReferenceType ByteList VariableDeclarator buf ClassCreator ReferenceType ByteList StatementExpression MethodInvocation Sprintf MemberReference buf MemberReference Locale US Literal "%#.15g" This sprintf LocalVariableDeclaration BasicType int VariableDeclarator e MethodInvocation buf Literal 'e' indexOf IfStatement BinaryOperation == MemberReference e Literal - 1 StatementExpression Assignment MemberReference e MemberReference buf realSize = LocalVariableDeclaration ReferenceType ASCIIEncoding VariableDeclarator ascii MemberReference ASCIIEncoding INSTANCE IfStatement MethodInvocation ! ascii MethodInvocation buf BinaryOperation - MemberReference e Literal 1 get isDigit BlockStatement StatementExpression Assignment MemberReference buf realSize Literal 0 = StatementExpression MethodInvocation Sprintf MemberReference buf MemberReference Locale US Literal "%#.14e" This sprintf StatementExpression Assignment MemberReference e MethodInvocation buf Literal 'e' indexOf = IfStatement BinaryOperation == MemberReference e Literal - 1 StatementExpression Assignment MemberReference e MemberReference buf realSize = LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference e WhileStatement BinaryOperation && BinaryOperation == MethodInvocation buf BinaryOperation - MemberReference p Literal 1 get Literal '0' MethodInvocation ascii MethodInvocation buf BinaryOperation - MemberReference p Literal 2 get isDigit StatementExpression MemberReference -- p StatementExpression MethodInvocation System MemberReference buf bytes MemberReference e MemberReference buf bytes MemberReference p BinaryOperation - MemberReference buf realSize MemberReference e arraycopy StatementExpression Assignment MemberReference buf realSize BinaryOperation - BinaryOperation + MemberReference p MemberReference buf realSize MemberReference e = ReturnStatement MethodInvocation runtime MemberReference buf newString	1
MethodDeclaration Modifier public trimStackTrace FormalParameter ReferenceType Member target LocalVariableDeclaration ReferenceType Throwable VariableDeclarator t ClassCreator ReferenceType Throwable LocalVariableDeclaration ReferenceType StackTraceElement VariableDeclarator origStackTrace MethodInvocation cause getStackTrace LocalVariableDeclaration ReferenceType StackTraceElement VariableDeclarator currentStackTrace MethodInvocation t getStackTrace LocalVariableDeclaration BasicType int VariableDeclarator skip Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation && BinaryOperation <= MemberReference i MemberReference origStackTrace length BinaryOperation <= MemberReference i MemberReference currentStackTrace length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType StackTraceElement VariableDeclarator a MemberReference ArraySelector BinaryOperation - MemberReference origStackTrace length MemberReference i origStackTrace LocalVariableDeclaration ReferenceType StackTraceElement VariableDeclarator b MemberReference ArraySelector BinaryOperation - MemberReference currentStackTrace length MemberReference i currentStackTrace IfStatement MethodInvocation a MemberReference b equals BlockStatement StatementExpression Assignment MemberReference skip Literal 1 += BlockStatement BreakStatement IfStatement BinaryOperation != MemberReference target Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation target MethodInvocation getName getDeclaringClass LocalVariableDeclaration ReferenceType String VariableDeclarator methodName MethodInvocation target getName ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - BinaryOperation - MemberReference origStackTrace length MemberReference skip Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration ReferenceType StackTraceElement VariableDeclarator frame MemberReference ArraySelector MemberReference i origStackTrace IfStatement BinaryOperation && MethodInvocation frame MethodInvocation MemberReference className equals getClassName MethodInvocation frame MethodInvocation MemberReference methodName equals getMethodName BlockStatement StatementExpression Assignment MemberReference skip BinaryOperation - BinaryOperation - MemberReference origStackTrace length MemberReference i Literal 1 = BreakStatement IfStatement BinaryOperation > MemberReference skip Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StackTraceElement VariableDeclarator newStackTrace ArrayCreator ReferenceType StackTraceElement BinaryOperation - MemberReference origStackTrace length MemberReference skip ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference newStackTrace length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i newStackTrace MemberReference ArraySelector MemberReference i origStackTrace = StatementExpression MethodInvocation cause MemberReference newStackTrace	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "define_method" ElementValuePair frame Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair reads MemberReference VISIBILITY ReferenceType IRubyObject define_method FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator body LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation arg0 MethodInvocation intern asJavaString LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator newMethod Literal null LocalVariableDeclaration ReferenceType Visibility VariableDeclarator visibility MethodInvocation context getCurrentVisibility IfStatement BinaryOperation == MemberReference visibility MemberReference MODULE_FUNCTION StatementExpression Assignment MemberReference visibility MemberReference PRIVATE = IfStatement MethodInvocation runtime MethodInvocation MemberReference arg1 isInstance getProc BlockStatement LocalVariableDeclaration ReferenceType RubyProc VariableDeclarator proc Cast ReferenceType RubyProc MemberReference arg1 StatementExpression Assignment MemberReference body MemberReference proc = StatementExpression Assignment MemberReference newMethod MethodInvocation MemberReference name MemberReference visibility MemberReference proc createProcMethod = IfStatement MethodInvocation runtime MethodInvocation MemberReference arg1 isInstance getMethod BlockStatement LocalVariableDeclaration ReferenceType RubyMethod VariableDeclarator method Cast ReferenceType RubyMethod MemberReference arg1 StatementExpression Assignment MemberReference body MemberReference method = StatementExpression Assignment MemberReference newMethod ClassCreator ReferenceType MethodMethod This MethodInvocation method Literal null MemberReference visibility = BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "wrong argument type " MethodInvocation arg1 MethodInvocation getName getType Literal " (expected Proc/Method)" newTypeError StatementExpression MethodInvocation RuntimeHelpers This MemberReference name MemberReference newMethod MethodInvocation context getPreviousVisibility MemberReference context MemberReference runtime addInstanceMethod ReturnStatement MemberReference body	1
MethodDeclaration Modifier public final ReferenceType Type getParameterTypes ReturnStatement MemberReference parameterTypes	0
MethodDeclaration Modifier public ReferenceType Operand buildCall FormalParameter ReferenceType CallNode callNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType Node VariableDeclarator callArgsNode MethodInvocation callNode getArgsNode LocalVariableDeclaration ReferenceType Node VariableDeclarator MethodInvocation callNode getReceiverNode LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Operand VariableDeclarator args MethodInvocation MemberReference MemberReference callArgsNode MemberReference s setupCallArgs LocalVariableDeclaration ReferenceType Operand VariableDeclarator block MethodInvocation MethodInvocation callNode getIterNode MemberReference s setupCallClosure LocalVariableDeclaration ReferenceType Variable VariableDeclarator callResult MethodInvocation s getNewVariable LocalVariableDeclaration ReferenceType IR_Instr VariableDeclarator callInstr ClassCreator ReferenceType CALL_Instr MemberReference callResult ClassCreator ReferenceType MethAddr MethodInvocation callNode getName MethodInvocation args ArrayCreator ReferenceType Operand MethodInvocation args size toArray MemberReference block StatementExpression MethodInvocation s MemberReference callInstr addInstr ReturnStatement MemberReference callResult	1
MethodDeclaration Modifier public ReferenceType Object case436_line1632 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Literal null Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType RestArgNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "try_convert" ElementValuePair meta Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject try_convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation TypeConverter MemberReference args MethodInvocation context MethodInvocation getRuntime Literal "to_regexp" convertToTypeWithCheck	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "private_method_defined?" ElementValuePair required Literal 1 ReferenceType IRubyObject private_method_defined FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject symbol LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MethodInvocation symbol asJavaString searchMethod ReturnStatement MethodInvocation context MethodInvocation BinaryOperation && MethodInvocation ! method isUndefined BinaryOperation == MethodInvocation method getVisibility MemberReference PRIVATE newBoolean getRuntime	1
MethodDeclaration Modifier public synchronized Annotation JRubyMethod ElementValuePair name Literal "inspect" Annotation Override ReferenceType IRubyObject inspect LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator part ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType String VariableDeclarator cname MethodInvocation MethodInvocation getRealClass MethodInvocation getName getMetaClass StatementExpression MethodInvocation part MethodInvocation MemberReference cname append MethodInvocation Literal ":0x" append Literal "#<" append StatementExpression MethodInvocation part MethodInvocation Integer MethodInvocation System This identityHashCode toHexString append StatementExpression MethodInvocation part MethodInvocation status MethodInvocation toLowerCase toString append StatementExpression MethodInvocation part Literal ">" append ReturnStatement MethodInvocation MethodInvocation MethodInvocation part toString newString getRuntime	1
MethodDeclaration Modifier public ReferenceType RubyModule defineModuleUnder FormalParameter ReferenceType RubyModule pkg FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator packageName IfStatement BinaryOperation == Assignment MemberReference packageName MethodInvocation pkg MethodInvocation Literal "@package_name" fastGetInstanceVariable getInstanceVariables = Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation pkg getRuntime ReturnStatement Cast ReferenceType RubyModule MethodInvocation MemberReference runtime MethodInvocation JavaClass MemberReference runtime BinaryOperation + MethodInvocation packageName asJavaString MemberReference name forNameVerbose get_interface_module	1
MethodDeclaration Modifier public ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klass FormalParameter BasicType boolean aValue FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type IfStatement BinaryOperation == MemberReference klass Literal null BlockStatement StatementExpression Assignment MemberReference self MethodInvocation MemberReference binding prepareSelf = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator realArg TernaryExpression MemberReference aValue MethodInvocation MemberReference context MemberReference args MemberReference self setupBlockArgs MethodInvocation MethodInvocation context getRuntime MemberReference args MemberReference self LocalVariableDeclaration ReferenceType Visibility VariableDeclarator oldVis MethodInvocation binding MethodInvocation getVisibility getFrame LocalVariableDeclaration ReferenceType Frame VariableDeclarator lastFrame MethodInvocation MemberReference context MemberReference klass MemberReference binding pre TryStatement ReturnStatement MethodInvocation callback MemberReference context MemberReference self MemberReference realArg call CatchClause CatchClauseParameter JumpException.NextJump nj ReturnStatement MethodInvocation MemberReference context MemberReference nj MemberReference type handleNextJump StatementExpression MethodInvocation MemberReference context MemberReference binding MemberReference oldVis MemberReference lastFrame post	0
MethodDeclaration Modifier public ReferenceType Object case71_line551 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType MultipleAsgnNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final put FormalParameter BasicType long offset FormalParameter BasicType byte src FormalParameter BasicType int off FormalParameter BasicType int len ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public static ReferenceType IRubyObject newInstance FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject clazz FormalParameter ReferenceType IRubyObject num StatementExpression Assignment MemberReference num MethodInvocation MemberReference context MemberReference num intValue = ReturnStatement MethodInvocation MemberReference context MemberReference clazz MemberReference num MethodInvocation RubyFixnum MethodInvocation context getRuntime one	0
MethodDeclaration Modifier public ReferenceType Object case345_line1305 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals Literal null Cast ReferenceType RestArgNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case267_line1041 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation lexer MemberReference LexState EXPR_ENDARG setState ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static setup FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cConditionVariable MethodInvocation runtime Literal MethodInvocation runtime getObject ClassCreator ReferenceType ObjectAllocator MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType ConditionVariable MemberReference runtime MemberReference klass defineClass StatementExpression MethodInvocation cConditionVariable ClassReference ReferenceType ConditionVariable defineAnnotatedMethods	0
MethodDeclaration Modifier public static BasicType int FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String modesString LocalVariableDeclaration BasicType int VariableDeclarator modes Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation modesString length IfStatement BinaryOperation == MemberReference length Literal 0 BlockStatement ThrowStatement MethodInvocation runtime Literal "illegal access mode" newArgumentError SwitchStatement MethodInvocation modesString Literal 0 charAt SwitchStatementCase Literal 'r' StatementExpression Assignment MemberReference modes MemberReference ModeFlags RDONLY |= BreakStatement SwitchStatementCase Literal 'a' StatementExpression Assignment MemberReference modes BinaryOperation | BinaryOperation | MemberReference ModeFlags MemberReference ModeFlags WRONLY MemberReference ModeFlags CREAT |= BreakStatement SwitchStatementCase Literal 'w' StatementExpression Assignment MemberReference modes BinaryOperation | BinaryOperation | MemberReference ModeFlags WRONLY MemberReference ModeFlags TRUNC MemberReference ModeFlags CREAT |= BreakStatement SwitchStatementCase ThrowStatement MethodInvocation runtime BinaryOperation + Literal "illegal access mode " MemberReference modes newArgumentError ForStatement ModifierLoop ForControl VariableDeclaration BasicType int VariableDeclarator n Literal 1 BinaryOperation < MemberReference n MemberReference length MemberReference ++ n BlockStatement SwitchStatement MethodInvocation modesString MemberReference n charAt SwitchStatementCase Literal 'b' StatementExpression Assignment MemberReference modes MemberReference ModeFlags BINARY |= BreakStatement SwitchStatementCase Literal '+' StatementExpression Assignment MemberReference modes BinaryOperation | BinaryOperation & MemberReference modes MemberReference ~ ModeFlags ACCMODE MemberReference ModeFlags RDWR = BreakStatement SwitchStatementCase Literal 't' BreakStatement SwitchStatementCase Literal ':' BreakStatement ModifierLoop SwitchStatementCase ThrowStatement MethodInvocation runtime BinaryOperation + Literal "illegal access mode " MemberReference modes newArgumentError ReturnStatement MemberReference modes	1
MethodDeclaration Modifier private ReferenceType String removeTrailingZeroes FormalParameter ReferenceType String in WhileStatement BinaryOperation && BinaryOperation > MethodInvocation in length Literal 0 BinaryOperation == MethodInvocation in BinaryOperation - MethodInvocation in length Literal 1 charAt Literal '0' BlockStatement StatementExpression Assignment MemberReference in MethodInvocation in Literal 0 BinaryOperation - MethodInvocation in length Literal 1 substring = ReturnStatement MemberReference in	0
MethodDeclaration Modifier public add FormalParameter BasicType int index FormalParameter ReferenceType Object element StatementExpression MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation RubyFixnum MethodInvocation getRuntime MemberReference index newFixnum MethodInvocation JavaUtil MethodInvocation getRuntime MemberReference element convertJavaToUsableRubyObject insert	0
MethodDeclaration Modifier public testConvertJavaToRuby StatementExpression MethodInvocation MethodInvocation JavaUtil MethodInvocation getType MethodInvocation name MethodInvocation toString MemberReference runtime Literal null convertJavaToRuby Literal "NilClass" assertEquals StatementExpression MethodInvocation MethodInvocation JavaUtil MethodInvocation getType MethodInvocation name MethodInvocation toString MemberReference runtime ClassCreator ReferenceType Integer Literal 1000 convertJavaToRuby Literal "Fixnum" assertEquals StatementExpression MethodInvocation MethodInvocation JavaUtil MethodInvocation getType MethodInvocation name MethodInvocation toString MemberReference runtime ClassCreator ReferenceType Double Literal 1.0 convertJavaToRuby Literal "Float" assertEquals StatementExpression MethodInvocation MethodInvocation JavaUtil MethodInvocation getType MethodInvocation name MethodInvocation toString MemberReference runtime MemberReference Boolean TRUE convertJavaToRuby Literal "TrueClass" assertEquals StatementExpression MethodInvocation MethodInvocation JavaUtil MethodInvocation getType MethodInvocation name MethodInvocation toString MemberReference runtime MemberReference Boolean FALSE convertJavaToRuby Literal "FalseClass" assertEquals StatementExpression MethodInvocation MethodInvocation JavaUtil MethodInvocation getType MethodInvocation name MethodInvocation toString MemberReference runtime Literal "AString" convertJavaToRuby Literal "String" assertEquals	1
MethodDeclaration Modifier private ReferenceType ISourcePosition getPosition ReturnStatement MethodInvocation lexer getPosition	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<=>" ElementValuePair required Literal 1 ReferenceType IRubyObject op_cmp FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration Modifier final ReferenceType BigInteger VariableDeclarator otherValue IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference otherValue MethodInvocation Cast ReferenceType RubyFixnum MemberReference other fix2big = IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement StatementExpression Assignment MemberReference otherValue Cast ReferenceType RubyBignum MemberReference other = IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement LocalVariableDeclaration ReferenceType RubyFloat VariableDeclarator flt Cast ReferenceType RubyFloat MemberReference other IfStatement MethodInvocation flt MethodInvocation isTrue infinite_p BlockStatement IfStatement BinaryOperation > MethodInvocation flt Literal 0.0 ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime minus_one ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime one ReturnStatement MethodInvocation MethodInvocation getRuntime MethodInvocation This big2dbl MethodInvocation flt dbl_cmp BlockStatement ReturnStatement MethodInvocation MemberReference context Literal "<=>" MemberReference other coerceCmp ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime MethodInvocation value MemberReference otherValue compareTo newFixnum	1
MethodDeclaration Modifier public static ReferenceType String inspect ReturnStatement Literal "foo"	0
MethodDeclaration Modifier public ReferenceType Object case452_line1725 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType Token Literal "false" MemberReference Tokens kFALSE Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case71_line555 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType MultipleAsgn19Node MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Literal null Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType long getRandomSeed ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Node getRest ReturnStatement MemberReference rest	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "__jtrap_kernel" ElementValuePair required Literal 2 ElementValuePair module Literal true ReferenceType IRubyObject __jtrap_kernel FormalParameter Modifier final ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject block FormalParameter ReferenceType IRubyObject sig ReturnStatement MethodInvocation SIGNALS MemberReference recv MemberReference block MemberReference sig trap	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "minmax" checkContext LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator arg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result Assignment MemberReference ArraySelector Literal 1 result MemberReference arg = = BlockStatement IfStatement BinaryOperation < MethodInvocation RubyComparable MemberReference ctx MethodInvocation block MemberReference ctx MethodInvocation runtime MemberReference arg MemberReference ArraySelector Literal 0 result newArray yield MemberReference arg MemberReference ArraySelector Literal 0 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference arg = IfStatement BinaryOperation > MethodInvocation RubyComparable MemberReference ctx MethodInvocation block MemberReference ctx MethodInvocation runtime MemberReference arg MemberReference ArraySelector Literal 1 result newArray yield MemberReference arg MemberReference ArraySelector Literal 1 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 1 result MemberReference arg = ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier final public static Annotation JRubyMethod ElementValuePair name Literal "new" ElementValuePair meta Literal true ReferenceType IRubyObject newCallbackInfo FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject klass FormalParameter ReferenceType IRubyObject returnType FormalParameter ReferenceType IRubyObject paramTypes IfStatement BinaryOperation instanceof MemberReference returnType ReferenceType Type BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + BinaryOperation + Literal "wrong argument type " MethodInvocation returnType MethodInvocation getName getMetaClass Literal " (expected FFI::Type)" newArgumentError getRuntime IfStatement BinaryOperation instanceof MemberReference paramTypes ReferenceType RubyArray BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + BinaryOperation + Literal "wrong argument type " MethodInvocation paramTypes MethodInvocation getName getMetaClass Literal " (expected Array)" newArgumentError getRuntime LocalVariableDeclaration ReferenceType Type VariableDeclarator nativeParamTypes ArrayCreator ReferenceType Type Cast ReferenceType RubyArray MemberReference paramTypes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference nativeParamTypes length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator obj Cast ReferenceType RubyArray MemberReference paramTypes IfStatement BinaryOperation instanceof MemberReference obj ReferenceType Type BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + BinaryOperation + Literal "wrong argument type " MethodInvocation obj MethodInvocation getName getMetaClass Literal " (expected array of FFI::Type)" newArgumentError getRuntime StatementExpression Assignment MemberReference ArraySelector MemberReference i nativeParamTypes Cast ReferenceType Type MemberReference obj = TryStatement ReturnStatement ClassCreator ReferenceType CallbackInfo MethodInvocation context getRuntime Cast ReferenceType RubyClass MemberReference klass Cast ReferenceType Type MemberReference returnType MemberReference nativeParamTypes CatchClause CatchClauseParameter UnsatisfiedLinkError ex ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "end_with?" ReferenceType IRubyObject end_with_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg ReturnStatement TernaryExpression MethodInvocation MemberReference arg end_with_pCommon MethodInvocation context MethodInvocation getTrue getRuntime MethodInvocation context MethodInvocation getFalse getRuntime	1
MethodDeclaration setNilClass FormalParameter ReferenceType RubyClass nilClass StatementExpression Assignment This MemberReference nilClass MemberReference nilClass =	0
MethodDeclaration Modifier public ReferenceType IRubyObject decode FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteBuffer enc IfStatement BinaryOperation == MemberReference Platform BYTE_ORDER MemberReference Platform BIG_ENDIAN ReturnStatement MethodInvocation runtime MethodInvocation MemberReference enc newFixnum ReturnStatement MethodInvocation runtime MethodInvocation MemberReference enc newFixnum	1
MethodDeclaration Modifier final public static ReferenceType IRubyObject getTaintedString FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter BasicType int length ReturnStatement MethodInvocation MemberReference runtime MethodInvocation io MemberReference offset MemberReference length getZeroTerminatedByteArray newTaintedString	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair required Literal 0 ElementValuePair optional Literal 1 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block IfStatement MethodInvocation block isGiven BlockStatement IfStatement BinaryOperation != MemberReference args length Literal 0 BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "wrong number of arguments" newArgumentError getRuntime StatementExpression Assignment MemberReference MethodInvocation block getProcObject = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation RubyProc MethodInvocation context getRuntime MemberReference block MemberReference block type newProc = BlockStatement IfStatement BinaryOperation == MemberReference args length Literal 1 BlockStatement StatementExpression Assignment MemberReference MemberReference ArraySelector Literal 0 args = IfStatement BinaryOperation != MemberReference args length Literal 0 BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "wrong number of arguments" newArgumentError getRuntime ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "trace_var" ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject trace_var FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block IfStatement BinaryOperation == MemberReference args length Literal 0 ThrowStatement MethodInvocation context MethodInvocation Literal 0 Literal 1 newArgumentError getRuntime LocalVariableDeclaration ReferenceType RubyProc VariableDeclarator proc Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator var TernaryExpression BinaryOperation > MemberReference args length Literal 1 MemberReference ArraySelector Literal 0 MethodInvocation toString args Literal null IfStatement BinaryOperation != MethodInvocation var Literal 0 charAt Literal '$' ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime IfStatement BinaryOperation == MemberReference args length Literal 1 StatementExpression Assignment MemberReference proc MethodInvocation RubyProc MethodInvocation context getRuntime MemberReference block MemberReference Block.Type PROC newProc = IfStatement BinaryOperation == MemberReference args length Literal 2 BlockStatement StatementExpression Assignment MemberReference proc Cast ReferenceType RubyProc MethodInvocation TypeConverter MemberReference ArraySelector Literal 1 args MethodInvocation context MethodInvocation getProc getRuntime Literal "to_proc" Literal true convertToType = StatementExpression MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation MemberReference var MemberReference proc setTraceVar getRuntime ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public visitFieldInsn FormalParameter BasicType int arg0 FormalParameter ReferenceType String arg1 FormalParameter ReferenceType String arg2 FormalParameter ReferenceType String arg3 StatementExpression MethodInvocation MethodInvocation MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 visitFieldInsn getMethodVisitor	0
MethodDeclaration Modifier public static BasicType int toLower FormalParameter ReferenceType Encoding enc FormalParameter BasicType int c ReturnStatement TernaryExpression MethodInvocation Encoding MemberReference c isAscii MemberReference AsciiTables ArraySelector MemberReference c ToLowerCaseTable MemberReference c	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator arg MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock getArgsNode LocalVariableDeclaration ReferenceType Block VariableDeclarator block MethodInvocation RuntimeHelpers MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference aBlock getBlock IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyArray BlockStatement LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator nodes Cast ReferenceType RubyArray MemberReference arg SwitchStatement MethodInvocation nodes size SwitchStatementCase Literal 0 ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MemberReference block call SwitchStatementCase Literal 1 ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation nodes Literal 0 eltInternal MemberReference block call SwitchStatementCase Literal 2 ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation nodes Literal 0 eltInternal MethodInvocation nodes Literal 1 eltInternal MemberReference block call SwitchStatementCase Literal 3 ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation nodes Literal 0 eltInternal MethodInvocation nodes Literal 1 eltInternal MethodInvocation nodes Literal 2 eltInternal MemberReference block call SwitchStatementCase ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation nodes toJavaArrayMaybeUnsafe MemberReference block call ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MemberReference arg MemberReference block call	0
MethodDeclaration Modifier final static ReferenceType AllocatedNativeMemoryIO allocateAligned FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int size FormalParameter BasicType int align FormalParameter BasicType boolean clear LocalVariableDeclaration Modifier final BasicType long VariableDeclarator address MethodInvocation IO BinaryOperation - BinaryOperation + MemberReference size MemberReference align Literal 1 MemberReference clear allocateMemory IfStatement BinaryOperation == MemberReference address Literal 0 BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "failed to " MemberReference size Literal " bytes of native memory" newRuntimeError TryStatement ReturnStatement ClassCreator ReferenceType AllocatedNativeMemoryIO MemberReference runtime MemberReference address MemberReference size MemberReference align CatchClause CatchClauseParameter Throwable t StatementExpression MethodInvocation IO MemberReference address freeMemory ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference t	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "count" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject count FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator table ArrayCreator BasicType boolean MemberReference TRANS_SIZE StatementExpression MethodInvocation arg MethodInvocation MemberReference table Literal true trSetupTable convertToString ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference table countCommon	0
MethodDeclaration call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg IfStatement BinaryOperation instanceof MemberReference iter ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference iter MethodInvocation RubyFixnum MethodInvocation context getRuntime BinaryOperation - Cast ReferenceType RubyFixnum MemberReference iter Literal 1 newFixnum = BlockStatement StatementExpression Assignment MemberReference iter MethodInvocation iter MemberReference context Literal "-" MethodInvocation RubyFixnum MethodInvocation context getRuntime one callMethod = IfStatement BinaryOperation == MemberReference iter MethodInvocation RubyFixnum MethodInvocation context getRuntime zero BlockStatement StatementExpression MethodInvocation block MemberReference context MemberReference arg yield StatementExpression Assignment MemberReference iter MemberReference step =	0
MethodDeclaration Modifier public encode FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject o FormalParameter ReferenceType ByteList result IfStatement BinaryOperation == MemberReference Platform BYTE_ORDER MemberReference Platform BIG_ENDIAN StatementExpression MethodInvocation MemberReference result MethodInvocation MemberReference runtime MemberReference o StatementExpression MethodInvocation MemberReference result MethodInvocation MemberReference runtime MemberReference o	1
MethodDeclaration Modifier public aload FormalParameter BasicType int arg0 StatementExpression MethodInvocation MethodInvocation MemberReference ALOAD MemberReference arg0 visitVarInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation block MethodInvocation isTrue MemberReference ctx MemberReference larg yield BlockStatement SynchronizedStatement MemberReference result StatementExpression MethodInvocation result MemberReference larg append ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier final BasicType int getReferenceFieldCount ReturnStatement MemberReference referenceFieldCount	1
MethodDeclaration Modifier public BasicType boolean receiveFalse FormalParameter BasicType boolean f ReturnStatement MethodInvocation vri MemberReference f receiveFalse	0
MethodDeclaration Modifier public setAutoRelease FormalParameter BasicType boolean release StatementExpression Assignment MemberReference holder autorelease MemberReference release =	0
MethodDeclaration Modifier private declareField FormalParameter ReferenceType String field IfStatement MethodInvocation ! MemberReference fieldSet MethodInvocation MemberReference field contains clsData BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference field MethodInvocation ClassReference ReferenceType Object ci Literal null Literal null visitField cls StatementExpression MethodInvocation MemberReference fieldSet MethodInvocation MemberReference field add clsData	0
MethodDeclaration Modifier public BasicType int getLength ReturnStatement MemberReference realLength	0
MethodDeclaration Modifier public static ReferenceType String sig FormalParameter ReferenceType Class retval FormalParameter ReferenceType Class params ReturnStatement BinaryOperation + MethodInvocation MemberReference params sigParams MethodInvocation MemberReference retval ci	0
MethodDeclaration Modifier public ReferenceType RaiseException FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation getSystemStackError MemberReference message newRaiseException	0
MethodDeclaration Modifier public Annotation Override BasicType int hashCode ReturnStatement BinaryOperation * Literal 67 MethodInvocation MethodInvocation hashCode getMemoryIO	0
MethodDeclaration Modifier public ReferenceType Label ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "===" ElementValuePair required Literal 1 ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject eqq FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType RubyString VariableDeclarator str IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyString BlockStatement StatementExpression Assignment MemberReference str Cast ReferenceType RubyString MemberReference arg = BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation arg checkStringType IfStatement MethodInvocation tmp isNil BlockStatement StatementExpression MethodInvocation context MethodInvocation MemberReference tmp setBackRef getCurrentScope ReturnStatement MethodInvocation runtime getFalse StatementExpression Assignment MemberReference str Cast ReferenceType RubyString MemberReference tmp = LocalVariableDeclaration BasicType int VariableDeclarator start MethodInvocation MemberReference context MemberReference str Literal 0 Literal false search ReturnStatement TernaryExpression BinaryOperation < MemberReference start Literal 0 MethodInvocation runtime getFalse MethodInvocation runtime getTrue	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "remove_class_variable" ElementValuePair required Literal 1 ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject remove_class_variable FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject name LocalVariableDeclaration ReferenceType String VariableDeclarator javaName MethodInvocation MethodInvocation name asJavaString validateClassVariable LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value IfStatement BinaryOperation != Assignment MemberReference value MethodInvocation MemberReference javaName deleteClassVariable = Literal null BlockStatement ReturnStatement MemberReference value IfStatement MethodInvocation MemberReference javaName fastIsClassVarDefined BlockStatement ThrowStatement MethodInvocation MemberReference javaName cannotRemoveError ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "class variable " MemberReference javaName Literal " not defined for " MethodInvocation getName MemberReference javaName newNameError getRuntime	1
MethodDeclaration Modifier public ReferenceType IRubyObject aref FormalParameter ReferenceType IRubyObject key ReturnStatement MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime MemberReference key op_aref	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation get	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "undef_method" ElementValuePair required Literal 1 ElementValuePair rest Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType RubyModule undef_method FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference ArraySelector MemberReference i MethodInvocation asJavaString args undef ReturnStatement This	1
MethodDeclaration Modifier public preExecuteUnder FormalParameter ReferenceType RubyModule executeUnderClass FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Frame VariableDeclarator frame MethodInvocation getCurrentFrame StatementExpression MethodInvocation MemberReference executeUnderClass pushRubyClass LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation getCurrentScope LocalVariableDeclaration ReferenceType VariableDeclarator sScope ClassCreator ReferenceType BlockStaticScope MethodInvocation scope getStaticScope StatementExpression MethodInvocation sScope MemberReference executeUnderClass setModule StatementExpression MethodInvocation MethodInvocation DynamicScope MemberReference sScope MemberReference scope pushScope StatementExpression MethodInvocation MethodInvocation frame MethodInvocation frame getName MethodInvocation frame getSelf MemberReference block pushCallFrame StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation getVisibility getPreviousFrame setVisibility getCurrentFrame	1
MethodDeclaration Modifier public Annotation Override BasicType int getOffset ReturnStatement BinaryOperation + BinaryOperation - MemberReference index MemberReference begin MemberReference offset	0
MethodDeclaration Modifier public setMode FormalParameter BasicType int modes StatementExpression Assignment This MemberReference mode MemberReference modes =	0
MethodDeclaration Modifier public compileUndef FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr StatementExpression MethodInvocation context Cast ReferenceType UndefNode MemberReference node undefMethod IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public setAttached FormalParameter ReferenceType IRubyObject attached StatementExpression Assignment This MemberReference attached ClassCreator ReferenceType SoftReference TypeArgument ReferenceType IRubyObject MemberReference attached =	1
MethodDeclaration Modifier public getTempLocal FormalParameter BasicType int index StatementExpression MethodInvocation method MemberReference index aload	0
MethodDeclaration Modifier public Annotation Override unread FormalParameter BasicType int c IfStatement BinaryOperation == MemberReference c MemberReference RubyYaccLexer EOF ReturnStatement StatementExpression MemberReference -- index IfStatement BinaryOperation == MemberReference c Literal '\n' StatementExpression MemberReference -- line	1
MethodDeclaration Modifier private IfStatement BinaryOperation == MemberReference variableValues Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation staticScope getNumberOfVariables StatementExpression Assignment MemberReference variableValues ArrayCreator ReferenceType IRubyObject MemberReference size =	0
MethodDeclaration Modifier public final ReferenceType BigInteger FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 2 MemberReference name getBigInteger	0
MethodDeclaration Modifier private final ReferenceType ClosureInfo newClosureInfo FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType CallbackInfo cbInfo ReturnStatement ClassCreator ReferenceType ClosureInfo MemberReference runtime MethodInvocation cbInfo getReturnType MethodInvocation cbInfo getParameterTypes MemberReference CallingConvention DEFAULT	1
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject values FormalParameter ReferenceType Block block LocalVariableDeclaration BasicType int VariableDeclarator length TernaryExpression BinaryOperation == MemberReference values Literal null Literal 0 MemberReference values length SwitchStatement MemberReference length SwitchStatementCase Literal 0 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block assign BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector Literal 0 values MemberReference block assign BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector Literal 0 values MemberReference ArraySelector Literal 1 values MemberReference block assign BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector Literal 0 values MemberReference ArraySelector Literal 1 values MemberReference ArraySelector Literal 2 values MemberReference block assign BreakStatement SwitchStatementCase StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector Literal 0 values MemberReference block Literal false assign StatementExpression MethodInvocation parameter2 MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector Literal 1 values MemberReference block Literal false assign StatementExpression MethodInvocation parameter3 MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector Literal 2 values MemberReference block Literal false assign StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime MethodInvocation MemberReference values Literal 3 shiftedArray MemberReference block Literal true assign BreakStatement	1
MethodDeclaration Modifier protected internalReset StatementExpression MethodInvocation flater reset	0
MethodDeclaration Modifier private final ReferenceType IRubyObject invoke FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 IfStatement BinaryOperation && MethodInvocation c1 MemberReference context MemberReference arg1 isConvertible MethodInvocation c2 MemberReference context MemberReference arg2 isConvertible BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator retval MethodInvocation invoker MemberReference function MethodInvocation c1 MemberReference context MemberReference arg1 intValue MethodInvocation c2 MemberReference context MemberReference arg2 intValue invokeIIrI ReturnStatement MethodInvocation resultConverter MemberReference context MemberReference retval fromNative BlockStatement LocalVariableDeclaration ReferenceType HeapInvocationBuffer VariableDeclarator buffer ClassCreator ReferenceType HeapInvocationBuffer MemberReference function StatementExpression MethodInvocation m1 MemberReference context MemberReference buffer MemberReference arg1 marshal StatementExpression MethodInvocation m2 MemberReference context MemberReference buffer MemberReference arg2 marshal ReturnStatement MethodInvocation resultConverter MemberReference context MethodInvocation invoker MemberReference function MemberReference buffer invokeInt fromNative	1
MethodDeclaration Modifier public static ReferenceType RubyClass createCallbackClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule module LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cbClass MethodInvocation module Literal "Callback" MethodInvocation module Literal "Pointer" fastGetClass MemberReference ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR defineClassUnder StatementExpression MethodInvocation cbClass ClassReference ReferenceType Callback defineAnnotatedMethods StatementExpression MethodInvocation cbClass ClassReference ReferenceType Callback defineAnnotatedConstants ReturnStatement MemberReference cbClass	1
MethodDeclaration Modifier private setupInterfaceProxy FormalParameter Modifier final ReferenceType RubyClass proxy AssertStatement MethodInvocation MethodInvocation isInterface javaClass AssertStatement MethodInvocation proxyLock isHeldByCurrentThread AssertStatement BinaryOperation == This MemberReference proxyClass Literal null StatementExpression Assignment This MemberReference proxyClass MemberReference proxy =	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isClass ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType ArrayNode newArrayNode FormalParameter ReferenceType ISourcePosition position FormalParameter ReferenceType Node ReturnStatement ClassCreator ReferenceType ArrayNode MemberReference position MethodInvocation MemberReference makeNullNil	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation MethodInvocation stat newFixnum getRuntime	0
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation Node MemberReference varNode MemberReference bodyNode createList	0
MethodDeclaration post FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation context	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation Node MemberReference conditionNode MemberReference bodyNode createList	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "finite?" ReferenceType IRubyObject finite_p IfStatement BinaryOperation || MethodInvocation Double MemberReference value isInfinite MethodInvocation Double MemberReference value isNaN BlockStatement ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime ReturnStatement MethodInvocation MethodInvocation getTrue getRuntime	1
MethodDeclaration Modifier private ReferenceType VariableAccessor verifyAccessor FormalParameter ReferenceType RubyClass cls LocalVariableDeclaration ReferenceType VariableAccessor VariableDeclarator localAccessor MemberReference accessor IfStatement BinaryOperation != MethodInvocation localAccessor getClassId MethodInvocation cls hashCode BlockStatement StatementExpression Assignment MemberReference localAccessor MethodInvocation cls MemberReference name getVariableAccessorForWrite = StatementExpression Assignment MemberReference accessor MemberReference localAccessor = ReturnStatement MemberReference localAccessor	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "codepoints" ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject codepoints FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block IfStatement MethodInvocation ! block isGiven ReturnStatement MethodInvocation MethodInvocation context getRuntime This Literal "codepoints" enumeratorize ReturnStatement TernaryExpression MethodInvocation singleByteOptimizable MethodInvocation MemberReference context MemberReference block each_byte MethodInvocation MemberReference context MemberReference block each_codepointCommon	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement MethodInvocation object MemberReference context MemberReference method MemberReference methodArgs MemberReference block callMethod	0
MethodDeclaration Modifier private ReferenceType IRubyObject handleReturnJump FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType JumpException ReferenceType ReturnJump rj FormalParameter ReferenceType JumpTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation rj getTarget IfStatement BinaryOperation && BinaryOperation == MemberReference target MemberReference BinaryOperation == MemberReference block type MemberReference Block.Type LAMBDA ReturnStatement Cast ReferenceType IRubyObject MethodInvocation rj getValue IfStatement BinaryOperation == MemberReference type MemberReference Block.Type THREAD BlockStatement ThrowStatement MethodInvocation runtime Literal "return can't jump across threads" newThreadError ThrowStatement MemberReference rj	1
MethodDeclaration Modifier final public static BasicType short yyCheck ReturnStatement MethodInvocation MethodInvocation yyCheck1 MethodInvocation yyCheck2 MethodInvocation yyCheck3 MethodInvocation yyCheck4 combine	0
MethodDeclaration Modifier public aaload StatementExpression MethodInvocation MethodInvocation MemberReference AALOAD visitInsn getMethodVisitor	0
MethodDeclaration Modifier public final BasicType int indexOf FormalParameter BasicType long offset FormalParameter BasicType byte value ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier private final static BasicType int getAddress FormalParameter ReferenceType Pointer ptr ReturnStatement Cast BasicType int Cast ReferenceType DirectMemoryIO MethodInvocation ptr getMemoryIO	1
MethodDeclaration Modifier private dotNode FormalParameter ReferenceType DotNode node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node isExclusive append MethodInvocation Literal " " append MethodInvocation MethodInvocation node isLiteral append Literal " " append	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject seteuid FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MethodInvocation recv getRuntime MemberReference arg euid_set	1
MethodDeclaration Modifier public setJavaName FormalParameter ReferenceType String javaName StatementExpression Assignment This MemberReference javaName MemberReference javaName =	0
MethodDeclaration Modifier public final ReferenceType IRubyObject store FormalParameter BasicType long index FormalParameter ReferenceType IRubyObject value IfStatement BinaryOperation && BinaryOperation < MemberReference index Literal 0 BinaryOperation < Assignment MemberReference index MemberReference realLength += Literal 0 ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "index " BinaryOperation - MemberReference index MemberReference realLength Literal " out of array" newIndexError getRuntime StatementExpression MethodInvocation modify IfStatement BinaryOperation >= MemberReference index MemberReference realLength BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator valuesLength BinaryOperation - MemberReference values length MemberReference begin IfStatement BinaryOperation >= MemberReference index MemberReference valuesLength StatementExpression MethodInvocation MemberReference index MemberReference valuesLength storeRealloc StatementExpression Assignment MemberReference realLength BinaryOperation + Cast BasicType int MemberReference index Literal 1 = TryStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference begin Cast BasicType int MemberReference index values MemberReference value = CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification ReturnStatement MemberReference value	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyArray declared_fields ReturnStatement MethodInvocation MethodInvocation MethodInvocation getDeclaredFields javaClass buildFieldResults	1
MethodDeclaration Modifier private static BasicType float FormalParameter ReferenceType ByteBuffer encode ReturnStatement MethodInvocation Float MethodInvocation MemberReference encode	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType StructLayoutBuilder MemberReference runtime MemberReference klass	1
MethodDeclaration Modifier public ReferenceType Class getAnnotatedMethodClass FormalParameter ReferenceType JavaMethodDescriptor desc Exception LocalVariableDeclaration ReferenceType String VariableDeclarator javaMethodName MemberReference desc name IfStatement MethodInvocation ! Modifier MethodInvocation desc MethodInvocation getModifiers getDeclaringClass isPublic BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + Literal "warning: binding non-public class " MemberReference desc declaringClassName Literal "; reflected handles won't work" println LocalVariableDeclaration ReferenceType String VariableDeclarator generatedClassName MethodInvocation CodegenUtils MemberReference javaMethodName MemberReference desc declaringClassName MemberReference desc isStatic MemberReference desc actualRequired MemberReference desc optional Literal false MethodInvocation desc.anno frame getAnnotatedBindingClassName IfStatement MemberReference RubyInstanceConfig FULL_TRACE_ENABLED BlockStatement StatementExpression Assignment MemberReference generatedClassName Literal "_DBG" += LocalVariableDeclaration ReferenceType String VariableDeclarator generatedClassPath MethodInvocation generatedClassName Literal '.' Literal '/' replace SynchronizedStatement MemberReference classLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference generatedClassName MethodInvocation desc getDeclaringClass tryClass IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator specificArity Literal - 1 IfStatement BinaryOperation && BinaryOperation == MemberReference desc optional Literal 0 MemberReference ! desc rest BlockStatement IfStatement BinaryOperation == MemberReference desc required Literal 0 BlockStatement IfStatement BinaryOperation <= MemberReference desc actualRequired Literal 3 BlockStatement StatementExpression Assignment MemberReference specificArity MemberReference desc actualRequired = BlockStatement StatementExpression Assignment MemberReference specificArity Literal - 1 = IfStatement BinaryOperation && BinaryOperation >= MemberReference desc required Literal 0 BinaryOperation <= MemberReference desc required Literal 3 BlockStatement StatementExpression Assignment MemberReference specificArity MemberReference desc required = LocalVariableDeclaration BasicType boolean VariableDeclarator block MemberReference desc hasBlock LocalVariableDeclaration ReferenceType String VariableDeclarator superClass MethodInvocation MethodInvocation MemberReference specificArity MemberReference block selectSuperClass p LocalVariableDeclaration BasicType int VariableDeclarator dotIndex MethodInvocation desc.declaringClassName Literal '.' lastIndexOf LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference generatedClassPath BinaryOperation + BinaryOperation + MethodInvocation desc.declaringClassName BinaryOperation + MemberReference dotIndex Literal 1 substring Literal "#" MemberReference desc name MemberReference superClass createJavaMethodCtor LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator mv Literal null StatementExpression Assignment MemberReference mv MethodInvocation MemberReference cw Literal "call" MemberReference specificArity MemberReference block beginMethod = StatementExpression MethodInvocation mv visitCode LocalVariableDeclaration ReferenceType Label VariableDeclarator line ClassCreator ReferenceType Label StatementExpression MethodInvocation mv Literal 0 MemberReference line visitLineNumber StatementExpression MethodInvocation MemberReference desc MemberReference mv MemberReference superClass MemberReference specificArity MemberReference block createAnnotatedMethodInvocation StatementExpression MethodInvocation MemberReference mv endMethod StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference generatedClassName endClass = ReturnStatement MemberReference c	1
MethodDeclaration Modifier public checkExpression FormalParameter ReferenceType Node node IfStatement BinaryOperation && MethodInvocation warnings isVerbose MethodInvocation ! MemberReference node isExpression BlockStatement StatementExpression MethodInvocation warnings MemberReference ID VOID_VALUE_EXPRESSION MethodInvocation node getPosition Literal "void value expression" warning	1
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object other IfStatement BinaryOperation == This MemberReference other BlockStatement ReturnStatement Literal true IfStatement BinaryOperation instanceof MemberReference other ReferenceType Binding BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Binding VariableDeclarator bOther Cast ReferenceType Binding MemberReference other ReturnStatement BinaryOperation && BinaryOperation == This MemberReference self MemberReference bOther self BinaryOperation == This MemberReference MemberReference bOther	1
MethodDeclaration Modifier protected openInternal FormalParameter ReferenceType String path FormalParameter ReferenceType String modeString FormalParameter ReferenceType ModeFlags modes InvalidValueException StatementExpression Assignment MemberReference openFile ClassCreator ReferenceType OpenFile = StatementExpression MethodInvocation openFile MethodInvocation modes getOpenFileFlags setMode StatementExpression MethodInvocation openFile MemberReference path setPath StatementExpression MethodInvocation openFile MethodInvocation MemberReference path MemberReference modeString fopen setMainStream StatementExpression MethodInvocation MethodInvocation openFile MethodInvocation getDescriptor getMainStream registerDescriptor	0
MethodDeclaration Modifier public BasicType boolean eql FormalParameter ReferenceType IRubyObject otherValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ReturnStatement BinaryOperation == MemberReference otherValue MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock	0
MethodDeclaration Modifier protected Annotation Override ReferenceType IRubyObject constantTableFetch FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference name constantTableFetch	0
MethodDeclaration * public Operand buildVAlias(Node node, IR_Scope m) * VAliasNode valiasNode = (VAliasNode) * m.aliasGlobal(valiasNode.getNewName(), * */ Modifier public ReferenceType Operand buildVCall FormalParameter ReferenceType VCallNode node FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Operand VariableDeclarator args ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Operand StatementExpression MethodInvocation args MethodInvocation s getSelf add LocalVariableDeclaration ReferenceType Variable VariableDeclarator callResult MethodInvocation s getNewVariable LocalVariableDeclaration ReferenceType IR_Instr VariableDeclarator callInstr ClassCreator ReferenceType CALL_Instr MemberReference callResult ClassCreator ReferenceType MethAddr MethodInvocation node getName MethodInvocation args ArrayCreator ReferenceType Operand MethodInvocation args size toArray Literal null StatementExpression MethodInvocation s MemberReference callInstr addInstr ReturnStatement MemberReference callResult	1
MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value IfStatement MethodInvocation block MethodInvocation isTrue MemberReference context MethodInvocation RubyArray MemberReference runtime MemberReference key MemberReference value newArray Literal null Literal null Literal true yield BlockStatement StatementExpression MethodInvocation self MemberReference context MemberReference key MemberReference Block NULL_BLOCK delete	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType Map TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand valueMap ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference _elts length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i _elts MemberReference ArraySelector MemberReference i MethodInvocation MemberReference valueMap _elts = ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor visitor ReturnStatement MethodInvocation visitor This	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject values FormalParameter ReferenceType Block block StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime MemberReference values MemberReference block Literal true assign	0
MethodDeclaration Modifier public synchronized BasicType int read IOException BadDescriptorException TryStatement StatementExpression MethodInvocation descriptor checkOpen IfStatement BinaryOperation >= MemberReference ungotc Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c MemberReference ungotc StatementExpression Assignment MemberReference ungotc Literal - 1 = ReturnStatement MemberReference c ReturnStatement MethodInvocation bufferedRead CatchClause CatchClauseParameter EOFException e StatementExpression Assignment MemberReference eof Literal true = ReturnStatement Literal - 1	0
MethodDeclaration Modifier public ReferenceType IRubyObject getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public ReferenceType Object case388_line1470 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType StrNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation ByteList Literal "" create = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "Float" ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType RubyFloat new_float FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject object IfStatement BinaryOperation instanceof MemberReference object ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation RubyFloat MethodInvocation object getRuntime Cast ReferenceType RubyFixnum MemberReference object newFloat IfStatement BinaryOperation instanceof MemberReference object ReferenceType RubyFloat BlockStatement ReturnStatement Cast ReferenceType RubyFloat MemberReference object IfStatement BinaryOperation instanceof MemberReference object ReferenceType RubyBignum BlockStatement ReturnStatement MethodInvocation RubyFloat MethodInvocation object getRuntime MethodInvocation RubyBignum Cast ReferenceType RubyBignum MemberReference object big2dbl newFloat IfStatement BinaryOperation instanceof MemberReference object ReferenceType RubyString BlockStatement IfStatement BinaryOperation == Cast ReferenceType RubyString MemberReference object Literal 0 BlockStatement ThrowStatement MethodInvocation recv MethodInvocation BinaryOperation + Literal "invalid value for Float(): " MethodInvocation object inspect newArgumentError getRuntime ReturnStatement MethodInvocation RubyNumeric MethodInvocation recv getRuntime Cast ReferenceType RubyString MemberReference object Literal true str2fnum IfStatement MethodInvocation object isNil BlockStatement ThrowStatement MethodInvocation recv MethodInvocation Literal "can't convert nil into Float" newTypeError getRuntime BlockStatement LocalVariableDeclaration ReferenceType RubyFloat VariableDeclarator rFloat Cast ReferenceType RubyFloat MethodInvocation TypeConverter MemberReference object MethodInvocation recv MethodInvocation getRuntime Literal "to_f" convertToType IfStatement MethodInvocation Double MethodInvocation rFloat isNaN ThrowStatement MethodInvocation recv MethodInvocation Literal "invalid value for Float()" newArgumentError getRuntime ReturnStatement MemberReference rFloat	1
MethodDeclaration Modifier public ReferenceType IRubyObject each_lineCommon FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject sep FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation sep isNil BlockStatement StatementExpression MethodInvocation block MemberReference context This yield ReturnStatement This LocalVariableDeclaration ReferenceType RubyString VariableDeclarator sepStr MethodInvocation sep convertToString LocalVariableDeclaration ReferenceType ByteList VariableDeclarator sepValue MemberReference sepStr value LocalVariableDeclaration BasicType int VariableDeclarator rslen MemberReference sepValue realSize LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator newline IfStatement BinaryOperation == MemberReference rslen Literal 0 BlockStatement StatementExpression Assignment MemberReference newline Literal '\n' = BlockStatement StatementExpression Assignment MemberReference newline MemberReference sepValue ArraySelector BinaryOperation - BinaryOperation + MemberReference sepValue begin MemberReference rslen Literal 1 bytes = LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference value realSize LocalVariableDeclaration BasicType int VariableDeclarator ptr MemberReference p VariableDeclarator s MemberReference p LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference value realSize LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes StatementExpression Assignment MemberReference p MemberReference rslen += ForStatement ForControl BinaryOperation < MemberReference p MemberReference end MemberReference ++ p BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference rslen Literal 0 BinaryOperation == MemberReference ArraySelector MemberReference p bytes Literal '\n' BlockStatement IfStatement BinaryOperation != MemberReference ArraySelector MemberReference ++ p bytes Literal '\n' ContinueStatement WhileStatement BinaryOperation && BinaryOperation < MemberReference p MemberReference end BinaryOperation == MemberReference ArraySelector MemberReference p bytes Literal '\n' StatementExpression MemberReference ++ p IfStatement BinaryOperation && BinaryOperation && BinaryOperation < MemberReference ptr MemberReference p BinaryOperation == MemberReference ArraySelector BinaryOperation - MemberReference p Literal 1 bytes MemberReference newline BinaryOperation || BinaryOperation <= MemberReference rslen Literal 1 BinaryOperation == MethodInvocation ByteList MemberReference sepValue bytes MemberReference sepValue begin MemberReference rslen MemberReference bytes BinaryOperation - MemberReference p MemberReference rslen MemberReference rslen memcmp Literal 0 BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation MethodInvocation This infectBy MemberReference runtime BinaryOperation - MemberReference s MemberReference ptr BinaryOperation - MemberReference p MemberReference s makeShared yield StatementExpression MethodInvocation MemberReference bytes MemberReference len modifyCheck StatementExpression Assignment MemberReference s MemberReference p = IfStatement BinaryOperation != MemberReference s MemberReference end BlockStatement IfStatement BinaryOperation > MemberReference p MemberReference end StatementExpression Assignment MemberReference p MemberReference end = StatementExpression MethodInvocation block MemberReference context MethodInvocation MethodInvocation This infectBy MemberReference runtime BinaryOperation - MemberReference s MemberReference ptr BinaryOperation - MemberReference p MemberReference s makeShared yield ReturnStatement This	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType DateTime dt StatementExpression Assignment This MemberReference dt MemberReference dt =	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block IfStatement MethodInvocation block isGiven BlockStatement StatementExpression MethodInvocation MethodInvocation self getRuntime createJavaMethods LocalVariableDeclaration ReferenceType JavaProxy VariableDeclarator proxy MethodInvocation MemberReference self castJavaProxy LocalVariableDeclaration ReferenceType RubyProc VariableDeclarator proc MethodInvocation RubyProc MethodInvocation self getRuntime MemberReference block MemberReference Block.Type LAMBDA newProc LocalVariableDeclaration ReferenceType JavaMethod VariableDeclarator method Cast ReferenceType JavaMethod MethodInvocation MemberReference self MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference proc LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg0 MethodInvocation MemberReference context MemberReference arg0 MemberReference method Literal 0 convertArg LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg1 MethodInvocation MemberReference context MemberReference arg1 MemberReference method Literal 1 convertArg LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg2 MethodInvocation MemberReference context MemberReference arg2 MemberReference method Literal 2 convertArg LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg3 MethodInvocation MemberReference context MemberReference proc MemberReference method Literal 3 convertArg ReturnStatement MethodInvocation method MethodInvocation proxy getObject MemberReference cArg0 MemberReference cArg1 MemberReference cArg2 MemberReference cArg3 invokeDirect BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 call	0
MethodDeclaration Modifier private static populateDeclaredMethods FormalParameter ReferenceType RubyModule rubyMod FormalParameter Modifier final ReferenceType Class cls FormalParameter BasicType boolean includeStatic SecurityException LocalVariableDeclaration ReferenceType Method VariableDeclarator methods MethodInvocation cls getDeclaredMethods ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType Method VariableDeclarator method MemberReference methods BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation method getName LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator target IfStatement MethodInvocation ! Modifier MethodInvocation method getModifiers isPublic BlockStatement ContinueStatement IfStatement MethodInvocation Modifier MethodInvocation method getModifiers isStatic BlockStatement IfStatement MemberReference ! includeStatic ContinueStatement StatementExpression Assignment MemberReference target MethodInvocation rubyMod getSingletonClass = BlockStatement StatementExpression Assignment MemberReference target MemberReference rubyMod = LocalVariableDeclaration ReferenceType VariableDeclarator factory MethodInvocation MethodInvocation method getReturnType getMethodFactory LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator dynMethod MethodInvocation factory MemberReference target MemberReference method createMethod IfStatement BinaryOperation == MethodInvocation target MethodInvocation MemberReference name get getMethods Literal null BlockStatement StatementExpression MethodInvocation target MemberReference name MemberReference dynMethod addMethod StatementExpression Assignment MemberReference name BinaryOperation + MemberReference name MethodInvocation MethodInvocation method getParameterTypes prettyParams = StatementExpression MethodInvocation target MemberReference name MemberReference dynMethod addMethod	1
MethodDeclaration Modifier public final put FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation io MemberReference offset Cast BasicType short MethodInvocation Util MemberReference value uint16Value putShort	1
MethodDeclaration Modifier public FormalParameter ReferenceType provider IfStatement BinaryOperation != MemberReference classProviders Literal null BlockStatement StatementExpression MethodInvocation classProviders MemberReference provider remove	0
MethodDeclaration Modifier private ReferenceType Class tryClass FormalParameter ReferenceType String name TryStatement ReturnStatement MethodInvocation classLoader MemberReference name loadClass CatchClause CatchClauseParameter Exception e ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Encoding getDefaultInternalEncoding ReturnStatement MemberReference defaultInternalEncoding	0
MethodDeclaration Modifier public ReferenceType Object case6_line311 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getPosition newline_node = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static ReferenceType Ruby getDefaultInstance ReturnStatement MethodInvocation newInstance	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator newClass MethodInvocation runtime Literal MethodInvocation runtime getObject MethodInvocation runtime MethodInvocation getAllocator getObject defineClass StatementExpression MethodInvocation ClassReference ReferenceType RubyObject MethodInvocation newClass MethodInvocation getClass assertEquals StatementExpression Assignment MemberReference MyRubyObjectSubclass currentRuntime MemberReference runtime = StatementExpression MethodInvocation newClass ClassReference ReferenceType MyRubyObjectSubclass StatementExpression MethodInvocation ClassReference ReferenceType MyRubyObjectSubclass MethodInvocation newClass MethodInvocation getClass assertEquals	0
MethodDeclaration Modifier private ReferenceType IRubyObject subpat19 FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyRegexp regex IfStatement BinaryOperation >= MethodInvocation regex MemberReference context This Literal 0 Literal false search19 Literal 0 BlockStatement ReturnStatement MethodInvocation RubyRegexp Literal 0 MethodInvocation context MethodInvocation MemberReference runtime getBackRef getCurrentScope nth_match ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public setKlazz FormalParameter ReferenceType RubyModule klazz StatementExpression Assignment This MemberReference klazz MemberReference klazz =	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject sysaccept FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MemberReference context accept	0
MethodDeclaration Modifier public ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klass FormalParameter BasicType boolean aValue FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type IfStatement BinaryOperation == MemberReference klass Literal null BlockStatement StatementExpression Assignment MemberReference self MethodInvocation binding getSelf = StatementExpression MethodInvocation binding MethodInvocation MemberReference self setSelf getFrame LocalVariableDeclaration ReferenceType Frame VariableDeclarator lastFrame MethodInvocation MemberReference context MemberReference klass MemberReference binding pre TryStatement WhileStatement Literal true BlockStatement TryStatement ReturnStatement MethodInvocation MemberReference value MemberReference method MemberReference self MemberReference Block NULL_BLOCK callback CatchClause CatchClauseParameter JumpException.RedoJump rj StatementExpression MethodInvocation context pollThreadEvents CatchClause CatchClauseParameter JumpException.BreakJump bj IfStatement BinaryOperation == MethodInvocation bj getTarget Literal null BlockStatement StatementExpression MethodInvocation bj This setTarget ThrowStatement MemberReference bj CatchClause CatchClauseParameter JumpException.NextJump nj ReturnStatement Cast ReferenceType IRubyObject MethodInvocation nj getValue StatementExpression MethodInvocation MemberReference context MemberReference binding MemberReference lastFrame post	1
MethodDeclaration Modifier private static BasicType int argsHashCode FormalParameter ReferenceType IRubyObject a0 FormalParameter ReferenceType IRubyObject a1 ReturnStatement BinaryOperation + BinaryOperation * Literal 31 MethodInvocation MemberReference a0 argsHashCode MethodInvocation MemberReference a1 classHashCode	0
MethodDeclaration Modifier public final BasicType boolean isNull ReturnStatement BinaryOperation == MemberReference address Literal 0	0
MethodDeclaration Modifier public ReferenceType Object getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "bytes" ElementValuePair frame Literal true ReferenceType IRubyObject bytes FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block each_byte MethodInvocation MethodInvocation context getRuntime This Literal "bytes" enumeratorize	0
MethodDeclaration Modifier public final ReferenceType IRubyObject setVariable FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int i FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject object FormalParameter ReferenceType IRubyObject value ReturnStatement MethodInvocation runtimeCache MemberReference runtime MemberReference i MemberReference name MemberReference object MemberReference value setVariable	0
MethodDeclaration Modifier public static ReferenceType IRubyObject chomp FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MemberReference context MethodInvocation context getRuntime getLastlineString LocalVariableDeclaration ReferenceType RubyString VariableDeclarator dup Cast ReferenceType RubyString MethodInvocation str dup IfStatement MethodInvocation dup MethodInvocation isNil MemberReference args chomp_bang BlockStatement ReturnStatement MemberReference str StatementExpression MethodInvocation context MethodInvocation MemberReference dup setLastLine getCurrentScope ReturnStatement MemberReference dup	1
MethodDeclaration Modifier public setValue FormalParameter BasicType long value IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference Literal null = StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "to_a" Literal "to_ary" ReferenceType IRubyObject get FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator elems ArrayCreator ReferenceType IRubyObject MethodInvocation arrayType length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference elems length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i elems MethodInvocation MemberReference runtime MemberReference i get = ReturnStatement MethodInvocation RubyArray MemberReference runtime MemberReference elems newArrayNoCopy	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "acos" ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType RubyFloat acos FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x LocalVariableDeclaration BasicType double VariableDeclarator value Cast ReferenceType RubyFloat MethodInvocation RubyKernel MemberReference recv MemberReference x new_float LocalVariableDeclaration BasicType double VariableDeclarator result MethodInvocation Math MemberReference value acos StatementExpression MethodInvocation MemberReference recv MemberReference result Literal "acos" ReturnStatement MethodInvocation RubyFloat MethodInvocation recv getRuntime MemberReference result newFloat	0
MethodDeclaration Modifier public BasicType byte receiveByte FormalParameter BasicType byte b ReturnStatement MethodInvocation vri MemberReference b receiveByte	0
MethodDeclaration Modifier public Annotation Override setArgValues FormalParameter ReferenceType IRubyObject values FormalParameter BasicType int size AssertStatement BinaryOperation <= MemberReference size MemberReference SIZE MemberReference SIZE_ERROR SwitchStatement MemberReference size SwitchStatementCase Literal 2 StatementExpression Assignment MemberReference variableValueOne MemberReference ArraySelector Literal 1 values = SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference variableValueZero MemberReference ArraySelector Literal 0 values =	1
MethodDeclaration Modifier public ReferenceType Object case375_line1420 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null new_call = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case243_line955 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final clear ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public ReferenceType RubyHash each_value FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block StatementExpression MethodInvocation ClassCreator ReferenceType Visitor MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation block MemberReference context MemberReference value yield iteratorVisitAll ReturnStatement This	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "new!" ElementValuePair meta Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject newInstanceBang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject real IfStatement BinaryOperation instanceof MemberReference real ReferenceType RubyNumeric StatementExpression Assignment MemberReference real MethodInvocation MemberReference context MemberReference real f_to_i = ReturnStatement ClassCreator ReferenceType RubyComplex MethodInvocation context getRuntime MemberReference recv MemberReference real MethodInvocation RubyFixnum MethodInvocation context getRuntime zero	1
MethodDeclaration Modifier public runTest Throwable LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator script ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation script MethodInvocation Literal '\n' append Literal "require append StatementExpression MethodInvocation script MethodInvocation Literal '\n' append Literal "$silentTests = append StatementExpression MethodInvocation script MethodInvocation MethodInvocation scriptName append MethodInvocation Literal append MethodInvocation Literal '\n' append Literal append StatementExpression MethodInvocation script MethodInvocation Literal '\n' append Literal append LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator lastFailed Cast ReferenceType RubyArray MethodInvocation runtime MethodInvocation script toString BinaryOperation + MethodInvocation scriptName Literal "_generated_test.rb" executeScript IfStatement MethodInvocation ! lastFailed isEmpty BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator message Cast ReferenceType RubyString MethodInvocation lastFailed MethodInvocation lastFailed MethodInvocation getCurrentContext getRuntime Literal "to_s" callMethod StatementExpression MethodInvocation BinaryOperation + BinaryOperation + MethodInvocation scriptName Literal " failed, complete failure list follows:\n" MethodInvocation message toString fail StatementExpression MethodInvocation System.out flush	0
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This visitNewlineNode	0
MethodDeclaration Modifier public pushmethod FormalParameter ReferenceType String name StatementExpression MethodInvocation MethodInvocation MemberReference name pushmethod clsData	0
MethodDeclaration Modifier protected ReferenceType Library createLibrary FormalParameter ReferenceType SearchState state FormalParameter ReferenceType LoadServiceResource resource IfStatement BinaryOperation == MemberReference resource Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator file MemberReference state loadName IfStatement MethodInvocation file Literal ".so" endsWith BlockStatement ThrowStatement MethodInvocation runtime Literal "JRuby does not support libraries from filesystem" newLoadError IfStatement MethodInvocation file Literal ".jar" endsWith BlockStatement ReturnStatement ClassCreator ReferenceType JarredScript MemberReference resource IfStatement MethodInvocation file Literal ".class" endsWith BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference resource BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference resource MemberReference file	0
MethodDeclaration Modifier public BasicType int hash ReturnStatement MemberReference hash	0
MethodDeclaration Modifier public finish LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator initMethod MethodInvocation scriptCompiler getInitMethod LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation callSiteList size IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod dup StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initCallSites" MethodInvocation VoidClassReference ClassReference BasicType int sig invokevirtual StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "callSites" MethodInvocation ClassReference ReferenceType CallSite ci getfield ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference size Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation callSiteList MemberReference i get LocalVariableDeclaration ReferenceType CallType VariableDeclarator callType MethodInvocation callTypeList MemberReference i get StatementExpression MethodInvocation initMethod MemberReference i pushInt IfStatement MethodInvocation callType MemberReference CallType NORMAL equals BlockStatement StatementExpression MethodInvocation initMethod MemberReference name ldc StatementExpression MethodInvocation initMethod MethodInvocation scriptCompiler getClassname Literal "setCallSite" MethodInvocation ClassReference ReferenceType CallSite MethodInvocation ClassReference ReferenceType CallSite ClassReference BasicType int ClassReference ReferenceType String params sig invokestatic IfStatement MethodInvocation callType MemberReference CallType FUNCTIONAL equals BlockStatement StatementExpression MethodInvocation initMethod MemberReference name ldc StatementExpression MethodInvocation initMethod MethodInvocation scriptCompiler getClassname Literal "setFunctionalCallSite" MethodInvocation ClassReference ReferenceType CallSite MethodInvocation ClassReference ReferenceType CallSite ClassReference BasicType int ClassReference ReferenceType String params sig invokestatic IfStatement MethodInvocation callType MemberReference CallType VARIABLE equals BlockStatement StatementExpression MethodInvocation initMethod MemberReference name ldc StatementExpression MethodInvocation initMethod MethodInvocation scriptCompiler getClassname Literal "setVariableCallSite" MethodInvocation ClassReference ReferenceType CallSite MethodInvocation ClassReference ReferenceType CallSite ClassReference BasicType int ClassReference ReferenceType String params sig invokestatic IfStatement MethodInvocation callType MemberReference CallType SUPER equals BlockStatement StatementExpression MethodInvocation initMethod MethodInvocation scriptCompiler getClassname Literal "setSuperCallSite" MethodInvocation ClassReference ReferenceType CallSite MethodInvocation ClassReference ReferenceType CallSite ClassReference BasicType int params sig invokestatic StatementExpression MethodInvocation initMethod pop StatementExpression Assignment MemberReference size MemberReference scopeCount = IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initScopes" MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType int params sig invokevirtual StatementExpression Assignment MemberReference size MemberReference inheritedSymbolCount = IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initSymbols" MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType int params sig invokevirtual StatementExpression Assignment MemberReference size MemberReference inheritedFixnumCount = IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initFixnums" MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType int params sig invokevirtual StatementExpression Assignment MemberReference size MemberReference inheritedConstantCount = IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initConstants" MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType int params sig invokevirtual StatementExpression Assignment MemberReference size MemberReference inheritedRegexpCount = IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initRegexps" MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType int params sig invokevirtual StatementExpression Assignment MemberReference size MemberReference inheritedBigIntegerCount = IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initBigIntegers" MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType int params sig invokevirtual StatementExpression Assignment MemberReference size MemberReference inheritedVariableReaderCount = IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initVariableReaders" MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType int params sig invokevirtual StatementExpression Assignment MemberReference size MemberReference inheritedVariableWriterCount = IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initVariableWriters" MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType int params sig invokevirtual StatementExpression Assignment MemberReference size MemberReference inheritedBlockBodyCount = IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initBlockBodies" MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType int params sig invokevirtual StatementExpression Assignment MemberReference size MemberReference = IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initBlockCallbacks" MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType int params sig invokevirtual StatementExpression Assignment MemberReference size MemberReference inheritedStringCount = IfStatement BinaryOperation > MemberReference inheritedStringCount Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initStrings" MethodInvocation ClassReference ReferenceType ByteList MethodInvocation ClassReference BasicType int params sig invokevirtual ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType Integer VariableDeclarator entry MethodInvocation stringIndices entrySet BlockStatement StatementExpression MethodInvocation initMethod MethodInvocation entry getValue ldc StatementExpression MethodInvocation initMethod MethodInvocation entry getKey ldc StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "createByteList" MethodInvocation ClassReference ReferenceType ByteList ClassReference ReferenceType ByteList ClassReference BasicType int ClassReference ReferenceType String sig invokestatic StatementExpression MethodInvocation initMethod pop StatementExpression Assignment MemberReference size MemberReference inheritedMethodCount = IfStatement BinaryOperation != MemberReference size Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference initMethod ensureRuntimeCacheInited StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci getfield StatementExpression MethodInvocation initMethod MemberReference size pushInt StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "initMethodCache" MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType int params sig invokevirtual	1
MethodDeclaration Modifier public BasicType int IOException LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation readSignedByte IfStatement BinaryOperation == MemberReference c Literal 0 BlockStatement ReturnStatement Literal 0 IfStatement BinaryOperation && BinaryOperation < Literal 5 MemberReference c BinaryOperation < MemberReference c Literal 128 BlockStatement ReturnStatement BinaryOperation - MemberReference c Literal 5 IfStatement BinaryOperation && BinaryOperation < Literal - 129 MemberReference c BinaryOperation < MemberReference c Literal - 5 BlockStatement ReturnStatement BinaryOperation + MemberReference c Literal 5 LocalVariableDeclaration BasicType long VariableDeclarator result IfStatement BinaryOperation > MemberReference c Literal 0 BlockStatement StatementExpression Assignment MemberReference result Literal 0 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference c MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference result BinaryOperation << Cast BasicType long MethodInvocation readUnsignedByte BinaryOperation * Literal 8 MemberReference i |= BlockStatement StatementExpression Assignment MemberReference c MemberReference - c = StatementExpression Assignment MemberReference result Literal - 1 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference c MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference result BinaryOperation << Cast BasicType long Literal 0xff BinaryOperation * Literal 8 MemberReference i &= StatementExpression Assignment MemberReference result BinaryOperation << Cast BasicType long MethodInvocation readUnsignedByte BinaryOperation * Literal 8 MemberReference i |= ReturnStatement Cast BasicType int MemberReference result	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "print" ElementValuePair rest Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject print FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator defout MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation Literal get getRuntime ReturnStatement MethodInvocation RubyIO MemberReference context MemberReference defout MemberReference args print	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "log2" ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyFloat log2_19 FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x LocalVariableDeclaration BasicType double VariableDeclarator value Cast ReferenceType RubyFloat MethodInvocation RubyKernel MemberReference recv MemberReference x new_float StatementExpression MethodInvocation MemberReference recv MemberReference value zeroInLogCheck ReturnStatement MethodInvocation MemberReference recv MemberReference x Literal 2 log_common	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "round" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject round ReturnStatement This	0
MethodDeclaration Modifier public static ReferenceType IRubyObject convertEncodingToRubyEncoding FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Encoding defaultEncoding IfStatement BinaryOperation != MemberReference defaultEncoding Literal null BlockStatement ReturnStatement ClassCreator ReferenceType RubyEncoding MemberReference runtime MemberReference defaultEncoding ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter BasicType byte javaClass FormalParameter ReferenceType String methodName Throwable LocalVariableDeclaration ReferenceType Loader VariableDeclarator loader ClassCreator ReferenceType Loader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation loader MemberReference name MemberReference javaClass loadClass LocalVariableDeclaration ReferenceType Method VariableDeclarator method MethodInvocation c MemberReference methodName ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType Ruby ClassReference ReferenceType IRubyObject getMethod LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation self getRuntime LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator tc MethodInvocation runtime getCurrentContext StatementExpression MethodInvocation tc MethodInvocation self getType pushRubyClass TryStatement ReturnStatement Cast ReferenceType IRubyObject MethodInvocation method Literal null ArrayCreator ReferenceType Object ArrayInitializer MemberReference runtime MemberReference self invoke CatchClause CatchClauseParameter InvocationTargetException e ThrowStatement MethodInvocation MemberReference e unrollException StatementExpression MethodInvocation tc	0
MethodDeclaration Modifier public dataWrapStruct FormalParameter ReferenceType Object object StatementExpression MethodInvocation objectAccessor This MemberReference object set StatementExpression Assignment This MemberReference object Cast ReferenceType JavaObject MemberReference object =	0
MethodDeclaration Modifier public final BasicType int arrayLength ReturnStatement MemberReference length	1
MethodDeclaration Modifier final protected callTrace FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name StatementExpression MethodInvocation context MemberReference RubyEvent C_CALL MemberReference name MethodInvocation getImplementationClass trace	1
MethodDeclaration Modifier public static ReferenceType RubyArray newArrayNoCopy FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject args ReturnStatement ClassCreator ReferenceType RubyArray MemberReference runtime MemberReference args	0
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ReturnStatement Literal "assignment"	0
MethodDeclaration Modifier public FormalParameter ReferenceType CompilerCallback value IfStatement BinaryOperation != MemberReference currentLoopLabels Literal null BlockStatement StatementExpression MethodInvocation value This call StatementExpression MethodInvocation issueLoopNext BlockStatement StatementExpression MethodInvocation value This call StatementExpression MethodInvocation Literal "nextJump" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokeUtilityMethod	0
MethodDeclaration Modifier private ReferenceType IRubyObject compareFixnum FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyFixnum other LocalVariableDeclaration BasicType long VariableDeclarator otherValue Cast ReferenceType RubyFixnum MemberReference other ReturnStatement TernaryExpression BinaryOperation == MemberReference value MemberReference otherValue MethodInvocation RubyFixnum MemberReference runtime zero TernaryExpression BinaryOperation > MemberReference value MemberReference otherValue MethodInvocation RubyFixnum MemberReference runtime one MethodInvocation RubyFixnum MemberReference runtime minus_one	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "weakref_alive?" ReferenceType IRubyObject weakref_alive_p ReturnStatement TernaryExpression BinaryOperation != MethodInvocation ref get Literal null MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public final BasicType int intValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation Util MemberReference obj uint8Value	1
MethodDeclaration Modifier private static ReferenceType Ruby LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation Ruby newInstance StatementExpression MethodInvocation runtime MethodInvocation ClassCreator ReferenceType ArrayList init ReturnStatement MemberReference runtime	0
MethodDeclaration Modifier public final Annotation Override BasicType boolean eql FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime IfStatement BinaryOperation || BinaryOperation != MethodInvocation getMetaClass MethodInvocation runtime getString BinaryOperation != MethodInvocation getMetaClass MethodInvocation other getMetaClass ReturnStatement SuperMethodInvocation MemberReference other eql ReturnStatement TernaryExpression MethodInvocation runtime is1_9 MethodInvocation MemberReference runtime MemberReference other eql19 MethodInvocation MemberReference runtime MemberReference other eql18	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "raise" ElementValuePair optional Literal 3 ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject rbRaise FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block Throwable IfStatement BinaryOperation && BinaryOperation == MemberReference args length Literal 1 BinaryOperation instanceof MemberReference ArraySelector Literal 0 MethodInvocation dataGetStruct args ReferenceType JavaObject BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator maybeThrowable Cast ReferenceType JavaObject MemberReference ArraySelector Literal 0 MethodInvocation dataGetStruct args IfStatement BinaryOperation instanceof MemberReference maybeThrowable ReferenceType Throwable BlockStatement ThrowStatement Cast ReferenceType Throwable MemberReference maybeThrowable BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "can't raise a non-Throwable Java object" newTypeError getRuntime BlockStatement ReturnStatement MethodInvocation RubyKernel MemberReference context MemberReference recv MemberReference args MemberReference block raise	1
MethodDeclaration Modifier public ReferenceType ListNode prepend FormalParameter ReferenceType Node node IfStatement BinaryOperation == MemberReference node Literal null ReturnStatement This StatementExpression MethodInvocation list Literal 0 MemberReference node add StatementExpression MethodInvocation MethodInvocation node getPosition setPosition ReturnStatement This	1
MethodDeclaration Modifier private ReferenceType RubyArray FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject num FormalParameter BasicType boolean last FormalParameter ReferenceType RubyClass klass LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation RubyNumeric MemberReference num num2int IfStatement BinaryOperation > MemberReference n MemberReference realLength BlockStatement StatementExpression Assignment MemberReference n MemberReference realLength = IfStatement BinaryOperation < MemberReference n Literal 0 BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "negative array size" newArgumentError getRuntime ReturnStatement MethodInvocation TernaryExpression MemberReference last BinaryOperation - MemberReference realLength MemberReference n Literal 0 MemberReference n MemberReference klass makeShared	0
MethodDeclaration Modifier public testOpXOr StatementExpression MethodInvocation MethodInvocation RubyNil MethodInvocation isTrue MemberReference rubyNil MethodInvocation runtime getTrue op_xor assertTrue StatementExpression MethodInvocation MethodInvocation RubyNil MethodInvocation MemberReference rubyNil MethodInvocation runtime getFalse op_xor assertTrue	0
MethodDeclaration Modifier public run FormalParameter ReferenceType IR_Scope s IfStatement BinaryOperation instanceof MemberReference s ReferenceType IR_Method ReturnStatement LocalVariableDeclaration ReferenceType IR_Method VariableDeclarator m Cast ReferenceType IR_Method MemberReference s LocalVariableDeclaration ReferenceType Label VariableDeclarator deoptLabel MethodInvocation m getNewLabel LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand VariableDeclarator valueMap ClassCreator ReferenceType HashMap TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType CodeVersion VariableDeclarator versionMap ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType CodeVersion LocalVariableDeclaration ReferenceType ListIterator TypeArgument ReferenceType IR_Instr VariableDeclarator instrs MethodInvocation m MethodInvocation listIterator getInstrs WhileStatement MethodInvocation instrs hasNext BlockStatement LocalVariableDeclaration ReferenceType IR_Instr VariableDeclarator i MethodInvocation instrs next LocalVariableDeclaration ReferenceType Operation VariableDeclarator iop MemberReference i _op IfStatement MethodInvocation iop startsBasicBlock BlockStatement StatementExpression Assignment MemberReference valueMap ClassCreator ReferenceType HashMap TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand = StatementExpression Assignment MemberReference versionMap ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType CodeVersion = LocalVariableDeclaration ReferenceType Operand VariableDeclarator val MethodInvocation i MemberReference valueMap LocalVariableDeclaration ReferenceType Variable VariableDeclarator res MethodInvocation i getResult IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference val Literal null BinaryOperation != MemberReference res Literal null BinaryOperation != MemberReference res MemberReference val BlockStatement StatementExpression MethodInvocation valueMap MemberReference res MemberReference val put IfStatement MethodInvocation iop isCall BlockStatement StatementExpression Assignment MemberReference val Literal null = LocalVariableDeclaration ReferenceType CALL_Instr VariableDeclarator call Cast ReferenceType CALL_Instr MemberReference i LocalVariableDeclaration ReferenceType Operand VariableDeclarator r MethodInvocation call getReceiver IfStatement MethodInvocation ! r isConstant BlockStatement LocalVariableDeclaration ReferenceType Operand VariableDeclarator v MethodInvocation valueMap MemberReference r get IfStatement BinaryOperation != MemberReference v Literal null StatementExpression Assignment MemberReference r MemberReference v = LocalVariableDeclaration ReferenceType IR_Method VariableDeclarator rm MethodInvocation call MemberReference r getTargetMethodWithReceiver IfStatement BinaryOperation != MemberReference rm Literal null BlockStatement LocalVariableDeclaration ReferenceType IR_Module VariableDeclarator rc MethodInvocation rm getDefiningModule IfStatement BinaryOperation == MemberReference rc MethodInvocation IR_Class Literal "Fixnum" getCoreClass BlockStatement LocalVariableDeclaration ReferenceType Operand VariableDeclarator args MethodInvocation call getCallArgs IfStatement MemberReference ArraySelector Literal 1 MethodInvocation isConstant args BlockStatement StatementExpression MethodInvocation MemberReference rm MemberReference deoptLabel MemberReference versionMap MemberReference instrs addMethodGuard StatementExpression Assignment MemberReference val Cast ReferenceType Fixnum MemberReference r = IfStatement BinaryOperation == MemberReference rc MethodInvocation IR_Class Literal "Float" getCoreClass BlockStatement LocalVariableDeclaration ReferenceType Operand VariableDeclarator args MethodInvocation call getCallArgs IfStatement MemberReference ArraySelector Literal 1 MethodInvocation isConstant args BlockStatement StatementExpression MethodInvocation MemberReference rm MemberReference deoptLabel MemberReference versionMap MemberReference instrs addMethodGuard StatementExpression Assignment MemberReference val Cast ReferenceType Float MemberReference r = IfStatement BinaryOperation == MemberReference rc MethodInvocation IR_Class Literal "Array" getCoreClass BlockStatement LocalVariableDeclaration ReferenceType Operand VariableDeclarator args MethodInvocation call getCallArgs IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ArraySelector Literal 1 args ReferenceType Fixnum BinaryOperation == MemberReference rm Literal "[]" BlockStatement StatementExpression MethodInvocation MemberReference rm MemberReference deoptLabel MemberReference versionMap MemberReference instrs addMethodGuard StatementExpression Assignment MemberReference val Cast ReferenceType Array MemberReference r = IfStatement BinaryOperation != MemberReference val Literal null BlockStatement StatementExpression MethodInvocation i markDead StatementExpression MethodInvocation instrs ClassCreator ReferenceType COPY_Instr MemberReference res MemberReference val add StatementExpression MethodInvocation valueMap MemberReference res MemberReference val put IfStatement BinaryOperation || MethodInvocation iop endsBasicBlock BinaryOperation && MethodInvocation iop isCall MethodInvocation ! i isDead BlockStatement StatementExpression Assignment MemberReference valueMap ClassCreator ReferenceType HashMap TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand = StatementExpression Assignment MemberReference versionMap ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType CodeVersion =	1
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String one FormalParameter ReferenceType String two FormalParameter ReferenceType String three FormalParameter ReferenceType String four FormalParameter ReferenceType String five FormalParameter ReferenceType String six FormalParameter ReferenceType String seven FormalParameter ReferenceType String eight FormalParameter ReferenceType String nine FormalParameter ReferenceType String ten ReturnStatement ArrayCreator ReferenceType String ArrayInitializer MemberReference one MemberReference two MemberReference three MemberReference four MemberReference five MemberReference six MemberReference seven MemberReference eight MemberReference nine MemberReference ten	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args IfStatement BinaryOperation != MemberReference args length Literal 2 BlockStatement StatementExpression MethodInvocation System.err Literal "Two args please, the target package and directory" println StatementExpression MethodInvocation System Literal 1 exit LocalVariableDeclaration ReferenceType String VariableDeclarator pkg MemberReference ArraySelector Literal 0 MethodInvocation Literal '.' Literal '/' replace args LocalVariableDeclaration ReferenceType String VariableDeclarator dir MemberReference ArraySelector Literal 1 args LocalVariableDeclaration ReferenceType String VariableDeclarator classname BinaryOperation + MemberReference pkg Literal "/GeneratedUnsafe" LocalVariableDeclaration ReferenceType String VariableDeclarator classpath BinaryOperation + MemberReference dir Literal "/GeneratedUnsafe.class" LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw ClassCreator ReferenceType ClassWriter BinaryOperation | MemberReference ClassWriter COMPUTE_MAXS MemberReference ClassWriter COMPUTE_FRAMES StatementExpression MethodInvocation cw MemberReference V1_5 BinaryOperation + MemberReference ACC_PUBLIC MemberReference ACC_SUPER MemberReference classname Literal null MethodInvocation ClassReference ReferenceType Object p ArrayCreator ReferenceType String ArrayInitializer MethodInvocation ClassReference ReferenceType Unsafe p visit StatementExpression MethodInvocation cw Literal "<generated>" Literal null visitSource LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator method ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cw MemberReference ACC_PUBLIC Literal "<init>" MethodInvocation VoidClassReference sig Literal null Literal null visitMethod StatementExpression MethodInvocation method start StatementExpression MethodInvocation method Literal 0 line StatementExpression MethodInvocation method Literal 0 aload StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType Object p Literal "<init>" MethodInvocation VoidClassReference sig invokespecial StatementExpression MethodInvocation method voidreturn StatementExpression MethodInvocation method end StatementExpression Assignment MemberReference method ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cw MemberReference ACC_PUBLIC Literal "throwException" MethodInvocation VoidClassReference ClassReference ReferenceType Throwable sig Literal null Literal null visitMethod = StatementExpression MethodInvocation method Literal 0 line StatementExpression MethodInvocation method start StatementExpression MethodInvocation method Literal 1 aload StatementExpression MethodInvocation method athrow StatementExpression MethodInvocation method end StatementExpression MethodInvocation cw visitEnd LocalVariableDeclaration BasicType byte VariableDeclarator bytecode MethodInvocation cw toByteArray TryStatement LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator fos ClassCreator ReferenceType FileOutputStream MemberReference classpath StatementExpression MethodInvocation fos MemberReference bytecode write CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e	1
MethodDeclaration Modifier private static ReferenceType IRubyObject trySimpleConversions FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object IfStatement BinaryOperation == MemberReference object Literal null BlockStatement ReturnStatement MethodInvocation runtime getNil IfStatement BinaryOperation instanceof MemberReference object ReferenceType IRubyObject BlockStatement ReturnStatement Cast ReferenceType IRubyObject MemberReference object IfStatement BinaryOperation instanceof MemberReference object ReferenceType InternalJavaProxy BlockStatement LocalVariableDeclaration ReferenceType InternalJavaProxy VariableDeclarator internalJavaProxy Cast ReferenceType InternalJavaProxy MemberReference object LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator orig MethodInvocation internalJavaProxy MethodInvocation getOrig IfStatement BinaryOperation != MemberReference orig Literal null BlockStatement ReturnStatement MemberReference orig ReturnStatement Literal null	0
MethodDeclaration Modifier public static ReferenceType Pair pair FormalParameter ReferenceType N head FormalParameter ReferenceType N tail ReturnStatement ClassCreator ReferenceType Pair MemberReference head MemberReference tail	0
MethodDeclaration Modifier public ReferenceType IRubyObject getValues ReturnStatement MemberReference IRubyObject NULL_ARRAY	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType HASHNODE	0
MethodDeclaration Modifier public static ReferenceType CompatVersion getVersionFromString FormalParameter ReferenceType String compatString IfStatement MethodInvocation compatString Literal "RUBY1_8" equalsIgnoreCase BlockStatement ReturnStatement MemberReference CompatVersion RUBY1_8 IfStatement MethodInvocation compatString Literal "RUBY1_9" equalsIgnoreCase BlockStatement ReturnStatement MemberReference CompatVersion RUBY1_9 BlockStatement ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType IRubyObject setConstantInModule FormalParameter ReferenceType IRubyObject module FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType String name FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MemberReference name MemberReference module MemberReference value setConstantInModule	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_proc" ElementValuePair frame Literal true Annotation Override ReferenceType IRubyObject to_proc FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block unusedBlock ReturnStatement SuperMethodInvocation MemberReference context MemberReference unusedBlock to_proc	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "append_features" ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair module Literal true ReferenceType IRubyObject append_features FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType IRubyObject include FormalParameter ReferenceType Block block IfStatement BinaryOperation instanceof MemberReference include ReferenceType RubyModule BlockStatement StatementExpression Cast ReferenceType RubyModule MemberReference include StatementExpression MethodInvocation include MethodInvocation Literal "induced_from" ClassCreator ReferenceType Callback MethodDeclaration Modifier public ReferenceType IRubyObject execute FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block StatementExpression MethodInvocation Arity MethodInvocation recv getRuntime MemberReference args Literal 1 Literal 1 checkArgumentCount ReturnStatement MethodInvocation RubyPrecision MemberReference recv MemberReference ArraySelector Literal 0 args MemberReference block induced_from MethodDeclaration Modifier public ReferenceType Arity getArity ReturnStatement MemberReference Arity getSingletonClass ReturnStatement MemberReference receiver	1
MethodDeclaration Modifier public preNodeEval FormalParameter ReferenceType RubyModule rubyClass FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name StatementExpression MethodInvocation MemberReference rubyClass pushRubyClass StatementExpression MethodInvocation MemberReference self	1
MethodDeclaration Modifier public BasicType boolean isRest ReturnStatement MemberReference rest	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "readchar" ReferenceType IRubyObject readchar LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator c MethodInvocation getc IfStatement MethodInvocation c isNil ThrowStatement MethodInvocation MethodInvocation newEOFError getRuntime ReturnStatement MemberReference c	1
MethodDeclaration Modifier public removeTraces StatementExpression Assignment MemberReference traces Literal null =	0
MethodDeclaration Modifier public ReferenceType Encoding getEncoding ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "equal?" ReferenceType IRubyObject same FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MethodInvocation MethodInvocation MemberReference other equals newBoolean getRuntime	0
MethodDeclaration Modifier public static ReferenceType RubyFixnum two FormalParameter ReferenceType Ruby runtime ReturnStatement MemberReference runtime ArraySelector BinaryOperation + MemberReference CACHE_OFFSET Literal 2 fixnumCache	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation proxyConstructor hashCode	0
MethodDeclaration Modifier public BasicType int getEndOffset ReturnStatement MemberReference endOffset	0
MethodDeclaration Modifier private beginInit LocalVariableDeclaration ReferenceType ClassVisitor VariableDeclarator cv MethodInvocation getClassVisitor StatementExpression Assignment MemberReference initMethod ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cv MemberReference ACC_PUBLIC Literal "<init>" MethodInvocation MemberReference Void TYPE sig Literal null Literal null visitMethod = StatementExpression MethodInvocation initMethod start StatementExpression MethodInvocation initMethod MemberReference THIS aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "<init>" MethodInvocation MemberReference Void TYPE sig invokespecial StatementExpression MethodInvocation cv BinaryOperation | MemberReference ACC_PRIVATE MemberReference ACC_FINAL Literal "$class" MethodInvocation ClassReference ReferenceType Class ci Literal null Literal null visitField StatementExpression MethodInvocation initMethod MemberReference THIS aload StatementExpression MethodInvocation initMethod MethodInvocation MethodInvocation getClassname c ldc StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType Class p Literal "forName" MethodInvocation ClassReference ReferenceType Class MethodInvocation ClassReference ReferenceType String params sig invokestatic StatementExpression MethodInvocation initMethod MethodInvocation getClassname Literal "$class" MethodInvocation ClassReference ReferenceType Class ci putfield StatementExpression MethodInvocation initMethod MemberReference THIS aload StatementExpression MethodInvocation initMethod MethodInvocation getSourcename ldc StatementExpression MethodInvocation initMethod MethodInvocation getClassname Literal "filename" MethodInvocation ClassReference ReferenceType String ci putfield	1
MethodDeclaration Modifier private ReferenceType String FormalParameter BasicType int i ReturnStatement BinaryOperation + Literal "Line " MemberReference i	0
MethodDeclaration Modifier public ReferenceType Finalizer getFinalizer ReturnStatement MemberReference finalizer	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "with_value" ElementValuePair required Literal 1 ReferenceType IRubyObject withValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Map TypeArgument ReferenceType Object TypeArgument ReferenceType IRubyObject VariableDeclarator contextVariables StatementExpression Assignment MemberReference contextVariables MethodInvocation MemberReference context = LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator old_value StatementExpression Assignment MemberReference old_value MethodInvocation contextVariables This get = StatementExpression MethodInvocation contextVariables This MemberReference value put TryStatement ReturnStatement MethodInvocation block MemberReference context StatementExpression MethodInvocation contextVariables This MemberReference old_value put	1
MethodDeclaration Modifier public static ReferenceType RubyClass createRegexpClass FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator regexpClass MethodInvocation runtime Literal "Regexp" MethodInvocation runtime getObject MemberReference REGEXP_ALLOCATOR defineClass StatementExpression MethodInvocation runtime MemberReference regexpClass setRegexp StatementExpression Assignment MemberReference regexpClass index MemberReference ClassIndex REGEXP = StatementExpression Assignment MemberReference regexpClass ClassCreator ReferenceType RubyModule ReferenceType MethodDeclaration Modifier public Annotation Override BasicType boolean isKindOf FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyRegexp = StatementExpression MethodInvocation regexpClass Literal "IGNORECASE" MethodInvocation runtime MemberReference RE_OPTION_IGNORECASE newFixnum defineConstant StatementExpression MethodInvocation regexpClass Literal "EXTENDED" MethodInvocation runtime MemberReference RE_OPTION_EXTENDED newFixnum defineConstant StatementExpression MethodInvocation regexpClass Literal "MULTILINE" MethodInvocation runtime MemberReference RE_OPTION_MULTILINE newFixnum defineConstant IfStatement MethodInvocation runtime is1_9 StatementExpression MethodInvocation regexpClass Literal "FIXEDENCODING" MethodInvocation runtime MemberReference ARG_ENCODING_FIXED newFixnum defineConstant StatementExpression MethodInvocation regexpClass ClassReference ReferenceType RubyRegexp defineAnnotatedMethods ReturnStatement MemberReference regexpClass	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "gets" ElementValuePair optional Literal 1 ElementValuePair writes MemberReference FrameField LASTLINE ReferenceType IRubyObject gets FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference context MemberReference args getsOnly StatementExpression MethodInvocation context MethodInvocation MemberReference result setLastLine getCurrentScope ReturnStatement MemberReference result	0
MethodDeclaration Modifier public invokeOpAsgnWithMethod FormalParameter ReferenceType String operatorName FormalParameter ReferenceType String attrName FormalParameter ReferenceType String attrAsgnName FormalParameter ReferenceType CompilerCallback receiverCallback FormalParameter ReferenceType ArgumentsCallback argsCallback StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation methodCompiler loadSelf StatementExpression MethodInvocation receiverCallback MemberReference methodCompiler call StatementExpression MethodInvocation argsCallback MemberReference methodCompiler call StatementExpression MethodInvocation methodCompiler MethodInvocation getCacheCompiler MethodInvocation MemberReference methodCompiler MemberReference attrName MemberReference CallType FUNCTIONAL cacheCallSite getScriptCompiler StatementExpression MethodInvocation methodCompiler MethodInvocation getCacheCompiler MethodInvocation MemberReference methodCompiler MemberReference operatorName MemberReference CallType FUNCTIONAL cacheCallSite getScriptCompiler StatementExpression MethodInvocation methodCompiler MethodInvocation getCacheCompiler MethodInvocation MemberReference methodCompiler MemberReference attrAsgnName MemberReference CallType NORMAL cacheCallSite getScriptCompiler StatementExpression MethodInvocation methodCompiler Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallSite ClassReference ReferenceType CallSite ClassReference ReferenceType CallSite sig invokeUtilityMethod	0
MethodDeclaration Modifier public final Annotation Deprecated ReferenceType IRubyObject substr FormalParameter BasicType int beg FormalParameter BasicType int len ReturnStatement MethodInvocation MethodInvocation getRuntime MemberReference beg MemberReference len substr	1
MethodDeclaration Modifier private ReferenceType String resolveScript FormalParameter ReferenceType String scriptName TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator fullName MethodInvocation JRubyFile MemberReference MemberReference scriptName create IfStatement BinaryOperation && MethodInvocation fullName exists MethodInvocation fullName isFile BlockStatement ReturnStatement MethodInvocation fullName getAbsolutePath StatementExpression Assignment MemberReference fullName MethodInvocation JRubyFile MethodInvocation getJRubyHome BinaryOperation + Literal "bin/" MemberReference scriptName create = IfStatement BinaryOperation && MethodInvocation fullName exists MethodInvocation fullName isFile BlockStatement ReturnStatement MethodInvocation fullName getAbsolutePath LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation System Literal "PATH" getenv IfStatement BinaryOperation != MemberReference path Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator paths MethodInvocation path MethodInvocation System Literal "path.separator" getProperty split ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference paths length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference fullName MethodInvocation JRubyFile MemberReference ArraySelector MemberReference i paths MemberReference scriptName create = IfStatement BinaryOperation && MethodInvocation fullName exists MethodInvocation fullName isFile BlockStatement ReturnStatement MethodInvocation fullName getAbsolutePath CatchClause CatchClauseParameter IllegalArgumentException iae IfStatement MemberReference debug StatementExpression MethodInvocation System.err BinaryOperation + Literal "warning: could not resolve -S script on filesystem: " MemberReference scriptName println ReturnStatement MemberReference scriptName	1
MethodDeclaration Modifier public getstatic FormalParameter ReferenceType String arg1 FormalParameter ReferenceType String arg2 FormalParameter ReferenceType String arg3 StatementExpression MethodInvocation MethodInvocation MemberReference GETSTATIC MemberReference arg1 MemberReference arg2 MemberReference arg3 visitFieldInsn getMethodVisitor	0
MethodDeclaration Modifier static ReferenceType RubyRegexp newDummyRegexp FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Regex regex LocalVariableDeclaration ReferenceType RubyRegexp VariableDeclarator regexp ClassCreator ReferenceType RubyRegexp MemberReference runtime StatementExpression Assignment MemberReference regexp pattern MemberReference regex = StatementExpression Assignment MemberReference regexp str MemberReference ByteList EMPTY_BYTELIST = StatementExpression Assignment MemberReference regexp kcode MemberReference KCode NONE = ReturnStatement MemberReference regexp	0
MethodDeclaration Modifier public BasicType int getIndex ReturnStatement BinaryOperation & MemberReference location Literal	0
MethodDeclaration Modifier public ReferenceType IRubyObject execute FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block unusedBlock ReturnStatement MethodInvocation runtime MethodInvocation MethodInvocation recv MethodInvocation getCurrentContext getRuntime MemberReference args rbPublic getObject	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "open" ElementValuePair rest Literal true ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType IRubyObject open FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tcpServer MethodInvocation recv MemberReference context Literal "new" MemberReference args callMethod IfStatement MethodInvocation ! block isGiven ReturnStatement MemberReference tcpServer TryStatement ReturnStatement MethodInvocation block MemberReference context MemberReference tcpServer yield StatementExpression MethodInvocation tcpServer MemberReference context Literal "close" callMethod	1
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType int i ReturnStatement Literal "int"	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "group" ElementValuePair module Literal true ElementValuePair frame Literal true ReferenceType IRubyObject group FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType VariableDeclarator posix MethodInvocation runtime getPosix TryStatement StatementExpression MethodInvocation posix getgrent IfStatement MethodInvocation block isGiven BlockStatement LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation runtime getCurrentContext StatementExpression MethodInvocation posix setgrent LocalVariableDeclaration ReferenceType Group VariableDeclarator WhileStatement BinaryOperation != Assignment MemberReference MethodInvocation posix getgrent = Literal null BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation MemberReference runtime MemberReference setupGroup yield StatementExpression MethodInvocation posix endgrent LocalVariableDeclaration ReferenceType Group VariableDeclarator MethodInvocation posix getgrent IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference setupGroup BlockStatement ReturnStatement MethodInvocation runtime getNil CatchClause CatchClauseParameter Exception e IfStatement MethodInvocation runtime MethodInvocation isTrue getDebug BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID NOT_IMPLEMENTED Literal "Etc.group is not supported by JRuby on this platform" MemberReference e warn getWarnings ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public Annotation Override BasicType int read IOException LocalVariableDeclaration BasicType int VariableDeclarator c SuperMethodInvocation read StatementExpression MethodInvocation MemberReference c ReturnStatement MemberReference c	0
MethodDeclaration Modifier public static ReferenceType String getStaticClosure19Signature FormalParameter ReferenceType String classdesc ReturnStatement MethodInvocation ClassReference ReferenceType IRubyObject BinaryOperation + BinaryOperation + Literal "L" MemberReference classdesc Literal ";" ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig	0
MethodDeclaration Modifier private dRegexpNode FormalParameter ReferenceType DRegexpNode node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node getOnce append MethodInvocation Literal " " append MethodInvocation MethodInvocation node getOptions append Literal " " append	0
MethodDeclaration Modifier public static ReferenceType IRubyObject egid FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtime MethodInvocation runtime MethodInvocation getegid getPosix newFixnum	0
MethodDeclaration Modifier public FormalParameter ReferenceType Join join FormalParameter ReferenceType Object args StatementExpression MethodInvocation join MemberReference Channel FINISHED Literal null send	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference self MemberReference name MemberReference Block NULL_BLOCK Literal 0 pre ReturnStatement MethodInvocation jitCompiledScript MemberReference context MemberReference self MemberReference Block NULL_BLOCK __file__ CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter JumpException.RedoJump rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "times" ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal "times" enumeratorize	0
MethodDeclaration Modifier public BasicType int size ReturnStatement This RubyHash MemberReference size	0
MethodDeclaration Modifier private static ReferenceType IRubyObject convertToNum FormalParameter BasicType double val FormalParameter ReferenceType Ruby runtime IfStatement BinaryOperation || BinaryOperation >= MemberReference val Cast BasicType double MemberReference RubyFixnum BinaryOperation < MemberReference val Cast BasicType double MemberReference RubyFixnum BlockStatement ReturnStatement MethodInvocation RubyBignum MemberReference runtime MemberReference val newBignum ReturnStatement MethodInvocation RubyFixnum MemberReference runtime Cast BasicType long MemberReference val newFixnum	0
MethodDeclaration Modifier private ReferenceType Node checkForNilNode FormalParameter ReferenceType Node node FormalParameter ReferenceType ISourcePosition defaultPosition ReturnStatement TernaryExpression BinaryOperation == MemberReference node Literal null ClassCreator ReferenceType NilNode MemberReference defaultPosition MemberReference node	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args IfStatement MemberReference Platform IS_GCJ BlockStatement StatementExpression MethodInvocation System.err Literal "Fatal: GCJ (GNU for Java) is not supported by JRuby." println StatementExpression MethodInvocation System Literal 1 exit LocalVariableDeclaration ReferenceType Main VariableDeclarator main ClassCreator ReferenceType Main TryStatement LocalVariableDeclaration BasicType int VariableDeclarator status MethodInvocation main MemberReference args run IfStatement BinaryOperation != MemberReference status Literal 0 BlockStatement StatementExpression MethodInvocation System MemberReference status exit CatchClause CatchClauseParameter RaiseException re ThrowStatement MemberReference re CatchClause CatchClauseParameter Throwable t StatementExpression MethodInvocation System.err MethodInvocation ThreadContext MemberReference t createRawBacktraceStringFromThrowable println WhileStatement BinaryOperation != Assignment MemberReference t MethodInvocation t getCause = Literal null BlockStatement StatementExpression MethodInvocation System.err Literal "Caused by:" println StatementExpression MethodInvocation System.err MethodInvocation ThreadContext MemberReference t createRawBacktraceStringFromThrowable println StatementExpression MethodInvocation System Literal 1 exit	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "each_object" ElementValuePair optional Literal 1 ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject each_object19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference recv MemberReference args MemberReference block each_object MethodInvocation MethodInvocation context getRuntime MemberReference recv Literal "each_object" MemberReference args enumeratorize	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier private ReferenceType IRubyObject defaultTmpDir FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator dir Literal null IfStatement BinaryOperation == MemberReference args length Literal 2 BlockStatement StatementExpression Assignment MemberReference dir MemberReference ArraySelector Literal 1 args = BlockStatement StatementExpression MethodInvocation runtime MethodInvocation Literal require StatementExpression Assignment MemberReference dir MethodInvocation runtime MethodInvocation MethodInvocation runtime getCurrentContext Literal callMethod getDir = IfStatement BinaryOperation && BinaryOperation > MethodInvocation runtime getSafeLevel Literal 0 MethodInvocation dir isTaint BlockStatement StatementExpression Assignment MemberReference dir MethodInvocation runtime MemberReference DEFAULT_TMP_DIR newString = ReturnStatement MemberReference dir	0
MethodDeclaration Modifier public ReferenceType Object case300_line1122 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Literal null Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals newCaseNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final ReferenceType DirectMemoryIO getMemoryIO FormalParameter BasicType long offset ReturnStatement MethodInvocation MemberReference runtime MethodInvocation IO BinaryOperation + MemberReference address MemberReference offset getAddress wrap	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value ReturnStatement BinaryOperation && BinaryOperation != MemberReference value Literal null BinaryOperation == MemberReference generation MethodInvocation context MethodInvocation getRuntime	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk IfStatement BinaryOperation <= MemberReference -- n Literal 0 ThrowStatement MemberReference JumpException SPECIAL_JUMP StatementExpression MethodInvocation result MemberReference ArraySelector Literal 0 largs append ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public ReferenceType KCode getKCode ReturnStatement MemberReference	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "list" ElementValuePair module Literal true ReferenceType IRubyObject list FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator names MethodInvocation RubyHash MemberReference runtime newHash ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression MethodInvocation names MemberReference context MethodInvocation runtime MemberReference ArraySelector MemberReference i newString MethodInvocation runtime MemberReference i newFixnum op_aset StatementExpression MethodInvocation names MemberReference context MethodInvocation runtime Literal newString MethodInvocation runtime Literal 6 newFixnum op_aset StatementExpression MethodInvocation names MemberReference context MethodInvocation runtime Literal newString MethodInvocation runtime Literal 20 newFixnum op_aset ReturnStatement MemberReference names	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference self MethodInvocation arg1 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock MethodInvocation arg2 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock MethodInvocation arg3 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock MethodInvocation RuntimeHelpers MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference aBlock getBlock call	0
MethodDeclaration Modifier public compileOpElementAsgnWithAnd FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType OpElementAsgnNode VariableDeclarator opElementAsgnNode Cast ReferenceType OpElementAsgnNode MemberReference node LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator receiverCallback ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation opElementAsgnNode getReceiverNode MemberReference context Literal true compile LocalVariableDeclaration ReferenceType ArgumentsCallback VariableDeclarator argsCallback ClassCreator ReferenceType OpElementAsgnArgumentsCallback MethodInvocation opElementAsgnNode getArgsNode LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator valueCallback ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation opElementAsgnNode getValueNode MemberReference context Literal true compile StatementExpression MethodInvocation context MethodInvocation MemberReference receiverCallback MemberReference argsCallback MemberReference valueCallback opElementAsgnWithAnd getInvocationCompiler IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier protected setUp Exception StatementExpression SuperMethodInvocation setUp StatementExpression Assignment MemberReference runtime MethodInvocation Ruby newInstance =	0
MethodDeclaration Modifier public ReferenceType Object case61_line521 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static ReferenceType RubyClass createJavaArrayClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule javaModule ReturnStatement MethodInvocation javaModule Literal "JavaArray" MethodInvocation javaModule Literal "JavaObject" fastGetClass MemberReference ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR defineClassUnder	1
MethodDeclaration Modifier public synchronized Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyThread wakeup IfStatement BinaryOperation && MethodInvocation ! threadImpl isAlive BinaryOperation == MemberReference status MemberReference Status DEAD BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal thread" newThreadError getRuntime StatementExpression Assignment MemberReference status MemberReference Status RUN = StatementExpression MethodInvocation notifyAll ReturnStatement This	0
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator obj1 Cast ReferenceType IRubyObject MemberReference o1 LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator obj2 Cast ReferenceType IRubyObject MemberReference o2 LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator ret MethodInvocation block MemberReference context MethodInvocation MethodInvocation MemberReference obj1 MemberReference obj2 newArray getRuntime Literal null Literal null Literal true yield ReturnStatement MethodInvocation RubyComparable MemberReference context MemberReference ret MemberReference obj1 MemberReference obj2 cmpint	1
MethodDeclaration Modifier private xStrNode FormalParameter ReferenceType XStrNode node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node getValue append MethodInvocation Literal "'" append Literal " '" append	0
MethodDeclaration Modifier public ReferenceType IRubyObject fastGetConstant FormalParameter ReferenceType String internedName LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MethodInvocation MemberReference internedName LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime ReturnStatement TernaryExpression BinaryOperation == MemberReference value Literal null MethodInvocation MethodInvocation runtime getCurrentContext Literal MethodInvocation runtime MemberReference internedName fastNewSymbol callMethod MemberReference value	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "read_string" ReferenceType IRubyObject read_string FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MemoryUtil MethodInvocation context getRuntime MethodInvocation getMemoryIO Literal 0 getTaintedString	1
MethodDeclaration Modifier public testConversions Exception StatementExpression Assignment MemberReference result MethodInvocation Literal "p $h.to_s" eval = StatementExpression MethodInvocation Literal "\"foobar\"" MemberReference result assertEquals StatementExpression Assignment MemberReference result MethodInvocation Literal "p $h.to_a" eval = StatementExpression MethodInvocation Literal "[\"foo\", \"bar\"]" MemberReference result assertEquals	0
MethodDeclaration Modifier public ReferenceType Object case231_line899 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals arg_concat = StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference yyVal Cast ReferenceType BlockPassNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_blk_pass = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public FormalParameter ReferenceType IRubyObject newObject IfStatement MethodInvocation MemberReference newObject shouldBeRegistered BlockStatement StatementExpression MethodInvocation cache MemberReference newObject register	0
MethodDeclaration Modifier private final static BasicType int extendWidth FormalParameter ReferenceType Args args FormalParameter BasicType int oldWidth FormalParameter BasicType byte newChar LocalVariableDeclaration BasicType int VariableDeclarator newWidth BinaryOperation + BinaryOperation * MemberReference oldWidth Literal 10 BinaryOperation - MemberReference newChar Literal '0' IfStatement BinaryOperation != BinaryOperation / MemberReference newWidth Literal 10 MemberReference oldWidth StatementExpression MethodInvocation MemberReference args Literal "width too big" raiseArgumentError ReturnStatement MemberReference newWidth	1
MethodDeclaration Modifier private putMethod FormalParameter ReferenceType String name FormalParameter ReferenceType DynamicMethod method StatementExpression MethodInvocation MethodInvocation MemberReference name MemberReference method put getMethods	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter BasicType int i ReturnStatement ArrayCreator ReferenceType String MemberReference i	0
MethodDeclaration Modifier public static BasicType int strLength FormalParameter ReferenceType ByteList bytes ReturnStatement MethodInvocation MemberReference bytes encoding MemberReference bytes bytes MemberReference bytes begin BinaryOperation + MemberReference bytes begin MemberReference bytes realSize strLength	0
MethodDeclaration Modifier public clump FormalParameter ReferenceType Class cls LocalVariableDeclaration ReferenceType Method VariableDeclarator declaredMethods MethodInvocation cls getDeclaredMethods ForStatement EnhancedForControl VariableDeclaration ReferenceType Method VariableDeclarator method MemberReference declaredMethods BlockStatement LocalVariableDeclaration ReferenceType JRubyMethod VariableDeclarator anno MethodInvocation method ClassReference ReferenceType JRubyMethod getAnnotation IfStatement BinaryOperation == MemberReference anno Literal null ContinueStatement LocalVariableDeclaration ReferenceType JavaMethodDescriptor VariableDeclarator desc ClassCreator ReferenceType JavaMethodDescriptor MemberReference method LocalVariableDeclaration ReferenceType String VariableDeclarator name TernaryExpression BinaryOperation == MethodInvocation anno MemberReference length name Literal 0 MethodInvocation method getName MethodInvocation anno ArraySelector Literal 0 name LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator methodDescs LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator methodsHash Literal null IfStatement MemberReference desc isStatic BlockStatement IfStatement BinaryOperation == MethodInvocation anno compat MemberReference CompatVersion RUBY1_8 BlockStatement StatementExpression Assignment MemberReference methodsHash MemberReference staticAnnotatedMethods1_8 = IfStatement BinaryOperation == MethodInvocation anno compat MemberReference CompatVersion RUBY1_9 BlockStatement StatementExpression Assignment MemberReference methodsHash MemberReference staticAnnotatedMethods1_9 = BlockStatement StatementExpression Assignment MemberReference methodsHash MemberReference staticAnnotatedMethods = BlockStatement IfStatement BinaryOperation == MethodInvocation anno compat MemberReference CompatVersion RUBY1_8 BlockStatement StatementExpression Assignment MemberReference methodsHash MemberReference annotatedMethods1_8 = IfStatement BinaryOperation == MethodInvocation anno compat MemberReference CompatVersion RUBY1_9 BlockStatement StatementExpression Assignment MemberReference methodsHash MemberReference annotatedMethods1_9 = BlockStatement StatementExpression Assignment MemberReference methodsHash MemberReference annotatedMethods = StatementExpression Assignment MemberReference methodDescs MethodInvocation methodsHash MemberReference name get = IfStatement BinaryOperation == MemberReference methodDescs Literal null BlockStatement StatementExpression Assignment MemberReference methodDescs ClassCreator ReferenceType ArrayList TypeArgument ReferenceType JavaMethodDescriptor = StatementExpression MethodInvocation methodsHash MemberReference name MemberReference methodDescs put StatementExpression MethodInvocation methodDescs MemberReference desc add	1
MethodDeclaration Modifier private BasicType int getKcode IfStatement BinaryOperation == MemberReference kcode MemberReference KCode NONE BlockStatement ReturnStatement Literal 16 IfStatement BinaryOperation == MemberReference kcode MemberReference KCode EUC BlockStatement ReturnStatement Literal 32 IfStatement BinaryOperation == MemberReference kcode MemberReference KCode SJIS BlockStatement ReturnStatement Literal 48 IfStatement BinaryOperation == MemberReference kcode MemberReference KCode UTF8 BlockStatement ReturnStatement Literal 64 ReturnStatement Literal 0	1
MethodDeclaration Modifier public BasicType boolean containsValue FormalParameter ReferenceType Object value ReturnStatement MethodInvocation MemberReference value contains	0
MethodDeclaration Modifier public BasicType boolean hasModuleInHierarchy FormalParameter ReferenceType RubyModule type ForStatement ForControl VariableDeclaration ReferenceType RubyModule VariableDeclarator module This BinaryOperation != MemberReference module Literal null Assignment MemberReference module MethodInvocation module getSuperClass = BlockStatement IfStatement BinaryOperation == MethodInvocation module getNonIncludedClass MemberReference type ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Object convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyObject ReturnStatement MethodInvocation rubyObject ClassReference ReferenceType BigInteger toJava	0
MethodDeclaration BasicType boolean isNoop ReturnStatement BinaryOperation && BinaryOperation == MemberReference MemberReference None BinaryOperation == MemberReference MemberReference None	0
MethodDeclaration Modifier public ReferenceType String number FormalParameter BasicType float val ReturnStatement Literal "float"	0
MethodDeclaration addPostInvoke FormalParameter ReferenceType Runnable postInvoke IfStatement BinaryOperation == MemberReference postInvokeList Literal null BlockStatement StatementExpression Assignment MemberReference postInvokeList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Runnable = StatementExpression MethodInvocation postInvokeList MemberReference postInvoke add	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "sync" ElementValuePair required Literal 1 ReferenceType IRubyObject sync FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject string StatementExpression MethodInvocation MemberReference context MemberReference string append ReturnStatement MethodInvocation context MethodInvocation getFalse getRuntime	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "cycle" ElementValuePair frame Literal true ReferenceType IRubyObject cycle FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg FormalParameter Modifier final ReferenceType Block block IfStatement MethodInvocation arg isNil ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference block cycle IfStatement MethodInvocation ! block isGiven ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference self Literal "cycle" MemberReference arg enumeratorize LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation RubyNumeric MemberReference arg num2long IfStatement BinaryOperation <= MemberReference Literal 0 ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference MemberReference block cycleCommon	1
MethodDeclaration Modifier private ReferenceType IRubyObject lshift FormalParameter BasicType long width IfStatement BinaryOperation || BinaryOperation > MemberReference width BinaryOperation - MemberReference Literal 1 BinaryOperation != BinaryOperation & BinaryOperation << Literal ~ 0L BinaryOperation - BinaryOperation - MemberReference MemberReference width Literal 1 MemberReference value Literal 0 BlockStatement ReturnStatement MethodInvocation RubyBignum MethodInvocation MethodInvocation RubyFixnum MethodInvocation getRuntime MemberReference width newFixnum op_lshift MethodInvocation getRuntime MemberReference value newBignum ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime BinaryOperation << MemberReference value MemberReference width newFixnum	0
MethodDeclaration Modifier protected BasicType int getDynamicScopeIndex ReturnStatement BinaryOperation + BinaryOperation + MemberReference StandardASMCompiler ARGS_INDEX MemberReference argParamCount MemberReference StandardASMCompiler	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyString simple_name ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation javaClass getSimpleName newString getRuntime	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference klazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier private static BasicType int codeRangeScanAsciiCompatible FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int len LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference len StatementExpression Assignment MemberReference p MethodInvocation MemberReference bytes MemberReference p MemberReference end searchNonAscii = IfStatement BinaryOperation == MemberReference p Literal - 1 ReturnStatement MemberReference CR_7BIT WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator cl MethodInvocation MemberReference enc MemberReference bytes MemberReference p MemberReference end preciseLength IfStatement BinaryOperation <= MemberReference cl Literal 0 ReturnStatement MemberReference CR_BROKEN StatementExpression Assignment MemberReference p MemberReference cl += IfStatement BinaryOperation < MemberReference p MemberReference end BlockStatement StatementExpression Assignment MemberReference p MethodInvocation MemberReference bytes MemberReference p MemberReference end searchNonAscii = IfStatement BinaryOperation == MemberReference p Literal - 1 ReturnStatement MemberReference CR_VALID ReturnStatement TernaryExpression BinaryOperation > MemberReference p MemberReference end MemberReference CR_BROKEN MemberReference CR_VALID	1
MethodDeclaration Modifier public final setMarshal FormalParameter ReferenceType marshal StatementExpression Assignment This MemberReference marshal MemberReference marshal =	0
MethodDeclaration Modifier public ReferenceType Object remove FormalParameter ReferenceType Object key LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator rubyKey MethodInvocation JavaUtil MethodInvocation getRuntime MemberReference key convertJavaToUsableRubyObject ReturnStatement MethodInvocation MemberReference value MemberReference rubyKey internalDelete	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator nil MethodInvocation runtime getNil LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation getIndex LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator flipScope MethodInvocation scope StatementExpression MethodInvocation flipScope LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation flipScope MemberReference index MemberReference nil getValueDepthZeroOrNil IfStatement MemberReference exclusive BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference result Literal null MethodInvocation ! result isTrue BlockStatement StatementExpression Assignment MemberReference result MethodInvocation MemberReference runtime MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock trueIfTrue = StatementExpression MethodInvocation flipScope MemberReference result MemberReference index setValueDepthZero ReturnStatement MemberReference result BlockStatement IfStatement MethodInvocation MethodInvocation isTrue MemberReference runtime MemberReference context MemberReference self MemberReference aBlock BlockStatement StatementExpression MethodInvocation flipScope MethodInvocation runtime getFalse MemberReference index setValueDepthZero ReturnStatement MethodInvocation runtime getTrue BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference result Literal null MethodInvocation ! result isTrue BlockStatement IfStatement MethodInvocation MethodInvocation isTrue MemberReference runtime MemberReference context MemberReference self MemberReference aBlock BlockStatement StatementExpression MethodInvocation flipScope MethodInvocation MemberReference runtime MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock falseIfTrue MemberReference index setValueDepthZero ReturnStatement MethodInvocation runtime getTrue ReturnStatement MethodInvocation runtime getFalse BlockStatement IfStatement MethodInvocation MethodInvocation isTrue MemberReference runtime MemberReference context MemberReference self MemberReference aBlock BlockStatement StatementExpression MethodInvocation flipScope MethodInvocation runtime getFalse MemberReference index setValueDepthZero ReturnStatement MethodInvocation runtime getTrue	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal MethodInvocation RubyNil MethodInvocation toString MemberReference rubyNil inspect assertEquals	0
MethodDeclaration Modifier public ReferenceType Object next ReturnStatement MethodInvocation MethodInvocation getValue nextEntry	0
MethodDeclaration Modifier public synchronized Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "length" Literal "size" ReferenceType RubyNumeric length FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation MemberReference context checkShutdown ReturnStatement MethodInvocation RubyNumeric MethodInvocation context getRuntime MethodInvocation entries size	0
MethodDeclaration Modifier public final BasicType int getInt FormalParameter BasicType long offset ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier private static ReferenceType String intoString FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType InetAddress as TryStatement ReturnStatement ClassCreator ReferenceType String MethodInvocation ByteList MethodInvocation as getAddress plain CatchClause CatchClauseParameter Exception e ThrowStatement MethodInvocation MemberReference runtime BinaryOperation + Literal "addrtostr: " MethodInvocation e toString sockerr	1
MethodDeclaration Modifier public pollThreadEvents IfStatement MemberReference ! RubyInstanceConfig BlockStatement StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation Literal "pollThreadEvents" MethodInvocation MemberReference Void TYPE sig invokeThreadContext	0
MethodDeclaration Modifier public ReferenceType RubyClass getRange ReturnStatement MemberReference rangeClass	0
MethodDeclaration Modifier public addModule FormalParameter ReferenceType IR_Module m StatementExpression MethodInvocation MemberReference m ClassCreator ReferenceType MetaObject MemberReference m StatementExpression MethodInvocation _modules MemberReference m add	0
MethodDeclaration Modifier private ReferenceType IRubyObject yieldUnder FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter ReferenceType RubyModule under FormalParameter ReferenceType Block block StatementExpression MethodInvocation context MemberReference under MemberReference block preExecuteUnder LocalVariableDeclaration ReferenceType Visibility VariableDeclarator savedVisibility MethodInvocation block MethodInvocation getVisibility getBinding StatementExpression MethodInvocation block MethodInvocation MemberReference Visibility PUBLIC setVisibility getBinding TryStatement StatementExpression Assignment MemberReference block MethodInvocation block = StatementExpression MethodInvocation block MethodInvocation This RubyObject setSelf getBinding StatementExpression MethodInvocation block MethodInvocation getFrame MethodInvocation This RubyObject setSelf getBinding ReturnStatement MethodInvocation block MemberReference context This This MethodInvocation context getRubyClass Literal false yield CatchClause CatchClauseParameter JumpException.BreakJump bj ReturnStatement Cast ReferenceType IRubyObject MethodInvocation bj getValue StatementExpression MethodInvocation block MethodInvocation MemberReference savedVisibility setVisibility getBinding StatementExpression MethodInvocation context postExecuteUnder	1
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject newInstance FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference ArraySelector Literal 0 args newInstance SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args newInstance StatementExpression MethodInvocation Arity MethodInvocation context getRuntime MemberReference args length Literal 1 Literal 1 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Object case224_line899 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals newAndNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean isKindOf FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyRange	0
MethodDeclaration Modifier public ReferenceType Object yyparse FormalParameter ReferenceType RubyYaccLexer yyLex FormalParameter ReferenceType Object ayydebug java.io.IOException yyException StatementExpression Assignment This MemberReference yydebug Cast ReferenceType jay ReferenceType yydebug ReferenceType yyDebug MemberReference ayydebug = ReturnStatement MethodInvocation MemberReference yyLex yyparse	1
MethodDeclaration Modifier public static ReferenceType JavaMethod getMatchingDeclaredMethod FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Class TypeArgument ? javaClass FormalParameter ReferenceType String methodName FormalParameter ReferenceType Class TypeArgument ? argumentTypes TryStatement ReturnStatement MethodInvocation MemberReference runtime MethodInvocation javaClass MemberReference methodName MemberReference argumentTypes getDeclaredMethod create CatchClause CatchClauseParameter NoSuchMethodException e ForStatement MethodSearch EnhancedForControl VariableDeclaration ReferenceType Method VariableDeclarator method MethodInvocation javaClass getDeclaredMethods BlockStatement IfStatement MethodInvocation method MethodInvocation MemberReference methodName equals getName BlockStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator targetTypes MethodInvocation method getParameterTypes IfStatement BinaryOperation && BinaryOperation == MemberReference targetTypes length Literal 0 BinaryOperation == MemberReference argumentTypes length Literal 0 BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference method create ForStatement TypeScan ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference argumentTypes length MemberReference ++ i BlockStatement IfStatement BinaryOperation >= MemberReference i MemberReference targetTypes length ContinueStatement MethodSearch IfStatement MemberReference ArraySelector MemberReference i MethodInvocation MemberReference ArraySelector MemberReference i argumentTypes isAssignableFrom targetTypes BlockStatement ContinueStatement TypeScan BlockStatement ContinueStatement MethodSearch ReturnStatement MethodInvocation MemberReference runtime MemberReference method create ReturnStatement Literal null	1
MethodDeclaration Modifier public StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType RubyBoolean ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext sig invokeUtilityMethod	0
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object array FormalParameter BasicType int i ReturnStatement MethodInvocation MemberReference runtime Cast ReferenceType Short MemberReference array convert	0
MethodDeclaration Modifier protected BasicType boolean variableTableContains FormalParameter ReferenceType String name ReturnStatement BinaryOperation != MethodInvocation MethodInvocation getRealClass MethodInvocation MemberReference name getVariableAccessorForRead MethodInvocation This get getMetaClass Literal null	0
MethodDeclaration Modifier public buildArgs FormalParameter ReferenceType List TypeArgument ReferenceType Operand argsList FormalParameter ReferenceType Node args FormalParameter ReferenceType IR_Scope s SwitchStatement MethodInvocation args getNodeType SwitchStatementCase ARGSCATNODE ARGSPUSHNODE SPLATNODE StatementExpression MethodInvocation MemberReference argsList MemberReference args MemberReference s buildVariableArityArguments BreakStatement SwitchStatementCase ARRAYNODE LocalVariableDeclaration ReferenceType ArrayNode VariableDeclarator arrayNode Cast ReferenceType ArrayNode MemberReference args IfStatement BinaryOperation > MethodInvocation arrayNode size Literal 3 StatementExpression MethodInvocation MemberReference argsList MemberReference arrayNode MemberReference s buildVariableArityArguments IfStatement BinaryOperation > MethodInvocation arrayNode size Literal 0 StatementExpression MethodInvocation MemberReference argsList MemberReference arrayNode MemberReference s buildSpecificArityArguments BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference argsList MemberReference args MemberReference s buildSpecificArityArguments BreakStatement	1
MethodDeclaration Modifier protected ReferenceType IRubyObject callMethodMissing FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType DynamicMethod method FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference callType MemberReference arg0 MemberReference block callMethodMissing	0
MethodDeclaration Modifier public static ReferenceType RubyClass createFixnumClass FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator MethodInvocation runtime Literal "Fixnum" MethodInvocation runtime getInteger MemberReference ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR defineClass StatementExpression MethodInvocation runtime MemberReference setFixnum StatementExpression Assignment MemberReference index MemberReference ClassIndex FIXNUM = StatementExpression Assignment MemberReference ClassCreator ReferenceType RubyModule ReferenceType MethodDeclaration Modifier public Annotation Override BasicType boolean isKindOf FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyFixnum = IfStatement MethodInvocation ! runtime is1_9 BlockStatement StatementExpression MethodInvocation MethodInvocation runtime getPrecision includeModule StatementExpression MethodInvocation ClassReference ReferenceType RubyFixnum defineAnnotatedMethods ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference runtime ArraySelector MemberReference i fixnumCache ClassCreator ReferenceType RubyFixnum MemberReference BinaryOperation - MemberReference i MemberReference CACHE_OFFSET = ReturnStatement MemberReference	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair required Literal 1 ElementValuePair meta Literal true ReferenceType RubyArray split FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType RubyString VariableDeclarator filename MethodInvocation MemberReference context MemberReference arg get_path ReturnStatement MethodInvocation context MethodInvocation MethodInvocation MemberReference context MemberReference recv MemberReference filename dirname MethodInvocation MemberReference context MemberReference recv ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference filename basename newArray getRuntime	0
MethodDeclaration Modifier public static LocalVariableDeclaration ReferenceType TestHelper VariableDeclarator helper ClassCreator ReferenceType TestHelper Literal "A" StatementExpression MethodInvocation helper privateMethod StatementExpression MethodInvocation TestHelper staticPrivateMethod	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<=" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_le19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyString ReturnStatement MethodInvocation context MethodInvocation BinaryOperation <= MethodInvocation Cast ReferenceType RubyString MemberReference other op_cmp19 Literal 0 newBoolean getRuntime ReturnStatement MethodInvocation RubyComparable MemberReference context This MemberReference other op_le	1
MethodDeclaration Modifier public ReferenceType String getScriptFileName ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation getScriptFileName get	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block IfStatement BinaryOperation >= MemberReference box callCount Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference args MemberReference block call MemberReference context MemberReference name tryJitReturnMethod ReturnStatement MethodInvocation box.actualMethod MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference args MemberReference block call	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair required Literal 2 ElementValuePair optional Literal 4 ElementValuePair meta Literal true ReferenceType IRubyObject getaddrinfo FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args StatementExpression Assignment MemberReference args MethodInvocation Arity MethodInvocation context getRuntime MemberReference args Literal 2 Literal 4 scanArgs = TryStatement LocalVariableDeclaration ReferenceType Ruby VariableDeclarator r MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator host MemberReference ArraySelector Literal 0 args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator port MemberReference ArraySelector Literal 1 args LocalVariableDeclaration BasicType boolean VariableDeclarator emptyHost BinaryOperation || MethodInvocation host isNil MethodInvocation host MethodInvocation isEmpty convertToString IfStatement BinaryOperation instanceof MemberReference port ReferenceType RubyString BlockStatement StatementExpression Assignment MemberReference port MethodInvocation MemberReference context MemberReference recv ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference port getservbyname = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator socktype MemberReference ArraySelector Literal 3 args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator flags MemberReference ArraySelector Literal 5 args LocalVariableDeclaration BasicType boolean VariableDeclarator sock_stream Literal true LocalVariableDeclaration BasicType boolean VariableDeclarator sock_dgram Literal true IfStatement MethodInvocation ! socktype isNil BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator val MethodInvocation RubyNumeric MemberReference socktype fix2int IfStatement BinaryOperation == MemberReference val MethodInvocation SOCK_STREAM value BlockStatement StatementExpression Assignment MemberReference sock_dgram Literal false = IfStatement BinaryOperation == MemberReference val MethodInvocation SOCK_DGRAM value BlockStatement StatementExpression Assignment MemberReference sock_stream Literal false = LocalVariableDeclaration ReferenceType InetAddress VariableDeclarator addrs Literal null IfStatement MethodInvocation ! flags isNil BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator flag MethodInvocation RubyNumeric MemberReference flags fix2int IfStatement BinaryOperation && BinaryOperation == MemberReference flag Literal 1 MemberReference emptyHost BlockStatement StatementExpression Assignment MemberReference addrs MethodInvocation InetAddress Literal "0.0.0.0" getAllByName = IfStatement BinaryOperation == MemberReference addrs Literal null StatementExpression Assignment MemberReference addrs MethodInvocation InetAddress TernaryExpression MemberReference emptyHost Literal null MethodInvocation host MethodInvocation toString convertToString getAllByName = LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType IRubyObject VariableDeclarator l ClassCreator ReferenceType ArrayList TypeArgument ReferenceType IRubyObject ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference addrs length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator c IfStatement MemberReference sock_dgram BlockStatement StatementExpression Assignment MemberReference c ArrayCreator ReferenceType IRubyObject Literal 7 = StatementExpression Assignment MemberReference ArraySelector Literal 0 c MethodInvocation r Literal "AF_INET" newString = StatementExpression Assignment MemberReference ArraySelector Literal 1 c MemberReference port = StatementExpression Assignment MemberReference ArraySelector Literal 2 c MethodInvocation r MemberReference ArraySelector MemberReference i MethodInvocation getCanonicalHostName addrs newString = StatementExpression Assignment MemberReference ArraySelector Literal 3 c MethodInvocation r MemberReference ArraySelector MemberReference i MethodInvocation getHostAddress addrs newString = StatementExpression Assignment MemberReference ArraySelector Literal 4 c MethodInvocation r MemberReference PF_INET newFixnum = StatementExpression Assignment MemberReference ArraySelector Literal 5 c MethodInvocation r MemberReference SOCK_DGRAM newFixnum = StatementExpression Assignment MemberReference ArraySelector Literal 6 c MethodInvocation r MemberReference IPPROTO_UDP newFixnum = StatementExpression MethodInvocation l MethodInvocation r MemberReference c newArrayNoCopy add IfStatement MemberReference sock_stream BlockStatement StatementExpression Assignment MemberReference c ArrayCreator ReferenceType IRubyObject Literal 7 = StatementExpression Assignment MemberReference ArraySelector Literal 0 c MethodInvocation r Literal "AF_INET" newString = StatementExpression Assignment MemberReference ArraySelector Literal 1 c MemberReference port = StatementExpression Assignment MemberReference ArraySelector Literal 2 c MethodInvocation r MemberReference ArraySelector MemberReference i MethodInvocation getCanonicalHostName addrs newString = StatementExpression Assignment MemberReference ArraySelector Literal 3 c MethodInvocation r MemberReference ArraySelector MemberReference i MethodInvocation getHostAddress addrs newString = StatementExpression Assignment MemberReference ArraySelector Literal 4 c MethodInvocation r MemberReference PF_INET newFixnum = StatementExpression Assignment MemberReference ArraySelector Literal 5 c MethodInvocation r MemberReference SOCK_STREAM newFixnum = StatementExpression Assignment MemberReference ArraySelector Literal 6 c MethodInvocation r MemberReference newFixnum = StatementExpression MethodInvocation l MethodInvocation r MemberReference c newArrayNoCopy add ReturnStatement MethodInvocation r MemberReference l newArray CatchClause CatchClauseParameter UnknownHostException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "getaddrinfo: name or service not known" sockerr	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "*" ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_mul19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType RubyString VariableDeclarator result MethodInvocation MemberReference context MemberReference other multiplyByteList StatementExpression MethodInvocation result This Assignment MemberReference result.value encoding MemberReference value encoding = copyCodeRangeForSubstr ReturnStatement MemberReference result	1
MethodDeclaration Modifier public compileSValue FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType SValueNode VariableDeclarator svalueNode Cast ReferenceType SValueNode MemberReference node StatementExpression MethodInvocation MethodInvocation svalueNode getValue MemberReference context Literal true compile StatementExpression MethodInvocation context singlifySplattedValue IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject trust FormalParameter ReferenceType ThreadContext context IfStatement BinaryOperation && MethodInvocation isUntrusted MethodInvocation ! isImmediate BlockStatement StatementExpression MethodInvocation checkFrozen StatementExpression Assignment MemberReference flags MemberReference ~ &= ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType INSTASGNNODE	0
MethodDeclaration Modifier public compileGlobalAsgn FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType GlobalAsgnNode VariableDeclarator globalAsgnNode Cast ReferenceType GlobalAsgnNode MemberReference node LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator value ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation globalAsgnNode getValueNode MemberReference context Literal true compile IfStatement BinaryOperation == MethodInvocation globalAsgnNode MethodInvocation length getName Literal 2 BlockStatement SwitchStatement MethodInvocation globalAsgnNode MethodInvocation Literal 1 charAt getName SwitchStatementCase Literal '_' StatementExpression MethodInvocation context MethodInvocation MemberReference value assignLastLine getVariableCompiler BreakStatement SwitchStatementCase Literal '~' StatementExpression MethodInvocation context MethodInvocation MemberReference value assignBackRef getVariableCompiler BreakStatement SwitchStatementCase StatementExpression MethodInvocation context MethodInvocation globalAsgnNode getName MemberReference value assignGlobalVariable BlockStatement StatementExpression MethodInvocation context MethodInvocation globalAsgnNode getName MemberReference value assignGlobalVariable IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public Annotation Override beginMethod FormalParameter ReferenceType CompilerCallback bodyPrep FormalParameter ReferenceType scope StatementExpression MethodInvocation method start StatementExpression MethodInvocation method MemberReference StandardASMCompiler THREADCONTEXT_INDEX aload StatementExpression MethodInvocation Literal "getRuntime" MethodInvocation ClassReference ReferenceType Ruby sig invokeThreadContext StatementExpression MethodInvocation method dup StatementExpression MethodInvocation method MethodInvocation astore StatementExpression MethodInvocation Literal "getNil" MethodInvocation ClassReference ReferenceType IRubyObject sig invokeRuby StatementExpression MethodInvocation method MethodInvocation astore StatementExpression MethodInvocation variableCompiler MemberReference bodyPrep MemberReference scope beginClass StatementExpression MethodInvocation method MemberReference scopeStart label	0
MethodDeclaration Modifier public FormalParameter ReferenceType Label arg0 StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference arg0 visitJumpInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType Object call FormalParameter ReferenceType Object recv FormalParameter ReferenceType String method FormalParameter ReferenceType Object args BSFException TryStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference recv MemberReference method MemberReference args ClassReference ReferenceType Object invokeMethod CatchClause CatchClauseParameter Exception excptn ThrowStatement ClassCreator ReferenceType BSFException MemberReference BSFException REASON_EXECUTION_ERROR MethodInvocation excptn getMessage MemberReference excptn	0
MethodDeclaration Modifier private BasicType int matchPos FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyString str FormalParameter BasicType int pos IfStatement BinaryOperation != MemberReference pos Literal 0 BlockStatement IfStatement BinaryOperation < MemberReference pos Literal 0 BlockStatement StatementExpression Assignment MemberReference pos MethodInvocation str strLength += IfStatement BinaryOperation < MemberReference pos Literal 0 ReturnStatement MemberReference pos StatementExpression Assignment MemberReference pos MethodInvocation MemberReference str MemberReference pos Literal false adjustStartPos19 = ReturnStatement MethodInvocation MemberReference context MemberReference str MemberReference pos Literal false search19	1
MethodDeclaration Modifier public retrieveGlobalVariable FormalParameter ReferenceType String name StatementExpression MethodInvocation StatementExpression MethodInvocation method MemberReference name ldc StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Ruby ClassReference ReferenceType String sig invokeUtilityMethod	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isSingleton ReturnStatement Literal false	0
MethodDeclaration Modifier protected ReferenceType Class resolveClass FormalParameter ReferenceType ObjectStreamClass desc IOException ClassNotFoundException ReturnStatement MethodInvocation Class MethodInvocation desc getName Literal true MethodInvocation runtime getJRubyClassLoader forName	1
MethodDeclaration Modifier protected enterAction FormalParameter ReferenceType KeyEvent event StatementExpression MethodInvocation event consume IfStatement MethodInvocation completePopup isVisible BlockStatement IfStatement BinaryOperation != MethodInvocation completeCombo getSelectedItem Literal null StatementExpression MethodInvocation MemberReference start MemberReference end Cast ReferenceType String MethodInvocation completeCombo getSelectedItem replaceText StatementExpression MethodInvocation completePopup Literal false setVisible ReturnStatement StatementExpression MethodInvocation Literal "\n" Literal null append LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation getLine StatementExpression Assignment MemberReference startPos MethodInvocation area MethodInvocation getLength getDocument = StatementExpression MethodInvocation inputJoin MemberReference Channel LINE MemberReference line send	1
MethodDeclaration Modifier public FormalParameter ReferenceType DateTime dt StatementExpression Assignment This MemberReference dt MemberReference dt =	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair meta Literal true ReferenceType IRubyObject stop FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject receiver LocalVariableDeclaration ReferenceType RubyThread VariableDeclarator rubyThread MethodInvocation context getThread SynchronizedStatement MemberReference rubyThread StatementExpression MethodInvocation rubyThread MemberReference context checkMail TryStatement StatementExpression MethodInvocation receiver MethodInvocation getThreadService MethodInvocation Literal false setCritical getRuntime StatementExpression Assignment MemberReference rubyThread status MemberReference Status SLEEP = StatementExpression MethodInvocation rubyThread wait CatchClause CatchClauseParameter InterruptedException ie StatementExpression MethodInvocation rubyThread MemberReference context checkMail StatementExpression Assignment MemberReference rubyThread status MemberReference Status RUN = ReturnStatement MethodInvocation receiver MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public free IfStatement MethodInvocation released Literal true BlockStatement ThrowStatement MethodInvocation runtime Literal already freed" newRuntimeError StatementExpression MethodInvocation handle free	0
MethodDeclaration Modifier public static ReferenceType String pretty FormalParameter ReferenceType Class retval FormalParameter ReferenceType Class params ReturnStatement BinaryOperation + MethodInvocation MemberReference params prettyParams MethodInvocation MemberReference retval	0
MethodDeclaration Modifier public ReferenceType Class FormalParameter ReferenceType String className TryStatement ReturnStatement MethodInvocation MemberReference className CatchClause CatchClauseParameter ClassNotFoundException cnfExcptn ThrowStatement MethodInvocation runtime BinaryOperation + Literal "cannot load Java class " MemberReference className MemberReference className MemberReference cnfExcptn Literal false newNameError CatchClause CatchClauseParameter eiie ThrowStatement MethodInvocation runtime BinaryOperation + Literal "cannot Java class " MemberReference className MemberReference className MemberReference eiie Literal false newNameError CatchClause CatchClauseParameter LinkageError le ThrowStatement MethodInvocation runtime BinaryOperation + Literal "cannot link Java class " MemberReference className MemberReference className MemberReference le Literal false newNameError CatchClause CatchClauseParameter SecurityException se ThrowStatement MethodInvocation runtime BinaryOperation + Literal cannot load Java class " MemberReference className MemberReference className MemberReference se Literal false newNameError	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair meta Literal true ReferenceType RubyObject get_with_class FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject obj LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime IfStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyClass BlockStatement ThrowStatement MethodInvocation runtime MemberReference obj MethodInvocation runtime getClassClass newTypeError LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator clazz Cast ReferenceType RubyClass MemberReference obj LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator javaClass Literal null LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType String VariableDeclarator names ClassCreator ReferenceType HashSet TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Class TypeArgument ? VariableDeclarator interfaceList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Class TypeArgument ? LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType IRubyObject VariableDeclarator ancestors MethodInvocation clazz getAncestorList LocalVariableDeclaration BasicType boolean VariableDeclarator skipRemainingClasses Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType IRubyObject VariableDeclarator ancestorObject MemberReference ancestors BlockStatement LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator ancestor Cast ReferenceType RubyModule MemberReference ancestorObject IfStatement BinaryOperation instanceof MemberReference ancestor ReferenceType RubyClass BlockStatement IfStatement MemberReference skipRemainingClasses ContinueStatement IfStatement MethodInvocation ! ancestor MethodInvocation Literal "@java_proxy_class" fastHasInstanceVariable getInstanceVariables BlockStatement StatementExpression Assignment MemberReference skipRemainingClasses Literal true = ContinueStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator var MethodInvocation ancestor MethodInvocation Literal "@java_class" fastGetInstanceVariable getInstanceVariables IfStatement BinaryOperation == MemberReference var Literal null BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "no java_class defined for proxy (or ancestor): " MemberReference ancestor newTypeError IfStatement BinaryOperation instanceof MemberReference var ReferenceType JavaClass BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "invalid java_class defined for proxy (or ancestor): " MemberReference ancestor Literal ": " MemberReference var newTypeError IfStatement BinaryOperation == MemberReference javaClass Literal null BlockStatement StatementExpression Assignment MemberReference javaClass Cast ReferenceType JavaClass MemberReference var = IfStatement BinaryOperation != MemberReference javaClass MemberReference var BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "java_class defined for " MemberReference clazz Literal " (" MemberReference javaClass Literal ") does not match java_class for ancestor " MemberReference ancestor Literal " (" MemberReference var Literal ")" newTypeError StatementExpression Assignment MemberReference var MethodInvocation ancestor MethodInvocation Literal "@java_interfaces" fastGetInstanceVariable getInstanceVariables = IfStatement BinaryOperation && BinaryOperation != MemberReference var Literal null BinaryOperation instanceof MemberReference var ReferenceType RubyNil BlockStatement IfStatement BinaryOperation instanceof MemberReference var ReferenceType RubyArray BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "invalid java_interfaces defined for proxy (or ancestor): " MemberReference ancestor Literal ": " MemberReference var newTypeError LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ifcArray Cast ReferenceType RubyArray MemberReference var LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation ifcArray size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference size BinaryOperation >= MemberReference -- i Literal 0 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator ifc MethodInvocation ifcArray MemberReference i eltInternal IfStatement BinaryOperation instanceof MemberReference ifc ReferenceType JavaClass BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "invalid java interface defined for proxy (or ancestor): " MemberReference ancestor Literal ": " MemberReference ifc newTypeError LocalVariableDeclaration ReferenceType Class VariableDeclarator interfaceClass Cast ReferenceType JavaClass MemberReference ifc IfStatement MethodInvocation ! interfaceClass isInterface BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "invalid java interface defined for proxy (or ancestor): " MemberReference ancestor Literal ": " MemberReference ifc Literal " (not an interface)" newTypeError IfStatement MethodInvocation ! interfaceList MemberReference interfaceClass contains BlockStatement StatementExpression MethodInvocation interfaceList MemberReference interfaceClass add StatementExpression Assignment MemberReference var MethodInvocation ancestor MethodInvocation Literal "@__java_ovrd_methods" fastGetInstanceVariable getInstanceVariables = IfStatement BinaryOperation == MemberReference var Literal null BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType DynamicMethod VariableDeclarator methods LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator methodNames SynchronizedStatement Assignment MemberReference methods MethodInvocation ancestor getMethods = StatementExpression Assignment MemberReference methodNames MethodInvocation RubyArray MemberReference runtime MethodInvocation methods size = ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator methodName MethodInvocation methods keySet BlockStatement IfStatement MethodInvocation ! EXCLUDE_METHODS MemberReference methodName contains BlockStatement StatementExpression MethodInvocation names MemberReference methodName add StatementExpression MethodInvocation methodNames MethodInvocation runtime MemberReference methodName newString append StatementExpression MethodInvocation ancestor Literal "@__java_ovrd_methods" MemberReference methodNames fastSetInstanceVariable BlockStatement IfStatement BinaryOperation instanceof MemberReference var ReferenceType RubyArray BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "invalid @__java_ovrd_methods defined for proxy: " MemberReference ancestor Literal ": " MemberReference var newTypeError LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator methodNames Cast ReferenceType RubyArray MemberReference var LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation methodNames size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference size BinaryOperation >= MemberReference -- i Literal 0 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator methodName MethodInvocation methodNames MemberReference i eltInternal IfStatement BinaryOperation instanceof MemberReference methodName ReferenceType RubyString BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "invalid method name defined for proxy (or ancestor): " MemberReference ancestor Literal ": " MemberReference methodName newTypeError StatementExpression MethodInvocation names MethodInvocation methodName asJavaString add IfStatement MethodInvocation ! EXCLUDE_MODULES MethodInvocation ancestor getName contains BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType DynamicMethod VariableDeclarator methods SynchronizedStatement Assignment MemberReference methods MethodInvocation ancestor getMethods = ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator methodName MethodInvocation methods keySet BlockStatement IfStatement MethodInvocation ! EXCLUDE_METHODS MemberReference methodName contains BlockStatement StatementExpression MethodInvocation names MemberReference methodName add IfStatement BinaryOperation == MemberReference javaClass Literal null BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "unable to create proxy class: no java_class defined for " MemberReference clazz newArgumentError LocalVariableDeclaration BasicType int VariableDeclarator interfaceCount MethodInvocation interfaceList size LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator interfaces ArrayCreator ReferenceType Class TypeArgument ? MemberReference interfaceCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference interfaceCount BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i interfaces MethodInvocation interfaceList MemberReference i get = TryStatement ReturnStatement MethodInvocation MethodInvocation recv getRuntime MethodInvocation javaClass javaClass MemberReference interfaces MemberReference names getProxyClass CatchClause CatchClauseParameter Error e LocalVariableDeclaration ReferenceType RaiseException VariableDeclarator ex MethodInvocation recv MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "unable to create proxy class for " MethodInvocation javaClass getValue Literal " : " MethodInvocation e getMessage newArgumentError getRuntime StatementExpression MethodInvocation ex MemberReference e initCause ThrowStatement MemberReference ex CatchClause CatchClauseParameter InvocationTargetException e LocalVariableDeclaration ReferenceType RaiseException VariableDeclarator ex MethodInvocation recv MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "unable to create proxy class for " MethodInvocation javaClass getValue Literal " : " MethodInvocation e getMessage newArgumentError getRuntime StatementExpression MethodInvocation ex MemberReference e initCause ThrowStatement MemberReference ex	1
MethodDeclaration Modifier public Annotation Override BasicType int getNativeTypeIndex ReturnStatement MemberReference ClassIndex STRING	0
MethodDeclaration Modifier private ReferenceType Node cond0 FormalParameter ReferenceType Node node StatementExpression MethodInvocation MemberReference node checkAssignmentInCondition LocalVariableDeclaration ReferenceType Node VariableDeclarator leftNode Literal null LocalVariableDeclaration ReferenceType Node VariableDeclarator rightNode Literal null SwitchStatement MethodInvocation node getNodeType SwitchStatementCase DREGEXPNODE BlockStatement LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation node getPosition ReturnStatement ClassCreator ReferenceType Match2Node MemberReference position MemberReference node ClassCreator ReferenceType GlobalVarNode MemberReference position Literal "$_" SwitchStatementCase ANDNODE StatementExpression Assignment MemberReference leftNode MethodInvocation Cast ReferenceType AndNode MemberReference node cond0 = StatementExpression Assignment MemberReference rightNode MethodInvocation Cast ReferenceType AndNode MemberReference node cond0 = ReturnStatement ClassCreator ReferenceType AndNode MethodInvocation node getPosition MethodInvocation MemberReference leftNode makeNullNil MethodInvocation MemberReference rightNode makeNullNil SwitchStatementCase ORNODE StatementExpression Assignment MemberReference leftNode MethodInvocation Cast ReferenceType OrNode MemberReference node cond0 = StatementExpression Assignment MemberReference rightNode MethodInvocation Cast ReferenceType OrNode MemberReference node cond0 = ReturnStatement ClassCreator ReferenceType OrNode MethodInvocation node getPosition MethodInvocation MemberReference leftNode makeNullNil MethodInvocation MemberReference rightNode makeNullNil SwitchStatementCase DOTNODE BlockStatement LocalVariableDeclaration ReferenceType DotNode VariableDeclarator dotNode Cast ReferenceType DotNode MemberReference node IfStatement MethodInvocation dotNode isLiteral ReturnStatement MemberReference node LocalVariableDeclaration ReferenceType String VariableDeclarator label MethodInvocation String BinaryOperation + Literal "FLIP" MethodInvocation node hashCode valueOf StatementExpression MethodInvocation currentScope MethodInvocation MemberReference label addVariable getLocalScope LocalVariableDeclaration BasicType int VariableDeclarator slot MethodInvocation currentScope MemberReference label isDefined ReturnStatement ClassCreator ReferenceType FlipNode MethodInvocation node getPosition MethodInvocation Cast ReferenceType DotNode MemberReference node getFlipConditionNode MethodInvocation Cast ReferenceType DotNode MemberReference node getFlipConditionNode MethodInvocation dotNode isExclusive MemberReference slot SwitchStatementCase REGEXPNODE StatementExpression MethodInvocation MemberReference ID REGEXP_LITERAL_IN_CONDITION MemberReference node Literal "regex literal in condition" warningUnlessEOption ReturnStatement ClassCreator ReferenceType MatchNode MethodInvocation node getPosition MemberReference node ReturnStatement MemberReference node	1
MethodDeclaration Modifier public final Annotation Deprecated ReferenceType IRubyObject convertToType FormalParameter ReferenceType RubyClass target FormalParameter BasicType int convertMethodIndex ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Not supported; use the String	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "even?" ReferenceType RubyBoolean even_p FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MethodInvocation MemberReference context Literal "%" MethodInvocation RubyFixnum MemberReference runtime two callMethod MethodInvocation RubyFixnum MemberReference runtime zero BlockStatement ReturnStatement MethodInvocation runtime getTrue ReturnStatement MethodInvocation runtime getFalse	1
MethodDeclaration Modifier public ReferenceType Class TypeArgument ? getParameterTypes ReturnStatement MemberReference parameterTypes	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject object FormalParameter ReferenceType IRubyObject value ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 0 MemberReference name MemberReference object MemberReference value setVariable	0
MethodDeclaration Modifier public static ReferenceType CacheEntry FormalParameter ReferenceType RubyClass clazz FormalParameter ReferenceType String name1 FormalParameter ReferenceType String name2 FormalParameter ReferenceType String name3 FormalParameter ReferenceType String name4 FormalParameter ReferenceType String name5 FormalParameter ReferenceType String name6 FormalParameter ReferenceType String name7 FormalParameter ReferenceType String name8 LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator entry MethodInvocation clazz MemberReference name1 IfStatement BinaryOperation == MemberReference entry method MemberReference INSTANCE BlockStatement ReturnStatement MethodInvocation MemberReference clazz MemberReference name2 MemberReference name3 MemberReference name4 MemberReference name5 MemberReference name6 MemberReference name7 MemberReference name8 ReturnStatement MemberReference entry	1
MethodDeclaration Modifier private static BasicType long FormalParameter ReferenceType ByteBuffer encode StatementExpression MethodInvocation encode MemberReference ByteOrder order LocalVariableDeclaration BasicType long VariableDeclarator value BinaryOperation & MethodInvocation encode getInt Literal StatementExpression MethodInvocation encode MemberReference ByteOrder BIG_ENDIAN order ReturnStatement MemberReference value	0
MethodDeclaration Modifier public ReferenceType CFG_Edge createEdge FormalParameter ReferenceType BasicBlock s FormalParameter ReferenceType BasicBlock d ReturnStatement ClassCreator ReferenceType CFG_Edge MemberReference s MemberReference d	0
MethodDeclaration Modifier public ReferenceType IRubyObject getValueThreeDepthZeroOrNil FormalParameter ReferenceType IRubyObject nil StatementExpression MethodInvocation assertGetValueThreeDepthZeroOrNil LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MemberReference ArraySelector Literal 3 variableValues IfStatement BinaryOperation == MemberReference value Literal null BlockStatement ReturnStatement MethodInvocation MemberReference value setValueThreeDepthZero ReturnStatement MemberReference value	0
MethodDeclaration Modifier private ReferenceType Encoding isCompatibleWith FormalParameter ReferenceType RubyString other LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc1 MemberReference value encoding Statement LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc2 MemberReference other.value encoding IfStatement BinaryOperation == MemberReference enc1 MemberReference enc2 ReturnStatement MemberReference enc1 IfStatement BinaryOperation == MemberReference other.value realSize Literal 0 ReturnStatement MemberReference enc1 IfStatement BinaryOperation == MemberReference value realSize Literal 0 ReturnStatement MemberReference enc2 IfStatement BinaryOperation || MethodInvocation ! enc1 isAsciiCompatible MethodInvocation ! enc2 isAsciiCompatible ReturnStatement Literal null ReturnStatement MethodInvocation RubyEncoding MemberReference enc1 MethodInvocation scanForCodeRange MemberReference enc2 MethodInvocation other scanForCodeRange areCompatible	1
MethodDeclaration Modifier public static ReferenceType Block newInterpretedClosure FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType body FormalParameter ReferenceType IRubyObject self LocalVariableDeclaration ReferenceType Binding VariableDeclarator binding MethodInvocation context MemberReference self currentBinding ReturnStatement ClassCreator ReferenceType Block MemberReference body MemberReference binding	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "matched" ReferenceType IRubyObject matched FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation check IfStatement MethodInvocation ! isMatched ReturnStatement MethodInvocation MethodInvocation getNil getRuntime ReturnStatement MethodInvocation MethodInvocation context getRuntime BinaryOperation + MemberReference lastPos MemberReference beg BinaryOperation + MemberReference lastPos MemberReference end extractRange	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "each_with_index" ElementValuePair frame Literal true ReferenceType IRubyObject each_with_index19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference self MemberReference block each_with_index MethodInvocation MethodInvocation context getRuntime MemberReference self Literal "each_with_index" enumeratorize	1
MethodDeclaration Modifier public ReferenceType IRubyObject when FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator expressions MethodInvocation RuntimeHelpers MethodInvocation expressionNodes MemberReference runtime MemberReference context MemberReference self MemberReference aBlock splatValue ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 VariableDeclarator k MethodInvocation expressions getLength BinaryOperation < MemberReference j MemberReference k MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator test MethodInvocation expressions MemberReference j eltInternal IfStatement BinaryOperation || BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation eqq MethodInvocation isTrue MemberReference context MemberReference self MemberReference test MemberReference value call BinaryOperation && BinaryOperation == MemberReference value Literal null MethodInvocation test isTrue BlockStatement ReturnStatement MethodInvocation bodyNode MemberReference runtime MemberReference context MemberReference self MemberReference aBlock ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType RubyModule createJavaArrayUtilitiesModule FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator javaArrayUtils MethodInvocation runtime Literal "JavaArrayUtilities" defineModule StatementExpression MethodInvocation javaArrayUtils ClassReference ReferenceType JavaArrayUtilities defineAnnotatedMethods ReturnStatement MemberReference javaArrayUtils	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock getReceiverNode MethodInvocation arg1 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock MethodInvocation arg2 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock call	0
MethodDeclaration Modifier public BasicType long getTotalTime ReturnStatement MemberReference totalTime	0
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public ReferenceType Arity getArity ReturnStatement MemberReference Arity NO_ARGUMENTS	0
MethodDeclaration Modifier public static BasicType long FormalParameter ReferenceType RubyBignum value LocalVariableDeclaration ReferenceType BigInteger VariableDeclarator big MethodInvocation value getValue IfStatement BinaryOperation || BinaryOperation < MethodInvocation big MemberReference compareTo Literal 0 BinaryOperation > MethodInvocation big MemberReference compareTo Literal 0 BlockStatement ThrowStatement MethodInvocation value MethodInvocation Literal "bignum too big to convert into newRangeError getRuntime ReturnStatement MethodInvocation big longValue	0
MethodDeclaration Modifier private static BasicType long strLengthWithCodeRangeNonAsciiCompatible FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int end LocalVariableDeclaration BasicType int VariableDeclarator cr Literal 0 VariableDeclarator c Literal 0 ForStatement ForControl Assignment MemberReference c Literal 0 = BinaryOperation < MemberReference p MemberReference end MemberReference ++ c BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator cl MethodInvocation MemberReference enc MemberReference bytes MemberReference p MemberReference end preciseLength IfStatement BinaryOperation > MemberReference cl Literal 0 BlockStatement StatementExpression Assignment MemberReference cr MemberReference CR_VALID |= StatementExpression Assignment MemberReference p MemberReference cl += BlockStatement StatementExpression Assignment MemberReference cr MemberReference CR_BROKEN = StatementExpression MemberReference ++ p ReturnStatement MethodInvocation MemberReference c TernaryExpression BinaryOperation == MemberReference cr Literal 0 MemberReference CR_7BIT MemberReference cr pack	1
MethodDeclaration Modifier public final BasicType int indexOf FormalParameter BasicType long offset FormalParameter BasicType byte value ReturnStatement TernaryExpression BinaryOperation == MemberReference value Literal 0 Cast BasicType int MethodInvocation IO BinaryOperation + MemberReference address MemberReference offset getStringLength Cast BasicType int MethodInvocation IO BinaryOperation + MemberReference address MemberReference offset MemberReference value indexOf	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "-" ElementValuePair required Literal 1 ReferenceType IRubyObject op_minus FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType RubyBigDecimal VariableDeclarator val MethodInvocation MemberReference arg Literal false getVpValue IfStatement BinaryOperation == MemberReference val Literal null BlockStatement ReturnStatement MethodInvocation MemberReference context Literal "-" MemberReference arg callCoerced LocalVariableDeclaration ReferenceType RubyBigDecimal VariableDeclarator res MethodInvocation MemberReference val handleMinusSpecialValues IfStatement BinaryOperation != MemberReference res Literal null BlockStatement ReturnStatement MemberReference res ReturnStatement ClassCreator MethodInvocation setResult ReferenceType RubyBigDecimal MethodInvocation getRuntime MethodInvocation value MemberReference val value subtract	1
MethodDeclaration Modifier public register FormalParameter ReferenceType IRubyObject value LocalVariableDeclaration ReferenceType Map VariableDeclarator cache MethodInvocation MemberReference value selectCache StatementExpression MethodInvocation cache MemberReference value ClassCreator ReferenceType Integer MethodInvocation cache size put	1
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation iVisited getArgsNode MemberReference context Literal "method" compileGetArgumentDefinition	0
MethodDeclaration Modifier private ReferenceType IRubyObject op_divide FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other FormalParameter BasicType boolean slash LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType BigInteger VariableDeclarator otherValue IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference otherValue MethodInvocation Cast ReferenceType RubyFixnum MemberReference other fix2big = IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement StatementExpression Assignment MemberReference otherValue Cast ReferenceType RubyBignum MemberReference other = IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement LocalVariableDeclaration BasicType double VariableDeclarator div BinaryOperation / MethodInvocation This big2dbl Cast ReferenceType RubyFloat MemberReference other IfStatement MemberReference slash BlockStatement ReturnStatement MethodInvocation RubyFloat MemberReference runtime MemberReference div newFloat BlockStatement ReturnStatement MethodInvocation RubyNumeric MemberReference runtime MemberReference div dbl2num BlockStatement ReturnStatement MethodInvocation MemberReference context TernaryExpression MemberReference slash Literal "/" Literal "div" MemberReference other coerceBin IfStatement BinaryOperation == MethodInvocation otherValue signum Literal 0 ThrowStatement MethodInvocation runtime newZeroDivisionError LocalVariableDeclaration Modifier final ReferenceType BigInteger VariableDeclarator result IfStatement BinaryOperation == BinaryOperation * MethodInvocation value signum MethodInvocation otherValue signum Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType BigInteger VariableDeclarator results MethodInvocation value MemberReference otherValue divideAndRemainder StatementExpression Assignment MemberReference result TernaryExpression BinaryOperation != MemberReference ArraySelector Literal 1 MethodInvocation signum results Literal 0 MemberReference ArraySelector Literal 0 MethodInvocation MemberReference BigInteger subtract results MemberReference ArraySelector Literal 0 results = BlockStatement StatementExpression Assignment MemberReference result MethodInvocation value MemberReference otherValue divide = ReturnStatement MethodInvocation MethodInvocation getRuntime MemberReference result bignorm	1
MethodDeclaration Modifier public BasicType boolean isPreOrder ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation Override ReferenceType String list ReturnStatement SuperMethodInvocation list	1
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType NativeType type ReturnStatement MethodInvocation MethodInvocation size MemberReference type getType	0
MethodDeclaration Modifier public ReferenceType IRubyObject getLastExitStatus ReturnStatement MemberReference lastExitStatus	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "%" Literal "modulo" ElementValuePair required Literal 1 ReferenceType IRubyObject op_mod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration Modifier final ReferenceType BigInteger VariableDeclarator otherValue IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference otherValue MethodInvocation Cast ReferenceType RubyFixnum MemberReference other fix2big = IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement StatementExpression Assignment MemberReference otherValue Cast ReferenceType RubyBignum MemberReference other = BlockStatement ReturnStatement MethodInvocation MemberReference context Literal "%" MemberReference other coerceBin LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MethodInvocation otherValue signum Literal 0 ThrowStatement MethodInvocation runtime newZeroDivisionError LocalVariableDeclaration ReferenceType BigInteger VariableDeclarator result MethodInvocation value MethodInvocation otherValue abs mod IfStatement BinaryOperation && BinaryOperation == MethodInvocation otherValue signum Literal - 1 BinaryOperation != MethodInvocation result signum Literal 0 StatementExpression Assignment MemberReference result MethodInvocation otherValue MemberReference result add = ReturnStatement MethodInvocation MemberReference runtime MemberReference result bignorm	1
MethodDeclaration Modifier public ReferenceType Operand buildFCall FormalParameter ReferenceType FCallNode fcallNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType Node VariableDeclarator callArgsNode MethodInvocation fcallNode getArgsNode LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Operand VariableDeclarator args MethodInvocation MemberReference callArgsNode MemberReference s setupCallArgs LocalVariableDeclaration ReferenceType Operand VariableDeclarator block MethodInvocation MethodInvocation fcallNode getIterNode MemberReference s setupCallClosure LocalVariableDeclaration ReferenceType Variable VariableDeclarator callResult MethodInvocation s getNewVariable LocalVariableDeclaration ReferenceType IR_Instr VariableDeclarator callInstr ClassCreator ReferenceType CALL_Instr MemberReference callResult ClassCreator ReferenceType MethAddr MethodInvocation fcallNode getName MethodInvocation args ArrayCreator ReferenceType Operand MethodInvocation args size toArray MemberReference block StatementExpression MethodInvocation s MemberReference callInstr addInstr ReturnStatement MemberReference callResult	1
MethodDeclaration Modifier public setMethodAdapter FormalParameter ReferenceType SkinnyMethodAdapter sma StatementExpression Assignment This MemberReference method MemberReference sma =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "combination" ReferenceType IRubyObject combination FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject num FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation ! block isGiven ReturnStatement MethodInvocation MemberReference runtime This Literal "combination" MemberReference num enumeratorize LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation RubyNumeric MemberReference num num2int IfStatement BinaryOperation == MemberReference n Literal 0 BlockStatement StatementExpression MethodInvocation block MemberReference context MethodInvocation MemberReference runtime newEmptyArray yield IfStatement BinaryOperation == MemberReference n Literal 1 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference realLength MemberReference ++ i BlockStatement StatementExpression MethodInvocation block MemberReference context MemberReference ArraySelector BinaryOperation + MemberReference begin MemberReference i values yield IfStatement BinaryOperation && BinaryOperation >= MemberReference n Literal 0 BinaryOperation >= MemberReference realLength MemberReference n BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator stack ArrayCreator BasicType int BinaryOperation + MemberReference n Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator nlen MethodInvocation MemberReference context Cast BasicType int MemberReference realLength MemberReference n combinationLength LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator chosen ArrayCreator ReferenceType IRubyObject MemberReference n LocalVariableDeclaration BasicType int VariableDeclarator lev Literal 0 StatementExpression Assignment MemberReference ArraySelector Literal 0 stack Literal - 1 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference nlen MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference lev chosen MemberReference ArraySelector BinaryOperation + MemberReference begin MemberReference ArraySelector BinaryOperation + MemberReference lev Literal 1 stack values = ForStatement ForControl MemberReference ++ lev BinaryOperation < MemberReference lev MemberReference n MemberReference ++ lev BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference lev chosen MemberReference ArraySelector BinaryOperation + MemberReference begin Assignment MemberReference ArraySelector BinaryOperation + MemberReference lev Literal 1 stack BinaryOperation + MemberReference ArraySelector MemberReference lev stack Literal 1 = values = StatementExpression MethodInvocation block MemberReference context MethodInvocation MemberReference runtime MemberReference chosen newArray yield DoStatement BinaryOperation && BinaryOperation != MemberReference lev Literal 0 BinaryOperation == BinaryOperation + MemberReference ArraySelector BinaryOperation + MemberReference lev Literal 1 stack MemberReference n BinaryOperation + BinaryOperation + MemberReference realLength MemberReference lev Literal 1 BlockStatement StatementExpression MemberReference ++ ArraySelector MemberReference -- lev stack ReturnStatement This	1
MethodDeclaration Modifier public invokeBinaryFixnumRHS FormalParameter ReferenceType String name FormalParameter ReferenceType CompilerCallback receiverCallback FormalParameter BasicType long StatementExpression MethodInvocation methodCompiler MethodInvocation getCacheCompiler MethodInvocation MemberReference methodCompiler MemberReference name MemberReference CallType NORMAL cacheCallSite getScriptCompiler StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation methodCompiler loadSelf IfStatement BinaryOperation != MemberReference receiverCallback Literal null BlockStatement StatementExpression MethodInvocation receiverCallback MemberReference methodCompiler call BlockStatement StatementExpression MethodInvocation methodCompiler loadSelf StatementExpression MethodInvocation method MemberReference ldc LocalVariableDeclaration ReferenceType String VariableDeclarator signature MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference BasicType long params sig LocalVariableDeclaration ReferenceType String VariableDeclarator callSiteMethod Literal "call" StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType CallSite p MemberReference callSiteMethod MemberReference signature invokevirtual	1
MethodDeclaration Modifier private static fill FormalParameter ReferenceType IRubyObject arr FormalParameter BasicType int from FormalParameter BasicType int to FormalParameter ReferenceType IRubyObject with ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference from BinaryOperation < MemberReference i MemberReference to MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i arr MemberReference with =	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject recv FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args TryStatement LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation RubyNumeric MemberReference ArraySelector Literal 0 args fix2int LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator buf MethodInvocation ByteBuffer MemberReference length StatementExpression MethodInvocation context MethodInvocation This MemberReference SelectionKey OP_READ select getThread StatementExpression Cast ReferenceType DatagramChannel This MethodInvocation getChannel ReturnStatement MethodInvocation context MethodInvocation ClassCreator ReferenceType ByteList MethodInvocation buf array Literal 0 MethodInvocation buf position newString getRuntime CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "recv: name or service not known" sockerr	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public ReferenceType Object case48_line476 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null new_call = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier protected ReferenceType AssignableNode assign FormalParameter ReferenceType ISourcePosition position FormalParameter ReferenceType String name FormalParameter ReferenceType Node value FormalParameter ReferenceType topScope FormalParameter BasicType int depth LocalVariableDeclaration BasicType int VariableDeclarator slot MethodInvocation MemberReference name exists IfStatement BinaryOperation >= MemberReference slot Literal 0 BlockStatement IfStatement BinaryOperation > MemberReference depth Literal 0 StatementExpression MethodInvocation MemberReference slot capture ReturnStatement ClassCreator ReferenceType DAsgnNode MemberReference position MemberReference name BinaryOperation | BinaryOperation << MemberReference depth Literal 16 MemberReference slot MemberReference value ReturnStatement MethodInvocation enclosingScope MemberReference position MemberReference name MemberReference value MemberReference topScope BinaryOperation + MemberReference depth Literal 1 assign	1
MethodDeclaration Modifier public setWriteBuffered StatementExpression Assignment MemberReference mode MemberReference |=	0
MethodDeclaration Modifier private createNewFile FormalParameter ReferenceType File file TryStatement StatementExpression MethodInvocation file createNewFile CatchClause CatchClauseParameter IOException ex ThrowStatement MethodInvocation runtime MemberReference ex newIOErrorFromException	1
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector MemberReference index values	0
MethodDeclaration Modifier public static ReferenceType String getType FormalParameter BasicType double i FormalParameter ReferenceType Object o ReturnStatement Literal "double,object"	0
MethodDeclaration Modifier public Annotation Override ReferenceType File getParentFile ReturnStatement ClassCreator ReferenceType NormalizedFile MethodInvocation getParent	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isKindOf FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyEncoding	0
MethodDeclaration Modifier public static ReferenceType RubyHash constructHash19 FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject value1 FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator hash MethodInvocation RubyHash MemberReference runtime newHash StatementExpression MethodInvocation hash MemberReference runtime MemberReference MemberReference value1 fastASetCheckString19 StatementExpression MethodInvocation hash MemberReference runtime MemberReference MemberReference fastASetCheckString19 ReturnStatement MemberReference hash	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType SearchState state ReturnStatement BinaryOperation == MemberReference state library Literal null	0
MethodDeclaration Modifier public BasicType int getModifiers ReturnStatement MethodInvocation method getModifiers	0
MethodDeclaration Modifier public setLiteral StatementExpression Assignment MemberReference flags MemberReference REGEXP_LITERAL_F |=	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType BIGNUMNODE	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation MethodInvocation toString get	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 StatementExpression MethodInvocation MethodInvocation self getRuntime createJavaMethods LocalVariableDeclaration ReferenceType JavaMethod VariableDeclarator method Cast ReferenceType JavaMethod MethodInvocation MemberReference self MemberReference name MemberReference arg0 findCallableArityOne LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg0 MethodInvocation MemberReference context MemberReference arg0 MemberReference method Literal 0 convertArg ReturnStatement MethodInvocation method MemberReference cArg0 invokeStaticDirect	0
MethodDeclaration Modifier public final ReferenceType IRubyObject fromNative FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long value ReturnStatement MethodInvocation Util MethodInvocation context getRuntime Cast BasicType byte MemberReference value newSigned8	1
MethodDeclaration Modifier private BasicType int checkIndex FormalParameter BasicType int beg FormalParameter BasicType int len IfStatement BinaryOperation > MemberReference beg MemberReference len StatementExpression MethodInvocation MemberReference beg raiseIndexOutOfString IfStatement BinaryOperation < MemberReference beg Literal 0 BlockStatement IfStatement BinaryOperation > MemberReference - beg MemberReference len StatementExpression MethodInvocation MemberReference beg raiseIndexOutOfString StatementExpression Assignment MemberReference beg MemberReference len += ReturnStatement MemberReference beg	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "take" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject take FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject n LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType long VariableDeclarator len MethodInvocation RubyNumeric MemberReference n num2long IfStatement BinaryOperation < MemberReference len Literal 0 ThrowStatement MethodInvocation runtime Literal "attempt to take negative size" newArgumentError ReturnStatement MethodInvocation Literal 0 MemberReference len subseq	1
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation MethodInvocation recv getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_f" ReferenceType IRubyObject to_f ReturnStatement MethodInvocation RubyNumeric MethodInvocation getRuntime This str2fnum	1
MethodDeclaration Modifier private ReferenceType IRubyObject invokeDirectWithExceptionHandling FormalParameter ReferenceType Method method FormalParameter ReferenceType Object javaInvokee FormalParameter ReferenceType Object arg0 TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator result TernaryExpression BinaryOperation != MemberReference handle Literal null MethodInvocation handle MemberReference javaInvokee MemberReference arg0 invoke MethodInvocation method MemberReference javaInvokee MemberReference arg0 invoke ReturnStatement MethodInvocation MemberReference result convertReturn CatchClause CatchClauseParameter IllegalArgumentException iae ReturnStatement MethodInvocation MemberReference method MemberReference iae MemberReference arg0 handlelIllegalArgumentEx CatchClause CatchClauseParameter IllegalAccessException iae ReturnStatement MethodInvocation MemberReference method MemberReference iae handleIllegalAccessEx CatchClause CatchClauseParameter InvocationTargetException ite ReturnStatement MethodInvocation MemberReference ite MemberReference method handleInvocationTargetEx CatchClause CatchClauseParameter Throwable t ReturnStatement MethodInvocation MemberReference t MemberReference method handleThrowable	1
MethodDeclaration Modifier public Annotation Override endBody StatementExpression MethodInvocation method areturn StatementExpression MethodInvocation method MemberReference scopeEnd label StatementExpression MethodInvocation variableCompiler MemberReference scope MemberReference scopeStart MemberReference scopeEnd LocalVariableDeclaration ReferenceType AnnotationVisitor VariableDeclarator annotation MethodInvocation method MethodInvocation ClassReference ReferenceType JRubyMethod ci Literal true StatementExpression MethodInvocation annotation Literal "name" MemberReference rubyName visit StatementExpression MethodInvocation annotation Literal "frame" Literal true visit StatementExpression MethodInvocation annotation Literal "required" MethodInvocation scope getRequiredArgs visit StatementExpression MethodInvocation annotation Literal "optional" MethodInvocation scope getOptionalArgs visit StatementExpression MethodInvocation annotation Literal MethodInvocation scope getRestArg visit StatementExpression MethodInvocation method end IfStatement MemberReference specificArity BlockStatement StatementExpression Assignment MemberReference method ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation script MethodInvocation BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_STATIC MemberReference methodName MethodInvocation StandardASMCompiler MethodInvocation script getClassname Literal 4 getStaticMethodSignature Literal null Literal null visitMethod getClassVisitor = StatementExpression MethodInvocation method start StatementExpression MethodInvocation method Literal 1 aload StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType ThreadContext p Literal "getRuntime" MethodInvocation ClassReference ReferenceType Ruby sig invokevirtual StatementExpression MethodInvocation method Literal 3 aload StatementExpression MethodInvocation method MethodInvocation scope getRequiredArgs pushInt StatementExpression MethodInvocation method MethodInvocation scope getRequiredArgs pushInt StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType Arity p Literal "checkArgumentCount" MethodInvocation ClassReference BasicType int ClassReference ReferenceType Ruby ClassReference ReferenceType IRubyObject ClassReference BasicType int ClassReference BasicType int sig invokestatic StatementExpression MethodInvocation method pop StatementExpression MethodInvocation loadThis StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation loadSelf ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation scope getRequiredArgs MemberReference ++ i BlockStatement StatementExpression MethodInvocation method MemberReference StandardASMCompiler ARGS_INDEX aload StatementExpression MethodInvocation method MemberReference i ldc StatementExpression MethodInvocation method arrayload StatementExpression MethodInvocation method BinaryOperation + MemberReference StandardASMCompiler ARGS_INDEX Literal 1 aload StatementExpression MethodInvocation method MethodInvocation script getClassname MemberReference methodName MethodInvocation getSignature invokestatic StatementExpression MethodInvocation method areturn StatementExpression MethodInvocation method end	1
MethodDeclaration Modifier public assignLastLine StatementExpression MethodInvocation methodCompiler StatementExpression MethodInvocation method swap StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation method swap StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RuntimeHelpers p Literal "setLastLine" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Ruby ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject sig invokestatic	0
MethodDeclaration Modifier public static ReferenceType RubyString newString FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String str ReturnStatement ClassCreator ReferenceType RubyString MemberReference runtime MethodInvocation runtime getString MemberReference str	0
MethodDeclaration Modifier private static ReferenceType IRubyObject getRubyMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject proxyClass FormalParameter ReferenceType String name FormalParameter ReferenceType Class argTypesClasses LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator rubyClass IfStatement BinaryOperation instanceof MemberReference proxyClass ReferenceType RubyClass BlockStatement StatementExpression Assignment MemberReference rubyClass Cast ReferenceType RubyClass MemberReference proxyClass = BlockStatement ThrowStatement MethodInvocation runtime MemberReference proxyClass MethodInvocation runtime getModule newTypeError LocalVariableDeclaration ReferenceType Class VariableDeclarator jclass Cast ReferenceType Class Cast ReferenceType JavaClass MethodInvocation proxyClass MemberReference context Literal "java_class" callMethod LocalVariableDeclaration ReferenceType String VariableDeclarator prettyName BinaryOperation + MemberReference name MethodInvocation CodegenUtils MemberReference argTypesClasses prettyParams TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator jmethod MethodInvocation jclass MemberReference name MemberReference argTypesClasses getMethod LocalVariableDeclaration ReferenceType MethodInvoker VariableDeclarator invoker IfStatement MethodInvocation Modifier MethodInvocation jmethod getModifiers isStatic BlockStatement StatementExpression Assignment MemberReference invoker ClassCreator ReferenceType MemberReference rubyClass MemberReference jmethod = ReturnStatement MethodInvocation RubyMethod MemberReference rubyClass MemberReference prettyName MemberReference rubyClass MemberReference name MemberReference invoker MemberReference proxyClass newMethod BlockStatement StatementExpression Assignment MemberReference invoker ClassCreator ReferenceType InstanceMethodInvoker MemberReference rubyClass MemberReference jmethod = ReturnStatement MethodInvocation MemberReference rubyClass MemberReference prettyName MemberReference rubyClass MemberReference name MemberReference invoker CatchClause CatchClauseParameter NoSuchMethodException nsme LocalVariableDeclaration ReferenceType String VariableDeclarator errorName BinaryOperation + BinaryOperation + MethodInvocation jclass getName Literal "." MemberReference prettyName ThrowStatement MethodInvocation runtime BinaryOperation + Literal "Java method not found: " MemberReference errorName MemberReference name newNameError	1
MethodDeclaration Modifier public final putShort FormalParameter BasicType long offset FormalParameter BasicType short value StatementExpression MethodInvocation MemberReference offset Literal 2 checkBounds StatementExpression MethodInvocation IO BinaryOperation + MemberReference address MemberReference offset MemberReference value putShort	0
MethodDeclaration Modifier public ReferenceType Object case332_line1234 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize_copy" ElementValuePair frame Literal true ElementValuePair visibility MemberReference Visibility PRIVATE Annotation Override ReferenceType IRubyObject initialize_copy FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation == This MemberReference other ReturnStatement This IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyStringScanner BlockStatement ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "wrong argument type " MethodInvocation other getMetaClass Literal " (expected StringScanner)" newTypeError getRuntime LocalVariableDeclaration ReferenceType RubyStringScanner VariableDeclarator otherScanner Cast ReferenceType RubyStringScanner MemberReference other StatementExpression Assignment MemberReference str MemberReference otherScanner str = StatementExpression Assignment MemberReference pos MemberReference otherScanner pos = StatementExpression Assignment MemberReference lastPos MemberReference otherScanner lastPos = StatementExpression Assignment MemberReference MemberReference otherScanner = StatementExpression Assignment MemberReference regs TernaryExpression BinaryOperation != MemberReference otherScanner regs Literal null MethodInvocation otherScanner.regs clone Literal null = StatementExpression Assignment MemberReference beg MemberReference otherScanner beg = StatementExpression Assignment MemberReference end MemberReference otherScanner end = ReturnStatement This	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock AssertStatement Literal false Literal "Call nodes deal with these directly" ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object case488_line1854 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "to_i" Literal "to_int" ReferenceType IRubyObject to_int IfStatement BinaryOperation || MethodInvocation isNaN BinaryOperation != MemberReference infinitySign Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation getNil getRuntime TryStatement ReturnStatement MethodInvocation RubyNumeric MethodInvocation getRuntime MethodInvocation value longValueExact CatchClause CatchClauseParameter ArithmeticException ae ReturnStatement MethodInvocation RubyBignum MethodInvocation getRuntime MethodInvocation value toBigInteger bignorm	1
MethodDeclaration Modifier public iffalse FormalParameter ReferenceType Label arg0 StatementExpression MethodInvocation MemberReference arg0 ifeq	0
MethodDeclaration Modifier public ReferenceType Node node_assign FormalParameter ReferenceType Node lhs FormalParameter ReferenceType Node rhs IfStatement BinaryOperation == MemberReference lhs Literal null ReturnStatement Literal null LocalVariableDeclaration ReferenceType Node VariableDeclarator newNode MemberReference lhs StatementExpression MethodInvocation MemberReference rhs checkExpression IfStatement BinaryOperation instanceof MemberReference lhs ReferenceType AssignableNode BlockStatement StatementExpression Cast ReferenceType AssignableNode MemberReference lhs IfStatement BinaryOperation instanceof MemberReference lhs ReferenceType IArgumentNode BlockStatement LocalVariableDeclaration ReferenceType IArgumentNode VariableDeclarator invokableNode Cast ReferenceType IArgumentNode MemberReference lhs ReturnStatement MethodInvocation invokableNode MethodInvocation MethodInvocation lhs getPosition MethodInvocation invokableNode getArgsNode MemberReference rhs arg_add ReturnStatement MemberReference newNode	1
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference parameter uint64Value putLong	1
MethodDeclaration Modifier private final ReferenceType IRubyObject storeField FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject name FormalParameter ReferenceType StructLayout ReferenceType Member field FormalParameter BasicType int align FormalParameter BasicType int size StatementExpression MethodInvocation fields MethodInvocation MemberReference runtime MemberReference name createStringKey MemberReference field put StatementExpression MethodInvocation fields MethodInvocation MemberReference runtime MemberReference name createSymbolKey MemberReference field put StatementExpression MethodInvocation fieldNames MethodInvocation MemberReference runtime MemberReference name createSymbolKey add StatementExpression Assignment This MemberReference size MethodInvocation Math This MemberReference size BinaryOperation + Cast BasicType int MemberReference field offset MemberReference size max = StatementExpression Assignment This MemberReference MethodInvocation Math This MemberReference MemberReference align max = ReturnStatement This	1
MethodDeclaration Modifier public setFileAndLine FormalParameter ReferenceType String file FormalParameter BasicType int line StatementExpression Assignment This MemberReference file MemberReference file = StatementExpression Assignment This MemberReference line MemberReference line =	0
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "new" Literal ElementValuePair rest Literal true ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType IRubyObject newInstance FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference recv MemberReference args Literal true MemberReference block startThread	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "with_object" ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject with_object FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType IRubyObject arg FormalParameter Modifier final ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference arg MemberReference block Literal "with_object" with_object_common	1
MethodDeclaration Modifier public ReferenceType IRubyObject invokeDirect FormalParameter ReferenceType Object javaInvokee FormalParameter ReferenceType Object arg0 FormalParameter ReferenceType Object arg1 FormalParameter ReferenceType Object arg2 FormalParameter ReferenceType Object arg3 StatementExpression MethodInvocation Literal 4 checkArity StatementExpression MethodInvocation MemberReference javaInvokee checkInstanceof IfStatement MethodInvocation MemberReference javaInvokee mightBeProxy BlockStatement ReturnStatement MethodInvocation MemberReference javaInvokee MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 tryProxyInvocation ReturnStatement MethodInvocation MemberReference method MemberReference javaInvokee MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 invokeDirectWithExceptionHandling	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "get_int32" Literal "get_int" ElementValuePair required Literal 1 ReferenceType IRubyObject get_int32 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset ReturnStatement MethodInvocation Util MethodInvocation context getRuntime MethodInvocation MethodInvocation MethodInvocation MemberReference offset getOffset getInt getMemoryIO newSigned32	1
MethodDeclaration Modifier public final SynchronizedStatement MemberReference monitor StatementExpression Assignment This MemberReference woken Literal true = StatementExpression Assignment This MemberReference interrupted Literal true = StatementExpression MethodInvocation monitor notifyAll	1
MethodDeclaration Modifier public ReferenceType getWarnings ReturnStatement MemberReference warnings	0
MethodDeclaration Modifier protected init FormalParameter ReferenceType RubyModule implementationClass FormalParameter ReferenceType Arity arity FormalParameter ReferenceType Visibility visibility FormalParameter ReferenceType staticScope FormalParameter ReferenceType Object scriptObject FormalParameter ReferenceType CallConfiguration callConfig StatementExpression Assignment This MemberReference $scriptObject MemberReference scriptObject = StatementExpression SuperMethodInvocation MemberReference implementationClass MemberReference arity MemberReference visibility MemberReference staticScope MemberReference callConfig init	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "post_match" ReferenceType IRubyObject post_match FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation check IfStatement MethodInvocation ! isMatched ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime ReturnStatement MethodInvocation MethodInvocation context getRuntime BinaryOperation + MemberReference lastPos MemberReference end MethodInvocation str MemberReference realSize getByteList extractRange	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 StatementExpression Assignment MemberReference args MethodInvocation MemberReference context MemberReference args MemberReference type prepareArgumentsForCall = ReturnStatement MethodInvocation MemberReference context MethodInvocation RubyArray MethodInvocation context getRuntime MemberReference args newArrayNoCopy Literal null Literal null Literal true MemberReference binding MemberReference type yield	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference binding MemberReference type MemberReference block call	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block SwitchStatement MemberReference args length SwitchStatementCase Literal 0 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference block call SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference ArraySelector Literal 0 args MemberReference block call SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference block call SwitchStatementCase Literal 3 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference ArraySelector Literal 2 args MemberReference block call SwitchStatementCase ReturnStatement MethodInvocation This MemberReference context MemberReference name MemberReference args length Literal 0 Literal 3 raiseArgumentError	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "new" ElementValuePair rest Literal true ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType ConditionVariable newInstance FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType ConditionVariable VariableDeclarator result ClassCreator ReferenceType ConditionVariable MethodInvocation context getRuntime Cast ReferenceType RubyClass MemberReference recv StatementExpression MethodInvocation result MemberReference args MemberReference block callInit ReturnStatement MemberReference result	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair required Literal 2 ReferenceType IRubyObject lchown FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration BasicType int VariableDeclarator owner Literal - 1 IfStatement MethodInvocation ! arg1 isNil BlockStatement StatementExpression Assignment MemberReference owner MethodInvocation RubyNumeric MemberReference arg1 num2int = LocalVariableDeclaration BasicType int VariableDeclarator group Literal - 1 IfStatement MethodInvocation ! arg2 isNil BlockStatement StatementExpression Assignment MemberReference group MethodInvocation RubyNumeric MemberReference arg2 num2int = IfStatement ClassCreator ! MethodInvocation exists ReferenceType File MemberReference path BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "No such file or directory - " MemberReference path newErrnoENOENTError getRuntime ReturnStatement MethodInvocation context MethodInvocation MethodInvocation context MethodInvocation getPosix MethodInvocation MemberReference path MemberReference owner MemberReference group lchown getRuntime newFixnum getRuntime	0
MethodDeclaration Modifier final BasicType int subLength FormalParameter BasicType int pos IfStatement BinaryOperation || MethodInvocation singleByteOptimizable BinaryOperation < MemberReference pos Literal 0 ReturnStatement MemberReference pos ReturnStatement MethodInvocation StringSupport MemberReference value encoding MemberReference value bytes MemberReference value begin BinaryOperation + MemberReference value begin MemberReference pos strLength	1
MethodDeclaration Modifier public static ReferenceType Object castAndCallIt FormalParameter ReferenceType Object obj ReturnStatement MethodInvocation Cast ReferenceType DescendantOfSingleMethodInterface MemberReference obj callThat	0
MethodDeclaration Modifier private static BasicType double FormalParameter ReferenceType ByteBuffer encode ReturnStatement MethodInvocation Double MethodInvocation MemberReference encode decodeLongLittleEndian	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType RubyString VariableDeclarator o1 MethodInvocation runtime Literal newString LocalVariableDeclaration ReferenceType RubyString VariableDeclarator o2 MethodInvocation runtime Literal newString LocalVariableDeclaration BasicType long VariableDeclarator id1 MethodInvocation target MemberReference o1 LocalVariableDeclaration BasicType long VariableDeclarator id2 MethodInvocation target MemberReference o2 StatementExpression MethodInvocation Literal "id of normal objects must be even" Literal 0 BinaryOperation % MemberReference id1 Literal 2 assertEquals StatementExpression MethodInvocation Literal "id of normal objects must be even" Literal 0 BinaryOperation % MemberReference id2 Literal 2 assertEquals StatementExpression MethodInvocation Literal "normal ids must be bigger than values" BinaryOperation > MemberReference id1 Literal 4 assertTrue StatementExpression MethodInvocation Literal "normal ids must be bigger than values" BinaryOperation > MemberReference id2 Literal 4 assertTrue StatementExpression MethodInvocation MemberReference o1 MethodInvocation target MemberReference id1 id2ref assertSame StatementExpression MethodInvocation MemberReference o2 MethodInvocation target MemberReference id2 id2ref assertSame StatementExpression MethodInvocation MethodInvocation target Literal id2ref assertNull	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "printf" ElementValuePair required Literal 1 ElementValuePair rest Literal true ReferenceType IRubyObject printf FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args IOException StatementExpression MethodInvocation MethodInvocation RubyKernel MemberReference context This MemberReference args sprintf write ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtime MethodInvocation MemberReference name MemberReference value set getGlobalVariables	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator backref MethodInvocation context MethodInvocation MemberReference runtime getBackRef getCurrentScope SwitchStatement MemberReference type SwitchStatementCase Literal '&' ReturnStatement MethodInvocation RubyRegexp MemberReference backref SwitchStatementCase Literal '`' ReturnStatement MethodInvocation RubyRegexp MemberReference backref SwitchStatementCase Literal '\'' ReturnStatement MethodInvocation RubyRegexp MemberReference backref SwitchStatementCase Literal '+' ReturnStatement MethodInvocation RubyRegexp MemberReference backref SwitchStatementCase AssertStatement Literal false Literal with invalid type" ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType RubyGzipWriter MemberReference runtime MemberReference klass	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation instanceof MemberReference iVisited ReferenceType Colon2Node BlockStatement LocalVariableDeclaration Modifier final ReferenceType Node VariableDeclarator leftNode Cast ReferenceType Colon2Node MemberReference iVisited StatementExpression MethodInvocation MemberReference leftNode MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation context loadObject	0
MethodDeclaration Modifier public final ReferenceType IRubyObject fromNative FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long value LocalVariableDeclaration Modifier final BasicType long VariableDeclarator address BinaryOperation & Cast BasicType long MemberReference value MemberReference ADDRESS_MASK ReturnStatement ClassCreator ReferenceType Pointer MethodInvocation context getRuntime MethodInvocation NativeMemoryIO MethodInvocation context getRuntime MemberReference address wrap	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock getReceiverNode LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args Cast ReferenceType ArrayNode MethodInvocation getArgsNode ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference receiver MemberReference args call	0
MethodDeclaration Modifier public ReferenceType Object case449_line1716 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType Token Literal MemberReference Tokens kNIL Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static BasicType boolean primitivable FormalParameter ReferenceType Class type FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType Class VariableDeclarator argClass MethodInvocation MemberReference arg argClass IfStatement MethodInvocation type isPrimitive BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference type MemberReference Integer TYPE BinaryOperation == MemberReference type MemberReference Long TYPE BinaryOperation == MemberReference type MemberReference Short TYPE BinaryOperation == MemberReference type MemberReference Character TYPE BlockStatement ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference argClass ClassReference BasicType long BinaryOperation == MemberReference argClass ClassReference BasicType byte BinaryOperation == MemberReference argClass ClassReference BasicType short BinaryOperation == MemberReference argClass ClassReference BasicType char BinaryOperation == MemberReference argClass ClassReference BasicType int BinaryOperation == MemberReference argClass ClassReference ReferenceType Long BinaryOperation == MemberReference argClass ClassReference ReferenceType Byte BinaryOperation == MemberReference argClass ClassReference ReferenceType Short BinaryOperation == MemberReference argClass ClassReference ReferenceType Character BinaryOperation == MemberReference argClass ClassReference ReferenceType Integer IfStatement BinaryOperation || BinaryOperation == MemberReference type MemberReference Float TYPE BinaryOperation == MemberReference type MemberReference Double TYPE BlockStatement ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference argClass ClassReference BasicType double BinaryOperation == MemberReference argClass ClassReference BasicType float BinaryOperation == MemberReference argClass ClassReference ReferenceType Float BinaryOperation == MemberReference argClass ClassReference ReferenceType Double IfStatement BinaryOperation == MemberReference type MemberReference Boolean TYPE BlockStatement ReturnStatement BinaryOperation || BinaryOperation == MemberReference argClass ClassReference BasicType boolean BinaryOperation == MemberReference argClass ClassReference ReferenceType Boolean ReturnStatement Literal false	1
MethodDeclaration Modifier private Annotation Deprecated ReferenceType MethodVisitor startCallSFast FormalParameter ReferenceType ClassWriter cw LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation cw MemberReference ACC_PUBLIC Literal "call" MemberReference FAST_CALL_SIG Literal null Literal null visitMethod StatementExpression MethodInvocation mv visitCode LocalVariableDeclaration ReferenceType Label VariableDeclarator line ClassCreator ReferenceType Label StatementExpression MethodInvocation mv Literal 0 MemberReference line visitLineNumber StatementExpression MethodInvocation mv MemberReference ALOAD Literal 1 visitVarInsn StatementExpression MethodInvocation mv MemberReference CHECKCAST MemberReference IRUB visitTypeInsn ReturnStatement MemberReference mv	1
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject rbuf_fill FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType RubyString VariableDeclarator buf Cast ReferenceType RubyString MethodInvocation recv MethodInvocation Literal "@rbuf" getInstanceVariable getInstanceVariables LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator io Cast ReferenceType RubyIO MethodInvocation recv MethodInvocation Literal "@io" getInstanceVariable getInstanceVariables LocalVariableDeclaration BasicType int VariableDeclarator timeout BinaryOperation * MethodInvocation RubyNumeric MethodInvocation recv MethodInvocation Literal "@read_timeout" getInstanceVariable getInstanceVariables fix2int Literal 1000 LocalVariableDeclaration ReferenceType NativeImpl VariableDeclarator nim Cast ReferenceType NativeImpl MethodInvocation recv dataGetStruct LocalVariableDeclaration ReferenceType Selector VariableDeclarator selector Literal null SynchronizedStatement MethodInvocation nim.channel blockingLock LocalVariableDeclaration BasicType boolean VariableDeclarator oldBlocking MethodInvocation nim.channel isBlocking TryStatement StatementExpression Assignment MemberReference selector MethodInvocation Selector open = StatementExpression MethodInvocation nim.channel Literal false configureBlocking LocalVariableDeclaration ReferenceType SelectionKey VariableDeclarator key MethodInvocation nim.channel MemberReference selector MemberReference SelectionKey OP_READ register LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation selector MemberReference timeout select IfStatement BinaryOperation > MemberReference n Literal 0 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator readItems MethodInvocation io ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation recv MethodInvocation BinaryOperation * Literal 1024 Literal 16 newFixnum getRuntime read ReturnStatement MethodInvocation buf MemberReference readItems concat BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator exc Cast ReferenceType RubyClass MethodInvocation recv getRuntime ThrowStatement ClassCreator ReferenceType RaiseException MethodInvocation RubyException MethodInvocation recv getRuntime MemberReference exc Literal "execution newException Literal false CatchClause CatchClauseParameter IOException exception ThrowStatement MethodInvocation recv MethodInvocation MemberReference exception newIOErrorFromException getRuntime IfStatement BinaryOperation != MemberReference selector Literal null BlockStatement TryStatement StatementExpression MethodInvocation selector close CatchClause CatchClauseParameter Exception e TryStatement StatementExpression MethodInvocation nim.channel MemberReference oldBlocking configureBlocking CatchClause CatchClauseParameter IOException ioe	1
MethodDeclaration Modifier public ReferenceType AllocatedDirectMemoryIO FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int size FormalParameter BasicType boolean clear ReturnStatement MethodInvocation AllocatedNativeMemoryIO MemberReference runtime MemberReference size MemberReference clear	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getSingletonMethod FormalParameter ReferenceType String method LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal "S0" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal "S0" SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer MemberReference RubyKernel IRUBY_OBJECT ClassReference ReferenceType Block LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtor LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCallS StatementExpression MethodInvocation mv MemberReference ALOAD Literal 3 visitVarInsn StatementExpression MethodInvocation mv MemberReference INVOKESTATIC MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 1 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType InvocationCallback VariableDeclarator ic Cast ReferenceType InvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity noArguments setArity StatementExpression MethodInvocation ic MemberReference method setJavaName StatementExpression MethodInvocation ic Literal true setSingleton ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public static ReferenceType InetAddress getRubyInetAddress FormalParameter ReferenceType ByteList address UnknownHostException IfStatement MethodInvocation address MemberReference equal BlockStatement ReturnStatement MethodInvocation InetAddress MemberReference getByAddress IfStatement MethodInvocation address MemberReference equal BlockStatement ReturnStatement MethodInvocation InetAddress MemberReference getByAddress BlockStatement ReturnStatement MethodInvocation InetAddress MethodInvocation address toString getByName	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType OPASGNANDNODE	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "tty?" Literal "isatty" ReferenceType RubyBoolean tty_p FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MethodInvocation context MethodInvocation getPosix MethodInvocation MethodInvocation MethodInvocation getMainStream MethodInvocation getDescriptor MethodInvocation getFileDescriptor getOpenFileChecked isatty getRuntime newBoolean getRuntime	1
MethodDeclaration Modifier public ReferenceType Arity getArity ReturnStatement MemberReference Arity	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ">" ElementValuePair required Literal 1 ReferenceType IRubyObject op_gt FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other SwitchStatement MethodInvocation other MemberReference index getMetaClass SwitchStatementCase MemberReference ClassIndex FIXNUM MemberReference ClassIndex BIGNUM MemberReference ClassIndex FLOAT LocalVariableDeclaration BasicType double VariableDeclarator b Cast ReferenceType RubyNumeric MemberReference other ReturnStatement MethodInvocation RubyBoolean MethodInvocation getRuntime BinaryOperation && MethodInvocation ! Double MemberReference b isNaN BinaryOperation > MemberReference value MemberReference b newBoolean SwitchStatementCase ReturnStatement MethodInvocation MemberReference context Literal ">" MemberReference other coerceRelOp	1
MethodDeclaration Modifier public final ReferenceType NativeType getNativeType ReturnStatement MethodInvocation type getNativeType	0
MethodDeclaration Modifier final static protected BasicType int FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject sizeArg IfStatement BinaryOperation instanceof MemberReference sizeArg ReferenceType RubyFixnum BlockStatement ReturnStatement Cast BasicType int Cast ReferenceType RubyFixnum MemberReference sizeArg IfStatement BinaryOperation instanceof MemberReference sizeArg ReferenceType RubySymbol BlockStatement ReturnStatement MethodInvocation TypeSizeMapper MemberReference context MemberReference sizeArg getTypeSize IfStatement BinaryOperation && BinaryOperation instanceof MemberReference sizeArg ReferenceType RubyClass MethodInvocation Struct MethodInvocation context getRuntime Cast ReferenceType RubyClass MemberReference sizeArg isStruct BlockStatement ReturnStatement MethodInvocation Struct MethodInvocation context getRuntime MemberReference sizeArg getStructSize IfStatement MethodInvocation sizeArg Literal "size" respondsTo BlockStatement ReturnStatement Cast BasicType int MethodInvocation RubyFixnum MethodInvocation sizeArg MemberReference context Literal "size" callMethod num2long BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "Invalid size argument" newArgumentError getRuntime	0
MethodDeclaration ReferenceType Object store FormalParameter ReferenceType String name FormalParameter ReferenceType Object value LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation name hashCode IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference name1 Literal null BinaryOperation == MethodInvocation name1 hashCode MemberReference hash MethodInvocation name MemberReference name1 equals ReturnStatement Assignment MemberReference value1 MemberReference value = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference name2 Literal null BinaryOperation == MethodInvocation name2 hashCode MemberReference hash MethodInvocation name MemberReference name2 equals ReturnStatement Assignment MemberReference MemberReference value = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference name3 Literal null BinaryOperation == MethodInvocation name3 hashCode MemberReference hash MethodInvocation name MemberReference name3 equals ReturnStatement Assignment MemberReference MemberReference value = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference name4 Literal null BinaryOperation == MethodInvocation name4 hashCode MemberReference hash MethodInvocation name MemberReference name4 equals ReturnStatement Assignment MemberReference value4 MemberReference value = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference name5 Literal null BinaryOperation == MethodInvocation name5 hashCode MemberReference hash MethodInvocation name MemberReference name5 equals ReturnStatement Assignment MemberReference value5 MemberReference value = ReturnStatement MethodInvocation MethodInvocation name intern MemberReference value insert	1
MethodDeclaration Modifier public ReferenceType Node getBody ReturnStatement MethodInvocation getBodyNode	0
MethodDeclaration Modifier public Annotation Override run LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte Literal 1024 LocalVariableDeclaration BasicType int VariableDeclarator numRead LocalVariableDeclaration BasicType boolean VariableDeclarator hasReadSomething Literal false TryStatement WhileStatement MemberReference ! quit BlockStatement IfStatement BinaryOperation && MemberReference onlyIfAvailable MemberReference ! hasReadSomething BlockStatement IfStatement BinaryOperation == MethodInvocation in available Literal 0 BlockStatement SynchronizedStatement MemberReference waitLock StatementExpression MethodInvocation waitLock Literal 10 wait ContinueStatement BlockStatement StatementExpression Assignment MemberReference hasReadSomething Literal true = IfStatement BinaryOperation == Assignment MemberReference numRead MethodInvocation in MemberReference buf read = Literal - 1 BlockStatement BreakStatement StatementExpression MethodInvocation out MemberReference buf Literal 0 MemberReference numRead write CatchClause CatchClauseParameter Exception e IfStatement MemberReference onlyIfAvailable BlockStatement SynchronizedStatement MemberReference sync IfStatement BinaryOperation == MemberReference slave MemberReference Slave OUT BlockStatement TryStatement StatementExpression MethodInvocation out close CatchClause CatchClauseParameter IOException ioe	1
MethodDeclaration Modifier public FormalParameter BasicType int arg0 StatementExpression MethodInvocation MethodInvocation MemberReference LSTORE MemberReference arg0 visitVarInsn getMethodVisitor	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject collect19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block collect MethodInvocation MethodInvocation context getRuntime This Literal enumeratorize	0
MethodDeclaration Modifier public ReferenceType PrintStream getErrorStream ReturnStatement ClassCreator ReferenceType PrintStream ClassCreator ReferenceType MethodInvocation MethodInvocation Literal "$stderr" get getGlobalVariables	1
MethodDeclaration Modifier public BasicType boolean allowModule FormalParameter ReferenceType String name ReturnStatement Literal true	0
MethodDeclaration Modifier public visit FormalParameter ReferenceType Visitor visitor IfStatement MemberReference USE_PACKED_ARRAY BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator table MemberReference packedVTable IfStatement BinaryOperation != MemberReference table Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference vTableSize MemberReference ++ i BlockStatement StatementExpression MethodInvocation visitor Cast ReferenceType String MemberReference ArraySelector MemberReference i table MemberReference ArraySelector BinaryOperation + MemberReference i MemberReference MAX_PACKED table visit ReturnStatement IfStatement MemberReference USE_PACKED_FIELDS BlockStatement IfStatement BinaryOperation != MemberReference packedVFields Literal null BlockStatement StatementExpression MethodInvocation packedVFields MemberReference visitor visit ReturnStatement LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator table MemberReference vTable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference table length BinaryOperation >= MemberReference -- i Literal 0 BlockStatement ForStatement ForControl VariableDeclaration ReferenceType VariableTableEntry VariableDeclarator e MemberReference ArraySelector MemberReference i table BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement StatementExpression MethodInvocation visitor MemberReference e name MemberReference e value visit	1
MethodDeclaration Modifier public ReferenceType Object case361_line1348 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject object FormalParameter ReferenceType IRubyObject value ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 7 MemberReference name MemberReference object MemberReference value setVariable	0
MethodDeclaration Modifier public marshalTo FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object obj FormalParameter ReferenceType RubyClass type FormalParameter ReferenceType marshalStream IOException LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator object Cast ReferenceType IRubyObject MemberReference obj StatementExpression MethodInvocation marshalStream MemberReference object StatementExpression MethodInvocation marshalStream MethodInvocation object getVariableList dumpVariables	0
MethodDeclaration Modifier public Annotation Override ReferenceType String getCanonicalPath IOException ReturnStatement SuperMethodInvocation MethodInvocation MemberReference File separatorChar Literal '/' replace getCanonicalPath	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType IR_Instr getInstrs ReturnStatement MemberReference _instrs	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair frame Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType Block block IfStatement MethodInvocation block isGiven BlockStatement StatementExpression MethodInvocation block MethodInvocation MemberReference PUBLIC setVisibility getBinding StatementExpression MethodInvocation block MethodInvocation MethodInvocation getCurrentContext getRuntime This This This Literal false yield ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration setKernel FormalParameter ReferenceType RubyModule kernelModule StatementExpression Assignment This MemberReference kernelModule MemberReference kernelModule =	0
MethodDeclaration Modifier protected ReferenceType CallSite selectCallSite FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject receiver ReturnStatement TernaryExpression BinaryOperation == MemberReference receiver MemberReference self MemberReference variableCallAdapter MemberReference	0
MethodDeclaration Modifier public ReferenceType Colon3Node getCPath ReturnStatement MemberReference cpath	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isNative ReturnStatement Literal true	0
MethodDeclaration Modifier public setValue FormalParameter ReferenceType Object value StatementExpression Assignment This MemberReference value MemberReference value =	0
MethodDeclaration Modifier public declareClassVariable FormalParameter ReferenceType String name StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation method swap StatementExpression MethodInvocation StatementExpression MethodInvocation method swap StatementExpression MethodInvocation loadSelf StatementExpression MethodInvocation method swap StatementExpression MethodInvocation method MemberReference name ldc StatementExpression MethodInvocation method swap StatementExpression MethodInvocation Literal "fastDeclareClassVariable" MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation ClassReference ReferenceType ThreadContext ClassReference ReferenceType Ruby ClassReference ReferenceType IRubyObject ClassReference ReferenceType String ClassReference ReferenceType IRubyObject params sig invokeUtilityMethod	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "check" ElementValuePair required Literal 1 ReferenceType IRubyObject check FormalParameter ReferenceType IRubyObject regex ReturnStatement MethodInvocation MemberReference regex Literal false Literal true Literal true scan	0
MethodDeclaration Modifier private ReferenceType IRubyObject subpat19 FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyRegexp regex FormalParameter ReferenceType IRubyObject backref IfStatement BinaryOperation >= MethodInvocation regex MemberReference context This Literal 0 Literal false search19 Literal 0 BlockStatement LocalVariableDeclaration ReferenceType RubyMatchData VariableDeclarator match Cast ReferenceType RubyMatchData MethodInvocation context MethodInvocation MemberReference runtime getBackRef getCurrentScope ReturnStatement MethodInvocation RubyRegexp MethodInvocation match MemberReference backref backrefNumber MethodInvocation context MethodInvocation MemberReference runtime getBackRef getCurrentScope nth_match ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject host FormalParameter ReferenceType IRubyObject port LocalVariableDeclaration ReferenceType InetSocketAddress VariableDeclarator addr Literal null TryStatement IfStatement BinaryOperation || MethodInvocation host isNil BinaryOperation && BinaryOperation instanceof MemberReference host ReferenceType RubyString Cast ReferenceType RubyString MemberReference host BlockStatement StatementExpression Assignment MemberReference addr ClassCreator ReferenceType InetSocketAddress MethodInvocation RubyNumeric MemberReference port fix2int = BlockStatement StatementExpression Assignment MemberReference addr ClassCreator ReferenceType InetSocketAddress MethodInvocation InetAddress MethodInvocation host MethodInvocation toString convertToString getByName MethodInvocation RubyNumeric MemberReference port fix2int = StatementExpression Cast ReferenceType DatagramChannel This MethodInvocation getChannel ReturnStatement MethodInvocation RubyFixnum MethodInvocation context getRuntime zero CatchClause CatchClauseParameter UnknownHostException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "bind: name or service not known" sockerr CatchClause CatchClauseParameter e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "bind: name or service not known" sockerr CatchClause CatchClauseParameter Error e IfStatement BinaryOperation instanceof MethodInvocation e getCause ReferenceType BlockStatement ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "bind: name or service not known" sockerr BlockStatement ThrowStatement MemberReference e	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "even?" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyBoolean even_p IfStatement BinaryOperation == BinaryOperation % MemberReference value Literal 2 Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation getTrue getRuntime ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier private closeForFinalize TryStatement StatementExpression MethodInvocation Literal true close CatchClause CatchClauseParameter BadDescriptorException ex CatchClause CatchClauseParameter IOException ex	1
MethodDeclaration Modifier public Annotation Override BasicType int hashCode ReturnStatement MemberReference value	0
MethodDeclaration Modifier private ReferenceType IRubyObject replaceInternal FormalParameter BasicType int beg FormalParameter BasicType int len FormalParameter ReferenceType RubyString repl LocalVariableDeclaration BasicType int VariableDeclarator oldLength MemberReference value realSize IfStatement BinaryOperation >= BinaryOperation + MemberReference beg MemberReference len MemberReference oldLength StatementExpression Assignment MemberReference len BinaryOperation - MemberReference oldLength MemberReference beg = LocalVariableDeclaration ReferenceType ByteList VariableDeclarator replBytes MemberReference repl value LocalVariableDeclaration BasicType int VariableDeclarator replLength MemberReference replBytes realSize LocalVariableDeclaration BasicType int VariableDeclarator newLength BinaryOperation - BinaryOperation + MemberReference oldLength MemberReference replLength MemberReference len LocalVariableDeclaration BasicType byte VariableDeclarator oldBytes MemberReference value bytes LocalVariableDeclaration BasicType int VariableDeclarator oldBegin MemberReference value begin StatementExpression MethodInvocation MemberReference newLength modify IfStatement BinaryOperation != MemberReference replLength MemberReference len BlockStatement StatementExpression MethodInvocation System MemberReference oldBytes BinaryOperation + BinaryOperation + MemberReference oldBegin MemberReference beg MemberReference len MemberReference value bytes BinaryOperation + MemberReference beg MemberReference replLength BinaryOperation - MemberReference oldLength BinaryOperation + MemberReference beg MemberReference len arraycopy IfStatement BinaryOperation > MemberReference replLength Literal 0 StatementExpression MethodInvocation System MemberReference replBytes bytes MemberReference replBytes begin MemberReference value bytes MemberReference beg MemberReference replLength arraycopy StatementExpression Assignment MemberReference value realSize MemberReference newLength = ReturnStatement MethodInvocation MemberReference repl infectBy	1
MethodDeclaration Modifier protected ReferenceType IRubyObject cacheAndCall FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType RubyClass selfType FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator entry TernaryExpression BinaryOperation != MemberReference selfType Literal null MethodInvocation selfType MemberReference name MemberReference CacheEntry LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MemberReference entry method IfStatement MethodInvocation MemberReference method MemberReference caller BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference name MemberReference method MemberReference args callMethodMissing StatementExpression Assignment MemberReference lastName MemberReference name = StatementExpression Assignment MemberReference cache MemberReference entry = ReturnStatement MethodInvocation method MemberReference context MemberReference self MemberReference selfType MemberReference name MemberReference args call	0
MethodDeclaration Modifier protected BasicType boolean valueEquals FormalParameter ReferenceType Object value1 FormalParameter ReferenceType Object IfStatement BinaryOperation == MemberReference value1 Literal null ReturnStatement BinaryOperation == MemberReference Literal null ReturnStatement MethodInvocation value1 MemberReference equals	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier final protected ReferenceType Map TypeArgument ReferenceType Object TypeArgument ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MethodInvocation MemberReference context getExecutionContext	0
MethodDeclaration Modifier public ReferenceType Object case204_line829 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation support Cast ReferenceType FloatNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal "**" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode Literal "-@" getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType RaiseException newFrozenError FormalParameter ReferenceType String objectType ReturnStatement MethodInvocation TernaryExpression MethodInvocation is1_9 MethodInvocation getRuntimeError MethodInvocation BinaryOperation + Literal "can't modify frozen " MemberReference objectType newRaiseException	1
MethodDeclaration Modifier public Annotation Override BasicType int exitValue ReturnStatement MethodInvocation child exitValue	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block StatementExpression MethodInvocation arity MethodInvocation context getRuntime MemberReference args checkArity ReturnStatement MethodInvocation functionInvoker MethodInvocation context getRuntime MemberReference function MemberReference dummyBuffer invoke	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg1 MemberReference arg2 MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "index" Literal "find_index" ElementValuePair frame Literal true ReferenceType IRubyObject index FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation ! block isGiven ReturnStatement MethodInvocation MemberReference runtime This Literal "index" enumeratorize ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference begin BinaryOperation < MemberReference i BinaryOperation + MemberReference begin MemberReference realLength MemberReference ++ i BlockStatement IfStatement MethodInvocation block MethodInvocation isTrue MemberReference context MemberReference ArraySelector MemberReference i values yield ReturnStatement MethodInvocation runtime BinaryOperation - MemberReference i MemberReference begin newFixnum ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public compileLocalAsgn FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType LocalAsgnNode VariableDeclarator localAsgnNode Cast ReferenceType LocalAsgnNode MemberReference node IfStatement MethodInvocation ASTInspector.PRAGMAS MethodInvocation localAsgnNode getName contains BlockStatement IfStatement MemberReference expr StatementExpression MethodInvocation context loadNil BlockStatement LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator value ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation localAsgnNode getValueNode MemberReference context Literal true compile StatementExpression MethodInvocation context MethodInvocation MethodInvocation localAsgnNode getIndex MethodInvocation localAsgnNode getDepth MemberReference value MemberReference expr assignLocalVariable getVariableCompiler	1
MethodDeclaration Modifier private static ReferenceType IRubyObject with_object_common FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType IRubyObject arg FormalParameter Modifier final ReferenceType Block block FormalParameter Modifier final ReferenceType String rubyMethodName LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation ! block isGiven ReturnStatement MethodInvocation MemberReference runtime MemberReference self MemberReference rubyMethodName MemberReference arg enumeratorize StatementExpression MethodInvocation RubyEnumerable MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation block MemberReference ctx ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation runtime MemberReference ArraySelector Literal 0 largs MemberReference arg newArray call ReturnStatement MethodInvocation runtime getNil callEach ReturnStatement MemberReference arg	1
MethodDeclaration put FormalParameter ReferenceType Object object FormalParameter BasicType int hash FormalParameter ReferenceType T proxy StatementExpression MethodInvocation lock TryStatement StatementExpression MethodInvocation expunge LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator table LocalVariableDeclaration BasicType int VariableDeclarator potentialNewSize IfStatement BinaryOperation > Assignment MemberReference potentialNewSize BinaryOperation + MemberReference tableSize Literal 1 = MemberReference threshold BlockStatement StatementExpression Assignment MemberReference table MethodInvocation rehash = BlockStatement StatementExpression Assignment MemberReference table MemberReference entryTable = LocalVariableDeclaration BasicType int VariableDeclarator index LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator e ForStatement ForControl Assignment MemberReference e MemberReference ArraySelector Assignment MemberReference index BinaryOperation & MemberReference hash BinaryOperation - MemberReference table length Literal 1 = table = BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference hash MemberReference e hash BinaryOperation == MemberReference object MethodInvocation e.objectRef get BlockStatement IfStatement BinaryOperation == MemberReference proxy MethodInvocation e.proxyRef get ReturnStatement StatementExpression MethodInvocation MemberReference table MemberReference hash MemberReference e remove StatementExpression MemberReference -- potentialNewSize BreakStatement StatementExpression Assignment MemberReference e ClassCreator ReferenceType Entry TypeArgument ReferenceType T MemberReference object MemberReference hash MemberReference proxy MemberReference cache referenceType MemberReference ArraySelector MemberReference index table MemberReference referenceQueue = StatementExpression Assignment MemberReference ArraySelector MemberReference index table MemberReference e = StatementExpression Assignment MemberReference tableSize MemberReference potentialNewSize = StatementExpression Assignment MemberReference entryTable MemberReference table = StatementExpression MethodInvocation unlock	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType RubyIO MemberReference runtime MemberReference klass	0
MethodDeclaration Modifier private final checkLength FormalParameter BasicType long length IfStatement BinaryOperation < MemberReference length Literal 0 BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "negative array size (or size too big)" newArgumentError getRuntime IfStatement BinaryOperation >= MemberReference length MemberReference Integer MAX_VALUE BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "array size too big" newArgumentError getRuntime	1
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object array FormalParameter BasicType int i ReturnStatement MethodInvocation MemberReference runtime Cast ReferenceType Integer MemberReference array convert	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ElementValuePair meta Literal true ReferenceType IRubyObject getnameinfo FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType int VariableDeclarator argc MethodInvocation Arity MemberReference runtime MemberReference args Literal 1 Literal 2 checkArgumentCount LocalVariableDeclaration BasicType int VariableDeclarator flags TernaryExpression BinaryOperation == MemberReference argc Literal 2 MethodInvocation RubyNumeric MemberReference ArraySelector Literal 1 args num2int Literal 0 LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator arg0 MemberReference ArraySelector Literal 0 args LocalVariableDeclaration ReferenceType String VariableDeclarator host VariableDeclarator port IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyArray BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list Cast ReferenceType RubyArray MemberReference arg0 LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation list size IfStatement BinaryOperation || BinaryOperation < MemberReference len Literal 3 BinaryOperation > MemberReference len Literal 4 BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "array size should be 3 or 4, " MemberReference len Literal " given" newArgumentError StatementExpression Assignment MemberReference host MethodInvocation list MethodInvocation toString Literal 2 get = StatementExpression Assignment MemberReference port MethodInvocation list MethodInvocation toString Literal 1 get = IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyString BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator arg Cast ReferenceType RubyString MemberReference arg0 LocalVariableDeclaration ReferenceType Matcher VariableDeclarator m MethodInvocation STRING_ADDRESS_PATTERN MemberReference arg matcher IfStatement MethodInvocation ! m matches BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator obj MethodInvocation MemberReference context MemberReference recv MemberReference arg0 unpack_sockaddr_in IfStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyArray BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list Cast ReferenceType RubyArray MemberReference obj LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation list size IfStatement BinaryOperation != MemberReference len Literal 2 BlockStatement ThrowStatement MethodInvocation runtime Literal "invalid address newArgumentError StatementExpression Assignment MemberReference host MethodInvocation list MethodInvocation toString Literal 1 get = StatementExpression Assignment MemberReference port MethodInvocation list MethodInvocation toString Literal 0 get = BlockStatement ThrowStatement MethodInvocation runtime Literal "invalid address string" newArgumentError IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == Assignment MemberReference host MethodInvocation m MemberReference HOST_GROUP group = Literal null BinaryOperation == MethodInvocation host length Literal 0 BinaryOperation == Assignment MemberReference port MethodInvocation m MemberReference PORT_GROUP group = Literal null BinaryOperation == MethodInvocation port length Literal 0 BlockStatement ThrowStatement MethodInvocation runtime Literal "invalid address string" newArgumentError BlockStatement ThrowStatement MethodInvocation runtime Literal "invalid args" newArgumentError LocalVariableDeclaration ReferenceType InetAddress VariableDeclarator addr TryStatement StatementExpression Assignment MemberReference addr MethodInvocation InetAddress MemberReference host getByName = CatchClause CatchClauseParameter UnknownHostException e ThrowStatement MethodInvocation MemberReference runtime BinaryOperation + Literal "unknown host: " MemberReference host sockerr IfStatement BinaryOperation == BinaryOperation & MemberReference flags MethodInvocation NI_NUMERICHOST value Literal 0 BlockStatement StatementExpression Assignment MemberReference host MethodInvocation addr getCanonicalHostName = BlockStatement StatementExpression Assignment MemberReference host MethodInvocation addr getHostAddress = IfStatement BinaryOperation == BinaryOperation & MemberReference flags MethodInvocation NI_NUMERICSERV value Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator serv MethodInvocation IANA.portToService MethodInvocation Integer MemberReference port parseInt get IfStatement BinaryOperation != MemberReference serv Literal null BlockStatement StatementExpression Assignment MemberReference port MethodInvocation serv Literal 0 MethodInvocation serv Literal '/' indexOf substring = ReturnStatement MethodInvocation runtime MethodInvocation runtime MemberReference host newString MethodInvocation runtime MemberReference port newString newArray	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "upcase" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject upcase FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime ReturnStatement MethodInvocation MemberReference runtime MethodInvocation MethodInvocation MemberReference context upcase19 MethodInvocation toString MemberReference runtime newShared newSymbol	0
MethodDeclaration Modifier public ReferenceType Node getReceiverNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair meta Literal true ReferenceType IRubyObject open FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject path ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference recv Literal "new" MemberReference path invoke	0
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject on_start FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType JRubyApplet VariableDeclarator applet Cast ReferenceType JRubyApplet MethodInvocation MemberReference recv SynchronizedStatement MemberReference applet StatementExpression Assignment MemberReference applet MethodInvocation MemberReference applet runtime MemberReference block blockToProc = ReturnStatement MemberReference recv	1
MethodDeclaration Modifier public static ReferenceType Unsafe ReturnStatement MemberReference unsafe	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MemberReference EMPTY_LIST	0
MethodDeclaration Modifier public FormalParameter ReferenceType MethodVisitor mv IfStatement MemberReference DEBUG BlockStatement StatementExpression Assignment This MemberReference method ClassCreator ReferenceType TraceMethodVisitor MemberReference mv = BlockStatement StatementExpression Assignment This MemberReference method MemberReference mv =	0
MethodDeclaration Modifier protected ReferenceType IRubyObject setupBlockArgs FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType IRubyObject self SwitchStatement MemberReference SwitchStatementCase ZERO_ARGS ReturnStatement Literal null SwitchStatementCase MULTIPLE_ASSIGNMENT SINGLE_RESTARG ReturnStatement MemberReference value SwitchStatementCase ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference value defaultArgsLogic	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType SearchState state ReturnStatement Literal true	0
MethodDeclaration Modifier private ReferenceType IRubyObject ReturnStatement MethodInvocation RubyString MethodInvocation getRuntime MethodInvocation getDigestHex	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "reverse" ReferenceType IRubyObject reverse StatementExpression MethodInvocation modify LocalVariableDeclaration Modifier final ReferenceType RubyArray VariableDeclarator dup IfStatement BinaryOperation > MemberReference realLength Literal 1 BlockStatement StatementExpression Assignment MemberReference dup MethodInvocation safeReverse = BlockStatement StatementExpression Assignment MemberReference dup ClassCreator ReferenceType RubyArray MethodInvocation getRuntime MethodInvocation getMetaClass This = StatementExpression Assignment MemberReference dup flags BinaryOperation & MemberReference flags MemberReference TAINTED_F |= ReturnStatement MemberReference dup	0
MethodDeclaration Modifier public final get FormalParameter BasicType long offset FormalParameter BasicType int dst FormalParameter BasicType int off FormalParameter BasicType int len ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public ReferenceType ListIterator listIterator ReturnStatement ClassCreator ReferenceType RubyArrayConversionListIterator	0
MethodDeclaration Modifier public StatementExpression MethodInvocation method start StatementExpression MethodInvocation method MemberReference StandardASMCompiler THREADCONTEXT_INDEX aload StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType ThreadContext p Literal "getRuntime" MethodInvocation ClassReference ReferenceType Ruby sig invokevirtual StatementExpression MethodInvocation method MethodInvocation astore StatementExpression MethodInvocation method MethodInvocation aload StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType Ruby p Literal "getNil" MethodInvocation ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation method MethodInvocation astore StatementExpression MethodInvocation method MemberReference StandardASMCompiler THREADCONTEXT_INDEX aload StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType ThreadContext p Literal "getCurrentScope" MethodInvocation ClassReference ReferenceType DynamicScope sig invokevirtual StatementExpression MethodInvocation method MethodInvocation getDynamicScopeIndex astore IfStatement BinaryOperation > MethodInvocation scope getNumberOfVariables Literal 4 BlockStatement StatementExpression MethodInvocation method MethodInvocation getDynamicScopeIndex aload StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType DynamicScope p Literal "getValues" MethodInvocation ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation method MethodInvocation getVarsArrayIndex astore StatementExpression MethodInvocation method MemberReference scopeStart label	1
MethodDeclaration Modifier private final checkDir IfStatement BinaryOperation && MethodInvocation ! isTaint BinaryOperation >= MethodInvocation MethodInvocation getSafeLevel getRuntime Literal 4 ThrowStatement MethodInvocation MethodInvocation Literal "Insecure: operation on untainted Dir" newSecurityError getRuntime StatementExpression MethodInvocation Literal "Dir" testFrozen IfStatement MemberReference ! isOpen ThrowStatement MethodInvocation MethodInvocation Literal "closed directory" newIOError getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "name" Literal "to_s" ReferenceType RubyString name ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation getName javaClass newString getRuntime	0
MethodDeclaration Modifier public BasicType int read IOException LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator readValue MethodInvocation readAdapter MethodInvocation io MethodInvocation getCurrentContext getRuntime MemberReference io MemberReference io MemberReference numOne call LocalVariableDeclaration BasicType int VariableDeclarator returnValue Literal - 1 IfStatement MethodInvocation ! readValue isNil BlockStatement StatementExpression Assignment MemberReference returnValue MethodInvocation readValue MethodInvocation Literal 0 charAt toString = ReturnStatement MemberReference returnValue	0
MethodDeclaration Modifier private static ReferenceType NKFCharset detectMimeString FormalParameter ReferenceType ByteList str FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType NKFCharset options IfStatement BinaryOperation <= MethodInvocation str length Literal 6 ReturnStatement MemberReference NOCONV IfStatement BinaryOperation == MethodInvocation options Literal "mime-decode" get MemberReference NOCONV ReturnStatement MemberReference NOCONV IfStatement MethodInvocation ! str MemberReference BEGIN_MIME_STRING startsWith ReturnStatement MemberReference NOCONV IfStatement MethodInvocation ! str MemberReference END_MIME_STRING endsWith ReturnStatement MemberReference NOCONV LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation str Literal '?' Literal 3 indexOf IfStatement BinaryOperation < MemberReference pos Literal 0 ReturnStatement MemberReference NOCONV LocalVariableDeclaration ReferenceType ByteList VariableDeclarator charset ClassCreator ReferenceType ByteList MemberReference str Literal 2 BinaryOperation - MemberReference pos Literal 2 IfStatement BinaryOperation == MethodInvocation charset MemberReference MIME_UTF8 caseInsensitiveCmp Literal 0 BlockStatement StatementExpression MethodInvocation options Literal "input" MemberReference UTF8 put IfStatement BinaryOperation == MethodInvocation charset MemberReference MIME_JIS caseInsensitiveCmp Literal 0 BlockStatement StatementExpression MethodInvocation options Literal "input" MemberReference JIS put IfStatement BinaryOperation == MethodInvocation charset MemberReference MIME_EUC_JP caseInsensitiveCmp Literal 0 BlockStatement StatementExpression MethodInvocation options Literal "input" MemberReference EUC put BlockStatement StatementExpression MethodInvocation options Literal "input" MemberReference ASCII put LocalVariableDeclaration BasicType int VariableDeclarator prev MemberReference pos StatementExpression Assignment MemberReference pos MethodInvocation str Literal '?' BinaryOperation + MemberReference pos Literal 1 indexOf = IfStatement BinaryOperation < MemberReference pos Literal 0 ReturnStatement MemberReference NOCONV LocalVariableDeclaration BasicType char VariableDeclarator encode MethodInvocation str BinaryOperation - MemberReference pos Literal 1 charAt SwitchStatement MemberReference encode SwitchStatementCase Literal 'q' Literal 'Q' ReturnStatement MemberReference QENCODE SwitchStatementCase Literal 'b' Literal 'B' ReturnStatement MemberReference BASE64 SwitchStatementCase ReturnStatement MemberReference NOCONV	1
MethodDeclaration Modifier public static loadUnboxedArgument FormalParameter ReferenceType SkinnyMethodAdapter m FormalParameter BasicType int index FormalParameter ReferenceType Class type StatementExpression MethodInvocation m MemberReference index aload StatementExpression MethodInvocation MemberReference m MemberReference type unboxAndCast	0
MethodDeclaration Modifier public issueRedoEvent IfStatement BinaryOperation != MemberReference currentLoopLabels Literal null BlockStatement StatementExpression MethodInvocation IfStatement MemberReference inNestedMethod BlockStatement StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject sig invokeUtilityMethod BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation Literal "redoLocalJumpError" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Ruby sig invokeUtilityMethod	0
MethodDeclaration Modifier public final BasicType boolean isGiven ReturnStatement BinaryOperation != This MemberReference NULL_BLOCK	1
MethodDeclaration Modifier public static BasicType boolean sprintf FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList to FormalParameter ReferenceType CharSequence format FormalParameter BasicType int arg ReturnStatement MethodInvocation MemberReference to MemberReference format ClassCreator ReferenceType Args MemberReference runtime Cast BasicType long MemberReference arg rubySprintf	0
MethodDeclaration Modifier public buildArrayArguments FormalParameter ReferenceType List TypeArgument ReferenceType Operand args FormalParameter ReferenceType Node node FormalParameter ReferenceType IR_Scope s StatementExpression MethodInvocation args MethodInvocation MemberReference node MemberReference s buildArray add	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation body MemberReference context MemberReference args MemberReference binding MemberReference type call	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "divmod" ElementValuePair compat MemberReference CompatVersion RUBY1_8 Annotation Override ReferenceType IRubyObject divmod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference other divmodFixnum ReturnStatement MethodInvocation MemberReference context Literal "divmod" MemberReference other coerceBin	0
MethodDeclaration Modifier public setVariables FormalParameter ReferenceType String names AssertStatement BinaryOperation != MemberReference names Literal null Literal "names is not null" StatementExpression Assignment MemberReference ArrayCreator ReferenceType String MemberReference names length = StatementExpression MethodInvocation System MemberReference names Literal 0 MemberReference Literal 0 MemberReference names length arraycopy StatementExpression Assignment MemberReference variableCaptured ArrayCreator BasicType boolean MemberReference length =	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType SearchState state ReturnStatement BinaryOperation == MemberReference state library Literal null	0
MethodDeclaration Modifier public synchronized fputc FormalParameter BasicType int c IOException BadDescriptorException StatementExpression MethodInvocation MemberReference c bufferedWrite	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String name StatementExpression Assignment This MemberReference name MemberReference name =	0
MethodDeclaration Modifier public popclass StatementExpression MethodInvocation pop	0
MethodDeclaration Modifier public ReferenceType Object case337_line1247 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ZeroArgNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getPosition = StatementExpression Assignment MemberReference lexer commandStart Literal true = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case418_line1568 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType Token Literal "true" MemberReference Tokens kTRUE Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "**" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_pow_19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference other powerFixnum19 BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference other powerOther19	1
MethodDeclaration Modifier public StatementExpression MethodInvocation popFrame StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType RaiseException newNotImplementedError FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation getNotImplementedError MemberReference message newRaiseException	0
MethodDeclaration Modifier public load FormalParameter ReferenceType Ruby runtime FormalParameter BasicType boolean wrap LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator ioClass MethodInvocation runtime getIO StatementExpression MethodInvocation ioClass ClassReference ReferenceType defineAnnotatedMethods	0
MethodDeclaration Modifier public ReferenceType Boolean receiveTrueObj FormalParameter ReferenceType Boolean t ReturnStatement MethodInvocation vri MemberReference t receiveTrueObj	0
MethodDeclaration Modifier public static ReferenceType Arity FormalParameter ReferenceType Node node IfStatement BinaryOperation && BinaryOperation instanceof MemberReference node ReferenceType AttrAssignNode BinaryOperation != MemberReference node Literal null BlockStatement StatementExpression Assignment MemberReference node Cast ReferenceType AttrAssignNode MemberReference node = IfStatement BinaryOperation == MemberReference node Literal null BlockStatement ReturnStatement MethodInvocation Arity optional IfStatement BinaryOperation instanceof MemberReference node ReferenceType IArityNode BlockStatement ReturnStatement Cast ReferenceType IArityNode MemberReference node IfStatement BinaryOperation instanceof MemberReference node ReferenceType CallNode BlockStatement ReturnStatement MethodInvocation Arity singleArgument IfStatement BinaryOperation instanceof MemberReference node ReferenceType ArrayNode BlockStatement ReturnStatement MethodInvocation Arity singleArgument IfStatement BinaryOperation instanceof MemberReference node ReferenceType ArgsNode BlockStatement ReturnStatement Cast ReferenceType ArgsNode MemberReference node ThrowStatement ClassCreator ReferenceType Error BinaryOperation + BinaryOperation + BinaryOperation + Literal "unexpected type " MethodInvocation node getClass Literal " at " MethodInvocation node getPosition	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg IfStatement BinaryOperation == MethodInvocation self getMetaClass MethodInvocation context MethodInvocation getArray getRuntime BlockStatement ReturnStatement Cast ReferenceType RubyArray MemberReference self ReturnStatement SuperMethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference arg call	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "readline" ElementValuePair writes MemberReference FrameField LASTLINE ReferenceType IRubyObject readline FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator line MethodInvocation MemberReference context gets IfStatement MethodInvocation line isNil ThrowStatement MethodInvocation context MethodInvocation newEOFError getRuntime ReturnStatement MemberReference line	1
MethodDeclaration Modifier public BasicType int getArity SwitchStatement MethodInvocation node getNodeType SwitchStatementCase ARGSCATNODE ARGSPUSHNODE SPLATNODE ReturnStatement Literal - 1 SwitchStatementCase ARRAYNODE LocalVariableDeclaration ReferenceType ArrayNode VariableDeclarator arrayNode Cast ReferenceType ArrayNode MemberReference node IfStatement BinaryOperation == MethodInvocation arrayNode size Literal 0 BlockStatement ReturnStatement Literal 0 IfStatement BinaryOperation > MethodInvocation arrayNode size Literal 3 BlockStatement ReturnStatement Literal - 1 BlockStatement ReturnStatement Cast ReferenceType ArrayNode MemberReference node SwitchStatementCase ReturnStatement Literal 1	0
MethodDeclaration Modifier public Annotation Override ReferenceType getLocalScope ReturnStatement This	0
MethodDeclaration Modifier private ReferenceType RubyClass ReferenceType VariableAccessor verifyAccessor FormalParameter ReferenceType RubyClass cls LocalVariableDeclaration ReferenceType RubyClass ReferenceType VariableAccessor VariableDeclarator localAccessor MemberReference accessor IfStatement BinaryOperation != MethodInvocation localAccessor getClassId MethodInvocation cls hashCode BlockStatement StatementExpression Assignment MemberReference localAccessor MethodInvocation cls MemberReference variableName getVariableAccessorForWrite = StatementExpression Assignment MemberReference accessor MemberReference localAccessor = ReturnStatement MemberReference localAccessor	0
MethodDeclaration Modifier public static preLoad FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String varNames LocalVariableDeclaration ReferenceType VariableDeclarator staticScope ClassCreator ReferenceType LocalStaticScope Literal null MemberReference varNames StatementExpression MethodInvocation staticScope MethodInvocation context MethodInvocation getObject getRuntime setModule LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation DynamicScope MemberReference staticScope StatementExpression MethodInvocation context MemberReference scope	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "can not extend final Java class: " MethodInvocation c getCanonicalName newTypeError getRuntime	0
MethodDeclaration Modifier private BasicType boolean flushWrite FormalParameter Modifier final BasicType boolean block IOException BadDescriptorException IfStatement BinaryOperation || BinaryOperation || MemberReference reading MethodInvocation ! modes isWritable BinaryOperation == MethodInvocation buffer position Literal 0 ReturnStatement Literal false LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation buffer position LocalVariableDeclaration BasicType int VariableDeclarator nWritten Literal 0 StatementExpression MethodInvocation buffer flip IfStatement BinaryOperation instanceof MethodInvocation descriptor getChannel ReferenceType SelectableChannel BlockStatement LocalVariableDeclaration ReferenceType SelectableChannel VariableDeclarator selectableChannel Cast ReferenceType SelectableChannel MethodInvocation descriptor getChannel SynchronizedStatement MethodInvocation selectableChannel blockingLock LocalVariableDeclaration BasicType boolean VariableDeclarator oldBlocking MethodInvocation selectableChannel isBlocking TryStatement IfStatement BinaryOperation != MemberReference oldBlocking MemberReference block BlockStatement StatementExpression MethodInvocation selectableChannel MemberReference block configureBlocking StatementExpression Assignment MemberReference nWritten MethodInvocation descriptor MemberReference buffer write = IfStatement BinaryOperation != MemberReference oldBlocking MemberReference block BlockStatement StatementExpression MethodInvocation selectableChannel MemberReference oldBlocking configureBlocking BlockStatement StatementExpression Assignment MemberReference nWritten MethodInvocation descriptor MemberReference buffer write = IfStatement BinaryOperation != MemberReference nWritten MemberReference len BlockStatement StatementExpression MethodInvocation buffer compact ReturnStatement Literal false StatementExpression MethodInvocation buffer clear ReturnStatement Literal true	1
MethodDeclaration Modifier public BasicType boolean contains FormalParameter ReferenceType Object element ReturnStatement BinaryOperation != MethodInvocation MemberReference element indexOf Literal - 1	0
MethodDeclaration Modifier synchronized protected ReferenceType Class loadClass FormalParameter ReferenceType String name FormalParameter BasicType boolean resolve ClassNotFoundException IfStatement MethodInvocation name Literal equals BlockStatement ReturnStatement ClassReference ReferenceType String ReturnStatement SuperMethodInvocation MemberReference name MemberReference resolve loadClass	1
MethodDeclaration Modifier public Annotation Override prepare FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block ThrowStatement MethodInvocation runtime Literal 3 Literal 1 newArgumentError	0
MethodDeclaration Modifier private ReferenceType Regex getStringPattern FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Encoding enc FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation RubyRegexp MemberReference runtime MethodInvocation MemberReference value MemberReference obj getStringForPattern MemberReference enc Literal 0 getQuotedRegexpFromCache	0
MethodDeclaration Modifier public ReferenceType Set keySet ReturnStatement ClassCreator ReferenceType BaseSet MemberReference	0
MethodDeclaration Modifier private BasicType double stringToDouble FormalParameter BasicType int nptr FormalParameter BasicType int endptr LocalVariableDeclaration BasicType double VariableDeclarator num LocalVariableDeclaration BasicType boolean VariableDeclarator got_dot VariableDeclarator got_digit LocalVariableDeclaration BasicType long VariableDeclarator exponent LocalVariableDeclaration BasicType int VariableDeclarator s MemberReference nptr WhileStatement MethodInvocation MemberReference s isSpace BlockStatement StatementExpression MemberReference ++ s LocalVariableDeclaration BasicType int VariableDeclarator sign TernaryExpression BinaryOperation && BinaryOperation < MemberReference s MemberReference end BinaryOperation == MemberReference ArraySelector MemberReference s data Literal '-' Literal - 1 Literal 1 IfStatement BinaryOperation && BinaryOperation < MemberReference s MemberReference end BinaryOperation || BinaryOperation == MemberReference ArraySelector MemberReference s data Literal '-' BinaryOperation == MemberReference ArraySelector MemberReference s data Literal '+' BlockStatement StatementExpression MemberReference ++ s LocalVariableDeclaration BasicType int VariableDeclarator saveFallback MemberReference s StatementExpression Assignment MemberReference num Literal 0.0 = StatementExpression Assignment MemberReference got_dot Literal false = StatementExpression Assignment MemberReference got_digit Literal false = StatementExpression Assignment MemberReference exponent Literal 0 = LocalVariableDeclaration BasicType int VariableDeclarator digits Literal 0 WhileStatement BinaryOperation < MemberReference s MemberReference end BlockStatement IfStatement BinaryOperation && BinaryOperation <= Literal '0' MemberReference ArraySelector MemberReference s data BinaryOperation <= MemberReference ArraySelector MemberReference s data Literal '9' BlockStatement StatementExpression Assignment MemberReference got_digit Literal true = StatementExpression MemberReference ++ digits IfStatement BinaryOperation > MemberReference digits Literal 15 BlockStatement ReturnStatement MethodInvocation MemberReference saveFallback MemberReference sign MemberReference endptr fallbackParsing IfStatement BinaryOperation > MemberReference num BinaryOperation * MemberReference Double MAX_VALUE Literal 0.1 BlockStatement StatementExpression MemberReference ++ exponent BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n BinaryOperation - MemberReference ArraySelector MemberReference s data Literal '0' StatementExpression Assignment MemberReference num BinaryOperation + BinaryOperation * Literal 10.0 MemberReference num MemberReference n = IfStatement MemberReference got_dot BlockStatement StatementExpression MemberReference -- exponent IfStatement BinaryOperation && MemberReference ! got_dot BinaryOperation == MemberReference ArraySelector MemberReference s data Literal '.' BlockStatement StatementExpression Assignment MemberReference got_dot Literal true = BlockStatement BreakStatement StatementExpression MemberReference ++ s IfStatement MemberReference ! got_digit BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation < BinaryOperation + MemberReference s Literal 2 MemberReference end BinaryOperation || BinaryOperation == MemberReference ArraySelector MemberReference s data Literal 'n' BinaryOperation == MemberReference ArraySelector MemberReference s data Literal 'N' BinaryOperation || BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 1 data Literal 'a' BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 1 data Literal 'A' BinaryOperation || BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 2 data Literal 'n' BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 2 data Literal 'N' BlockStatement IfStatement BinaryOperation != MemberReference endptr Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 endptr BinaryOperation + MemberReference s Literal 3 = ReturnStatement MemberReference Double NaN IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation < BinaryOperation + MemberReference s Literal 7 MemberReference end BinaryOperation || BinaryOperation == MemberReference ArraySelector MemberReference s data Literal 'i' BinaryOperation == MemberReference ArraySelector MemberReference s data Literal 'I' BinaryOperation || BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 1 data Literal 'n' BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 1 data Literal 'N' BinaryOperation || BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 2 data Literal 'f' BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 2 data Literal 'F' BinaryOperation || BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 3 data Literal 'i' BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 3 data Literal 'I' BinaryOperation || BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 4 data Literal 'n' BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 4 data Literal 'N' BinaryOperation || BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 5 data Literal 'i' BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 5 data Literal 'I' BinaryOperation || BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 6 data Literal 't' BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 6 data Literal 'T' BinaryOperation || BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 7 data Literal 'y' BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference s Literal 7 data Literal 'Y' BlockStatement IfStatement BinaryOperation != MemberReference endptr Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 endptr BinaryOperation + MemberReference s Literal 8 = ReturnStatement TernaryExpression BinaryOperation == MemberReference sign Literal - 1 MemberReference Double NEGATIVE_INFINITY MemberReference Double POSITIVE_INFINITY IfStatement BinaryOperation != MemberReference endptr Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 endptr MemberReference nptr = ReturnStatement Literal 0.0 IfStatement BinaryOperation && BinaryOperation < MemberReference s MemberReference end BinaryOperation || BinaryOperation == MemberReference ArraySelector MemberReference s data Literal 'e' BinaryOperation == MemberReference ArraySelector MemberReference s data Literal 'E' BlockStatement StatementExpression MemberReference ++ s LocalVariableDeclaration BasicType long VariableDeclarator exp Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator endx ArrayCreator BasicType int ArrayInitializer Literal 0 TryStatement StatementExpression Assignment MemberReference exp MethodInvocation MemberReference s MemberReference endx Literal 10 stringToLong = CatchClause CatchClauseParameter ERange e IfStatement BinaryOperation != MemberReference endptr Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 endptr MemberReference ArraySelector Literal 0 endx = ThrowStatement MemberReference e IfStatement BinaryOperation == MemberReference ArraySelector Literal 0 endx MemberReference s BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 endx BinaryOperation - MemberReference s Literal 1 = StatementExpression Assignment MemberReference s MemberReference ArraySelector Literal 0 endx = StatementExpression Assignment MemberReference exponent MemberReference exp += IfStatement BinaryOperation != MemberReference endptr Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 endptr MemberReference s = IfStatement BinaryOperation == MemberReference num Literal 0.0 BlockStatement ReturnStatement BinaryOperation * Literal 0.0 MemberReference sign IfStatement BinaryOperation < MemberReference exponent Literal 0 BlockStatement IfStatement BinaryOperation < MemberReference num BinaryOperation * MemberReference Double MIN_VALUE MethodInvocation Math Literal 10.0 Cast BasicType double MemberReference - exponent pow BlockStatement ThrowStatement ClassCreator ReferenceType ERange MemberReference ERange.Kind Underflow IfStatement BinaryOperation > MemberReference exponent Literal 0 BlockStatement IfStatement BinaryOperation > MemberReference num BinaryOperation * MemberReference Double MAX_VALUE MethodInvocation Math Literal 10.0 Cast BasicType double MemberReference - exponent pow BlockStatement ThrowStatement ClassCreator ReferenceType ERange MemberReference ERange.Kind Overflow StatementExpression Assignment MemberReference num MethodInvocation Math Literal 10.0 Cast BasicType double MemberReference exponent pow *= ReturnStatement BinaryOperation * MemberReference num MemberReference sign	1
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator nil MethodInvocation runtime getNil StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MemberReference nil MemberReference block Literal false assign StatementExpression MethodInvocation parameter2 MemberReference runtime MemberReference context MemberReference self MemberReference nil MemberReference block Literal false assign StatementExpression MethodInvocation parameter3 MemberReference runtime MemberReference context MemberReference self MemberReference nil MemberReference block Literal false assign	0
MethodDeclaration Modifier private ReferenceType Method getMethod FormalParameter ReferenceType String name FormalParameter ReferenceType Class argTypes LocalVariableDeclaration ReferenceType Class VariableDeclarator jclass MethodInvocation MethodInvocation getJavaClass getJavaObject TryStatement ReturnStatement MethodInvocation jclass MemberReference name MemberReference argTypes getMethod CatchClause CatchClauseParameter NoSuchMethodException nsme ThrowStatement MethodInvocation JavaMethod MethodInvocation getRuntime MemberReference jclass BinaryOperation + MemberReference name MethodInvocation CodegenUtils MemberReference argTypes prettyParams MemberReference name newMethodNotFoundError	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "setgid?" ElementValuePair required Literal 1 ElementValuePair module Literal true ReferenceType IRubyObject setgid_p FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject filename LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator file MethodInvocation MemberReference filename file ReturnStatement MethodInvocation runtime BinaryOperation && MethodInvocation file exists MethodInvocation runtime MethodInvocation MethodInvocation file getAbsolutePath stat MethodInvocation isSetgid getPosix newBoolean	1
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object array FormalParameter BasicType int i ReturnStatement MethodInvocation RubyFixnum MemberReference runtime Cast BasicType byte MemberReference array newFixnum	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "putc" ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject putc FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject ch LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator defout MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation Literal get getRuntime ReturnStatement MethodInvocation RubyIO MemberReference context MemberReference defout MemberReference ch putc	0
MethodDeclaration Modifier private ReferenceType FastSwitchType getHomogeneousSwitchType FormalParameter ReferenceType List TypeArgument ReferenceType Node whenNodes LocalVariableDeclaration ReferenceType FastSwitchType VariableDeclarator foundType Literal null ForStatement Outer EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator node MemberReference whenNodes BlockStatement LocalVariableDeclaration ReferenceType WhenNode VariableDeclarator whenNode Cast ReferenceType WhenNode MemberReference node IfStatement BinaryOperation instanceof MethodInvocation whenNode getExpressionNodes ReferenceType ArrayNode BlockStatement LocalVariableDeclaration ReferenceType ArrayNode VariableDeclarator arrayNode Cast ReferenceType ArrayNode MethodInvocation whenNode getExpressionNodes ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator maybeFixnum MethodInvocation arrayNode childNodes BlockStatement IfStatement BinaryOperation instanceof MemberReference maybeFixnum ReferenceType FixnumNode BlockStatement LocalVariableDeclaration ReferenceType FixnumNode VariableDeclarator fixnumNode Cast ReferenceType FixnumNode MemberReference maybeFixnum LocalVariableDeclaration BasicType long VariableDeclarator value MethodInvocation fixnumNode getValue IfStatement BinaryOperation && BinaryOperation <= MemberReference value MemberReference Integer MAX_VALUE BinaryOperation >= MemberReference value MemberReference Integer MIN_VALUE BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference foundType Literal null BinaryOperation != MemberReference foundType MemberReference FastSwitchType FIXNUM ReturnStatement Literal null IfStatement BinaryOperation == MemberReference foundType Literal null StatementExpression Assignment MemberReference foundType MemberReference FastSwitchType FIXNUM = ContinueStatement BlockStatement ReturnStatement Literal null BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MethodInvocation whenNode getExpressionNodes ReferenceType FixnumNode BlockStatement LocalVariableDeclaration ReferenceType FixnumNode VariableDeclarator fixnumNode Cast ReferenceType FixnumNode MethodInvocation whenNode getExpressionNodes LocalVariableDeclaration BasicType long VariableDeclarator value MethodInvocation fixnumNode getValue IfStatement BinaryOperation && BinaryOperation <= MemberReference value MemberReference Integer MAX_VALUE BinaryOperation >= MemberReference value MemberReference Integer MIN_VALUE BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference foundType Literal null BinaryOperation != MemberReference foundType MemberReference FastSwitchType FIXNUM ReturnStatement Literal null IfStatement BinaryOperation == MemberReference foundType Literal null StatementExpression Assignment MemberReference foundType MemberReference FastSwitchType FIXNUM = ContinueStatement BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MethodInvocation whenNode getExpressionNodes ReferenceType StrNode BlockStatement LocalVariableDeclaration ReferenceType StrNode VariableDeclarator strNode Cast ReferenceType StrNode MethodInvocation whenNode getExpressionNodes IfStatement BinaryOperation == MethodInvocation strNode MethodInvocation length getValue Literal 1 BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference foundType Literal null BinaryOperation != MemberReference foundType MemberReference FastSwitchType SINGLE_CHAR_STRING ReturnStatement Literal null IfStatement BinaryOperation == MemberReference foundType Literal null StatementExpression Assignment MemberReference foundType MemberReference FastSwitchType SINGLE_CHAR_STRING = ContinueStatement BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference foundType Literal null BinaryOperation != MemberReference foundType MemberReference FastSwitchType STRING ReturnStatement Literal null IfStatement BinaryOperation == MemberReference foundType Literal null StatementExpression Assignment MemberReference foundType MemberReference FastSwitchType STRING = ContinueStatement IfStatement BinaryOperation instanceof MethodInvocation whenNode getExpressionNodes ReferenceType SymbolNode BlockStatement LocalVariableDeclaration ReferenceType SymbolNode VariableDeclarator symbolNode Cast ReferenceType SymbolNode MethodInvocation whenNode getExpressionNodes IfStatement BinaryOperation == MethodInvocation symbolNode MethodInvocation length getName Literal 1 BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference foundType Literal null BinaryOperation != MemberReference foundType MemberReference FastSwitchType SINGLE_CHAR_SYMBOL ReturnStatement Literal null IfStatement BinaryOperation == MemberReference foundType Literal null StatementExpression Assignment MemberReference foundType MemberReference FastSwitchType SINGLE_CHAR_SYMBOL = ContinueStatement BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference foundType Literal null BinaryOperation != MemberReference foundType MemberReference FastSwitchType SYMBOL ReturnStatement Literal null IfStatement BinaryOperation == MemberReference foundType Literal null StatementExpression Assignment MemberReference foundType MemberReference FastSwitchType SYMBOL = ContinueStatement BlockStatement ReturnStatement Literal null ReturnStatement MemberReference foundType	1
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType RubyProc proc FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType Block block ReturnStatement MethodInvocation recv MethodInvocation MemberReference Block.Type LAMBDA MemberReference block newProc getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "final?" ReferenceType RubyBoolean final_p ReturnStatement MethodInvocation MethodInvocation MethodInvocation Modifier MethodInvocation field getModifiers isFinal newBoolean getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject fields FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation RubyArray MethodInvocation context getRuntime MemberReference fields newArray	0
MethodDeclaration Modifier public error FormalParameter ReferenceType ERRORS error FormalParameter ReferenceType String extraData SwitchStatement MemberReference error SwitchStatementCase ENOENT ThrowStatement MethodInvocation runtime BinaryOperation + Literal "No such file or directory - " MemberReference extraData newErrnoENOENTError	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "log2" ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType RubyFloat log2 FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation MemberReference recv MemberReference x Literal 2 log_common	0
MethodDeclaration Modifier public static ReferenceType RubyClass createThreadClass FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator threadClass MethodInvocation runtime Literal "Thread" MethodInvocation runtime getObject MemberReference ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR defineClass StatementExpression MethodInvocation runtime MemberReference threadClass StatementExpression MethodInvocation threadClass ClassReference ReferenceType RubyThread defineAnnotatedMethods LocalVariableDeclaration ReferenceType RubyThread VariableDeclarator rubyThread ClassCreator ReferenceType RubyThread MemberReference runtime MemberReference threadClass StatementExpression Assignment MemberReference rubyThread threadImpl ClassCreator ReferenceType NativeThread MemberReference rubyThread MethodInvocation Thread currentThread = StatementExpression MethodInvocation runtime MethodInvocation MethodInvocation Thread currentThread MemberReference rubyThread setMainThread getThreadService StatementExpression MethodInvocation runtime MethodInvocation MemberReference rubyThread addDirectly getDefaultThreadGroup StatementExpression MethodInvocation threadClass MemberReference NOT_MARSHALABLE_MARSHAL setMarshal ReturnStatement MemberReference threadClass	1
MethodDeclaration Modifier final public static BasicType byte intToByteArray FormalParameter BasicType int i FormalParameter BasicType int radix FormalParameter BasicType boolean upper LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation Integer MemberReference i MemberReference radix toString StatementExpression Assignment MemberReference s TernaryExpression MemberReference upper MethodInvocation s toUpperCase MethodInvocation s toLowerCase = ReturnStatement MethodInvocation ByteList MemberReference s plain	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self Literal "__jcreate!" MemberReference arg0 MemberReference block invoke	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public final Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 ReturnStatement MethodInvocation MemberReference context MemberReference arg1 MemberReference arg2 invoke	1
MethodDeclaration Modifier private ReferenceType IRubyObject trueIfNoArgument FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args ReturnStatement TernaryExpression BinaryOperation == MemberReference args length Literal 0 ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation context MethodInvocation getTrue getRuntime MemberReference args	0
MethodDeclaration Modifier public ReferenceType DynamicMethod getAnnotatedMethod FormalParameter ReferenceType RubyModule implementationClass FormalParameter ReferenceType JavaMethodDescriptor desc LocalVariableDeclaration ReferenceType String VariableDeclarator javaMethodName MemberReference desc name SynchronizedStatement MemberReference classLoader TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference desc getAnnotatedMethodClass LocalVariableDeclaration ReferenceType JavaMethod VariableDeclarator ic Cast ReferenceType JavaMethod MethodInvocation c MethodInvocation ArrayCreator ReferenceType Object ArrayInitializer MemberReference implementationClass MethodInvocation desc.anno visibility newInstance ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType RubyModule ClassReference ReferenceType Visibility getConstructor StatementExpression MethodInvocation ic MethodInvocation Arity MemberReference desc anno MemberReference desc actualRequired setArity StatementExpression MethodInvocation ic MemberReference javaMethodName setJavaName StatementExpression MethodInvocation ic MemberReference desc isStatic setSingleton StatementExpression MethodInvocation ic MethodInvocation CallConfiguration MemberReference desc anno getCallConfigByAnno setCallConfig ReturnStatement MemberReference ic CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace ThrowStatement MethodInvocation implementationClass MethodInvocation MethodInvocation e getMessage newLoadError getRuntime	1
MethodDeclaration Modifier final protected Annotation Override post FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Visibility FormalParameter ReferenceType Frame lastFrame StatementExpression MethodInvocation binding MethodInvocation MemberReference setVisibility getFrame StatementExpression MethodInvocation context MemberReference binding MemberReference lastFrame	0
MethodDeclaration Modifier public ReferenceType Object case286_line1079 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ZYieldNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getPosition = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private printErrorPos FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType PrintStream errorStream IfStatement BinaryOperation != MethodInvocation context getFile Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation context getFrameName Literal null BlockStatement StatementExpression MethodInvocation errorStream BinaryOperation + BinaryOperation + MethodInvocation context getFile Literal ":" MethodInvocation context getLine print StatementExpression MethodInvocation errorStream BinaryOperation + BinaryOperation + Literal ":in '" MethodInvocation context getFrameName Literal '\'' print IfStatement BinaryOperation != MethodInvocation context getLine Literal 0 BlockStatement StatementExpression MethodInvocation errorStream BinaryOperation + BinaryOperation + MethodInvocation context getFile Literal ":" MethodInvocation context getLine print BlockStatement StatementExpression MethodInvocation errorStream MethodInvocation context getFile print	0
MethodDeclaration Modifier public compileTrue FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr IfStatement MemberReference RubyInstanceConfig PEEPHOLE_OPTZ BlockStatement IfStatement MemberReference expr BlockStatement StatementExpression MethodInvocation context loadTrue StatementExpression MethodInvocation context pollThreadEvents BlockStatement StatementExpression MethodInvocation context loadTrue StatementExpression MethodInvocation context pollThreadEvents IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public Annotation Override ReferenceType ChainedChildBodyCompiler FormalParameter ReferenceType String methodName StatementExpression MethodInvocation method MemberReference StandardASMCompiler THIS aload ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i Literal 4 MemberReference ++ i BlockStatement StatementExpression MethodInvocation method MemberReference i aload StatementExpression Assignment MemberReference methodName BinaryOperation + BinaryOperation + MemberReference methodName Literal "_" MethodInvocation script = StatementExpression MethodInvocation method MethodInvocation script getClassname MemberReference methodName MethodInvocation getSignature invokestatic LocalVariableDeclaration ReferenceType ChainedChildBodyCompiler19 VariableDeclarator methodCompiler ClassCreator ReferenceType ChainedChildBodyCompiler19 MemberReference script MemberReference methodName MemberReference inspector MemberReference scope This StatementExpression MethodInvocation methodCompiler ReturnStatement MemberReference methodCompiler	0
MethodDeclaration Modifier public ReferenceType RubyClass getSingletonClass LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator klass IfStatement BinaryOperation && MethodInvocation MethodInvocation isSingleton getMetaClass BinaryOperation == Cast ReferenceType MetaClass MethodInvocation getMetaClass This BlockStatement StatementExpression Assignment MemberReference klass MethodInvocation getMetaClass = BlockStatement StatementExpression Assignment MemberReference klass MethodInvocation MethodInvocation getMetaClass makeMetaClass = StatementExpression MethodInvocation klass MethodInvocation isTaint setTaint IfStatement MethodInvocation isFrozen StatementExpression MethodInvocation klass Literal true setFrozen ReturnStatement MemberReference klass	1
MethodDeclaration Modifier private ReferenceType IRubyObject singleByteRStrip FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int s FormalParameter BasicType int end LocalVariableDeclaration BasicType int VariableDeclarator endp BinaryOperation - MemberReference end Literal 1 WhileStatement BinaryOperation && BinaryOperation >= MemberReference endp MemberReference s BinaryOperation == MemberReference ArraySelector MemberReference endp bytes Literal 0 StatementExpression MemberReference -- endp WhileStatement BinaryOperation && BinaryOperation >= MemberReference endp MemberReference s MethodInvocation enc BinaryOperation & MemberReference ArraySelector MemberReference endp bytes Literal 0xff isSpace StatementExpression MemberReference -- endp IfStatement BinaryOperation < MemberReference endp BinaryOperation - MemberReference end Literal 1 BlockStatement StatementExpression MethodInvocation Literal 0 BinaryOperation + BinaryOperation - MemberReference endp MemberReference s Literal 1 view ReturnStatement This ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier private ReferenceType IRubyObject tryProxyInvocation FormalParameter ReferenceType Object javaInvokee FormalParameter ReferenceType Object arg0 LocalVariableDeclaration ReferenceType JavaProxyClass VariableDeclarator jpc Cast ReferenceType InternalJavaProxy MemberReference javaInvokee LocalVariableDeclaration ReferenceType JavaProxyMethod VariableDeclarator jpm IfStatement BinaryOperation && BinaryOperation != Assignment MemberReference jpm MethodInvocation jpc MethodInvocation method getName MemberReference parameterTypes getMethod = Literal null MethodInvocation jpm hasSuperImplementation BlockStatement ReturnStatement MethodInvocation MethodInvocation jpm getSuperMethod MemberReference javaInvokee MemberReference arg0 invokeDirectSuperWithExceptionHandling BlockStatement ReturnStatement MethodInvocation MemberReference method MemberReference javaInvokee MemberReference arg0 invokeDirectWithExceptionHandling	1
MethodDeclaration Modifier public synchronized clear LocalVariableDeclaration ReferenceType Entry VariableDeclarator tab MemberReference table ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator index MemberReference tab length BinaryOperation >= MemberReference -- index Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference index tab Literal null = StatementExpression Assignment MemberReference count Literal 0 =	1
MethodDeclaration Modifier public static ReferenceType Class loadAlternateClass ClassNotFoundException LocalVariableDeclaration ReferenceType AlternateLoader VariableDeclarator loader ClassCreator ReferenceType AlternateLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator klass MethodInvocation loader Literal "org.jruby.test.TestHelper" loadClass ReturnStatement MemberReference klass	1
MethodDeclaration Modifier public static ReferenceType JavaMethod create FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Class TypeArgument ? javaClass FormalParameter ReferenceType String methodName FormalParameter ReferenceType Class TypeArgument ? argumentTypes TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator method MethodInvocation javaClass MemberReference methodName MemberReference argumentTypes getMethod ReturnStatement MethodInvocation MemberReference runtime MemberReference method create CatchClause CatchClauseParameter NoSuchMethodException e ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "undefined method '" MemberReference methodName Literal "' for class '" MethodInvocation javaClass getName Literal "'" MemberReference methodName newNameError	1
MethodDeclaration Modifier public static ReferenceType RaiseException newArgSizeMismatchError FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int typeCount FormalParameter BasicType int argCount ReturnStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal type count (" MemberReference typeCount Literal ") != arg count (" MemberReference argCount Literal ")" newArgumentError	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args MethodInvocation ASTInterpreter MemberReference runtime MemberReference context MemberReference argsNode MemberReference self MemberReference aBlock setupArgs AssertStatement MethodInvocation MemberReference receiver hasMetaClass MethodInvocation MemberReference receiver receiverClassName LocalVariableDeclaration ReferenceType CallSite VariableDeclarator callSite StatementExpression Assignment MemberReference callSite MethodInvocation MemberReference self MemberReference receiver selectCallSite = StatementExpression MethodInvocation callSite MemberReference context MemberReference self MemberReference receiver MemberReference args call ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference args length Literal 1 args	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getSignature ReturnStatement MethodInvocation StandardASMCompiler MethodInvocation script getClassname getStaticClosure19Signature	0
MethodDeclaration Modifier public static BasicType int read FormalParameter ReferenceType ReadableByteChannel channel FormalParameter ReferenceType ByteBuffer buf FormalParameter BasicType boolean blocking IOException DoStatement Literal true BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation channel MemberReference buf read IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation != MemberReference n Literal 0 MemberReference ! blocking BinaryOperation instanceof MemberReference channel ReferenceType SelectableChannel MethodInvocation ! buf hasRemaining BlockStatement ReturnStatement MemberReference n TryStatement StatementExpression MethodInvocation MemberReference channel awaitReadable CatchClause CatchClauseParameter InterruptedException ex ThrowStatement ClassCreator ReferenceType InterruptedIOException MethodInvocation ex getMessage	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair required Literal 1 ReferenceType JavaField field FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject name LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator javaClass MethodInvocation javaClass LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType String VariableDeclarator stringName MethodInvocation name asJavaString TryStatement ReturnStatement ClassCreator ReferenceType JavaField MemberReference runtime MethodInvocation javaClass MemberReference stringName getField CatchClause CatchClauseParameter NoSuchFieldException nsfe LocalVariableDeclaration ReferenceType String VariableDeclarator newName MethodInvocation JavaUtil MemberReference stringName getJavaCasedName IfStatement BinaryOperation != MemberReference newName Literal null BlockStatement TryStatement ReturnStatement ClassCreator ReferenceType JavaField MemberReference runtime MethodInvocation javaClass MemberReference newName getField CatchClause CatchClauseParameter NoSuchFieldException nsfe2 ThrowStatement MethodInvocation MemberReference runtime MethodInvocation javaClass getName MemberReference stringName undefinedFieldError	1
MethodDeclaration Modifier private ReferenceType Label getNewLabel ReturnStatement MethodInvocation _scope getNewLabel	0
MethodDeclaration Modifier public ReferenceType Object case8_line327 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "reverse" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject reverse FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation <= MemberReference value realSize Literal 1 ReturnStatement MethodInvocation MethodInvocation context getRuntime strDup LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference value realSize LocalVariableDeclaration BasicType byte VariableDeclarator obytes ArrayCreator BasicType byte MemberReference len ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation <= MemberReference i BinaryOperation >> MemberReference len Literal 1 MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i obytes MemberReference ArraySelector BinaryOperation - BinaryOperation - BinaryOperation + MemberReference p MemberReference len MemberReference i Literal 1 bytes = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - BinaryOperation - MemberReference len MemberReference i Literal 1 obytes MemberReference ArraySelector BinaryOperation + MemberReference p MemberReference i bytes = ReturnStatement ClassCreator MethodInvocation This infectBy ReferenceType RubyString MemberReference runtime MethodInvocation getMetaClass ClassCreator ReferenceType ByteList MemberReference obytes Literal false	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject close_write FormalParameter ReferenceType ThreadContext context IfStatement BinaryOperation && BinaryOperation >= MethodInvocation context MethodInvocation getSafeLevel getRuntime Literal 4 MethodInvocation isTaint BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "Insecure: can't close" newSecurityError getRuntime IfStatement BinaryOperation && BinaryOperation == MethodInvocation openFile getPipeStream Literal null MethodInvocation openFile isReadable BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "closing non-duplex IO for writing" newIOError getRuntime IfStatement MethodInvocation ! openFile isReadable BlockStatement StatementExpression MethodInvocation close BlockStatement LocalVariableDeclaration ReferenceType Channel VariableDeclarator socketChannel MethodInvocation openFile MethodInvocation getDescriptor MethodInvocation getChannel getMainStream IfStatement BinaryOperation || BinaryOperation instanceof MemberReference socketChannel ReferenceType SocketChannel BinaryOperation instanceof MemberReference socketChannel ReferenceType DatagramChannel BlockStatement TryStatement StatementExpression MethodInvocation MethodInvocation shutdownOutput asSocket CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation context MethodInvocation MethodInvocation e getMessage newIOError getRuntime StatementExpression MethodInvocation openFile Literal null setPipeStream StatementExpression MethodInvocation openFile BinaryOperation & MethodInvocation openFile getMode MemberReference ~ OpenFile WRITABLE setMode ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair rest Literal true ReferenceType IRubyObject recv_io FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType String toJavaModeString IfStatement BinaryOperation || BinaryOperation || MethodInvocation isWritable MethodInvocation isCreate MethodInvocation isTruncate BlockStatement ReturnStatement Literal "rw" BlockStatement ReturnStatement Literal "r"	0
MethodDeclaration Modifier public addFinalizer FormalParameter ReferenceType IRubyObject finalizer IfStatement BinaryOperation == MemberReference firstFinalizer Literal null BlockStatement StatementExpression Assignment MemberReference firstFinalizer MemberReference finalizer = BlockStatement IfStatement BinaryOperation == MemberReference finalizers Literal null StatementExpression Assignment MemberReference finalizers ClassCreator ReferenceType ArrayList TypeArgument ReferenceType IRubyObject Literal 4 = StatementExpression MethodInvocation finalizers MemberReference finalizer add	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "match?" ElementValuePair required Literal 1 ReferenceType IRubyObject match_p FormalParameter ReferenceType IRubyObject regex ReturnStatement MethodInvocation MemberReference regex Literal false Literal false Literal true scan	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator enclosingModule MethodInvocation cpath MemberReference runtime MemberReference context MemberReference self MemberReference aBlock getEnclosingModule IfStatement BinaryOperation == MemberReference enclosingModule Literal null ThrowStatement MethodInvocation runtime Literal "no outer class/module" newTypeError LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation cpath getName LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module MethodInvocation enclosingModule MemberReference name defineOrGetModuleUnder StatementExpression MethodInvocation scope MemberReference module setModule ReturnStatement MethodInvocation ASTInterpreter MemberReference runtime MemberReference context MemberReference scope MemberReference bodyNode MemberReference module MemberReference self MemberReference aBlock evalClassDefinitionBody	1
MethodDeclaration Modifier public ReferenceType Set entrySet ReturnStatement ClassCreator ReferenceType AbstractSet MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement MethodInvocation entryIterator MethodDeclaration Modifier public BasicType int size ReturnStatement MemberReference size MethodDeclaration Modifier public ReferenceType Object toArray FormalParameter ReferenceType Object arr ReturnStatement MethodInvocation GenericMap MemberReference arr MethodInvocation size MethodInvocation iterator toArray	0
MethodDeclaration Modifier private adjustRegisters StatementExpression Assignment MemberReference beg Literal 0 = StatementExpression Assignment MemberReference end BinaryOperation - MemberReference pos MemberReference lastPos = StatementExpression Assignment MemberReference regs Literal null =	0
MethodDeclaration Modifier public ReferenceType IRubyObject getValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name FormalParameter BasicType int index LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MemberReference ArraySelector MemberReference index constants ReturnStatement TernaryExpression MethodInvocation MemberReference context MemberReference value MemberReference index MemberReference value MethodInvocation MemberReference context MemberReference name MemberReference index	0
MethodDeclaration Modifier public join FormalParameter BasicType long timeoutMillis InterruptedException LocalVariableDeclaration ReferenceType Thread VariableDeclarator thread MethodInvocation nativeThread get IfStatement BinaryOperation != MemberReference thread Literal null StatementExpression MethodInvocation thread MemberReference timeoutMillis join	1
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType String getDefinition FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Node node FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock TryStatement StatementExpression MethodInvocation context Literal true ReturnStatement MethodInvocation node MemberReference runtime MemberReference context MemberReference self MemberReference aBlock StatementExpression MethodInvocation context Literal false	1
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType double i FormalParameter ReferenceType String o ReturnStatement Literal "double,string"	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation != MemberReference prevAdded Literal null	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "&" ElementValuePair frame Literal true ReferenceType IRubyObject not_implemented1 FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType String VariableDeclarator error BinaryOperation + BinaryOperation + Literal "Process::Status#" MethodInvocation MethodInvocation getCurrentContext MethodInvocation getFrameName getRuntime Literal " not implemented" ThrowStatement MethodInvocation MethodInvocation MemberReference error newNotImplementedError getRuntime	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference callAdapter methodName	0
MethodDeclaration Modifier static ReferenceType RubyComplex newComplexRaw FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject x ReturnStatement ClassCreator ReferenceType RubyComplex MemberReference runtime MethodInvocation runtime getComplex MemberReference x MethodInvocation RubyFixnum MemberReference runtime zero	0
MethodDeclaration Modifier final ReferenceType Callback getCallback FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType CallbackInfo cbInfo FormalParameter ReferenceType Block proc ReturnStatement MethodInvocation MemberReference runtime MemberReference cbInfo MemberReference proc newCallback	0
MethodDeclaration Modifier public ReferenceType Object yyparse FormalParameter ReferenceType RubyYaccLexer yyLex FormalParameter ReferenceType Object ayydebug java.io.IOException yyException StatementExpression Assignment This MemberReference yydebug Cast ReferenceType jay ReferenceType yydebug ReferenceType yyDebug MemberReference ayydebug = ReturnStatement MethodInvocation MemberReference yyLex yyparse	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType ARGUMENTNODE	0
MethodDeclaration Modifier public BasicType boolean isSpecificArity ReturnStatement MemberReference specificArity	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "open" ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair meta Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject path FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyString VariableDeclarator pathString TernaryExpression BinaryOperation instanceof MemberReference path ReferenceType RubyString Cast ReferenceType RubyString MemberReference path MethodInvocation path MethodInvocation convertToString MemberReference context Literal "to_path" callMethod ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference pathString MemberReference block open	0
MethodDeclaration Modifier private ReferenceType ISourcePosition getPosition2 FormalParameter ReferenceType ISourcePositionHolder pos ReturnStatement TernaryExpression BinaryOperation == MemberReference pos Literal null MethodInvocation lexer getPosition MethodInvocation pos getPosition	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 IfStatement BinaryOperation == MemberReference compiledMethod Literal null StatementExpression MethodInvocation initializeMethod ReturnStatement MethodInvocation compiledMethod MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 call	1
MethodDeclaration Modifier public Annotation Override endBody StatementExpression MethodInvocation method areturn LocalVariableDeclaration ReferenceType Label VariableDeclarator end ClassCreator ReferenceType Label StatementExpression MethodInvocation method MemberReference end label StatementExpression MethodInvocation method end	0
MethodDeclaration FormalParameter ReferenceType RubyClass ioClass StatementExpression Assignment This MemberReference ioClass MemberReference ioClass =	0
MethodDeclaration Modifier public ReferenceType Object case22_line382 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation || MethodInvocation support isInDef MethodInvocation support isInSingle BlockStatement StatementExpression MethodInvocation warnings MemberReference ID END_IN_METHOD MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Literal "END in method; use at_exit" warn StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType PostExeNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "unbind" ElementValuePair frame Literal true ReferenceType FormalParameter ReferenceType Block unusedBlock LocalVariableDeclaration ReferenceType VariableDeclarator unboundMethod MethodInvocation MemberReference implementationModule MemberReference methodName MemberReference originModule MemberReference originName MemberReference method StatementExpression MethodInvocation unboundMethod This infectBy ReturnStatement MemberReference unboundMethod	0
MethodDeclaration Modifier public ReferenceType Object case105_line682 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation lexer MemberReference LexState EXPR_END setState StatementExpression Assignment MemberReference yyVal Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Type type ThrowStatement MethodInvocation context MethodInvocation MemberReference RubyLocalJumpError.Reason NOREASON MethodInvocation context MethodInvocation getNil getRuntime Literal "yield called out of block" newLocalJumpError getRuntime	0
MethodDeclaration Modifier private static BasicType boolean isDoubleStarAndSlash FormalParameter BasicType byte bytes FormalParameter BasicType int pos IfStatement BinaryOperation <= BinaryOperation - MemberReference bytes length MemberReference pos Literal 2 BlockStatement ReturnStatement Literal false ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference ArraySelector MemberReference pos bytes Literal '*' BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference pos Literal 1 bytes Literal '*' BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference pos Literal 2 bytes Literal '/'	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject setgid FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference arg gid_set	0
MethodDeclaration Modifier public final get FormalParameter BasicType long offset FormalParameter BasicType long dst FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation IO BinaryOperation + MemberReference address MemberReference offset MemberReference dst MemberReference off MemberReference len getLongArray	0
MethodDeclaration Modifier public Annotation Override ReferenceType Node setIterNode FormalParameter ReferenceType Node ReturnStatement ClassCreator ReferenceType FCallThreeArgBlockNode MethodInvocation getPosition MethodInvocation getName Cast ReferenceType ArrayNode MethodInvocation getArgsNode Cast ReferenceType IterNode MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "inspect" Annotation Override ReferenceType IRubyObject inspect IfStatement BinaryOperation == MemberReference str Literal null ReturnStatement MethodInvocation anyToString LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator result MethodInvocation runtime newString StatementExpression MethodInvocation result MethodInvocation Cast BasicType byte Literal '<' cat Cast BasicType byte Literal '#' cat StatementExpression MethodInvocation result MethodInvocation MethodInvocation getRealClass MethodInvocation to_s getMetaClass append LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator names ArrayCreator ReferenceType NameEntry TernaryExpression BinaryOperation == MemberReference regs Literal null Literal 1 MemberReference regs numRegs IfStatement BinaryOperation > MethodInvocation pattern numberOfNames Literal 0 BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType NameEntry VariableDeclarator i MethodInvocation pattern namedBackrefIterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator e MethodInvocation i next ForStatement EnhancedForControl VariableDeclaration BasicType int VariableDeclarator num MethodInvocation e getBackRefs StatementExpression Assignment MemberReference ArraySelector MemberReference num names MemberReference e = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference names length MemberReference ++ i BlockStatement StatementExpression MethodInvocation result Cast BasicType byte Literal ' ' cat IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement LocalVariableDeclaration ReferenceType NameEntry VariableDeclarator e MemberReference ArraySelector MemberReference i names IfStatement BinaryOperation != MemberReference e Literal null BlockStatement StatementExpression MethodInvocation result MemberReference e name MemberReference e nameP BinaryOperation - MemberReference e nameEnd MemberReference e nameP cat BlockStatement StatementExpression MethodInvocation result Cast BasicType byte BinaryOperation + Literal '0' MemberReference i cat StatementExpression MethodInvocation result Cast BasicType byte Literal ':' cat LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator v MethodInvocation RubyRegexp MemberReference i This nth_match IfStatement MethodInvocation v isNil BlockStatement StatementExpression MethodInvocation result Literal MethodInvocation getBytes cat BlockStatement StatementExpression MethodInvocation result Cast ReferenceType RubyString MemberReference str append ReturnStatement MethodInvocation result Cast BasicType byte Literal '>' cat	1
MethodDeclaration Modifier public final Annotation JRubyMethod ElementValuePair name Literal "autorelease=" ElementValuePair required Literal 1 ReferenceType IRubyObject autorelease FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject release IfStatement BinaryOperation && BinaryOperation != MemberReference autorelease MethodInvocation release isTrue BinaryOperation instanceof MethodInvocation getMemoryIO ReferenceType AllocatedDirectMemoryIO BlockStatement StatementExpression Cast ReferenceType AllocatedDirectMemoryIO MethodInvocation getMemoryIO ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "pop" Annotation SuppressWarnings Literal "unchecked" ReferenceType IRubyObject s_pop FormalParameter ReferenceType IRubyObject recv Exception LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType ConsoleHolder VariableDeclarator holder MethodInvocation MemberReference runtime getHolder IfStatement BinaryOperation == MethodInvocation holder.history size Literal 0 ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration ReferenceType RubyString VariableDeclarator output MethodInvocation runtime Cast ReferenceType String MethodInvocation holder.history pop newString StatementExpression MethodInvocation output MethodInvocation runtime getCurrentContext taint ReturnStatement MemberReference output	1
MethodDeclaration Modifier public ReferenceType Node getBodyNode ReturnStatement MemberReference bodyNode	0
MethodDeclaration Modifier public ReferenceType RubyClass defineClass FormalParameter ReferenceType String name FormalParameter ReferenceType RubyClass superClass FormalParameter ReferenceType ObjectAllocator allocator ReturnStatement MethodInvocation MemberReference name MemberReference superClass MemberReference allocator MemberReference objectClass defineClassUnder	0
MethodDeclaration Modifier public ReferenceType Node getValueNode ReturnStatement MemberReference valueNode	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject slice_bang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args slice_bang SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args slice_bang SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation context getRuntime MemberReference args length Literal 1 Literal 2 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType Node argsNode StatementExpression Assignment This MemberReference argsNode MemberReference argsNode =	0
MethodDeclaration Modifier public static ReferenceType IRubyObject f_mul FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x FormalParameter ReferenceType IRubyObject y LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference y ReferenceType RubyFixnum BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator iy Cast ReferenceType RubyFixnum MemberReference y IfStatement BinaryOperation == MemberReference iy Literal 0 BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference x ReferenceType RubyFixnum BinaryOperation instanceof MemberReference x ReferenceType RubyBignum ReturnStatement MethodInvocation RubyFixnum MemberReference runtime zero IfStatement BinaryOperation == MemberReference iy Literal 1 BlockStatement ReturnStatement MemberReference x IfStatement BinaryOperation instanceof MemberReference x ReferenceType RubyFixnum BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator ix Cast ReferenceType RubyFixnum MemberReference x IfStatement BinaryOperation == MemberReference ix Literal 0 BlockStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference y ReferenceType RubyFixnum BinaryOperation instanceof MemberReference y ReferenceType RubyBignum ReturnStatement MethodInvocation RubyFixnum MemberReference runtime zero IfStatement BinaryOperation == MemberReference ix Literal 1 BlockStatement ReturnStatement MemberReference y ReturnStatement MethodInvocation x MemberReference context Literal "*" MemberReference y callMethod	1
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject copy_data FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyArray FormalParameter ReferenceType IRubyObject javaArray FormalParameter ReferenceType IRubyObject fillValue LocalVariableDeclaration ReferenceType JavaArray VariableDeclarator javaArrayJavaObj Cast ReferenceType JavaArray MethodInvocation javaArray dataGetStruct LocalVariableDeclaration ReferenceType Object VariableDeclarator fillJavaObject Literal null LocalVariableDeclaration BasicType int VariableDeclarator javaLength Cast BasicType int MethodInvocation javaArrayJavaObj MethodInvocation getLongValue length LocalVariableDeclaration ReferenceType Class VariableDeclarator targetType MethodInvocation javaArrayJavaObj getComponentType IfStatement MethodInvocation ! fillValue isNil BlockStatement StatementExpression Assignment MemberReference fillJavaObject MethodInvocation fillValue MemberReference targetType toJava = LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator array Literal null LocalVariableDeclaration BasicType int VariableDeclarator rubyLength IfStatement BinaryOperation instanceof MemberReference rubyArray ReferenceType RubyArray BlockStatement StatementExpression Assignment MemberReference array Cast ReferenceType RubyArray MemberReference rubyArray = StatementExpression Assignment MemberReference rubyLength Cast ReferenceType RubyArray MemberReference rubyArray = BlockStatement StatementExpression Assignment MemberReference rubyLength Literal 0 = StatementExpression Assignment MemberReference fillJavaObject MethodInvocation rubyArray MemberReference targetType toJava = LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement ForControl BinaryOperation && BinaryOperation < MemberReference i MemberReference rubyLength BinaryOperation < MemberReference i MemberReference javaLength MemberReference ++ i BlockStatement StatementExpression MethodInvocation javaArrayJavaObj MemberReference i MethodInvocation array MethodInvocation MemberReference targetType toJava MemberReference i entry setWithExceptionHandling IfStatement BinaryOperation && BinaryOperation < MemberReference i MemberReference javaLength BinaryOperation != MemberReference fillJavaObject Literal null BlockStatement StatementExpression MethodInvocation javaArrayJavaObj MemberReference i MemberReference javaLength MemberReference fillJavaObject fillWithExceptionHandling ReturnStatement MemberReference javaArray	1
MethodDeclaration Modifier public static ReferenceType RubyRegexp newDRegexp FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyString pattern FormalParameter BasicType int options TryStatement ReturnStatement ClassCreator ReferenceType RubyRegexp MemberReference runtime MethodInvocation pattern getByteList MemberReference options CatchClause CatchClauseParameter RaiseException re ThrowStatement MethodInvocation runtime MethodInvocation re getMessage	1
MethodDeclaration Modifier private static assignAliases FormalParameter ReferenceType MethodInstaller installer FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType AssignedName assignedNames LocalVariableDeclaration ReferenceType String VariableDeclarator name MemberReference installer name LocalVariableDeclaration ReferenceType String VariableDeclarator rubyCasedName MethodInvocation JavaUtil MemberReference name getRubyCasedName StatementExpression MethodInvocation MemberReference rubyCasedName MemberReference assignedNames MemberReference installer addUnassignedAlias LocalVariableDeclaration ReferenceType String VariableDeclarator javaPropertyName MethodInvocation JavaUtil MemberReference name getJavaPropertyName LocalVariableDeclaration ReferenceType String VariableDeclarator rubyPropertyName Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Method VariableDeclarator method MemberReference installer methods BlockStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator argTypes MethodInvocation method getParameterTypes LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator resultType MethodInvocation method getReturnType LocalVariableDeclaration BasicType int VariableDeclarator argCount MemberReference argTypes length IfStatement BinaryOperation != MemberReference javaPropertyName Literal null BlockStatement IfStatement MethodInvocation rubyCasedName Literal "get_" startsWith BlockStatement StatementExpression Assignment MemberReference rubyPropertyName MethodInvocation rubyCasedName Literal 4 substring = IfStatement BinaryOperation || BinaryOperation == MemberReference argCount Literal 0 BinaryOperation && BinaryOperation == MemberReference argCount Literal 1 BinaryOperation == MemberReference ArraySelector Literal 0 argTypes ClassReference BasicType int BlockStatement StatementExpression MethodInvocation MemberReference javaPropertyName MemberReference assignedNames MemberReference installer addUnassignedAlias StatementExpression MethodInvocation MemberReference rubyPropertyName MemberReference assignedNames MemberReference installer addUnassignedAlias IfStatement MethodInvocation rubyCasedName Literal "set_" startsWith BlockStatement StatementExpression Assignment MemberReference rubyPropertyName MethodInvocation rubyCasedName Literal 4 substring = IfStatement BinaryOperation && BinaryOperation == MemberReference argCount Literal 1 BinaryOperation == MemberReference resultType VoidClassReference BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference javaPropertyName Literal '=' MemberReference assignedNames MemberReference installer addUnassignedAlias StatementExpression MethodInvocation BinaryOperation + MemberReference rubyPropertyName Literal '=' MemberReference assignedNames MemberReference installer addUnassignedAlias IfStatement MethodInvocation rubyCasedName Literal "is_" startsWith BlockStatement StatementExpression Assignment MemberReference rubyPropertyName MethodInvocation rubyCasedName Literal 3 substring = IfStatement BinaryOperation == MemberReference resultType ClassReference BasicType boolean BlockStatement StatementExpression MethodInvocation MemberReference javaPropertyName MemberReference assignedNames MemberReference installer addUnassignedAlias StatementExpression MethodInvocation MemberReference rubyPropertyName MemberReference assignedNames MemberReference installer addUnassignedAlias IfStatement BinaryOperation == MemberReference resultType ClassReference BasicType boolean BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference rubyCasedName Literal '?' MemberReference assignedNames MemberReference installer addUnassignedAlias IfStatement BinaryOperation != MemberReference rubyPropertyName Literal null BlockStatement StatementExpression MethodInvocation BinaryOperation + MemberReference rubyPropertyName Literal '?' MemberReference assignedNames MemberReference installer addUnassignedAlias	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal Literal "day" ReferenceType RubyInteger mday ReturnStatement MethodInvocation MethodInvocation MethodInvocation dt getDayOfMonth newFixnum getRuntime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "chars" ElementValuePair frame Literal true ReferenceType IRubyObject chars19 FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block each_char MethodInvocation MethodInvocation context getRuntime This Literal "chars" enumeratorize	0
MethodDeclaration Modifier public BasicType boolean isFailed ReturnStatement MemberReference failed	0
MethodDeclaration Modifier public static BasicType boolean isValidInstanceVariableName FormalParameter ReferenceType String id LocalVariableDeclaration BasicType int VariableDeclarator len IfStatement BinaryOperation && BinaryOperation > Assignment MemberReference len MethodInvocation id length = Literal 0 BinaryOperation == Literal '@' MethodInvocation id Literal 0 charAt BlockStatement IfStatement BinaryOperation > MemberReference len Literal 1 BlockStatement IfStatement MethodInvocation MethodInvocation id Literal 1 charAt isInitialCharacter BlockStatement ReturnStatement MethodInvocation MemberReference id Literal 2 MemberReference len isNameString ReturnStatement Literal false ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier private static checkUnicodeRange FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int code FormalParameter ReferenceType ByteList str FormalParameter ReferenceType ErrorMode mode IfStatement BinaryOperation || BinaryOperation && BinaryOperation <= Literal 0xd800 MemberReference code BinaryOperation <= MemberReference code Literal 0xdfff BinaryOperation < Literal 0x10ffff MemberReference code BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference str Literal "invalid Unicode range" MemberReference mode raisePreprocessError	1
MethodDeclaration Modifier public BasicType long getInteger ReturnStatement MemberReference n	0
MethodDeclaration Modifier private removeEntry FormalParameter ReferenceType Entry ent LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation MemberReference ent index LocalVariableDeclaration ReferenceType Entry VariableDeclarator entry MemberReference ArraySelector MemberReference idx table IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement IfStatement BinaryOperation == MemberReference entry MemberReference ent BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference idx table MemberReference entry next = StatementExpression Assignment MemberReference size Literal 1 -= ReturnStatement BlockStatement LocalVariableDeclaration ReferenceType Entry VariableDeclarator ahead MemberReference entry next WhileStatement BinaryOperation != MemberReference ahead Literal null BlockStatement IfStatement BinaryOperation == MemberReference ahead MemberReference ent BlockStatement StatementExpression Assignment MemberReference entry next MemberReference ahead next = StatementExpression Assignment MemberReference size Literal 1 -= ReturnStatement StatementExpression Assignment MemberReference entry MemberReference ahead = StatementExpression Assignment MemberReference ahead MemberReference ahead next = StatementExpression MethodInvocation MemberReference ent value	0
MethodDeclaration Modifier public static ReferenceType Object FormalParameter ReferenceType IRubyObject value LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation value getRuntime ReturnStatement MethodInvocation value ClassReference ReferenceType Object toJava	1
MethodDeclaration Modifier public updateFrameForEval FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String fileName FormalParameter BasicType int line StatementExpression Assignment This MemberReference self MemberReference self = StatementExpression Assignment This MemberReference name Literal null = StatementExpression Assignment This MemberReference fileName MemberReference fileName = StatementExpression Assignment This MemberReference line MemberReference line = StatementExpression Assignment This MemberReference visibility MemberReference Visibility PRIVATE = StatementExpression Assignment This MemberReference Literal false =	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement MethodInvocation flater finished	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject euid FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation MethodInvocation context getRuntime euid	0
MethodDeclaration Modifier public compileXStr FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType XStrNode VariableDeclarator xstrNode Cast ReferenceType XStrNode MemberReference node LocalVariableDeclaration ReferenceType ArgumentsCallback VariableDeclarator argsCallback ClassCreator ReferenceType ArgumentsCallback MethodDeclaration Modifier public BasicType int getArity ReturnStatement Literal 1 MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context MethodInvocation xstrNode getValue createNewString StatementExpression MethodInvocation context MethodInvocation Literal "`" Literal null MemberReference argsCallback MemberReference CallType FUNCTIONAL Literal null Literal false invokeDynamic getInvocationCompiler IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier private static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject clazz FormalParameter ReferenceType IRubyObject real FormalParameter ReferenceType IRubyObject image IfStatement MemberReference Numeric CANON BlockStatement IfStatement BinaryOperation && BinaryOperation && MethodInvocation MemberReference context MemberReference image f_zero_p BinaryOperation || MemberReference ! CL_CANON MethodInvocation MemberReference image k_exact_p MemberReference canonicalization ReturnStatement MemberReference real IfStatement BinaryOperation && MethodInvocation MethodInvocation isTrue MemberReference context MemberReference real f_real_p MethodInvocation MethodInvocation isTrue MemberReference context MemberReference image f_real_p BlockStatement ReturnStatement ClassCreator ReferenceType RubyComplex MethodInvocation context getRuntime MemberReference clazz MemberReference real MemberReference image IfStatement MethodInvocation MethodInvocation isTrue MemberReference context MemberReference real f_real_p BlockStatement LocalVariableDeclaration ReferenceType RubyComplex VariableDeclarator complex Cast ReferenceType RubyComplex MemberReference image ReturnStatement ClassCreator ReferenceType RubyComplex MethodInvocation context getRuntime MemberReference clazz MethodInvocation MemberReference context MemberReference real MemberReference complex image f_sub MethodInvocation MemberReference context MethodInvocation RubyFixnum MethodInvocation context getRuntime zero MemberReference complex real f_add IfStatement MethodInvocation MethodInvocation isTrue MemberReference context MemberReference image f_real_p BlockStatement LocalVariableDeclaration ReferenceType RubyComplex VariableDeclarator complex Cast ReferenceType RubyComplex MemberReference real ReturnStatement ClassCreator ReferenceType RubyComplex MethodInvocation context getRuntime MemberReference clazz MemberReference complex real MethodInvocation MemberReference context MemberReference complex image MemberReference image f_add BlockStatement LocalVariableDeclaration ReferenceType RubyComplex VariableDeclarator complex1 Cast ReferenceType RubyComplex MemberReference real LocalVariableDeclaration ReferenceType RubyComplex VariableDeclarator complex2 Cast ReferenceType RubyComplex MemberReference image ReturnStatement ClassCreator ReferenceType RubyComplex MethodInvocation context getRuntime MemberReference clazz MethodInvocation MemberReference context MemberReference complex1 real MemberReference complex2 image f_sub MethodInvocation MemberReference context MemberReference complex1 image MemberReference complex2 real f_add	1
MethodDeclaration Modifier public ReferenceType Object case351_line1309 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType IterNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals MethodInvocation support getCurrentScope Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression MethodInvocation support popCurrentScope ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public defineModule FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType staticScope FormalParameter Modifier final ReferenceType CompilerCallback pathCallback FormalParameter Modifier final ReferenceType CompilerCallback bodyCallback FormalParameter Modifier final ReferenceType ASTInspector inspector LocalVariableDeclaration ReferenceType String VariableDeclarator mangledName MethodInvocation JavaNameMangler MemberReference name mangleStringForCleanJavaIdentifier LocalVariableDeclaration ReferenceType String VariableDeclarator moduleMethodName BinaryOperation + BinaryOperation + BinaryOperation + Literal MethodInvocation script Literal "$RUBY$" MemberReference mangledName LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator classBody ClassCreator ReferenceType ClassBodyCompiler MemberReference script MemberReference moduleMethodName MemberReference inspector MemberReference staticScope LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator bodyPrep ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation classBody loadThreadContext StatementExpression MethodInvocation pathCallback MemberReference classBody call StatementExpression MethodInvocation classBody Literal MethodInvocation ClassReference ReferenceType RubyModule MethodInvocation ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject params sig invokeUtilityMethod StatementExpression MethodInvocation classBody.method MemberReference name ldc StatementExpression MethodInvocation classBody.method MethodInvocation ClassReference ReferenceType RubyModule p Literal "defineOrGetModuleUnder" MethodInvocation ClassReference ReferenceType RubyModule MethodInvocation ClassReference ReferenceType String params sig invokevirtual StatementExpression MethodInvocation classBody.method dup StatementExpression MethodInvocation classBody.method MemberReference StandardASMCompiler SELF_INDEX astore StatementExpression MethodInvocation classBody loadThreadContext StatementExpression MethodInvocation classBody.method swap StatementExpression MethodInvocation script MethodInvocation MemberReference classBody MemberReference staticScope getCacheCompiler IfStatement BinaryOperation || MethodInvocation inspector hasClosure MethodInvocation inspector hasScopeAwareMethods BlockStatement StatementExpression MethodInvocation classBody Literal MethodInvocation MemberReference Void TYPE MethodInvocation ClassReference ReferenceType RubyModule ClassReference ReferenceType params sig invokeThreadContext BlockStatement StatementExpression MethodInvocation classBody Literal MethodInvocation MemberReference Void TYPE MethodInvocation ClassReference ReferenceType RubyModule ClassReference ReferenceType params sig invokeThreadContext LocalVariableDeclaration ReferenceType Label VariableDeclarator start ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator end ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator after ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator noException ClassCreator ReferenceType Label StatementExpression MethodInvocation classBody.method MemberReference start MemberReference end MemberReference after Literal null trycatch StatementExpression MethodInvocation classBody MemberReference bodyPrep MemberReference staticScope beginMethod StatementExpression MethodInvocation classBody.method MemberReference start label StatementExpression MethodInvocation bodyCallback MemberReference classBody call StatementExpression MethodInvocation classBody.method MemberReference end label StatementExpression MethodInvocation classBody.method MemberReference noException go_to StatementExpression MethodInvocation classBody.method MemberReference after label StatementExpression MethodInvocation classBody loadThreadContext StatementExpression MethodInvocation classBody Literal "postCompiledClass" MethodInvocation MemberReference Void TYPE MethodInvocation params sig invokeThreadContext StatementExpression MethodInvocation classBody.method athrow StatementExpression MethodInvocation classBody.method MemberReference noException label StatementExpression MethodInvocation classBody loadThreadContext StatementExpression MethodInvocation classBody Literal "postCompiledClass" MethodInvocation MemberReference Void TYPE MethodInvocation params sig invokeThreadContext StatementExpression MethodInvocation classBody endBody StatementExpression MethodInvocation method MemberReference StandardASMCompiler THIS aload StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation loadSelf StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType IRubyObject p Literal "NULL_ARRAY" MethodInvocation ClassReference ReferenceType IRubyObject ci getstatic StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType Block p Literal "NULL_BLOCK" MethodInvocation ClassReference ReferenceType Block ci getstatic StatementExpression MethodInvocation method MethodInvocation script getClassname MemberReference moduleMethodName MethodInvocation StandardASMCompiler MethodInvocation script getClassname Literal 4 getStaticMethodSignature invokestatic	0
MethodDeclaration Modifier public ReferenceType Arity getArity ReturnStatement MemberReference arity	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject sub FormalParameter BasicType int pos IfStatement BinaryOperation instanceof MemberReference sub ReferenceType RubyRegexp BlockStatement LocalVariableDeclaration ReferenceType RubyRegexp VariableDeclarator regSub Cast ReferenceType RubyRegexp MemberReference sub StatementExpression Assignment MemberReference pos MethodInvocation regSub This MemberReference pos Literal false adjustStartPos = StatementExpression Assignment MemberReference pos MethodInvocation regSub MemberReference context This MemberReference pos Literal false search = IfStatement BinaryOperation instanceof MemberReference sub ReferenceType RubyFixnum BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c_int MethodInvocation RubyNumeric Cast ReferenceType RubyFixnum MemberReference sub fix2int IfStatement BinaryOperation || BinaryOperation < MemberReference c_int Literal 0x00 BinaryOperation > MemberReference c_int Literal 0xFF BlockStatement ReturnStatement MethodInvocation runtime getNil LocalVariableDeclaration BasicType byte VariableDeclarator c Cast BasicType byte MemberReference c_int LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference value begin MemberReference value realSize StatementExpression Assignment MemberReference pos MemberReference value begin += ForStatement ForControl BinaryOperation < MemberReference pos MemberReference end MemberReference ++ pos BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference pos bytes MemberReference c ReturnStatement MethodInvocation RubyFixnum MemberReference runtime BinaryOperation - MemberReference pos MemberReference value begin newFixnum ReturnStatement MethodInvocation runtime getNil IfStatement BinaryOperation instanceof MemberReference sub ReferenceType RubyString BlockStatement StatementExpression Assignment MemberReference pos MethodInvocation Cast ReferenceType RubyString MemberReference sub MemberReference pos strIndex = BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation sub checkStringType IfStatement MethodInvocation tmp isNil ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "type mismatch: " MethodInvocation sub MethodInvocation getName getMetaClass Literal " given" newTypeError StatementExpression Assignment MemberReference pos MethodInvocation Cast ReferenceType RubyString MemberReference tmp MemberReference pos strIndex = ReturnStatement TernaryExpression BinaryOperation == MemberReference pos Literal - 1 MethodInvocation runtime getNil MethodInvocation RubyFixnum MemberReference runtime MemberReference pos newFixnum	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "-" ElementValuePair required Literal 1 ReferenceType IRubyObject op_minus FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other SwitchStatement MethodInvocation other MemberReference index getMetaClass SwitchStatementCase MemberReference ClassIndex FIXNUM MemberReference ClassIndex BIGNUM MemberReference ClassIndex FLOAT ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime BinaryOperation - MemberReference value Cast ReferenceType RubyNumeric MemberReference other newFloat SwitchStatementCase ReturnStatement MethodInvocation MemberReference context Literal "-" MemberReference other coerceBin	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "close" ElementValuePair frame Literal true ReferenceType IRubyObject close StatementExpression MethodInvocation checkInitialized StatementExpression MethodInvocation checkOpen StatementExpression Assignment MemberReference closedRead Literal true = StatementExpression Assignment MemberReference closedWrite Literal true = ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference ++ methodIndex	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_r" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject to_r FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration BasicType long VariableDeclarator exp ArrayCreator BasicType long Literal 1 LocalVariableDeclaration BasicType double VariableDeclarator f MethodInvocation MemberReference value MemberReference exp frexp StatementExpression Assignment MemberReference f MethodInvocation MemberReference f MemberReference DBL_MANT_DIG ldexp = LocalVariableDeclaration BasicType long VariableDeclarator n BinaryOperation - MemberReference ArraySelector Literal 0 exp MemberReference DBL_MANT_DIG LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator rf MethodInvocation RubyNumeric MemberReference runtime MemberReference f dbl2num LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator rn MethodInvocation RubyFixnum MemberReference runtime MemberReference n newFixnum ReturnStatement MethodInvocation MemberReference context MemberReference rf MethodInvocation MemberReference context MethodInvocation RubyFixnum MemberReference runtime MemberReference FLT_RADIX newFixnum MemberReference rn f_expt f_mul	1
MethodDeclaration Modifier public ReferenceType DynamicMethod dup ReturnStatement ClassCreator ReferenceType AliasMethod MemberReference implementationClass MemberReference oldMethod MemberReference oldName	0
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 IfStatement BinaryOperation && BinaryOperation instanceof MemberReference o1 ReferenceType RubyFixnum BinaryOperation instanceof MemberReference o2 ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation Cast ReferenceType RubyFixnum MemberReference o1 Cast ReferenceType RubyFixnum MemberReference o2 IfStatement BinaryOperation && BinaryOperation instanceof MemberReference o1 ReferenceType RubyString BinaryOperation instanceof MemberReference o2 ReferenceType RubyString BlockStatement ReturnStatement Cast ReferenceType RubyString MemberReference o1 ReturnStatement MethodInvocation MemberReference context Cast ReferenceType IRubyObject MemberReference o1 Cast ReferenceType IRubyObject MemberReference o2	0
MethodDeclaration Modifier public synchronized update StatementExpression Assignment MemberReference token ClassCreator ReferenceType Object =	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference binding MemberReference type yieldSpecificInternal	0
MethodDeclaration Modifier public ReferenceType Object case370_line1395 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject reject_bang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block LocalVariableDeclaration BasicType int VariableDeclarator n MemberReference size StatementExpression MethodInvocation MemberReference context MemberReference block delete_if IfStatement BinaryOperation == MemberReference n MemberReference size ReturnStatement MethodInvocation MethodInvocation getNil getRuntime ReturnStatement This	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject taint FormalParameter ReferenceType ThreadContext context ReturnStatement This	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "round" ReferenceType IRubyObject round ReturnStatement MethodInvocation MethodInvocation round	0
MethodDeclaration Modifier public static ReferenceType IRubyObject f_abs FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation x MemberReference context Literal "abs" callMethod	1
MethodDeclaration Modifier private static printException FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Exception exception IfStatement BinaryOperation instanceof MemberReference exception ReferenceType RaiseException BlockStatement LocalVariableDeclaration ReferenceType JumpException VariableDeclarator je Cast ReferenceType JumpException MemberReference exception IfStatement BinaryOperation instanceof MemberReference je ReferenceType RaiseException BlockStatement StatementExpression MethodInvocation runtime Cast ReferenceType RaiseException MemberReference je printError IfStatement BinaryOperation instanceof MemberReference je ReferenceType JumpException ReferenceType ThrowJump BlockStatement StatementExpression MethodInvocation runtime MethodInvocation Literal "internal error: throw jump caught" println getErrorStream IfStatement BinaryOperation instanceof MemberReference je ReferenceType JumpException ReferenceType BlockStatement StatementExpression MethodInvocation runtime MethodInvocation Literal "break without block." println getErrorStream IfStatement BinaryOperation instanceof MemberReference je ReferenceType JumpException ReferenceType ReturnJump BlockStatement StatementExpression MethodInvocation runtime MethodInvocation Literal "return without block." println getErrorStream	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "closed?" ReferenceType IRubyObject closed_p ReturnStatement TernaryExpression MemberReference closed MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier protected write FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType ByteList byteList StatementExpression MethodInvocation MemberReference context Literal "write" MethodInvocation RubyString MethodInvocation context getRuntime MemberReference byteList newStringShared callMethod	0
MethodDeclaration Modifier public init StatementExpression Assignment MemberReference _setSize MethodInvocation _prob getDFVarsCount = StatementExpression Assignment MemberReference _in ClassCreator ReferenceType BitSet MemberReference _setSize =	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 call	0
MethodDeclaration Modifier public static Annotation Deprecated BasicType short convertRubyToJavaShort FormalParameter ReferenceType IRubyObject rubyObject ReturnStatement Cast ReferenceType Short MethodInvocation MemberReference rubyObject ClassReference BasicType short convertRubyToJava	1
MethodDeclaration Modifier public final setFilename FormalParameter ReferenceType String filename StatementExpression Assignment This MemberReference filename MemberReference filename =	0
MethodDeclaration Modifier public ReferenceType Object case367_line1383 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ArgsNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = StatementExpression Cast ReferenceType ISourcePositionHolder MemberReference yyVal ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "superclass" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject superclass FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator superClazz MemberReference superClass IfStatement BinaryOperation == MemberReference superClazz Literal null ThrowStatement MethodInvocation runtime Literal "uninitialized class" newTypeError IfStatement MethodInvocation isSingleton StatementExpression Assignment MemberReference superClazz MemberReference metaClass = WhileStatement BinaryOperation && BinaryOperation != MemberReference superClazz Literal null MethodInvocation superClazz isIncluded StatementExpression Assignment MemberReference superClazz MemberReference superClazz superClass = ReturnStatement TernaryExpression BinaryOperation != MemberReference superClazz Literal null MemberReference superClazz MethodInvocation runtime getNil	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "to_enum" Literal "enum_for" ElementValuePair rest Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject to_enum FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime SwitchStatement MemberReference args length SwitchStatementCase Literal 0 ReturnStatement MethodInvocation MemberReference runtime MemberReference recv Literal enumeratorize SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference runtime MemberReference recv MemberReference ArraySelector Literal 0 MethodInvocation asJavaString args enumeratorize SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference runtime MemberReference recv MemberReference ArraySelector Literal 0 MethodInvocation asJavaString args MemberReference ArraySelector Literal 1 args enumeratorize SwitchStatementCase LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator enumArgs ArrayCreator ReferenceType IRubyObject BinaryOperation - MemberReference args length Literal 1 StatementExpression MethodInvocation System MemberReference args Literal 1 MemberReference enumArgs Literal 0 MemberReference enumArgs length arraycopy ReturnStatement MethodInvocation MemberReference runtime MemberReference recv MemberReference ArraySelector Literal 0 MethodInvocation asJavaString args MemberReference enumArgs enumeratorize	1
MethodDeclaration Modifier public static ReferenceType IRubyObject gsub FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str Cast ReferenceType RubyString MethodInvocation MethodInvocation dup MemberReference context MethodInvocation context getRuntime getLastlineString IfStatement MethodInvocation ! str MethodInvocation isNil MemberReference context MemberReference args MemberReference block gsub_bang BlockStatement StatementExpression MethodInvocation context MethodInvocation MemberReference str setLastLine getCurrentScope ReturnStatement MemberReference str	1
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value1 FormalParameter ReferenceType Block block StatementExpression MethodInvocation pre MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference value1 MemberReference block Literal false assign Literal 0 get StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block Literal 1	0
MethodDeclaration Modifier public static ReferenceType String getClassName FormalParameter ReferenceType Class klass ReturnStatement MethodInvocation klass getName	0
MethodDeclaration Modifier public TypeParameter T ReferenceType T toArray FormalParameter ReferenceType T arg0 ReturnStatement MethodInvocation map MethodInvocation MemberReference arg0 toArray keySet	0
MethodDeclaration Modifier private final static BasicType int skipSignBits FormalParameter BasicType byte bytes FormalParameter BasicType int base LocalVariableDeclaration BasicType int VariableDeclarator skip Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator length MemberReference bytes length LocalVariableDeclaration BasicType byte VariableDeclarator b SwitchStatement MemberReference base SwitchStatementCase Literal 2 ForStatement ForControl BinaryOperation && BinaryOperation < MemberReference skip MemberReference length BinaryOperation == MemberReference ArraySelector MemberReference skip bytes Literal '1' MemberReference ++ skip Statement BreakStatement SwitchStatementCase Literal 8 IfStatement BinaryOperation && BinaryOperation > MemberReference length Literal 0 BinaryOperation == MemberReference ArraySelector Literal 0 bytes Literal '3' StatementExpression MemberReference ++ skip ForStatement ForControl BinaryOperation && BinaryOperation < MemberReference skip MemberReference length BinaryOperation == MemberReference ArraySelector MemberReference skip bytes Literal '7' MemberReference ++ skip Statement BreakStatement SwitchStatementCase Literal 10 IfStatement BinaryOperation && BinaryOperation > MemberReference length Literal 0 BinaryOperation == MemberReference ArraySelector Literal 0 bytes Literal '-' StatementExpression MemberReference ++ skip BreakStatement SwitchStatementCase Literal 16 ForStatement ForControl BinaryOperation && BinaryOperation < MemberReference skip MemberReference length BinaryOperation || BinaryOperation == Assignment MemberReference b MemberReference ArraySelector MemberReference skip bytes = Literal 'f' BinaryOperation == MemberReference b Literal 'F' MemberReference ++ skip Statement ReturnStatement MemberReference skip	1
MethodDeclaration Modifier private BasicType int calcArgsLength LocalVariableDeclaration BasicType int VariableDeclarator argsLength Literal 0 IfStatement MemberReference needsThreadContext BlockStatement StatementExpression MemberReference ++ argsLength IfStatement MemberReference isStatic BlockStatement StatementExpression MemberReference ++ argsLength IfStatement BinaryOperation && BinaryOperation && BinaryOperation < MemberReference required Literal 4 BinaryOperation == MemberReference optional Literal 0 MemberReference ! rest BlockStatement StatementExpression Assignment MemberReference argsLength MemberReference required += BlockStatement StatementExpression MemberReference ++ argsLength IfStatement MemberReference needsBlock BlockStatement StatementExpression MemberReference ++ argsLength ReturnStatement MemberReference argsLength	0
MethodDeclaration Modifier private cleanIdentities LocalVariableDeclaration ReferenceType IdReference VariableDeclarator ref WhileStatement BinaryOperation != Assignment MemberReference ref Cast ReferenceType IdReference MethodInvocation deadIdentityReferences poll = Literal null StatementExpression MethodInvocation identities ClassCreator ReferenceType Long MethodInvocation ref id remove	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType NILNODE	0
MethodDeclaration Modifier public final ReferenceType getBlockBody19 FormalParameter ReferenceType Object scriptObject FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int index FormalParameter ReferenceType String descriptor LocalVariableDeclaration ReferenceType VariableDeclarator body MemberReference ArraySelector MemberReference index IfStatement BinaryOperation == MemberReference body Literal null BlockStatement ReturnStatement MethodInvocation MemberReference scriptObject MemberReference context MemberReference index MemberReference descriptor createBlockBody19 ReturnStatement MemberReference body	0
MethodDeclaration Modifier private static BasicType boolean isOverflowExceptionMode FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator currentExceptionMode Cast ReferenceType RubyFixnum MethodInvocation runtime MethodInvocation Literal "vpExceptionMode" searchInternalModuleVariable Literal "BigDecimal" fastGetClass LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator EXCEPTION_OVERFLOW Cast ReferenceType RubyFixnum MethodInvocation runtime MethodInvocation Literal "EXCEPTION_OVERFLOW" fastGetConstant Literal "BigDecimal" fastGetClass ReturnStatement BinaryOperation != BinaryOperation & MethodInvocation currentExceptionMode getLongValue MethodInvocation EXCEPTION_OVERFLOW getLongValue Literal 0	1
MethodDeclaration Modifier protected Annotation Override setUp Exception StatementExpression SuperMethodInvocation setUp LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator parent ClassReference MethodInvocation getClassLoader ReferenceType JRubyThreadContextTest StatementExpression MethodInvocation Thread MethodInvocation MemberReference parent setContextClassLoader currentThread	0
MethodDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType ByteList dirGlobs FormalParameter ReferenceType String cwd FormalParameter ReferenceType IRubyObject args FormalParameter BasicType int flags LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ByteList VariableDeclarator dirs ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ByteList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ByteList VariableDeclarator globPattern MemberReference ArraySelector MemberReference i MethodInvocation convertToString MethodInvocation getByteList args StatementExpression MethodInvocation dirs MethodInvocation Dir MemberReference cwd MemberReference globPattern MemberReference flags push_glob addAll ReturnStatement MemberReference dirs	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "owner" ReferenceType IRubyObject owner FormalParameter ReferenceType ThreadContext context ReturnStatement MemberReference implementationModule	0
MethodDeclaration Modifier private FormalParameter ReferenceType MultipleAsgnNode multipleAsgnNode FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr StatementExpression MethodInvocation MethodInvocation multipleAsgnNode getValueNode MemberReference context Literal true compile StatementExpression MethodInvocation MemberReference multipleAsgnNode MemberReference context MemberReference expr	0
MethodDeclaration Modifier public Annotation Override clear StatementExpression This RubyHash MethodInvocation clear	0
MethodDeclaration Modifier public removeEventHook FormalParameter ReferenceType EventHook hook StatementExpression MethodInvocation eventHooks MemberReference hook remove StatementExpression Assignment MemberReference hasEventHooks MethodInvocation ! eventHooks isEmpty =	0
MethodDeclaration Modifier public static ReferenceType CallSite FormalParameter ReferenceType CallSite callSites FormalParameter BasicType int index FormalParameter ReferenceType String name StatementExpression Assignment MemberReference ArraySelector MemberReference index callSites MethodInvocation MethodIndex MemberReference name = ReturnStatement MemberReference callSites	0
MethodDeclaration Modifier public ReferenceType Object case99_line669 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_colon2 = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType int getAndIncrementRescueNumber ReturnStatement MemberReference ++ rescueNumber	0
MethodDeclaration Modifier public ReferenceType String getCommand ReturnStatement MemberReference command	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "writable?" ReferenceType IRubyObject writable_p ReturnStatement MethodInvocation MethodInvocation MethodInvocation stat isWritable newBoolean getRuntime	1
MethodDeclaration Modifier public ReferenceType Object case360_line1335 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration ReferenceType Node VariableDeclarator node IfStatement BinaryOperation != Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Literal null BlockStatement StatementExpression Assignment MemberReference node MethodInvocation support MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals ClassCreator ReferenceType GlobalVarNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals getPosition Literal "$!" node_assign Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals appendToBlock = IfStatement BinaryOperation != Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation support MethodInvocation getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals unwrapNewlineNode setPosition BlockStatement StatementExpression Assignment MemberReference node Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = LocalVariableDeclaration ReferenceType Node VariableDeclarator body TernaryExpression BinaryOperation == MemberReference node Literal null MemberReference NilImplicitNode NIL MemberReference node StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType RescueBodyNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals MemberReference body Cast ReferenceType RescueBodyNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final ReferenceType IRubyObject fromNative FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long value ReturnStatement MethodInvocation Util MethodInvocation context getRuntime MemberReference value newUnsigned64	1
MethodDeclaration Modifier private BasicType int pipe IOException LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation src read SwitchStatement MemberReference c SwitchStatementCase Literal '|' StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = IfStatement BinaryOperation == Assignment MemberReference c MethodInvocation src read = Literal '=' BlockStatement StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "||" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tOP_ASGN StatementExpression MethodInvocation src MemberReference c unread StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "||" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tOROP SwitchStatementCase Literal '=' StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "|" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tOP_ASGN SwitchStatementCase StatementExpression MethodInvocation determineExpressionState StatementExpression MethodInvocation src MemberReference c unread StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "|" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tPIPE	1
MethodDeclaration Modifier private FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context loadTrue ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context loadFalse performBooleanBranch	0
MethodDeclaration Modifier public setFinalizer FormalParameter ReferenceType Finalizer finalizer StatementExpression Assignment This MemberReference finalizer MemberReference finalizer =	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType List TypeArgument ReferenceType Variable l StatementExpression MethodInvocation l This add	0
MethodDeclaration Modifier public ReferenceType IRubyObject convert FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object IfStatement BinaryOperation == MemberReference object Literal null ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation RubyString MemberReference runtime Cast ReferenceType String MemberReference object	1
MethodDeclaration Modifier public ReferenceType RubyStackTraceElement createBacktrace2 FormalParameter BasicType int level FormalParameter BasicType boolean nativeException LocalVariableDeclaration BasicType int VariableDeclarator traceSize BinaryOperation + BinaryOperation - MemberReference frameIndex MemberReference level Literal 1 LocalVariableDeclaration ReferenceType RubyStackTraceElement VariableDeclarator IfStatement BinaryOperation <= MemberReference traceSize Literal 0 ReturnStatement Literal null LocalVariableDeclaration BasicType int VariableDeclarator totalSize MemberReference traceSize IfStatement MemberReference nativeException BlockStatement StatementExpression Assignment MemberReference totalSize BinaryOperation + MemberReference traceSize Literal 1 = StatementExpression Assignment MemberReference ArrayCreator ReferenceType RubyStackTraceElement MemberReference totalSize = ReturnStatement MethodInvocation MemberReference buildTrace	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType Callback method StatementExpression MethodInvocation MemberReference name ClassCreator ReferenceType This MemberReference method MemberReference PROTECTED addMethod	0
MethodDeclaration Modifier public ReferenceType String type ReturnStatement Literal "foo"	0
MethodDeclaration Modifier public static ReferenceType String bytesToString FormalParameter BasicType byte bytes FormalParameter BasicType int beg FormalParameter BasicType int len ReturnStatement ClassCreator ReferenceType String MethodInvocation ByteList MemberReference bytes MemberReference beg MemberReference len plain	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType INSTVARNODE	0
MethodDeclaration Modifier private userNewMarshal FormalParameter ReferenceType IRubyObject value IOException StatementExpression MethodInvocation MemberReference value StatementExpression MethodInvocation MemberReference TYPE_USRMARSHAL write LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator metaclass MethodInvocation value MethodInvocation getRealClass getMetaClass StatementExpression MethodInvocation MethodInvocation RubySymbol MemberReference runtime MethodInvocation metaclass getName newSymbol LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator marshaled MethodInvocation value MethodInvocation runtime getCurrentContext Literal "marshal_dump" callMethod StatementExpression MethodInvocation MemberReference marshaled	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public Annotation Override ReferenceType DynamicMethod dup ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType Object case33_line434 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Cast ReferenceType AssignableNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals StatementExpression Assignment MemberReference yyVal Cast ReferenceType MultipleAsgnNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = StatementExpression Cast ReferenceType MultipleAsgnNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType Block unusedBlock ReturnStatement MethodInvocation MethodInvocation recv getRuntime	1
MethodDeclaration Modifier public BasicType boolean isMyFoo ReturnStatement MethodInvocation bri isMyFoo	0
MethodDeclaration Modifier public ReferenceType IRubyObject iconv FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference ArraySelector Literal 0 args iconv SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args iconv SwitchStatementCase Literal 3 ReturnStatement MethodInvocation MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference ArraySelector Literal 2 args iconv SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation getRuntime MemberReference args length Literal 1 Literal 2 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value TernaryExpression BinaryOperation == MemberReference args length Literal 1 MemberReference ArraySelector Literal 0 args MethodInvocation context MethodInvocation MemberReference args newArrayNoCopy getRuntime ReturnStatement MethodInvocation MemberReference context MemberReference value Literal null Literal null Literal true MemberReference binding MemberReference type MemberReference block yield	0
MethodDeclaration Modifier private static ReferenceType Regex getPreprocessedRegexpFromCache FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList bytes FormalParameter ReferenceType Encoding enc FormalParameter BasicType int options FormalParameter ReferenceType ErrorMode mode LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType ByteList TypeArgument ReferenceType Regex VariableDeclarator cache MethodInvocation preprocessedPatternCache get LocalVariableDeclaration ReferenceType Regex VariableDeclarator regex MethodInvocation cache MemberReference bytes get IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference regex Literal null BinaryOperation == MethodInvocation regex getEncoding MemberReference enc BinaryOperation == MethodInvocation regex getOptions MemberReference options ReturnStatement MemberReference regex LocalVariableDeclaration ReferenceType ByteList VariableDeclarator preprocessed MethodInvocation MemberReference runtime MemberReference bytes MemberReference enc ArrayCreator ReferenceType Encoding ArrayInitializer Literal null MemberReference ErrorMode RAISE preprocess StatementExpression Assignment MemberReference regex MethodInvocation MemberReference runtime MemberReference preprocessed MemberReference options MemberReference enc makeRegexp = StatementExpression MethodInvocation regex MemberReference preprocessed setUserObject StatementExpression MethodInvocation cache MemberReference bytes MemberReference regex put ReturnStatement MemberReference regex	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "public?" ReferenceType RubyBoolean public_p ReturnStatement MethodInvocation MethodInvocation MethodInvocation Modifier MethodInvocation MethodInvocation getModifiers javaClass isPublic newBoolean getRuntime	1
MethodDeclaration Modifier public BasicType int size ReturnStatement This RubyHash MemberReference size	0
MethodDeclaration Modifier public ReferenceType RubyArray newArray FormalParameter ReferenceType IRubyObject car FormalParameter ReferenceType IRubyObject ReturnStatement MethodInvocation RubyArray This MemberReference car MemberReference newArray	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject initialize_m FormalParameter ReferenceType IRubyObject arg IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyRegexp ReturnStatement MethodInvocation Cast ReferenceType RubyRegexp MemberReference arg initializeByRegexp ReturnStatement MethodInvocation MethodInvocation arg MethodInvocation getByteList convertToString Literal 0 initializeCommon	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair frame Literal true ReferenceType IRubyObject append_features FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject clazz FormalParameter ReferenceType Block block IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType RubyClass BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference self Cast ReferenceType RubyClass MemberReference clazz appendFeaturesToClass IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType RubyModule BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference self Cast ReferenceType RubyModule MemberReference clazz appendFeaturesToModule BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + BinaryOperation + Literal "received " MemberReference clazz Literal ", expected Class/Module" newTypeError getRuntime ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MemberReference clazz MemberReference block invokeSuper	1
MethodDeclaration Modifier public loadBlock StatementExpression MethodInvocation method MethodInvocation aload	0
MethodDeclaration Modifier public performRescue FormalParameter ReferenceType BranchCallback regularCode FormalParameter ReferenceType BranchCallback rubyCatchCode FormalParameter BasicType boolean needsRetry LocalVariableDeclaration ReferenceType String VariableDeclarator mname MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator rescueMethod MethodInvocation MemberReference mname StatementExpression MethodInvocation rescueMethod MemberReference regularCode MemberReference rubyCatchCode MemberReference needsRetry StatementExpression MethodInvocation rescueMethod endBody	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "const_get" ElementValuePair required Literal 1 ReferenceType IRubyObject const_get FormalParameter ReferenceType IRubyObject symbol ReturnStatement MethodInvocation MethodInvocation MethodInvocation symbol asJavaString validateConstant getConstant	1
MethodDeclaration Modifier public ReferenceType Encoding getDefaultExternalEncoding ReturnStatement MemberReference defaultExternalEncoding	0
MethodDeclaration * to support Java serialization of Ruby This * still experimental and might not */ Modifier private FormalParameter ReferenceType ObjectOutputStream out IOException StatementExpression MethodInvocation out defaultWriteObject LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator names MethodInvocation getInstanceVariableNameList StatementExpression MethodInvocation out MethodInvocation names size writeInt ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator name MemberReference names BlockStatement StatementExpression MethodInvocation out MemberReference name StatementExpression MethodInvocation out MethodInvocation MethodInvocation MemberReference name getInstanceVariable getInstanceVariables	0
MethodDeclaration Modifier public ReferenceType Object case1_line271 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation lexer MemberReference LexState EXPR_BEG setState StatementExpression MethodInvocation support initTopLocalVariables ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "" MethodInvocation RubyNil MethodInvocation toString MemberReference rubyNil to_s assertEquals	0
MethodDeclaration Modifier public ReferenceType Object case79_line582 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<<" ElementValuePair required Literal 1 ReferenceType IRubyObject append FormalParameter ReferenceType IRubyObject arg Exception StatementExpression MethodInvocation MemberReference arg append ReturnStatement This	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType SimpleInterface VariableDeclarator si Cast ReferenceType SimpleInterface MethodInvocation manager Literal "ruby" Literal "(java)" Literal 1 Literal 1 Literal = SimpleInterfaceImpl.new" eval LocalVariableDeclaration ReferenceType Map VariableDeclarator map MethodInvocation si StatementExpression MethodInvocation Literal 0 MethodInvocation map size assertEquals StatementExpression MethodInvocation MethodInvocation map isEmpty assertTrue	0
MethodDeclaration Modifier public run ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count_ MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ITest VariableDeclarator test MethodInvocation IfStatement BinaryOperation != MemberReference test Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator result MethodInvocation test Literal "foo" exec IfStatement MethodInvocation ! result MethodInvocation Literal equals toString BlockStatement StatementExpression Assignment MemberReference failed Literal true = CatchClause CatchClauseParameter RuntimeException re StatementExpression Assignment MemberReference failed Literal true = StatementExpression Assignment MemberReference failureException MemberReference re = BreakStatement	0
MethodDeclaration Modifier public load FormalParameter ReferenceType Ruby runtime FormalParameter BasicType boolean wrap IOException IfStatement ClassReference MethodInvocation MemberReference theClass isAssignableFrom ReferenceType BasicLibraryService BlockStatement TryStatement StatementExpression Cast ReferenceType BasicLibraryService MethodInvocation theClass newInstance CatchClause CatchClauseParameter Exception ee ThrowStatement ClassCreator ReferenceType RuntimeException MethodInvocation ee getMessage MemberReference ee	1
MethodDeclaration Modifier public static BasicType boolean FormalParameter BasicType boolean arg ReturnStatement MemberReference arg	0
MethodDeclaration Modifier public final ReferenceType RubySymbol FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 5 MemberReference name	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Join join FormalParameter ReferenceType Object args LocalVariableDeclaration ReferenceType InputBuffer VariableDeclarator buffer Cast ReferenceType InputBuffer MemberReference ArraySelector Literal 1 args StatementExpression MethodInvocation join MemberReference Channel MemberReference buffer send ReturnStatement BinaryOperation - MemberReference buffer.bytes length MemberReference buffer offset	0
MethodDeclaration Modifier public ReferenceType Object case276_line1034 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement MethodInvocation warnings isVerbose StatementExpression MethodInvocation warnings MemberReference ID GROUPED_EXPRESSION MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Literal "(...) interpreted as expression" warning StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static ReferenceType String getAnnotatedBindingClassName FormalParameter ReferenceType String javaMethodName FormalParameter ReferenceType String typeName FormalParameter BasicType boolean isStatic FormalParameter BasicType int required FormalParameter BasicType int optional FormalParameter BasicType boolean multi FormalParameter BasicType boolean framed LocalVariableDeclaration ReferenceType String VariableDeclarator commonClassSuffix LocalVariableDeclaration ReferenceType String VariableDeclarator marker TernaryExpression MemberReference framed Literal "$RUBYFRAMEDINVOKER$" Literal "$RUBYINVOKER$" IfStatement MemberReference multi BlockStatement StatementExpression Assignment MemberReference commonClassSuffix BinaryOperation + BinaryOperation + BinaryOperation + TernaryExpression MemberReference isStatic Literal "$s" Literal "$i" Literal MemberReference marker MemberReference javaMethodName = BlockStatement StatementExpression Assignment MemberReference commonClassSuffix BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + TernaryExpression MemberReference isStatic Literal "$s" Literal "$i" Literal MemberReference required Literal "_" MemberReference optional MemberReference marker MemberReference javaMethodName = ReturnStatement BinaryOperation + MemberReference typeName MemberReference commonClassSuffix	0
MethodDeclaration Modifier public ReferenceType Object case21_line377 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support MethodInvocation ClassCreator ReferenceType PreExeNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition MethodInvocation support getCurrentScope Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals addBeginNode getResult StatementExpression MethodInvocation support popCurrentScope StatementExpression Assignment MemberReference yyVal Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_s" ReferenceType IRubyObject to_s FormalParameter ReferenceType ThreadContext context IfStatement MethodInvocation message isNil ReturnStatement MethodInvocation context MethodInvocation MethodInvocation MethodInvocation getName getMetaClass newString getRuntime StatementExpression MethodInvocation message MethodInvocation isTaint setTaint ReturnStatement MemberReference message	1
MethodDeclaration Modifier public static BasicType int getFastSwitchSingleCharSymbol FormalParameter ReferenceType IRubyObject sym LocalVariableDeclaration ReferenceType String VariableDeclarator str Cast ReferenceType RubySymbol MemberReference sym ReturnStatement Cast BasicType int MethodInvocation str Literal 0 charAt	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation virtualMethod	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "sticky?" ElementValuePair required Literal 1 ElementValuePair module Literal true ReferenceType IRubyObject sticky_p FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject filename LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator file MethodInvocation MemberReference filename file ReturnStatement MethodInvocation runtime BinaryOperation && MethodInvocation file exists MethodInvocation runtime MethodInvocation MethodInvocation file getAbsolutePath stat MethodInvocation isSticky getPosix newBoolean	1
MethodDeclaration Modifier public static create FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator mNet MethodInvocation runtime Literal getModule LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator cBufferedIO Cast ReferenceType RubyClass MethodInvocation mNet Literal getConstant StatementExpression MethodInvocation cBufferedIO ClassReference ReferenceType NetProtocolBufferedIO defineAnnotatedMethods LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator mNativeImpl MethodInvocation cBufferedIO Literal defineModuleUnder StatementExpression MethodInvocation mNativeImpl ClassReference ReferenceType NativeImpl defineAnnotatedMethods	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block TryStatement StatementExpression MethodInvocation callConfig MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference block Literal null This pre AssertStatement BinaryOperation != MemberReference args Literal null LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType boolean VariableDeclarator isTrace MethodInvocation runtime hasEventHooks IfStatement MemberReference isTrace BlockStatement StatementExpression MethodInvocation runtime MemberReference context MemberReference RubyEvent C_CALL MethodInvocation context getFile MethodInvocation context getLine MemberReference name MethodInvocation getImplementationClass callEventHooks TryStatement ReturnStatement MethodInvocation callback MemberReference self MemberReference args MemberReference block execute CatchClause CatchClauseParameter rj IfStatement BinaryOperation == MethodInvocation rj getTarget This ReturnStatement Cast ReferenceType IRubyObject MethodInvocation rj getValue ThrowStatement MemberReference rj IfStatement MemberReference isTrace BlockStatement StatementExpression MethodInvocation runtime MemberReference context MemberReference RubyEvent C_RETURN MethodInvocation context getFile MethodInvocation context getLine MemberReference name MethodInvocation getImplementationClass callEventHooks StatementExpression MethodInvocation callConfig MemberReference context post	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType Color color StatementExpression Assignment MemberReference backgroundColor MemberReference color = StatementExpression MethodInvocation repaint	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MemberReference EMPTY_LIST	0
MethodDeclaration Modifier public compileMultipleAsgn FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType MultipleAsgnNode VariableDeclarator multipleAsgnNode Cast ReferenceType MultipleAsgnNode MemberReference node IfStatement MemberReference expr BlockStatement StatementExpression MethodInvocation MemberReference multipleAsgnNode MemberReference context MemberReference expr BlockStatement StatementExpression MethodInvocation MemberReference multipleAsgnNode MemberReference context MemberReference expr compileOptimizedMultipleAsgn	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject rjust FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference ArraySelector Literal 0 args rjust SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args rjust SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation getRuntime MemberReference args length Literal 1 Literal 2 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal Annotation Override ReferenceType IRubyObject fdiv FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator complex MethodInvocation MemberReference context MethodInvocation getMetaClass MethodInvocation MemberReference context MemberReference real f_to_f MethodInvocation MemberReference context MemberReference image f_to_f newComplex ReturnStatement MethodInvocation MemberReference context MemberReference complex MemberReference other f_div	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference arg	0
MethodDeclaration Modifier private ReferenceType ChannelDescriptor sysopen FormalParameter ReferenceType String path FormalParameter ReferenceType ModeFlags modes FormalParameter BasicType int perm InvalidValueException TryStatement LocalVariableDeclaration ReferenceType ChannelDescriptor VariableDeclarator descriptor MethodInvocation ChannelDescriptor MethodInvocation MethodInvocation getCurrentDirectory getRuntime MemberReference path MemberReference modes MemberReference perm MethodInvocation MethodInvocation getPosix getRuntime open ReturnStatement MemberReference descriptor CatchClause CatchClauseParameter FileNotFoundException fnfe ThrowStatement MethodInvocation MethodInvocation newErrnoENOENTError getRuntime CatchClause CatchClauseParameter DirectoryAsFileException dafe ThrowStatement MethodInvocation MethodInvocation newErrnoEISDirError getRuntime CatchClause CatchClauseParameter FileExistsException fee ThrowStatement MethodInvocation MethodInvocation BinaryOperation + Literal "file exists: " MemberReference path newErrnoEEXISTError getRuntime CatchClause CatchClauseParameter IOException ioe ThrowStatement MethodInvocation MethodInvocation MemberReference ioe newIOErrorFromException getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "const_set" ElementValuePair required Literal 2 ReferenceType IRubyObject const_set FormalParameter ReferenceType IRubyObject symbol FormalParameter ReferenceType IRubyObject value ReturnStatement MethodInvocation MethodInvocation MethodInvocation intern MethodInvocation symbol asJavaString validateConstant MemberReference value fastSetConstant	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair required Literal 1 ElementValuePair optional Literal 2 ElementValuePair frame Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block IfStatement BinaryOperation == MemberReference openFile Literal null BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "reinitializing File" newRuntimeError getRuntime IfStatement BinaryOperation && BinaryOperation > MemberReference args length Literal 0 BinaryOperation <= MemberReference args length Literal 3 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator fd MethodInvocation TypeConverter MemberReference ArraySelector Literal 0 args MethodInvocation context MethodInvocation getRuntime Literal "to_int" convertToTypeWithCheck IfStatement MethodInvocation ! fd isNil BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 args MemberReference fd = IfStatement BinaryOperation == MemberReference args length Literal 1 BlockStatement ReturnStatement SuperMethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference block IfStatement BinaryOperation == MemberReference args length Literal 2 BlockStatement ReturnStatement SuperMethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference block ReturnStatement SuperMethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference ArraySelector Literal 2 args MemberReference block ReturnStatement MethodInvocation MemberReference context MemberReference args openFile19	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "read" ElementValuePair meta Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject read FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject path FormalParameter ReferenceType IRubyObject length FormalParameter ReferenceType IRubyObject offset LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator file MethodInvocation MemberReference context MemberReference recv MemberReference path newFile IfStatement MethodInvocation ! offset isNil StatementExpression MethodInvocation file MemberReference context MemberReference offset seek TryStatement ReturnStatement TernaryExpression MethodInvocation ! length isNil MethodInvocation file MemberReference context MemberReference length read MethodInvocation file MemberReference context read StatementExpression MethodInvocation file close	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator expression MethodInvocation JOptionPane MemberReference frame Literal "Please enter a Ruby expression:" showInputDialog StatementExpression MethodInvocation input MethodInvocation String MethodInvocation manager Literal "ruby" Literal "initUI" Literal 1 Literal 1 MemberReference expression eval valueOf setText CatchClause CatchClauseParameter BSFException excptn StatementExpression MethodInvocation excptn printStackTrace StatementExpression MethodInvocation JOptionPane MemberReference frame MethodInvocation excptn getMessage showMessageDialog	0
MethodDeclaration Modifier public static ReferenceType String create FormalParameter ReferenceType Node node LocalVariableDeclaration ReferenceType VariableDeclarator maker ClassCreator ReferenceType StatementExpression MethodInvocation maker MemberReference node process ReturnStatement MethodInvocation maker toString	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block TryStatement ReturnStatement Cast ReferenceType IRubyObject MethodInvocation blockMethod Literal null MemberReference scriptObject MemberReference context MemberReference self MemberReference args MemberReference block invoke CatchClause CatchClauseParameter IllegalAccessException ex ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference ex CatchClause CatchClauseParameter IllegalArgumentException ex ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference ex CatchClause CatchClauseParameter InvocationTargetException ex LocalVariableDeclaration ReferenceType Throwable VariableDeclarator cause MethodInvocation ex getCause IfStatement BinaryOperation instanceof MemberReference cause ReferenceType RuntimeException BlockStatement ThrowStatement Cast ReferenceType RuntimeException MemberReference cause IfStatement BinaryOperation instanceof MemberReference cause ReferenceType Error BlockStatement ThrowStatement Cast ReferenceType Error MemberReference cause BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference ex	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair meta Literal true ElementValuePair rest Literal true ReferenceType IRubyObject field_writer FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args StatementExpression MethodInvocation MemberReference context Cast ReferenceType RubyModule MemberReference recv MemberReference args Literal false Literal true findFields ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public static ReferenceType IRubyObject constructObjectArray FormalParameter ReferenceType IRubyObject one FormalParameter ReferenceType IRubyObject two FormalParameter ReferenceType IRubyObject three FormalParameter ReferenceType IRubyObject four ReturnStatement ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference one MemberReference two MemberReference three MemberReference four	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String property TryStatement StatementExpression MethodInvocation System MemberReference property getProperty ReturnStatement Literal false CatchClause CatchClauseParameter SecurityException se ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation constructor hashCode	0
MethodDeclaration Modifier protected ReferenceType AccessibleObject accessibleObject ReturnStatement MemberReference constructor	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Block block FormalParameter BasicType boolean checkArity StatementExpression MethodInvocation runtime MethodInvocation MemberReference name MemberReference value set getGlobalVariables ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public BasicType int getClassId ReturnStatement MemberReference classId	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference Block NULL_BLOCK call	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType CLASSNODE	0
MethodDeclaration Modifier private final static ReferenceType ArrayIO newBE64ArrayIO ReturnStatement ClassCreator ReferenceType BE64ArrayIO	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "get_bytes" ReferenceType IRubyObject get_bytes FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offArg FormalParameter ReferenceType IRubyObject lenArg ReturnStatement MethodInvocation MemoryUtil MethodInvocation context getRuntime MethodInvocation getMemoryIO MethodInvocation MemberReference offArg getOffset MethodInvocation Util MemberReference lenArg int32Value getTaintedByteString	1
MethodDeclaration Modifier public final BasicType int getFieldCount ReturnStatement MethodInvocation fields size	1
MethodDeclaration Modifier final public static checkStringSafety FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject value LocalVariableDeclaration ReferenceType RubyString VariableDeclarator s MethodInvocation value asString IfStatement BinaryOperation && BinaryOperation > MethodInvocation runtime getSafeLevel Literal 0 MethodInvocation s isTaint BlockStatement ThrowStatement MethodInvocation runtime Literal "Unsafe string parameter" newSecurityError LocalVariableDeclaration ReferenceType ByteList VariableDeclarator bl MethodInvocation s getByteList LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator array MethodInvocation bl unsafeBytes LocalVariableDeclaration Modifier final BasicType int VariableDeclarator end MethodInvocation bl length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MethodInvocation bl begin BinaryOperation < MemberReference i MemberReference end MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i array Cast BasicType byte Literal 0 BlockStatement ThrowStatement MethodInvocation runtime Literal "string contains null byte" newSecurityError	1
MethodDeclaration Modifier static ReferenceType ByteList quote19 FormalParameter ReferenceType ByteList bs FormalParameter BasicType boolean asciiOnly LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference bs begin LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference p MemberReference bs realSize LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference bs bytes LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MemberReference bs encoding DoStatement metaFound Literal false BlockStatement WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator c LocalVariableDeclaration Modifier final BasicType int VariableDeclarator cl IfStatement MethodInvocation enc isAsciiCompatible BlockStatement StatementExpression Assignment MemberReference cl Literal 1 = StatementExpression Assignment MemberReference c BinaryOperation & MemberReference ArraySelector MemberReference p bytes Literal 0xff = BlockStatement StatementExpression Assignment MemberReference cl MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference p MemberReference end preciseLength = StatementExpression Assignment MemberReference c MethodInvocation enc MemberReference bytes MemberReference p MemberReference end mbcToCode = IfStatement MethodInvocation ! Encoding MemberReference c isAscii BlockStatement StatementExpression Assignment MemberReference p MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference p MemberReference end length += ContinueStatement SwitchStatement MemberReference c SwitchStatementCase Literal '[' Literal ']' Literal '{' Literal '}' Literal '(' Literal ')' Literal '|' Literal '-' Literal '*' Literal '.' Literal '\\' Literal '?' Literal '+' Literal '^' Literal '$' Literal ' ' Literal '#' Literal '\t' Literal '\f' Literal '\n' Literal '\r' BreakStatement metaFound StatementExpression Assignment MemberReference p MemberReference cl += IfStatement MemberReference asciiOnly BlockStatement LocalVariableDeclaration ReferenceType ByteList VariableDeclarator tmp MethodInvocation bs shallowDup StatementExpression Assignment MemberReference tmp encoding MemberReference USASCIIEncoding INSTANCE = ReturnStatement MemberReference tmp ReturnStatement MemberReference bs LocalVariableDeclaration ReferenceType ByteList VariableDeclarator result ClassCreator ReferenceType ByteList BinaryOperation * MemberReference end Literal 2 StatementExpression Assignment MemberReference result encoding TernaryExpression MemberReference asciiOnly MemberReference USASCIIEncoding INSTANCE MemberReference bs encoding = LocalVariableDeclaration BasicType byte VariableDeclarator obytes MemberReference result bytes LocalVariableDeclaration BasicType int VariableDeclarator op BinaryOperation - MemberReference p MemberReference bs begin StatementExpression MethodInvocation System MemberReference bytes MemberReference bs begin MemberReference obytes Literal 0 MemberReference op arraycopy WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator c LocalVariableDeclaration Modifier final BasicType int VariableDeclarator cl IfStatement MethodInvocation enc isAsciiCompatible BlockStatement StatementExpression Assignment MemberReference cl Literal 1 = StatementExpression Assignment MemberReference c BinaryOperation & MemberReference ArraySelector MemberReference p bytes Literal 0xff = BlockStatement StatementExpression Assignment MemberReference cl MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference p MemberReference end preciseLength = StatementExpression Assignment MemberReference c MethodInvocation enc MemberReference bytes MemberReference p MemberReference end mbcToCode = IfStatement MethodInvocation ! Encoding MemberReference c isAscii BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation StringSupport MemberReference enc MemberReference bytes MemberReference p MemberReference end length WhileStatement BinaryOperation > MemberReference -- n Literal 0 StatementExpression Assignment MemberReference ArraySelector MemberReference ++ op obytes MemberReference ArraySelector MemberReference ++ p bytes = ContinueStatement StatementExpression Assignment MemberReference p MemberReference cl += SwitchStatement MemberReference c SwitchStatementCase Literal '[' Literal ']' Literal '{' Literal '}' Literal '(' Literal ')' Literal '|' Literal '-' Literal '*' Literal '.' Literal '\\' Literal '?' Literal '+' Literal '^' Literal '$' Literal '#' StatementExpression Assignment MemberReference op MethodInvocation enc Literal '\\' MemberReference obytes MemberReference op codeToMbc += BreakStatement SwitchStatementCase Literal ' ' StatementExpression Assignment MemberReference op MethodInvocation enc Literal '\\' MemberReference obytes MemberReference op codeToMbc += StatementExpression Assignment MemberReference op MethodInvocation enc Literal ' ' MemberReference obytes MemberReference op codeToMbc += ContinueStatement SwitchStatementCase Literal '\t' StatementExpression Assignment MemberReference op MethodInvocation enc Literal '\\' MemberReference obytes MemberReference op codeToMbc += StatementExpression Assignment MemberReference op MethodInvocation enc Literal 't' MemberReference obytes MemberReference op codeToMbc += ContinueStatement SwitchStatementCase Literal '\n' StatementExpression Assignment MemberReference op MethodInvocation enc Literal '\\' MemberReference obytes MemberReference op codeToMbc += StatementExpression Assignment MemberReference op MethodInvocation enc Literal 'n' MemberReference obytes MemberReference op codeToMbc += ContinueStatement SwitchStatementCase Literal '\r' StatementExpression Assignment MemberReference op MethodInvocation enc Literal '\\' MemberReference obytes MemberReference op codeToMbc += StatementExpression Assignment MemberReference op MethodInvocation enc Literal 'r' MemberReference obytes MemberReference op codeToMbc += ContinueStatement SwitchStatementCase Literal '\f' StatementExpression Assignment MemberReference op MethodInvocation enc Literal '\\' MemberReference obytes MemberReference op codeToMbc += StatementExpression Assignment MemberReference op MethodInvocation enc Literal 'f' MemberReference obytes MemberReference op codeToMbc += ContinueStatement StatementExpression Assignment MemberReference op MethodInvocation enc MemberReference c MemberReference obytes MemberReference op codeToMbc += StatementExpression Assignment MemberReference result realSize MemberReference op = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public final ReferenceType String foo ReturnStatement Literal "In foo"	0
MethodDeclaration Modifier private final static ReferenceType Map TypeArgument ReferenceType NativeType TypeArgument ReferenceType com ReferenceType kenai ReferenceType jffi ReferenceType Type buildTypeMap LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType NativeType TypeArgument ReferenceType com ReferenceType kenai ReferenceType jffi ReferenceType Type VariableDeclarator m ClassCreator ReferenceType EnumMap TypeArgument ReferenceType NativeType TypeArgument ReferenceType com ReferenceType kenai ReferenceType jffi ReferenceType Type ClassReference ReferenceType NativeType StatementExpression MethodInvocation m MemberReference NativeType VOID MemberReference com.kenai.jffi.Type VOID put StatementExpression MethodInvocation m MemberReference NativeType BOOL MemberReference com.kenai.jffi.Type UINT32 put StatementExpression MethodInvocation m MemberReference NativeType CHAR MemberReference com.kenai.jffi.Type SINT8 put StatementExpression MethodInvocation m MemberReference NativeType SHORT MemberReference com.kenai.jffi.Type SINT16 put StatementExpression MethodInvocation m MemberReference NativeType INT MemberReference com.kenai.jffi.Type SINT32 put StatementExpression MethodInvocation m MemberReference NativeType LONG_LONG MemberReference com.kenai.jffi.Type SINT64 put StatementExpression MethodInvocation m MemberReference NativeType UCHAR MemberReference com.kenai.jffi.Type UINT8 put StatementExpression MethodInvocation m MemberReference NativeType USHORT MemberReference com.kenai.jffi.Type UINT16 put StatementExpression MethodInvocation m MemberReference NativeType UINT MemberReference com.kenai.jffi.Type UINT32 put StatementExpression MethodInvocation m MemberReference NativeType ULONG_LONG MemberReference com.kenai.jffi.Type UINT64 put IfStatement BinaryOperation == MethodInvocation com.kenai.jffi.Platform MethodInvocation longSize getPlatform Literal 32 BlockStatement StatementExpression MethodInvocation m MemberReference NativeType LONG MemberReference com.kenai.jffi.Type SINT32 put StatementExpression MethodInvocation m MemberReference NativeType ULONG MemberReference com.kenai.jffi.Type UINT32 put BlockStatement StatementExpression MethodInvocation m MemberReference NativeType LONG MemberReference com.kenai.jffi.Type SINT64 put StatementExpression MethodInvocation m MemberReference NativeType ULONG MemberReference com.kenai.jffi.Type UINT64 put StatementExpression MethodInvocation m MemberReference NativeType FLOAT MemberReference com.kenai.jffi.Type FLOAT put StatementExpression MethodInvocation m MemberReference NativeType DOUBLE MemberReference com.kenai.jffi.Type DOUBLE put StatementExpression MethodInvocation m MemberReference NativeType POINTER MemberReference com.kenai.jffi.Type POINTER put StatementExpression MethodInvocation m MemberReference NativeType BUFFER_IN MemberReference com.kenai.jffi.Type POINTER put StatementExpression MethodInvocation m MemberReference NativeType BUFFER_OUT MemberReference com.kenai.jffi.Type POINTER put StatementExpression MethodInvocation m MemberReference NativeType BUFFER_INOUT MemberReference com.kenai.jffi.Type POINTER put StatementExpression MethodInvocation m MemberReference NativeType STRING MemberReference com.kenai.jffi.Type POINTER put ReturnStatement MemberReference m	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name TryStatement ReturnStatement MethodInvocation JavaUtil MethodInvocation context getRuntime MethodInvocation field Literal null get convertJavaToUsableRubyObject CatchClause CatchClauseParameter IllegalAccessException iae ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "illegal access getting variable: " MethodInvocation iae getMessage newTypeError getRuntime	1
MethodDeclaration Modifier public testDefault Exception StatementExpression MethodInvocation Literal MethodInvocation Literal "p $h['njet']" eval assertEquals StatementExpression MethodInvocation Literal MethodInvocation Literal "p $h.default" eval assertEquals StatementExpression MethodInvocation Literal = 'missing'" eval StatementExpression MethodInvocation Literal "\"missing\"" MethodInvocation Literal "p $h['njet']" eval assertEquals StatementExpression MethodInvocation Literal "\"missing\"" MethodInvocation Literal "p $h.default" eval assertEquals	0
MethodDeclaration Modifier protected Annotation Override aset FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyHash hash FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation hash MemberReference runtime MemberReference key MemberReference value fastASetCheckString19	0
MethodDeclaration Modifier public ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation getSelf getCurrentFrame	0
MethodDeclaration Modifier public ReferenceType Binding clone FormalParameter ReferenceType Visibility visibility ReturnStatement ClassCreator ReferenceType Binding MemberReference self MemberReference frame MemberReference visibility MemberReference klass MemberReference MemberReference file MemberReference line	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MemberReference list	0
MethodDeclaration Modifier public BasicType boolean remove FormalParameter ReferenceType Object o ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier private ReferenceType IRubyObject handlelIllegalArgumentEx FormalParameter ReferenceType Method method FormalParameter ReferenceType IllegalArgumentException iae FormalParameter ReferenceType Object arguments RaiseException ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "for method " MethodInvocation method MethodInvocation getSimpleName getDeclaringClass Literal "." MethodInvocation method getName Literal " expected " MethodInvocation MethodInvocation inspect argument_types Literal "; got: " MethodInvocation MemberReference arguments dumpArgTypes Literal "; error: " MethodInvocation iae getMessage newTypeError getRuntime	0
MethodDeclaration Modifier public tearDown Exception StatementExpression SuperMethodInvocation tearDown StatementExpression Assignment MemberReference manager Literal null =	0
MethodDeclaration Modifier private ReferenceType Frame fillNewFrameStack FormalParameter ReferenceType Frame newFrameStack FormalParameter BasicType int newSize StatementExpression MethodInvocation System MemberReference frameStack Literal 0 MemberReference newFrameStack Literal 0 MemberReference frameStack length arraycopy ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference frameStack length BinaryOperation < MemberReference i MemberReference newSize MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i newFrameStack ClassCreator ReferenceType Frame = ReturnStatement MemberReference newFrameStack	0
MethodDeclaration Modifier public ReferenceType Object case460_line1753 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case369_line1392 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType RubyClass getJavaObjectClass LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator clazz IfStatement BinaryOperation != Assignment MemberReference clazz MemberReference javaObjectClass = Literal null ReturnStatement MemberReference clazz ReturnStatement Assignment MemberReference javaObjectClass MethodInvocation MethodInvocation Literal "JavaObject" fastGetClass getJavaModule =	1
MethodDeclaration Modifier public Annotation Override addMethod FormalParameter ReferenceType String name FormalParameter ReferenceType DynamicMethod method ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "An included class is only a wrapper for a module"	0
MethodDeclaration Modifier private instVarNode FormalParameter ReferenceType InstVarNode node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node getName append Literal " " append	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType String internedName FormalParameter ReferenceType Object value ReturnStatement MethodInvocation MemberReference internedName MemberReference value	0
MethodDeclaration Modifier public register FormalParameter ReferenceType ConfigMBean config IfStatement MemberReference managementEnabled StatementExpression MethodInvocation BinaryOperation + MemberReference base Literal "service=Config" MemberReference config register	1
MethodDeclaration Modifier public ReferenceType Object case253_line992 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration ReferenceType Node VariableDeclarator node Literal null IfStatement BinaryOperation && BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals ReferenceType ArrayNode BinaryOperation != Assignment MemberReference node MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals splat_array = Literal null BlockStatement StatementExpression Assignment MemberReference yyVal MethodInvocation support MemberReference node Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals list_concat = BlockStatement StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_concat = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyFixnum hash FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation runtime This isInspecting ReturnStatement MethodInvocation RubyFixnum MemberReference runtime zero TryStatement StatementExpression MethodInvocation runtime This registerInspecting LocalVariableDeclaration BasicType int VariableDeclarator begin This MemberReference begin LocalVariableDeclaration BasicType int VariableDeclarator h MemberReference realLength ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference begin BinaryOperation < MemberReference i BinaryOperation + MemberReference begin MemberReference realLength MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference h BinaryOperation | BinaryOperation << MemberReference h Literal 1 TernaryExpression BinaryOperation < MemberReference h Literal 0 Literal 1 Literal 0 = LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator value TryStatement StatementExpression Assignment MemberReference value MemberReference ArraySelector MemberReference i values = CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification ContinueStatement StatementExpression Assignment MemberReference h MethodInvocation RubyNumeric MethodInvocation value MemberReference context Literal callMethod num2long ^= ReturnStatement MethodInvocation runtime MemberReference h newFixnum StatementExpression MethodInvocation runtime This unregisterInspecting	1
MethodDeclaration Modifier protected checkArity FormalParameter BasicType int length IfStatement BinaryOperation != MemberReference length MethodInvocation getArity BlockStatement ThrowStatement MethodInvocation MethodInvocation MemberReference length MethodInvocation getArity newArgumentError getRuntime	0
MethodDeclaration Modifier public prepare FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope IfStatement MemberReference isSimple BlockStatement StatementExpression MethodInvocation scope MemberReference arg0 MemberReference arg1 MemberReference arg2 setArgValues BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference self ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference block prepare IfStatement BinaryOperation != MethodInvocation getBlock Literal null StatementExpression MethodInvocation MemberReference scope MemberReference runtime MemberReference block processBlockArg	1
MethodDeclaration Modifier public yyerror FormalParameter ReferenceType String message FormalParameter ReferenceType String expected FormalParameter ReferenceType String found LocalVariableDeclaration ReferenceType String VariableDeclarator text BinaryOperation + BinaryOperation + Literal ", unexpected " MemberReference found Literal "\n" ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID GRAMMAR_ERROR MethodInvocation Literal null getPosition MethodInvocation lexer getCurrentLine MemberReference text MemberReference found	0
MethodDeclaration Modifier public Annotation Override setArgValues FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 StatementExpression Assignment MemberReference variableValueZero MemberReference arg0 = StatementExpression Assignment MemberReference variableValueOne MemberReference arg1 = StatementExpression Assignment MemberReference variableValueTwo MemberReference arg2 =	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject chomp_bang FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 0 ReturnStatement MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime chomp_bang SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime MemberReference ArraySelector Literal 0 args chomp_bang SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation getRuntime MemberReference args length Literal 0 Literal 1 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean isRunning ReturnStatement MemberReference running	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "chdir" ElementValuePair optional Literal 1 ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType IRubyObject chdir FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator path TernaryExpression BinaryOperation == MemberReference args length Literal 1 Cast ReferenceType RubyString MemberReference ArraySelector Literal 0 MethodInvocation convertToString args MethodInvocation MemberReference context getHomeDirectoryPath LocalVariableDeclaration ReferenceType String VariableDeclarator adjustedPath MethodInvocation RubyFile MemberReference runtime MethodInvocation path getUnicodeValue Literal null adjustRootPathOnWindows StatementExpression MethodInvocation MemberReference runtime MemberReference adjustedPath checkDirIsTwoSlashesOnWindows LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator dir MethodInvocation MemberReference runtime MemberReference adjustedPath Literal true getDir LocalVariableDeclaration ReferenceType String VariableDeclarator realPath Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator oldCwd MethodInvocation runtime getCurrentDirectory TryStatement StatementExpression Assignment MemberReference realPath MethodInvocation dir getCanonicalPath = CatchClause CatchClauseParameter IOException e StatementExpression Assignment MemberReference realPath MethodInvocation dir getAbsolutePath = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result Literal null IfStatement MethodInvocation block isGiven BlockStatement StatementExpression MethodInvocation runtime MemberReference realPath setCurrentDirectory TryStatement StatementExpression Assignment MemberReference result MethodInvocation block MemberReference context MemberReference path yield = StatementExpression Assignment MemberReference dir MethodInvocation MemberReference runtime MemberReference oldCwd Literal true getDir = StatementExpression MethodInvocation runtime MemberReference oldCwd setCurrentDirectory BlockStatement StatementExpression MethodInvocation runtime MemberReference realPath setCurrentDirectory StatementExpression Assignment MemberReference result MethodInvocation runtime Literal 0 newFixnum = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType IRubyObject callIter FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block TryStatement ReturnStatement MethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference args MemberReference block callBlock CatchClause CatchClauseParameter JumpException.BreakJump bj ReturnStatement MethodInvocation MemberReference context MemberReference bj handleBreakJump CatchClause CatchClauseParameter JumpException.RetryJump rj ThrowStatement MethodInvocation MemberReference context retryJumpError StatementExpression MethodInvocation block escape	1
MethodDeclaration Modifier private static definePasswdStruct FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation runtime Literal newString MethodInvocation runtime Literal "name" newSymbol MethodInvocation runtime Literal "passwd" newSymbol MethodInvocation runtime Literal "uid" newSymbol MethodInvocation runtime Literal "gid" newSymbol MethodInvocation runtime Literal newSymbol MethodInvocation runtime Literal "dir" newSymbol MethodInvocation runtime Literal "shell" newSymbol MethodInvocation runtime Literal newSymbol MethodInvocation runtime Literal newSymbol MethodInvocation runtime Literal newSymbol StatementExpression MethodInvocation runtime MethodInvocation RubyStruct MethodInvocation runtime getStructClass MemberReference args MemberReference Block NULL_BLOCK newInstance setPasswdStruct	0
MethodDeclaration Modifier public static ReferenceType IRubyObject opElementAsgnWithMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType CallSite elementSite FormalParameter ReferenceType CallSite opSite FormalParameter ReferenceType CallSite elementAsgnSite LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator var MethodInvocation elementSite MemberReference context MemberReference self MemberReference receiver MemberReference arg1 MemberReference arg2 MemberReference arg3 call LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation opSite MemberReference context MemberReference self MemberReference var MemberReference value call StatementExpression MethodInvocation elementAsgnSite MemberReference context MemberReference self MemberReference receiver ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference result call ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected BasicType int fwrite FormalParameter ReferenceType ByteList buffer LocalVariableDeclaration BasicType int VariableDeclarator n VariableDeclarator r VariableDeclarator l VariableDeclarator offset Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator eagain Literal false LocalVariableDeclaration ReferenceType Stream VariableDeclarator writeStream MethodInvocation openFile getWriteStream LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation buffer length IfStatement BinaryOperation <= Assignment MemberReference n MemberReference len = Literal 0 ReturnStatement MemberReference n TryStatement IfStatement MethodInvocation openFile isSync BlockStatement StatementExpression MethodInvocation openFile MemberReference writeStream fflush WhileStatement BinaryOperation < MemberReference offset MemberReference len BlockStatement StatementExpression Assignment MemberReference l MemberReference n = StatementExpression Assignment MemberReference r MethodInvocation writeStream MethodInvocation MemberReference buffer MemberReference offset MemberReference l write getDescriptor = IfStatement BinaryOperation == MemberReference r MemberReference len BlockStatement ReturnStatement MemberReference len IfStatement BinaryOperation <= Literal 0 MemberReference r BlockStatement StatementExpression Assignment MemberReference offset MemberReference r += StatementExpression Assignment MemberReference n MemberReference r -= StatementExpression Assignment MemberReference eagain Literal true = IfStatement BinaryOperation && MemberReference eagain MethodInvocation MethodInvocation writeStream getDescriptor waitWritable BlockStatement StatementExpression MethodInvocation openFile MethodInvocation getRuntime checkClosed IfStatement BinaryOperation >= MemberReference offset MethodInvocation buffer length BlockStatement ReturnStatement Literal - 1 StatementExpression Assignment MemberReference eagain Literal false = BlockStatement ReturnStatement Literal - 1 ReturnStatement MethodInvocation writeStream MemberReference buffer fwrite CatchClause CatchClauseParameter IOException ex ThrowStatement MethodInvocation MethodInvocation MemberReference ex newIOErrorFromException getRuntime CatchClause CatchClauseParameter BadDescriptorException ex ThrowStatement MethodInvocation MethodInvocation newErrnoEBADFError getRuntime	1
MethodDeclaration Modifier public static ReferenceType Block FormalParameter ReferenceType IRubyObject proc FormalParameter ReferenceType Block currentBlock ReturnStatement MethodInvocation MethodInvocation proc getRuntime MemberReference proc MemberReference currentBlock	0
MethodDeclaration Modifier static ReferenceType IRubyObject enumeratorize FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject object FormalParameter ReferenceType String method ReturnStatement ClassCreator ReferenceType RubyEnumerator MemberReference runtime MemberReference object MethodInvocation runtime MemberReference method fastNewSymbol MemberReference IRubyObject NULL_ARRAY	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject object ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 6 MemberReference name MemberReference object getVariable	0
MethodDeclaration Modifier public ReferenceType CharSequence getValue ReturnStatement MethodInvocation toString	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType IRubyObject getAncestorList LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType IRubyObject VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType IRubyObject ForStatement ForControl VariableDeclaration ReferenceType RubyModule VariableDeclarator module This BinaryOperation != MemberReference module Literal null Assignment MemberReference module MethodInvocation module getSuperClass = BlockStatement IfStatement MethodInvocation ! module isSingleton StatementExpression MethodInvocation list MethodInvocation module getNonIncludedClass add ReturnStatement MemberReference list	1
MethodDeclaration Modifier public static BasicType boolean f_negative_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x IfStatement BinaryOperation instanceof MemberReference x ReferenceType RubyFixnum ReturnStatement BinaryOperation < Cast ReferenceType RubyFixnum MemberReference x Literal 0 ReturnStatement MethodInvocation x MethodInvocation isTrue MemberReference context Literal "<" MethodInvocation RubyFixnum MethodInvocation context getRuntime zero callMethod	1
MethodDeclaration Modifier public ReferenceType Node getMatchNode FormalParameter ReferenceType Node FormalParameter ReferenceType Node secondNode IfStatement BinaryOperation || BinaryOperation instanceof MemberReference ReferenceType DRegexpNode BinaryOperation instanceof MemberReference ReferenceType RegexpNode BlockStatement ReturnStatement ClassCreator ReferenceType Match2Node MethodInvocation getPosition MemberReference MemberReference secondNode IfStatement BinaryOperation || BinaryOperation instanceof MemberReference secondNode ReferenceType DRegexpNode BinaryOperation instanceof MemberReference secondNode ReferenceType RegexpNode BlockStatement ReturnStatement ClassCreator ReferenceType Match3Node MethodInvocation getPosition MemberReference secondNode MemberReference ReturnStatement MethodInvocation MemberReference Literal "=~" MemberReference secondNode getOperatorCallNode	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair required Literal 2 ElementValuePair meta Literal true ReferenceType IRubyObject truncate FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator filename MethodInvocation arg1 convertToString LocalVariableDeclaration ReferenceType RubyInteger VariableDeclarator newLength MethodInvocation arg2 convertToInteger LocalVariableDeclaration ReferenceType File VariableDeclarator testFile LocalVariableDeclaration ReferenceType File VariableDeclarator childFile ClassCreator ReferenceType File MethodInvocation filename getUnicodeValue IfStatement MethodInvocation childFile isAbsolute BlockStatement StatementExpression Assignment MemberReference testFile MemberReference childFile = BlockStatement StatementExpression Assignment MemberReference testFile ClassCreator ReferenceType File MethodInvocation runtime getCurrentDirectory MethodInvocation filename MethodInvocation toString getByteList = IfStatement MethodInvocation ! testFile exists BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "No such file or directory - " MethodInvocation filename MethodInvocation toString getByteList newErrnoENOENTError IfStatement BinaryOperation < MethodInvocation newLength getLongValue Literal 0 BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "invalid argument: " MemberReference filename newErrnoEINVALError LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference filename MethodInvocation runtime Literal "r+" newString LocalVariableDeclaration ReferenceType RubyFile VariableDeclarator file Cast ReferenceType RubyFile MethodInvocation MemberReference context MemberReference recv MemberReference args MemberReference Block NULL_BLOCK open StatementExpression MethodInvocation file MemberReference context MemberReference newLength truncate StatementExpression MethodInvocation file close ReturnStatement MethodInvocation RubyFixnum MemberReference runtime zero	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType ALIASNODE	0
MethodDeclaration Modifier private static ReferenceType IRubyObject asRubyStringList FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType List TypeArgument ReferenceType ByteList dirs LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType RubyString VariableDeclarator allFiles ClassCreator ReferenceType ArrayList TypeArgument ReferenceType RubyString ForStatement EnhancedForControl VariableDeclaration ReferenceType ByteList VariableDeclarator dir MemberReference dirs BlockStatement StatementExpression MethodInvocation allFiles MethodInvocation RubyString MemberReference runtime MemberReference dir newString add LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tempFileList ArrayCreator ReferenceType IRubyObject MethodInvocation allFiles size StatementExpression MethodInvocation allFiles MemberReference tempFileList toArray ReturnStatement MethodInvocation runtime MemberReference tempFileList newArrayNoCopy	1
MethodDeclaration Modifier public BasicType boolean isPrivate ReturnStatement BinaryOperation == This MemberReference PRIVATE	0
MethodDeclaration Modifier public assignLocalVariable FormalParameter BasicType int index FormalParameter BasicType int depth FormalParameter ReferenceType CompilerCallback value FormalParameter BasicType boolean expr IfStatement BinaryOperation == MemberReference depth Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference index MemberReference value MemberReference expr assignLocalVariable BlockStatement StatementExpression MethodInvocation MemberReference value MemberReference depth MemberReference index MemberReference expr	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "truncate" ReferenceType IRubyObject op_truncate FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject n LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator b MethodInvocation MemberReference context MemberReference n op_roundCommonPre ReturnStatement MethodInvocation MemberReference context Cast ReferenceType RubyRational MethodInvocation MemberReference context This MemberReference b f_mul MemberReference n MemberReference b op_roundCommonPost	1
MethodDeclaration Modifier public ReferenceType Object invoke FormalParameter ReferenceType Object receiver FormalParameter ReferenceType Object args ThrowStatement MethodInvocation fail	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "protected_methods" ElementValuePair optional Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject protected_methods19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MethodInvocation MethodInvocation MemberReference context MemberReference args trueIfNoArgument protected_instance_methods19 getMetaClass	1
MethodDeclaration Modifier public invalidateCacheDescendants StatementExpression MethodInvocation generation update SynchronizedStatement MethodInvocation MethodInvocation getHierarchyLock getRuntime IfStatement BinaryOperation != MemberReference includingHierarchies Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType RubyClass VariableDeclarator includingHierarchy MemberReference includingHierarchies BlockStatement StatementExpression MethodInvocation includingHierarchy invalidateCacheDescendants	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "file?" ReferenceType RubyBoolean file_p ReturnStatement MethodInvocation MethodInvocation MethodInvocation stat isFile newBoolean getRuntime	1
MethodDeclaration Modifier public ReferenceType Object case368_line1387 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ArgsNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression Cast ReferenceType ISourcePositionHolder MemberReference yyVal ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean isCallableFrom FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType CallType callType SwitchStatement MemberReference visibility SwitchStatementCase PUBLIC ReturnStatement Literal true SwitchStatementCase PRIVATE ReturnStatement BinaryOperation != MemberReference callType MemberReference CallType NORMAL SwitchStatementCase PROTECTED ReturnStatement MethodInvocation MemberReference caller protectedAccessOk ReturnStatement Literal true	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ElementValuePair frame Literal true ReferenceType RubyObject new_instance FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration BasicType int VariableDeclarator size BinaryOperation - MethodInvocation Arity MethodInvocation getRuntime MemberReference args Literal 1 Literal 2 checkArgumentCount Literal 1 LocalVariableDeclaration Modifier final ReferenceType RubyProc VariableDeclarator proc IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference size args ReferenceType RubyProc BlockStatement StatementExpression Assignment MemberReference proc Cast ReferenceType RubyProc MemberReference ArraySelector MemberReference size args = BlockStatement StatementExpression Assignment MemberReference proc MethodInvocation MethodInvocation MemberReference Block.Type PROC MemberReference block newProc getRuntime = StatementExpression MemberReference ++ size LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator constructor_args Cast ReferenceType RubyArray MemberReference ArraySelector Literal 0 args LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator parameterTypes MethodInvocation getParameterTypes LocalVariableDeclaration BasicType int VariableDeclarator count Cast BasicType int MethodInvocation constructor_args MethodInvocation getLongValue length LocalVariableDeclaration ReferenceType Object VariableDeclarator converted ArrayCreator ReferenceType Object MemberReference count ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator ith MethodInvocation constructor_args MethodInvocation MethodInvocation MemberReference i newFixnum getRuntime aref StatementExpression Assignment MemberReference ArraySelector MemberReference i converted MethodInvocation ith MemberReference ArraySelector MemberReference i parameterTypes toJava = LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator recv This LocalVariableDeclaration ReferenceType JavaProxyInvocationHandler VariableDeclarator handler ClassCreator ReferenceType JavaProxyInvocationHandler MethodDeclaration Modifier public ReferenceType IRubyObject getOrig ReturnStatement Literal null MethodDeclaration Modifier public ReferenceType Object invoke FormalParameter ReferenceType Object proxy FormalParameter ReferenceType JavaProxyMethod method FormalParameter ReferenceType Object nargs Throwable LocalVariableDeclaration BasicType int VariableDeclarator length TernaryExpression BinaryOperation == MemberReference nargs Literal null Literal 0 MemberReference nargs length LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator rubyArgs ArrayCreator ReferenceType IRubyObject BinaryOperation + MemberReference length Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 rubyArgs MethodInvocation JavaObject MethodInvocation recv getRuntime MemberReference proxy wrap = StatementExpression Assignment MemberReference ArraySelector Literal 1 rubyArgs MemberReference method = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i Literal 2 rubyArgs MethodInvocation JavaUtil MethodInvocation getRuntime MemberReference ArraySelector MemberReference i nargs convertJavaToRuby = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator call_result MethodInvocation proc MethodInvocation MethodInvocation getCurrentContext getRuntime MemberReference rubyArgs call LocalVariableDeclaration ReferenceType Object VariableDeclarator converted_result MethodInvocation call_result MethodInvocation method getReturnType toJava ReturnStatement MemberReference converted_result LocalVariableDeclaration ReferenceType Object VariableDeclarator result TryStatement StatementExpression Assignment MemberReference result MethodInvocation MemberReference converted MemberReference handler newInstance = CatchClause CatchClauseParameter Exception e LocalVariableDeclaration ReferenceType RaiseException VariableDeclarator ex MethodInvocation MethodInvocation BinaryOperation + Literal "Constructor invocation failed: " MethodInvocation e getMessage newArgumentError getRuntime StatementExpression MethodInvocation ex MemberReference e initCause ThrowStatement MemberReference ex ReturnStatement MethodInvocation JavaObject MethodInvocation getRuntime MemberReference result wrap	1
MethodDeclaration Modifier public final get FormalParameter BasicType long offset FormalParameter BasicType float dst FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation IO BinaryOperation + MemberReference address MemberReference offset MemberReference dst MemberReference off MemberReference len getFloatArray	0
MethodDeclaration Modifier public ReferenceType IAccessor getAccessor ReturnStatement MemberReference accessor	0
MethodDeclaration Modifier public ReferenceType RubyClass getBasicObject ReturnStatement MemberReference basicObjectClass	0
MethodDeclaration Modifier public BasicType boolean writeDataBuffered ReturnStatement MethodInvocation openFile MethodInvocation writeDataBuffered getMainStream	1
MethodDeclaration Modifier public synchronized Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "push" Literal "<<" Annotation Override ReferenceType IRubyObject push FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation MemberReference context checkShutdown IfStatement BinaryOperation >= MethodInvocation java_length MemberReference capacity BlockStatement StatementExpression MemberReference ++ numWaiting TryStatement WhileStatement BinaryOperation >= MethodInvocation java_length MemberReference capacity BlockStatement TryStatement StatementExpression MethodInvocation context MethodInvocation This Literal null wait_timeout getThread CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation MemberReference context checkShutdown StatementExpression MemberReference -- numWaiting StatementExpression SuperMethodInvocation MemberReference context MemberReference value push StatementExpression MethodInvocation notifyAll ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public final Annotation JRubyMethod ElementValuePair name Literal "[]" ReferenceType IRubyObject aref FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject indexArg LocalVariableDeclaration Modifier final BasicType int VariableDeclarator index MethodInvocation RubyNumeric MemberReference indexArg num2int LocalVariableDeclaration Modifier final BasicType int VariableDeclarator offset BinaryOperation * MemberReference index MemberReference typeSize IfStatement BinaryOperation >= MemberReference offset MemberReference size BlockStatement ThrowStatement MethodInvocation context MethodInvocation MethodInvocation String Literal "Index %d out of range" MemberReference index format newIndexError getRuntime ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference offset slice	0
MethodDeclaration Modifier public Exception StatementExpression MethodInvocation Literal "hello" MethodInvocation Literal "printf(\"%s\", eval assertEquals StatementExpression MethodInvocation Literal "" MethodInvocation Literal "printf(\"%s\", eval assertEquals	0
MethodDeclaration Modifier final ReferenceType Regex preparePattern FormalParameter ReferenceType RubyString str StatementExpression MethodInvocation check LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation MemberReference str Literal true checkEncoding IfStatement BinaryOperation == MemberReference enc MethodInvocation pattern getEncoding ReturnStatement MemberReference pattern ReturnStatement MethodInvocation MethodInvocation getRuntime This MemberReference str MemberReference enc MethodInvocation pattern getOptions MemberReference ErrorMode PREPROCESS getPreprocessedRegexpFromCache	1
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator backref MethodInvocation context MethodInvocation MethodInvocation context getRuntime getBackRef getCurrentScope ReturnStatement MethodInvocation RubyRegexp MemberReference backref	0
MethodDeclaration Modifier public ReferenceType Node ret_args FormalParameter ReferenceType Node node FormalParameter ReferenceType ISourcePosition position IfStatement BinaryOperation != MemberReference node Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference node ReferenceType BlockPassNode BlockStatement ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID DYNAMIC_CONSTANT_ASSIGNMENT MemberReference position MethodInvocation lexer getCurrentLine Literal "Dynamic constant assignment." IfStatement BinaryOperation && BinaryOperation instanceof MemberReference node ReferenceType ArrayNode BinaryOperation == Cast ReferenceType ArrayNode MemberReference node Literal 1 BlockStatement StatementExpression Assignment MemberReference node Cast ReferenceType ArrayNode MemberReference node = IfStatement BinaryOperation instanceof MemberReference node ReferenceType SplatNode BlockStatement StatementExpression Assignment MemberReference node ClassCreator ReferenceType SValueNode MemberReference position MemberReference node = ReturnStatement MemberReference node	1
MethodDeclaration Modifier public Annotation Override ReferenceType String list FormalParameter ReferenceType FilenameFilter filter LocalVariableDeclaration ReferenceType String VariableDeclarator files SuperMethodInvocation MemberReference filter list IfStatement BinaryOperation == MemberReference files Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator smartFiles ArrayCreator ReferenceType String MemberReference files length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference files length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i smartFiles MethodInvocation MemberReference ArraySelector MemberReference i files = ReturnStatement MemberReference smartFiles	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "delete!" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject delete_bang19 FormalParameter ReferenceType ThreadContext context ThrowStatement MethodInvocation context MethodInvocation Literal "wrong number of arguments" newArgumentError getRuntime	1
MethodDeclaration Modifier public ReferenceType Object callIt2 FormalParameter ReferenceType Object a FormalParameter ReferenceType Object b FormalParameter ReferenceType SingleMethodInterface obj ReturnStatement MethodInvocation obj callIt	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object accept FormalParameter ReferenceType NodeVisitor visitor ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "Not supported yet."	0
MethodDeclaration Modifier public compileRoot FormalParameter ReferenceType Node node FormalParameter ReferenceType ScriptCompiler context FormalParameter ReferenceType ASTInspector inspector FormalParameter BasicType boolean load FormalParameter BasicType boolean main LocalVariableDeclaration ReferenceType RootNode VariableDeclarator rootNode Cast ReferenceType RootNode MemberReference node LocalVariableDeclaration ReferenceType VariableDeclarator staticScope MethodInvocation rootNode getStaticScope StatementExpression MethodInvocation context MemberReference staticScope startScript StatementExpression MethodInvocation staticScope Literal - 2 LocalVariableDeclaration ReferenceType BodyCompiler VariableDeclarator methodCompiler MethodInvocation context Literal null MemberReference staticScope MemberReference inspector startFileMethod LocalVariableDeclaration ReferenceType Node VariableDeclarator nextNode MethodInvocation rootNode getBodyNode IfStatement BinaryOperation != MemberReference nextNode Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation nextNode getNodeType MemberReference NodeType BLOCKNODE BlockStatement LocalVariableDeclaration ReferenceType BlockNode VariableDeclarator blockNode Cast ReferenceType BlockNode MemberReference nextNode ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation blockNode size MemberReference ++ i BlockStatement IfStatement BinaryOperation == BinaryOperation % BinaryOperation + MemberReference i Literal 1 MemberReference RubyInstanceConfig Literal 0 BlockStatement StatementExpression Assignment MemberReference methodCompiler MethodInvocation methodCompiler BinaryOperation + Literal BinaryOperation + MemberReference i Literal 1 chainToMethod = StatementExpression MethodInvocation MethodInvocation blockNode MemberReference i get MemberReference methodCompiler BinaryOperation >= BinaryOperation + MemberReference i Literal 1 MethodInvocation blockNode size compile BlockStatement StatementExpression MethodInvocation MemberReference nextNode MemberReference methodCompiler Literal true compile BlockStatement StatementExpression MethodInvocation methodCompiler loadNil StatementExpression MethodInvocation methodCompiler endBody StatementExpression MethodInvocation context MemberReference load MemberReference main endScript	0
MethodDeclaration Modifier public FormalParameter ReferenceType Map ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "An included class is only a wrapper for a module"	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "new_in" Literal "alloc_in" Literal "__alloc_in" ElementValuePair meta Literal true ReferenceType Buffer allocateInput FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject sizeArg FormalParameter ReferenceType IRubyObject arg2 ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference sizeArg MethodInvocation MemberReference arg2 getCount MemberReference IN	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType IRubyObject arg8 ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 MemberReference binding MemberReference type	1
MethodDeclaration Modifier public static ReferenceType IRubyObject f_inspect FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation x MemberReference context Literal "inspect" callMethod	1
MethodDeclaration Modifier public static ReferenceType RubyModule findImplementerIfNecessary FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType RubyModule implementationClass IfStatement BinaryOperation && BinaryOperation != MemberReference implementationClass Literal null MethodInvocation implementationClass needsImplementer BlockStatement ReturnStatement MethodInvocation clazz MemberReference implementationClass findImplementer BlockStatement ReturnStatement MemberReference implementationClass	0
MethodDeclaration Modifier private ReferenceType IRubyObject op_aset19 FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int idx FormalParameter ReferenceType IRubyObject arg1 StatementExpression MethodInvocation MethodInvocation MemberReference idx MethodInvocation strLength checkIndex Literal 1 MethodInvocation arg1 convertToString replaceInternal19 ReturnStatement MemberReference arg1	1
MethodDeclaration Modifier private resizeAndAdjustThreshold FormalParameter ReferenceType RubyHashEntry oldTable LocalVariableDeclaration BasicType int VariableDeclarator newCapacity BinaryOperation << MemberReference oldTable length Literal 1 StatementExpression MethodInvocation MemberReference newCapacity resize StatementExpression Assignment MemberReference threshold BinaryOperation - MemberReference newCapacity BinaryOperation >> MemberReference newCapacity Literal 2 =	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType Block VariableDeclarator block MethodInvocation MemberReference context This MethodInvocation context getCurrentScope MemberReference self StatementExpression MethodInvocation runtime MethodInvocation runtime MemberReference Block.Type LAMBDA MemberReference block newProc ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier private final static BasicType int body FormalParameter BasicType int schedule FormalParameter BasicType int Eswap0 FormalParameter BasicType int Eswap1 LocalVariableDeclaration BasicType int VariableDeclarator left Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator right Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator t Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j Literal 25 MemberReference ++ j BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i BinaryOperation * MemberReference ITERATIONS Literal 2 Assignment MemberReference i Literal 4 += BlockStatement StatementExpression Assignment MemberReference left MethodInvocation MemberReference left MemberReference right MemberReference i MemberReference Eswap0 MemberReference Eswap1 MemberReference schedule D_ENCRYPT = StatementExpression Assignment MemberReference right MethodInvocation MemberReference right MemberReference left BinaryOperation + MemberReference i Literal 2 MemberReference Eswap0 MemberReference Eswap1 MemberReference schedule D_ENCRYPT = StatementExpression Assignment MemberReference t MemberReference left = StatementExpression Assignment MemberReference left MemberReference right = StatementExpression Assignment MemberReference right MemberReference t = StatementExpression Assignment MemberReference t MemberReference right = StatementExpression Assignment MemberReference right BinaryOperation | BinaryOperation >>> MemberReference left Literal 1 BinaryOperation << MemberReference left Literal 31 = StatementExpression Assignment MemberReference left BinaryOperation | BinaryOperation >>> MemberReference t Literal 1 BinaryOperation << MemberReference t Literal 31 = StatementExpression Assignment MemberReference left Literal - 1 &= StatementExpression Assignment MemberReference right Literal - 1 &= LocalVariableDeclaration BasicType int VariableDeclarator results ArrayCreator BasicType int Literal 2 StatementExpression MethodInvocation MemberReference right MemberReference left Literal 1 Literal 1431655765 MemberReference results PERM_OP StatementExpression Assignment MemberReference right MemberReference ArraySelector Literal 0 results = StatementExpression Assignment MemberReference left MemberReference ArraySelector Literal 1 results = StatementExpression MethodInvocation MemberReference left MemberReference right Literal 8 Literal 16711935 MemberReference results PERM_OP StatementExpression Assignment MemberReference left MemberReference ArraySelector Literal 0 results = StatementExpression Assignment MemberReference right MemberReference ArraySelector Literal 1 results = StatementExpression MethodInvocation MemberReference right MemberReference left Literal 2 Literal 858993459 MemberReference results PERM_OP StatementExpression Assignment MemberReference right MemberReference ArraySelector Literal 0 results = StatementExpression Assignment MemberReference left MemberReference ArraySelector Literal 1 results = StatementExpression MethodInvocation MemberReference left MemberReference right Literal 16 Literal 65535 MemberReference results PERM_OP StatementExpression Assignment MemberReference left MemberReference ArraySelector Literal 0 results = StatementExpression Assignment MemberReference right MemberReference ArraySelector Literal 1 results = StatementExpression MethodInvocation MemberReference right MemberReference left Literal 4 Literal 252645135 MemberReference results PERM_OP StatementExpression Assignment MemberReference right MemberReference ArraySelector Literal 0 results = StatementExpression Assignment MemberReference left MemberReference ArraySelector Literal 1 results = LocalVariableDeclaration BasicType int VariableDeclarator out ArrayCreator BasicType int Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 out MemberReference left = StatementExpression Assignment MemberReference ArraySelector Literal 1 out MemberReference right = ReturnStatement MemberReference out	1
MethodDeclaration Modifier public ReferenceType IRubyObject invoke FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType CallType callType AssertStatement BinaryOperation != MemberReference args Literal null LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MemberReference name searchMethod LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator caller MethodInvocation context IfStatement MethodInvocation MemberReference method MemberReference name MemberReference caller MemberReference callType BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference callType MemberReference args MemberReference Block NULL_BLOCK callMethodMissing ReturnStatement MethodInvocation method MemberReference context MemberReference self This MemberReference name MemberReference args call	1
MethodDeclaration Modifier private BasicType int greaterThan IOException StatementExpression MethodInvocation determineExpressionState LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation src read SwitchStatement MemberReference c SwitchStatementCase Literal '=' StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal ">=" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tGEQ SwitchStatementCase Literal '>' IfStatement BinaryOperation == Assignment MemberReference c MethodInvocation src read = Literal '=' BlockStatement StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal ">>" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tOP_ASGN StatementExpression MethodInvocation src MemberReference c unread StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal ">>" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tRSHFT SwitchStatementCase StatementExpression MethodInvocation src MemberReference c unread StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal ">" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tGT	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "new_aligned" ElementValuePair meta Literal true ReferenceType IRubyObject newAligned FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject sizeArg FormalParameter ReferenceType IRubyObject count FormalParameter ReferenceType IRubyObject align FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference sizeArg MethodInvocation RubyNumeric MemberReference count fix2int MethodInvocation RubyNumeric MemberReference align num2int Literal true MemberReference block	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "send" Literal "__send__" ElementValuePair rest Literal true ReferenceType IRubyObject send FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType String VariableDeclarator name MemberReference ArraySelector Literal 0 MethodInvocation asJavaString args LocalVariableDeclaration BasicType int VariableDeclarator newArgsLength BinaryOperation - MemberReference args length Literal 1 LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator newArgs IfStatement BinaryOperation == MemberReference newArgsLength Literal 0 BlockStatement StatementExpression Assignment MemberReference newArgs MemberReference IRubyObject NULL_ARRAY = BlockStatement StatementExpression Assignment MemberReference newArgs ArrayCreator ReferenceType IRubyObject MemberReference newArgsLength = StatementExpression MethodInvocation System MemberReference args Literal 1 MemberReference newArgs Literal 0 MemberReference newArgs length arraycopy ReturnStatement MethodInvocation MethodInvocation MemberReference context This MemberReference name MemberReference newArgs MemberReference block finvoke getMetaClass	0
MethodDeclaration Modifier public ReferenceType IRubyObject setInstanceVariable FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject value AssertStatement BinaryOperation && MethodInvocation IdUtil MemberReference name isInstanceVariable BinaryOperation != MemberReference value Literal null StatementExpression MethodInvocation ensureInstanceVariablesSettable ReturnStatement Cast ReferenceType IRubyObject MethodInvocation MemberReference name MemberReference value	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject name LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator klass MethodInvocation self getMetaClass IfStatement MethodInvocation MemberReference klass MemberReference context isDefaultRespondTo BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newString MethodInvocation name asJavaString IfStatement MethodInvocation MemberReference newString MemberReference klass BlockStatement StatementExpression MethodInvocation MemberReference newString MemberReference klass Literal true MemberReference context recacheRespondsTo ReturnStatement MemberReference respondsTo BlockStatement ReturnStatement SuperMethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference name call	0
MethodDeclaration Modifier public static ReferenceType CompiledBlockCallback19 createBlockCallback19 FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object scriptObject FormalParameter ReferenceType String closureMethod LocalVariableDeclaration ReferenceType Class VariableDeclarator scriptClass MethodInvocation scriptObject getClass LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator scriptClassLoader MethodInvocation scriptClass getClassLoader LocalVariableDeclaration ReferenceType MethodFactory VariableDeclarator factory MethodInvocation MethodFactory MemberReference scriptClassLoader createFactory ReturnStatement MethodInvocation factory MemberReference closureMethod MemberReference scriptObject getBlockCallback19	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "match" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ElementValuePair reads MemberReference BACKREF ReferenceType IRubyObject match FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject pattern ReturnStatement MethodInvocation MethodInvocation MemberReference context Literal "match" This callMethod MemberReference pattern getPattern	1
MethodDeclaration Modifier public ReferenceType Byte receiveByteObj FormalParameter ReferenceType Byte b ReturnStatement MethodInvocation vri MemberReference b receiveByteObj	0
MethodDeclaration Modifier private ReferenceType IRubyObject singleByteLStrip FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int s FormalParameter BasicType int end LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference s WhileStatement BinaryOperation && BinaryOperation < MemberReference p MemberReference end MethodInvocation enc BinaryOperation & MemberReference ArraySelector MemberReference p bytes Literal 0xff isSpace StatementExpression MemberReference ++ p IfStatement BinaryOperation > MemberReference p MemberReference s BlockStatement StatementExpression MethodInvocation BinaryOperation - MemberReference p MemberReference s BinaryOperation - MemberReference end MemberReference p view ReturnStatement This ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ThrowStatement MethodInvocation context MethodInvocation valueNode MemberReference runtime MemberReference context MemberReference self MemberReference aBlock returnJump	0
MethodDeclaration Modifier public dup_x1 StatementExpression MethodInvocation MethodInvocation MemberReference DUP_X1 visitInsn getMethodVisitor	1
MethodDeclaration Modifier public ReferenceType Object case175_line717 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_opElementAsgnNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier protected setSuperClass FormalParameter ReferenceType RubyClass superClass StatementExpression Assignment This MemberReference superClass MemberReference superClass =	0
MethodDeclaration Modifier public BasicType boolean smartLoad FormalParameter ReferenceType String file StatementExpression MethodInvocation MemberReference file checkEmptyLoad IfStatement MethodInvocation file Literal ".so" endsWith BlockStatement StatementExpression Assignment MemberReference file MethodInvocation file Literal Literal ".jar" replaceAll = IfStatement MemberReference Platform IS_WINDOWS BlockStatement StatementExpression Assignment MemberReference file MethodInvocation file Literal '\\' Literal '/' replace = TryStatement LocalVariableDeclaration ReferenceType SearchState VariableDeclarator state MethodInvocation MemberReference file findFileForLoad ReturnStatement MethodInvocation MemberReference runtime MemberReference state tryLoadingLibraryOrScript CatchClause CatchClauseParameter al ReturnStatement Literal false	0
MethodDeclaration Modifier private BasicType boolean isNext_identchar IOException LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation src read StatementExpression MethodInvocation src MemberReference c unread ReturnStatement BinaryOperation && BinaryOperation != MemberReference c MemberReference EOF BinaryOperation || MethodInvocation Character MemberReference c isLetterOrDigit BinaryOperation == MemberReference c Literal '_'	1
MethodDeclaration Modifier public final ReferenceType RubySymbol FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 1 MemberReference name	0
MethodDeclaration Modifier public send FormalParameter BasicType int channel FormalParameter ReferenceType Object message IfStatement MethodInvocation MemberReference channel isAsync BlockStatement StatementExpression MethodInvocation MemberReference channel MemberReference message sendRaw BlockStatement StatementExpression MethodInvocation MemberReference channel ClassCreator ReferenceType AsyncCall MemberReference message sendRaw	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "upcase!" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject upcase_bang19 FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation checkDummyEncoding IfStatement BinaryOperation == MemberReference value realSize Literal 0 BlockStatement StatementExpression MethodInvocation modifyCheck ReturnStatement MethodInvocation runtime getNil StatementExpression MethodInvocation modifyAndKeepCodeRange LocalVariableDeclaration BasicType int VariableDeclarator s MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator end BinaryOperation + MemberReference s MemberReference value realSize LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes IfStatement MethodInvocation MemberReference enc singleByteOptimizable BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference bytes MemberReference s MemberReference end singleByteUpcase BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference enc MemberReference bytes MemberReference s MemberReference end multiByteUpcase	1
MethodDeclaration Modifier public ReferenceType Object case293_line1130 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals newCaseNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case276_line1078 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ZYieldNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean isDirect ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Callback getCallback ReturnStatement MemberReference callback	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType RubyArray array IfStatement BinaryOperation < Literal 2 MethodInvocation array getLength BlockStatement ReturnStatement MethodInvocation array Literal 2 eltInternal BlockStatement ReturnStatement MethodInvocation array MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation oldMethod MemberReference context MemberReference self MemberReference klazz MemberReference oldName MemberReference args call	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getFastOptSingletonMethod FormalParameter ReferenceType String method LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal "_FSopt" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal "_FSopt" SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer MemberReference RubyKernel IRUBY_OBJECT ClassReference ReferenceType IRubyObject LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtorFast LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCallSFast StatementExpression MethodInvocation mv MemberReference ALOAD MemberReference METHOD_ARGS_INDEX visitVarInsn StatementExpression MethodInvocation MemberReference mv ClassReference ReferenceType IRubyObject checkCast StatementExpression MethodInvocation mv MemberReference INVOKESTATIC MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 2 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType FastInvocationCallback VariableDeclarator ic Cast ReferenceType FastInvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity optional setArity StatementExpression MethodInvocation ic MemberReference InvocationCallback OPTIONAL_ARGS setArgumentTypes StatementExpression MethodInvocation ic MemberReference method setJavaName StatementExpression MethodInvocation ic Literal true setSingleton ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public aconst_null StatementExpression MethodInvocation MethodInvocation MemberReference ACONST_NULL visitInsn getMethodVisitor	1
MethodDeclaration Modifier private isTrue StatementExpression MethodInvocation Literal MethodInvocation MemberReference Boolean TYPE sig	0
MethodDeclaration Modifier private static ReferenceType IRubyObject foreachCommon FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyString _path FormalParameter ReferenceType Block block IfStatement MethodInvocation block isGiven BlockStatement StatementExpression MethodInvocation runtime MemberReference _path checkSafeString LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator dirClass MethodInvocation runtime getDir LocalVariableDeclaration ReferenceType RubyDir VariableDeclarator dir Cast ReferenceType RubyDir MethodInvocation dirClass MemberReference context ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference _path MemberReference block newInstance StatementExpression MethodInvocation dir MemberReference context MemberReference block ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation MemberReference runtime MemberReference recv Literal "foreach" MemberReference _path enumeratorize	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference ruby MemberReference cls javaToRuby	0
MethodDeclaration Modifier private final spliceOne FormalParameter BasicType long beg FormalParameter ReferenceType IRubyObject rpl IfStatement BinaryOperation && BinaryOperation < MemberReference beg Literal 0 BinaryOperation < Assignment MemberReference beg MemberReference realLength += Literal 0 ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "index " BinaryOperation - MemberReference beg MemberReference realLength Literal " out of array" newIndexError getRuntime StatementExpression MethodInvocation modify LocalVariableDeclaration BasicType int VariableDeclarator valuesLength BinaryOperation - MemberReference values length MemberReference begin IfStatement BinaryOperation >= MemberReference beg MemberReference realLength BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator len BinaryOperation + Cast BasicType int MemberReference beg Literal 1 IfStatement BinaryOperation >= MemberReference len MemberReference valuesLength StatementExpression MethodInvocation Cast BasicType int MemberReference len MemberReference valuesLength spliceRealloc StatementExpression MethodInvocation RuntimeHelpers MemberReference values BinaryOperation + MemberReference begin MemberReference realLength BinaryOperation + MemberReference begin Cast BasicType int MemberReference beg MethodInvocation getRuntime fillNil StatementExpression Assignment MemberReference realLength Cast BasicType int MemberReference len = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator len TernaryExpression BinaryOperation > MemberReference beg MemberReference realLength BinaryOperation - MemberReference realLength Cast BasicType int MemberReference beg Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator alen BinaryOperation - BinaryOperation + MemberReference realLength Literal 1 MemberReference len IfStatement BinaryOperation >= MemberReference alen MemberReference valuesLength StatementExpression MethodInvocation Cast BasicType int MemberReference alen MemberReference valuesLength spliceRealloc IfStatement BinaryOperation == MemberReference len Literal 0 BlockStatement TryStatement StatementExpression MethodInvocation System MemberReference values BinaryOperation + MemberReference begin Cast BasicType int MemberReference beg MemberReference values BinaryOperation + BinaryOperation + MemberReference begin Cast BasicType int MemberReference beg Literal 1 BinaryOperation - MemberReference realLength Cast BasicType int MemberReference beg arraycopy CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification StatementExpression Assignment MemberReference realLength MemberReference alen = TryStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference begin Cast BasicType int MemberReference beg values MemberReference rpl = CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification	1
MethodDeclaration Modifier protected ReferenceType DynamicMethod searchMethodInner FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MethodInvocation MemberReference name get getMethods IfStatement BinaryOperation != MemberReference method Literal null ReturnStatement MemberReference method ReturnStatement TernaryExpression BinaryOperation == MemberReference superClass Literal null Literal null MethodInvocation superClass MemberReference name searchMethodInner	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public static BasicType int fnmatch FormalParameter BasicType byte bytes FormalParameter BasicType int pstart FormalParameter BasicType int pend FormalParameter BasicType byte string FormalParameter BasicType int sstart FormalParameter BasicType int send FormalParameter BasicType int flags LocalVariableDeclaration BasicType boolean VariableDeclarator period BinaryOperation == BinaryOperation & MemberReference flags MemberReference FNM_DOTMATCH Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator pathname BinaryOperation != BinaryOperation & MemberReference flags MemberReference FNM_PATHNAME Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator pat_pos MemberReference pstart LocalVariableDeclaration BasicType int VariableDeclarator str_pos MemberReference sstart LocalVariableDeclaration BasicType int VariableDeclarator ptmp Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator stmp Literal - 1 IfStatement MemberReference pathname BlockStatement WhileStatement Literal true BlockStatement IfStatement MethodInvocation MemberReference bytes MemberReference pat_pos isDoubleStarAndSlash BlockStatement DoStatement MethodInvocation MemberReference bytes MemberReference pat_pos isDoubleStarAndSlash BlockStatement StatementExpression Assignment MemberReference pat_pos Literal 3 += StatementExpression Assignment MemberReference ptmp MemberReference pat_pos = StatementExpression Assignment MemberReference stmp MemberReference str_pos = LocalVariableDeclaration BasicType int VariableDeclarator patSlashIdx MethodInvocation MemberReference bytes MemberReference pat_pos MemberReference pend nextSlashIndex LocalVariableDeclaration BasicType int VariableDeclarator strSlashIdx MethodInvocation MemberReference string MemberReference str_pos MemberReference send nextSlashIndex IfStatement BinaryOperation == MethodInvocation MemberReference bytes MemberReference pat_pos MemberReference patSlashIdx MemberReference string MemberReference str_pos MemberReference strSlashIdx MemberReference flags fnmatch_helper Literal 0 BlockStatement IfStatement BinaryOperation && BinaryOperation < MemberReference patSlashIdx MemberReference pend BinaryOperation < MemberReference strSlashIdx MemberReference send BlockStatement StatementExpression Assignment MemberReference pat_pos MemberReference ++ patSlashIdx = StatementExpression Assignment MemberReference str_pos MemberReference ++ strSlashIdx = ContinueStatement IfStatement BinaryOperation && BinaryOperation == MemberReference patSlashIdx MemberReference pend BinaryOperation == MemberReference strSlashIdx MemberReference send BlockStatement ReturnStatement Literal 0 IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference ptmp Literal - 1 BinaryOperation != MemberReference stmp Literal - 1 BinaryOperation && MemberReference period BinaryOperation == MemberReference ArraySelector MemberReference stmp string Literal '.' BlockStatement StatementExpression Assignment MemberReference stmp MethodInvocation MemberReference string MemberReference stmp MemberReference send nextSlashIndex = IfStatement BinaryOperation < MemberReference stmp MemberReference send BlockStatement StatementExpression Assignment MemberReference pat_pos MemberReference ptmp = StatementExpression MemberReference ++ stmp StatementExpression Assignment MemberReference str_pos MemberReference stmp = ContinueStatement ReturnStatement MemberReference FNM_NOMATCH BlockStatement ReturnStatement MethodInvocation MemberReference bytes MemberReference pstart MemberReference pend MemberReference string MemberReference sstart MemberReference send MemberReference flags fnmatch_helper	1
MethodDeclaration Modifier public ReferenceType Object case454_line1731 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType Token Literal "__LINE__" MemberReference Tokens k__LINE__ Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case70_line552 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType MultipleAsgn19Node MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Literal null Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ">=" ElementValuePair required Literal 1 ReferenceType IRubyObject op_ge FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyTime BlockStatement ReturnStatement MethodInvocation MethodInvocation BinaryOperation >= MethodInvocation Cast ReferenceType RubyTime MemberReference other cmp Literal 0 newBoolean getRuntime ReturnStatement MethodInvocation RubyComparable MemberReference context This MemberReference other op_ge	1
MethodDeclaration Modifier protected BasicType boolean isJarfileLibrary FormalParameter ReferenceType SearchState state FormalParameter Modifier final ReferenceType String file ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference state library ReferenceType JarredScript MethodInvocation file Literal ".jar" endsWith	0
MethodDeclaration Modifier public static ReferenceType String getString ReturnStatement Literal "foo"	0
MethodDeclaration Modifier public defineReadonly FormalParameter ReferenceType String name FormalParameter ReferenceType IAccessor accessor AssertStatement BinaryOperation != MemberReference name Literal null AssertStatement BinaryOperation != MemberReference accessor Literal null AssertStatement MethodInvocation name Literal "$" startsWith StatementExpression MethodInvocation globalVariables MemberReference name ClassCreator ReferenceType GlobalVariable ClassCreator ReferenceType ReadonlyAccessor MemberReference name MemberReference accessor put	1
MethodDeclaration Modifier private synchronized static BasicType int nextId ReturnStatement MemberReference ++ _nextId	0
MethodDeclaration * SSS FIXME: Used anywhere? I don't see calls to this * public Operand buildDAsgnAssignment(Node node, IR_Scope s) * DAsgnNode dasgnNode = (DAsgnNode) * s.getVariableCompiler().assignLocalVariable(dasgnNode.getIndex(), * */ Modifier private ReferenceType Operand defineNewMethod FormalParameter ReferenceType MethodDefNode defnNode FormalParameter ReferenceType IR_Scope s FormalParameter BasicType boolean isInstanceMethod LocalVariableDeclaration ReferenceType IR_Method VariableDeclarator m ClassCreator ReferenceType IR_Method MemberReference s MemberReference s MethodInvocation defnNode getName MemberReference isInstanceMethod StatementExpression MethodInvocation MethodInvocation defnNode getArgsNode MemberReference m receiveArgs IfStatement BinaryOperation != MethodInvocation defnNode getBodyNode Literal null BlockStatement LocalVariableDeclaration ReferenceType Operand VariableDeclarator rv MethodInvocation MethodInvocation defnNode getBodyNode MemberReference m build IfStatement BinaryOperation != MemberReference rv Literal null StatementExpression MethodInvocation m ClassCreator ReferenceType RETURN_Instr MemberReference rv addInstr BlockStatement StatementExpression MethodInvocation m ClassCreator ReferenceType RETURN_Instr MemberReference Nil NIL addInstr StatementExpression MethodInvocation s MemberReference m addMethod ReturnStatement MemberReference Nil NIL	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "path" Literal "to_path" ReferenceType RubyString path FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MemberReference path newString getRuntime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "[]=" ElementValuePair required Literal 2 ReferenceType IRubyObject aset FormalParameter ReferenceType IRubyObject index FormalParameter ReferenceType IRubyObject someValue ThrowStatement MethodInvocation MethodInvocation Literal "not a java array" newTypeError getRuntime	0
MethodDeclaration Modifier private static ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String getFieldListFromArgs FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration Modifier final ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator map ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType String ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i args ReferenceType RubyHash BlockStatement StatementExpression Cast ReferenceType RubyHash MemberReference ArraySelector MemberReference i args BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator value MemberReference ArraySelector MemberReference i MethodInvocation asString MethodInvocation toString args StatementExpression MethodInvocation map MemberReference value MemberReference value put ReturnStatement MemberReference map	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject flatten FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType int VariableDeclarator level MethodInvocation RubyNumeric MemberReference arg num2int IfStatement BinaryOperation == MemberReference level Literal 0 ReturnStatement This LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator result ClassCreator ReferenceType RubyArray MemberReference runtime MethodInvocation getMetaClass MemberReference realLength StatementExpression MethodInvocation MemberReference context MemberReference level MemberReference result flatten StatementExpression MethodInvocation result This infectBy ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference binding MemberReference type MemberReference block call	1
MethodDeclaration Modifier public Annotation Override BasicType long getLongValue ReturnStatement MethodInvocation value longValue	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement BinaryOperation == MethodInvocation getScriptFileName Literal null	0
MethodDeclaration Modifier static protected ReferenceType String dumpArgTypes FormalParameter ReferenceType Object arguments LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator str ClassCreator ReferenceType StringBuilder Literal "[" ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference arguments length MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation str Literal "," append IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i arguments Literal null BlockStatement StatementExpression MethodInvocation str Literal "null" append BlockStatement StatementExpression MethodInvocation str MemberReference ArraySelector MemberReference i MethodInvocation getClass MethodInvocation getName arguments append StatementExpression MethodInvocation str Literal "]" append ReturnStatement MethodInvocation str toString	0
MethodDeclaration Modifier private ReferenceType Entry TypeArgument ReferenceType T rehash AssertStatement BinaryOperation == MemberReference tableSize MethodInvocation count BinaryOperation + BinaryOperation + BinaryOperation + Literal "tableSize " MemberReference tableSize Literal " != count() " MethodInvocation count LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator oldTable MemberReference entryTable LocalVariableDeclaration BasicType int VariableDeclarator oldCapacity IfStatement BinaryOperation >= Assignment MemberReference oldCapacity MemberReference oldTable length = MemberReference MAX_CAPACITY BlockStatement ReturnStatement MemberReference oldTable LocalVariableDeclaration BasicType int VariableDeclarator newCapacity BinaryOperation << MemberReference oldCapacity Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator sizeMask BinaryOperation - MemberReference newCapacity Literal 1 StatementExpression Assignment MemberReference threshold Cast BasicType int BinaryOperation * MemberReference newCapacity MemberReference DEFAULT_LOAD_FACTOR = LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator newTable MethodInvocation Entry MemberReference newCapacity newArray LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator e ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference oldCapacity BinaryOperation >= MemberReference -- i Literal 0 BlockStatement IfStatement BinaryOperation != Assignment MemberReference e MemberReference ArraySelector MemberReference i oldTable = Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator idx BinaryOperation & MemberReference e hash MemberReference sizeMask LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator next IfStatement BinaryOperation == Assignment MemberReference next MemberReference e next = Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference idx newTable MemberReference e = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator lastIdx MemberReference idx LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator lastRun MemberReference e ForStatement ForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator last MemberReference next BinaryOperation != MemberReference last Literal null Assignment MemberReference last MemberReference last next = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator k IfStatement BinaryOperation != Assignment MemberReference k BinaryOperation & MemberReference last hash MemberReference sizeMask = MemberReference lastIdx BlockStatement StatementExpression Assignment MemberReference lastIdx MemberReference k = StatementExpression Assignment MemberReference lastRun MemberReference last = StatementExpression Assignment MemberReference ArraySelector MemberReference lastIdx newTable MemberReference lastRun = ForStatement ForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator p MemberReference e BinaryOperation != MemberReference p MemberReference lastRun Assignment MemberReference p MemberReference p next = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator k BinaryOperation & MemberReference p hash MemberReference sizeMask LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator m ClassCreator ReferenceType Entry TypeArgument ReferenceType T MemberReference p objectRef MemberReference p hash MemberReference p proxyRef MemberReference ArraySelector MemberReference k newTable StatementExpression Assignment MemberReference ArraySelector MemberReference k newTable MemberReference m = StatementExpression Assignment MemberReference entryTable MemberReference newTable = ReturnStatement MemberReference newTable	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference RubyInstanceConfig FULL_TRACE_ENABLED	0
MethodDeclaration Modifier public setArgValues FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 StatementExpression MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 Literal 5 setArgValues	0
MethodDeclaration Modifier public remove ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType RubyBasicObject MemberReference runtime MemberReference klass	0
MethodDeclaration Modifier public load FormalParameter Modifier final ReferenceType Ruby runtime FormalParameter BasicType boolean wrap IOException StatementExpression MethodInvocation org.jruby.RubyDigest MemberReference runtime createDigestSHA2	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block StatementExpression MethodInvocation oldHandler ClassCreator ReferenceType Signal MemberReference handler signal handle ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public final ReferenceType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String varNamesDescriptor ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference varNamesDescriptor Literal 2 getScope	0
MethodDeclaration Modifier public ReferenceType T get FormalParameter ReferenceType Object javaObject IfStatement BinaryOperation == MemberReference javaObject Literal null ReturnStatement Literal null LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation MemberReference javaObject hash ReturnStatement MethodInvocation MethodInvocation MemberReference javaObject MemberReference hash get MemberReference hash segmentFor	1
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject convertJavaToRuby FormalParameter ReferenceType Ruby runtime FormalParameter BasicType long l ReturnStatement MethodInvocation runtime MemberReference l newFixnum	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "inspect" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject inspect19 FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation runtime This isInspecting ReturnStatement MethodInvocation MemberReference context Literal true inspect TryStatement StatementExpression MethodInvocation runtime This registerInspecting ReturnStatement MethodInvocation MemberReference context Literal false inspect StatementExpression MethodInvocation runtime This unregisterInspecting	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "pos=" ElementValuePair required Literal 1 ReferenceType IRubyObject set_pos FormalParameter ReferenceType IRubyObject newPos StatementExpression Assignment This MemberReference pos MethodInvocation RubyNumeric MemberReference newPos fix2int = ReturnStatement MemberReference newPos	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "force_encoding" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject force_encoding FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject enc StatementExpression MethodInvocation modify19 LocalVariableDeclaration ReferenceType Encoding VariableDeclarator encoding MethodInvocation RubyEncoding MethodInvocation context getRuntime MemberReference enc StatementExpression MethodInvocation MemberReference encoding associateEncoding ReturnStatement This	1
MethodDeclaration Modifier public FormalParameter BasicType int arg0 FormalParameter BasicType int arg1 StatementExpression MethodInvocation MethodInvocation MemberReference arg0 MemberReference arg1 getMethodVisitor	0
MethodDeclaration Modifier public syncVariables FormalParameter ReferenceType List TypeArgument ReferenceType Variable TypeArgument ReferenceType Object variables StatementExpression MethodInvocation MemberReference variables variableTableSync	0
MethodDeclaration Modifier public static ReferenceType Block FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IterNode FormalParameter ReferenceType DynamicScope FormalParameter ReferenceType IRubyObject self LocalVariableDeclaration ReferenceType Binding VariableDeclarator binding MethodInvocation context MemberReference self MemberReference currentBinding LocalVariableDeclaration ReferenceType InterpretedBlock VariableDeclarator body ClassCreator ReferenceType MemberReference ReturnStatement ClassCreator ReferenceType Block MemberReference body MemberReference binding	0
MethodDeclaration Modifier public ReferenceType Object case390_line1477 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType RubyArray constants FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MemberReference context Literal true	0
MethodDeclaration Modifier public ReferenceType DynamicScope getDummyScope FormalParameter ReferenceType staticScope IfStatement BinaryOperation || BinaryOperation == MemberReference dummyScope Literal null BinaryOperation != MethodInvocation dummyScope getStaticScope MemberReference staticScope BlockStatement ReturnStatement Assignment MemberReference dummyScope MethodInvocation DynamicScope MemberReference staticScope MemberReference newDummyScope = ReturnStatement MemberReference dummyScope	1
MethodDeclaration Modifier private installClassConstants FormalParameter Modifier final ReferenceType Class TypeArgument ? javaClass FormalParameter Modifier final ReferenceType RubyClass proxy LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator classes MethodInvocation MemberReference javaClass getClasses ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference classes length BinaryOperation >= MemberReference -- i Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference javaClass MemberReference ArraySelector MemberReference i MethodInvocation getDeclaringClass classes BlockStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator clazz MemberReference ArraySelector MemberReference i classes LocalVariableDeclaration ReferenceType String VariableDeclarator simpleName MethodInvocation MemberReference clazz getSimpleName IfStatement BinaryOperation == MethodInvocation simpleName length Literal 0 BlockStatement ContinueStatement IfStatement BinaryOperation && MethodInvocation IdUtil MemberReference simpleName isConstant BinaryOperation == MethodInvocation proxy MemberReference simpleName getConstantAt Literal null BlockStatement StatementExpression MethodInvocation proxy MemberReference simpleName MethodInvocation Java MemberReference JAVA_UTILITIES MethodInvocation MethodInvocation getRuntime MemberReference clazz get get_proxy_class setConstant	1
MethodDeclaration Modifier public buildDataFlowVars FormalParameter ReferenceType IR_Instr i LocalVariableDeclaration ReferenceType LiveVariablesProblem VariableDeclarator lvp Cast ReferenceType LiveVariablesProblem MemberReference _prob LocalVariableDeclaration ReferenceType Variable VariableDeclarator v MethodInvocation i getResult IfStatement BinaryOperation && BinaryOperation != MemberReference v Literal null BinaryOperation == MethodInvocation lvp MemberReference v getDFVar Literal null BlockStatement StatementExpression MethodInvocation lvp MemberReference v addDFVar	1
MethodDeclaration Modifier public ReferenceType Date parse FormalParameter ReferenceType String source FormalParameter ReferenceType pos ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair required Literal 2 ElementValuePair meta Literal true ReferenceType IRubyObject link FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject from FormalParameter ReferenceType IRubyObject to LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator fromStr MethodInvocation RubyString MemberReference from stringValue LocalVariableDeclaration ReferenceType RubyString VariableDeclarator toStr MethodInvocation RubyString MemberReference to stringValue TryStatement IfStatement BinaryOperation == MethodInvocation runtime MethodInvocation MethodInvocation fromStr getUnicodeValue MethodInvocation toStr getUnicodeValue link getPosix Literal - 1 BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "File exists - " MemberReference fromStr Literal " or " MemberReference toStr newErrnoEEXISTError CatchClause CatchClauseParameter java.lang.UnsatisfiedLinkError ule ThrowStatement MethodInvocation runtime Literal "link() function is unimplemented on this machine" newNotImplementedError ReturnStatement MethodInvocation runtime Literal 0 newFixnum	1
MethodDeclaration Modifier private assignLocalVariable FormalParameter BasicType int index FormalParameter ReferenceType CompilerCallback value FormalParameter BasicType boolean expr StatementExpression MethodInvocation value MemberReference methodCompiler call StatementExpression MethodInvocation MemberReference index MemberReference expr assignLocalVariable	0
MethodDeclaration Modifier public ReferenceType Long receiveLongObj FormalParameter ReferenceType Long l ReturnStatement MethodInvocation vri MemberReference l receiveLongObj	0
MethodDeclaration Modifier public ReferenceType RubyArray FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter BasicType boolean asSymbols LocalVariableDeclaration BasicType boolean VariableDeclarator all Literal true IfStatement BinaryOperation == MemberReference args length Literal 1 BlockStatement StatementExpression Assignment MemberReference all MemberReference ArraySelector Literal 0 MethodInvocation isTrue args = LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator IfStatement MethodInvocation MethodInvocation isSingleton getMetaClass BlockStatement IfStatement MemberReference asSymbols BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation context MethodInvocation getFalse getRuntime instance_methods19 getMetaClass = BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation context MethodInvocation getFalse getRuntime instance_methods getMetaClass = IfStatement MemberReference all BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator superClass MethodInvocation MethodInvocation getSuperClass getMetaClass WhileStatement BinaryOperation || MethodInvocation superClass isSingleton MethodInvocation superClass isIncluded BlockStatement StatementExpression MethodInvocation MethodInvocation superClass ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation context MethodInvocation getFalse getRuntime instance_methods concat StatementExpression Assignment MemberReference superClass MethodInvocation superClass getSuperClass = BlockStatement StatementExpression Assignment MemberReference MethodInvocation context MethodInvocation newEmptyArray getRuntime = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override BasicType int size StatementExpression MethodInvocation expunge ReturnStatement SuperMethodInvocation size	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "each_char" ElementValuePair frame Literal true ReferenceType IRubyObject each_char19 FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block each_char MethodInvocation MethodInvocation context getRuntime This Literal "each_char" enumeratorize	1
MethodDeclaration Modifier public ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Map TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object getMethodAnnotations IfStatement BinaryOperation == MemberReference methodAnnotations Literal null ReturnStatement MemberReference Collections EMPTY_MAP ReturnStatement MemberReference methodAnnotations	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyArray constructors ReturnStatement This MemberReference constructors	0
MethodDeclaration Modifier final protected static postBacktraceAndScope FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation context	1
MethodDeclaration Modifier private BasicType int bufferedRead IOException BadDescriptorException StatementExpression MethodInvocation ensureRead IfStatement MethodInvocation ! buffer hasRemaining BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation refillBuffer IfStatement BinaryOperation == MemberReference len Literal - 1 BlockStatement StatementExpression Assignment MemberReference eof Literal true = ReturnStatement Literal - 1 IfStatement BinaryOperation == MemberReference len Literal 0 BlockStatement ReturnStatement Literal - 1 ReturnStatement BinaryOperation & MethodInvocation buffer get Literal 0xFF	0
MethodDeclaration Modifier public BasicType boolean isConstant IfStatement BinaryOperation != MemberReference _pieces Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Operand VariableDeclarator o MemberReference _pieces IfStatement MethodInvocation ! o isConstant ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference ArraySelector Literal 0 args call SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args call SwitchStatementCase ReturnStatement MethodInvocation This MemberReference context MemberReference name MemberReference args length Literal 1 Literal 2 raiseArgumentError	0
MethodDeclaration Modifier public ReferenceType IRubyObject inflate FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType ByteList str IfStatement BinaryOperation == Literal null MemberReference str BlockStatement ReturnStatement MethodInvocation BlockStatement StatementExpression MethodInvocation MemberReference str append ReturnStatement MethodInvocation MethodInvocation context getRuntime flushOutput	0
MethodDeclaration Modifier private BasicType int bufferedRead FormalParameter ReferenceType ByteList dst FormalParameter BasicType int number IOException BadDescriptorException LocalVariableDeclaration BasicType int VariableDeclarator bytesRead Literal 0 StatementExpression Assignment MemberReference bytesRead MethodInvocation MemberReference dst MemberReference number copyBufferedBytes += LocalVariableDeclaration BasicType boolean VariableDeclarator done Literal false WhileStatement BinaryOperation >= BinaryOperation - MemberReference number MemberReference bytesRead MemberReference BUFSIZE BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator bytesToRead MethodInvocation Math MemberReference BULK_READ_SIZE BinaryOperation - MemberReference number MemberReference bytesRead min LocalVariableDeclaration Modifier final BasicType int VariableDeclarator n MethodInvocation descriptor MemberReference bytesToRead MemberReference dst read IfStatement BinaryOperation == MemberReference n Literal - 1 BlockStatement StatementExpression Assignment MemberReference eof Literal true = StatementExpression Assignment MemberReference done Literal true = BreakStatement IfStatement BinaryOperation == MemberReference n Literal 0 BlockStatement StatementExpression Assignment MemberReference done Literal true = BreakStatement StatementExpression Assignment MemberReference bytesRead MemberReference n += WhileStatement BinaryOperation && MemberReference ! done BinaryOperation < MemberReference bytesRead MemberReference number BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator read MethodInvocation refillBuffer IfStatement BinaryOperation == MemberReference read Literal - 1 BlockStatement StatementExpression Assignment MemberReference eof Literal true = BreakStatement IfStatement BinaryOperation == MemberReference read Literal 0 BlockStatement BreakStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator len MethodInvocation Math MethodInvocation buffer remaining BinaryOperation - MemberReference number MemberReference bytesRead min StatementExpression MethodInvocation dst MemberReference buffer MemberReference len append StatementExpression Assignment MemberReference bytesRead MemberReference len += IfStatement BinaryOperation && BinaryOperation == MemberReference bytesRead Literal 0 BinaryOperation != MemberReference number Literal 0 BlockStatement IfStatement MemberReference eof BlockStatement ThrowStatement ClassCreator ReferenceType EOFException ReturnStatement MemberReference bytesRead	1
MethodDeclaration Modifier public reset StatementExpression Assignment MemberReference inSingleton Literal 0 = StatementExpression Assignment MemberReference inDefinition Literal false =	0
MethodDeclaration Modifier public ReferenceType Object toArray ReturnStatement MethodInvocation map MethodInvocation toArray keySet	0
MethodDeclaration Modifier final BasicType boolean isFastLongMethod FormalParameter ReferenceType Type returnType FormalParameter ReferenceType Type parameterTypes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameterTypes length MemberReference ++ i BlockStatement IfStatement MethodInvocation ! MemberReference ArraySelector MemberReference i parameterTypes isFastLongParam BlockStatement ReturnStatement Literal false ReturnStatement BinaryOperation && BinaryOperation <= MemberReference parameterTypes length Literal 3 MethodInvocation MemberReference returnType isFastLongResult	1
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference parameter int8Value putByte	1
MethodDeclaration Modifier public setEnvironment FormalParameter ReferenceType Map newEnvironment StatementExpression Assignment MemberReference environment MemberReference newEnvironment =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "magnitude" ElementValuePair compat MemberReference CompatVersion RUBY1_9 Annotation Override ReferenceType IRubyObject magnitude FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MemberReference context abs	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_lt19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum ReturnStatement MethodInvocation RubyBoolean MethodInvocation context getRuntime BinaryOperation < MemberReference value Cast ReferenceType RubyFixnum MemberReference other newBoolean ReturnStatement MethodInvocation MemberReference context MemberReference other op_ltOther	1
MethodDeclaration Modifier public BasicType double LocalVariableDeclaration BasicType int VariableDeclarator a BinaryOperation >>> MethodInvocation Literal 5 LocalVariableDeclaration BasicType int VariableDeclarator b BinaryOperation >>> MethodInvocation Literal 6 ReturnStatement BinaryOperation * BinaryOperation + BinaryOperation * MemberReference a Literal MemberReference b BinaryOperation / Literal 1.0 Literal	0
MethodDeclaration Modifier public final ReferenceType CallSite ReturnStatement MemberReference runtimeCache ArraySelector Literal 5 callSites	0
MethodDeclaration Modifier public setUntrusted FormalParameter BasicType boolean untrusted IfStatement MemberReference untrusted BlockStatement StatementExpression Assignment MemberReference flags MemberReference |= BlockStatement StatementExpression Assignment MemberReference flags MemberReference ~ &=	0
MethodDeclaration Modifier public emitDEF_CLS_METH FormalParameter ReferenceType DEFINE_CLASS_METHOD_Instr instr LocalVariableDeclaration ReferenceType IR_Method VariableDeclarator irMethod MemberReference instr LocalVariableDeclaration ReferenceType GeneratorAdapter VariableDeclarator adapter ClassCreator ReferenceType GeneratorAdapter BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_STATIC MethodInvocation Method BinaryOperation + BinaryOperation + Literal "void " MemberReference irMethod Literal " getMethod Literal null Literal null MethodInvocation cls StatementExpression MethodInvocation adapter returnValue StatementExpression MethodInvocation adapter endMethod	1
MethodDeclaration Modifier public ReferenceType Object invoke FormalParameter ReferenceType Object receiver ThrowStatement MethodInvocation fail	0
MethodDeclaration Modifier private static ReferenceType String FormalParameter ReferenceType Ruby runtime TryStatement ReturnStatement ClassCreator MethodInvocation getCanonicalPath ReferenceType org ReferenceType jruby ReferenceType util ReferenceType NormalizedFile MethodInvocation runtime getCurrentDirectory CatchClause CatchClauseParameter Exception e ReturnStatement MethodInvocation runtime getCurrentDirectory	1
MethodDeclaration Modifier public ReferenceType Node new_super FormalParameter ReferenceType Node args FormalParameter ReferenceType Token operation IfStatement BinaryOperation && BinaryOperation != MemberReference args Literal null BinaryOperation instanceof MemberReference args ReferenceType BlockPassNode BlockStatement ReturnStatement ClassCreator ReferenceType SuperNode MethodInvocation MemberReference operation MemberReference args position Cast ReferenceType BlockPassNode MemberReference args MemberReference args ReturnStatement ClassCreator ReferenceType SuperNode MethodInvocation operation getPosition MemberReference args	1
MethodDeclaration Modifier protected ReferenceType IRubyObject cacheAndCall FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType RubyClass selfType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator entry TernaryExpression BinaryOperation != MemberReference selfType Literal null MethodInvocation selfType MemberReference name MemberReference CacheEntry LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MemberReference entry method IfStatement MethodInvocation MemberReference method MemberReference caller BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference name MemberReference method MemberReference arg1 MemberReference arg2 MemberReference arg3 callMethodMissing StatementExpression Assignment MemberReference lastName MemberReference name = StatementExpression Assignment MemberReference cache MemberReference entry = ReturnStatement MethodInvocation method MemberReference context MemberReference self MemberReference selfType MemberReference name MemberReference arg1 MemberReference arg2 MemberReference arg3 call	1
MethodDeclaration Modifier public BasicType boolean isGlobalAbortOnExceptionEnabled ReturnStatement MemberReference globalAbortOnExceptionEnabled	0
MethodDeclaration Modifier public marshalTo FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object obj FormalParameter ReferenceType RubyClass type FormalParameter ReferenceType marshalStream IOException LocalVariableDeclaration ReferenceType RubyRange VariableDeclarator Cast ReferenceType RubyRange MemberReference obj StatementExpression MethodInvocation marshalStream MemberReference LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Variable TypeArgument ReferenceType Object VariableDeclarator attrs MethodInvocation getVariableList StatementExpression MethodInvocation attrs ClassCreator ReferenceType TypeArgument ReferenceType Object Literal MemberReference begin add StatementExpression MethodInvocation attrs ClassCreator ReferenceType TypeArgument ReferenceType Object Literal MemberReference end add StatementExpression MethodInvocation attrs ClassCreator ReferenceType TypeArgument ReferenceType Object Literal "excl" TernaryExpression MemberReference isExclusive MethodInvocation runtime getTrue MethodInvocation runtime getFalse add StatementExpression MethodInvocation marshalStream MemberReference attrs dumpVariables	0
MethodDeclaration Modifier public ReferenceType Class TypeArgument ? getParameterTypes ReturnStatement MemberReference parameterTypes	0
MethodDeclaration Modifier public ReferenceType IR_Module getDefiningModule ReturnStatement TernaryExpression BinaryOperation instanceof MemberReference _parent ReferenceType MetaObject Cast ReferenceType IR_Module Cast ReferenceType MetaObject MemberReference _parent Literal null	1
MethodDeclaration Modifier private expandParentsIfNecessary LocalVariableDeclaration BasicType int VariableDeclarator newSize BinaryOperation * MemberReference parentStack length Literal 2 LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator newParentStack ArrayCreator ReferenceType RubyModule MemberReference newSize StatementExpression MethodInvocation System MemberReference parentStack Literal 0 MemberReference newParentStack Literal 0 MemberReference parentStack length arraycopy StatementExpression Assignment MemberReference parentStack MemberReference newParentStack =	0
MethodDeclaration Modifier public final ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset ReturnStatement MethodInvocation Util MemberReference runtime MethodInvocation io MemberReference offset getLong newSigned64	1
MethodDeclaration Modifier protected BasicType boolean waitReadable FormalParameter ReferenceType ChannelDescriptor descriptor IOException LocalVariableDeclaration ReferenceType Channel VariableDeclarator channel MethodInvocation descriptor getChannel IfStatement BinaryOperation || BinaryOperation == MemberReference channel Literal null BinaryOperation instanceof MemberReference channel ReferenceType SelectableChannel BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType SelectableChannel VariableDeclarator selectable Cast ReferenceType SelectableChannel MemberReference channel LocalVariableDeclaration ReferenceType Selector VariableDeclarator selector Literal null SynchronizedStatement MethodInvocation selectable blockingLock LocalVariableDeclaration BasicType boolean VariableDeclarator oldBlocking MethodInvocation selectable isBlocking TryStatement StatementExpression Assignment MemberReference selector MethodInvocation Selector open = StatementExpression MethodInvocation selectable Literal false configureBlocking LocalVariableDeclaration BasicType int VariableDeclarator real_ops BinaryOperation & MethodInvocation selectable validOps BinaryOperation | MemberReference SelectionKey OP_READ MemberReference SelectionKey OP_ACCEPT LocalVariableDeclaration ReferenceType SelectionKey VariableDeclarator key MethodInvocation selectable MemberReference selector keyFor IfStatement BinaryOperation == MemberReference key Literal null BlockStatement StatementExpression MethodInvocation selectable MemberReference selector MemberReference real_ops MemberReference descriptor register BlockStatement StatementExpression MethodInvocation key BinaryOperation | MethodInvocation key interestOps MemberReference real_ops interestOps WhileStatement BinaryOperation == MethodInvocation selector select Literal 0 Statement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation selector MethodInvocation iterator selectedKeys MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType SelectionKey VariableDeclarator skey Cast ReferenceType SelectionKey MethodInvocation i next IfStatement BinaryOperation != BinaryOperation & BinaryOperation & MethodInvocation skey interestOps MethodInvocation skey readyOps BinaryOperation | MemberReference SelectionKey OP_READ MemberReference SelectionKey OP_ACCEPT Literal 0 BlockStatement IfStatement BinaryOperation == MethodInvocation skey attachment MemberReference descriptor BlockStatement ReturnStatement Literal true ReturnStatement Literal false IfStatement BinaryOperation != MemberReference selector Literal null BlockStatement TryStatement StatementExpression MethodInvocation selector close CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation selectable MemberReference oldBlocking configureBlocking	1
MethodDeclaration Modifier public static ReferenceType String getMethodSignature FormalParameter BasicType int args SwitchStatement MemberReference args SwitchStatementCase Literal 0 ReturnStatement MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig SwitchStatementCase Literal 1 ReturnStatement MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig SwitchStatementCase Literal 2 ReturnStatement MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig SwitchStatementCase Literal 3 ReturnStatement MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig SwitchStatementCase Literal 4 ReturnStatement MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig SwitchStatementCase ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + Literal "unsupported arity: " MemberReference args	1
MethodDeclaration Modifier public static ReferenceType Integer integerFib FormalParameter ReferenceType Integer n IfStatement BinaryOperation < MethodInvocation n intValue MethodInvocation TWO intValue BlockStatement ReturnStatement MemberReference n BlockStatement ReturnStatement BinaryOperation + MethodInvocation MethodInvocation Integer BinaryOperation - MethodInvocation n intValue MethodInvocation TWO intValue valueOf integerFib MethodInvocation MethodInvocation Integer BinaryOperation - MethodInvocation n intValue MethodInvocation intValue valueOf integerFib	0
MethodDeclaration Modifier public static ReferenceType RubyRange newRange FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject begin FormalParameter ReferenceType IRubyObject end FormalParameter BasicType boolean isExclusive LocalVariableDeclaration ReferenceType RubyRange VariableDeclarator ClassCreator ReferenceType RubyRange MemberReference runtime MethodInvocation runtime getRange StatementExpression MethodInvocation MemberReference context MemberReference begin MemberReference end MemberReference isExclusive init ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object case201_line806 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal "<=" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override BasicType int hashCode LocalVariableDeclaration BasicType int VariableDeclarator result MemberReference a StatementExpression Assignment MemberReference result BinaryOperation + BinaryOperation * Literal 31 MemberReference result MemberReference b = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair compat MemberReference CompatVersion RUBY1_9 ElementValuePair meta Literal true ReferenceType IRubyObject current FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation context MethodInvocation getCurrentContext MethodInvocation getFiber getRuntime	0
MethodDeclaration Modifier public computeDataFlowInfo FormalParameter ReferenceType List TypeArgument ReferenceType FlowGraphNode workList FormalParameter ReferenceType BitSet bbSet StatementExpression MethodInvocation bbSet MethodInvocation _bb getID clear LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType BasicBlock VariableDeclarator dsts ClassCreator ReferenceType ArrayList TypeArgument ReferenceType BasicBlock StatementExpression MethodInvocation initSolnForNode IfStatement BinaryOperation == MethodInvocation _prob getFlowDirection MemberReference DataFlowProblem.DF_Direction FORWARD BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType CFG_Edge VariableDeclarator e MethodInvocation _prob MemberReference _bb StatementExpression MethodInvocation MemberReference e MethodInvocation _prob MemberReference e getFlowGraphNode compute_MEET ForStatement EnhancedForControl VariableDeclaration ReferenceType CFG_Edge VariableDeclarator e MethodInvocation _prob MemberReference _bb StatementExpression MethodInvocation dsts MemberReference e _dst add IfStatement BinaryOperation == MethodInvocation _prob getFlowDirection MemberReference DataFlowProblem.DF_Direction BACKWARD BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType CFG_Edge VariableDeclarator e MethodInvocation _prob MemberReference _bb StatementExpression MethodInvocation MemberReference e MethodInvocation _prob MemberReference e _dst getFlowGraphNode compute_MEET ForStatement EnhancedForControl VariableDeclaration ReferenceType CFG_Edge VariableDeclarator e MethodInvocation _prob MemberReference _bb StatementExpression MethodInvocation dsts MemberReference e add BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Bidirectional data flow computation not implemented yet!" StatementExpression MethodInvocation finalizeSolnForNode LocalVariableDeclaration BasicType boolean VariableDeclarator changed MethodInvocation applyTransferFunction IfStatement MemberReference changed BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType BasicBlock VariableDeclarator d MemberReference dsts BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator id MethodInvocation d getID IfStatement BinaryOperation == MethodInvocation bbSet MemberReference id get Literal false BlockStatement StatementExpression MethodInvocation bbSet MemberReference id set StatementExpression MethodInvocation workList MethodInvocation _prob MemberReference d getFlowGraphNode add	1
MethodDeclaration Modifier public ReferenceType RaiseException newNameError FormalParameter ReferenceType String message FormalParameter ReferenceType String name FormalParameter ReferenceType Throwable origException FormalParameter BasicType boolean printWhenVerbose IfStatement BinaryOperation && BinaryOperation && MemberReference printWhenVerbose BinaryOperation != MemberReference origException Literal null This MethodInvocation isVerbose BlockStatement StatementExpression MethodInvocation origException MethodInvocation getErrorStream printStackTrace ReturnStatement ClassCreator ReferenceType RaiseException ClassCreator ReferenceType RubyNameError This MethodInvocation getNameError MemberReference message MemberReference name Literal true	0
MethodDeclaration Modifier public static BasicType long num2long FormalParameter ReferenceType IRubyObject arg IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyFixnum BlockStatement ReturnStatement Cast ReferenceType RubyFixnum MemberReference arg BlockStatement ReturnStatement MethodInvocation MemberReference arg other2long	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String name StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + Literal "allowBuiltin(" MemberReference name Literal ")" println ReturnStatement Literal true	1
MethodDeclaration Modifier private ReferenceType RubyArray makeShared ReturnStatement MethodInvocation MemberReference begin MemberReference realLength MethodInvocation getMetaClass makeShared	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "ceil" ReferenceType IRubyObject ceil ReturnStatement MethodInvocation MethodInvocation ceil	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference IRubyObject NULL_ARRAY call	0
MethodDeclaration Modifier static ReferenceType JavaProxy castJavaProxy FormalParameter ReferenceType IRubyObject self IfStatement BinaryOperation instanceof MemberReference self ReferenceType JavaProxy BlockStatement ThrowStatement MethodInvocation self MethodInvocation Literal "Java methods can only be on Java objects" newTypeError getRuntime LocalVariableDeclaration ReferenceType JavaProxy VariableDeclarator proxy Cast ReferenceType JavaProxy MemberReference self ReturnStatement MemberReference proxy	1
MethodDeclaration Modifier public ReferenceType Node getReceiverNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean shouldJIT SwitchStatement This SwitchStatementCase FORCE ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ElementValuePair meta Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject mkdir FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator stringArg MemberReference ArraySelector Literal 0 MethodInvocation convertToString args StatementExpression MethodInvocation runtime MemberReference stringArg checkSafeString ReturnStatement MethodInvocation MemberReference runtime MethodInvocation stringArg getUnicodeValue MemberReference args	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair rest Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ThrowStatement MethodInvocation recv MethodInvocation Literal not yet implemented" newNotImplementedError getRuntime	0
MethodDeclaration Modifier public final putMemoryIO FormalParameter BasicType long offset FormalParameter ReferenceType MemoryIO value ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "&" ReferenceType IRubyObject false_and FormalParameter ReferenceType IRubyObject f FormalParameter ReferenceType IRubyObject oth ReturnStatement MemberReference f	1
MethodDeclaration Modifier public static ReferenceType IRubyObject convertJavaToUsableRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference runtime MemberReference object trySimpleConversions IfStatement BinaryOperation != MemberReference result Literal null ReturnStatement MemberReference result LocalVariableDeclaration ReferenceType JavaConverter VariableDeclarator converter MethodInvocation MethodInvocation object getClass IfStatement BinaryOperation || BinaryOperation == MemberReference converter Literal null BinaryOperation == MemberReference converter MemberReference JAVA_DEFAULT_CONVERTER BlockStatement ReturnStatement MethodInvocation Java MemberReference runtime MemberReference object getInstance ReturnStatement MethodInvocation converter MemberReference runtime MemberReference object convert	1
MethodDeclaration Modifier public BasicType char receiveChar FormalParameter BasicType char c ReturnStatement MethodInvocation vri MemberReference c receiveChar	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString IfStatement MethodInvocation BlockStatement ReturnStatement BinaryOperation + Literal MethodInvocation required BlockStatement ReturnStatement Literal	0
MethodDeclaration Modifier public prepare FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope IfStatement MemberReference isSimple BlockStatement StatementExpression MethodInvocation scope MemberReference arg0 MemberReference arg1 setArgValues BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference self ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference block prepare IfStatement BinaryOperation != MethodInvocation getBlock Literal null StatementExpression MethodInvocation MemberReference scope MemberReference runtime MemberReference block processBlockArg	1
MethodDeclaration Modifier public protect FormalParameter ReferenceType BranchCallback regularCode FormalParameter ReferenceType BranchCallback FormalParameter ReferenceType Class ret LocalVariableDeclaration ReferenceType String VariableDeclarator mname MethodInvocation LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator mv ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation script MethodInvocation BinaryOperation | BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_SYNTHETIC MemberReference ACC_STATIC MemberReference mname MethodInvocation MemberReference ret BinaryOperation + BinaryOperation + Literal "L" MethodInvocation script getClassname Literal ";" ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig Literal null Literal null visitMethod getClassVisitor LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator old_method Literal null LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator var_old_method Literal null LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator inv_old_method Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator oldInNestedMethod MemberReference inNestedMethod StatementExpression Assignment MemberReference inNestedMethod Literal true = LocalVariableDeclaration ReferenceType Label VariableDeclarator oldLoopLabels MemberReference currentLoopLabels StatementExpression Assignment MemberReference currentLoopLabels Literal null = LocalVariableDeclaration BasicType int VariableDeclarator oldArgCount MemberReference argParamCount StatementExpression Assignment MemberReference argParamCount Literal 0 = TryStatement StatementExpression Assignment MemberReference old_method This MemberReference method = StatementExpression Assignment MemberReference var_old_method MethodInvocation MethodInvocation getMethodAdapter getVariableCompiler = StatementExpression Assignment MemberReference inv_old_method MethodInvocation MethodInvocation getMethodAdapter getInvocationCompiler = StatementExpression Assignment This MemberReference method MemberReference mv = StatementExpression MethodInvocation MethodInvocation MemberReference mv setMethodAdapter getVariableCompiler StatementExpression MethodInvocation MethodInvocation MemberReference mv setMethodAdapter getInvocationCompiler StatementExpression MethodInvocation mv visitCode StatementExpression MethodInvocation mv MemberReference StandardASMCompiler THREADCONTEXT_INDEX aload StatementExpression MethodInvocation mv dup StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType ThreadContext p Literal "getRuntime" MethodInvocation ClassReference ReferenceType Ruby sig invokevirtual StatementExpression MethodInvocation mv dup StatementExpression MethodInvocation mv MethodInvocation astore StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType Ruby p Literal "getNil" MethodInvocation ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation mv MethodInvocation astore StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType ThreadContext p Literal "getCurrentScope" MethodInvocation ClassReference ReferenceType DynamicScope sig invokevirtual StatementExpression MethodInvocation mv dup StatementExpression MethodInvocation mv MethodInvocation getDynamicScopeIndex astore StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType DynamicScope p Literal "getValues" MethodInvocation ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation mv MethodInvocation getVarsArrayIndex astore LocalVariableDeclaration ReferenceType Label VariableDeclarator codeBegin ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator codeEnd ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator ensureBegin ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator ensureEnd ClassCreator ReferenceType Label StatementExpression MethodInvocation method MemberReference codeBegin label StatementExpression MethodInvocation regularCode This branch StatementExpression MethodInvocation method MemberReference codeEnd label StatementExpression MethodInvocation This branch StatementExpression MethodInvocation mv areturn StatementExpression MethodInvocation method MemberReference ensureBegin label StatementExpression MethodInvocation method MethodInvocation getExceptionIndex astore StatementExpression MethodInvocation method MemberReference ensureEnd label StatementExpression MethodInvocation This branch StatementExpression MethodInvocation method MethodInvocation getExceptionIndex aload StatementExpression MethodInvocation method athrow StatementExpression MethodInvocation method MemberReference codeBegin MemberReference codeEnd MemberReference ensureBegin Literal null trycatch StatementExpression MethodInvocation method MemberReference ensureBegin MemberReference ensureEnd MemberReference ensureBegin Literal null trycatch StatementExpression MethodInvocation mv Literal 1 Literal 1 visitMaxs StatementExpression MethodInvocation mv visitEnd StatementExpression Assignment This MemberReference method MemberReference old_method = StatementExpression MethodInvocation MethodInvocation MemberReference var_old_method setMethodAdapter getVariableCompiler StatementExpression MethodInvocation MethodInvocation MemberReference inv_old_method setMethodAdapter getInvocationCompiler StatementExpression Assignment MemberReference inNestedMethod MemberReference oldInNestedMethod = StatementExpression Assignment MemberReference currentLoopLabels MemberReference oldLoopLabels = StatementExpression Assignment MemberReference argParamCount MemberReference oldArgCount = StatementExpression MethodInvocation method MemberReference StandardASMCompiler THIS aload StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation loadSelf IfStatement BinaryOperation instanceof This ReferenceType ChildScopedBodyCompiler BlockStatement StatementExpression MethodInvocation pushNull BlockStatement StatementExpression MethodInvocation loadBlock StatementExpression MethodInvocation method MethodInvocation script getClassname MemberReference mname MethodInvocation MemberReference ret BinaryOperation + BinaryOperation + Literal "L" MethodInvocation script getClassname Literal ";" ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType Block sig invokestatic	1
MethodDeclaration Modifier public static ReferenceType RubyString objAsString FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyString ReturnStatement Cast ReferenceType RubyString MemberReference obj LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator str MethodInvocation obj MemberReference context Literal "to_s" callMethod IfStatement BinaryOperation instanceof MemberReference str ReferenceType RubyString ReturnStatement Cast ReferenceType RubyString MethodInvocation obj anyToString IfStatement MethodInvocation obj isTaint StatementExpression MethodInvocation str Literal true setTaint ReturnStatement Cast ReferenceType RubyString MemberReference str	1
MethodDeclaration Modifier protected ReferenceType DynamicMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String methodName ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference self Literal 1 MemberReference methodName getMethod	0
MethodDeclaration Modifier public ReferenceType IRubyObject convertToArray FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject value ReturnStatement MethodInvocation ArgsUtil MemberReference runtime MemberReference value Literal true	0
MethodDeclaration Modifier public ReferenceType Object case17_line354 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation && BinaryOperation != Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal null BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals ReferenceType BeginNode BlockStatement StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType WhileNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getConditionNode Cast ReferenceType BeginNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal false = BlockStatement StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType WhileNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getConditionNode Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal true = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "binmode" ReferenceType IRubyObject binmode IfStatement MethodInvocation BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "closed stream" newIOError getRuntime ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType Object case393_line1489 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private BasicType int identifier FormalParameter BasicType int c FormalParameter BasicType boolean commandState IOException IfStatement MethodInvocation ! MemberReference c isIdentifierChar BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator badChar BinaryOperation + Literal "\\" MethodInvocation Integer BinaryOperation & MemberReference c Literal 0xff toOctalString ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID CHARACTER_BAD MethodInvocation getPosition BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Invalid char `" MemberReference badChar Literal "' ('" Cast BasicType char MemberReference c Literal "') in expression" MemberReference badChar StatementExpression MethodInvocation tokenBuffer Literal 0 setLength LocalVariableDeclaration BasicType int VariableDeclarator first MemberReference c StatementExpression Assignment MemberReference c MethodInvocation MemberReference c getIdentifier = LocalVariableDeclaration BasicType boolean VariableDeclarator lastBangOrPredicate Literal false IfStatement BinaryOperation || BinaryOperation == MemberReference c Literal '!' BinaryOperation == MemberReference c Literal '?' BlockStatement IfStatement MethodInvocation ! src Literal '=' peek BlockStatement StatementExpression Assignment MemberReference lastBangOrPredicate Literal true = StatementExpression MethodInvocation tokenBuffer Cast BasicType char MemberReference c append BlockStatement StatementExpression MethodInvocation src MemberReference c unread BlockStatement StatementExpression MethodInvocation src MemberReference c unread LocalVariableDeclaration BasicType int VariableDeclarator result Literal 0 LocalVariableDeclaration ReferenceType LexState VariableDeclarator last_state MemberReference lex_state IfStatement MemberReference lastBangOrPredicate BlockStatement StatementExpression Assignment MemberReference result MemberReference Tokens tFID = BlockStatement IfStatement BinaryOperation == MemberReference lex_state MemberReference LexState EXPR_FNAME BlockStatement IfStatement BinaryOperation == Assignment MemberReference c MethodInvocation src read = Literal '=' BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c2 MethodInvocation src read IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference c2 Literal '~' BinaryOperation != MemberReference c2 Literal '>' BinaryOperation || BinaryOperation != MemberReference c2 Literal '=' BinaryOperation && BinaryOperation == MemberReference c2 Literal '\n' MethodInvocation src Literal '>' peek BlockStatement StatementExpression Assignment MemberReference result MemberReference Tokens tIDENTIFIER = StatementExpression MethodInvocation tokenBuffer Cast BasicType char MemberReference c append StatementExpression MethodInvocation src MemberReference c2 unread BlockStatement StatementExpression MethodInvocation src MemberReference c2 unread StatementExpression MethodInvocation src MemberReference c unread BlockStatement StatementExpression MethodInvocation src MemberReference c unread IfStatement BinaryOperation && BinaryOperation == MemberReference result Literal 0 MethodInvocation Character MemberReference first isUpperCase BlockStatement StatementExpression Assignment MemberReference result MemberReference Tokens tCONSTANT = BlockStatement StatementExpression Assignment MemberReference result MemberReference Tokens tIDENTIFIER = LocalVariableDeclaration ReferenceType String VariableDeclarator tempVal MethodInvocation tokenBuffer MethodInvocation intern toString IfStatement BinaryOperation && MemberReference ! isOneEight BinaryOperation || BinaryOperation || BinaryOperation && BinaryOperation == MemberReference lex_state MemberReference LexState EXPR_BEG MemberReference ! commandState BinaryOperation == MemberReference lex_state MemberReference LexState EXPR_ARG BinaryOperation == MemberReference lex_state MemberReference LexState EXPR_CMDARG BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c2 MethodInvocation src read IfStatement BinaryOperation && BinaryOperation == MemberReference c2 Literal ':' MethodInvocation ! src Literal ':' peek BlockStatement StatementExpression MethodInvocation src MemberReference c2 unread StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = StatementExpression MethodInvocation src read StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token MemberReference tempVal MethodInvocation getPosition = ReturnStatement MemberReference Tokens tLABEL StatementExpression MethodInvocation src MemberReference c2 unread IfStatement BinaryOperation != MemberReference lex_state MemberReference LexState EXPR_DOT BlockStatement LocalVariableDeclaration ReferenceType Keyword VariableDeclarator keyword MethodInvocation MemberReference tempVal IfStatement BinaryOperation && BinaryOperation != MemberReference keyword Literal null BinaryOperation || BinaryOperation != MemberReference keyword MemberReference Keyword __ENCODING__ MemberReference ! isOneEight BlockStatement LocalVariableDeclaration ReferenceType LexState VariableDeclarator state MemberReference lex_state StatementExpression Assignment MemberReference lex_state MemberReference keyword state = IfStatement BinaryOperation == MemberReference state MemberReference LexState EXPR_FNAME BlockStatement StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token MemberReference keyword name MethodInvocation getPosition = BlockStatement StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token MemberReference tempVal MethodInvocation getPosition = IfStatement BinaryOperation == MemberReference keyword id0 MemberReference Tokens kDO BlockStatement StatementExpression Assignment MemberReference commandStart Literal true = IfStatement BinaryOperation && BinaryOperation && MemberReference ! isOneEight BinaryOperation > MemberReference leftParenBegin Literal 0 BinaryOperation == MemberReference leftParenBegin MemberReference parenNest BlockStatement StatementExpression Assignment MemberReference leftParenBegin Literal 0 = StatementExpression MemberReference -- parenNest ReturnStatement MemberReference Tokens kDO_LAMBDA IfStatement MethodInvocation conditionState isInState ReturnStatement MemberReference Tokens kDO_COND IfStatement BinaryOperation && BinaryOperation != MemberReference state MemberReference LexState EXPR_CMDARG MethodInvocation cmdArgumentState isInState BlockStatement ReturnStatement MemberReference Tokens kDO_BLOCK IfStatement BinaryOperation || BinaryOperation == MemberReference state MemberReference LexState EXPR_ENDARG BinaryOperation && MemberReference ! isOneEight BinaryOperation == MemberReference state MemberReference LexState EXPR_BEG ReturnStatement MemberReference Tokens kDO_BLOCK ReturnStatement MemberReference Tokens kDO IfStatement BinaryOperation || BinaryOperation == MemberReference state MemberReference LexState EXPR_BEG BinaryOperation && MemberReference ! isOneEight BinaryOperation == MemberReference state MemberReference LexState EXPR_VALUE ReturnStatement MemberReference keyword id0 IfStatement BinaryOperation != MemberReference keyword id0 MemberReference keyword id1 StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = ReturnStatement MemberReference keyword id1 IfStatement BinaryOperation || BinaryOperation || MethodInvocation isBEG BinaryOperation == MemberReference lex_state MemberReference LexState EXPR_DOT MethodInvocation isARG BlockStatement StatementExpression Assignment MemberReference lex_state TernaryExpression MemberReference commandState MemberReference LexState EXPR_CMDARG MemberReference LexState EXPR_ARG = BlockStatement StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_END = ReturnStatement MethodInvocation MemberReference last_state MemberReference result MemberReference tempVal identifierToken	1
MethodDeclaration Modifier private static generateConstructors FormalParameter ReferenceType Class superClass FormalParameter ReferenceType Type selfType FormalParameter ReferenceType ClassVisitor cw LocalVariableDeclaration ReferenceType Constructor VariableDeclarator cons MethodInvocation superClass getDeclaredConstructors ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference cons length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Constructor VariableDeclarator constructor MemberReference ArraySelector MemberReference i cons StatementExpression MethodInvocation MemberReference selfType MemberReference constructor MemberReference cw generateConstructor	1
MethodDeclaration Modifier public BasicType boolean remove FormalParameter ReferenceType RubyHash hash FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType RubyHashEntry ReturnStatement Literal false ReturnStatement BinaryOperation != MethodInvocation hash Cast ReferenceType RubyHashEntry MemberReference o internalDeleteEntry MemberReference NO_ENTRY	1
MethodDeclaration Modifier protected ReferenceType RubyArray buildRubyArray FormalParameter ReferenceType IRubyObject constructors LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator result MethodInvocation MethodInvocation MemberReference constructors length newArray getRuntime ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference constructors length MemberReference ++ i BlockStatement StatementExpression MethodInvocation result MemberReference ArraySelector MemberReference i constructors append ReturnStatement MemberReference result	1
MethodDeclaration Modifier private final static BasicType long longValue FormalParameter ReferenceType RubyString parameter LocalVariableDeclaration ReferenceType CharSequence VariableDeclarator cs MethodInvocation parameter asJavaString IfStatement BinaryOperation == MethodInvocation cs length Literal 1 BlockStatement ReturnStatement MethodInvocation cs Literal 0 charAt ThrowStatement MethodInvocation parameter MethodInvocation BinaryOperation + BinaryOperation + Literal "Value " MemberReference parameter Literal " is not an integer" newRangeError getRuntime	1
MethodDeclaration Modifier public final putShort FormalParameter BasicType long offset FormalParameter BasicType short value StatementExpression MethodInvocation MemberReference offset Literal 2 checkBounds StatementExpression MethodInvocation IO MemberReference buffer MethodInvocation MemberReference offset index MemberReference value putInt16	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType MemberReference runtime MemberReference klass	0
MethodDeclaration Modifier public ReferenceType Object case475_line1803 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Literal null Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null Literal null Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Operand buildDRegexp FormalParameter ReferenceType DRegexpNode dregexpNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Operand VariableDeclarator strPieces ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Operand ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator n MethodInvocation dregexpNode childNodes StatementExpression MethodInvocation strPieces MethodInvocation MemberReference n MemberReference s build add ReturnStatement ClassCreator ReferenceType Regexp ClassCreator ReferenceType CompoundString MemberReference strPieces MethodInvocation dregexpNode getOptions	1
MethodDeclaration Modifier private static writeExp FormalParameter ReferenceType ByteList buf FormalParameter BasicType int exponent FormalParameter BasicType byte expChar StatementExpression MethodInvocation buf MemberReference expChar append StatementExpression MethodInvocation buf TernaryExpression BinaryOperation >= MemberReference exponent Literal 0 Literal '+' Literal '-' append IfStatement BinaryOperation < MemberReference exponent Literal 0 BlockStatement StatementExpression Assignment MemberReference exponent MemberReference - exponent = IfStatement BinaryOperation > MemberReference exponent Literal 99 BlockStatement StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation / MemberReference exponent Literal 100 Literal '0' append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation / BinaryOperation % MemberReference exponent Literal 100 Literal 10 Literal '0' append BlockStatement StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation / MemberReference exponent Literal 10 Literal '0' append StatementExpression MethodInvocation buf BinaryOperation + BinaryOperation % MemberReference exponent Literal 10 Literal '0' append	0
MethodDeclaration Modifier private BasicType boolean fastPackedContains FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator table MemberReference packedVTable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference vTableSize MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i table MemberReference name ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Node getBodyNode ReturnStatement MemberReference bodyNode	0
MethodDeclaration Modifier public windowClosing FormalParameter ReferenceType WindowEvent e StatementExpression MethodInvocation tar shutdown	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg1 StatementExpression MethodInvocation MethodInvocation MemberReference self MemberReference arg1 set MethodInvocation self MethodInvocation getRealClass getMetaClass verifyAccessor ReturnStatement MemberReference arg1	0
MethodDeclaration Modifier public ReferenceType Arity getArity IfStatement BinaryOperation > MemberReference optionalArgs Literal 0 BlockStatement IfStatement BinaryOperation >= MemberReference restArg Literal 0 BlockStatement ReturnStatement MethodInvocation Arity optional ReturnStatement MethodInvocation Arity MemberReference requiredArgs required BlockStatement IfStatement BinaryOperation >= MemberReference restArg Literal 0 BlockStatement ReturnStatement MethodInvocation Arity optional ReturnStatement MethodInvocation Arity MemberReference requiredArgs fixed	0
MethodDeclaration setProc FormalParameter ReferenceType RubyClass procClass StatementExpression Assignment This MemberReference procClass MemberReference procClass =	0
MethodDeclaration Modifier public FormalParameter BasicType long StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "isdst" Literal ReferenceType RubyBoolean isdst ReturnStatement MethodInvocation MethodInvocation MethodInvocation ! dt MethodInvocation MethodInvocation dt getMillis isStandardOffset getZone newBoolean getRuntime	0
MethodDeclaration Modifier public ReferenceType Object case31_line429 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals node_assign = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static BasicType int codePoint FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Encoding enc FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int end IfStatement BinaryOperation >= MemberReference p MemberReference end ThrowStatement MethodInvocation runtime Literal "empty string" newArgumentError LocalVariableDeclaration BasicType int VariableDeclarator cl MethodInvocation MemberReference enc MemberReference bytes MemberReference p MemberReference end preciseLength IfStatement BinaryOperation <= MemberReference cl Literal 0 ThrowStatement MethodInvocation runtime BinaryOperation + Literal "invalid byte in " MemberReference enc newArgumentError ReturnStatement MethodInvocation enc MemberReference bytes MemberReference p MemberReference end mbcToCode	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Join join FormalParameter ReferenceType Object args ReturnStatement MemberReference ArraySelector Literal 1 args	0
MethodDeclaration Modifier public encode FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject o FormalParameter ReferenceType ByteList result LocalVariableDeclaration BasicType int VariableDeclarator s TernaryExpression BinaryOperation == MemberReference o MethodInvocation runtime getNil Literal 0 Cast BasicType int MethodInvocation RubyNumeric MemberReference o num2long IfStatement BinaryOperation == MemberReference Platform BYTE_ORDER MemberReference Platform BIG_ENDIAN StatementExpression MethodInvocation MemberReference result MemberReference s encodeIntBigEndian StatementExpression MethodInvocation MemberReference result MemberReference s encodeIntLittleEndian	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject step FormalParameter ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType long VariableDeclarator unit MethodInvocation RubyNumeric MemberReference step num2long IfStatement BinaryOperation < MemberReference unit Literal 0 ThrowStatement MethodInvocation runtime Literal "step can't be negative" newArgumentError IfStatement BinaryOperation && BinaryOperation instanceof MemberReference begin ReferenceType RubyFixnum BinaryOperation instanceof MemberReference end ReferenceType RubyFixnum BlockStatement IfStatement BinaryOperation == MemberReference unit Literal 0 ThrowStatement MethodInvocation runtime Literal "step can't be 0" newArgumentError StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference unit MemberReference block fixnumStep BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation begin checkStringType IfStatement MethodInvocation ! tmp isNil BlockStatement IfStatement BinaryOperation == MemberReference unit Literal 0 ThrowStatement MethodInvocation runtime Literal "step can't be 0" newArgumentError LocalVariableDeclaration ReferenceType StepBlockCallBack VariableDeclarator callback ClassCreator ReferenceType StepBlockCallBack MemberReference block MethodInvocation RubyFixnum MemberReference runtime one MemberReference step LocalVariableDeclaration ReferenceType Block VariableDeclarator blockCallback MethodInvocation CallBlock This MethodInvocation runtime getRange MethodInvocation Arity singleArgument MemberReference callback MemberReference context newCallClosure StatementExpression Cast ReferenceType RubyString MemberReference tmp IfStatement BinaryOperation instanceof MemberReference begin ReferenceType RubyNumeric BlockStatement IfStatement MethodInvocation MemberReference context MemberReference step MethodInvocation RubyFixnum MemberReference runtime zero equalInternal ThrowStatement MethodInvocation runtime Literal "step can't be 0" newArgumentError StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference step MemberReference block numericStep BlockStatement IfStatement BinaryOperation == MemberReference unit Literal 0 ThrowStatement MethodInvocation runtime Literal "step can't be 0" newArgumentError IfStatement MethodInvocation ! begin Literal "succ" respondsTo ThrowStatement MethodInvocation runtime BinaryOperation + Literal "can't iterate from " MethodInvocation begin MethodInvocation getName getMetaClass newTypeError StatementExpression MethodInvocation MemberReference context ClassCreator ReferenceType StepBlockCallBack MemberReference block MethodInvocation RubyFixnum MemberReference runtime one MemberReference step rangeEach ReturnStatement This	1
MethodDeclaration Modifier public static ReferenceType IRubyObject reject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType RubyArray VariableDeclarator result MethodInvocation runtime newArray StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation ! block MethodInvocation isTrue MemberReference ctx MemberReference larg yield BlockStatement SynchronizedStatement MemberReference result StatementExpression MethodInvocation result MemberReference larg append ReturnStatement MethodInvocation runtime getNil callEach ReturnStatement MemberReference result	0
MethodDeclaration Modifier public FormalParameter ReferenceType StatementExpression Assignment This MemberReference staticScope MemberReference =	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public ReferenceType Node getEnsureNode ReturnStatement MemberReference ensureNode	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation SuperMethodInvocation toString	0
MethodDeclaration Modifier public ReferenceType Object case406_line1535 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final ReferenceType RubyString cat FormalParameter ReferenceType ByteList str StatementExpression MethodInvocation BinaryOperation + MemberReference value realSize MemberReference str realSize modify StatementExpression MethodInvocation System MemberReference str bytes MemberReference str begin MemberReference value bytes BinaryOperation + MemberReference value begin MemberReference value realSize MemberReference str realSize arraycopy StatementExpression Assignment MemberReference value realSize MemberReference str realSize += ReturnStatement This	0
MethodDeclaration Modifier public static ReferenceType RubyString newUsAsciiStringShared FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList bytes LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MemberReference runtime MemberReference bytes MemberReference USASCIIEncoding INSTANCE MemberReference CR_7BIT StatementExpression Assignment MemberReference str shareLevel MemberReference SHARE_LEVEL_BYTELIST = ReturnStatement MemberReference str	0
MethodDeclaration Modifier private ReferenceType IRubyObject op_aref19 FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int idx LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator str MethodInvocation MemberReference runtime MemberReference idx Literal 1 substr19 ReturnStatement TernaryExpression BinaryOperation && MethodInvocation ! str isNil BinaryOperation == Cast ReferenceType RubyString MemberReference str Literal 0 MethodInvocation runtime getNil MemberReference str	1
MethodDeclaration Modifier public BasicType boolean moreImportantThan FormalParameter ReferenceType AssignedName other ReturnStatement BinaryOperation || BinaryOperation == MemberReference other Literal null BinaryOperation > MemberReference other.type value MemberReference value	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference binding MemberReference type	1
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object array FormalParameter BasicType int i ReturnStatement MethodInvocation RubyBoolean MemberReference runtime Cast BasicType boolean MemberReference array newBoolean	0
MethodDeclaration Modifier final public static ReferenceType getInstance ReturnStatement MemberReference INSTANCE	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation opAsgnNode getReceiverNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "read" ElementValuePair optional Literal 2 ReferenceType IRubyObject read FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation ArgsFileData MemberReference recv getDataFrom LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp VariableDeclarator str VariableDeclarator length LocalVariableDeclaration BasicType long VariableDeclarator len Literal 0 IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement StatementExpression Assignment MemberReference length MemberReference ArraySelector Literal 0 args = StatementExpression Assignment MemberReference str TernaryExpression BinaryOperation > MemberReference args length Literal 1 MemberReference ArraySelector Literal 1 args MethodInvocation runtime getNil = BlockStatement StatementExpression Assignment MemberReference length MethodInvocation runtime getNil = StatementExpression Assignment MemberReference str MethodInvocation runtime getNil = IfStatement MethodInvocation ! length isNil StatementExpression Assignment MemberReference len MethodInvocation RubyNumeric MemberReference length num2long = IfStatement MethodInvocation ! str isNil BlockStatement StatementExpression Assignment MemberReference str MethodInvocation str convertToString = StatementExpression Cast ReferenceType RubyString MemberReference str StatementExpression Cast ReferenceType RubyString MemberReference str StatementExpression Assignment MemberReference ArraySelector Literal 1 args MethodInvocation runtime getNil = WhileStatement Literal true BlockStatement IfStatement MethodInvocation ! data MemberReference context next_argv ReturnStatement MemberReference str IfStatement BinaryOperation instanceof MemberReference data currentFile ReferenceType RubyIO BlockStatement StatementExpression Assignment MemberReference tmp MethodInvocation data.currentFile MemberReference context Literal "read" MemberReference args callMethod = BlockStatement StatementExpression Assignment MemberReference tmp Cast ReferenceType RubyIO MemberReference data currentFile = IfStatement MethodInvocation str isNil BlockStatement StatementExpression Assignment MemberReference str MemberReference tmp = IfStatement MethodInvocation ! tmp isNil BlockStatement StatementExpression Cast ReferenceType RubyString MemberReference str IfStatement BinaryOperation || MethodInvocation tmp isNil MethodInvocation length isNil BlockStatement IfStatement BinaryOperation != MemberReference data next_p Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference data currentFile argf_close StatementExpression Assignment MemberReference data next_p Literal 1 = ContinueStatement IfStatement BinaryOperation >= MemberReference args length Literal 1 BlockStatement IfStatement BinaryOperation < Cast ReferenceType RubyString MemberReference str MemberReference len BlockStatement StatementExpression Assignment MemberReference len Cast ReferenceType RubyString MemberReference str -= StatementExpression Assignment MemberReference ArraySelector Literal 0 args MethodInvocation runtime MemberReference len newFixnum = ContinueStatement ReturnStatement MemberReference str	1
MethodDeclaration Modifier public ReferenceType Node getReceiverNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object case304_line1137 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ForNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 8 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 7 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "zip" ElementValuePair rest Literal true ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType IRubyObject args FormalParameter Modifier final ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference args MemberReference block Literal "to_ary" zipCommon	0
MethodDeclaration Modifier public ReferenceType Block getBlock ReturnStatement MemberReference block	0
MethodDeclaration Modifier public static ReferenceType IRubyObject convertJavaToUsableRubyObjectWithConverter FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object FormalParameter ReferenceType JavaConverter converter LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference runtime MemberReference object trySimpleConversions IfStatement BinaryOperation != MemberReference result Literal null ReturnStatement MemberReference result IfStatement BinaryOperation || BinaryOperation == MemberReference converter Literal null BinaryOperation == MemberReference converter MemberReference JAVA_DEFAULT_CONVERTER BlockStatement ReturnStatement MethodInvocation Java MemberReference runtime MemberReference object getInstance ReturnStatement MethodInvocation converter MemberReference runtime MemberReference object convert	1
MethodDeclaration Modifier public ReferenceType IRubyObject getValueDepthZeroOrNil FormalParameter BasicType int offset FormalParameter ReferenceType IRubyObject nil ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + This MethodInvocation getClass MethodInvocation getSimpleName Literal " does not support scopes with any variables"	1
MethodDeclaration Modifier public BasicType int getDFVarsCount ReturnStatement MethodInvocation _dfVars size	0
MethodDeclaration Modifier public static createNKF FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator nkfModule MethodInvocation runtime Literal defineModule StatementExpression MethodInvocation nkfModule Literal "AUTO" MethodInvocation RubyFixnum MemberReference runtime MethodInvocation AUTO getValue newFixnum defineConstant StatementExpression MethodInvocation nkfModule Literal MethodInvocation RubyFixnum MemberReference runtime MethodInvocation JIS getValue newFixnum defineConstant StatementExpression MethodInvocation nkfModule Literal MethodInvocation RubyFixnum MemberReference runtime MethodInvocation EUC getValue newFixnum defineConstant StatementExpression MethodInvocation nkfModule Literal MethodInvocation RubyFixnum MemberReference runtime MethodInvocation SJIS getValue newFixnum defineConstant StatementExpression MethodInvocation nkfModule Literal "BINARY" MethodInvocation RubyFixnum MemberReference runtime MethodInvocation BINARY getValue newFixnum defineConstant StatementExpression MethodInvocation nkfModule Literal "NOCONV" MethodInvocation RubyFixnum MemberReference runtime MethodInvocation NOCONV getValue newFixnum defineConstant StatementExpression MethodInvocation nkfModule Literal "UNKNOWN" MethodInvocation RubyFixnum MemberReference runtime MethodInvocation UNKNOWN getValue newFixnum defineConstant StatementExpression MethodInvocation nkfModule Literal "ASCII" MethodInvocation RubyFixnum MemberReference runtime MethodInvocation ASCII getValue newFixnum defineConstant StatementExpression MethodInvocation nkfModule Literal "UTF8" MethodInvocation RubyFixnum MemberReference runtime MethodInvocation UTF8 getValue newFixnum defineConstant StatementExpression MethodInvocation nkfModule Literal "UTF16" MethodInvocation RubyFixnum MemberReference runtime MethodInvocation UTF16 getValue newFixnum defineConstant StatementExpression MethodInvocation nkfModule Literal MethodInvocation RubyFixnum MemberReference runtime MethodInvocation UTF32 getValue newFixnum defineConstant StatementExpression MethodInvocation nkfModule Literal "OTHER" MethodInvocation RubyFixnum MemberReference runtime MethodInvocation OTHER getValue newFixnum defineConstant LocalVariableDeclaration ReferenceType RubyString VariableDeclarator version MethodInvocation runtime Literal "2.0.7 newString LocalVariableDeclaration ReferenceType RubyString VariableDeclarator nkfVersion MethodInvocation runtime Literal newString LocalVariableDeclaration ReferenceType RubyString VariableDeclarator nkfDate MethodInvocation runtime Literal newString LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation runtime getCurrentContext StatementExpression MethodInvocation version MemberReference context freeze StatementExpression MethodInvocation nkfVersion MemberReference context freeze StatementExpression MethodInvocation nkfDate MemberReference context freeze StatementExpression MethodInvocation nkfModule ClassReference ReferenceType RubyNKF defineAnnotatedMethods	0
MethodDeclaration Modifier public BasicType boolean headerIsWritten ReturnStatement MemberReference headerIsWritten	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "remove_method" ElementValuePair required Literal 1 ElementValuePair rest Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType RubyModule remove_method FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference ArraySelector MemberReference i MethodInvocation asJavaString args removeMethod ReturnStatement This	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "completion_append_character=" ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject s_set_completion_append_character FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject achar Exception ReturnStatement MethodInvocation recv MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public setLeftParenBegin FormalParameter BasicType int value StatementExpression Assignment MemberReference leftParenBegin MemberReference value =	0
MethodDeclaration Modifier private ReferenceType IRubyObject powerFixnum19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType long VariableDeclarator a MemberReference value LocalVariableDeclaration BasicType long VariableDeclarator b Cast ReferenceType RubyFixnum MemberReference other IfStatement BinaryOperation < MemberReference b Literal 0 BlockStatement ReturnStatement MethodInvocation RubyRational MethodInvocation MemberReference context Literal "**" MemberReference other callMethod MemberReference runtime This newRationalRaw IfStatement BinaryOperation == MemberReference b Literal 0 BlockStatement ReturnStatement MethodInvocation RubyFixnum MemberReference runtime one IfStatement BinaryOperation == MemberReference b Literal 1 BlockStatement ReturnStatement This IfStatement BinaryOperation == MemberReference a Literal 0 BlockStatement ReturnStatement TernaryExpression BinaryOperation > MemberReference b Literal 0 MethodInvocation RubyFixnum MemberReference runtime zero MethodInvocation RubyNumeric MemberReference runtime BinaryOperation / Literal 1.0 Literal 0.0 dbl2num IfStatement BinaryOperation == MemberReference a Literal 1 BlockStatement ReturnStatement MethodInvocation RubyFixnum MemberReference runtime one IfStatement BinaryOperation == MemberReference a Literal - 1 BlockStatement ReturnStatement TernaryExpression BinaryOperation == BinaryOperation % MemberReference b Literal 2 Literal 0 MethodInvocation RubyFixnum MemberReference runtime one MethodInvocation RubyFixnum MemberReference runtime minus_one ReturnStatement MethodInvocation Numeric MemberReference context MemberReference a MemberReference b int_pow	1
MethodDeclaration Modifier public attach FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Applet applet LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator wrappedApplet MethodInvocation MemberReference runtime MemberReference applet javaToRuby StatementExpression MethodInvocation runtime Literal MemberReference wrappedApplet defineGlobalConstant StatementExpression MethodInvocation wrappedApplet MethodInvocation ClassReference ReferenceType defineAnnotatedMethods getMetaClass	0
MethodDeclaration Modifier public final BasicType boolean isUndefined ReturnStatement BinaryOperation == This MemberReference INSTANCE	0
MethodDeclaration Modifier public ReferenceType IR_Method getClassMethod FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType IR_Method VariableDeclarator m MemberReference _methods IfStatement BinaryOperation && MemberReference ! m _isInstanceMethod MethodInvocation MemberReference name equals ReturnStatement MemberReference m ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getSingletonMethod FormalParameter ReferenceType String method ReturnStatement ClassCreator ReferenceType ReflectionCallback MemberReference type MemberReference method MemberReference NULL_CLASS_ARRAY Literal false Literal true MethodInvocation Arity noArguments Literal false	1
MethodDeclaration Modifier public BasicType boolean isConstant ForStatement EnhancedForControl VariableDeclaration ReferenceType Operand VariableDeclarator o MemberReference _elts IfStatement MethodInvocation ! o isConstant ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType Object case189_line766 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal "**" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public checkReadable FormalParameter ReferenceType Ruby runtime IOException BadDescriptorException PipeException InvalidValueException StatementExpression MethodInvocation MemberReference runtime checkClosed IfStatement BinaryOperation == BinaryOperation & MemberReference mode MemberReference READABLE Literal 0 BlockStatement ThrowStatement MethodInvocation runtime Literal "not opened for reading" newIOError IfStatement BinaryOperation && BinaryOperation && BinaryOperation || BinaryOperation != BinaryOperation & MemberReference mode MemberReference Literal 0 BinaryOperation == BinaryOperation & MemberReference mode BinaryOperation | MemberReference SYNCWRITE MemberReference RBUF MemberReference SYNCWRITE MethodInvocation ! mainStream feof BinaryOperation == MemberReference pipeStream Literal null BlockStatement TryStatement StatementExpression MethodInvocation Literal 0 MemberReference Stream SEEK_CUR seek CatchClause CatchClauseParameter IOException ioe	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyObject superclass ReturnStatement MethodInvocation JavaClass MethodInvocation getRuntime MethodInvocation getSuperclass get	0
MethodDeclaration Modifier public FormalParameter BasicType int arg0 FormalParameter BasicType int arg1 StatementExpression MethodInvocation MethodInvocation MemberReference arg0 MemberReference arg1 getMethodVisitor	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "zero?" ReferenceType IRubyObject zero_p ReturnStatement MethodInvocation RubyBoolean MethodInvocation getRuntime BinaryOperation == MemberReference value Literal 0 newBoolean	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isKindOf FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyIO	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject to_f ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime Cast BasicType double MemberReference value newFloat	1
MethodDeclaration Modifier public ReferenceType RaiseException newConcurrencyError FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation getConcurrencyError MemberReference message newRaiseException	0
MethodDeclaration Modifier static ReferenceType RubyArray str_to_c_internal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType RubyString VariableDeclarator s MethodInvocation recv convertToString LocalVariableDeclaration ReferenceType ByteList VariableDeclarator bytes MethodInvocation s getByteList LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference bytes realSize Literal 0 ReturnStatement MethodInvocation runtime MethodInvocation runtime getNil MemberReference recv newArray LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator sr VariableDeclarator si VariableDeclarator re StatementExpression Assignment MemberReference sr Assignment MemberReference si Assignment MemberReference re MethodInvocation runtime getNil = = = LocalVariableDeclaration BasicType boolean VariableDeclarator po Literal false LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator m MethodInvocation RubyRegexp MethodInvocation MemberReference context Literal "match" MemberReference s callMethod MemberReference runtime MemberReference Numeric.ComplexPatterns comp_pat0 newDummyRegexp IfStatement MethodInvocation ! m isNil BlockStatement StatementExpression Assignment MemberReference sr MethodInvocation m MemberReference context Literal "[]" MethodInvocation RubyFixnum MemberReference runtime one callMethod = StatementExpression Assignment MemberReference si MethodInvocation m MemberReference context Literal "[]" MethodInvocation RubyFixnum MemberReference runtime two callMethod = StatementExpression Assignment MemberReference re MethodInvocation m MemberReference context Literal "post_match" callMethod = StatementExpression Assignment MemberReference po Literal true = IfStatement MethodInvocation m isNil BlockStatement StatementExpression Assignment MemberReference m MethodInvocation RubyRegexp MethodInvocation MemberReference context Literal "match" MemberReference s callMethod MemberReference runtime MemberReference Numeric.ComplexPatterns comp_pat1 newDummyRegexp = IfStatement MethodInvocation ! m isNil BlockStatement StatementExpression Assignment MemberReference sr MethodInvocation runtime getNil = StatementExpression Assignment MemberReference si MethodInvocation m MemberReference context Literal "[]" MethodInvocation RubyFixnum MemberReference runtime one callMethod = IfStatement MethodInvocation si isNil StatementExpression Assignment MemberReference si MethodInvocation runtime newString = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator t MethodInvocation m MemberReference context Literal "[]" MethodInvocation RubyFixnum MemberReference runtime two callMethod IfStatement MethodInvocation t isNil StatementExpression Assignment MemberReference t MethodInvocation runtime ClassCreator ReferenceType ByteList ArrayCreator BasicType byte ArrayInitializer Literal '1' newString = StatementExpression MethodInvocation si MethodInvocation MethodInvocation t MethodInvocation getByteList convertToString cat convertToString StatementExpression Assignment MemberReference re MethodInvocation m MemberReference context Literal "post_match" callMethod = StatementExpression Assignment MemberReference po Literal false = IfStatement MethodInvocation m isNil BlockStatement StatementExpression Assignment MemberReference m MethodInvocation RubyRegexp MethodInvocation MemberReference context Literal "match" MemberReference s callMethod MemberReference runtime MemberReference Numeric.ComplexPatterns comp_pat2 newDummyRegexp = IfStatement MethodInvocation m isNil ReturnStatement MethodInvocation runtime MethodInvocation runtime getNil MemberReference recv newArray StatementExpression Assignment MemberReference sr MethodInvocation m MemberReference context Literal "[]" MethodInvocation RubyFixnum MemberReference runtime one callMethod = IfStatement MethodInvocation m MethodInvocation isNil MemberReference context Literal "[]" MethodInvocation RubyFixnum MemberReference runtime two callMethod BlockStatement StatementExpression Assignment MemberReference si MethodInvocation runtime getNil = BlockStatement StatementExpression Assignment MemberReference si MethodInvocation m MemberReference context Literal "[]" MethodInvocation RubyFixnum MemberReference runtime three callMethod = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator t MethodInvocation m MemberReference context Literal "[]" MethodInvocation RubyFixnum MemberReference runtime four callMethod IfStatement MethodInvocation t isNil StatementExpression Assignment MemberReference t MethodInvocation runtime ClassCreator ReferenceType ByteList ArrayCreator BasicType byte ArrayInitializer Literal '1' newString = StatementExpression MethodInvocation si MethodInvocation MethodInvocation t MethodInvocation getByteList convertToString cat convertToString StatementExpression Assignment MemberReference re MethodInvocation m MemberReference context Literal "post_match" callMethod = StatementExpression Assignment MemberReference po Literal false = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator r MethodInvocation RubyFixnum MemberReference runtime zero LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator i MemberReference r IfStatement MethodInvocation ! sr isNil BlockStatement IfStatement MethodInvocation sr MethodInvocation isTrue MemberReference context Literal "include?" MethodInvocation runtime ClassCreator ReferenceType ByteList ArrayCreator BasicType byte ArrayInitializer Literal '/' newString callMethod BlockStatement StatementExpression Assignment MemberReference r MethodInvocation MemberReference context MemberReference sr f_to_r = IfStatement MethodInvocation MethodInvocation isTrue MemberReference context MethodInvocation sr MemberReference context Literal "count" MethodInvocation runtime Literal ".eE" newString callMethod MethodInvocation RubyFixnum MemberReference runtime zero f_gt_p BlockStatement StatementExpression Assignment MemberReference r MethodInvocation MemberReference context MemberReference sr f_to_f = BlockStatement StatementExpression Assignment MemberReference r MethodInvocation MemberReference context MemberReference sr f_to_i = IfStatement MethodInvocation ! si isNil BlockStatement IfStatement MethodInvocation si MethodInvocation isTrue MemberReference context Literal "include?" MethodInvocation runtime ClassCreator ReferenceType ByteList ArrayCreator BasicType byte ArrayInitializer Literal '/' newString callMethod BlockStatement StatementExpression Assignment MemberReference i MethodInvocation MemberReference context MemberReference si f_to_r = IfStatement MethodInvocation MethodInvocation isTrue MemberReference context MethodInvocation si MemberReference context Literal "count" MethodInvocation runtime Literal ".eE" newString callMethod MethodInvocation RubyFixnum MemberReference runtime zero f_gt_p BlockStatement StatementExpression Assignment MemberReference i MethodInvocation MemberReference context MemberReference si f_to_f = BlockStatement StatementExpression Assignment MemberReference i MethodInvocation MemberReference context MemberReference si f_to_i = ReturnStatement MethodInvocation runtime TernaryExpression MemberReference po MethodInvocation MemberReference context MemberReference r MemberReference i newComplexPolar MethodInvocation MemberReference context MemberReference r MemberReference i newComplexCanonicalize MemberReference re newArray	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "readline" ElementValuePair optional Literal 1 ReferenceType IRubyObject readline FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator line MethodInvocation MemberReference context MemberReference recv MemberReference args gets IfStatement MethodInvocation line isNil BlockStatement ThrowStatement MethodInvocation context MethodInvocation newEOFError getRuntime ReturnStatement MemberReference line	0
MethodDeclaration Modifier public ReferenceType Object case344_line1287 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null new_fcall = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType int getNumberOfVariables ReturnStatement MemberReference length	0
MethodDeclaration Modifier public ReferenceType IRubyObject group FormalParameter BasicType int n ReturnStatement MethodInvocation RubyRegexp MemberReference n This nth_match	0
MethodDeclaration Modifier public Annotation Override BasicType int hashCode ReturnStatement MethodInvocation entry hashCode	0
MethodDeclaration Modifier public ReferenceType Object case194_line785 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal "|" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean isWritable ReturnStatement BinaryOperation instanceof MemberReference channel ReferenceType WritableByteChannel	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType RubyFixnum to_i ReturnStatement MethodInvocation MethodInvocation getRuntime to_i	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation method MethodInvocation MemberReference context MemberReference args MemberReference block call MemberReference context MemberReference self MemberReference block	0
MethodDeclaration Modifier public ReferenceType Object case21_line367 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support MethodInvocation ClassCreator ReferenceType PreExeNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition MethodInvocation support getCurrentScope Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals addBeginNode getResult StatementExpression MethodInvocation support popCurrentScope StatementExpression Assignment MemberReference yyVal Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public prepare FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope IfStatement MemberReference isSimple BlockStatement StatementExpression MethodInvocation scope MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 setArgValues BlockStatement StatementExpression MethodInvocation MemberReference context MemberReference runtime MemberReference self ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference block prepare IfStatement BinaryOperation != MethodInvocation getBlock Literal null StatementExpression MethodInvocation MemberReference scope MemberReference runtime MemberReference block processBlockArg	1
MethodDeclaration Modifier public static ReferenceType RubyArray newArray FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator arr ClassCreator ReferenceType RubyArray MemberReference runtime ArrayCreator ReferenceType IRubyObject MemberReference args length StatementExpression MethodInvocation System MemberReference args Literal 0 MemberReference arr values Literal 0 MemberReference args length arraycopy StatementExpression Assignment MemberReference arr realLength MemberReference args length = ReturnStatement MemberReference arr	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context MemberReference IRubyObject NULL_ARRAY MemberReference binding MemberReference type yieldSpecificInternal	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "delete" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject delete19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation context getRuntime strDup StatementExpression MethodInvocation str MemberReference context MemberReference arg delete_bang19 ReturnStatement MemberReference str	0
MethodDeclaration Modifier protected FormalParameter ReferenceType HashNode hashNode FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration BasicType boolean VariableDeclarator doit BinaryOperation || MemberReference expr MemberReference ! RubyInstanceConfig PEEPHOLE_OPTZ LocalVariableDeclaration BasicType boolean VariableDeclarator popit BinaryOperation && MemberReference ! RubyInstanceConfig PEEPHOLE_OPTZ MemberReference ! expr IfStatement MemberReference doit BlockStatement IfStatement BinaryOperation || BinaryOperation == MethodInvocation hashNode getListNode Literal null BinaryOperation == MethodInvocation hashNode MethodInvocation size getListNode Literal 0 BlockStatement StatementExpression MethodInvocation context createEmptyHash ReturnStatement LocalVariableDeclaration ReferenceType ArrayCallback VariableDeclarator ClassCreator ReferenceType ArrayCallback MethodDeclaration Modifier public nextValue FormalParameter ReferenceType BodyCompiler context FormalParameter ReferenceType Object sourceArray FormalParameter BasicType int index LocalVariableDeclaration ReferenceType ListNode VariableDeclarator listNode Cast ReferenceType ListNode MemberReference sourceArray LocalVariableDeclaration BasicType int VariableDeclarator keyIndex BinaryOperation * MemberReference index Literal 2 StatementExpression MethodInvocation MethodInvocation listNode MemberReference keyIndex get MemberReference context Literal true compile StatementExpression MethodInvocation MethodInvocation listNode BinaryOperation + MemberReference keyIndex Literal 1 get MemberReference context Literal true compile StatementExpression MethodInvocation MemberReference context MemberReference hashNode MemberReference IfStatement MemberReference popit StatementExpression MethodInvocation context consumeCurrentValue BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator nextNode MethodInvocation hashNode MethodInvocation childNodes getListNode BlockStatement StatementExpression MethodInvocation MemberReference nextNode MemberReference context Literal false compile	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject enable FormalParameter ReferenceType IRubyObject recv StatementExpression MethodInvocation recv MethodInvocation getWarnings MethodInvocation MemberReference ID EMPTY_IMPLEMENTATION Literal will not work on Literal warn getRuntime ReturnStatement MethodInvocation recv MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public ReferenceType String getPropertyHelp LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation sb MethodInvocation Literal "Specify them by append MethodInvocation Literal "\nCOMPILER SETTINGS:\n" append MethodInvocation Literal " append MethodInvocation Literal " Set compilation is FORCE all, OFF append MethodInvocation Literal " append MethodInvocation Literal " (EXPERIMENTAL) Turn on all experimental compiler optimizations\n" append MethodInvocation Literal " jruby.compile.frameless=true|false\n" append MethodInvocation Literal " (EXPERIMENTAL) Turn on frameless compilation where append MethodInvocation Literal " jruby.compile.positionless=true|false\n" append MethodInvocation Literal " (EXPERIMENTAL) Turn on compilation that updating Ruby position Default is false\n" append MethodInvocation Literal " append MethodInvocation Literal " (EXPERIMENTAL) Turn on compilation without for thread Default is false\n" append MethodInvocation Literal " append MethodInvocation Literal " (EXPERIMENTAL) Turn on fast for Default is false\n" append MethodInvocation Literal " jruby.compile.fastcase=true|false\n" append MethodInvocation Literal " (EXPERIMENTAL) Turn on fast for all-Fixnum Default is false\n" append MethodInvocation Literal " count>\n" append MethodInvocation BinaryOperation + BinaryOperation + Literal " Set the number of lines at which compiled bodies are Default is " MemberReference Literal "\n" append MethodInvocation Literal " append MethodInvocation Literal " Generate method bindings for compiled methods lazily. Default is false.\n" append MethodInvocation Literal " append MethodInvocation Literal " Enable or disable peephole Default is true (on).\n" append MethodInvocation Literal "\nJIT SETTINGS:\n" append MethodInvocation Literal " count>\n" append MethodInvocation BinaryOperation + BinaryOperation + Literal " Set the threshold to the specified method invocation Default is " MemberReference Literal ".\n" append MethodInvocation Literal " jruby.jit.max=<method count>\n" append MethodInvocation Literal " Set the max count of active methods for JIT-compilation.\n" append MethodInvocation BinaryOperation + BinaryOperation + Literal " Default is " MemberReference Literal " per runtime. A value of 0 disables JIT, -1 disables append MethodInvocation Literal " method size append MethodInvocation Literal " Set the maximum byte size allowed for jitted Default is append MethodInvocation Literal " append MethodInvocation Literal " Enable logging (reports successful compilation). Default is false\n" append MethodInvocation Literal " jruby.jit.logging.verbose=true|false\n" append MethodInvocation Literal " Enable verbose logging (reports failed compilation). Default is false\n" append MethodInvocation Literal " count>\n" append MethodInvocation Literal " Log a message every n methods Default is 0 append MethodInvocation Literal " append MethodInvocation Literal " methods from by class/module short name, append MethodInvocation Literal " or for append MethodInvocation Literal SUPPORT:\n" append MethodInvocation Literal " jruby.native.enabled=true|false\n" append MethodInvocation Literal " native extensions (like for Default is true\n" append MethodInvocation Literal " all JRuby instances in a given append MethodInvocation Literal " append MethodInvocation Literal " Enable verbose logging of native extension Default is false.\n" append MethodInvocation Literal " append MethodInvocation Literal " maybe Enable on platforms that support append MethodInvocation Literal POOLING:\n" append MethodInvocation Literal " jruby.thread.pool.enabled=true|false\n" append MethodInvocation Literal " Enable reuse of native backing threads via a thread pool. Default is false.\n" append MethodInvocation Literal " thread count>\n" append MethodInvocation Literal " The minimum number of threads to keep alive in the pool. Default is append MethodInvocation Literal " thread count>\n" append MethodInvocation Literal " The maximum number of threads to in the pool. Default is append MethodInvocation Literal " to live, in append MethodInvocation Literal " The maximum number of to keep alive an idle thread. Default is append MethodInvocation Literal append MethodInvocation Literal " append MethodInvocation Literal " the major Ruby version to be compatible Default is append MethodInvocation Literal " append MethodInvocation Literal " Enable or disable ObjectSpace.each_object (default is disabled)\n" append MethodInvocation Literal " append MethodInvocation Literal " Set launching of e.g. Default is true\n" append MethodInvocation Literal " append MethodInvocation Literal " Set bytecode version for JRuby to Default is current JVM version.\n" append MethodInvocation Literal " append MethodInvocation Literal " Set JMX management is Default is true.\n" append MethodInvocation Literal " append MethodInvocation Literal " Set full traces are enabled Default is false.\n" append MethodInvocation Literal " append MethodInvocation Literal " Log the process of locating and loading Default is false.\n" append MethodInvocation Literal " append MethodInvocation Literal " Make flow generate Default is false.\n" append Literal properties can be used to alter runtime behavior for or append ReturnStatement MethodInvocation sb toString	0
MethodDeclaration Modifier public static report IfStatement MemberReference ! reported BlockStatement StatementExpression MethodInvocation System.err println StatementExpression MethodInvocation System.err Literal "Samples - " println LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator samples ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String StatementExpression MethodInvocation samples MethodInvocation SAMPLES keySet addAll StatementExpression MethodInvocation Collections MemberReference samples ClassCreator ReferenceType Comparator TypeArgument ReferenceType String MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType String o1 FormalParameter ReferenceType String o2 ReturnStatement BinaryOperation - MethodInvocation SAMPLES MemberReference o2 get MethodInvocation SAMPLES MemberReference o1 get sort ForStatement EnhancedForControl VariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator ls MemberReference TRACES BlockStatement IfStatement BinaryOperation > MethodInvocation ls size Literal 1 BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + Literal "Trace #" MethodInvocation System MemberReference ls identityHashCode println ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator ss MemberReference ls BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + Literal " " MemberReference ss println StatementExpression MethodInvocation System.err println LocalVariableDeclaration ReferenceType String VariableDeclarator BLANKS Literal " " ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator ss MemberReference samples BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation Math BinaryOperation - Literal 60 MethodInvocation ss length Literal 0 max StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " " MemberReference ss MethodInvocation BLANKS Literal 0 MemberReference len substring Literal "==> " MethodInvocation SAMPLES MemberReference ss get println StatementExpression Assignment MemberReference reported Literal true =	1
MethodDeclaration Modifier public createEmptyArray StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType RubyArray sig invokeRuby	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject get_top_level_proxy_or_package FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg0 ReturnStatement MethodInvocation Java MemberReference context MemberReference recv MemberReference arg0 get_top_level_proxy_or_package	1
MethodDeclaration Modifier public ReferenceType Operand buildLocalVar FormalParameter ReferenceType LocalVarNode node FormalParameter ReferenceType IR_Scope s ReturnStatement ClassCreator ReferenceType Variable MethodInvocation node getName	1
MethodDeclaration Modifier static protected BasicType boolean equalInternal FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType IRubyObject that FormalParameter Modifier final ReferenceType IRubyObject other ReturnStatement BinaryOperation || BinaryOperation == MemberReference that MemberReference other MethodInvocation that MethodInvocation isTrue MemberReference context Literal "==" MemberReference other callMethod	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "enclosed?" ElementValuePair frame Literal true ReferenceType IRubyObject enclosed_p FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MethodInvocation MemberReference newBoolean getRuntime	1
MethodDeclaration Modifier public ReferenceType RaiseException newErrnoEADDRINUSEError ReturnStatement MethodInvocation MethodInvocation MethodInvocation Literal fastGetClass getErrno Literal in use" newRaiseException	0
MethodDeclaration Modifier public static ReferenceType IRubyObject f_to_r FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation x MemberReference context Literal "to_r" callMethod	1
MethodDeclaration Modifier private escapeCodePointCat FormalParameter ReferenceType Ruby runtime FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int n ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator q BinaryOperation - MemberReference p MemberReference n BinaryOperation < MemberReference q MemberReference p MemberReference ++ q BlockStatement StatementExpression MethodInvocation Sprintf MemberReference runtime MemberReference value Literal "\\x%02X" BinaryOperation & MemberReference ArraySelector MemberReference q bytes Literal 0377 sprintf	1
MethodDeclaration Modifier public createNewForLoop FormalParameter BasicType int arity FormalParameter ReferenceType CompilerCallback body FormalParameter ReferenceType CompilerCallback args FormalParameter BasicType boolean hasMultipleArgsHead FormalParameter ReferenceType NodeType argsNodeId FormalParameter ReferenceType ASTInspector inspector LocalVariableDeclaration ReferenceType String VariableDeclarator closureMethodName BinaryOperation + BinaryOperation + Literal MethodInvocation script Literal LocalVariableDeclaration ReferenceType ChildScopedBodyCompiler VariableDeclarator closureCompiler ClassCreator ReferenceType ChildScopedBodyCompiler MemberReference script MemberReference closureMethodName MemberReference inspector MemberReference scope StatementExpression MethodInvocation closureCompiler MemberReference args Literal null beginMethod StatementExpression MethodInvocation body MemberReference closureCompiler call StatementExpression MethodInvocation closureCompiler endBody StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation loadSelf StatementExpression MethodInvocation method MemberReference arity pushInt StatementExpression MethodInvocation script MethodInvocation This MemberReference closureMethodName cacheSpecialClosure getCacheCompiler StatementExpression MethodInvocation method MethodInvocation Boolean MemberReference hasMultipleArgsHead valueOf ldc StatementExpression MethodInvocation method MethodInvocation MemberReference argsNodeId asArgumentType ldc StatementExpression MethodInvocation Literal "createSharedScopeBlock" MethodInvocation ClassReference ReferenceType Block MethodInvocation ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject MemberReference Integer TYPE ClassReference ReferenceType CompiledBlockCallback MemberReference Boolean TYPE MemberReference Integer TYPE params sig invokeUtilityMethod	0
MethodDeclaration Modifier public BasicType int StatementExpression MemberReference ++ ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Runnable getRunnable ReturnStatement MethodInvocation returnsInterface getRunnable	0
MethodDeclaration Modifier private nextState LocalVariableDeclaration BasicType int VariableDeclarator p Literal 0 IfStatement BinaryOperation == MemberReference initf Literal false StatementExpression MethodInvocation Literal 5489 init StatementExpression Assignment MemberReference left MemberReference N = StatementExpression Assignment MemberReference next Literal 0 = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j BinaryOperation + BinaryOperation - MemberReference N MemberReference M Literal 1 BinaryOperation != MemberReference -- j Literal 0 MemberReference ++ p BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference p state BinaryOperation ^ MemberReference ArraySelector BinaryOperation + MemberReference p MemberReference M state MethodInvocation MemberReference ArraySelector BinaryOperation + MemberReference p Literal 0 state MemberReference ArraySelector BinaryOperation + MemberReference p Literal 1 state TWIST = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j MemberReference M BinaryOperation != MemberReference -- j Literal 0 MemberReference ++ p BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference p state BinaryOperation ^ MemberReference ArraySelector BinaryOperation - BinaryOperation + MemberReference p MemberReference M MemberReference N state MethodInvocation MemberReference ArraySelector BinaryOperation + MemberReference p Literal 0 state MemberReference ArraySelector BinaryOperation + MemberReference p Literal 1 state TWIST = StatementExpression Assignment MemberReference ArraySelector MemberReference p state BinaryOperation ^ MemberReference ArraySelector BinaryOperation - BinaryOperation + MemberReference p MemberReference M MemberReference N state MethodInvocation MemberReference ArraySelector MemberReference p state MemberReference ArraySelector Literal 0 state TWIST =	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject superclass LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator superclass MethodInvocation MethodInvocation getSuperclass javaClass IfStatement BinaryOperation == MemberReference superclass Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation getNil getRuntime ReturnStatement MethodInvocation JavaClass MethodInvocation getRuntime MemberReference superclass get	0
MethodDeclaration Modifier public final putInt64 FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType long value StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 0 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 0 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 1 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 8 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 2 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 16 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 3 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 24 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 4 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 32 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 5 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 40 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 6 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 48 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 7 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 56 =	0
MethodDeclaration Modifier public ReferenceType Type ReturnStatement MethodInvocation constructor	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "getbyte" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject getbyte FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject index LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation RubyNumeric MemberReference index num2int IfStatement BinaryOperation < MemberReference i Literal 0 StatementExpression Assignment MemberReference i MemberReference value realSize += IfStatement BinaryOperation || BinaryOperation < MemberReference i Literal 0 BinaryOperation >= MemberReference i MemberReference value realSize ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation RubyFixnum MemberReference runtime BinaryOperation & MemberReference value ArraySelector BinaryOperation + MemberReference value begin MemberReference i bytes Literal 0xff newFixnum	1
MethodDeclaration Modifier public ReferenceType RaiseException newErrnoEACCESError FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation MethodInvocation Literal fastGetClass getErrno MemberReference message newRaiseException	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "write_nonblock" ElementValuePair required Literal 1 ReferenceType IRubyObject write_nonblock FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj LocalVariableDeclaration ReferenceType OpenFile VariableDeclarator myOpenFile MethodInvocation getOpenFileChecked TryStatement StatementExpression MethodInvocation myOpenFile MethodInvocation context getRuntime checkWritable LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation obj asString IfStatement BinaryOperation == MethodInvocation str MethodInvocation length getByteList Literal 0 BlockStatement ReturnStatement MethodInvocation context MethodInvocation Literal 0 newFixnum getRuntime IfStatement MethodInvocation myOpenFile isWriteBuffered BlockStatement StatementExpression MethodInvocation context MethodInvocation getWarnings MethodInvocation MemberReference ID SYSWRITE_BUFFERED_IO Literal "write_nonblock for buffered IO" warn getRuntime LocalVariableDeclaration BasicType int VariableDeclarator written MethodInvocation myOpenFile MethodInvocation getDescriptor MethodInvocation MethodInvocation str getByteList write getWriteStream ReturnStatement MethodInvocation context MethodInvocation MemberReference written newFixnum getRuntime CatchClause CatchClauseParameter IOException ex ThrowStatement MethodInvocation context MethodInvocation MemberReference ex newIOErrorFromException getRuntime CatchClause CatchClauseParameter BadDescriptorException ex ThrowStatement MethodInvocation context MethodInvocation newErrnoEBADFError getRuntime CatchClause CatchClauseParameter InvalidValueException ex ThrowStatement MethodInvocation context MethodInvocation newErrnoEINVALError getRuntime CatchClause CatchClauseParameter PipeException ex ThrowStatement MethodInvocation context MethodInvocation newErrnoEPIPEError getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "==" Literal "eql?" ReferenceType IRubyObject op_equal FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator otherObj MethodInvocation other dataGetStruct IfStatement BinaryOperation instanceof MemberReference otherObj ReferenceType JavaObject BlockStatement ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime StatementExpression Assignment MemberReference other Cast ReferenceType IRubyObject MemberReference otherObj = LocalVariableDeclaration BasicType boolean VariableDeclarator isEqual MethodInvocation MemberReference other equals ReturnStatement TernaryExpression MemberReference isEqual MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public static ReferenceType IRubyObject multiAssign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType MultipleAsgn19Node node FormalParameter ReferenceType RubyArray value FormalParameter BasicType boolean checkArity LocalVariableDeclaration BasicType int VariableDeclarator valueLen MethodInvocation value getLength LocalVariableDeclaration BasicType int VariableDeclarator varLen TernaryExpression BinaryOperation == MethodInvocation node getPre Literal null Literal 0 MethodInvocation node MethodInvocation size getPre LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 ForStatement ForControl BinaryOperation && BinaryOperation < MemberReference j MemberReference valueLen BinaryOperation < MemberReference j MemberReference varLen MemberReference ++ j BlockStatement StatementExpression MethodInvocation node MethodInvocation MemberReference j get MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation value MemberReference j eltInternal MemberReference Block NULL_BLOCK MemberReference checkArity assign getPre IfStatement BinaryOperation && MemberReference checkArity BinaryOperation < MemberReference j MemberReference varLen BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Wrong of arguments (" MemberReference valueLen Literal " for " MemberReference varLen Literal ")" newArgumentError LocalVariableDeclaration ReferenceType Node VariableDeclarator restArgument MethodInvocation node getRest IfStatement BinaryOperation != MemberReference restArgument Literal null BlockStatement IfStatement BinaryOperation < MemberReference varLen MemberReference valueLen BlockStatement StatementExpression MethodInvocation restArgument MemberReference runtime MemberReference context MemberReference self MethodInvocation value MemberReference varLen MemberReference valueLen subseqLight MemberReference Block NULL_BLOCK MemberReference checkArity assign BlockStatement StatementExpression MethodInvocation restArgument MemberReference runtime MemberReference context MemberReference self MethodInvocation RubyArray MemberReference runtime Literal 0 MemberReference Block NULL_BLOCK MemberReference checkArity assign IfStatement BinaryOperation && MemberReference checkArity BinaryOperation < MemberReference valueLen MemberReference varLen BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Wrong of arguments (" MemberReference valueLen Literal " for " MemberReference varLen Literal ")" newArgumentError WhileStatement BinaryOperation < MemberReference j MemberReference varLen BlockStatement StatementExpression MethodInvocation node MethodInvocation MemberReference ++ j get MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime getNil MemberReference Block NULL_BLOCK MemberReference checkArity assign getPre ReturnStatement MemberReference value	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference SIZE MemberReference GROW_ERROR	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MemberReference context This MemberReference args MemberReference block invokeSuper	1
MethodDeclaration Modifier public static BasicType int scanHex FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int len ReturnStatement MethodInvocation MemberReference bytes MemberReference p MemberReference len MemberReference ASCIIEncoding INSTANCE scanHex	0
MethodDeclaration Modifier private final ReferenceType IRubyObject to_s FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation RubyString MemberReference runtime MemberReference symbolBytes newStringShared	1
MethodDeclaration Modifier public update FormalParameter Modifier final BasicType int b StatementExpression This MemberReference intern MethodInvocation MemberReference b update	0
MethodDeclaration Modifier public ReferenceType Object case234_line911 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals = StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference yyVal Cast ReferenceType BlockPassNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_blk_pass = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static validateArgs FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String targetClassName FormalParameter ReferenceType Class superClass IfStatement MethodInvocation Modifier MethodInvocation superClass getModifiers isFinal BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "cannot extend final class " MethodInvocation superClass getName newTypeError LocalVariableDeclaration ReferenceType String VariableDeclarator targetPackage MethodInvocation MemberReference targetClassName packageName LocalVariableDeclaration ReferenceType String VariableDeclarator pkg MethodInvocation targetPackage Literal '.' Literal '/' replace IfStatement MethodInvocation pkg Literal "java" startsWith BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "cannot add classes to package " MemberReference pkg newTypeError LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation MemberReference pkg getPackage IfStatement BinaryOperation != MemberReference p Literal null BlockStatement IfStatement MethodInvocation p isSealed BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "package " MemberReference p Literal " is sealed" newTypeError	1
MethodDeclaration Modifier public ReferenceType String getID ReturnStatement MemberReference id	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject addr FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType InetSocketAddress VariableDeclarator address MethodInvocation getLocalSocket IfStatement BinaryOperation == MemberReference address Literal null BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "Not socket or not getRuntime ReturnStatement MethodInvocation MemberReference context MemberReference address addrFor	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg IfStatement BinaryOperation instanceof MemberReference self ReferenceType RubyFixnum BlockStatement ReturnStatement Cast ReferenceType RubyFixnum MemberReference self ReturnStatement SuperMethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference arg call	0
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object obj IfStatement BinaryOperation == MemberReference obj Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation != MethodInvocation getClass MethodInvocation obj getClass BlockStatement ReturnStatement Literal false LocalVariableDeclaration Modifier final ReferenceType RubyThread VariableDeclarator other Cast ReferenceType RubyThread MemberReference obj IfStatement BinaryOperation && BinaryOperation != This MemberReference threadImpl MemberReference other threadImpl BinaryOperation || BinaryOperation == This MemberReference threadImpl Literal null This ! MemberReference threadImpl MethodInvocation MemberReference other threadImpl equals BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "length" Literal "size" ReferenceType IRubyObject length StatementExpression MethodInvocation ReturnStatement MethodInvocation MethodInvocation MethodInvocation internal MethodInvocation length getByteList newFixnum getRuntime	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args LocalVariableDeclaration BasicType int VariableDeclarator Literal 5 LocalVariableDeclaration BasicType int VariableDeclarator n Literal 30 IfStatement BinaryOperation >= MemberReference args length Literal 1 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Integer MemberReference ArraySelector Literal 0 args parseInt = IfStatement BinaryOperation >= MemberReference args length Literal 2 BlockStatement StatementExpression Assignment MemberReference n MethodInvocation Integer MemberReference ArraySelector Literal 1 args parseInt = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference MemberReference ++ j BlockStatement StatementExpression MethodInvocation MemberReference n benchFixnumFib	0
MethodDeclaration Modifier protected ReferenceType Object yyDefault FormalParameter ReferenceType Object first ReturnStatement MemberReference first	0
MethodDeclaration Modifier public ReferenceType Object case257_line991 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals checkExpression StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType BlockPassNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case336_line1243 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ZeroArgNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition = StatementExpression Assignment MemberReference lexer commandStart Literal true = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType RubyString convertToString ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType Node getBodyNode ReturnStatement MemberReference bodyNode	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair frame Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject arg0 StatementExpression MethodInvocation MemberReference arg0 replace ReturnStatement This	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType IRubyObject callCoerced FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String method FormalParameter ReferenceType IRubyObject other FormalParameter BasicType boolean err LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args MethodInvocation MemberReference context MemberReference other MemberReference err IfStatement BinaryOperation == MemberReference args Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation getNil getRuntime ReturnStatement MemberReference ArraySelector Literal 0 MethodInvocation MemberReference context MemberReference method MemberReference ArraySelector Literal 1 args callMethod args	0
MethodDeclaration Modifier public BasicType int getJitMax ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType RubyTime FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType DateTime dt ReturnStatement ClassCreator ReferenceType RubyTime MemberReference runtime MethodInvocation runtime getTime MemberReference dt	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "put" ElementValuePair required Literal 3 ReferenceType IRubyObject put FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject ptr FormalParameter ReferenceType IRubyObject name FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation MethodInvocation MethodInvocation context getRuntime MemberReference nullStorage MemberReference ptr MemberReference value put MethodInvocation context getRuntime MemberReference name getMember ReturnStatement MemberReference value	0
MethodDeclaration Modifier public ReferenceType SkinnyMethodAdapter IfStatement BinaryOperation == MemberReference clinitMethod Literal null BlockStatement StatementExpression MethodInvocation beginClassInit ReturnStatement MemberReference clinitMethod	0
MethodDeclaration Modifier public ReferenceType Object case329_line1254 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier final static ReferenceType Type resolveType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType Type BlockStatement ReturnStatement Cast ReferenceType Type MemberReference obj LocalVariableDeclaration Modifier final ReferenceType RubyModule VariableDeclarator ffi MethodInvocation context MethodInvocation Literal "FFI" fastGetModule getRuntime LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator typeDefs MethodInvocation ffi Literal "TypeDefs" fastFetchConstant IfStatement BinaryOperation instanceof MemberReference typeDefs ReferenceType RubyHash BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "invalid or corrupted FFI::TypeDefs" newRuntimeError getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator type Cast ReferenceType RubyHash MemberReference typeDefs IfStatement BinaryOperation || BinaryOperation == MemberReference type Literal null MethodInvocation type isNil BlockStatement StatementExpression Assignment MemberReference type MethodInvocation ffi MemberReference context Literal "find_type" MemberReference obj callMethod = IfStatement BinaryOperation instanceof MemberReference type ReferenceType Type BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "Could not resolve type: " MemberReference obj newTypeError getRuntime ReturnStatement Cast ReferenceType Type MemberReference type	1
MethodDeclaration setMath FormalParameter ReferenceType RubyModule mathModule StatementExpression Assignment This MemberReference mathModule MemberReference mathModule =	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyFixnum length ThrowStatement MethodInvocation MethodInvocation Literal "not a java array" newTypeError getRuntime	1
MethodDeclaration Modifier public beginMethod FormalParameter ReferenceType CompilerCallback args FormalParameter ReferenceType scope StatementExpression MethodInvocation method start StatementExpression MethodInvocation method MemberReference StandardASMCompiler THREADCONTEXT_INDEX aload StatementExpression MethodInvocation Literal "getRuntime" MethodInvocation ClassReference ReferenceType Ruby sig invokeThreadContext StatementExpression MethodInvocation method MethodInvocation astore StatementExpression MethodInvocation method MethodInvocation aload StatementExpression MethodInvocation Literal "getNil" MethodInvocation ClassReference ReferenceType IRubyObject sig invokeRuby StatementExpression MethodInvocation method MethodInvocation astore IfStatement BinaryOperation == MemberReference scope Literal null BlockStatement StatementExpression MethodInvocation variableCompiler MemberReference args This MemberReference scope beginFlatClosure BlockStatement StatementExpression MethodInvocation variableCompiler MemberReference args MemberReference scope StatementExpression Assignment MemberReference redoJump ClassCreator ReferenceType Label = StatementExpression MethodInvocation method MemberReference scopeStart label	0
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public static ReferenceType IRubyObject opElementAsgnWithMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType CallSite elementSite FormalParameter ReferenceType CallSite opSite FormalParameter ReferenceType CallSite elementAsgnSite LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator var MethodInvocation elementSite MemberReference context MemberReference self MemberReference receiver call LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation opSite MemberReference context MemberReference self MemberReference var MemberReference value call StatementExpression MethodInvocation elementAsgnSite MemberReference context MemberReference self MemberReference receiver MethodInvocation MemberReference args MemberReference result call ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType String name AssertStatement MethodInvocation IdUtil MemberReference name isConstant ReturnStatement MethodInvocation MemberReference name constantTableFetch	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator command MethodInvocation Platform IfStatement MemberReference Platform IS_WINDOWS_9X BlockStatement StatementExpression MethodInvocation Literal "Fails on 95/98" Literal set" MemberReference command assertEquals IfStatement BinaryOperation & MemberReference Platform IS_WINDOWS MemberReference ! Platform IS_WINDOWS_9X BlockStatement StatementExpression MethodInvocation Literal "Fails on other than 95/98" Literal "cmd.exe set" MemberReference command assertEquals IfStatement MemberReference ! Platform IS_WINDOWS BlockStatement StatementExpression MethodInvocation Literal "Fails on platform" Literal "env" MemberReference command assertEquals	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klazz ReturnStatement ClassCreator ReferenceType InterfaceJavaProxy MemberReference runtime MemberReference klazz	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyArray select FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator array MethodInvocation RubyArray MethodInvocation context getRuntime newArray ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference values length MemberReference ++ i BlockStatement IfStatement MethodInvocation block MethodInvocation isTrue MemberReference context MemberReference ArraySelector MemberReference i values yield BlockStatement StatementExpression MethodInvocation array MemberReference ArraySelector MemberReference i values append ReturnStatement MemberReference array	1
MethodDeclaration Modifier public final get FormalParameter BasicType long offset FormalParameter BasicType double dst FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation MemberReference offset BinaryOperation << MemberReference len Literal 3 checkBounds LocalVariableDeclaration BasicType int VariableDeclarator begin MethodInvocation MemberReference offset index ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference off MemberReference i dst MethodInvocation IO MemberReference buffer BinaryOperation + MemberReference begin BinaryOperation << MemberReference i Literal 3 getFloat64 =	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject truncate ReturnStatement MethodInvocation MethodInvocation RubyFixnum MethodInvocation getRuntime zero truncate	0
MethodDeclaration Modifier public testTaint StatementExpression MethodInvocation MethodInvocation ! rubyObject isTaint assertTrue StatementExpression MethodInvocation rubyObject Literal true setTaint StatementExpression MethodInvocation MethodInvocation rubyObject isTaint assertTrue	1
MethodDeclaration Modifier public ReferenceType Object case255_line984 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation lexer MemberReference LexState EXPR_ENDARG setState ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override setUp StatementExpression Assignment MemberReference runtime MethodInvocation Ruby newInstance =	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String loadPaths ReturnStatement MemberReference loadPaths	0
MethodDeclaration Modifier public FormalParameter ReferenceType String operatorName FormalParameter ReferenceType CompilerCallback receiverCallback FormalParameter ReferenceType ArgumentsCallback argsCallback StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation methodCompiler loadSelf StatementExpression MethodInvocation receiverCallback MemberReference methodCompiler call StatementExpression MethodInvocation argsCallback MemberReference methodCompiler call StatementExpression MethodInvocation methodCompiler MethodInvocation getCacheCompiler MethodInvocation MemberReference methodCompiler Literal "[]" MemberReference CallType FUNCTIONAL cacheCallSite getScriptCompiler StatementExpression MethodInvocation methodCompiler MethodInvocation getCacheCompiler MethodInvocation MemberReference methodCompiler MemberReference operatorName MemberReference CallType FUNCTIONAL cacheCallSite getScriptCompiler StatementExpression MethodInvocation methodCompiler MethodInvocation getCacheCompiler MethodInvocation MemberReference methodCompiler Literal "[]=" MemberReference CallType NORMAL cacheCallSite getScriptCompiler StatementExpression MethodInvocation methodCompiler Literal "opElementAsgnWithMethod" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallSite ClassReference ReferenceType CallSite ClassReference ReferenceType CallSite sig invokeUtilityMethod	0
MethodDeclaration Modifier public ReferenceType String getVersionString ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation getVersionString get	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "+" ElementValuePair required Literal 1 ReferenceType IRubyObject op_plus FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation Cast ReferenceType RubyFixnum MemberReference other addFixnum IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement ReturnStatement MethodInvocation Cast ReferenceType RubyBignum MemberReference other addBignum IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement ReturnStatement MethodInvocation Cast ReferenceType RubyFloat MemberReference other addFloat ReturnStatement MethodInvocation MemberReference context MemberReference other addOther	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType CompiledBlockCallback FormalParameter ReferenceType String method FormalParameter Modifier final ReferenceType Object scriptObject TryStatement LocalVariableDeclaration Modifier final ReferenceType Method VariableDeclarator blockMethod MethodInvocation scriptObject MethodInvocation MemberReference method ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject getMethod getClass ReturnStatement ClassCreator ReferenceType CompiledBlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject args TryStatement ReturnStatement Cast ReferenceType IRubyObject MethodInvocation blockMethod MemberReference scriptObject ArrayCreator ReferenceType Object ArrayInitializer MemberReference context MemberReference self MemberReference args invoke CatchClause CatchClauseParameter IllegalAccessException ex ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference ex CatchClause CatchClauseParameter IllegalArgumentException ex ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference ex CatchClause CatchClauseParameter InvocationTargetException ex LocalVariableDeclaration ReferenceType Throwable VariableDeclarator cause MethodInvocation ex getCause IfStatement BinaryOperation instanceof MemberReference cause ReferenceType RuntimeException BlockStatement ThrowStatement Cast ReferenceType RuntimeException MemberReference cause IfStatement BinaryOperation instanceof MemberReference cause ReferenceType Error BlockStatement ThrowStatement Cast ReferenceType Error MemberReference cause BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference ex CatchClause CatchClauseParameter NoSuchMethodException nsme ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference nsme	1
MethodDeclaration Modifier public ReferenceType Object case64_line530 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType MultipleAsgnNode MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public setKCode FormalParameter ReferenceType KCode kcode StatementExpression Assignment This MemberReference kcode MemberReference kcode =	0
MethodDeclaration Modifier public BasicType boolean accept FormalParameter ReferenceType Class TypeArgument ? types FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference types MemberReference args assignableAndPrimitivable	0
MethodDeclaration Modifier private final static BasicType short yyTable2 ReturnStatement ArrayCreator BasicType short ArrayInitializer Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 244 Literal 540 Literal 540 Literal 540 Literal 0 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 353 Literal 0 Literal 0 Literal 244 Literal 0 Literal 244 Literal 244 Literal 0 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 0 Literal 244 Literal 277 Literal 277 Literal 277 Literal 244 Literal 244 Literal 277 Literal 277 Literal 277 Literal 244 Literal 277 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 0 Literal 0 Literal 277 Literal 277 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 277 Literal 277 Literal 244 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 0 Literal 244 Literal 0 Literal 0 Literal 244 Literal 244 Literal 244 Literal 0 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 0 Literal 0 Literal 277 Literal 277 Literal 277 Literal 244 Literal 0 Literal 277 Literal 244 Literal 0 Literal 277 Literal 244 Literal 244 Literal 277 Literal 244 Literal 277 Literal 244 Literal 277 Literal 244 Literal 277 Literal 244 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 244 Literal 277 Literal 518 Literal 277 Literal 0 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 0 Literal 518 Literal 0 Literal 244 Literal 0 Literal 244 Literal 244 Literal 0 Literal 244 Literal 244 Literal 248 Literal 248 Literal 248 Literal 0 Literal 0 Literal 248 Literal 248 Literal 248 Literal 0 Literal 248 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 248 Literal 248 Literal 0 Literal 0 Literal 0 Literal 0 Literal 82 Literal 0 Literal 0 Literal 248 Literal 248 Literal 0 Literal 248 Literal 248 Literal 248 Literal 248 Literal 248 Literal 0 Literal 0 Literal 0 Literal 0 Literal 518 Literal 0 Literal 90 Literal 0 Literal 518 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 328 Literal 329 Literal 330 Literal 331 Literal 332 Literal 333 Literal 334 Literal 335 Literal 336 Literal 337 Literal 338 Literal 0 Literal 339 Literal 340 Literal 0 Literal 0 Literal 341 Literal 342 Literal 0 Literal 0 Literal 518 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 248 Literal 0 Literal 0 Literal 248 Literal 343 Literal 248 Literal 344 Literal 0 Literal 345 Literal 346 Literal 347 Literal 348 Literal 349 Literal 350 Literal 351 Literal 0 Literal 352 Literal 0 Literal 0 Literal 0 Literal 0 Literal 248 Literal 705 Literal 0 Literal 0 Literal 519 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 519 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 328 Literal 329 Literal 330 Literal 331 Literal 332 Literal 333 Literal 334 Literal 335 Literal 336 Literal 337 Literal 338 Literal 0 Literal 339 Literal 340 Literal 0 Literal 0 Literal 341 Literal 342 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 84 Literal 0 Literal 0 Literal 0 Literal 343 Literal 0 Literal 344 Literal 0 Literal 345 Literal 346 Literal 347 Literal 348 Literal 349 Literal 350 Literal 351 Literal 519 Literal 352 Literal 92 Literal 0 Literal 519 Literal 0 Literal 0 Literal 0 Literal 583 Literal 550 Literal 0 Literal 0 Literal 584 Literal 0 Literal 0 Literal 0 Literal 165 Literal 166 Literal 0 Literal 167 Literal 168 Literal 169 Literal 170 Literal 171 Literal 172 Literal 173 Literal 0 Literal 0 Literal 174 Literal 175 Literal 0 Literal 0 Literal 519 Literal 176 Literal 177 Literal 178 Literal 179 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 258 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 102 Literal 181 Literal 182 Literal 0 Literal 183 Literal 184 Literal 185 Literal 186 Literal 187 Literal 188 Literal 189 Literal 190 Literal 191 Literal 192 Literal 193 Literal 0 Literal 41 Literal 194 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 41 Literal 518 Literal 518 Literal 518 Literal 0 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 0 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 102 Literal 518 Literal 0 Literal 0 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 0 Literal 518 Literal 0 Literal 0 Literal 518 Literal 518 Literal 518 Literal 41 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 0 Literal 0 Literal 518 Literal 518 Literal 518 Literal 518 Literal 0 Literal 0 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 0 Literal 518 Literal 0 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 0 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 0 Literal 0 Literal 0 Literal 518 Literal 0 Literal 518 Literal 518 Literal 353 Literal 518 Literal 518 Literal 519 Literal 519 Literal 519 Literal 0 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 0 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 0 Literal 519 Literal 0 Literal 0 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 0 Literal 519 Literal 0 Literal 0 Literal 519 Literal 519 Literal 519 Literal 0 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 0 Literal 0 Literal 519 Literal 519 Literal 519 Literal 519 Literal 0 Literal 0 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 0 Literal 519 Literal 0 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 0 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 522 Literal 0 Literal 0 Literal 519 Literal 0 Literal 519 Literal 519 Literal 0 Literal 519 Literal 519 Literal 522 Literal 0 Literal 0 Literal 0 Literal 0 Literal 41 Literal 41 Literal 41 Literal 0 Literal 0 Literal 41 Literal 41 Literal 41 Literal 0 Literal 41 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 102 Literal 41 Literal 102 Literal 102 Literal 102 Literal 102 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 83 Literal 0 Literal 41 Literal 41 Literal 41 Literal 41 Literal 41 Literal 0 Literal 0 Literal 0 Literal 0 Literal 447 Literal 0 Literal 0 Literal 0 Literal 522 Literal 0 Literal 91 Literal 447 Literal 522 Literal 0 Literal 0 Literal 102 Literal 102 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 102 Literal 102 Literal 102 Literal 102 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 522 Literal 0 Literal 0 Literal 41 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 41 Literal 0 Literal 0 Literal 710 Literal 0 Literal 0 Literal 0 Literal 0 Literal 270 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 270 Literal 0 Literal 0 Literal 0 Literal 0 Literal 328 Literal 329 Literal 330 Literal 331 Literal 332 Literal 333 Literal 334 Literal 335 Literal 336 Literal 337 Literal 338 Literal 0 Literal 339 Literal 340 Literal 0 Literal 0 Literal 341 Literal 342 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 85 Literal 0 Literal 343 Literal 0 Literal 344 Literal 0 Literal 345 Literal 346 Literal 347 Literal 348 Literal 349 Literal 350 Literal 351 Literal 0 Literal 352 Literal 270 Literal 0 Literal 93 Literal 0 Literal 270 Literal 0 Literal 0 Literal 0 Literal 604 Literal 544 Literal 0 Literal 0 Literal 605 Literal 0 Literal 0 Literal 0 Literal 165 Literal 166 Literal 0 Literal 167 Literal 168 Literal 169 Literal 170 Literal 171 Literal 172 Literal 173 Literal 0 Literal 0 Literal 174 Literal 175 Literal 0 Literal 0 Literal 270 Literal 176 Literal 177 Literal 178 Literal 179 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 258 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 181 Literal 182 Literal 0 Literal 183 Literal 184 Literal 185 Literal 186 Literal 187 Literal 188 Literal 189 Literal 190 Literal 191 Literal 192 Literal 193 Literal 0 Literal 540 Literal 194 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 518 Literal 518 Literal 518 Literal 0 Literal 518 Literal 522 Literal 522 Literal 522 Literal 518 Literal 518 Literal 0 Literal 522 Literal 522 Literal 518 Literal 522 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 0 Literal 522 Literal 0 Literal 0 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 522 Literal 522 Literal 518 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 0 Literal 518 Literal 0 Literal 0 Literal 518 Literal 518 Literal 518 Literal 540 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 0 Literal 0 Literal 522 Literal 522 Literal 522 Literal 518 Literal 0 Literal 0 Literal 518 Literal 518 Literal 522 Literal 518 Literal 518 Literal 0 Literal 518 Literal 0 Literal 518 Literal 522 Literal 518 Literal 522 Literal 518 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 522 Literal 518 Literal 522 Literal 522 Literal 522 Literal 0 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 518 Literal 0 Literal 0 Literal 0 Literal 518 Literal 0 Literal 518 Literal 518 Literal 0 Literal 518 Literal 518 Literal 519 Literal 519 Literal 519 Literal 0 Literal 519 Literal 270 Literal 270 Literal 270 Literal 519 Literal 519 Literal 0 Literal 270 Literal 270 Literal 519 Literal 270 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 0 Literal 0 Literal 0 Literal 0 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 270 Literal 270 Literal 519 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 0 Literal 519 Literal 0 Literal 0 Literal 519 Literal 519 Literal 519 Literal 289 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 0 Literal 0 Literal 270 Literal 270 Literal 270 Literal 519 Literal 0 Literal 0 Literal 519 Literal 519 Literal 270 Literal 519 Literal 519 Literal 0 Literal 519 Literal 0 Literal 519 Literal 270 Literal 519 Literal 270 Literal 519 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 270 Literal 519 Literal 270 Literal 0 Literal 270 Literal 0 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 519 Literal 0 Literal 0 Literal 0 Literal 519 Literal 0 Literal 519 Literal 519 Literal 0 Literal 519 Literal 519 Literal 244 Literal 244 Literal 244 Literal 0 Literal 244 Literal 540 Literal 540 Literal 540 Literal 244 Literal 244 Literal 540 Literal 540 Literal 540 Literal 244 Literal 540 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 0 Literal 0 Literal 540 Literal 0 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 540 Literal 540 Literal 244 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 244 Literal 0 Literal 0 Literal 244 Literal 244 Literal 244 Literal 0 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 384 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 244 Literal 384 Literal 0 Literal 244 Literal 0 Literal 540 Literal 244 Literal 244 Literal 0 Literal 244 Literal 0 Literal 244 Literal 0 Literal 244 Literal 0 Literal 244 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 244 Literal 0 Literal 0 Literal 540 Literal 0 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 244 Literal 0 Literal 384 Literal 0 Literal 244 Literal 0 Literal 244 Literal 244 Literal 0 Literal 244 Literal 244 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 384 Literal 384 Literal 0 Literal 89 Literal 0 Literal 384 Literal 0 Literal 0 Literal 0 Literal 0 Literal 4 Literal 5 Literal 6 Literal 0 Literal 8 Literal 0 Literal 0 Literal 0 Literal 9 Literal 10 Literal 0 Literal 0 Literal 0 Literal 11 Literal 0 Literal 12 Literal 13 Literal 14 Literal 99 Literal 100 Literal 17 Literal 18 Literal 0 Literal 384 Literal 0 Literal 0 Literal 101 Literal 102 Literal 103 Literal 22 Literal 23 Literal 24 Literal 25 Literal 383 Literal 0 Literal 104 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 105 Literal 383 Literal 0 Literal 31 Literal 32 Literal 33 Literal 0 Literal 34 Literal 35 Literal 36 Literal 37 Literal 38 Literal 39 Literal 0 Literal 40 Literal 0 Literal 0 Literal 108 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 383 Literal 0 Literal 288 Literal 0 Literal 0 Literal 111 Literal 0 Literal 0 Literal 46 Literal 47 Literal 0 Literal 48 Literal 0 Literal 0 Literal 383 Literal 383 Literal 0 Literal 0 Literal 0 Literal 383 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 52 Literal 53 Literal 54 Literal 55 Literal 56 Literal 57 Literal 0 Literal 0 Literal 0 Literal 58 Literal 0 Literal 59 Literal 60 Literal 0 Literal 61 Literal 62 Literal 0 Literal 383 Literal 0 Literal 0 Literal 0 Literal 0 Literal 764 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 777 Literal 0 Literal 0 Literal 781 Literal 0 Literal 0 Literal 0 Literal 0 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 456 Literal 0 Literal 0 Literal 384 Literal 384 Literal 384 Literal 0 Literal 0 Literal 384 Literal 384 Literal 384 Literal 0 Literal 384 Literal 0 Literal 456 Literal 456 Literal 0 Literal 88 Literal 0 Literal 456 Literal 0 Literal 384 Literal 384 Literal 384 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 384 Literal 384 Literal 0 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 384 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 0 Literal 0 Literal 384 Literal 384 Literal 384 Literal 0 Literal 0 Literal 384 Literal 0 Literal 0 Literal 384 Literal 0 Literal 0 Literal 384 Literal 0 Literal 384 Literal 0 Literal 384 Literal 540 Literal 384 Literal 0 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 540 Literal 384 Literal 384 Literal 384 Literal 383 Literal 383 Literal 383 Literal 0 Literal 0 Literal 383 Literal 383 Literal 383 Literal 884 Literal 383 Literal 886 Literal 384 Literal 887 Literal 0 Literal 0 Literal 0 Literal 890 Literal 0 Literal 383 Literal 383 Literal 383 Literal 895 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 383 Literal 383 Literal 540 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 383 Literal 540 Literal 540 Literal 0 Literal 0 Literal 0 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 0 Literal 0 Literal 383 Literal 383 Literal 383 Literal 0 Literal 0 Literal 383 Literal 540 Literal 930 Literal 383 Literal 0 Literal 0 Literal 383 Literal 0 Literal 383 Literal 933 Literal 383 Literal 935 Literal 383 Literal 936 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 383 Literal 0 Literal 383 Literal 383 Literal 383 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 943 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 383 Literal 0 Literal 456 Literal 456 Literal 456 Literal 0 Literal 0 Literal 456 Literal 456 Literal 456 Literal 0 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 456 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 456 Literal 456 Literal 0 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 0 Literal 264 Literal 456 Literal 456 Literal 456 Literal 0 Literal 457 Literal 456 Literal 0 Literal 0 Literal 456 Literal 264 Literal 0 Literal 456 Literal 0 Literal 456 Literal 0 Literal 456 Literal 0 Literal 456 Literal 0 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 0 Literal 456 Literal 0 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 456 Literal 0 Literal 264 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 264 Literal 0 Literal 95 Literal 0 Literal 264 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 540 Literal 540 Literal 540 Literal 0 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 540 Literal 540 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 271 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 540 Literal 0 Literal 0 Literal 540 Literal 271 Literal 0 Literal 540 Literal 0 Literal 540 Literal 0 Literal 540 Literal 0 Literal 540 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 0 Literal 271 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 606 Literal 550 Literal 271 Literal 271 Literal 607 Literal 94 Literal 0 Literal 271 Literal 165 Literal 166 Literal 0 Literal 167 Literal 168 Literal 169 Literal 170 Literal 171 Literal 172 Literal 173 Literal 0 Literal 0 Literal 174 Literal 175 Literal 0 Literal 0 Literal 0 Literal 176 Literal 177 Literal 178 Literal 179 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 258 Literal 271 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 181 Literal 182 Literal 0 Literal 183 Literal 184 Literal 185 Literal 186 Literal 187 Literal 188 Literal 189 Literal 190 Literal 191 Literal 192 Literal 193 Literal 0 Literal 0 Literal 194 Literal 404 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 404 Literal 0 Literal 0 Literal 0 Literal 264 Literal 264 Literal 264 Literal 0 Literal 0 Literal 264 Literal 264 Literal 264 Literal 0 Literal 264 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 264 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 264 Literal 404 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 404 Literal 404 Literal 0 Literal 0 Literal 0 Literal 404 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 0 Literal 0 Literal 264 Literal 264 Literal 264 Literal 0 Literal 0 Literal 264 Literal 404 Literal 0 Literal 264 Literal 0 Literal 0 Literal 264 Literal 0 Literal 264 Literal 0 Literal 264 Literal 282 Literal 264 Literal 0 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 282 Literal 264 Literal 0 Literal 264 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 282 Literal 0 Literal 0 Literal 271 Literal 271 Literal 271 Literal 0 Literal 0 Literal 271 Literal 271 Literal 271 Literal 0 Literal 271 Literal 0 Literal 282 Literal 282 Literal 0 Literal 0 Literal 0 Literal 282 Literal 0 Literal 0 Literal 271 Literal 271 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 271 Literal 271 Literal 0 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 271 Literal 282 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 0 Literal 0 Literal 271 Literal 271 Literal 271 Literal 0 Literal 0 Literal 271 Literal 0 Literal 0 Literal 271 Literal 0 Literal 0 Literal 271 Literal 0 Literal 271 Literal 0 Literal 271 Literal 0 Literal 271 Literal 0 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 228 Literal 271 Literal 0 Literal 271 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 228 Literal 0 Literal 0 Literal 0 Literal 0 Literal 271 Literal 0 Literal 404 Literal 404 Literal 404 Literal 0 Literal 0 Literal 404 Literal 404 Literal 404 Literal 0 Literal 404 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 404 Literal 404 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 228 Literal 404 Literal 404 Literal 0 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 228 Literal 228 Literal 404 Literal 0 Literal 0 Literal 228 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 0 Literal 0 Literal 404 Literal 404 Literal 404 Literal 314 Literal 0 Literal 404 Literal 0 Literal 0 Literal 404 Literal 0 Literal 0 Literal 404 Literal 0 Literal 404 Literal 0 Literal 404 Literal 277 Literal 404 Literal 0 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 404 Literal 277 Literal 404 Literal 0 Literal 404 Literal 282 Literal 282 Literal 282 Literal 0 Literal 0 Literal 282 Literal 282 Literal 282 Literal 0 Literal 282 Literal 0 Literal 404 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 282 Literal 282 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 282 Literal 282 Literal 277 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 282 Literal 277 Literal 277 Literal 0 Literal 0 Literal 0 Literal 277 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 0 Literal 0 Literal 282 Literal 282 Literal 282 Literal 0 Literal 0 Literal 282 Literal 277 Literal 0 Literal 282 Literal 0 Literal 0 Literal 282 Literal 0 Literal 282 Literal 0 Literal 282 Literal 0 Literal 282 Literal 0 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 282 Literal 0 Literal 282 Literal 442 Literal 282 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 442 Literal 0 Literal 0 Literal 282 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 442 Literal 228 Literal 228 Literal 228 Literal 0 Literal 0 Literal 228 Literal 228 Literal 228 Literal 0 Literal 228 Literal 0 Literal 0 Literal 0 Literal 442 Literal 442 Literal 0 Literal 0 Literal 0 Literal 442 Literal 228 Literal 228 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 228 Literal 228 Literal 0 Literal 228 Literal 228 Literal 228 Literal 228 Literal 228 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 228 Literal 0 Literal 0 Literal 442 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 228 Literal 228 Literal 228 Literal 228 Literal 228 Literal 228 Literal 228 Literal 228 Literal 228 Literal 228 Literal 228 Literal 314 Literal 228 Literal 228 Literal 0 Literal 0 Literal 228 Literal 228 Literal 314 Literal 0 Literal 0 Literal 228 Literal 0 Literal 0 Literal 228 Literal 0 Literal 0 Literal 228 Literal 0 Literal 228 Literal 0 Literal 228 Literal 443 Literal 228 Literal 0 Literal 228 Literal 228 Literal 228 Literal 228 Literal 228 Literal 228 Literal 228 Literal 443 Literal 228 Literal 0 Literal 228 Literal 0 Literal 0 Literal 0 Literal 277 Literal 277 Literal 277 Literal 0 Literal 0 Literal 277 Literal 277 Literal 277 Literal 228 Literal 277 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 277 Literal 277 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 443 Literal 277 Literal 277 Literal 0 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 443 Literal 443 Literal 277 Literal 0 Literal 0 Literal 443 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 0 Literal 0 Literal 277 Literal 277 Literal 277 Literal 443 Literal 0 Literal 277 Literal 0 Literal 0 Literal 277 Literal 0 Literal 0 Literal 277 Literal 0 Literal 277 Literal 0 Literal 277 Literal 0 Literal 277 Literal 0 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 277 Literal 0 Literal 277 Literal 206 Literal 277 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 206 Literal 0 Literal 0 Literal 277 Literal 442 Literal 442 Literal 442 Literal 0 Literal 0 Literal 442 Literal 442 Literal 442 Literal 0 Literal 442 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 442 Literal 442 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 442 Literal 442 Literal 206 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 442 Literal 206 Literal 206 Literal 0 Literal 0 Literal 0 Literal 206 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 0 Literal 0 Literal 442 Literal 442 Literal 442 Literal 0 Literal 0 Literal 442 Literal 0 Literal 0 Literal 442 Literal 0 Literal 0 Literal 442 Literal 0 Literal 442 Literal 0 Literal 442 Literal 202 Literal 442 Literal 0 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 442 Literal 202 Literal 442 Literal 0 Literal 442 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 442 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 202 Literal 443 Literal 443 Literal 443 Literal 0 Literal 0 Literal 443 Literal 443 Literal 443 Literal 0 Literal 443 Literal 0 Literal 0 Literal 0 Literal 202 Literal 202 Literal 0 Literal 0 Literal 0 Literal 202 Literal 443 Literal 443 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 443 Literal 443 Literal 0 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 443 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 0 Literal 199 Literal 443 Literal 443 Literal 443 Literal 0 Literal 0 Literal 443 Literal 0 Literal 0 Literal 443 Literal 199 Literal 0 Literal 443 Literal 0 Literal 443 Literal 0 Literal 443 Literal 0 Literal 443 Literal 0 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 443 Literal 0 Literal 443 Literal 0 Literal 443 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 443 Literal 0 Literal 199 Literal 0 Literal 206 Literal 206 Literal 206 Literal 0 Literal 0 Literal 206 Literal 206 Literal 206 Literal 0 Literal 206 Literal 0 Literal 0 Literal 199 Literal 199 Literal 0 Literal 0 Literal 0 Literal 199 Literal 0 Literal 206 Literal 206 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 206 Literal 206 Literal 0 Literal 206 Literal 206 Literal 206 Literal 206 Literal 206 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 206 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 206 Literal 206 Literal 206 Literal 206 Literal 206 Literal 206 Literal 206 Literal 206 Literal 206 Literal 206 Literal 0 Literal 206 Literal 206 Literal 0 Literal 0 Literal 206 Literal 206 Literal 0 Literal 0 Literal 0 Literal 206 Literal 0 Literal 0 Literal 206 Literal 0 Literal 0 Literal 206 Literal 0 Literal 206 Literal 0 Literal 206 Literal 201 Literal 206 Literal 0 Literal 206 Literal 206 Literal 206 Literal 206 Literal 206 Literal 206 Literal 206 Literal 201 Literal 206 Literal 0 Literal 206 Literal 202 Literal 202 Literal 202 Literal 0 Literal 0 Literal 202 Literal 202 Literal 202 Literal 0 Literal 202 Literal 0 Literal 206 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 202 Literal 202 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 202 Literal 202 Literal 201 Literal 202 Literal 202 Literal 202 Literal 202 Literal 202 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 202 Literal 201 Literal 201 Literal 0 Literal 0 Literal 0 Literal 201 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 202 Literal 202 Literal 202 Literal 202 Literal 202 Literal 202 Literal 202 Literal 202 Literal 202 Literal 202 Literal 0 Literal 202 Literal 202 Literal 0 Literal 0 Literal 202 Literal 202 Literal 0 Literal 0 Literal 0 Literal 202 Literal 0 Literal 0 Literal 202 Literal 0 Literal 0 Literal 202 Literal 0 Literal 202 Literal 0 Literal 202 Literal 0 Literal 202 Literal 0 Literal 202 Literal 202 Literal 202 Literal 202 Literal 202 Literal 202 Literal 202 Literal 0 Literal 202 Literal 0 Literal 202 Literal 200 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 200 Literal 202 Literal 0 Literal 0 Literal 199 Literal 199 Literal 199 Literal 0 Literal 0 Literal 199 Literal 199 Literal 199 Literal 0 Literal 199 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 199 Literal 199 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 199 Literal 199 Literal 200 Literal 199 Literal 199 Literal 199 Literal 199 Literal 199 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 199 Literal 200 Literal 200 Literal 0 Literal 0 Literal 0 Literal 200 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 199 Literal 199 Literal 199 Literal 199 Literal 199 Literal 199 Literal 199 Literal 199 Literal 199 Literal 199 Literal 0 Literal 199 Literal 199 Literal 0 Literal 0 Literal 199 Literal 199 Literal 0 Literal 0 Literal 0 Literal 199 Literal 0 Literal 0 Literal 199 Literal 0 Literal 0 Literal 199 Literal 0 Literal 199 Literal 0 Literal 199 Literal 203 Literal 199 Literal 0 Literal 199 Literal 199 Literal 199 Literal 199 Literal 199 Literal 199 Literal 199 Literal 203 Literal 199 Literal 0 Literal 199 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 199 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 203 Literal 0 Literal 201 Literal 201 Literal 201 Literal 0 Literal 0 Literal 201 Literal 201 Literal 201 Literal 0 Literal 201 Literal 0 Literal 0 Literal 203 Literal 203 Literal 0 Literal 0 Literal 0 Literal 203 Literal 0 Literal 201 Literal 201 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 201 Literal 201 Literal 0 Literal 201 Literal 201 Literal 201 Literal 201 Literal 201 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 201 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 201 Literal 201 Literal 201 Literal 201 Literal 201 Literal 201 Literal 201 Literal 201 Literal 201 Literal 201 Literal 0 Literal 201 Literal 201 Literal 0 Literal 204 Literal 201 Literal 201 Literal 0 Literal 0 Literal 0 Literal 201 Literal 0 Literal 0 Literal 201 Literal 204 Literal 0 Literal 201 Literal 0 Literal 201 Literal 0 Literal 201 Literal 0 Literal 201 Literal 0 Literal 201 Literal 201 Literal 201 Literal 201 Literal 201 Literal 201 Literal 201 Literal 0 Literal 201 Literal 0 Literal 201 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 201 Literal 0 Literal 204 Literal 200 Literal 200 Literal 200 Literal 0 Literal 0 Literal 200 Literal 200 Literal 200 Literal 0 Literal 200 Literal 0 Literal 0 Literal 0 Literal 204 Literal 204 Literal 0 Literal 0 Literal 0 Literal 204 Literal 200 Literal 200 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 200 Literal 200 Literal 0 Literal 200 Literal 200 Literal 200 Literal 200 Literal 200 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 200 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 200 Literal 200 Literal 200 Literal 200 Literal 200 Literal 200 Literal 200 Literal 200 Literal 200 Literal 200 Literal 0 Literal 200 Literal 200 Literal 0 Literal 0 Literal 200 Literal 200 Literal 0 Literal 0 Literal 0 Literal 200 Literal 0 Literal 0 Literal 200 Literal 0 Literal 0 Literal 200 Literal 0 Literal 200 Literal 0 Literal 200 Literal 197 Literal 200 Literal 0 Literal 200 Literal 200 Literal 200 Literal 200 Literal 200 Literal 200 Literal 200 Literal 197 Literal 200 Literal 0 Literal 200 Literal 203 Literal 203 Literal 203 Literal 0 Literal 0 Literal 203 Literal 203 Literal 203 Literal 0 Literal 203 Literal 0 Literal 200 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 203 Literal 203 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 203 Literal 203 Literal 197 Literal 203 Literal 203 Literal 203 Literal 203 Literal 203 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 203 Literal 197 Literal 197 Literal 0 Literal 0 Literal 0 Literal 197 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 203 Literal 203 Literal 203 Literal 203 Literal 203 Literal 203 Literal 203 Literal 203 Literal 203 Literal 203 Literal 0 Literal 203 Literal 203 Literal 0 Literal 0 Literal 203 Literal 203 Literal 0 Literal 0 Literal 0 Literal 203 Literal 0 Literal 0 Literal 203 Literal 0 Literal 0 Literal 203 Literal 0 Literal 203 Literal 0 Literal 203 Literal 0 Literal 203 Literal 0 Literal 203 Literal 203 Literal 203 Literal 203 Literal 203 Literal 203 Literal 203 Literal 0 Literal 203 Literal 198 Literal 203 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 198 Literal 0 Literal 0 Literal 203 Literal 0 Literal 0 Literal 0 Literal 204 Literal 204 Literal 204 Literal 0 Literal 0 Literal 204 Literal 204 Literal 204 Literal 0 Literal 204 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 204 Literal 204 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 198 Literal 204 Literal 204 Literal 0 Literal 204 Literal 204 Literal 204 Literal 204 Literal 204 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 198 Literal 198 Literal 204 Literal 0 Literal 0 Literal 198 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 204 Literal 204 Literal 204 Literal 204 Literal 204 Literal 204 Literal 204 Literal 204 Literal 204 Literal 204 Literal 0 Literal 204 Literal 204 Literal 0 Literal 0 Literal 204 Literal 204 Literal 0 Literal 0 Literal 0 Literal 204 Literal 0 Literal 0 Literal 204 Literal 0 Literal 0 Literal 204 Literal 0 Literal 204 Literal 0 Literal 204 Literal 222 Literal 204 Literal 0 Literal 204 Literal 204 Literal 204 Literal 204 Literal 204 Literal 204 Literal 204 Literal 222 Literal 204 Literal 0 Literal 204 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 204 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 222 Literal 197 Literal 197 Literal 197 Literal 0 Literal 0 Literal 197 Literal 197 Literal 197 Literal 0 Literal 197 Literal 0 Literal 0 Literal 0 Literal 222 Literal 222 Literal 0 Literal 0 Literal 0 Literal 222 Literal 197 Literal 197 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 197 Literal 197 Literal 0 Literal 197 Literal 197 Literal 197 Literal 197 Literal 197 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 197 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 197 Literal 197 Literal 197 Literal 197 Literal 197 Literal 197 Literal 197 Literal 197 Literal 197 Literal 197 Literal 0 Literal 197 Literal 197 Literal 0 Literal 0 Literal 197 Literal 197 Literal 0 Literal 0 Literal 0 Literal 197 Literal 223 Literal 0 Literal 197 Literal 0 Literal 0 Literal 197 Literal 0 Literal 197 Literal 0 Literal 0 Literal 223 Literal 197 Literal 0 Literal 0 Literal 0 Literal 197 Literal 197 Literal 197 Literal 197 Literal 197 Literal 0 Literal 197 Literal 0 Literal 197 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 197 Literal 198 Literal 198 Literal 198 Literal 0 Literal 0 Literal 198 Literal 198 Literal 198 Literal 223 Literal 198 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 198 Literal 198 Literal 0 Literal 223 Literal 223 Literal 0 Literal 0 Literal 0 Literal 223 Literal 198 Literal 198 Literal 0 Literal 198 Literal 198 Literal 198 Literal 198 Literal 198 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 198 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 198 Literal 198 Literal 198 Literal 198 Literal 198 Literal 198 Literal 198 Literal 198 Literal 198 Literal 198 Literal 0 Literal 198 Literal 198 Literal 0 Literal 0 Literal 198 Literal 198 Literal 0 Literal 0 Literal 0 Literal 198 Literal 0 Literal 0 Literal 198 Literal 0 Literal 0 Literal 198 Literal 0 Literal 198 Literal 0 Literal 0 Literal 209 Literal 198 Literal 0 Literal 0 Literal 0 Literal 198 Literal 198 Literal 198 Literal 198 Literal 198 Literal 209 Literal 198 Literal 0 Literal 198 Literal 0 Literal 0 Literal 0 Literal 222 Literal 222 Literal 222 Literal 0 Literal 0 Literal 222 Literal 222 Literal 222 Literal 198 Literal 222 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 222 Literal 222 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 209 Literal 222 Literal 222 Literal 0 Literal 222 Literal 222 Literal 222 Literal 222 Literal 222 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 209 Literal 209 Literal 222 Literal 0 Literal 0 Literal 209 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 222 Literal 222 Literal 222 Literal 222 Literal 222 Literal 222 Literal 222 Literal 222 Literal 222 Literal 222 Literal 0 Literal 222 Literal 222 Literal 0 Literal 0 Literal 222 Literal 222 Literal 0 Literal 0 Literal 0 Literal 222 Literal 0 Literal 0 Literal 222 Literal 0 Literal 0 Literal 222 Literal 0 Literal 222 Literal 0 Literal 0 Literal 0 Literal 222 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 222 Literal 222 Literal 222 Literal 0 Literal 222 Literal 0 Literal 222 Literal 207 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 207 Literal 222 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 223 Literal 223 Literal 223 Literal 0 Literal 0 Literal 223 Literal 223 Literal 223 Literal 0 Literal 223 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 223 Literal 223 Literal 0 Literal 0 Literal 207 Literal 0 Literal 0 Literal 0 Literal 0 Literal 223 Literal 223 Literal 0 Literal 223 Literal 223 Literal 223 Literal 223 Literal 223 Literal 0 Literal 207 Literal 207 Literal 0 Literal 0 Literal 0 Literal 207 Literal 223 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 223 Literal 223 Literal 223 Literal 223 Literal 223 Literal 223 Literal 223 Literal 223 Literal 223 Literal 223 Literal 0 Literal 223 Literal 223 Literal 0 Literal 0 Literal 223 Literal 223 Literal 0 Literal 0 Literal 0 Literal 223 Literal 0 Literal 0 Literal 223 Literal 0 Literal 0 Literal 223 Literal 0 Literal 223 Literal 0 Literal 0 Literal 208 Literal 223 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 223 Literal 223 Literal 223 Literal 208 Literal 223 Literal 0 Literal 223 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 223 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 209 Literal 209 Literal 209 Literal 0 Literal 0 Literal 209 Literal 209 Literal 209 Literal 208 Literal 209 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 209 Literal 209 Literal 0 Literal 208 Literal 208 Literal 0 Literal 0 Literal 0 Literal 208 Literal 209 Literal 209 Literal 0 Literal 209 Literal 209 Literal 209 Literal 209 Literal 209 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 209 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 209 Literal 209 Literal 209 Literal 209 Literal 209 Literal 209 Literal 209 Literal 209 Literal 209 Literal 209 Literal 0 Literal 209 Literal 209 Literal 0 Literal 0 Literal 0 Literal 0 Literal 212 Literal 0 Literal 0 Literal 209 Literal 0 Literal 0 Literal 209 Literal 0 Literal 0 Literal 209 Literal 212 Literal 209 Literal 0 Literal 0 Literal 0 Literal 209 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 209 Literal 209 Literal 209 Literal 0 Literal 209 Literal 0 Literal 209 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 209 Literal 0 Literal 0 Literal 0 Literal 0 Literal 212 Literal 207 Literal 207 Literal 207 Literal 0 Literal 0 Literal 207 Literal 207 Literal 207 Literal 0 Literal 207 Literal 0 Literal 0 Literal 0 Literal 212 Literal 212 Literal 0 Literal 0 Literal 0 Literal 212 Literal 207 Literal 207 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 207 Literal 207 Literal 0 Literal 207 Literal 207 Literal 207 Literal 207 Literal 207 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 207 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 207 Literal 207 Literal 207 Literal 207 Literal 207 Literal 207 Literal 207 Literal 207 Literal 207 Literal 207 Literal 0 Literal 207 Literal 207 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 214 Literal 207 Literal 0 Literal 0 Literal 207 Literal 0 Literal 0 Literal 207 Literal 0 Literal 207 Literal 214 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 207 Literal 207 Literal 207 Literal 0 Literal 207 Literal 0 Literal 207 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 208 Literal 208 Literal 208 Literal 0 Literal 207 Literal 208 Literal 208 Literal 208 Literal 0 Literal 208 Literal 0 Literal 214 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 208 Literal 208 Literal 0 Literal 0 Literal 0 Literal 0 Literal 214 Literal 214 Literal 0 Literal 208 Literal 208 Literal 214 Literal 208 Literal 208 Literal 208 Literal 208 Literal 208 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 208 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 208 Literal 208 Literal 208 Literal 208 Literal 208 Literal 208 Literal 208 Literal 208 Literal 208 Literal 208 Literal 0 Literal 208 Literal 208 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 208 Literal 0 Literal 0 Literal 208 Literal 0 Literal 0 Literal 208 Literal 0 Literal 208 Literal 0 Literal 0 Literal 213 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 208 Literal 208 Literal 208 Literal 213 Literal 208 Literal 0 Literal 208 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 212 Literal 212 Literal 212 Literal 208 Literal 0 Literal 212 Literal 212 Literal 212 Literal 0 Literal 212 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 212 Literal 212 Literal 0 Literal 213 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 212 Literal 212 Literal 0 Literal 212 Literal 212 Literal 212 Literal 212 Literal 212 Literal 213 Literal 213 Literal 0 Literal 0 Literal 0 Literal 213 Literal 0 Literal 212 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 212 Literal 212 Literal 212 Literal 212 Literal 212 Literal 212 Literal 212 Literal 212 Literal 212 Literal 212 Literal 0 Literal 212 Literal 212 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 211 Literal 212 Literal 0 Literal 0 Literal 212 Literal 0 Literal 0 Literal 212 Literal 0 Literal 212 Literal 211 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 212 Literal 212 Literal 0 Literal 0 Literal 0 Literal 0 Literal 212 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 212 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 211 Literal 214 Literal 214 Literal 214 Literal 0 Literal 0 Literal 214 Literal 214 Literal 214 Literal 0 Literal 214 Literal 0 Literal 0 Literal 0 Literal 211 Literal 211 Literal 0 Literal 0 Literal 0 Literal 211 Literal 214 Literal 214 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 214 Literal 214 Literal 0 Literal 214 Literal 214 Literal 214	1
MethodDeclaration Modifier public ReferenceType RubyInteger convertToInteger FormalParameter ReferenceType String convertMethod LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator val MethodInvocation TypeConverter This MethodInvocation MethodInvocation getInteger getRuntime MemberReference convertMethod Literal true convertToType IfStatement BinaryOperation instanceof MemberReference val ReferenceType RubyInteger ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation getName getMetaClass Literal "#" MemberReference convertMethod Literal " should return Integer" newTypeError getRuntime ReturnStatement Cast ReferenceType RubyInteger MemberReference val	1
MethodDeclaration Modifier public ReferenceType Object getKey ReturnStatement MethodInvocation MethodInvocation unmaskKey	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object object ReturnStatement Cast ReferenceType IRubyObject MemberReference object	0
MethodDeclaration Modifier public BasicType boolean alwaysFalse SwitchStatement This SwitchStatementCase NILNODE FALSENODE ReturnStatement Literal true SwitchStatementCase ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Object case429_line1603 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation yyerrok StatementExpression Assignment MemberReference yyVal Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public FormalParameter ReferenceType Label arg0 StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference arg0 visitJumpInsn getMethodVisitor	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MemberReference superNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType RubyDir MemberReference runtime MemberReference klass	0
MethodDeclaration Modifier protected Annotation Override checkFrozen StatementExpression MethodInvocation checkInitialized IfStatement MethodInvocation internal isFrozen ThrowStatement MethodInvocation MethodInvocation Literal "not modifiable string" newIOError getRuntime	1
MethodDeclaration Modifier public FormalParameter ReferenceType Map TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand valueMap StatementExpression SuperMethodInvocation MemberReference valueMap ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference variables length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i variables MemberReference ArraySelector MemberReference i MethodInvocation MemberReference valueMap variables =	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject getArgValues IfStatement MethodInvocation ! staticScope isArgumentScope BlockStatement ReturnStatement MethodInvocation parent getArgValues LocalVariableDeclaration BasicType int VariableDeclarator totalArgs BinaryOperation + MethodInvocation staticScope getRequiredArgs MethodInvocation staticScope getOptionalArgs IfStatement BinaryOperation < MethodInvocation staticScope getRestArg Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference totalArgs Literal 1 BlockStatement ReturnStatement ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference variableValueZero BlockStatement ReturnStatement MemberReference IRubyObject NULL_ARRAY BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator restArg MethodInvocation MethodInvocation staticScope getRestArg Literal 0 getValue LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator splattedArgs MethodInvocation RuntimeHelpers MemberReference restArg splatValue LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator argValues ArrayCreator ReferenceType IRubyObject BinaryOperation + MemberReference totalArgs MethodInvocation splattedArgs size StatementExpression MethodInvocation System MethodInvocation splattedArgs toJavaArray Literal 0 MemberReference argValues MemberReference totalArgs MethodInvocation splattedArgs size arraycopy IfStatement BinaryOperation == MemberReference totalArgs Literal 1 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 argValues MemberReference variableValueZero = ReturnStatement MemberReference argValues	1
MethodDeclaration Modifier public Annotation Override ReferenceType Block FormalParameter ReferenceType Binding binding ReturnStatement ClassCreator ReferenceType Block This MemberReference binding	0
MethodDeclaration Modifier private final static BasicType boolean isPrintable FormalParameter BasicType byte aChar ReturnStatement BinaryOperation && BinaryOperation > MemberReference aChar Literal 32 BinaryOperation < MemberReference aChar Literal 127	1
MethodDeclaration Modifier public Annotation Override BasicType long getLongValue ReturnStatement MemberReference value	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType OPASGNNODE	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "readline" ElementValuePair writes MemberReference FrameField LASTLINE ReferenceType IRubyObject readline FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject separator LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator line MethodInvocation MemberReference context MemberReference separator gets IfStatement MethodInvocation line isNil ThrowStatement MethodInvocation context MethodInvocation newEOFError getRuntime ReturnStatement MemberReference line	1
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject object FormalParameter ReferenceType IRubyObject value ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 8 MemberReference name MemberReference object MemberReference value setVariable	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType IRubyObject arg8 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type FormalParameter ReferenceType Block unusedBlock ReturnStatement MethodInvocation MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 MemberReference binding MemberReference type call	1
MethodDeclaration ReferenceType JavaProxyMethod initMethod FormalParameter ReferenceType String name FormalParameter ReferenceType String desc FormalParameter BasicType boolean hasSuper LocalVariableDeclaration ReferenceType Class VariableDeclarator proxy MemberReference proxyClass TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator parms MethodInvocation MethodInvocation proxy getClassLoader MemberReference desc parse LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation proxy MemberReference name MemberReference parms getDeclaredMethod LocalVariableDeclaration ReferenceType Method VariableDeclarator sm Literal null IfStatement MemberReference hasSuper BlockStatement StatementExpression Assignment MemberReference sm MethodInvocation proxy BinaryOperation + Literal "__super$" MemberReference name MemberReference parms getDeclaredMethod = LocalVariableDeclaration ReferenceType JavaProxyMethod VariableDeclarator jpm ClassCreator ReferenceType ProxyMethodImpl MethodInvocation getRuntime This MemberReference m MemberReference sm StatementExpression MethodInvocation methods MemberReference jpm add LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType JavaProxyMethod VariableDeclarator methodsWithName MethodInvocation methodMap MemberReference name get IfStatement BinaryOperation == MemberReference methodsWithName Literal null BlockStatement StatementExpression Assignment MemberReference methodsWithName ClassCreator ReferenceType ArrayList TypeArgument ReferenceType JavaProxyMethod Literal 2 = StatementExpression MethodInvocation methodMap MemberReference name MemberReference methodsWithName put StatementExpression MethodInvocation methodsWithName MemberReference jpm add ReturnStatement MemberReference jpm CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType InternalError MethodInvocation e getMessage CatchClause CatchClauseParameter SecurityException e ThrowStatement ClassCreator ReferenceType InternalError MethodInvocation e getMessage CatchClause CatchClauseParameter NoSuchMethodException e ThrowStatement ClassCreator ReferenceType InternalError MethodInvocation e getMessage	1
MethodDeclaration Modifier public static ReferenceType RubyModule getModuleFromPath FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String path LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator value MethodInvocation runtime MemberReference path getClassFromPath IfStatement MethodInvocation ! value isModule ThrowStatement MethodInvocation runtime BinaryOperation + MemberReference path Literal " does not refer module" newArgumentError ReturnStatement MemberReference value	1
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation ifNode getThenBody Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation ifNode getThenBody MemberReference context MemberReference expr compile BlockStatement IfStatement MemberReference expr StatementExpression MethodInvocation context loadNil	1
MethodDeclaration Modifier public ReferenceType Object case246_line956 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 6 MemberReference yyTop yyVals getPosition MethodInvocation support MethodInvocation ClassCreator ReferenceType HashNode MethodInvocation getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals add MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 6 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 6 MemberReference yyTop yyVals newArrayNode Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals arg_concat = StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference yyVal Cast ReferenceType BlockPassNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_blk_pass = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + MemberReference s MemberReference i	0
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType Map TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand valueMap StatementExpression MethodInvocation MemberReference valueMap ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 StatementExpression MethodInvocation MethodInvocation self getRuntime createJavaMethods LocalVariableDeclaration ReferenceType JavaMethod VariableDeclarator method Cast ReferenceType JavaMethod MethodInvocation MemberReference self MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 findCallableArityThree LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg0 MethodInvocation MemberReference context MemberReference arg0 MemberReference method Literal 0 convertArg LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg1 MethodInvocation MemberReference context MemberReference arg1 MemberReference method Literal 1 convertArg LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg2 MethodInvocation MemberReference context MemberReference arg2 MemberReference method Literal 2 convertArg ReturnStatement MethodInvocation method MemberReference cArg0 MemberReference cArg1 MemberReference cArg2 invokeStaticDirect	0
MethodDeclaration Modifier private ReferenceType ClassWriter createBlockCtor FormalParameter ReferenceType String namePath FormalParameter ReferenceType Class fieldClass Exception LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw ClassCreator ReferenceType ClassWriter BinaryOperation | MemberReference ClassWriter COMPUTE_MAXS MemberReference ClassWriter COMPUTE_FRAMES StatementExpression MethodInvocation cw MemberReference RubyInstanceConfig JAVA_VERSION BinaryOperation + MemberReference ACC_PUBLIC MemberReference ACC_SUPER MemberReference namePath Literal null MethodInvocation ClassReference ReferenceType CompiledBlockCallback p Literal null visit StatementExpression MethodInvocation cw BinaryOperation | MemberReference ACC_PRIVATE MemberReference ACC_FINAL Literal "$scriptObject" MethodInvocation MemberReference fieldClass ci Literal null Literal null visitField LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator mv ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cw MemberReference ACC_PUBLIC Literal "<init>" MethodInvocation MemberReference Void TYPE MethodInvocation ClassReference ReferenceType Object params sig Literal null Literal null visitMethod StatementExpression MethodInvocation mv start StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType CompiledBlockCallback p Literal "<init>" MethodInvocation VoidClassReference sig invokespecial StatementExpression MethodInvocation mv Literal 0 aload StatementExpression MethodInvocation mv Literal 1 aload StatementExpression MethodInvocation mv MethodInvocation MemberReference fieldClass p checkcast StatementExpression MethodInvocation mv MemberReference namePath Literal "$scriptObject" MethodInvocation MemberReference fieldClass ci putfield StatementExpression MethodInvocation mv voidreturn StatementExpression MethodInvocation mv end ReturnStatement MemberReference cw	1
MethodDeclaration Modifier public popmethod StatementExpression MethodInvocation MethodInvocation popmethod clsData	0
MethodDeclaration Modifier public ReferenceType Annotation getParameterAnnotations ReturnStatement MethodInvocation method getParameterAnnotations	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType String VariableDeclarator n BinaryOperation + MemberReference ROOT_METHOD_PREFIX MemberReference StatementExpression Assignment MemberReference _rootMethod ClassCreator ReferenceType IR_Method This This MemberReference n MemberReference n Literal false = StatementExpression MethodInvocation MemberReference _rootMethod addMethod	0
MethodDeclaration Modifier private ReferenceType IRubyObject subBangNoIter FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Regex pattern FormalParameter ReferenceType RubyString repl LocalVariableDeclaration BasicType int VariableDeclarator tuFlags MemberReference repl flags LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MemberReference value begin MemberReference value realSize LocalVariableDeclaration ReferenceType Matcher VariableDeclarator matcher MethodInvocation pattern MemberReference value bytes MemberReference value begin MemberReference matcher LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope IfStatement BinaryOperation >= MethodInvocation matcher MemberReference value begin MemberReference MemberReference Option NONE search Literal 0 BlockStatement StatementExpression Assignment MemberReference repl MethodInvocation RubyRegexp MemberReference repl This MemberReference matcher MethodInvocation context MethodInvocation getKCode MethodInvocation getEncoding getRuntime regsub = StatementExpression MethodInvocation RubyRegexp MemberReference context This MemberReference scope MemberReference matcher MemberReference pattern updateBackRef ReturnStatement MethodInvocation MemberReference context MemberReference pattern MemberReference matcher MemberReference repl MemberReference tuFlags BlockStatement ReturnStatement MethodInvocation scope MethodInvocation context MethodInvocation getNil getRuntime setBackRef	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isImmediate ReturnStatement Literal true	0
MethodDeclaration Modifier public static ReferenceType Block newCompiledClosure FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Arity arity FormalParameter ReferenceType scope FormalParameter ReferenceType CompiledBlockCallback19 callback FormalParameter BasicType boolean hasMultipleArgsHead FormalParameter BasicType int LocalVariableDeclaration ReferenceType Binding VariableDeclarator binding MethodInvocation context MemberReference self MemberReference Visibility PUBLIC currentBinding LocalVariableDeclaration ReferenceType VariableDeclarator body ClassCreator ReferenceType MemberReference arity MemberReference scope MemberReference callback MemberReference hasMultipleArgsHead MemberReference ReturnStatement ClassCreator ReferenceType Block MemberReference body MemberReference binding	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<=>" ElementValuePair required Literal 1 ReferenceType IRubyObject op_cmp FormalParameter ReferenceType IRubyObject obj IfStatement BinaryOperation == This MemberReference obj ReturnStatement MethodInvocation MethodInvocation Literal 0 newFixnum getRuntime IfStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyModule ReturnStatement MethodInvocation MethodInvocation getNil getRuntime LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module Cast ReferenceType RubyModule MemberReference obj IfStatement MethodInvocation module This isKindOfModule ReturnStatement MethodInvocation MethodInvocation Literal 1 newFixnum getRuntime IfStatement This MethodInvocation MemberReference module isKindOfModule ReturnStatement MethodInvocation MethodInvocation Literal - 1 newFixnum getRuntime ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public static ReferenceType ClassLoader getClassLoader LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator loader ClassReference MethodInvocation getClassLoader ReferenceType Ruby IfStatement BinaryOperation == MemberReference loader Literal null BlockStatement StatementExpression Assignment MemberReference loader MethodInvocation ClassLoader getSystemClassLoader = ReturnStatement MemberReference loader	0
MethodDeclaration Modifier public ReferenceType ThreadContext getCurrentContext LocalVariableDeclaration ReferenceType SoftReference VariableDeclarator sr Literal null LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context Literal null WhileStatement BinaryOperation == MemberReference context Literal null BlockStatement IfStatement BinaryOperation == Assignment MemberReference sr Cast ReferenceType SoftReference MethodInvocation localContext get = Literal null BlockStatement StatementExpression Assignment MemberReference sr MethodInvocation adoptCurrentThread = StatementExpression Assignment MemberReference context Cast ReferenceType ThreadContext MethodInvocation sr get = BlockStatement StatementExpression Assignment MemberReference context Cast ReferenceType ThreadContext MethodInvocation sr get = IfStatement BinaryOperation == MemberReference context Literal null BlockStatement StatementExpression MethodInvocation localContext Literal null set ReturnStatement MemberReference context	1
MethodDeclaration Modifier public static ReferenceType Block getBlock FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Node node FormalParameter ReferenceType Block aBlock ReturnStatement MethodInvocation RuntimeHelpers MemberReference runtime MethodInvocation node MemberReference runtime MemberReference context MemberReference self MemberReference aBlock MemberReference aBlock	0
MethodDeclaration Modifier public BasicType boolean isMethodBound FormalParameter ReferenceType String name FormalParameter BasicType boolean checkVisibility LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MemberReference name searchMethod IfStatement MethodInvocation ! method isUndefined BlockStatement ReturnStatement BinaryOperation && MemberReference checkVisibility BinaryOperation == MethodInvocation method getVisibility MemberReference PRIVATE ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ">>" ReferenceType IRubyObject op_rshift FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum ReturnStatement MethodInvocation RubyBignum MethodInvocation MemberReference other op_rshift MethodInvocation getRuntime MemberReference value newBignum LocalVariableDeclaration BasicType long VariableDeclarator width Cast ReferenceType RubyFixnum MemberReference other IfStatement BinaryOperation == MemberReference width Literal 0 ReturnStatement This ReturnStatement TernaryExpression BinaryOperation < MemberReference width Literal 0 MethodInvocation MemberReference - width lshift MethodInvocation MemberReference width rshift	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public ReferenceType Object case88_line625 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation || MethodInvocation support isInDef MethodInvocation support isInSingle BlockStatement StatementExpression MethodInvocation Literal "dynamic constant assignment" yyerror LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ConstDeclNode MemberReference position Literal null MethodInvocation support MemberReference position Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_colon3 MemberReference NilImplicitNode NIL = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier protected ReferenceType DynamicMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String methodName ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference self Literal 9 MemberReference methodName getMethod	0
MethodDeclaration Modifier public ReferenceType RubyString to_s FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 0 ReturnStatement MethodInvocation to_s SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference ArraySelector Literal 0 args to_s SwitchStatementCase ThrowStatement MethodInvocation MethodInvocation MemberReference args length Literal 1 newArgumentError getRuntime	1
MethodDeclaration Modifier public assignMethodArguments19 FormalParameter ReferenceType Object preArgs FormalParameter BasicType int preArgsCount FormalParameter ReferenceType Object postArgs FormalParameter BasicType int postArgsCount FormalParameter BasicType int postArgsIndex FormalParameter ReferenceType Object optArgs FormalParameter BasicType int optArgsCount FormalParameter ReferenceType ArrayCallback requiredAssignment FormalParameter ReferenceType ArrayCallback optGivenAssignment FormalParameter ReferenceType ArrayCallback optNotGivenAssignment FormalParameter ReferenceType CompilerCallback restAssignment FormalParameter ReferenceType CompilerCallback blockAssignment IfStatement MemberReference specificArity BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator currentArgElement Literal 0 ForStatement ForControl BinaryOperation < MemberReference currentArgElement MethodInvocation scope getRequiredArgs MemberReference ++ currentArgElement BlockStatement StatementExpression MethodInvocation method BinaryOperation + MemberReference argsIndex MemberReference currentArgElement aload StatementExpression MethodInvocation requiredAssignment MemberReference methodCompiler MemberReference preArgs MemberReference currentArgElement nextValue BlockStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation > MemberReference preArgsCount Literal 0 BinaryOperation > MemberReference postArgsCount Literal 0 BinaryOperation > MemberReference optArgsCount Literal 0 BinaryOperation != MemberReference restAssignment Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator currentArgElement Literal 0 ForStatement ForControl BinaryOperation < MemberReference currentArgElement MemberReference preArgsCount MemberReference ++ currentArgElement BlockStatement StatementExpression MethodInvocation method MemberReference argsIndex aload StatementExpression MethodInvocation method MemberReference currentArgElement pushInt StatementExpression MethodInvocation methodCompiler loadNil StatementExpression MethodInvocation methodCompiler Literal "elementOrNil" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference BasicType int ClassReference ReferenceType IRubyObject sig invokeUtilityMethod StatementExpression MethodInvocation requiredAssignment MemberReference methodCompiler MemberReference preArgs MemberReference currentArgElement nextValue IfStatement BinaryOperation > MemberReference optArgsCount Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Label VariableDeclarator doneWithOpt ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator optLabels ArrayCreator ReferenceType Label MemberReference optArgsCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference optLabels length MemberReference ++ i StatementExpression Assignment MemberReference ArraySelector MemberReference i optLabels ClassCreator ReferenceType Label = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator optArgElement Literal 0 BinaryOperation < MemberReference optArgElement MemberReference optArgsCount MemberReference ++ currentArgElement MemberReference ++ optArgElement BlockStatement StatementExpression MethodInvocation method MemberReference argsIndex aload StatementExpression MethodInvocation method MemberReference currentArgElement pushInt StatementExpression MethodInvocation methodCompiler Literal "elementOrNull" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference BasicType int sig invokeUtilityMethod StatementExpression MethodInvocation method dup StatementExpression MethodInvocation method MemberReference ArraySelector MemberReference optArgElement optLabels StatementExpression MethodInvocation optGivenAssignment MemberReference methodCompiler MemberReference optArgs MemberReference optArgElement nextValue StatementExpression MethodInvocation method MemberReference doneWithOpt go_to ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator optArgElement Literal 0 BinaryOperation < MemberReference optArgElement MemberReference optArgsCount MemberReference ++ optArgElement BlockStatement StatementExpression MethodInvocation method MemberReference ArraySelector MemberReference optArgElement optLabels label StatementExpression MethodInvocation optNotGivenAssignment MemberReference methodCompiler MemberReference optArgs MemberReference optArgElement nextValue StatementExpression MethodInvocation method pop StatementExpression MethodInvocation method MemberReference doneWithOpt label IfStatement BinaryOperation != MemberReference restAssignment Literal null BlockStatement StatementExpression MethodInvocation method MemberReference argsIndex aload StatementExpression MethodInvocation methodCompiler StatementExpression MethodInvocation method MemberReference currentArgElement pushInt StatementExpression MethodInvocation method MemberReference postArgsCount pushInt StatementExpression MethodInvocation methodCompiler Literal "createSubarray" MethodInvocation ClassReference ReferenceType RubyArray ClassReference ReferenceType IRubyObject ClassReference ReferenceType Ruby ClassReference BasicType int ClassReference BasicType int sig invokeUtilityMethod StatementExpression MethodInvocation restAssignment MemberReference methodCompiler call ForStatement ForControl BinaryOperation < MemberReference currentArgElement MemberReference postArgsCount MemberReference ++ currentArgElement BlockStatement StatementExpression MethodInvocation method MemberReference argsIndex aload StatementExpression MethodInvocation method MemberReference currentArgElement pushInt StatementExpression MethodInvocation methodCompiler loadNil StatementExpression MethodInvocation methodCompiler Literal "elementOrNil" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference BasicType int ClassReference ReferenceType IRubyObject sig invokeUtilityMethod StatementExpression MethodInvocation requiredAssignment MemberReference methodCompiler MemberReference postArgs MemberReference currentArgElement nextValue IfStatement BinaryOperation != MemberReference blockAssignment Literal null BlockStatement StatementExpression MethodInvocation methodCompiler StatementExpression MethodInvocation method MethodInvocation methodCompiler aload StatementExpression MethodInvocation methodCompiler Literal "processBlockArgument" MethodInvocation ClassReference ReferenceType IRubyObject MethodInvocation ClassReference ReferenceType Ruby ClassReference ReferenceType Block params sig invokeUtilityMethod StatementExpression MethodInvocation blockAssignment MemberReference methodCompiler call	1
MethodDeclaration Modifier public FormalParameter BasicType int arg0 FormalParameter BasicType int arg1 FormalParameter ReferenceType Label arg2 FormalParameter ReferenceType Label arg3 StatementExpression MethodInvocation MethodInvocation MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 getMethodVisitor	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "to_c" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject to_c FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation RubyComplex MemberReference context MethodInvocation RubyFixnum MethodInvocation context getRuntime zero newComplexCanonicalize	1
MethodDeclaration Modifier private static BasicType boolean isSymbolName FormalParameter ReferenceType String s IfStatement BinaryOperation || BinaryOperation == MemberReference s Literal null BinaryOperation < MethodInvocation s length Literal 1 ReturnStatement Literal false LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation s length LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation s Literal 0 charAt SwitchStatement MemberReference c SwitchStatementCase Literal '$' IfStatement BinaryOperation && BinaryOperation > MemberReference length Literal 1 MethodInvocation MethodInvocation s Literal 1 substring isSpecialGlobalName BlockStatement ReturnStatement Literal true ReturnStatement MethodInvocation MethodInvocation s Literal 1 substring isIdentifier SwitchStatementCase Literal '@' LocalVariableDeclaration BasicType int VariableDeclarator offset Literal 1 IfStatement BinaryOperation && BinaryOperation >= MemberReference length Literal 2 BinaryOperation == MethodInvocation s Literal 1 charAt Literal '@' BlockStatement StatementExpression MemberReference ++ offset ReturnStatement MethodInvocation MethodInvocation s MemberReference offset substring isIdentifier SwitchStatementCase Literal '<' ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference length Literal 1 BinaryOperation && BinaryOperation == MemberReference length Literal 2 BinaryOperation || MethodInvocation s Literal "<<" equals MethodInvocation s Literal "<=" equals BinaryOperation && BinaryOperation == MemberReference length Literal 3 MethodInvocation s Literal "<=>" equals SwitchStatementCase Literal '>' ReturnStatement BinaryOperation || BinaryOperation == MemberReference length Literal 1 BinaryOperation && BinaryOperation == MemberReference length Literal 2 BinaryOperation || MethodInvocation s Literal ">>" equals MethodInvocation s Literal ">=" equals SwitchStatementCase Literal '=' ReturnStatement BinaryOperation || BinaryOperation && BinaryOperation == MemberReference length Literal 2 BinaryOperation || MethodInvocation s Literal "==" equals MethodInvocation s Literal "=~" equals BinaryOperation && BinaryOperation == MemberReference length Literal 3 MethodInvocation s Literal "===" equals SwitchStatementCase Literal '*' ReturnStatement BinaryOperation || BinaryOperation == MemberReference length Literal 1 BinaryOperation && BinaryOperation == MemberReference length Literal 2 MethodInvocation s Literal "**" equals SwitchStatementCase Literal '+' ReturnStatement BinaryOperation || BinaryOperation == MemberReference length Literal 1 BinaryOperation && BinaryOperation == MemberReference length Literal 2 MethodInvocation s Literal "+@" equals SwitchStatementCase Literal '-' ReturnStatement BinaryOperation || BinaryOperation == MemberReference length Literal 1 BinaryOperation && BinaryOperation == MemberReference length Literal 2 MethodInvocation s Literal "-@" equals SwitchStatementCase Literal '|' Literal '^' Literal '&' Literal '/' Literal '%' Literal '~' Literal '`' ReturnStatement BinaryOperation == MemberReference length Literal 1 SwitchStatementCase Literal '[' ReturnStatement BinaryOperation || MethodInvocation s Literal "[]" equals MethodInvocation s Literal "[]=" equals IfStatement MethodInvocation ! MemberReference c isIdentStart ReturnStatement Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator localID BinaryOperation && BinaryOperation >= MemberReference c Literal 'a' BinaryOperation <= MemberReference c Literal 'z' LocalVariableDeclaration BasicType int VariableDeclarator last Literal 1 ForStatement ForControl BinaryOperation < MemberReference last MemberReference length MemberReference ++ last BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator d MethodInvocation s MemberReference last charAt IfStatement MethodInvocation ! MemberReference d isIdentChar BlockStatement BreakStatement IfStatement BinaryOperation == MemberReference last MemberReference length BlockStatement ReturnStatement Literal true IfStatement BinaryOperation && MemberReference localID BinaryOperation == MemberReference last BinaryOperation - MemberReference length Literal 1 BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator d MethodInvocation s MemberReference last charAt ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference d Literal '!' BinaryOperation == MemberReference d Literal '?' BinaryOperation == MemberReference d Literal '=' ReturnStatement Literal false	1
MethodDeclaration Modifier public static ReferenceType List TypeArgument ReferenceType ByteList push_glob FormalParameter ReferenceType String cwd FormalParameter ReferenceType ByteList globByteList FormalParameter BasicType int flags LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ByteList VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ByteList IfStatement BinaryOperation > MethodInvocation globByteList length Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference cwd MemberReference result ClassCreator ReferenceType GlobPattern MemberReference globByteList MemberReference flags push_braces ReturnStatement MemberReference result	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e TryStatement StatementExpression MethodInvocation manager Literal "ruby" Literal "initUI" Literal 1 Literal 1 MethodInvocation input getText exec CatchClause CatchClauseParameter BSFException excptn StatementExpression MethodInvocation excptn printStackTrace StatementExpression MethodInvocation JOptionPane MemberReference frame MethodInvocation excptn getMessage showMessageDialog	0
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ReturnStatement Literal "method"	0
MethodDeclaration Modifier public ReferenceType CompatVersion getVersion ReturnStatement MemberReference version	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "gid" ReferenceType IRubyObject gid ReturnStatement MethodInvocation MethodInvocation MethodInvocation stat gid newFixnum getRuntime	0
MethodDeclaration Modifier public Annotation Override ReferenceType String mapLibraryName FormalParameter ReferenceType String ReturnStatement TernaryExpression BinaryOperation || Literal MethodInvocation MemberReference equals "c" Literal MethodInvocation MemberReference equals "libc.so" Literal "libc.so.6" SuperMethodInvocation MemberReference mapLibraryName	0
MethodDeclaration Modifier public invokeAttrAssignMasgn FormalParameter ReferenceType String name FormalParameter ReferenceType CompilerCallback receiverCallback FormalParameter ReferenceType ArgumentsCallback argsCallback LocalVariableDeclaration BasicType int VariableDeclarator temp MethodInvocation methodCompiler MethodInvocation grabTempLocal getVariableCompiler StatementExpression MethodInvocation methodCompiler MethodInvocation MemberReference temp setTempLocal getVariableCompiler StatementExpression MethodInvocation receiverCallback MemberReference methodCompiler call StatementExpression MethodInvocation method dup StatementExpression MethodInvocation methodCompiler loadSelf StatementExpression MethodInvocation methodCompiler MethodInvocation getCacheCompiler MethodInvocation MemberReference methodCompiler MemberReference name MemberReference CallType NORMAL cacheCallSite getScriptCompiler StatementExpression MethodInvocation methodCompiler MethodInvocation getCacheCompiler MethodInvocation MemberReference methodCompiler MemberReference name MemberReference CallType VARIABLE cacheCallSite getScriptCompiler StatementExpression MethodInvocation methodCompiler Literal "selectAttrAsgnCallSite" MethodInvocation ClassReference ReferenceType CallSite ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallSite ClassReference ReferenceType CallSite sig invokeUtilityMethod LocalVariableDeclaration ReferenceType String VariableDeclarator signature Literal null IfStatement BinaryOperation == MemberReference argsCallback Literal null BlockStatement StatementExpression Assignment MemberReference signature MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallSite ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject sig = BlockStatement SwitchStatement MethodInvocation argsCallback getArity SwitchStatementCase Literal 1 StatementExpression MethodInvocation argsCallback MemberReference methodCompiler call StatementExpression Assignment MemberReference signature MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallSite ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject sig = BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation argsCallback MemberReference methodCompiler call StatementExpression Assignment MemberReference signature MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallSite ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject sig = BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation argsCallback MemberReference methodCompiler call StatementExpression Assignment MemberReference signature MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallSite ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject sig = BreakStatement SwitchStatementCase StatementExpression MethodInvocation argsCallback MemberReference methodCompiler call StatementExpression Assignment MemberReference signature MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallSite ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject sig = StatementExpression MethodInvocation methodCompiler MethodInvocation MemberReference temp getTempLocal getVariableCompiler StatementExpression MethodInvocation methodCompiler MethodInvocation releaseTempLocal getVariableCompiler StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation methodCompiler loadSelf StatementExpression MethodInvocation methodCompiler Literal "doAttrAsgn" MemberReference signature invokeUtilityMethod	1
MethodDeclaration ReferenceType String thePackageScopeMethod ReturnStatement Literal	0
MethodDeclaration Modifier public setClassCache FormalParameter ReferenceType classCache StatementExpression Assignment This MemberReference classCache MemberReference classCache =	0
MethodDeclaration Modifier private ReferenceType String format FormalParameter ReferenceType IRubyObject args ReturnStatement MemberReference ArraySelector Literal 0 MethodInvocation toString args	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + SuperMethodInvocation toString Literal "(" MemberReference _module Literal ", " MemberReference Literal ")"	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MemberReference context to_s	0
MethodDeclaration Modifier public load FormalParameter ReferenceType Ruby runtime FormalParameter BasicType boolean wrap IOException StatementExpression MethodInvocation RubyStringScanner MemberReference runtime createScannerClass	0
MethodDeclaration Modifier public ReferenceType Object case223_line896 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal ">>" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static BasicType boolean isDoubleFloatable FormalParameter BasicType double value ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference value Literal 0.0 BinaryOperation && BinaryOperation >= MemberReference value MemberReference Float MIN_VALUE BinaryOperation <= MemberReference value MemberReference Float MAX_VALUE BinaryOperation && BinaryOperation >= MemberReference value MemberReference - Float MAX_VALUE BinaryOperation <= MemberReference value MemberReference - Float MIN_VALUE MethodInvocation Double MemberReference value isNaN BinaryOperation == MemberReference value MemberReference Double POSITIVE_INFINITY BinaryOperation == MemberReference value MemberReference Double NEGATIVE_INFINITY	1
MethodDeclaration Modifier public ReferenceType Arity getArity ReturnStatement MethodInvocation Arity noArguments	0
MethodDeclaration Modifier public ReferenceType Object case456_line1725 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType UnnamedRestArgNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation support MethodInvocation getLocalScope MethodInvocation Literal "*" addVariable getCurrentScope = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "[]" ElementValuePair backtrace Literal true ReferenceType IRubyObject op_aref FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyInteger BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index Cast BasicType int Cast ReferenceType RubyInteger MemberReference arg ReturnStatement MethodInvocation MethodInvocation MemberReference index getJavaArray BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference arg getRange	1
MethodDeclaration Modifier public static ReferenceType String setByte FormalParameter BasicType byte b ReturnStatement MethodInvocation String MemberReference b valueOf	0
MethodDeclaration Modifier public ReferenceType Object case104_line672 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals ClassCreator ReferenceType UndefNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals appendToBlock = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType String __type__ ReturnStatement Literal "foo"	1
MethodDeclaration Modifier private static ReferenceType IRubyObject callMethodMissing FormalParameter ReferenceType CacheEntry entry FormalParameter ReferenceType CallType callType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MemberReference context MemberReference self MethodInvocation self getMetaClass MemberReference name MemberReference arg MemberReference Block NULL_BLOCK call MemberReference context MemberReference self MethodInvocation getVisibility MemberReference name MemberReference callType	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyArray constants19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject allConstants ReturnStatement MethodInvocation MemberReference context MethodInvocation allConstants isTrue	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "empty?" ReferenceType IRubyObject empty_p ReturnStatement TernaryExpression BinaryOperation == MemberReference realLength Literal 0 MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public final ReferenceType IRubyObject getConstant FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name FormalParameter BasicType int index LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MethodInvocation MemberReference context MemberReference name MemberReference index getValue ReturnStatement TernaryExpression BinaryOperation != MemberReference value Literal null MemberReference value MethodInvocation context MethodInvocation getStaticScope MethodInvocation getModule MethodInvocation MemberReference context Literal MethodInvocation context MethodInvocation MemberReference name fastNewSymbol getRuntime callMethod getCurrentScope	0
MethodDeclaration Modifier public static Annotation SuppressWarnings Literal "deprecation" BasicType int utf8Length FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int end LocalVariableDeclaration BasicType int VariableDeclarator len Literal 0 IfStatement BinaryOperation != MemberReference UNSAFE Literal null BlockStatement IfStatement BinaryOperation > BinaryOperation - MemberReference end MemberReference p BinaryOperation * MemberReference LONG_SIZE Literal 2 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator ep BinaryOperation & MemberReference ~ LOWBITS BinaryOperation + MemberReference p MemberReference LOWBITS WhileStatement BinaryOperation < MemberReference p MemberReference ep BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference ArraySelector MemberReference ++ p bytes Literal 0xc0 Literal 0x80 StatementExpression MemberReference ++ len LocalVariableDeclaration ReferenceType Unsafe VariableDeclarator us Cast ReferenceType Unsafe MemberReference UNSAFE LocalVariableDeclaration BasicType int VariableDeclarator eend BinaryOperation & MemberReference ~ LOWBITS MemberReference end WhileStatement BinaryOperation < MemberReference p MemberReference eend BlockStatement StatementExpression Assignment MemberReference len MethodInvocation MethodInvocation us MemberReference bytes BinaryOperation + MemberReference MemberReference p getLong countUtf8LeadBytes += StatementExpression Assignment MemberReference p MemberReference LONG_SIZE += WhileStatement BinaryOperation < MemberReference p MemberReference end BlockStatement IfStatement BinaryOperation != BinaryOperation & MemberReference ArraySelector MemberReference ++ p bytes Literal 0xc0 Literal 0x80 StatementExpression MemberReference ++ len ReturnStatement MemberReference len	1
MethodDeclaration Modifier public ReferenceType String getCompileMode ReturnStatement MethodInvocation ruby MethodInvocation getInstanceConfig MethodInvocation getCompileMode MethodInvocation name get	0
MethodDeclaration Modifier public static ReferenceType IRubyObject arrayEntryOrNilZero FormalParameter ReferenceType RubyArray array IfStatement BinaryOperation < Literal 0 MethodInvocation array getLength BlockStatement ReturnStatement MethodInvocation array Literal 0 eltInternal BlockStatement ReturnStatement MethodInvocation array MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public ReferenceType Object case396_line1502 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation lexer Cast ReferenceType StrTerm MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals setStrTerm StatementExpression MethodInvocation lexer MethodInvocation restart getConditionState StatementExpression MethodInvocation lexer MethodInvocation restart getCmdArgumentState StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals newEvStrNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType String mapLibraryName FormalParameter ReferenceType String ReturnStatement TernaryExpression BinaryOperation || Literal MethodInvocation MemberReference equals "c" Literal MethodInvocation MemberReference equals "libc.so" MemberReference LIBC SuperMethodInvocation MemberReference mapLibraryName	0
MethodDeclaration Modifier public ReferenceType Object invoke FormalParameter ReferenceType Object proxy FormalParameter ReferenceType JavaProxyMethod m FormalParameter ReferenceType Object nargs Throwable LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation m getName LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation self MethodInvocation MemberReference name searchMethod getMetaClass LocalVariableDeclaration BasicType int VariableDeclarator v MethodInvocation method MethodInvocation getValue getArity LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator newArgs ArrayCreator ReferenceType IRubyObject MemberReference nargs length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference nargs length BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i newArgs MethodInvocation JavaUtil MemberReference runtime MemberReference ArraySelector MemberReference i nargs convertJavaToUsableRubyObject = IfStatement BinaryOperation || BinaryOperation < MemberReference v Literal 0 BinaryOperation == MemberReference v MemberReference newArgs length BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MethodInvocation m getReturnType toJava MethodInvocation runtime getCurrentContext MemberReference self MemberReference name MemberReference newArgs invoke BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator superClass MethodInvocation self MethodInvocation getSuperClass getMetaClass ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MethodInvocation m getReturnType toJava MethodInvocation runtime getCurrentContext MemberReference superClass MemberReference self MemberReference name MemberReference newArgs MemberReference Block NULL_BLOCK invokeAs	0
MethodDeclaration Modifier public Annotation JRubyMethod Annotation Override ReferenceType IRubyObject close IfStatement BinaryOperation != MemberReference currentLock Literal null BlockStatement TryStatement StatementExpression MethodInvocation currentLock release CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation MethodInvocation MethodInvocation e getMessage newIOError getRuntime ReturnStatement SuperMethodInvocation close	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Type type ThrowStatement MethodInvocation context MethodInvocation MemberReference RubyLocalJumpError.Reason NOREASON MethodInvocation context MethodInvocation getNil getRuntime Literal "yield called out of block" newLocalJumpError getRuntime	0
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ReturnStatement Literal "true"	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "insert" ElementValuePair required Literal 1 ElementValuePair rest Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject insert FormalParameter ReferenceType IRubyObject args IfStatement BinaryOperation == MemberReference args length Literal 1 ReturnStatement This LocalVariableDeclaration BasicType long VariableDeclarator pos MethodInvocation RubyNumeric MemberReference ArraySelector Literal 0 args num2long IfStatement BinaryOperation == MemberReference pos Literal - 1 StatementExpression Assignment MemberReference pos MemberReference realLength = IfStatement BinaryOperation < MemberReference pos Literal 0 StatementExpression MemberReference ++ pos LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator inserted ClassCreator ReferenceType RubyArray MethodInvocation getRuntime Literal false StatementExpression Assignment MemberReference inserted values MemberReference args = StatementExpression Assignment MemberReference inserted begin Literal 1 = StatementExpression Assignment MemberReference inserted realLength BinaryOperation - MemberReference args length Literal 1 = StatementExpression MethodInvocation MemberReference pos Literal 0 MemberReference inserted splice ReturnStatement This	1
MethodDeclaration Modifier private static ReferenceType ByteList preprocess FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList str FormalParameter ReferenceType Encoding enc FormalParameter ReferenceType Encoding fixedEnc FormalParameter ReferenceType ErrorMode mode LocalVariableDeclaration ReferenceType ByteList VariableDeclarator to ClassCreator ReferenceType ByteList MemberReference str realSize IfStatement MethodInvocation enc isAsciiCompatible BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 fixedEnc Literal null = BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 fixedEnc MemberReference enc = StatementExpression Assignment MemberReference to encoding MemberReference enc = LocalVariableDeclaration BasicType boolean VariableDeclarator hasProperty MethodInvocation MemberReference runtime MemberReference to MemberReference str bytes MemberReference str begin BinaryOperation + MemberReference str begin MemberReference str realSize MemberReference enc MemberReference fixedEnc MemberReference str MemberReference mode unescapeNonAscii IfStatement BinaryOperation && MemberReference hasProperty BinaryOperation == MemberReference ArraySelector Literal 0 fixedEnc Literal null StatementExpression Assignment MemberReference ArraySelector Literal 0 fixedEnc MemberReference enc = IfStatement BinaryOperation != MemberReference ArraySelector Literal 0 fixedEnc Literal null StatementExpression Assignment MemberReference to encoding MemberReference ArraySelector Literal 0 fixedEnc = ReturnStatement MemberReference to	1
MethodDeclaration Modifier public static ReferenceType JavaCallable getMatchingCallable FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Class TypeArgument ? javaClass FormalParameter ReferenceType String methodName FormalParameter ReferenceType Class TypeArgument ? argumentTypes IfStatement Literal MethodInvocation MemberReference methodName equals "<init>" BlockStatement ReturnStatement MethodInvocation JavaConstructor MemberReference runtime MemberReference javaClass MemberReference argumentTypes getMatchingConstructor BlockStatement ReturnStatement MethodInvocation JavaMethod MemberReference runtime MemberReference javaClass MemberReference methodName MemberReference argumentTypes getMatchingDeclaredMethod	1
MethodDeclaration Modifier final ReferenceType MemoryIO getMemoryIO ReturnStatement Cast ReferenceType AbstractMemory MemberReference memory	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "new" ElementValuePair meta Literal true ReferenceType StructLayoutBuilder newInstance FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement ClassCreator ReferenceType StructLayoutBuilder MethodInvocation context getRuntime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "step" ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject step FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MethodInvocation RubyFixnum MethodInvocation context getRuntime one MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal "step" enumeratorize	0
MethodDeclaration Modifier static createTCPSocket FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator rb_cTCPSocket MethodInvocation runtime Literal "TCPSocket" MethodInvocation runtime Literal "IPSocket" fastGetClass MemberReference TCPSOCKET_ALLOCATOR defineClass StatementExpression MethodInvocation rb_cTCPSocket MethodInvocation runtime MethodInvocation Literal "Constants" fastGetConstant Literal "Socket" fastGetClass includeModule StatementExpression MethodInvocation rb_cTCPSocket ClassReference ReferenceType RubyTCPSocket defineAnnotatedMethods StatementExpression MethodInvocation runtime MethodInvocation Literal "TCPsocket" MemberReference rb_cTCPSocket fastSetConstant getObject	1
MethodDeclaration Modifier private ReferenceType IRubyObject gsubCommon FormalParameter ReferenceType ThreadContext context FormalParameter Modifier final BasicType boolean bang FormalParameter ReferenceType Regex pattern FormalParameter ReferenceType Block block FormalParameter ReferenceType RubyString repl FormalParameter BasicType int tuFlags LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope LocalVariableDeclaration BasicType int VariableDeclarator begin MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator slen MemberReference value realSize LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MemberReference begin MemberReference slen LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration ReferenceType Matcher VariableDeclarator matcher MethodInvocation pattern MemberReference bytes MemberReference begin MemberReference matcher LocalVariableDeclaration BasicType int VariableDeclarator beg MethodInvocation matcher MemberReference begin MemberReference MemberReference Option NONE search IfStatement BinaryOperation < MemberReference beg Literal 0 BlockStatement StatementExpression MethodInvocation scope MethodInvocation runtime getNil setBackRef ReturnStatement TernaryExpression MemberReference bang MethodInvocation runtime getNil MethodInvocation MemberReference runtime strDup LocalVariableDeclaration BasicType int VariableDeclarator blen BinaryOperation + MemberReference slen Literal 30 LocalVariableDeclaration ReferenceType ByteList VariableDeclarator dest ClassCreator ReferenceType ByteList MemberReference blen StatementExpression Assignment MemberReference dest realSize MemberReference blen = LocalVariableDeclaration BasicType int VariableDeclarator offset Literal 0 VariableDeclarator buf Literal 0 VariableDeclarator bp Literal 0 VariableDeclarator cp MemberReference begin LocalVariableDeclaration ReferenceType RubyMatchData VariableDeclarator match Literal null WhileStatement BinaryOperation >= MemberReference beg Literal 0 BlockStatement LocalVariableDeclaration Modifier final ReferenceType RubyString VariableDeclarator val LocalVariableDeclaration Modifier final BasicType int VariableDeclarator begz MethodInvocation matcher getBegin LocalVariableDeclaration Modifier final BasicType int VariableDeclarator endz MethodInvocation matcher getEnd IfStatement BinaryOperation == MemberReference repl Literal null BlockStatement StatementExpression Assignment MemberReference match MethodInvocation RubyRegexp MemberReference context This MemberReference scope MemberReference matcher MemberReference pattern updateBackRef = StatementExpression Assignment MemberReference val MethodInvocation MemberReference context MethodInvocation block MemberReference context MethodInvocation MemberReference runtime MemberReference begz BinaryOperation - MemberReference endz MemberReference begz substr yield objAsString = StatementExpression MethodInvocation MemberReference bytes MemberReference slen modifyCheck IfStatement MemberReference bang StatementExpression MethodInvocation frozenCheck BlockStatement StatementExpression Assignment MemberReference val MethodInvocation RubyRegexp MemberReference repl This MemberReference matcher MethodInvocation runtime MethodInvocation getEncoding getKCode regsub = StatementExpression Assignment MemberReference tuFlags MemberReference val flags |= LocalVariableDeclaration ReferenceType ByteList VariableDeclarator vbuf MemberReference val value LocalVariableDeclaration BasicType int VariableDeclarator len BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation - MemberReference bp MemberReference buf BinaryOperation - MemberReference beg MemberReference offset MemberReference vbuf realSize Literal 3 IfStatement BinaryOperation < MemberReference blen MemberReference len BlockStatement WhileStatement BinaryOperation < MemberReference blen MemberReference len StatementExpression Assignment MemberReference blen Literal 1 <<= StatementExpression Assignment MemberReference len BinaryOperation - MemberReference bp MemberReference buf = StatementExpression MethodInvocation dest MemberReference blen realloc StatementExpression Assignment MemberReference dest realSize MemberReference blen = StatementExpression Assignment MemberReference bp BinaryOperation + MemberReference buf MemberReference len = StatementExpression Assignment MemberReference len BinaryOperation - MemberReference beg MemberReference offset = StatementExpression MethodInvocation System MemberReference bytes MemberReference cp MemberReference dest bytes MemberReference bp MemberReference len arraycopy StatementExpression Assignment MemberReference bp MemberReference len += StatementExpression MethodInvocation System MemberReference vbuf bytes MemberReference vbuf begin MemberReference dest bytes MemberReference bp MemberReference vbuf realSize arraycopy StatementExpression Assignment MemberReference bp MemberReference vbuf realSize += StatementExpression Assignment MemberReference offset MemberReference endz = IfStatement BinaryOperation == MemberReference begz MemberReference endz BlockStatement IfStatement BinaryOperation <= MemberReference slen MemberReference endz BreakStatement StatementExpression Assignment MemberReference len MethodInvocation pattern MethodInvocation MemberReference bytes BinaryOperation + MemberReference begin MemberReference endz MemberReference length getEncoding = StatementExpression MethodInvocation System MemberReference bytes BinaryOperation + MemberReference begin MemberReference endz MemberReference dest bytes MemberReference bp MemberReference len arraycopy StatementExpression Assignment MemberReference bp MemberReference len += StatementExpression Assignment MemberReference offset BinaryOperation + MemberReference endz MemberReference len = StatementExpression Assignment MemberReference cp BinaryOperation + MemberReference begin MemberReference offset = IfStatement BinaryOperation > MemberReference offset MemberReference slen BreakStatement StatementExpression Assignment MemberReference beg MethodInvocation matcher MemberReference cp MemberReference MemberReference Option NONE search = IfStatement BinaryOperation == MemberReference repl Literal null BlockStatement StatementExpression MethodInvocation scope MemberReference match setBackRef BlockStatement StatementExpression MethodInvocation RubyRegexp MemberReference context This MemberReference scope MemberReference matcher MemberReference pattern updateBackRef IfStatement BinaryOperation > MemberReference slen MemberReference offset BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator len BinaryOperation - MemberReference bp MemberReference buf IfStatement BinaryOperation < BinaryOperation - MemberReference blen MemberReference len BinaryOperation - MemberReference slen MemberReference offset BlockStatement StatementExpression Assignment MemberReference blen BinaryOperation - BinaryOperation + MemberReference len MemberReference slen MemberReference offset = StatementExpression MethodInvocation dest MemberReference blen realloc StatementExpression Assignment MemberReference bp BinaryOperation + MemberReference buf MemberReference len = StatementExpression MethodInvocation System MemberReference bytes MemberReference cp MemberReference dest bytes MemberReference bp BinaryOperation - MemberReference slen MemberReference offset arraycopy StatementExpression Assignment MemberReference bp BinaryOperation - MemberReference slen MemberReference offset += StatementExpression Assignment MemberReference dest realSize BinaryOperation - MemberReference bp MemberReference buf = IfStatement MemberReference bang BlockStatement StatementExpression MethodInvocation MemberReference dest view ReturnStatement MethodInvocation MemberReference tuFlags infectBy BlockStatement ReturnStatement ClassCreator MethodInvocation BinaryOperation | MemberReference tuFlags MemberReference flags infectBy ReferenceType RubyString MemberReference runtime MethodInvocation getMetaClass MemberReference dest	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "reopen" ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ReferenceType IRubyObject reopen FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args InvalidValueException LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation < MemberReference args length Literal 1 BlockStatement ThrowStatement MethodInvocation runtime Literal "wrong number of arguments" newArgumentError LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation TypeConverter MemberReference ArraySelector Literal 0 args MethodInvocation runtime getIO Literal "to_io" convertToTypeWithCheck IfStatement MethodInvocation ! tmp isNil BlockStatement TryStatement LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator ios Cast ReferenceType RubyIO MemberReference tmp IfStatement BinaryOperation == MemberReference ios openFile This MemberReference openFile BlockStatement ReturnStatement This LocalVariableDeclaration ReferenceType OpenFile VariableDeclarator originalFile MethodInvocation ios getOpenFileChecked LocalVariableDeclaration ReferenceType OpenFile VariableDeclarator selfFile MethodInvocation getOpenFileChecked LocalVariableDeclaration BasicType long VariableDeclarator pos Literal 0 IfStatement MethodInvocation originalFile isReadable BlockStatement StatementExpression Assignment MemberReference pos MethodInvocation originalFile MethodInvocation fgetpos getMainStream = IfStatement BinaryOperation != MethodInvocation originalFile getPipeStream Literal null BlockStatement StatementExpression MethodInvocation originalFile MethodInvocation fflush getPipeStream IfStatement MethodInvocation originalFile isWritable BlockStatement StatementExpression MethodInvocation originalFile MethodInvocation fflush getMainStream IfStatement MethodInvocation selfFile isWritable BlockStatement StatementExpression MethodInvocation selfFile MethodInvocation fflush getWriteStream StatementExpression MethodInvocation selfFile MethodInvocation originalFile getMode setMode StatementExpression MethodInvocation selfFile MethodInvocation originalFile getProcess setProcess StatementExpression MethodInvocation selfFile MethodInvocation originalFile getLineNumber setLineNumber StatementExpression MethodInvocation selfFile MethodInvocation originalFile getPath setPath StatementExpression MethodInvocation selfFile MethodInvocation originalFile getFinalizer setFinalizer LocalVariableDeclaration ReferenceType ChannelDescriptor VariableDeclarator selfDescriptor MethodInvocation selfFile MethodInvocation getDescriptor getMainStream LocalVariableDeclaration ReferenceType ChannelDescriptor VariableDeclarator originalDescriptor MethodInvocation originalFile MethodInvocation getDescriptor getMainStream IfStatement BinaryOperation != MethodInvocation selfDescriptor getChannel MethodInvocation originalDescriptor getChannel BlockStatement IfStatement BinaryOperation && BinaryOperation >= MethodInvocation selfDescriptor getFileno Literal 0 BinaryOperation <= MethodInvocation selfDescriptor getFileno Literal 2 BlockStatement StatementExpression MethodInvocation selfFile MethodInvocation clearerr getMainStream StatementExpression MethodInvocation originalDescriptor MemberReference selfDescriptor dup2Into StatementExpression MethodInvocation MemberReference selfDescriptor registerDescriptor BlockStatement LocalVariableDeclaration ReferenceType Stream VariableDeclarator pipeFile MethodInvocation selfFile getPipeStream LocalVariableDeclaration BasicType int VariableDeclarator mode MethodInvocation selfFile getMode StatementExpression MethodInvocation selfFile MethodInvocation fclose getMainStream StatementExpression MethodInvocation selfFile Literal null setPipeStream IfStatement BinaryOperation != MemberReference pipeFile Literal null BlockStatement StatementExpression MethodInvocation selfFile MethodInvocation ChannelStream MemberReference runtime MemberReference originalDescriptor ClassCreator ReferenceType ModeFlags fdopen setMainStream StatementExpression MethodInvocation selfFile MemberReference pipeFile setPipeStream BlockStatement StatementExpression MethodInvocation selfFile ClassCreator ReferenceType ChannelStream MemberReference runtime MethodInvocation originalDescriptor MethodInvocation selfDescriptor getFileno dup2 setMainStream StatementExpression MethodInvocation MethodInvocation selfFile MethodInvocation getDescriptor getMainStream registerDescriptor StatementExpression MethodInvocation selfFile MethodInvocation MethodInvocation selfFile MethodInvocation isSync getMainStream setSync getMainStream StatementExpression MethodInvocation selfFile MemberReference mode setMode IfStatement BinaryOperation && MethodInvocation originalFile isReadable BinaryOperation >= MemberReference pos Literal 0 BlockStatement StatementExpression MethodInvocation selfFile MemberReference pos MemberReference Stream SEEK_SET seek StatementExpression MethodInvocation originalFile MemberReference pos MemberReference Stream SEEK_SET seek IfStatement BinaryOperation && BinaryOperation != MethodInvocation selfFile getPipeStream Literal null BinaryOperation != MethodInvocation selfDescriptor getFileno MethodInvocation selfFile MethodInvocation getDescriptor MethodInvocation getFileno getPipeStream BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator fd MethodInvocation selfFile MethodInvocation getDescriptor MethodInvocation getFileno getPipeStream IfStatement BinaryOperation == MethodInvocation originalFile getPipeStream Literal null BlockStatement StatementExpression MethodInvocation selfFile MethodInvocation fclose getPipeStream StatementExpression MethodInvocation selfFile Literal null setPipeStream IfStatement BinaryOperation != MemberReference fd MethodInvocation originalFile MethodInvocation getDescriptor MethodInvocation getFileno getPipeStream BlockStatement StatementExpression MethodInvocation selfFile MethodInvocation fclose getPipeStream LocalVariableDeclaration ReferenceType ChannelDescriptor VariableDeclarator newFD2 MethodInvocation originalFile MethodInvocation getDescriptor MethodInvocation MemberReference fd dup2 getPipeStream StatementExpression MethodInvocation selfFile MethodInvocation ChannelStream MemberReference runtime MemberReference newFD2 MethodInvocation MemberReference runtime Literal "w" getIOModes fdopen setPipeStream StatementExpression MethodInvocation MemberReference newFD2 registerDescriptor CatchClause CatchClauseParameter IOException ex ThrowStatement MethodInvocation runtime BinaryOperation + Literal "could not reopen: " MethodInvocation ex getMessage newIOError CatchClause CatchClauseParameter BadDescriptorException ex ThrowStatement MethodInvocation runtime BinaryOperation + Literal "could not reopen: " MethodInvocation ex getMessage newIOError CatchClause CatchClauseParameter PipeException ex ThrowStatement MethodInvocation runtime BinaryOperation + Literal "could not reopen: " MethodInvocation ex getMessage newIOError BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator pathString MemberReference ArraySelector Literal 0 MethodInvocation convertToString args IfStatement BinaryOperation == MemberReference openFile Literal null BlockStatement StatementExpression Assignment MemberReference openFile ClassCreator ReferenceType OpenFile = TryStatement LocalVariableDeclaration ReferenceType ModeFlags VariableDeclarator modes IfStatement BinaryOperation > MemberReference args length Literal 1 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator modeString MemberReference ArraySelector Literal 1 MethodInvocation convertToString args StatementExpression Assignment MemberReference modes MethodInvocation MemberReference runtime MethodInvocation modeString toString getIOModes = StatementExpression MethodInvocation openFile MethodInvocation modes getOpenFileFlags setMode BlockStatement StatementExpression Assignment MemberReference modes MethodInvocation MemberReference runtime Literal "r" getIOModes = LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation pathString toString StatementExpression MethodInvocation openFile MemberReference path setPath IfStatement BinaryOperation == MethodInvocation openFile getMainStream Literal null BlockStatement TryStatement StatementExpression MethodInvocation openFile MethodInvocation ChannelStream MemberReference runtime MemberReference path MemberReference modes fopen setMainStream CatchClause CatchClauseParameter FileExistsException fee ThrowStatement MethodInvocation runtime MemberReference path newErrnoEEXISTError StatementExpression MethodInvocation MethodInvocation openFile MethodInvocation getDescriptor getMainStream registerDescriptor IfStatement BinaryOperation != MethodInvocation openFile getPipeStream Literal null BlockStatement StatementExpression MethodInvocation openFile MethodInvocation fclose getPipeStream StatementExpression MethodInvocation MethodInvocation openFile MethodInvocation getDescriptor MethodInvocation getFileno getPipeStream unregisterDescriptor StatementExpression MethodInvocation openFile Literal null setPipeStream ReturnStatement This BlockStatement StatementExpression MethodInvocation openFile MethodInvocation MemberReference runtime MemberReference path MethodInvocation MemberReference runtime MethodInvocation openFile MemberReference runtime getModeAsString getIOModes freopen getMainStream StatementExpression MethodInvocation MethodInvocation openFile MethodInvocation getDescriptor getMainStream registerDescriptor IfStatement BinaryOperation != MethodInvocation openFile getPipeStream Literal null BlockStatement CatchClause CatchClauseParameter PipeException pe ThrowStatement MethodInvocation runtime newErrnoEPIPEError CatchClause CatchClauseParameter IOException ex ThrowStatement MethodInvocation runtime MemberReference ex newIOErrorFromException CatchClause CatchClauseParameter BadDescriptorException ex ThrowStatement MethodInvocation runtime newErrnoEBADFError CatchClause CatchClauseParameter InvalidValueException e ThrowStatement MethodInvocation runtime newErrnoEINVALError ReturnStatement This	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "Complex" ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject new_complex FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MethodInvocation context MethodInvocation getComplex getRuntime Literal "convert" MemberReference arg invoke	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "new" ElementValuePair rest Literal true ElementValuePair meta Literal true ReferenceType IRubyObject newInstance FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator obj Cast ReferenceType RubyClass MemberReference recv StatementExpression MethodInvocation obj MethodInvocation recv MethodInvocation getCurrentContext getRuntime Literal "initialize" MemberReference args MemberReference block callMethod ReturnStatement MemberReference obj	0
MethodDeclaration Modifier private BasicType int getChannelSoType FormalParameter ReferenceType Channel channel IfStatement BinaryOperation || BinaryOperation instanceof MemberReference channel ReferenceType SocketChannel BinaryOperation instanceof MemberReference channel ReferenceType ServerSocketChannel BlockStatement ReturnStatement MethodInvocation SOCK_STREAM value IfStatement BinaryOperation instanceof MemberReference channel ReferenceType DatagramChannel BlockStatement ReturnStatement MethodInvocation SOCK_DGRAM value BlockStatement ReturnStatement MethodInvocation getSoTypeDefault	0
MethodDeclaration Modifier private localAsgnNode FormalParameter ReferenceType LocalAsgnNode node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node getName append Literal " " append	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject center FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 ReturnStatement MethodInvocation MemberReference arg0 MemberReference arg1 Literal 'c' justify	0
MethodDeclaration warning FormalParameter ReferenceType ID id FormalParameter ReferenceType String message IfStatement MethodInvocation runtime isVerbose StatementExpression MethodInvocation runtime MethodInvocation MemberReference id MemberReference message warning getWarnings	1
MethodDeclaration Modifier public ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context MemberReference value Literal null Literal null Literal false MemberReference binding MemberReference type yield	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType RubyNameError MemberReference runtime MemberReference klass	0
MethodDeclaration Modifier final ReferenceType IntParameterConverter FormalParameter ReferenceType Type type ReturnStatement TernaryExpression BinaryOperation instanceof MemberReference type ReferenceType Type ReferenceType Builtin MethodInvocation MethodInvocation type getNativeType Literal null	0
MethodDeclaration Modifier private ReferenceType IRubyObject subpat FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyRegexp regex FormalParameter BasicType int nth IfStatement BinaryOperation >= MethodInvocation regex MemberReference context This Literal 0 Literal false search Literal 0 BlockStatement ReturnStatement MethodInvocation RubyRegexp MemberReference nth MethodInvocation context MethodInvocation MemberReference runtime getBackRef getCurrentScope nth_match ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object accept FormalParameter ReferenceType NodeVisitor visitor ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "Not supported yet."	0
MethodDeclaration Modifier public ReferenceType Object case278_line1045 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_colon2 = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final setCodeRange FormalParameter BasicType int codeRange StatementExpression Assignment MemberReference flags BinaryOperation & MemberReference codeRange MemberReference CR_MASK |=	0
MethodDeclaration Modifier public final Annotation JRubyMethod ElementValuePair name Literal "autorelease=" ElementValuePair required Literal 1 ReferenceType IRubyObject autorelease FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject release StatementExpression Cast ReferenceType AllocatedDirectMemoryIO MethodInvocation getMemoryIO ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klass FormalParameter BasicType boolean aValue FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type ReturnStatement MethodInvocation MemberReference context MemberReference value MemberReference self MemberReference klass MemberReference aValue MemberReference binding MemberReference type MemberReference Block NULL_BLOCK yield	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType IRubyObject arg8 FormalParameter ReferenceType IRubyObject arg9 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type FormalParameter ReferenceType Block unusedBlock ReturnStatement MethodInvocation MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 MemberReference arg9 MemberReference binding MemberReference type call	1
MethodDeclaration Modifier public ReferenceType Class javaClass ReturnStatement Cast ReferenceType Class MethodInvocation getValue	0
MethodDeclaration Modifier public ReferenceType Operand buildIter FormalParameter Modifier final ReferenceType IterNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType IR_Scope VariableDeclarator closure ClassCreator ReferenceType IR_Closure MemberReference s MemberReference s LocalVariableDeclaration ReferenceType NodeType VariableDeclarator argsNodeId MethodInvocation MemberReference getArgumentTypeWackyHack IfStatement BinaryOperation && BinaryOperation != MethodInvocation getVarNode Literal null BinaryOperation != MemberReference argsNodeId Literal null StatementExpression MethodInvocation MethodInvocation getVarNode MemberReference closure Literal 0 Literal false buildBlockArgsAssignment LocalVariableDeclaration ReferenceType Operand VariableDeclarator closureRetVal TernaryExpression BinaryOperation == MethodInvocation getBodyNode Literal null MemberReference Nil NIL MethodInvocation MethodInvocation getBodyNode MemberReference closure build StatementExpression MethodInvocation closure ClassCreator ReferenceType CLOSURE_RETURN_Instr MemberReference closureRetVal addInstr LocalVariableDeclaration ReferenceType Variable VariableDeclarator blockVar MethodInvocation s getNewVariable StatementExpression MethodInvocation s ClassCreator ReferenceType COPY_Instr MemberReference blockVar ClassCreator ReferenceType MetaObject MemberReference closure addInstr ReturnStatement MemberReference blockVar	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType MemberReference runtime MemberReference klass	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject sub FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation context getRuntime strDup StatementExpression MethodInvocation str MemberReference context MemberReference arg0 MemberReference block sub_bang ReturnStatement MemberReference str	0
MethodDeclaration Modifier public Exception LocalVariableDeclaration ReferenceType SimpleInterface VariableDeclarator si Cast ReferenceType SimpleInterface MethodInvocation manager Literal "ruby" Literal "(java)" Literal 1 Literal 1 Literal "SimpleInterfaceImpl.new" eval LocalVariableDeclaration ReferenceType Map VariableDeclarator map MethodInvocation si getMap LocalVariableDeclaration ReferenceType Set VariableDeclarator entrySet MethodInvocation map entrySet LocalVariableDeclaration ReferenceType Iterator VariableDeclarator e MethodInvocation entrySet iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator next1 MethodInvocation e next LocalVariableDeclaration ReferenceType Object VariableDeclarator next2 MethodInvocation e next StatementExpression MethodInvocation MethodInvocation e hasNext assertFalse StatementExpression MethodInvocation MethodInvocation entrySet MemberReference next1 contains assertTrue StatementExpression MethodInvocation MethodInvocation entrySet MemberReference next2 contains assertTrue StatementExpression MethodInvocation entrySet MemberReference next1 remove StatementExpression MethodInvocation MethodInvocation entrySet MemberReference next1 contains assertFalse StatementExpression MethodInvocation entrySet MemberReference next2 remove StatementExpression MethodInvocation MethodInvocation entrySet MemberReference next2 contains assertFalse	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "all_symbols" ElementValuePair meta Literal true ReferenceType IRubyObject all_symbols FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation context MethodInvocation getSymbolTable MethodInvocation all_symbols getRuntime	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType RubyMatchData MemberReference runtime MemberReference klass	0
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject dimensions FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject maybeArray FormalParameter ReferenceType IRubyObject dims FormalParameter ReferenceType IRubyObject index LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference maybeArray ReferenceType RubyArray BlockStatement ReturnStatement MethodInvocation runtime newEmptyArray AssertStatement BinaryOperation instanceof MemberReference dims ReferenceType RubyArray AssertStatement BinaryOperation instanceof MemberReference index ReferenceType RubyFixnum LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator rubyArray Cast ReferenceType RubyArray MemberReference maybeArray ReturnStatement MethodInvocation MemberReference context MemberReference rubyArray Cast ReferenceType RubyArray MemberReference dims Cast BasicType int Cast ReferenceType RubyFixnum MemberReference index	1
MethodDeclaration Modifier public ReferenceType Arity getArity ReturnStatement MemberReference arity	0
MethodDeclaration Modifier public close IOException StatementExpression Assignment MemberReference open Literal false =	0
MethodDeclaration Modifier public ReferenceType IRubyObject getLoadPath ReturnStatement MemberReference loadPath	0
MethodDeclaration Modifier public static ReferenceType RubyArray FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator arr ClassCreator ReferenceType RubyArray MemberReference runtime Literal false StatementExpression Assignment MemberReference arr values MemberReference args = StatementExpression Assignment MemberReference arr realLength MemberReference args length = ReturnStatement MemberReference arr	0
MethodDeclaration Modifier public ReferenceType Operand buildDXStr FormalParameter Modifier final ReferenceType DXStrNode dstrNode FormalParameter ReferenceType IR_Scope m LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Operand VariableDeclarator strPieces ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Operand ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator nextNode MethodInvocation dstrNode childNodes StatementExpression MethodInvocation strPieces MethodInvocation MemberReference nextNode MemberReference m build add ReturnStatement ClassCreator ReferenceType BacktickString MemberReference strPieces	1
MethodDeclaration Modifier private static BasicType int JavaSoftHashValue FormalParameter BasicType int h StatementExpression Assignment MemberReference h BinaryOperation ^ BinaryOperation >>> MemberReference h Literal 20 BinaryOperation >>> MemberReference h Literal 12 ^= ReturnStatement BinaryOperation ^ BinaryOperation ^ MemberReference h BinaryOperation >>> MemberReference h Literal 7 BinaryOperation >>> MemberReference h Literal 4	1
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType String internedName ReturnStatement MethodInvocation MemberReference internedName variableTableFetch	0
MethodDeclaration Modifier public ReferenceType Node getIterNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public splatCurrentValue StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RuntimeHelpers p Literal MethodInvocation ClassReference ReferenceType RubyArray MethodInvocation ClassReference ReferenceType IRubyObject params sig invokestatic	0
MethodDeclaration Modifier private compileOptimizedMultipleAsgn FormalParameter ReferenceType MultipleAsgnNode multipleAsgnNode FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr IfStatement BinaryOperation instanceof MethodInvocation multipleAsgnNode getValueNode ReferenceType ArrayNode BlockStatement IfStatement BinaryOperation && BinaryOperation != MethodInvocation multipleAsgnNode getHeadNode Literal null BinaryOperation == MethodInvocation multipleAsgnNode getArgsNode Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation multipleAsgnNode MethodInvocation size getHeadNode Cast ReferenceType ArrayNode MethodInvocation multipleAsgnNode getValueNode BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator normalAssigns Literal true ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator asgn MethodInvocation multipleAsgnNode MethodInvocation childNodes getHeadNode BlockStatement IfStatement BinaryOperation instanceof MemberReference asgn ReferenceType ListNode BlockStatement StatementExpression Assignment MemberReference normalAssigns Literal false = BreakStatement IfStatement MemberReference normalAssigns BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation multipleAsgnNode MethodInvocation size getHeadNode IfStatement BinaryOperation && BinaryOperation >= MemberReference size Literal 2 BinaryOperation <= MemberReference size Literal 10 BlockStatement LocalVariableDeclaration ReferenceType ArrayNode VariableDeclarator values Cast ReferenceType ArrayNode MethodInvocation multipleAsgnNode getValueNode ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator value MethodInvocation values childNodes BlockStatement StatementExpression MethodInvocation MemberReference value MemberReference context Literal true compile StatementExpression MethodInvocation context MemberReference size reverseValues ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator asgn MethodInvocation multipleAsgnNode MethodInvocation childNodes getHeadNode BlockStatement StatementExpression MethodInvocation MemberReference asgn MemberReference context Literal false compileAssignment ReturnStatement StatementExpression MethodInvocation MemberReference multipleAsgnNode MemberReference context MemberReference expr	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator selfClass Cast ReferenceType RubyClass MemberReference self LocalVariableDeclaration ReferenceType Ruby VariableDeclarator ruby MethodInvocation selfClass getClassRuntime LocalVariableDeclaration ReferenceType String VariableDeclarator methodName MemberReference ArraySelector Literal 0 MethodInvocation asJavaString args LocalVariableDeclaration ReferenceType Field VariableDeclarator field MethodInvocation allFields MemberReference methodName get IfStatement BinaryOperation == MemberReference field Literal null BlockStatement BlockStatement TryStatement StatementExpression MethodInvocation field Literal null MethodInvocation selfClass MemberReference methodName searchMethod set CatchClause CatchClauseParameter IllegalAccessException iae ThrowStatement MethodInvocation MemberReference ruby MemberReference iae BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not set new method into field: " MemberReference selfClass Literal "." MemberReference methodName error CatchClause CatchClauseParameter IllegalArgumentException iae ThrowStatement MethodInvocation MemberReference ruby MemberReference iae BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not set new method into field: " MemberReference selfClass Literal "." MemberReference methodName error ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType String getPath ReturnStatement MemberReference path	0
MethodDeclaration Modifier private writeTrailer IOException LocalVariableDeclaration Modifier final BasicType int VariableDeclarator originalDataSize MethodInvocation def getTotalIn LocalVariableDeclaration Modifier final BasicType int VariableDeclarator checksumInt Cast BasicType int MethodInvocation checksum getValue LocalVariableDeclaration Modifier final BasicType byte VariableDeclarator trailer ArrayInitializer Cast BasicType byte MemberReference checksumInt Cast BasicType byte BinaryOperation >> MemberReference checksumInt Literal 8 Cast BasicType byte BinaryOperation >> MemberReference checksumInt Literal 16 Cast BasicType byte BinaryOperation >> MemberReference checksumInt Literal 24 Cast BasicType byte MemberReference originalDataSize Cast BasicType byte BinaryOperation >> MemberReference originalDataSize Literal 8 Cast BasicType byte BinaryOperation >> MemberReference originalDataSize Literal 16 Cast BasicType byte BinaryOperation >> MemberReference originalDataSize Literal 24 StatementExpression MethodInvocation out MemberReference trailer write	0
MethodDeclaration Modifier public final ReferenceType BigInteger FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 5 MemberReference name getBigInteger	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType OPELEMENTASGNNODE	0
MethodDeclaration Modifier protected BasicType int getSoTypeDefault ReturnStatement Literal 0	0
MethodDeclaration Modifier public ReferenceType RubyClass getRealClass ReturnStatement This	0
MethodDeclaration Modifier public visitInsn FormalParameter BasicType int arg0 StatementExpression MethodInvocation MethodInvocation MemberReference arg0 visitInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType Object case420_line1574 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType Token Literal "__FILE__" MemberReference Tokens k__FILE__ Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private BasicType int strIndex FormalParameter ReferenceType RubyString sub FormalParameter BasicType int offset LocalVariableDeclaration ReferenceType ByteList VariableDeclarator byteList MemberReference value IfStatement BinaryOperation < MemberReference offset Literal 0 BlockStatement StatementExpression Assignment MemberReference offset MemberReference byteList realSize += IfStatement BinaryOperation < MemberReference offset Literal 0 ReturnStatement Literal - 1 LocalVariableDeclaration ReferenceType ByteList VariableDeclarator other MemberReference sub value IfStatement MethodInvocation MemberReference byteList MemberReference offset MemberReference other sizeIsSmaller ReturnStatement Literal - 1 IfStatement BinaryOperation == MemberReference other realSize Literal 0 ReturnStatement MemberReference offset ReturnStatement MethodInvocation byteList MemberReference other MemberReference offset indexOf	1
MethodDeclaration Modifier public ReferenceType Entry findEncodingEntry FormalParameter ReferenceType ByteList bytes ReturnStatement MethodInvocation encodings MemberReference bytes bytes MemberReference bytes begin BinaryOperation + MemberReference bytes begin MemberReference bytes realSize get	0
MethodDeclaration Modifier public load FormalParameter Modifier final ReferenceType Ruby runtime FormalParameter BasicType boolean wrap IOException IfStatement MemberReference ! RubyInstanceConfig BlockStatement ThrowStatement MethodInvocation runtime Literal "Native API access is disabled" newLoadError IfStatement MethodInvocation ! Platform MethodInvocation isSupported getPlatform BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "Unsupported platform: " MethodInvocation Platform MethodInvocation getName getPlatform newLoadError LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator ffi MethodInvocation runtime Literal "FFI" defineModule TryStatement StatementExpression MethodInvocation Factory MethodInvocation MemberReference runtime MemberReference ffi init getInstance CatchClause CatchClauseParameter Exception e ThrowStatement MethodInvocation runtime BinaryOperation + Literal "Could not load FFI Provider: " MethodInvocation e getLocalizedMessage newLoadError	1
MethodDeclaration Modifier public static ReferenceType RubyArray constructRubyArray FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject one FormalParameter ReferenceType IRubyObject two FormalParameter ReferenceType IRubyObject three FormalParameter ReferenceType IRubyObject four ReturnStatement MethodInvocation RubyArray MemberReference runtime MemberReference one MemberReference two MemberReference three MemberReference four	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair optional Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block IOException LocalVariableDeclaration ReferenceType ByteList VariableDeclarator sep Cast ReferenceType RubyString MethodInvocation MethodInvocation getGlobalVariables MethodInvocation Literal "$/" get getRuntime IfStatement BinaryOperation && BinaryOperation > MemberReference args length Literal 0 MemberReference ! ArraySelector Literal 0 MethodInvocation isNil args BlockStatement StatementExpression Assignment MemberReference sep MemberReference ArraySelector Literal 0 MethodInvocation convertToString MethodInvocation getByteList args = ForStatement ForControl VariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference sep MethodInvocation ! result isNil Assignment MemberReference result MethodInvocation MemberReference sep = BlockStatement StatementExpression MethodInvocation block MemberReference context MemberReference result yield ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + SuperMethodInvocation toString Literal "(" MemberReference TernaryExpression BinaryOperation == MemberReference _ref Literal null Literal "" BinaryOperation + Literal ", " MemberReference _ref Literal ") = " MemberReference _value	0
MethodDeclaration Modifier public Annotation Override BasicType int hashCode ReturnStatement MethodInvocation method hashCode	0
MethodDeclaration Modifier public ReferenceType Object case419_line1571 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType Token Literal "false" MemberReference Tokens kFALSE Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static BasicType int MIXBITS FormalParameter BasicType int u FormalParameter BasicType int v ReturnStatement BinaryOperation | BinaryOperation & MemberReference u MemberReference UMASK BinaryOperation & MemberReference v MemberReference LMASK	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "+" ElementValuePair required Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject op_plus FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject b ReturnStatement MethodInvocation MemberReference context MemberReference b Literal MethodInvocation MethodInvocation Literal "BigDecimal" fastGetClass MethodInvocation Literal "vpPrecLimit" searchInternalModuleVariable getRuntime addInternal	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject setValueDepthZero FormalParameter ReferenceType IRubyObject value FormalParameter BasicType int offset AssertStatement BinaryOperation < MemberReference offset MemberReference SIZE MemberReference SIZE_ERROR SwitchStatement MemberReference offset SwitchStatementCase Literal 0 ReturnStatement Assignment MemberReference variableValueZero MemberReference value = SwitchStatementCase Literal 1 ReturnStatement Assignment MemberReference variableValueOne MemberReference value = SwitchStatementCase ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference SIZE_ERROR	1
MethodDeclaration Modifier public warn FormalParameter ReferenceType ID id FormalParameter ReferenceType String fileName FormalParameter BasicType int lineNumber FormalParameter ReferenceType String message FormalParameter ReferenceType Object data IfStatement MethodInvocation ! runtime ReturnStatement LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buffer ClassCreator ReferenceType StringBuilder Literal 100 StatementExpression MethodInvocation buffer MethodInvocation Literal ':' append MethodInvocation BinaryOperation + MemberReference lineNumber Literal 1 append MethodInvocation Literal ' ' append MemberReference fileName append StatementExpression MethodInvocation buffer MethodInvocation MemberReference message append MethodInvocation Literal '\n' append Literal "warning: " append LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator errorStream MethodInvocation runtime MethodInvocation Literal "$stderr" get getGlobalVariables StatementExpression MethodInvocation errorStream MethodInvocation runtime getCurrentContext Literal "write" MethodInvocation runtime MethodInvocation buffer toString newString callMethod	1
MethodDeclaration Modifier final public static Annotation Deprecated ReferenceType IRubyObject convertToType FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyClass target FormalParameter BasicType int convertMethodIndex FormalParameter ReferenceType String convertMethod IfStatement MethodInvocation target MemberReference obj isInstance ReturnStatement MemberReference obj LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator val MethodInvocation MemberReference obj MemberReference target MemberReference convertMethod Literal true convertToType IfStatement MethodInvocation ! target MemberReference val isInstance ThrowStatement MethodInvocation obj MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation obj getMetaClass Literal "#" MemberReference convertMethod Literal " should return " MethodInvocation target getName newTypeError getRuntime ReturnStatement MemberReference val	1
MethodDeclaration Modifier public ReferenceType Operand getOperands ReturnStatement ArrayCreator ReferenceType Operand ArrayInitializer MemberReference _arg	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject set FormalParameter ReferenceType IRubyObject value IfStatement BinaryOperation && BinaryOperation && MethodInvocation ! value isNil MethodInvocation ! runtime MethodInvocation MemberReference value isInstance getException BinaryOperation && MethodInvocation JavaUtil MemberReference value isJavaObject BinaryOperation instanceof MethodInvocation JavaUtil MemberReference value unwrapJavaObject ReferenceType Throwable BlockStatement ThrowStatement MethodInvocation runtime Literal to newTypeError ReturnStatement MethodInvocation runtime MethodInvocation MemberReference value getCurrentContext	0
MethodDeclaration Modifier public BasicType boolean isALU ReturnStatement BinaryOperation == MemberReference _type MemberReference OpType	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "sin" ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType RubyFloat sin FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x LocalVariableDeclaration BasicType double VariableDeclarator value Cast ReferenceType RubyFloat MethodInvocation RubyKernel MemberReference recv MemberReference x new_float ReturnStatement MethodInvocation RubyFloat MethodInvocation recv getRuntime MethodInvocation Math MemberReference value sin newFloat	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name ReturnStatement MethodInvocation resultConverter MemberReference context MethodInvocation invoker MemberReference function invokeVrI fromNative	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "open" ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair meta Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject open FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject path FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyDir VariableDeclarator directory Cast ReferenceType RubyDir MethodInvocation context MethodInvocation getDir MethodInvocation MemberReference context ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference path MemberReference Block NULL_BLOCK newInstance getRuntime IfStatement MethodInvocation ! block isGiven ReturnStatement MemberReference directory TryStatement ReturnStatement MethodInvocation block MemberReference context MemberReference directory yield StatementExpression MethodInvocation directory close	1
MethodDeclaration Modifier public final ReferenceType CompiledBlockCallback FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String method ReturnStatement MethodInvocation runtimeCache This MemberReference runtime Literal 1 MemberReference method	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "log10" ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType RubyFloat log10_19 FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x LocalVariableDeclaration BasicType double VariableDeclarator value Cast ReferenceType RubyFloat MethodInvocation RubyKernel MemberReference recv MemberReference x new_float StatementExpression MethodInvocation MemberReference recv MemberReference value zeroInLogCheck ReturnStatement MethodInvocation MemberReference recv MemberReference x Literal 10 log_common	1
MethodDeclaration Annotation Override call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg StatementExpression MethodInvocation block MemberReference context MemberReference arg yield	0
MethodDeclaration Modifier public ReferenceType FileDescriptor getFileDescriptor ReturnStatement MemberReference fileDescriptor	0
MethodDeclaration Modifier public BasicType boolean untraceVar FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject command AssertStatement BinaryOperation != MemberReference name Literal null AssertStatement MethodInvocation name Literal "$" startsWith IfStatement MethodInvocation MemberReference name isDefined BlockStatement LocalVariableDeclaration ReferenceType GlobalVariable VariableDeclarator variable Cast ReferenceType GlobalVariable MethodInvocation globalVariables MemberReference name get ReturnStatement MethodInvocation variable MemberReference command removeTrace ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType IRubyObject deleteConstant FormalParameter ReferenceType String name AssertStatement MethodInvocation IdUtil MemberReference name isConstant StatementExpression MethodInvocation ensureConstantsSettable ReturnStatement MethodInvocation MemberReference name	1
MethodDeclaration Modifier public ReferenceType DynamicScope getCurrentScope ReturnStatement MemberReference ArraySelector MemberReference scopeStack	0
MethodDeclaration Modifier public ReferenceType Object case432_line1620 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType RestArgNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "last" ReferenceType IRubyObject last IfStatement BinaryOperation == MemberReference realLength Literal 0 ReturnStatement MethodInvocation MethodInvocation getNil getRuntime ReturnStatement MemberReference ArraySelector BinaryOperation - BinaryOperation + MemberReference begin MemberReference realLength Literal 1 values	1
MethodDeclaration Modifier public BasicType boolean isSeekable ReturnStatement BinaryOperation && MemberReference canBeSeekable BinaryOperation instanceof MemberReference channel ReferenceType FileChannel	0
MethodDeclaration Modifier public static ReferenceType String getType FormalParameter BasicType long i FormalParameter ReferenceType String o FormalParameter ReferenceType String o2 FormalParameter ReferenceType String o3 ReturnStatement Literal "long,string,string,string"	0
MethodDeclaration Modifier public BasicType int getPostCount ReturnStatement MemberReference postCount	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject partition FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RubyEnumerable MemberReference context This MemberReference block partition19	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "chars" ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block each_charCommon18 MethodInvocation MethodInvocation context getRuntime This Literal "chars" enumeratorize	0
MethodDeclaration Modifier public ReferenceType RubyModule getMath ReturnStatement MemberReference mathModule	0
MethodDeclaration Modifier public ReferenceType Object case44_line466 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ReturnNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition ret_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private escaped FormalParameter ReferenceType LexerSource src FormalParameter ReferenceType ByteList buffer java.io.IOException LocalVariableDeclaration BasicType int VariableDeclarator c SwitchStatement Assignment MemberReference c MethodInvocation src read = SwitchStatementCase Literal '\\' StatementExpression MethodInvocation MemberReference src MemberReference buffer parseEscapeIntoBuffer BreakStatement SwitchStatementCase MemberReference RubyYaccLexer EOF ThrowStatement ClassCreator ReferenceType SyntaxException MemberReference PID INVALID_ESCAPE_SYNTAX MethodInvocation src getPosition MethodInvocation src getCurrentLine Literal "Invalid escape character syntax" SwitchStatementCase StatementExpression MethodInvocation buffer MemberReference c append	1
MethodDeclaration Modifier public detach IfStatement BinaryOperation != MemberReference prevAdded Literal null BlockStatement StatementExpression Assignment MemberReference prevAdded nextAdded MemberReference nextAdded = StatementExpression Assignment MemberReference nextAdded prevAdded MemberReference prevAdded = StatementExpression Assignment MemberReference prevAdded Literal null =	0
MethodDeclaration Modifier private synchronized recacheRespondsTo FormalParameter ReferenceType String newString FormalParameter ReferenceType RubyClass klass FormalParameter BasicType boolean checkVisibility FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime StatementExpression Assignment MemberReference lastString MemberReference newString = StatementExpression Assignment MemberReference MethodInvocation klass MemberReference newString = IfStatement MethodInvocation ! respondEntry.method isUndefined BlockStatement StatementExpression Assignment MemberReference respondsTo MethodInvocation MemberReference MemberReference checkVisibility MemberReference runtime checkVisibilityAndCache = BlockStatement StatementExpression Assignment MemberReference respondsTo MethodInvocation runtime getFalse =	0
MethodDeclaration Modifier private static ReferenceType RubyBigDecimal getVpValue FormalParameter ReferenceType IRubyObject v FormalParameter BasicType boolean must IfStatement BinaryOperation instanceof MemberReference v ReferenceType RubyBigDecimal BlockStatement ReturnStatement Cast ReferenceType RubyBigDecimal MemberReference v IfStatement BinaryOperation || BinaryOperation instanceof MemberReference v ReferenceType RubyFixnum BinaryOperation instanceof MemberReference v ReferenceType RubyBignum BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation v toString ReturnStatement MethodInvocation MethodInvocation v MethodInvocation Literal "BigDecimal" fastGetClass getRuntime ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation v MethodInvocation MemberReference s newString getRuntime newInstance IfStatement MemberReference must BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator err IfStatement MethodInvocation v isImmediate BlockStatement LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation v MethodInvocation getCurrentContext getRuntime StatementExpression Assignment MemberReference err MethodInvocation RubyObject MethodInvocation toString MemberReference context MemberReference v inspect = BlockStatement StatementExpression Assignment MemberReference err MethodInvocation v MethodInvocation getBaseName getMetaClass = ThrowStatement MethodInvocation v MethodInvocation BinaryOperation + MemberReference err Literal " can't be coerced into newTypeError getRuntime ReturnStatement Literal null	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference name Literal 8 getConstant	0
MethodDeclaration Modifier public static puts FormalParameter ReferenceType Object obj StatementExpression MethodInvocation System.out MethodInvocation obj toString println	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "grant_privilege" ElementValuePair module Literal true ReferenceType IRubyObject grant_privilege FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg ThrowStatement MethodInvocation self MethodInvocation Literal "Process::UID::grant_privilege not implemented yet" newNotImplementedError getRuntime	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "induced_from" ElementValuePair meta Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject induced_from FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation || BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement ReturnStatement MemberReference other IfStatement BinaryOperation || BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BinaryOperation instanceof MemberReference other ReferenceType RubyRational BlockStatement ReturnStatement MethodInvocation other MemberReference context Literal "to_i" callMethod BlockStatement ThrowStatement MethodInvocation recv MethodInvocation BinaryOperation + BinaryOperation + Literal "failed to convert " MethodInvocation other MethodInvocation getName getMetaClass Literal " into Integer" newTypeError getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "reverse!" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType RubyString reverse_bang FormalParameter ReferenceType ThreadContext context IfStatement BinaryOperation > MemberReference value realSize Literal 1 BlockStatement StatementExpression MethodInvocation modify LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration BasicType int VariableDeclarator p MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference value realSize ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i BinaryOperation >> MemberReference len Literal 1 MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator b MemberReference ArraySelector BinaryOperation + MemberReference p MemberReference i bytes StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference p MemberReference i bytes MemberReference ArraySelector BinaryOperation - BinaryOperation - BinaryOperation + MemberReference p MemberReference len MemberReference i Literal 1 bytes = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - BinaryOperation - BinaryOperation + MemberReference p MemberReference len MemberReference i Literal 1 bytes MemberReference b = ReturnStatement This	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "conv" ElementValuePair required Literal 3 ElementValuePair rest Literal true ElementValuePair meta Literal true ReferenceType IRubyObject conv FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block unusedBlock ReturnStatement MethodInvocation MethodInvocation MemberReference context MethodInvocation RubyString MethodInvocation recv getRuntime newEmptyString join MemberReference context MemberReference recv MemberReference args Literal "conv"	0
MethodDeclaration Modifier private ReferenceType IRubyObject rshift FormalParameter BasicType long width IfStatement BinaryOperation >= MemberReference width BinaryOperation - MemberReference Literal 1 BlockStatement ReturnStatement TernaryExpression BinaryOperation < MemberReference value Literal 0 MethodInvocation RubyFixnum MethodInvocation getRuntime minus_one MethodInvocation RubyFixnum MethodInvocation getRuntime zero ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime BinaryOperation >> MemberReference value MemberReference width newFixnum	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "clone" ElementValuePair frame Literal true Annotation Override ReferenceType IRubyObject ReturnStatement SuperMethodInvocation	0
MethodDeclaration Modifier private ReferenceType IRubyObject subtractOther FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MemberReference context Literal "-" MemberReference other coerceBin	0
MethodDeclaration Modifier public Annotation Override write FormalParameter Modifier final BasicType byte b FormalParameter Modifier final BasicType int off FormalParameter Modifier final BasicType int len IOException StatementExpression MethodInvocation writeAdapter MethodInvocation io MethodInvocation getCurrentContext getRuntime MemberReference io MemberReference io MethodInvocation RubyString MethodInvocation io getRuntime ClassCreator ReferenceType ByteList MemberReference b MemberReference off MemberReference len Literal false newStringLight call	0
MethodDeclaration Modifier private verifyExit FormalParameter ReferenceType RubyObject expectedStatus FormalParameter ReferenceType String argument Exception TryStatement StatementExpression MethodInvocation BinaryOperation + Literal "exit " MemberReference argument eval StatementExpression MethodInvocation Literal "Expected a SystemExit to be thrown by calling exit." fail CatchClause CatchClauseParameter RaiseException re LocalVariableDeclaration ReferenceType RubyException VariableDeclarator raisedException MethodInvocation re getException IfStatement MethodInvocation runtime MethodInvocation MemberReference raisedException isInstance Literal getClass BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator status MethodInvocation raisedException MethodInvocation runtime getCurrentContext Literal "status" callMethod StatementExpression MethodInvocation MemberReference expectedStatus MemberReference status assertEquals BlockStatement ThrowStatement MemberReference re	0
MethodDeclaration Modifier public ReferenceType Object case220_line887 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType NotNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getConditionNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier final public static BasicType byte twosComplementToBinaryBytes FormalParameter BasicType byte in ReturnStatement MethodInvocation MemberReference in Literal 1 Literal false	0
MethodDeclaration Modifier private static generateGetProxyClass FormalParameter ReferenceType Type selfType FormalParameter ReferenceType ClassVisitor cw LocalVariableDeclaration ReferenceType GeneratorAdapter VariableDeclarator gpc ClassCreator ReferenceType GeneratorAdapter MemberReference Opcodes ACC_PUBLIC ClassCreator ReferenceType org ReferenceType objectweb ReferenceType asm ReferenceType commons ReferenceType Method Literal "___getProxyClass" MemberReference PROXY_CLASS_TYPE MemberReference EMPTY_TYPE_ARR Literal null MemberReference EMPTY_TYPE_ARR MemberReference cw StatementExpression MethodInvocation gpc MemberReference selfType MemberReference MemberReference PROXY_CLASS_TYPE getStatic StatementExpression MethodInvocation gpc returnValue StatementExpression MethodInvocation gpc endMethod	0
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value1 FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType Block block StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MemberReference value1 MemberReference block Literal false assign StatementExpression MethodInvocation parameter2 MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference block Literal false assign StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime MemberReference MemberReference block Literal true assign	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject open FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MethodInvocation recv MethodInvocation getCurrentContext getRuntime MemberReference recv MemberReference args MemberReference block open	1
MethodDeclaration Modifier public init FormalParameter ReferenceType List additionalDirectories StatementExpression Assignment MemberReference loadPath MethodInvocation RubyArray MemberReference runtime newArray = StatementExpression Assignment MemberReference loadedFeatures MethodInvocation RubyArray MemberReference runtime newArray = StatementExpression Assignment MemberReference loadedFeaturesInternal MethodInvocation Collections MemberReference loadedFeatures = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation additionalDirectories iterator MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation Cast ReferenceType String MethodInvocation iter next addPath LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator env Cast ReferenceType RubyHash MethodInvocation runtime MethodInvocation Literal "ENV" fastGetConstant getObject LocalVariableDeclaration ReferenceType RubyString VariableDeclarator env_rubylib MethodInvocation runtime Literal "RUBYLIB" newString IfStatement MethodInvocation env MethodInvocation isTrue MemberReference env_rubylib has_key_p BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator rubylib MethodInvocation env MethodInvocation toString MethodInvocation runtime getCurrentContext MemberReference env_rubylib op_aref LocalVariableDeclaration ReferenceType String VariableDeclarator paths MethodInvocation rubylib MemberReference File pathSeparator split ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference paths length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i paths addPath IfStatement MethodInvocation ! Ruby isSecurityRestricted BlockStatement TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator jrubyHome MethodInvocation runtime getJRubyHome IfStatement BinaryOperation != MemberReference jrubyHome Literal null BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator sep Literal '/' LocalVariableDeclaration ReferenceType String VariableDeclarator rubyDir BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference jrubyHome MemberReference sep Literal "lib" MemberReference sep Literal "ruby" MemberReference sep IfStatement MethodInvocation runtime is1_9 BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference rubyDir Literal "site_ruby" MemberReference sep MemberReference Constants RUBY1_9_MAJOR_VERSION addPath StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference rubyDir Literal "site_ruby" MemberReference sep Literal "shared" addPath StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference rubyDir Literal "site_ruby" MemberReference sep MemberReference Constants RUBY_MAJOR_VERSION addPath StatementExpression MethodInvocation BinaryOperation + MemberReference rubyDir MemberReference Constants RUBY1_9_MAJOR_VERSION addPath BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference rubyDir Literal "site_ruby" MemberReference sep MemberReference Constants RUBY_MAJOR_VERSION addPath StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MemberReference rubyDir Literal "site_ruby" MemberReference sep Literal "shared" addPath StatementExpression MethodInvocation BinaryOperation + MemberReference rubyDir MemberReference Constants RUBY_MAJOR_VERSION addPath CatchClause CatchClauseParameter SecurityException e IfStatement BinaryOperation == MethodInvocation runtime getSafeLevel Literal 0 BlockStatement StatementExpression MethodInvocation Literal "." addPath	1
MethodDeclaration Modifier private static ReferenceType RubyBoolean falseIfTrue FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject truish ReturnStatement TernaryExpression MethodInvocation truish isTrue MethodInvocation runtime getFalse MethodInvocation runtime getTrue	0
MethodDeclaration Modifier public ReferenceType Object case236_line920 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals newSplatNode Cast ReferenceType BlockPassNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_blk_pass = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier static protected checkSuperDisabledOrOutOfMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyModule frameClass FormalParameter ReferenceType String IfStatement BinaryOperation == MemberReference frameClass Literal null BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + BinaryOperation + Literal method '" MemberReference Literal "' disabled" MemberReference newNameError getRuntime BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "super called outside of method" Literal null MethodInvocation context MethodInvocation getNil getRuntime newNoMethodError getRuntime	0
MethodDeclaration Modifier public ReferenceType Object getState ReturnStatement MemberReference state	0
MethodDeclaration Modifier public ReferenceType IRubyObject kcode FormalParameter ReferenceType Ruby runtime ReturnStatement TernaryExpression BinaryOperation == MemberReference kcode Literal null MethodInvocation runtime getNil MethodInvocation runtime MemberReference kcode newString	0
MethodDeclaration Modifier public ReferenceType JavaProxyMethod getMethods ReturnStatement MethodInvocation methods ArrayCreator ReferenceType JavaProxyMethod MethodInvocation methods size toArray	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String FormalParameter ReferenceType String file FormalParameter BasicType int line FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject type StatementExpression MethodInvocation lines MemberReference line add	0
MethodDeclaration Modifier public static ReferenceType ASTInspector subInspect FormalParameter ReferenceType Node nodes LocalVariableDeclaration ReferenceType ASTInspector VariableDeclarator newInspector ClassCreator ReferenceType ASTInspector ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator node MemberReference nodes BlockStatement StatementExpression MethodInvocation newInspector MemberReference node inspect ReturnStatement MemberReference newInspector	0
MethodDeclaration Modifier public createNewString FormalParameter ReferenceType ArrayCallback callback FormalParameter BasicType int count StatementExpression MethodInvocation StatementExpression MethodInvocation method MemberReference StandardASMCompiler ldc StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyString p Literal MethodInvocation ClassReference ReferenceType RubyString ClassReference ReferenceType Ruby ClassReference BasicType int sig invokestatic ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement StatementExpression MethodInvocation callback This Literal null MemberReference i nextValue StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyString p Literal MethodInvocation ClassReference ReferenceType RubyString MethodInvocation ClassReference ReferenceType IRubyObject params sig invokevirtual	0
MethodDeclaration Modifier public static ReferenceType RubyString unmarshalFrom FormalParameter ReferenceType input java.io.IOException LocalVariableDeclaration ReferenceType RubyString VariableDeclarator result MethodInvocation MethodInvocation input getRuntime MethodInvocation input newString StatementExpression MethodInvocation input MemberReference result ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType Operand buildHash FormalParameter ReferenceType HashNode hashNode FormalParameter ReferenceType IR_Scope m IfStatement BinaryOperation || BinaryOperation == MethodInvocation hashNode getListNode Literal null BinaryOperation == MethodInvocation hashNode MethodInvocation size getListNode Literal 0 BlockStatement ReturnStatement ClassCreator ReferenceType Hash Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 LocalVariableDeclaration ReferenceType Operand VariableDeclarator key Literal null LocalVariableDeclaration ReferenceType Operand VariableDeclarator value Literal null LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType KeyValuePair VariableDeclarator args ClassCreator ReferenceType ArrayList TypeArgument ReferenceType KeyValuePair ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator nextNode MethodInvocation hashNode MethodInvocation childNodes getListNode BlockStatement LocalVariableDeclaration ReferenceType Operand VariableDeclarator v MethodInvocation MemberReference nextNode MemberReference m build IfStatement BinaryOperation == MemberReference key Literal null BlockStatement StatementExpression Assignment MemberReference key MemberReference v = BlockStatement StatementExpression MethodInvocation args ClassCreator ReferenceType KeyValuePair MemberReference key MemberReference v add StatementExpression Assignment MemberReference key Literal null = ReturnStatement ClassCreator ReferenceType Hash MemberReference args	1
MethodDeclaration Modifier public FormalParameter ReferenceType Map TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand valueMap StatementExpression SuperMethodInvocation MemberReference valueMap StatementExpression Assignment MemberReference _methAddr MethodInvocation _methAddr MemberReference valueMap = IfStatement BinaryOperation != MemberReference _closure Literal null StatementExpression Assignment MemberReference _closure MethodInvocation _closure MemberReference valueMap =	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "max{}" checkContext IfStatement BinaryOperation || BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null BinaryOperation > MethodInvocation RubyComparable MemberReference ctx MethodInvocation block MemberReference ctx MethodInvocation runtime MemberReference larg MemberReference ArraySelector Literal 0 result newArray Literal null Literal null Literal true yield MemberReference larg MemberReference ArraySelector Literal 0 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference larg = ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType Invocation invocation FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter StatementExpression MethodInvocation buffer Cast BasicType float MethodInvocation RubyNumeric MemberReference parameter num2dbl putFloat	1
MethodDeclaration Modifier public ReferenceType IRubyObject getline FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList separator ReturnStatement MethodInvocation MemberReference runtime MemberReference separator Literal - 1 getline	0
MethodDeclaration Modifier public final ReferenceType IRubyObject eltInternalSet FormalParameter BasicType int offset FormalParameter ReferenceType IRubyObject item ReturnStatement Assignment MemberReference ArraySelector BinaryOperation + MemberReference begin MemberReference offset values MemberReference item =	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "count" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject count19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference value realSize Literal 0 ReturnStatement MethodInvocation RubyFixnum MemberReference runtime zero LocalVariableDeclaration ReferenceType RubyString VariableDeclarator otherStr MethodInvocation arg convertToString LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation MemberReference otherStr checkEncoding LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator table ArrayCreator BasicType boolean MemberReference TRANS_SIZE LocalVariableDeclaration ReferenceType TrTables VariableDeclarator tables MethodInvocation otherStr MethodInvocation context getRuntime MemberReference table Literal null Literal true MemberReference enc trSetupTable ReturnStatement MethodInvocation MemberReference runtime MemberReference table MemberReference tables MemberReference enc countCommon19	1
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value1 FormalParameter ReferenceType Block block StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MemberReference value1 MemberReference block Literal false assign StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime MemberReference IRubyObject NULL_ARRAY MemberReference block Literal true assign	0
MethodDeclaration Modifier public emitPUT_FIELD FormalParameter ReferenceType PUT_FIELD_Instr putField LocalVariableDeclaration ReferenceType String VariableDeclarator field Cast ReferenceType FieldRef MethodInvocation putField ArraySelector Literal 1 getOperands StatementExpression MethodInvocation MemberReference field declareField StatementExpression MethodInvocation MethodInvocation putField ArraySelector Literal 0 getOperands StatementExpression MethodInvocation MethodInvocation putField ArraySelector Literal 2 getOperands StatementExpression MethodInvocation MethodInvocation MethodInvocation Type ClassReference ReferenceType Object getType MemberReference field MethodInvocation Type ClassReference ReferenceType Object getType putField method	1
MethodDeclaration Modifier private blockArgWarning FormalParameter ReferenceType Ruby ruby FormalParameter BasicType int length StatementExpression MethodInvocation ruby MethodInvocation MemberReference ID MULTIPLE_VALUES_FOR_BLOCK BinaryOperation + BinaryOperation + Literal "multiple values for a block parameter (" MemberReference length Literal " for 1)" warn getWarnings	0
MethodDeclaration Modifier public ReferenceType Object case225_line883 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals newArrayNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private ReferenceType String unixpath FormalParameter ReferenceType LibCSocket ReferenceType addr FormalParameter ReferenceType IntByReference len IfStatement BinaryOperation > MethodInvocation len getValue Literal 2 BlockStatement ReturnStatement MethodInvocation addr MethodInvocation toString path BlockStatement ReturnStatement Literal ""	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public ReferenceType Object case184_line727 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals node_assign = StatementExpression Cast ReferenceType Node MemberReference yyVal ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case220_line864 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals checkExpression StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals arg_concat = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "binmode?" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_binmode FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation MemberReference context MemberReference recv Literal "no stream" getData ReturnStatement Cast ReferenceType RubyIO MemberReference data currentFile	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType Map TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand valueMap StatementExpression Assignment MemberReference _re MethodInvocation _re MemberReference valueMap = ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType String getPackageName ReturnStatement MethodInvocation String Literal ClassReference MethodInvocation getPackage MethodInvocation getName ReferenceType Platform MemberReference OS MemberReference ARCH format	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "times" ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType Block unusedBlock LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration BasicType double VariableDeclarator system BinaryOperation / MethodInvocation threadBean Literal 1000000000.0 LocalVariableDeclaration BasicType double VariableDeclarator user BinaryOperation / MethodInvocation threadBean Literal 1000000000.0 LocalVariableDeclaration ReferenceType RubyFloat VariableDeclarator zero MethodInvocation runtime Literal 0.0 newFloat ReturnStatement MethodInvocation RubyStruct MethodInvocation runtime getTmsStruct ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation RubyFloat MemberReference runtime MemberReference user newFloat MethodInvocation RubyFloat MemberReference runtime MemberReference system newFloat MemberReference zero MemberReference zero MemberReference Block NULL_BLOCK newStruct	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public static ReferenceType RubyClass getSingletonClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject receiver IfStatement BinaryOperation || BinaryOperation instanceof MemberReference receiver ReferenceType RubyFixnum BinaryOperation instanceof MemberReference receiver ReferenceType RubySymbol BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "no virtual class for " MethodInvocation receiver MethodInvocation getBaseName getMetaClass newTypeError BlockStatement IfStatement BinaryOperation && BinaryOperation >= MethodInvocation runtime getSafeLevel Literal 4 MethodInvocation ! receiver isTaint BlockStatement ThrowStatement MethodInvocation runtime Literal "Insecure: can't extend object." newSecurityError ReturnStatement MethodInvocation receiver getSingletonClass	0
MethodDeclaration Modifier private ReferenceType IRubyObject addAsBignum FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyFixnum other ReturnStatement MethodInvocation RubyBignum MethodInvocation MemberReference context MemberReference other op_plus MethodInvocation context getRuntime MemberReference value newBignum	0
MethodDeclaration Modifier public ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor getStaticAnnotatedMethods1_8 ReturnStatement MemberReference staticAnnotatedMethods1_8	1
MethodDeclaration clear FormalParameter BasicType int size StatementExpression Assignment MemberReference MemberReference size = StatementExpression Assignment This MemberReference size Literal 0 = StatementExpression Assignment MemberReference ratio MemberReference = StatementExpression Assignment MemberReference table ArrayCreator ReferenceType Entry MemberReference =	0
MethodDeclaration Modifier public ReferenceType Object case49_line481 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null new_call = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public setTraceFunc FormalParameter ReferenceType RubyProc StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public static ReferenceType IRubyObject sub FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str Cast ReferenceType RubyString MethodInvocation MethodInvocation dup MemberReference context MethodInvocation context getRuntime getLastlineString IfStatement MethodInvocation ! str MethodInvocation isNil MemberReference context MemberReference args MemberReference block sub_bang BlockStatement StatementExpression MethodInvocation context MethodInvocation MemberReference str setLastLine getCurrentScope ReturnStatement MemberReference str	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<=>" ReferenceType IRubyObject op_cmp FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation == This MemberReference other BlockStatement ReturnStatement MethodInvocation RubyFixnum MethodInvocation getRuntime zero ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public BasicType boolean isInDef ReturnStatement MemberReference inDefinition	0
MethodDeclaration Modifier private static ReferenceType ByteList FormalParameter BasicType byte val LocalVariableDeclaration ReferenceType ByteList VariableDeclarator byteList ClassCreator ReferenceType ByteList BinaryOperation * MemberReference val length Literal 2 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator j MemberReference val length BinaryOperation < MemberReference i MemberReference j MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator b BinaryOperation & MemberReference ArraySelector MemberReference i val Literal 0xFF StatementExpression MethodInvocation byteList MemberReference ArraySelector BinaryOperation >> MemberReference b Literal 4 digits append StatementExpression MethodInvocation byteList MemberReference ArraySelector BinaryOperation & MemberReference b Literal 0xF digits append ReturnStatement MemberReference byteList	0
MethodDeclaration Modifier public BasicType boolean isFrame ReturnStatement MemberReference frame	0
MethodDeclaration Modifier public ReferenceType RubyBoolean newBoolean FormalParameter BasicType boolean value ReturnStatement TernaryExpression MemberReference value MemberReference MemberReference	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation attrAssignNode getReceiverNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public BasicType long getValue ReturnStatement This MemberReference intern MethodInvocation getValue	0
MethodDeclaration Modifier public FormalParameter ReferenceType Visibility visibility StatementExpression MethodInvocation MethodInvocation MemberReference visibility setVisibility getCurrentFrame	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation ! block MethodInvocation isTrue MemberReference ctx MemberReference larg yield ThrowStatement MemberReference JumpException SPECIAL_JUMP SynchronizedStatement MemberReference result StatementExpression MethodInvocation result MemberReference larg append ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock getValueNode StatementExpression MethodInvocation runtime MethodInvocation MemberReference name MemberReference result set getGlobalVariables ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType Object case464_line1757 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement BinaryOperation == Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal null BlockStatement StatementExpression MethodInvocation Literal "can't define single method for ()." yyerror IfStatement BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals ReferenceType ILiteralNode BlockStatement StatementExpression MethodInvocation Literal "can't define single method for literals." yyerror StatementExpression MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals checkExpression StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static ReferenceType newCompiledBlockLight FormalParameter ReferenceType Arity arity FormalParameter ReferenceType scope FormalParameter ReferenceType CompiledBlockCallback callback FormalParameter BasicType boolean hasMultipleArgsHead FormalParameter BasicType int ReturnStatement ClassCreator ReferenceType MemberReference arity MemberReference scope MemberReference callback MemberReference hasMultipleArgsHead MemberReference	0
MethodDeclaration Modifier public invoke FormalParameter ReferenceType Closure ReferenceType Buffer buffer LocalVariableDeclaration ReferenceType Object VariableDeclarator recv MethodInvocation proc get IfStatement BinaryOperation == MemberReference recv Literal null BlockStatement StatementExpression MethodInvocation buffer Literal 0 setIntReturn ReturnStatement StatementExpression MethodInvocation MemberReference buffer MemberReference recv invoke	0
MethodDeclaration Modifier public ReferenceType Object case10_line323 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType AliasNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType java ReferenceType ReferenceType ByteBuffer asByteBuffer ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public compileOpElementAsgnWithOr FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType OpElementAsgnNode VariableDeclarator opElementAsgnNode Cast ReferenceType OpElementAsgnNode MemberReference node LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator receiverCallback ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation opElementAsgnNode getReceiverNode MemberReference context Literal true compile LocalVariableDeclaration ReferenceType ArgumentsCallback VariableDeclarator argsCallback ClassCreator ReferenceType OpElementAsgnArgumentsCallback MethodInvocation opElementAsgnNode getArgsNode LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator valueCallback ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation opElementAsgnNode getValueNode MemberReference context Literal true compile StatementExpression MethodInvocation context MethodInvocation MemberReference receiverCallback MemberReference argsCallback MemberReference valueCallback opElementAsgnWithOr getInvocationCompiler IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType IRubyObject convert FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object IfStatement BinaryOperation == MemberReference object Literal null ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation RubyFloat MemberReference runtime Cast ReferenceType Float MemberReference object newFloat	0
MethodDeclaration Modifier private static ReferenceType RubyClass createProxyClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass baseType FormalParameter ReferenceType JavaClass javaClass FormalParameter BasicType boolean invokeInherited LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator proxyClass MethodInvocation javaClass getProxyClass IfStatement BinaryOperation != MemberReference proxyClass Literal null ReturnStatement MemberReference proxyClass StatementExpression MethodInvocation RubyClass MemberReference baseType checkInheritable LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator superClass Cast ReferenceType RubyClass MemberReference baseType StatementExpression Assignment MemberReference proxyClass MethodInvocation RubyClass MemberReference runtime MemberReference superClass newClass = StatementExpression MethodInvocation proxyClass MethodInvocation superClass getMetaClass makeMetaClass StatementExpression MethodInvocation proxyClass MethodInvocation superClass getAllocator setAllocator IfStatement MemberReference invokeInherited BlockStatement StatementExpression MethodInvocation proxyClass MemberReference superClass inherit StatementExpression MethodInvocation proxyClass MethodInvocation runtime getCurrentContext Literal "java_class=" MemberReference javaClass callMethod StatementExpression MethodInvocation javaClass MemberReference proxyClass setupProxy StatementExpression MethodInvocation proxyClass ClassReference ReferenceType JavaProxyClassMethods defineAnnotatedMethods ReturnStatement MemberReference proxyClass	1
MethodDeclaration Modifier public synchronized unregisterThread FormalParameter ReferenceType RubyThread thread StatementExpression MethodInvocation MethodInvocation Thread currentThread remove StatementExpression MethodInvocation threadContextMap MemberReference thread remove StatementExpression MethodInvocation MethodInvocation Literal null getCurrentContext StatementExpression MethodInvocation localContext Literal null set	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference AASTORE visitInsn getMethodVisitor	0
MethodDeclaration Modifier private static ReferenceType Class TypeArgument ? getJavaClass FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyModule module TryStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator jClass MethodInvocation RuntimeHelpers MemberReference context MemberReference module Literal "java_class" invoke ReturnStatement TernaryExpression BinaryOperation instanceof MemberReference jClass ReferenceType JavaClass Literal null Cast ReferenceType JavaClass MemberReference jClass CatchClause CatchClauseParameter Exception e ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter BasicType long IfStatement BinaryOperation instanceof MemberReference self ReferenceType RubyFixnum BlockStatement ReturnStatement Cast ReferenceType RubyFixnum MemberReference self ReturnStatement SuperMethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference call	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context pushNull	0
MethodDeclaration Modifier public ReferenceType Object case246_line965 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType BlockPassNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean isInterestedInEvent FormalParameter ReferenceType RubyEvent event ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType RubyClass getSecurityError ReturnStatement MemberReference securityError	0
MethodDeclaration Modifier public ReferenceType ObjectSpace getObjectSpace ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType IRubyObject aref FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference ArraySelector Literal 0 args aref SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args aref SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation getRuntime MemberReference args length Literal 1 Literal 2 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public putZeroTerminatedByteArray FormalParameter BasicType long offset FormalParameter BasicType byte bytes FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation FFIUtil BinaryOperation + MemberReference address MemberReference offset MemberReference bytes MemberReference off MemberReference len putZeroTerminatedByteArray	0
MethodDeclaration Modifier public BasicType long getGlobalState SynchronizedStatement This ReturnStatement MemberReference globalState	0
MethodDeclaration Modifier public final BasicType int addressSize ReturnStatement MemberReference addressSize	0
MethodDeclaration Modifier public Annotation Override run LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator buf MethodInvocation ByteBuffer Literal 1024 allocateDirect StatementExpression MethodInvocation buf clear TryStatement WhileStatement BinaryOperation && BinaryOperation && MemberReference ! quit MethodInvocation inChannel isOpen MethodInvocation outChannel isOpen BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator read MethodInvocation inChannel MemberReference buf read IfStatement BinaryOperation == MemberReference read Literal - 1 BreakStatement StatementExpression MethodInvocation buf flip StatementExpression MethodInvocation outChannel MemberReference buf write StatementExpression MethodInvocation buf clear CatchClause CatchClauseParameter Exception e SynchronizedStatement MemberReference sync SwitchStatement MemberReference slave SwitchStatementCase OUT TryStatement StatementExpression MethodInvocation outChannel close CatchClause CatchClauseParameter IOException ioe BreakStatement SwitchStatementCase IN TryStatement StatementExpression MethodInvocation inChannel close CatchClause CatchClauseParameter IOException ioe	1
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ReturnStatement TernaryExpression MethodInvocation runtime MethodInvocation MemberReference name isDefined getGlobalVariables Literal Literal null	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference BASTORE visitInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType RaiseException newEOFError FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation getEOFError MemberReference message newRaiseException	0
MethodDeclaration Modifier public BasicType int write FormalParameter BasicType int c IOException BadDescriptorException StatementExpression MethodInvocation checkOpen LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator buf MethodInvocation ByteBuffer Literal 1 StatementExpression MethodInvocation buf Cast BasicType byte MemberReference c put StatementExpression MethodInvocation buf flip ReturnStatement MethodInvocation MemberReference buf	0
MethodDeclaration Modifier public ReferenceType RubyString append FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType RubyString VariableDeclarator otherStr MethodInvocation other convertToString StatementExpression MethodInvocation MemberReference otherStr infectBy ReturnStatement MethodInvocation MemberReference otherStr value cat	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name ReturnStatement Cast ReferenceType RubyObject MemberReference self	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "restsize" ReferenceType RubyFixnum FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation runtime isVerbose BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID DEPRECATED_METHOD Literal is obsolete; use instead" Literal Literal warning getWarnings ReturnStatement MethodInvocation rest_size	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation MemberReference F2D visitInsn getMethodVisitor	0
MethodDeclaration Modifier protected BasicType boolean isComparedByIdentity ReturnStatement BinaryOperation != BinaryOperation & MemberReference flags MemberReference COMPARE_BY_IDENTITY_F Literal 0	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MethodInvocation m getName	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "executable?" ReferenceType IRubyObject executable_p ReturnStatement MethodInvocation MethodInvocation MethodInvocation stat isExecutable newBoolean getRuntime	1
MethodDeclaration Modifier private ReferenceType IRubyObject rangeLt FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject a FormalParameter ReferenceType IRubyObject b LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation a MemberReference context Literal "<=>" MemberReference b callMethod IfStatement MethodInvocation result isNil ReturnStatement Literal null ReturnStatement TernaryExpression BinaryOperation < MethodInvocation RubyComparable MemberReference context MemberReference result MemberReference a MemberReference b cmpint Literal 0 MethodInvocation MethodInvocation getTrue getRuntime Literal null	1
MethodDeclaration Modifier public ReferenceType IRubyObject setValueOneDepthZero FormalParameter ReferenceType IRubyObject value ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + This MethodInvocation getClass MethodInvocation getSimpleName Literal " does not support scopes with two or more variables"	1
MethodDeclaration Modifier public static ReferenceType Block newCompiledClosure FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType body LocalVariableDeclaration ReferenceType Binding VariableDeclarator binding MethodInvocation context MemberReference self MemberReference Visibility PUBLIC currentBinding ReturnStatement ClassCreator ReferenceType Block MemberReference body MemberReference binding	0
MethodDeclaration Modifier private setupModes StatementExpression Assignment MemberReference closedWrite Literal false = StatementExpression Assignment MemberReference closedRead Literal false = IfStatement MethodInvocation modes isReadOnly StatementExpression Assignment MemberReference closedWrite Literal true = IfStatement MethodInvocation ! modes isReadable StatementExpression Assignment MemberReference closedRead Literal true =	1
MethodDeclaration Modifier public ReferenceType String getTypeInstance FormalParameter BasicType double i FormalParameter ReferenceType String o FormalParameter ReferenceType String o2 ReturnStatement Literal "double,string,string"	0
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType Invocation invocation FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference parameter int32Value putInt	1
MethodDeclaration Modifier public put FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType StructLayout ReferenceType Storage cache FormalParameter ReferenceType IRubyObject ptr FormalParameter ReferenceType IRubyObject value ThrowStatement MethodInvocation runtime Literal "Cannot set Array fields" newNotImplementedError	0
MethodDeclaration Modifier public BasicType int getStatus ReturnStatement MemberReference status	0
MethodDeclaration Modifier public ReferenceType Object case374_line1387 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals literal_concat = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static ReferenceType IRubyObject m_sqrt FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x IfStatement MethodInvocation MethodInvocation isTrue MemberReference context MemberReference x f_real_p BlockStatement IfStatement MethodInvocation ! MemberReference context MemberReference x f_negative_p ReturnStatement MethodInvocation RubyMath MemberReference x MemberReference x sqrt ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation getComplex getRuntime MethodInvocation RubyFixnum MethodInvocation context getRuntime zero MethodInvocation RubyMath MemberReference x MethodInvocation MemberReference context MemberReference x f_negate sqrt newComplex BlockStatement LocalVariableDeclaration ReferenceType RubyComplex VariableDeclarator complex Cast ReferenceType RubyComplex MemberReference x IfStatement MethodInvocation MemberReference context MemberReference complex image f_negative_p BlockStatement ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context MethodInvocation MemberReference context MemberReference x f_conjugate m_sqrt f_conjugate BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator a MethodInvocation MemberReference context MemberReference x f_abs LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator two MethodInvocation RubyFixnum MethodInvocation context getRuntime two ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation getComplex getRuntime MethodInvocation RubyMath MemberReference x MethodInvocation MemberReference context MethodInvocation MemberReference context MemberReference a MemberReference complex real f_add MemberReference two f_div sqrt MethodInvocation RubyMath MemberReference x MethodInvocation MemberReference context MethodInvocation MemberReference context MemberReference a MemberReference complex real f_sub MemberReference two f_div sqrt newComplex	1
MethodDeclaration Modifier public getfield FormalParameter ReferenceType String arg1 FormalParameter ReferenceType String arg2 FormalParameter ReferenceType String arg3 StatementExpression MethodInvocation MethodInvocation MemberReference GETFIELD MemberReference arg1 MemberReference arg2 MemberReference arg3 visitFieldInsn getMethodVisitor	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtime MethodInvocation runtime MethodInvocation getPosix newFixnum	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyFixnum hash FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime LocalVariableDeclaration BasicType int VariableDeclarator h MethodInvocation MethodInvocation getRealClass MethodInvocation hashCode getMetaClass ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference values length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference h BinaryOperation | BinaryOperation << MemberReference h Literal 1 TernaryExpression BinaryOperation < MemberReference h Literal 0 Literal 1 Literal 0 = StatementExpression Assignment MemberReference h MethodInvocation RubyNumeric MemberReference ArraySelector MemberReference i MethodInvocation MemberReference context Literal callMethod values num2long ^= ReturnStatement MethodInvocation runtime MemberReference h newFixnum	1
MethodDeclaration Modifier public pushRubyClass FormalParameter ReferenceType RubyModule currentModule LocalVariableDeclaration BasicType int VariableDeclarator index MemberReference ++ parentIndex LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator stack MemberReference parentStack StatementExpression Assignment MemberReference ArraySelector MemberReference index stack MemberReference currentModule = IfStatement BinaryOperation == BinaryOperation + MemberReference index Literal 1 MemberReference stack length BlockStatement StatementExpression MethodInvocation expandParentsIfNecessary	1
MethodDeclaration Modifier public ReferenceType Frame createBacktrace FormalParameter BasicType int level FormalParameter BasicType boolean nativeException LocalVariableDeclaration BasicType int VariableDeclarator traceSize BinaryOperation + BinaryOperation - MemberReference frameIndex MemberReference level Literal 1 LocalVariableDeclaration ReferenceType Frame VariableDeclarator traceFrames IfStatement BinaryOperation <= MemberReference traceSize Literal 0 ReturnStatement Literal null IfStatement MemberReference nativeException BlockStatement StatementExpression Assignment MemberReference traceFrames ArrayCreator ReferenceType Frame BinaryOperation + MemberReference traceSize Literal 1 = StatementExpression Assignment MemberReference ArraySelector MemberReference traceSize traceFrames MemberReference ArraySelector MemberReference frameIndex frameStack = BlockStatement StatementExpression Assignment MemberReference traceFrames ArrayCreator ReferenceType Frame MemberReference traceSize = StatementExpression MethodInvocation System MemberReference frameStack Literal 0 MemberReference traceFrames Literal 0 MemberReference traceSize arraycopy ReturnStatement MemberReference traceFrames	1
MethodDeclaration Modifier public BasicType boolean hasNext ReturnStatement MethodInvocation iter hasNext	0
MethodDeclaration Modifier public static ReferenceType RubyArray newArrayNoCopy FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject args FormalParameter BasicType int begin ReturnStatement ClassCreator ReferenceType RubyArray MemberReference runtime MemberReference args MemberReference begin	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject newInstance FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject clazz FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference clazz MemberReference ArraySelector Literal 0 args newInstance SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference clazz MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args newInstance StatementExpression MethodInvocation Arity MethodInvocation context getRuntime MemberReference args length Literal 1 Literal 1 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType int getFileno ReturnStatement MemberReference fileno	0
MethodDeclaration Modifier private static ReferenceType IRubyObject FormalParameter BasicType boolean raise FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyClass target RaiseException IfStatement MemberReference raise BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator type IfStatement MethodInvocation obj isNil BlockStatement StatementExpression Assignment MemberReference type Literal = IfStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyBoolean BlockStatement StatementExpression Assignment MemberReference type TernaryExpression MethodInvocation obj isTrue Literal "true" Literal "false" = BlockStatement StatementExpression Assignment MemberReference type MethodInvocation obj MethodInvocation getRealClass MethodInvocation getName getMetaClass = ThrowStatement MethodInvocation obj MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "can't convert " MemberReference type Literal " into " MemberReference target newTypeError getRuntime BlockStatement ReturnStatement MethodInvocation obj MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public ReferenceType IRubyObject invoke FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType CallType callType FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MemberReference name searchMethod LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator caller MethodInvocation context IfStatement MethodInvocation MemberReference method MemberReference name MemberReference caller MemberReference callType BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference callType MemberReference arg MemberReference block callMethodMissing ReturnStatement MethodInvocation method MemberReference context MemberReference self This MemberReference name MemberReference arg MemberReference block call	0
MethodDeclaration Modifier public BasicType boolean isObjectSpaceEnabled ReturnStatement MemberReference objectSpaceEnabled	0
MethodDeclaration Modifier public setPreviousCRefScope FormalParameter ReferenceType crefScope StatementExpression Assignment This MemberReference MemberReference crefScope =	0
MethodDeclaration Modifier public issueRedoEvent IfStatement BinaryOperation != MemberReference currentLoopLabels Literal null BlockStatement StatementExpression MethodInvocation IfStatement MemberReference inNestedMethod BlockStatement StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject sig invokeUtilityMethod BlockStatement StatementExpression MethodInvocation method MemberReference scopeStart go_to	1
MethodDeclaration Modifier private ReferenceType List selectCache FormalParameter ReferenceType IRubyObject value ReturnStatement TernaryExpression BinaryOperation instanceof MemberReference value ReferenceType RubySymbol MemberReference symbols MemberReference links	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "inspect" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject inspect19 ReturnStatement MethodInvocation Literal true inspectCommon	0
MethodDeclaration Modifier public ReferenceType Object case84_line607 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals attrset = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "module_eval" Literal "class_eval" ElementValuePair frame Literal true ReferenceType IRubyObject module_eval FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context This MemberReference arg0 MemberReference arg1 MemberReference block specificEval	1
MethodDeclaration Modifier private final resize FormalParameter BasicType int newCapacity LocalVariableDeclaration Modifier final ReferenceType RubyHashEntry VariableDeclarator oldTable MemberReference table LocalVariableDeclaration Modifier final ReferenceType RubyHashEntry VariableDeclarator newTable ArrayCreator ReferenceType RubyHashEntry MemberReference newCapacity ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j MemberReference oldTable length MemberReference ++ j BlockStatement LocalVariableDeclaration ReferenceType RubyHashEntry VariableDeclarator entry MemberReference ArraySelector MemberReference j oldTable StatementExpression Assignment MemberReference ArraySelector MemberReference j oldTable Literal null = WhileStatement BinaryOperation != MemberReference entry Literal null BlockStatement LocalVariableDeclaration ReferenceType RubyHashEntry VariableDeclarator next MemberReference entry next LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation MemberReference entry hash MemberReference newCapacity bucketIndex StatementExpression Assignment MemberReference entry next MemberReference ArraySelector MemberReference i newTable = StatementExpression Assignment MemberReference ArraySelector MemberReference i newTable MemberReference entry = StatementExpression Assignment MemberReference entry MemberReference next = StatementExpression Assignment MemberReference table MemberReference newTable =	1
MethodDeclaration Modifier public ReferenceType Object case376_line1398 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition IfStatement BinaryOperation == Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null BlockStatement StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType XStrNode MemberReference position Literal null = IfStatement BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals ReferenceType StrNode BlockStatement StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType XStrNode MemberReference position Cast ReferenceType ByteList Cast ReferenceType StrNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = IfStatement BinaryOperation instanceof Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals ReferenceType DStrNode BlockStatement StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType DXStrNode MemberReference position Cast ReferenceType DStrNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression Cast ReferenceType Node MemberReference yyVal BlockStatement StatementExpression Assignment MemberReference yyVal ClassCreator MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals add ReferenceType DXStrNode MemberReference position = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair backtrace Literal true ElementValuePair meta Literal true ReferenceType IRubyObject java_method FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject proxyClass FormalParameter ReferenceType IRubyObject rubyName LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation rubyName asJavaString ReturnStatement MethodInvocation MemberReference context MemberReference proxyClass MemberReference name getRubyMethod	1
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime getNil MemberReference block Literal false assign StatementExpression MethodInvocation parameter2 MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime getNil MemberReference block Literal false assign	0
MethodDeclaration Modifier public static ReferenceType RubyClass createInvokerClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule module LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation module Literal "Invoker" MethodInvocation module Literal "AbstractInvoker" fastGetClass MemberReference ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR defineClassUnder StatementExpression MethodInvocation result ClassReference ReferenceType AbstractInvoker defineAnnotatedMethods StatementExpression MethodInvocation result ClassReference ReferenceType JFFIInvoker defineAnnotatedMethods StatementExpression MethodInvocation result ClassReference ReferenceType JFFIInvoker defineAnnotatedConstants ReturnStatement MemberReference result	1
MethodDeclaration Modifier public BasicType boolean isBinmode ReturnStatement BinaryOperation != BinaryOperation & MemberReference mode MemberReference BINMODE Literal 0	0
MethodDeclaration Modifier final protected FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType Block block StatementExpression MethodInvocation context MemberReference implementationClass MemberReference name MemberReference self MemberReference block MemberReference staticScope	0
MethodDeclaration Modifier protected post FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Visibility FormalParameter ReferenceType Frame lastFrame StatementExpression MethodInvocation binding MethodInvocation MemberReference setVisibility getFrame StatementExpression MethodInvocation context MemberReference binding MemberReference lastFrame	0
MethodDeclaration setTmsStruct FormalParameter ReferenceType RubyClass StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 2 ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject b FormalParameter ReferenceType IRubyObject digits ReturnStatement MethodInvocation MemberReference context MemberReference b Literal MemberReference digits addInternal	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "==" ElementValuePair compat MemberReference CompatVersion RUBY1_8 Annotation Override ReferenceType IRubyObject op_equal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == This MemberReference other ReturnStatement MethodInvocation runtime getTrue IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyString BlockStatement ReturnStatement TernaryExpression MethodInvocation value Cast ReferenceType RubyString MemberReference other equal MethodInvocation runtime getTrue MethodInvocation runtime getFalse ReturnStatement MethodInvocation MemberReference context MemberReference other op_equalCommon	1
MethodDeclaration setBignum FormalParameter ReferenceType RubyClass bignumClass StatementExpression Assignment This MemberReference bignumClass MemberReference bignumClass =	0
MethodDeclaration setRational FormalParameter ReferenceType RubyClass rationalClass StatementExpression Assignment This MemberReference rationalClass MemberReference rationalClass =	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject get ReturnStatement MethodInvocation runtime MethodInvocation MemberReference runtime kcode getKCode	0
MethodDeclaration Modifier public setLoadServiceCreator FormalParameter ReferenceType LoadServiceCreator creator StatementExpression Assignment This MemberReference creator MemberReference creator =	0
MethodDeclaration Modifier public updateFrame FormalParameter ReferenceType String name FormalParameter ReferenceType String fileName FormalParameter BasicType int line StatementExpression Assignment This MemberReference name MemberReference name = StatementExpression Assignment This MemberReference fileName MemberReference fileName = StatementExpression Assignment This MemberReference line MemberReference line =	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "srand" ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType RubyInteger srand FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType RubyInteger VariableDeclarator integerSeed MethodInvocation arg Literal "to_int" convertToInteger LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration BasicType long VariableDeclarator oldRandomSeed MethodInvocation runtime getRandomSeed StatementExpression MethodInvocation runtime MethodInvocation integerSeed getLongValue StatementExpression MethodInvocation runtime MethodInvocation MethodInvocation runtime getRandomSeed setSeed getRandom ReturnStatement MethodInvocation runtime MemberReference oldRandomSeed newFixnum	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "rjust" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject rjust FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 ReturnStatement MethodInvocation MemberReference arg0 MemberReference arg1 Literal 'r' justify	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType Block block IfStatement BinaryOperation >= MemberReference box callCount Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference block call MemberReference context MemberReference name tryJitReturnMethod ReturnStatement MethodInvocation box.actualMethod MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference block call	0
MethodDeclaration Modifier public ReferenceType Object case494_line1898 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals appendToBlock = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ReferenceType IRubyObject getlogin FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator login MethodInvocation runtime MethodInvocation getlogin getPosix IfStatement BinaryOperation != MemberReference login Literal null BlockStatement ReturnStatement MethodInvocation runtime MemberReference login newString StatementExpression Assignment MemberReference login MethodInvocation System Literal "USER" getenv = IfStatement BinaryOperation != MemberReference login Literal null BlockStatement ReturnStatement MethodInvocation runtime MemberReference login newString ReturnStatement MethodInvocation runtime getNil CatchClause CatchClauseParameter Exception e ReturnStatement MethodInvocation runtime MethodInvocation System Literal getProperty newString	0
MethodDeclaration Modifier private ReferenceType Object hashStore FormalParameter ReferenceType String name FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator table TernaryExpression BinaryOperation > BinaryOperation + MemberReference vTableSize Literal 1 MemberReference vTableThreshold MethodInvocation rehash MemberReference vTable LocalVariableDeclaration BasicType int VariableDeclarator index LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation name hashCode LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator e ForStatement ForControl Assignment MemberReference e MemberReference ArraySelector Assignment MemberReference index BinaryOperation & MemberReference hash BinaryOperation - MemberReference table length Literal 1 = table = BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference hash MemberReference e hash MethodInvocation name MemberReference e name equals BlockStatement StatementExpression Assignment MemberReference e value MemberReference value = ReturnStatement MemberReference value StatementExpression Assignment MemberReference e ClassCreator ReferenceType VariableTableEntry MemberReference hash MethodInvocation name intern MemberReference value MemberReference ArraySelector MemberReference index table = StatementExpression Assignment MemberReference ArraySelector MemberReference index table MemberReference e = StatementExpression MemberReference ++ vTableSize StatementExpression Assignment MemberReference vTable MemberReference table = ReturnStatement MemberReference value	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "ungetc" ElementValuePair required Literal 1 ReferenceType IRubyObject ungetc FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public Annotation Override ReferenceType Arity arity ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject setValueDepthZero FormalParameter ReferenceType IRubyObject value FormalParameter BasicType int offset ReturnStatement Assignment MemberReference variableValueZero MemberReference value =	1
MethodDeclaration Modifier private final BasicType int refillBuffer IOException StatementExpression MethodInvocation buffer clear LocalVariableDeclaration BasicType int VariableDeclarator n Cast ReferenceType ReadableByteChannel MethodInvocation descriptor getChannel StatementExpression MethodInvocation buffer flip ReturnStatement MemberReference n	1
MethodDeclaration Modifier public ReferenceType Method getSuperMethod ReturnStatement MemberReference sm	0
MethodDeclaration Modifier public final ReferenceType RubyString getString3 FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 3 getString	0
MethodDeclaration Modifier public static ReferenceType Block getBlock FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block currentBlock FormalParameter ReferenceType Node blockNode IfStatement BinaryOperation == MemberReference blockNode Literal null ReturnStatement MemberReference Block NULL_BLOCK IfStatement BinaryOperation instanceof MemberReference blockNode ReferenceType IterNode BlockStatement ReturnStatement MethodInvocation MemberReference blockNode MemberReference context MemberReference self getIterNodeBlock IfStatement BinaryOperation instanceof MemberReference blockNode ReferenceType BlockPassNode BlockStatement ReturnStatement MethodInvocation MemberReference blockNode MemberReference runtime MemberReference context MemberReference self MemberReference currentBlock getBlockPassBlock AssertStatement Literal false Literal "Trying to get block from which cannot deliver" ReturnStatement Literal null	1
MethodDeclaration Modifier public final get FormalParameter BasicType long offset FormalParameter BasicType short dst FormalParameter BasicType int off FormalParameter BasicType int len ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public static ReferenceType DateTimeZone getLocalTimeZone FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator tzVar MethodInvocation runtime MemberReference TZ_STRING newString LocalVariableDeclaration ReferenceType RubyHash VariableDeclarator h Cast ReferenceType RubyHash MethodInvocation runtime MethodInvocation Literal "ENV" fastGetConstant getObject LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tz MethodInvocation h MethodInvocation runtime getCurrentContext MemberReference tzVar op_aref IfStatement BinaryOperation || BinaryOperation == MemberReference tz Literal null BinaryOperation instanceof MemberReference tz ReferenceType RubyString BlockStatement ReturnStatement MethodInvocation DateTimeZone getDefault BlockStatement ReturnStatement MethodInvocation MemberReference runtime MethodInvocation tz toString getTimeZone	1
MethodDeclaration Modifier private ReferenceType IRubyObject cmp FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject r FormalParameter BasicType char op LocalVariableDeclaration BasicType int VariableDeclarator e Literal 0 LocalVariableDeclaration ReferenceType RubyBigDecimal VariableDeclarator rb MethodInvocation MemberReference r Literal false getVpValue IfStatement BinaryOperation == MemberReference rb Literal null BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator ee MethodInvocation MemberReference context Literal "<=>" MemberReference r callCoerced IfStatement MethodInvocation ee isNil BlockStatement ReturnStatement MethodInvocation MethodInvocation getNil getRuntime StatementExpression Assignment MemberReference e MethodInvocation RubyNumeric MemberReference ee fix2int = BlockStatement IfStatement BinaryOperation | MethodInvocation isNaN MethodInvocation rb isNaN BlockStatement ReturnStatement MethodInvocation MethodInvocation getNil getRuntime IfStatement BinaryOperation || BinaryOperation != MemberReference infinitySign Literal 0 BinaryOperation != MemberReference rb infinitySign Literal 0 BlockStatement StatementExpression Assignment MemberReference e BinaryOperation - MemberReference infinitySign MemberReference rb infinitySign = BlockStatement StatementExpression Assignment MemberReference e MethodInvocation value MemberReference rb value compareTo = SwitchStatement MemberReference op SwitchStatementCase Literal '*' ReturnStatement MethodInvocation MethodInvocation MemberReference e newFixnum getRuntime SwitchStatementCase Literal '=' ReturnStatement TernaryExpression BinaryOperation == MemberReference e Literal 0 MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime SwitchStatementCase Literal '!' ReturnStatement TernaryExpression BinaryOperation != MemberReference e Literal 0 MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime SwitchStatementCase Literal 'G' ReturnStatement TernaryExpression BinaryOperation >= MemberReference e Literal 0 MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime SwitchStatementCase Literal '>' ReturnStatement TernaryExpression BinaryOperation > MemberReference e Literal 0 MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime SwitchStatementCase Literal 'L' ReturnStatement TernaryExpression BinaryOperation <= MemberReference e Literal 0 MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime SwitchStatementCase Literal '<' ReturnStatement TernaryExpression BinaryOperation < MemberReference e Literal 0 MethodInvocation MethodInvocation getTrue getRuntime MethodInvocation MethodInvocation getFalse getRuntime ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_i" ReferenceType IRubyObject to_i FormalParameter ReferenceType IRubyObject arg0 LocalVariableDeclaration BasicType long VariableDeclarator base MethodInvocation arg0 MethodInvocation getLongValue convertToInteger IfStatement BinaryOperation < MemberReference base Literal 0 BlockStatement ThrowStatement MethodInvocation MethodInvocation BinaryOperation + Literal "illegal radix " MemberReference base newArgumentError getRuntime ReturnStatement MethodInvocation Cast BasicType int MemberReference base Literal false	1
MethodDeclaration Modifier private static ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType NKFCharset parseOpt FormalParameter ReferenceType String s LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType NKFCharset VariableDeclarator options ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType NKFCharset StatementExpression MethodInvocation options Literal "input" MemberReference AUTO put StatementExpression MethodInvocation options Literal "output" MemberReference JIS put StatementExpression MethodInvocation options Literal "mime-decode" MemberReference MIME_DETECT put StatementExpression MethodInvocation options Literal "mime-encode" MemberReference NOCONV put ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation s length MemberReference ++ i BlockStatement SwitchStatement MethodInvocation s MemberReference i charAt SwitchStatementCase Literal 'b' BreakStatement SwitchStatementCase Literal 'u' BreakStatement SwitchStatementCase Literal 'j' StatementExpression MethodInvocation options Literal "output" MemberReference JIS put BreakStatement SwitchStatementCase Literal 's' StatementExpression MethodInvocation options Literal "output" MemberReference SJIS put BreakStatement SwitchStatementCase Literal 'e' StatementExpression MethodInvocation options Literal "output" MemberReference EUC put BreakStatement SwitchStatementCase Literal 'w' BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation MemberReference s MemberReference i optionUTF IfStatement BinaryOperation == MemberReference n Literal 32 StatementExpression MethodInvocation options Literal "output" MemberReference UTF32 put IfStatement BinaryOperation == MemberReference n Literal 16 StatementExpression MethodInvocation options Literal "output" MemberReference UTF16 put StatementExpression MethodInvocation options Literal "output" MemberReference UTF8 put BreakStatement SwitchStatementCase Literal 'J' StatementExpression MethodInvocation options Literal "input" MemberReference JIS put BreakStatement SwitchStatementCase Literal 'S' StatementExpression MethodInvocation options Literal "input" MemberReference SJIS put BreakStatement SwitchStatementCase Literal 'E' StatementExpression MethodInvocation options Literal "input" MemberReference EUC put BreakStatement SwitchStatementCase Literal 'W' BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator n MethodInvocation MemberReference s MemberReference i optionUTF IfStatement BinaryOperation == MemberReference n Literal 32 StatementExpression MethodInvocation options Literal "input" MemberReference UTF32 put IfStatement BinaryOperation == MemberReference n Literal 16 StatementExpression MethodInvocation options Literal "input" MemberReference UTF16 put StatementExpression MethodInvocation options Literal "input" MemberReference UTF8 put BreakStatement SwitchStatementCase Literal 't' BreakStatement SwitchStatementCase Literal 'r' BreakStatement SwitchStatementCase Literal 'h' BreakStatement SwitchStatementCase Literal 'm' IfStatement BinaryOperation >= BinaryOperation + MemberReference i Literal 1 MethodInvocation s length BlockStatement StatementExpression MethodInvocation options Literal "mime-decode" MemberReference MIME_DETECT put BreakStatement SwitchStatement MethodInvocation s BinaryOperation + MemberReference i Literal 1 charAt SwitchStatementCase Literal 'B' StatementExpression MethodInvocation options Literal "mime-decode" MemberReference BASE64 put BreakStatement SwitchStatementCase Literal 'Q' StatementExpression MethodInvocation options Literal "mime-decode" MemberReference QENCODE put BreakStatement SwitchStatementCase Literal 'N' BreakStatement SwitchStatementCase Literal '0' StatementExpression MethodInvocation options Literal "mime-decode" MemberReference NOCONV put BreakStatement BreakStatement SwitchStatementCase Literal 'M' IfStatement BinaryOperation >= BinaryOperation + MemberReference i Literal 1 MethodInvocation s length BlockStatement StatementExpression MethodInvocation options Literal "mime-encode" MemberReference NOCONV put SwitchStatement MethodInvocation s BinaryOperation + MemberReference i Literal 1 charAt SwitchStatementCase Literal 'B' StatementExpression MethodInvocation options Literal "mime-encode" MemberReference BASE64 put BreakStatement SwitchStatementCase Literal 'Q' StatementExpression MethodInvocation options Literal "mime-encode" MemberReference QENCODE put BreakStatement BreakStatement SwitchStatementCase Literal 'l' BreakStatement SwitchStatementCase Literal 'f' BreakStatement SwitchStatementCase Literal 'F' BreakStatement SwitchStatementCase Literal 'Z' BreakStatement SwitchStatementCase Literal 'X' BreakStatement SwitchStatementCase Literal 'x' BreakStatement SwitchStatementCase Literal 'B' BreakStatement SwitchStatementCase Literal 'T' BreakStatement SwitchStatementCase Literal 'd' BreakStatement SwitchStatementCase Literal 'c' BreakStatement SwitchStatementCase Literal 'I' BreakStatement SwitchStatementCase Literal 'L' BreakStatement SwitchStatementCase Literal '-' IfStatement BinaryOperation == MethodInvocation s BinaryOperation + MemberReference i Literal 1 charAt Literal '-' BlockStatement SwitchStatementCase ReturnStatement MemberReference options	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject str ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference str guess	0
MethodDeclaration Modifier public nextValue FormalParameter ReferenceType BodyCompiler context FormalParameter ReferenceType Object object FormalParameter BasicType int index StatementExpression MethodInvocation context MethodInvocation MemberReference index Literal false assignLocalVariable getVariableCompiler	1
MethodDeclaration Modifier public ReferenceType IRubyObject runInterpreter FormalParameter ReferenceType Node scriptNode LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation getCurrentContext AssertStatement BinaryOperation != MemberReference scriptNode Literal null Literal "scriptNode is not null" TryStatement ReturnStatement MethodInvocation scriptNode This MemberReference context MethodInvocation getTopSelf MemberReference Block NULL_BLOCK CatchClause CatchClauseParameter rj ReturnStatement Cast ReferenceType IRubyObject MethodInvocation rj getValue	1
MethodDeclaration Modifier static protected registerRubyMethods FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass result StatementExpression MethodInvocation result ClassReference ReferenceType defineAnnotatedMethods StatementExpression MethodInvocation result MethodInvocation Literal "__j_allocate" Literal "allocate" defineAlias getMetaClass	1
MethodDeclaration Modifier public ReferenceType Object case443_line1711 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType FloatNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals negateFloat = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override BasicType int hashCode LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator hashValue MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime Literal callMethod IfStatement BinaryOperation instanceof MemberReference hashValue ReferenceType RubyFixnum ReturnStatement Cast BasicType int MethodInvocation RubyNumeric MemberReference hashValue fix2long ReturnStatement MethodInvocation MemberReference hashValue nonFixnumHashCode	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject backtrace ReturnStatement MethodInvocation getBacktrace	0
MethodDeclaration Modifier private ReferenceType ISourcePosition getPosition2 FormalParameter ReferenceType ISourcePositionHolder pos ReturnStatement TernaryExpression BinaryOperation == MemberReference pos Literal null MethodInvocation lexer getPosition MethodInvocation pos getPosition	0
MethodDeclaration Modifier public ReferenceType IR_Scope buildRoot FormalParameter ReferenceType Node node LocalVariableDeclaration ReferenceType IR_Script VariableDeclarator script ClassCreator ReferenceType IR_Script Literal MethodInvocation node MethodInvocation getFile getPosition LocalVariableDeclaration ReferenceType IR_Class VariableDeclarator rootClass MemberReference script LocalVariableDeclaration ReferenceType IR_Method VariableDeclarator rootMethod MethodInvocation rootClass StatementExpression MethodInvocation rootMethod ClassCreator ReferenceType RECV_ARG_Instr MethodInvocation rootClass getSelf Literal 0 addInstr LocalVariableDeclaration ReferenceType RootNode VariableDeclarator rootNode Cast ReferenceType RootNode MemberReference node StatementExpression MethodInvocation MethodInvocation rootNode getBodyNode MemberReference rootMethod build ReturnStatement MemberReference script	1
MethodDeclaration Modifier private static ReferenceType RubyThread startThread FormalParameter Modifier final ReferenceType IRubyObject recv FormalParameter Modifier final ReferenceType IRubyObject args FormalParameter BasicType boolean callInit FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyThread VariableDeclarator rubyThread ClassCreator ReferenceType RubyThread MethodInvocation recv getRuntime Cast ReferenceType RubyClass MemberReference recv IfStatement MemberReference callInit BlockStatement StatementExpression MethodInvocation rubyThread MemberReference args MemberReference block callInit BlockStatement StatementExpression MethodInvocation rubyThread MethodInvocation recv MethodInvocation getCurrentContext getRuntime MemberReference args MemberReference block ReturnStatement MemberReference rubyThread	0
MethodDeclaration Modifier private ReferenceType Node new_call_blockpass FormalParameter ReferenceType Node receiver FormalParameter ReferenceType Token operation FormalParameter ReferenceType BlockPassNode blockPass LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator position MethodInvocation MemberReference receiver MemberReference blockPass position LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType String MethodInvocation operation getValue LocalVariableDeclaration ReferenceType Node VariableDeclarator args MethodInvocation blockPass getArgsNode IfStatement BinaryOperation == MemberReference args Literal null ReturnStatement ClassCreator ReferenceType CallNoArgBlockPassNode MemberReference position MemberReference receiver MemberReference name MemberReference args MemberReference blockPass IfStatement BinaryOperation instanceof MemberReference args ReferenceType ArrayNode ReturnStatement ClassCreator ReferenceType CallSpecialArgBlockPassNode MemberReference position MemberReference receiver MemberReference name MemberReference args MemberReference blockPass SwitchStatement Cast ReferenceType ArrayNode MemberReference args SwitchStatementCase Literal 0 ReturnStatement ClassCreator ReferenceType CallNoArgBlockPassNode MemberReference position MemberReference receiver MemberReference name MemberReference args MemberReference blockPass SwitchStatementCase Literal 1 ReturnStatement ClassCreator ReferenceType CallOneArgBlockPassNode MemberReference position MemberReference receiver MemberReference name Cast ReferenceType ArrayNode MemberReference args MemberReference blockPass SwitchStatementCase Literal 2 ReturnStatement ClassCreator ReferenceType CallTwoArgBlockPassNode MemberReference position MemberReference receiver MemberReference name Cast ReferenceType ArrayNode MemberReference args MemberReference blockPass SwitchStatementCase Literal 3 ReturnStatement ClassCreator ReferenceType CallThreeArgBlockPassNode MemberReference position MemberReference receiver MemberReference name Cast ReferenceType ArrayNode MemberReference args MemberReference blockPass SwitchStatementCase ReturnStatement ClassCreator ReferenceType CallManyArgsBlockPassNode MemberReference position MemberReference receiver MemberReference name MemberReference args MemberReference blockPass	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType RubyInteger convertToInteger FormalParameter BasicType int methodIndex FormalParameter ReferenceType String convertMethod ReturnStatement MethodInvocation MemberReference convertMethod convertToInteger	1
MethodDeclaration Modifier public Annotation JRubyMethod Annotation Override ReferenceType RubyString to_s LocalVariableDeclaration BasicType int VariableDeclarator base Literal 10 ReturnStatement MethodInvocation MethodInvocation MethodInvocation Convert2 MemberReference value MemberReference base newString getRuntime	0
MethodDeclaration Modifier public releaseTempLocal StatementExpression MemberReference --	0
MethodDeclaration Modifier public ReferenceType RubyClass getStandardError ReturnStatement MemberReference standardError	0
MethodDeclaration Modifier public ReferenceType DataFlowVar getDFVar FormalParameter ReferenceType Variable v ReturnStatement MethodInvocation _dfVarMap MemberReference v get	0
MethodDeclaration Modifier public ReferenceType IRubyObject invoke FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType CallType callType FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MemberReference name searchMethod LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator caller MethodInvocation context IfStatement MethodInvocation MemberReference method MemberReference name MemberReference caller MemberReference callType BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference callType MemberReference arg0 MemberReference arg1 MemberReference block callMethodMissing ReturnStatement MethodInvocation method MemberReference context MemberReference self This MemberReference name MemberReference arg0 MemberReference arg1 MemberReference block call	0
MethodDeclaration Modifier public marshal FormalParameter ReferenceType Invocation invocation FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference parameter int8Value putByte	0
MethodDeclaration Modifier protected Annotation Override BasicType boolean isSame FormalParameter ReferenceType RubyModule module ReturnStatement MethodInvocation MemberReference module isSame	0
MethodDeclaration Modifier public static ReferenceType String mangleStringForCleanJavaIdentifier FormalParameter ReferenceType String name LocalVariableDeclaration BasicType char VariableDeclarator characters MethodInvocation name toCharArray LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator cleanBuffer ClassCreator ReferenceType StringBuilder LocalVariableDeclaration BasicType boolean VariableDeclarator prevWasReplaced Literal false ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference characters length MemberReference ++ i BlockStatement IfStatement BinaryOperation || BinaryOperation && BinaryOperation == MemberReference i Literal 0 MethodInvocation Character MemberReference ArraySelector MemberReference i characters isJavaIdentifierStart MethodInvocation Character MemberReference ArraySelector MemberReference i characters isJavaIdentifierPart BlockStatement StatementExpression MethodInvocation cleanBuffer MemberReference ArraySelector MemberReference i characters append StatementExpression Assignment MemberReference prevWasReplaced Literal false = BlockStatement IfStatement MemberReference ! prevWasReplaced BlockStatement StatementExpression MethodInvocation cleanBuffer Literal "_" append StatementExpression Assignment MemberReference prevWasReplaced Literal true = SwitchStatement MemberReference ArraySelector MemberReference i characters SwitchStatementCase Literal '?' StatementExpression MethodInvocation cleanBuffer Literal "p_" append ContinueStatement SwitchStatementCase Literal '!' StatementExpression MethodInvocation cleanBuffer Literal "b_" append ContinueStatement SwitchStatementCase Literal '<' StatementExpression MethodInvocation cleanBuffer Literal "lt_" append ContinueStatement SwitchStatementCase Literal '>' StatementExpression MethodInvocation cleanBuffer Literal "gt_" append ContinueStatement SwitchStatementCase Literal '=' StatementExpression MethodInvocation cleanBuffer Literal "equal_" append ContinueStatement SwitchStatementCase Literal '[' IfStatement BinaryOperation && BinaryOperation < BinaryOperation + MemberReference i Literal 1 MemberReference characters length BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 characters Literal ']' BlockStatement StatementExpression MethodInvocation cleanBuffer Literal "aref_" append StatementExpression MemberReference ++ i BlockStatement StatementExpression MethodInvocation cleanBuffer Literal "lbracket_" append ContinueStatement SwitchStatementCase Literal ']' StatementExpression MethodInvocation cleanBuffer Literal "rbracket_" append ContinueStatement SwitchStatementCase Literal '+' StatementExpression MethodInvocation cleanBuffer Literal "plus_" append ContinueStatement SwitchStatementCase Literal '-' StatementExpression MethodInvocation cleanBuffer Literal "minus_" append ContinueStatement SwitchStatementCase Literal '*' StatementExpression MethodInvocation cleanBuffer Literal "times_" append ContinueStatement SwitchStatementCase Literal '/' StatementExpression MethodInvocation cleanBuffer Literal "div_" append ContinueStatement SwitchStatementCase Literal '&' StatementExpression MethodInvocation cleanBuffer Literal "and_" append ContinueStatement SwitchStatementCase Literal '.' StatementExpression MethodInvocation cleanBuffer Literal "dot_" append ContinueStatement SwitchStatementCase StatementExpression MethodInvocation cleanBuffer MethodInvocation Literal "_" append MethodInvocation Integer MemberReference ArraySelector MemberReference i characters toHexString append ReturnStatement MethodInvocation cleanBuffer toString	1
MethodDeclaration Modifier public Annotation Override BasicType int hashCode LocalVariableDeclaration BasicType int VariableDeclarator hash Literal 5 StatementExpression Assignment MemberReference hash BinaryOperation + BinaryOperation * Literal 23 MemberReference hash MethodInvocation nativeType hashCode = ReturnStatement MemberReference hash	0
MethodDeclaration Modifier final public static BasicType byte FormalParameter BasicType long i ReturnStatement MethodInvocation ByteList MethodInvocation Long MemberReference i toOctalString plain	0
MethodDeclaration Modifier private setReuseAddr FormalParameter ReferenceType IRubyObject val IOException LocalVariableDeclaration ReferenceType Channel VariableDeclarator socketChannel MethodInvocation openFile MethodInvocation getDescriptor MethodInvocation getChannel getMainStream IfStatement BinaryOperation instanceof MemberReference socketChannel ReferenceType ServerSocketChannel BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference val asBoolean asServerSocket	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType CharSequence line LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation line length StatementExpression Assignment MemberReference index MemberReference length -=	0
MethodDeclaration Modifier public final Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block StatementExpression MethodInvocation arity MethodInvocation context getRuntime MemberReference args checkArity ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference ArraySelector Literal 2 args invoke	1
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args LocalVariableDeclaration ReferenceType IR_Scope VariableDeclarator scope MethodInvocation MemberReference args buildFromMain StatementExpression MethodInvocation System.out Literal "################## Before local optimization pass ##################" println StatementExpression MethodInvocation scope ClassCreator ReferenceType org ReferenceType jruby ReferenceType compiler ReferenceType ir ReferenceType compiler_pass ReferenceType IR_Printer runCompilerPass StatementExpression MethodInvocation scope ClassCreator ReferenceType org ReferenceType jruby ReferenceType compiler ReferenceType ir ReferenceType compiler_pass ReferenceType opts ReferenceType LocalOptimizationPass runCompilerPass StatementExpression MethodInvocation System.out Literal "################## After local optimization pass ##################" println StatementExpression MethodInvocation scope ClassCreator ReferenceType org ReferenceType jruby ReferenceType compiler ReferenceType ir ReferenceType compiler_pass ReferenceType IR_Printer runCompilerPass StatementExpression MethodInvocation scope ClassCreator ReferenceType org ReferenceType jruby ReferenceType compiler ReferenceType ir ReferenceType compiler_pass ReferenceType CFG_Builder runCompilerPass StatementExpression MethodInvocation System.out Literal "################## After dead code elimination pass ##################" println StatementExpression MethodInvocation scope ClassCreator ReferenceType org ReferenceType jruby ReferenceType compiler ReferenceType ir ReferenceType compiler_pass ReferenceType opts ReferenceType DeadCodeElimination runCompilerPass StatementExpression MethodInvocation scope ClassCreator ReferenceType org ReferenceType jruby ReferenceType compiler ReferenceType ir ReferenceType compiler_pass ReferenceType IR_Printer runCompilerPass	1
MethodDeclaration Modifier private generateMethodAnnotations FormalParameter ReferenceType Map TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object methodAnnos FormalParameter ReferenceType SkinnyMethodAdapter m FormalParameter ReferenceType List TypeArgument ReferenceType Map TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object parameterAnnos IfStatement BinaryOperation && BinaryOperation != MemberReference methodAnnos Literal null BinaryOperation != MethodInvocation methodAnnos size Literal 0 BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator entry MethodInvocation methodAnnos entrySet BlockStatement StatementExpression MethodInvocation m MethodInvocation MethodInvocation entry getKey ci Literal true MethodInvocation entry getValue visitAnnotationWithFields IfStatement BinaryOperation && BinaryOperation != MemberReference parameterAnnos Literal null BinaryOperation != MethodInvocation parameterAnnos size Literal 0 BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation parameterAnnos size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator annos MethodInvocation parameterAnnos MemberReference i get IfStatement BinaryOperation && BinaryOperation != MemberReference annos Literal null BinaryOperation != MethodInvocation annos size Literal 0 BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Map ReferenceType Entry TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator it MethodInvocation annos MethodInvocation iterator entrySet MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator entry MethodInvocation it next StatementExpression MethodInvocation m MemberReference i MethodInvocation MethodInvocation entry getKey ci Literal true MethodInvocation entry getValue visitParameterAnnotationWithFields	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MemberReference symbol	0
MethodDeclaration setComplex FormalParameter ReferenceType RubyClass complexClass StatementExpression Assignment This MemberReference complexClass MemberReference complexClass =	0
MethodDeclaration Modifier public ReferenceType Arity arity ReturnStatement MemberReference arity	0
MethodDeclaration Modifier private ReferenceType RubyClass FormalParameter ReferenceType RubyClass type IOException IfStatement MethodInvocation type isSingleton BlockStatement IfStatement BinaryOperation || MethodInvocation MemberReference type hasSingletonMethods MethodInvocation type hasVariables BlockStatement ThrowStatement MethodInvocation type MethodInvocation Literal can't be dumped" newTypeError getRuntime StatementExpression Assignment MemberReference type MethodInvocation type getSuperClass = WhileStatement MethodInvocation type isIncluded BlockStatement StatementExpression MethodInvocation Literal 'e' write StatementExpression MethodInvocation MethodInvocation RubySymbol MemberReference runtime Cast ReferenceType IncludedModuleWrapper MemberReference type newSymbol StatementExpression Assignment MemberReference type MethodInvocation type getSuperClass = ReturnStatement MemberReference type	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair optional Literal 1 ReferenceType RubyException exception FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 0 ReturnStatement This SwitchStatementCase Literal 1 IfStatement BinaryOperation == MemberReference ArraySelector Literal 0 args This BlockStatement ReturnStatement This LocalVariableDeclaration ReferenceType RubyException VariableDeclarator ret Cast ReferenceType RubyException MethodInvocation StatementExpression MethodInvocation ret MemberReference args MemberReference Block NULL_BLOCK ReturnStatement MemberReference ret SwitchStatementCase ThrowStatement MethodInvocation MethodInvocation Literal "Wrong argument count" newArgumentError getRuntime	0
MethodDeclaration Modifier public assignLastLine FormalParameter ReferenceType CompilerCallback value StatementExpression MethodInvocation methodCompiler StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation value MemberReference methodCompiler call StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RuntimeHelpers p Literal "setLastLine" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType Ruby ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject sig invokestatic	0
MethodDeclaration Modifier public ReferenceType String foo ReturnStatement Literal "foo"	0
MethodDeclaration Modifier public postExecuteUnder StatementExpression MethodInvocation popFrame StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement MethodInvocation m hashCode	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Block block StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference value MemberReference block assign	0
MethodDeclaration Modifier private static ReferenceType IRubyObject callMethodMissing FormalParameter ReferenceType CacheEntry entry FormalParameter ReferenceType CallType callType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MemberReference context MemberReference self MethodInvocation self getMetaClass MemberReference name MemberReference block call MemberReference context MemberReference self MethodInvocation getVisibility MemberReference name MemberReference callType	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "[]" Literal "slice" ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_aref19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation MemberReference runtime MethodInvocation RubyNumeric Cast ReferenceType RubyFixnum MemberReference arg fix2int op_aref19 IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyRegexp BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference context Cast ReferenceType RubyRegexp MemberReference arg subpat19 IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyString BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str Cast ReferenceType RubyString MemberReference arg ReturnStatement TernaryExpression BinaryOperation != MethodInvocation MemberReference str Literal 0 strIndex19 Literal - 1 MethodInvocation str MemberReference runtime strDup MethodInvocation runtime getNil IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyRange BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator len MethodInvocation strLength LocalVariableDeclaration BasicType int VariableDeclarator begLen Cast ReferenceType RubyRange MemberReference arg ReturnStatement TernaryExpression BinaryOperation == MemberReference begLen Literal null MethodInvocation runtime getNil MethodInvocation MemberReference runtime MemberReference ArraySelector Literal 0 begLen MemberReference ArraySelector Literal 1 begLen substr19 ReturnStatement MethodInvocation MemberReference runtime MethodInvocation RubyNumeric MemberReference arg num2int op_aref19	1
MethodDeclaration Modifier private ReferenceType IRubyObject f_muldiv FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject anum FormalParameter ReferenceType IRubyObject aden FormalParameter ReferenceType IRubyObject bnum FormalParameter ReferenceType IRubyObject bden FormalParameter BasicType boolean mult IfStatement MemberReference ! mult BlockStatement IfStatement MethodInvocation MemberReference context MemberReference bnum f_negative_p BlockStatement StatementExpression Assignment MemberReference anum MethodInvocation MemberReference context MemberReference anum f_negate = StatementExpression Assignment MemberReference bnum MethodInvocation MemberReference context MemberReference bnum f_negate = LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MemberReference bnum StatementExpression Assignment MemberReference bnum MemberReference bden = StatementExpression Assignment MemberReference bden MemberReference tmp = LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator num VariableDeclarator den IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference anum ReferenceType RubyFixnum BinaryOperation instanceof MemberReference aden ReferenceType RubyFixnum BinaryOperation instanceof MemberReference bnum ReferenceType RubyFixnum BinaryOperation instanceof MemberReference bden ReferenceType RubyFixnum BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator an Cast ReferenceType RubyFixnum MemberReference anum LocalVariableDeclaration BasicType long VariableDeclarator ad Cast ReferenceType RubyFixnum MemberReference aden LocalVariableDeclaration BasicType long VariableDeclarator bn Cast ReferenceType RubyFixnum MemberReference bnum LocalVariableDeclaration BasicType long VariableDeclarator bd Cast ReferenceType RubyFixnum MemberReference bden LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation MemberReference an MemberReference bd i_gcd LocalVariableDeclaration BasicType long VariableDeclarator g2 MethodInvocation MemberReference ad MemberReference bn i_gcd StatementExpression Assignment MemberReference num MethodInvocation MemberReference context BinaryOperation / MemberReference an MemberReference BinaryOperation / MemberReference bn MemberReference g2 f_imul = StatementExpression Assignment MemberReference den MethodInvocation MemberReference context BinaryOperation / MemberReference ad MemberReference g2 BinaryOperation / MemberReference bd MemberReference f_imul = BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator MethodInvocation MemberReference context MemberReference anum MemberReference bden f_gcd LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator g2 MethodInvocation MemberReference context MemberReference aden MemberReference bnum f_gcd StatementExpression Assignment MemberReference num MethodInvocation MemberReference context MethodInvocation MemberReference context MemberReference anum MemberReference f_idiv MethodInvocation MemberReference context MemberReference bnum MemberReference g2 f_idiv f_mul = StatementExpression Assignment MemberReference den MethodInvocation MemberReference context MethodInvocation MemberReference context MemberReference aden MemberReference g2 f_idiv MethodInvocation MemberReference context MemberReference bden MemberReference f_idiv f_mul = ReturnStatement MethodInvocation RubyRational MemberReference context MethodInvocation getMetaClass MemberReference num MemberReference den newRationalNoReduce	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MethodInvocation type getNativeAlignment newFixnum getRuntime	0
MethodDeclaration Modifier public beginMethod FormalParameter ReferenceType CompilerCallback argsCallback FormalParameter ReferenceType scope IfStatement BinaryOperation > MethodInvocation scope getNumberOfVariables Literal 0 BlockStatement StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation methodCompiler Literal "getCurrentScope" MethodInvocation ClassReference ReferenceType DynamicScope sig invokeThreadContext StatementExpression MethodInvocation method MethodInvocation methodCompiler getDynamicScopeIndex astore IfStatement BinaryOperation > MethodInvocation scope getNumberOfVariables Literal 4 BlockStatement StatementExpression MethodInvocation method MethodInvocation methodCompiler getDynamicScopeIndex aload StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType DynamicScope p Literal "getValues" MethodInvocation ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation method MethodInvocation methodCompiler getVarsArrayIndex astore StatementExpression MethodInvocation method MethodInvocation methodCompiler getVarsArrayIndex aload StatementExpression MethodInvocation methodCompiler StatementExpression MethodInvocation methodCompiler Literal "fillNil" MethodInvocation VoidClassReference ClassReference ReferenceType IRubyObject ClassReference ReferenceType Ruby sig invokeUtilityMethod IfStatement BinaryOperation != MemberReference argsCallback Literal null BlockStatement StatementExpression MethodInvocation argsCallback MemberReference methodCompiler call	1
MethodDeclaration Modifier private final MRICheckResize IfStatement BinaryOperation > BinaryOperation / MemberReference size MemberReference table length MemberReference ST_DEFAULT_MAX_DENSITY BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator forSize BinaryOperation + MemberReference table length Literal 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator newCapacity MemberReference MIN_CAPA BinaryOperation < MemberReference i MemberReference MRI_PRIMES length MemberReference ++ i Assignment MemberReference newCapacity Literal 1 <<= BlockStatement IfStatement BinaryOperation > MemberReference newCapacity MemberReference forSize BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i MRI_PRIMES resize ReturnStatement ReturnStatement	1
MethodDeclaration Modifier public FormalParameter ReferenceType String msg StatementExpression MethodInvocation StatementExpression MethodInvocation method MemberReference msg ldc StatementExpression MethodInvocation Literal "newTypeError" MethodInvocation ClassReference ReferenceType RaiseException MethodInvocation ClassReference ReferenceType String params sig invokeRuby StatementExpression MethodInvocation method athrow	0
MethodDeclaration Modifier public final putInt16 FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType int value StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 0 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 8 = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 1 buffer Cast BasicType byte BinaryOperation >> MemberReference value Literal 0 =	0
MethodDeclaration Modifier public ReferenceType Object case242_line940 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition ClassCreator ReferenceType HashNode MethodInvocation getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals newArrayNode = StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference yyVal Cast ReferenceType BlockPassNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_blk_pass = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case50_line486 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support pushBlockScope ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator defaultExternal MethodInvocation MemberReference runtime MethodInvocation runtime getDefaultExternalEncoding convertEncodingToRubyEncoding IfStatement MethodInvocation defaultExternal isNil BlockStatement LocalVariableDeclaration ReferenceType ByteList VariableDeclarator encodingName MethodInvocation ByteList MethodInvocation Charset MethodInvocation name create LocalVariableDeclaration ReferenceType Encoding VariableDeclarator encoding MethodInvocation runtime MethodInvocation MemberReference encodingName loadEncoding getEncodingService StatementExpression MethodInvocation runtime MemberReference encoding setDefaultExternalEncoding StatementExpression Assignment MemberReference defaultExternal MethodInvocation MemberReference runtime MemberReference encoding convertEncodingToRubyEncoding = ReturnStatement MemberReference defaultExternal	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject get ReturnStatement MethodInvocation runtime getDebug	0
MethodDeclaration Modifier public final ReferenceType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String descriptor ReturnStatement MethodInvocation runtimeCache This MemberReference context Literal 3 MemberReference descriptor getBlockBody19	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference runtime MemberReference currentThread MemberReference exception	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject annotations ReturnStatement MethodInvocation Java MethodInvocation getRuntime MethodInvocation MethodInvocation getAnnotations javaClass getInstance	0
MethodDeclaration Modifier public final BasicType short getShort FormalParameter BasicType long offset ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public static ReferenceType IRubyObject f_to_f FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x ReturnStatement MethodInvocation x MemberReference context Literal "to_f" callMethod	1
MethodDeclaration Modifier public FormalParameter ReferenceType String name FormalParameter ReferenceType Callback method LocalVariableDeclaration ReferenceType Visibility VariableDeclarator visibility TernaryExpression MethodInvocation name Literal "initialize" equals MemberReference PRIVATE MemberReference PUBLIC StatementExpression MethodInvocation MemberReference name ClassCreator ReferenceType This MemberReference method MemberReference visibility addMethod	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name ReturnStatement Cast ReferenceType RubyStruct MemberReference self	0
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object other ReturnStatement BinaryOperation == This MemberReference other	0
MethodDeclaration Modifier private ReferenceType StackTraceElement javaTraceFromRubyTrace FormalParameter ReferenceType ThreadContext ReferenceType RubyStackTraceElement trace LocalVariableDeclaration ReferenceType StackTraceElement VariableDeclarator ArrayCreator ReferenceType StackTraceElement MemberReference trace length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i MemberReference ArraySelector MemberReference i MethodInvocation getElement trace = ReturnStatement MemberReference	0
MethodDeclaration Modifier public createNewRange FormalParameter ReferenceType CompilerCallback beginEndCallback FormalParameter BasicType boolean isExclusive StatementExpression MethodInvocation StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation beginEndCallback This call IfStatement MemberReference isExclusive BlockStatement StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyRange p Literal MethodInvocation ClassReference ReferenceType RubyRange MethodInvocation ClassReference ReferenceType Ruby ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject params sig invokestatic BlockStatement StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RubyRange p Literal MethodInvocation ClassReference ReferenceType RubyRange MethodInvocation ClassReference ReferenceType Ruby ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject params sig invokestatic	0
MethodDeclaration Modifier public static BasicType boolean f_zero_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject x IfStatement BinaryOperation instanceof MemberReference x ReferenceType RubyFixnum ReturnStatement BinaryOperation == Cast ReferenceType RubyFixnum MemberReference x Literal 0 ReturnStatement MethodInvocation x MethodInvocation isTrue MemberReference context Literal "==" MethodInvocation RubyFixnum MethodInvocation context getRuntime zero callMethod	1
MethodDeclaration Modifier public final BasicType int intValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation Float Cast BasicType float MethodInvocation RubyNumeric MemberReference obj num2dbl	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "empty?" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject empty_p FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MethodInvocation MemberReference context empty_p MethodInvocation context getRuntime newShared	1
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object obj IfStatement BinaryOperation == MemberReference obj Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation != MethodInvocation getClass MethodInvocation obj getClass BlockStatement ReturnStatement Literal false ReturnStatement This MemberReference MethodInvocation Cast ReferenceType Variable MemberReference obj equals	0
MethodDeclaration Modifier public checkSafeString FormalParameter ReferenceType IRubyObject object IfStatement BinaryOperation && BinaryOperation > MethodInvocation getSafeLevel Literal 0 MethodInvocation object isTaint BlockStatement LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator tc MethodInvocation getCurrentContext IfStatement BinaryOperation != MethodInvocation tc getFrameName Literal null BlockStatement ThrowStatement MethodInvocation BinaryOperation + Literal "Insecure operation - " MethodInvocation tc getFrameName newSecurityError ThrowStatement MethodInvocation Literal "Insecure operation: -r" newSecurityError StatementExpression MethodInvocation Literal 4 secure IfStatement BinaryOperation instanceof MemberReference object ReferenceType RubyString BlockStatement ThrowStatement MethodInvocation BinaryOperation + BinaryOperation + Literal "wrong argument type " MethodInvocation object MethodInvocation getName getMetaClass Literal " (expected newTypeError	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject peeraddr FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType InetSocketAddress VariableDeclarator address MethodInvocation getRemoteSocket IfStatement BinaryOperation == MemberReference address Literal null BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "Not socket or not getRuntime ReturnStatement MethodInvocation MemberReference context MemberReference address addrFor	0
MethodDeclaration Modifier public registerDescriptor FormalParameter ReferenceType ChannelDescriptor descriptor StatementExpression MethodInvocation MemberReference descriptor Literal false registerDescriptor	0
MethodDeclaration Modifier private BasicType int yylex2 IOException LocalVariableDeclaration BasicType int VariableDeclarator token MethodInvocation yylex2 StatementExpression MethodInvocation MemberReference token printToken ReturnStatement MemberReference token	1
MethodDeclaration Modifier public ReferenceType RaiseException newIOErrorFromException FormalParameter ReferenceType IOException ioe IfStatement BinaryOperation != MethodInvocation ioe getMessage Literal null BlockStatement IfStatement MethodInvocation ioe MethodInvocation Literal "Broken pipe" equals getMessage BlockStatement ThrowStatement MethodInvocation newErrnoEPIPEError IfStatement MethodInvocation ioe MethodInvocation Literal "Connection reset by peer" equals getMessage BlockStatement ThrowStatement MethodInvocation newErrnoECONNRESETError ReturnStatement MethodInvocation MethodInvocation getIOError MethodInvocation ioe getMessage newRaiseException BlockStatement ReturnStatement MethodInvocation MethodInvocation getIOError Literal "IO Error" newRaiseException	1
MethodDeclaration Modifier public BasicType boolean isDebug ReturnStatement MemberReference isDebug	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock getReceiverNode ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference receiver MethodInvocation arg1 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock MethodInvocation arg2 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock MethodInvocation arg3 MemberReference runtime MemberReference context MemberReference self MemberReference aBlock MethodInvocation RuntimeHelpers MemberReference runtime MemberReference context MemberReference self MemberReference MemberReference aBlock getBlock call	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair backtrace Literal true ReferenceType IRubyObject at FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject indexObj LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator lengthF MethodInvocation MethodInvocation length getJavaArray LocalVariableDeclaration ReferenceType RubyInteger VariableDeclarator indexI MethodInvocation indexObj convertToInteger IfStatement BinaryOperation < MethodInvocation indexI getLongValue Literal 0 BlockStatement StatementExpression Assignment MemberReference indexI MethodInvocation RubyFixnum MethodInvocation context getRuntime BinaryOperation + MethodInvocation indexI getLongValue MethodInvocation lengthF getLongValue newFixnum = LocalVariableDeclaration BasicType long VariableDeclarator index MethodInvocation indexI getLongValue IfStatement BinaryOperation && BinaryOperation >= MemberReference index Literal 0 BinaryOperation < MemberReference index MethodInvocation lengthF getLongValue BlockStatement ReturnStatement MethodInvocation MethodInvocation Cast BasicType int MethodInvocation indexI getLongValue getJavaArray BlockStatement ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator method ClassReference MethodInvocation Literal "dummy" ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType String getMethod ReferenceType HandleFactory LocalVariableDeclaration ReferenceType Handle VariableDeclarator handle MethodInvocation Literal null MemberReference method createHandle LocalVariableDeclaration ReferenceType String VariableDeclarator prop1 Literal "java.class.path" LocalVariableDeclaration ReferenceType String VariableDeclarator prop2 Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator tmp LocalVariableDeclaration ReferenceType Object VariableDeclarator result ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 10 MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator time StatementExpression MethodInvocation System.out Literal invocation: " print StatementExpression Assignment MemberReference time MethodInvocation System currentTimeMillis = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j Literal 50000000 MemberReference ++ j BlockStatement StatementExpression Assignment MemberReference result MethodInvocation handle Literal null MemberReference prop1 invoke = IfStatement BinaryOperation == BinaryOperation % MemberReference j Literal 10000000 Literal 0 BlockStatement StatementExpression MethodInvocation System.out MemberReference result println StatementExpression MethodInvocation handle Literal null MemberReference prop2 invoke StatementExpression Assignment MemberReference tmp MemberReference prop1 = StatementExpression Assignment MemberReference prop1 MemberReference prop2 = StatementExpression Assignment MemberReference prop2 MemberReference tmp = StatementExpression MethodInvocation System.out BinaryOperation - MethodInvocation System currentTimeMillis MemberReference time println StatementExpression MethodInvocation System.out Literal "reflected invocation: " print StatementExpression Assignment MemberReference time MethodInvocation System currentTimeMillis = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j Literal 50000000 MemberReference ++ j BlockStatement StatementExpression Assignment MemberReference result MethodInvocation method Literal null MemberReference prop1 invoke = IfStatement BinaryOperation == BinaryOperation % MemberReference j Literal 10000000 Literal 0 BlockStatement StatementExpression MethodInvocation System.out MemberReference result println StatementExpression MethodInvocation method Literal null MemberReference prop2 invoke StatementExpression Assignment MemberReference tmp MemberReference prop1 = StatementExpression Assignment MemberReference prop1 MemberReference prop2 = StatementExpression Assignment MemberReference prop2 MemberReference tmp = IfStatement BinaryOperation == BinaryOperation % MemberReference j Literal 10000000 Literal 0 BlockStatement StatementExpression MethodInvocation System.out MemberReference prop2 println StatementExpression MethodInvocation System.out BinaryOperation - MethodInvocation System currentTimeMillis MemberReference time println StatementExpression MethodInvocation System.out Literal "method invocation: " print StatementExpression Assignment MemberReference time MethodInvocation System currentTimeMillis = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator j Literal 0 BinaryOperation < MemberReference j Literal 50000000 MemberReference ++ j BlockStatement StatementExpression Assignment MemberReference result MethodInvocation MemberReference prop1 dummy = IfStatement BinaryOperation == BinaryOperation % MemberReference j Literal 10000000 Literal 0 BlockStatement StatementExpression MethodInvocation System.out MemberReference result println StatementExpression MethodInvocation MemberReference prop2 dummy StatementExpression Assignment MemberReference tmp MemberReference prop1 = StatementExpression Assignment MemberReference prop1 MemberReference prop2 = StatementExpression Assignment MemberReference prop2 MemberReference tmp = IfStatement BinaryOperation == BinaryOperation % MemberReference j Literal 10000000 Literal 0 BlockStatement StatementExpression MethodInvocation System.out MemberReference prop2 println StatementExpression MethodInvocation System.out BinaryOperation - MethodInvocation System currentTimeMillis MemberReference time println CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace StatementExpression MethodInvocation System Literal 1 exit	1
MethodDeclaration Modifier protected BasicType int internalAdler ReturnStatement MethodInvocation flater getAdler	0
MethodDeclaration Modifier public ReferenceType DynamicMethod getPrivateMethodMissing ReturnStatement MemberReference privateMethodMissing	0
MethodDeclaration Modifier public final ReferenceType DynamicScope getEvalScope IfStatement BinaryOperation == MemberReference evalScope Literal null BlockStatement LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator parent MethodInvocation IfStatement BinaryOperation && BinaryOperation != MemberReference parent Literal null BinaryOperation == MethodInvocation parent getEvalScope This BlockStatement StatementExpression Assignment MemberReference evalScope This = BlockStatement StatementExpression Assignment MemberReference evalScope ClassCreator ReferenceType ClassCreator ReferenceType EvalStaticScope MethodInvocation getStaticScope This = ReturnStatement MemberReference evalScope	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name StatementExpression MethodInvocation handle TernaryExpression MemberReference isStatic Literal null Cast ReferenceType JavaObjectWrapper MemberReference self invoke ReturnStatement MemberReference self	0
MethodDeclaration Modifier public static ReferenceType IRubyObject euid_set FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject arg StatementExpression MethodInvocation runtime MethodInvocation Cast BasicType int MethodInvocation arg MethodInvocation getLongValue convertToInteger seteuid getPosix ReturnStatement MethodInvocation RubyFixnum MemberReference runtime zero	1
MethodDeclaration Modifier public setElseNode FormalParameter ReferenceType Node elseNode StatementExpression Assignment This MemberReference elseNode MemberReference elseNode =	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference self MemberReference name MemberReference block Literal 0 pre ReturnStatement MethodInvocation jitCompiledScript MemberReference context MemberReference self MemberReference block __file__ CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter JumpException.RedoJump rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier public ReferenceType RubyModule defineModuleUnder FormalParameter ReferenceType String name FormalParameter ReferenceType RubyModule parent LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator moduleObj MethodInvocation parent MemberReference name getConstantAt LocalVariableDeclaration BasicType boolean VariableDeclarator parentIsObject BinaryOperation == MemberReference parent MemberReference objectClass IfStatement BinaryOperation != MemberReference moduleObj Literal null BlockStatement IfStatement MethodInvocation moduleObj isModule ReturnStatement Cast ReferenceType RubyModule MemberReference moduleObj IfStatement MemberReference parentIsObject BlockStatement ThrowStatement MethodInvocation BinaryOperation + MethodInvocation moduleObj MethodInvocation getName getMetaClass Literal " is not a module" newTypeError BlockStatement ThrowStatement MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation parent getName Literal "::" MethodInvocation moduleObj MethodInvocation getName getMetaClass Literal " is not a module" newTypeError ReturnStatement MethodInvocation RubyModule This MemberReference name MemberReference parent MemberReference ! parentIsObject newModule	1
MethodDeclaration Modifier public static ReferenceType String getRubyCasedName FormalParameter ReferenceType String javaCasedName LocalVariableDeclaration ReferenceType Matcher VariableDeclarator m MethodInvocation CAMEL_CASE_SPLITTER MemberReference javaCasedName matcher ReturnStatement MethodInvocation m MethodInvocation toLowerCase Literal "$1_$2" replaceAll	1
MethodDeclaration Modifier public ReferenceType Node appendToBlock FormalParameter ReferenceType Node head FormalParameter ReferenceType Node tail IfStatement BinaryOperation == MemberReference tail Literal null ReturnStatement MemberReference head IfStatement BinaryOperation == MemberReference head Literal null ReturnStatement MemberReference tail IfStatement MethodInvocation ! configuration BlockStatement StatementExpression Assignment MemberReference head MethodInvocation MemberReference head compactNewlines = IfStatement BinaryOperation instanceof MemberReference head ReferenceType BlockNode BlockStatement StatementExpression Assignment MemberReference head ClassCreator MethodInvocation MemberReference head add ReferenceType BlockNode MethodInvocation head getPosition = IfStatement BinaryOperation && MethodInvocation warnings isVerbose MethodInvocation Cast ReferenceType ListNode MemberReference head isBreakStatement BlockStatement StatementExpression MethodInvocation warnings MemberReference ID STATEMENT_NOT_REACHED MethodInvocation tail getPosition Literal "Statement not reached." warning StatementExpression Cast ReferenceType ListNode MemberReference head ReturnStatement MemberReference head	1
MethodDeclaration Modifier public setRequiredArgs FormalParameter BasicType int requiredArgs StatementExpression Assignment This MemberReference requiredArgs MemberReference requiredArgs =	0
MethodDeclaration Modifier public arrayload StatementExpression MethodInvocation MethodInvocation MemberReference AALOAD visitInsn getMethodVisitor	0
MethodDeclaration Modifier public compileNthRef FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType NthRefNode VariableDeclarator nthRefNode Cast ReferenceType NthRefNode MemberReference node IfStatement MemberReference RubyInstanceConfig PEEPHOLE_OPTZ BlockStatement IfStatement MemberReference expr StatementExpression MethodInvocation context MethodInvocation nthRefNode getMatchNumber nthRef BlockStatement StatementExpression MethodInvocation context MethodInvocation nthRefNode getMatchNumber nthRef IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType RaiseException newTypeError FormalParameter ReferenceType String message ReturnStatement MethodInvocation MethodInvocation MemberReference message newRaiseException	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ReferenceType IRubyObject each19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block MethodInvocation MethodInvocation context getRuntime This Literal enumeratorize	0
MethodDeclaration Modifier private FormalParameter ReferenceType MultipleAsgn19Node multipleAsgn19Node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr StatementExpression MethodInvocation MethodInvocation multipleAsgn19Node getValueNode MemberReference context Literal true compile StatementExpression MethodInvocation MemberReference multipleAsgn19Node MemberReference context MemberReference expr compileMultipleAsgn19Assignment	0
MethodDeclaration Modifier public if_icmpne FormalParameter ReferenceType Label arg0 StatementExpression MethodInvocation MethodInvocation MemberReference IF_ICMPNE MemberReference arg0 visitJumpInsn getMethodVisitor	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "exit" ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType IRubyObject s_exit FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyThread VariableDeclarator rubyThread MethodInvocation receiver MethodInvocation getThreadService MethodInvocation getCurrentContext MethodInvocation getThread getRuntime SynchronizedStatement MemberReference rubyThread StatementExpression Assignment MemberReference rubyThread status MemberReference Status ABORTING = StatementExpression Assignment MemberReference rubyThread mail Literal null = StatementExpression MethodInvocation receiver MethodInvocation getThreadService MethodInvocation Literal false setCritical getRuntime ThrowStatement ClassCreator ReferenceType ThreadKill	1
MethodDeclaration Modifier public ReferenceType Object case100_line672 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_colon2 = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final BasicType double getDouble FormalParameter BasicType long offset StatementExpression MethodInvocation MemberReference offset Literal 8 checkBounds ReturnStatement MethodInvocation IO BinaryOperation + MemberReference address MemberReference offset getDouble	0
MethodDeclaration Modifier private ReferenceType IRubyObject invokeDirectSuperWithExceptionHandling FormalParameter ReferenceType Method method FormalParameter ReferenceType Object javaInvokee FormalParameter ReferenceType Object arguments TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator result MethodInvocation method MemberReference javaInvokee MemberReference arguments invoke ReturnStatement MethodInvocation MemberReference result convertReturn CatchClause CatchClauseParameter IllegalArgumentException iae ReturnStatement MethodInvocation MemberReference method MemberReference iae MemberReference arguments handlelIllegalArgumentEx CatchClause CatchClauseParameter IllegalAccessException iae ReturnStatement MethodInvocation MemberReference method MemberReference iae handleIllegalAccessEx CatchClause CatchClauseParameter InvocationTargetException ite ReturnStatement MethodInvocation MemberReference ite MemberReference method handleInvocationTargetEx CatchClause CatchClauseParameter Throwable t ReturnStatement MethodInvocation MemberReference t MemberReference method handleThrowable	1
MethodDeclaration Modifier public final BasicType long getLong FormalParameter BasicType long offset ReturnStatement MethodInvocation IO BinaryOperation + MemberReference address MemberReference offset getLong	0
MethodDeclaration Modifier protected Annotation Override setUp Exception StatementExpression Assignment MemberReference savedMode MethodInvocation System Literal "jruby.compile.mode" getProperty = StatementExpression Assignment MemberReference savedThreshold MethodInvocation System Literal "jruby.jit.threshold" getProperty = StatementExpression MethodInvocation System Literal "jruby.compile.mode" Literal setProperty StatementExpression MethodInvocation System Literal "jruby.jit.threshold" Literal "0" setProperty LocalVariableDeclaration ReferenceType VariableDeclarator classCache MethodInvocation MethodInvocation Thread MethodInvocation getContextClassLoader currentThread createClassCache StatementExpression Assignment MemberReference MethodInvocation ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MemberReference classCache = StatementExpression Assignment MemberReference MethodInvocation ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MemberReference classCache = StatementExpression Assignment MemberReference evaler MethodInvocation newRuntimeAdapter = StatementExpression SuperMethodInvocation setUp	0
MethodDeclaration Modifier public ReferenceType BigInteger getBigIntegerValue ReturnStatement MemberReference BigInteger ZERO	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 StatementExpression Assignment MemberReference args MethodInvocation MemberReference context MemberReference args MemberReference type prepareArgumentsForCall = ReturnStatement MethodInvocation MemberReference context MethodInvocation RubyArray MethodInvocation context getRuntime MemberReference args newArrayNoCopy Literal null Literal null Literal true MemberReference binding MemberReference type yield	1
MethodDeclaration Modifier public ReferenceType IRubyObject yield FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator self MethodInvocation MemberReference binding prepareSelf LocalVariableDeclaration ReferenceType Visibility VariableDeclarator oldVis MethodInvocation binding MethodInvocation getVisibility getFrame LocalVariableDeclaration ReferenceType Frame VariableDeclarator lastFrame MethodInvocation MemberReference context Literal null MemberReference binding pre TryStatement IfStatement MemberReference ! noargblock StatementExpression MethodInvocation assigner MethodInvocation context getRuntime MemberReference context MemberReference self MemberReference Block NULL_BLOCK assign ReturnStatement MethodInvocation MemberReference context MemberReference self evalBlockBody CatchClause CatchClauseParameter JumpException.NextJump nj ReturnStatement MethodInvocation MemberReference context MemberReference nj MemberReference type handleNextJump StatementExpression MethodInvocation MemberReference context MemberReference binding MemberReference oldVis MemberReference lastFrame post	1
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation opElementAsgnNode getValueNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public testNil StatementExpression MethodInvocation MethodInvocation ! rubyObject isNil assertTrue	1
MethodDeclaration Modifier public ReferenceType MemoryIO slice FormalParameter BasicType long offset ReturnStatement This	0
MethodDeclaration Modifier private static BasicType boolean shouldRunInShell FormalParameter ReferenceType String shell FormalParameter ReferenceType String args ReturnStatement BinaryOperation || MemberReference ! Platform IS_WINDOWS BinaryOperation && BinaryOperation && BinaryOperation != MemberReference shell Literal null BinaryOperation > MemberReference args length Literal 1 ClassCreator ! MethodInvocation exists ReferenceType File MemberReference ArraySelector Literal 0 args	1
MethodDeclaration Modifier public synchronized reify FormalParameter ReferenceType String classDumpDir LocalVariableDeclaration ReferenceType Class VariableDeclarator reifiedParent ClassReference ReferenceType RubyObject LocalVariableDeclaration ReferenceType String VariableDeclarator javaName BinaryOperation + Literal "ruby." MethodInvocation getBaseName LocalVariableDeclaration ReferenceType String VariableDeclarator javaPath BinaryOperation + Literal "ruby/" MethodInvocation getBaseName LocalVariableDeclaration ReferenceType JRubyClassLoader VariableDeclarator parentCL MethodInvocation runtime getJRubyClassLoader IfStatement BinaryOperation != MemberReference superClass reifiedClass Literal null BlockStatement StatementExpression Assignment MemberReference reifiedParent MemberReference superClass reifiedClass = LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw ClassCreator ReferenceType ClassWriter BinaryOperation | MemberReference ClassWriter COMPUTE_FRAMES MemberReference ClassWriter COMPUTE_MAXS StatementExpression MethodInvocation cw MemberReference RubyInstanceConfig JAVA_VERSION BinaryOperation + MemberReference ACC_PUBLIC MemberReference ACC_SUPER MemberReference javaPath Literal null MethodInvocation MemberReference reifiedParent p Literal null visit IfStatement BinaryOperation && BinaryOperation != MemberReference classAnnotations Literal null BinaryOperation != MethodInvocation classAnnotations size Literal 0 BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator entry MethodInvocation classAnnotations entrySet BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator annoType MethodInvocation entry getKey LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator fields MethodInvocation entry getValue LocalVariableDeclaration ReferenceType AnnotationVisitor VariableDeclarator av MethodInvocation cw MethodInvocation MemberReference annoType ci Literal true StatementExpression MethodInvocation CodegenUtils MemberReference av MethodInvocation entry getValue visitAnnotationFields StatementExpression MethodInvocation av visitEnd StatementExpression MethodInvocation cw BinaryOperation | MemberReference ACC_STATIC MemberReference ACC_PRIVATE Literal "ruby" MethodInvocation ClassReference ReferenceType Ruby ci Literal null Literal null visitField StatementExpression MethodInvocation cw BinaryOperation | MemberReference ACC_STATIC MemberReference ACC_PRIVATE Literal "rubyClass" MethodInvocation ClassReference ReferenceType RubyClass ci Literal null Literal null visitField LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator m ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cw BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_STATIC Literal "clinit" MethodInvocation VoidClassReference ClassReference ReferenceType Ruby ClassReference ReferenceType RubyClass sig Literal null Literal null visitMethod StatementExpression MethodInvocation m start StatementExpression MethodInvocation m Literal 0 aload StatementExpression MethodInvocation m MemberReference javaPath Literal "ruby" MethodInvocation ClassReference ReferenceType Ruby ci putstatic StatementExpression MethodInvocation m Literal 1 aload StatementExpression MethodInvocation m MemberReference javaPath Literal "rubyClass" MethodInvocation ClassReference ReferenceType RubyClass ci putstatic StatementExpression MethodInvocation m voidreturn StatementExpression MethodInvocation m end LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation cw MemberReference ACC_PUBLIC Literal "<init>" MethodInvocation VoidClassReference ClassReference ReferenceType Ruby ClassReference ReferenceType RubyClass sig Literal null Literal null visitMethod StatementExpression Assignment MemberReference m ClassCreator ReferenceType SkinnyMethodAdapter MemberReference mv = StatementExpression MethodInvocation m Literal 0 aload StatementExpression MethodInvocation m Literal 1 aload StatementExpression MethodInvocation m Literal 2 aload StatementExpression MethodInvocation m MethodInvocation MemberReference reifiedParent p Literal "<init>" MethodInvocation VoidClassReference ClassReference ReferenceType Ruby ClassReference ReferenceType RubyClass sig invokespecial StatementExpression MethodInvocation m voidreturn StatementExpression MethodInvocation m end StatementExpression Assignment MemberReference mv MethodInvocation cw MemberReference ACC_PUBLIC Literal "<init>" MethodInvocation CodegenUtils VoidClassReference sig Literal null Literal null visitMethod = StatementExpression Assignment MemberReference m ClassCreator ReferenceType SkinnyMethodAdapter MemberReference mv = StatementExpression MethodInvocation m Literal 0 aload StatementExpression MethodInvocation m MemberReference javaPath Literal "ruby" MethodInvocation ClassReference ReferenceType Ruby ci getstatic StatementExpression MethodInvocation m MemberReference javaPath Literal "rubyClass" MethodInvocation ClassReference ReferenceType RubyClass ci getstatic StatementExpression MethodInvocation m MethodInvocation MemberReference reifiedParent p Literal "<init>" MethodInvocation VoidClassReference ClassReference ReferenceType Ruby ClassReference ReferenceType RubyClass sig invokespecial StatementExpression MethodInvocation m voidreturn StatementExpression MethodInvocation m end ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType DynamicMethod VariableDeclarator methodEntry MethodInvocation MethodInvocation entrySet getMethods BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator methodName MethodInvocation methodEntry getKey LocalVariableDeclaration ReferenceType String VariableDeclarator javaMethodName MethodInvocation JavaNameMangler MemberReference methodName mangleStringForCleanJavaIdentifier LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator methodAnnos MethodInvocation MethodInvocation MemberReference methodName get getMethodAnnotations LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Map TypeArgument ReferenceType Class TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator parameterAnnos MethodInvocation MethodInvocation MemberReference methodName get getParameterAnnotations LocalVariableDeclaration ReferenceType Class VariableDeclarator methodSignature MethodInvocation MethodInvocation MemberReference methodName get getMethodSignatures IfStatement BinaryOperation == MemberReference methodSignature Literal null BlockStatement SwitchStatement MethodInvocation methodEntry MethodInvocation getArity MethodInvocation getValue getValue SwitchStatementCase Literal 0 StatementExpression Assignment MemberReference mv MethodInvocation cw BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_VARARGS MemberReference javaMethodName MethodInvocation ClassReference ReferenceType IRubyObject sig Literal null Literal null visitMethod = StatementExpression Assignment MemberReference m ClassCreator ReferenceType SkinnyMethodAdapter MemberReference mv = StatementExpression MethodInvocation MemberReference methodAnnos MemberReference m MemberReference parameterAnnos generateMethodAnnotations StatementExpression MethodInvocation m Literal 0 aload StatementExpression MethodInvocation m MemberReference methodName ldc StatementExpression MethodInvocation m MemberReference javaPath Literal "callMethod" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType String sig invokevirtual BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference mv MethodInvocation cw BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_VARARGS MemberReference javaMethodName MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig Literal null Literal null visitMethod = StatementExpression Assignment MemberReference m ClassCreator ReferenceType SkinnyMethodAdapter MemberReference mv = StatementExpression MethodInvocation MemberReference methodAnnos MemberReference m MemberReference parameterAnnos generateMethodAnnotations StatementExpression MethodInvocation m Literal 0 aload StatementExpression MethodInvocation m MemberReference methodName ldc StatementExpression MethodInvocation m Literal 1 aload StatementExpression MethodInvocation m MemberReference javaPath Literal "callMethod" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType String ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation m areturn BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator params ArrayCreator ReferenceType Class BinaryOperation - MemberReference methodSignature length Literal 1 StatementExpression MethodInvocation System MemberReference methodSignature Literal 1 MemberReference params Literal 0 MemberReference params length arraycopy LocalVariableDeclaration BasicType int VariableDeclarator baseIndex Literal 1 ForStatement EnhancedForControl VariableDeclaration ReferenceType Class VariableDeclarator paramType MemberReference params BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference paramType ClassReference BasicType double BinaryOperation == MemberReference paramType ClassReference BasicType long BlockStatement StatementExpression Assignment MemberReference baseIndex Literal 2 += BlockStatement StatementExpression Assignment MemberReference baseIndex Literal 1 += LocalVariableDeclaration BasicType int VariableDeclarator rubyIndex MemberReference baseIndex StatementExpression Assignment MemberReference mv MethodInvocation cw BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_VARARGS MemberReference javaMethodName MethodInvocation MemberReference ArraySelector Literal 0 methodSignature MemberReference params sig Literal null Literal null visitMethod = StatementExpression Assignment MemberReference m ClassCreator ReferenceType SkinnyMethodAdapter MemberReference mv = StatementExpression MethodInvocation MemberReference methodAnnos MemberReference m MemberReference parameterAnnos generateMethodAnnotations StatementExpression MethodInvocation m MemberReference javaPath Literal "ruby" MethodInvocation ClassReference ReferenceType Ruby ci getstatic StatementExpression MethodInvocation m MemberReference rubyIndex astore StatementExpression MethodInvocation m Literal 0 aload StatementExpression MethodInvocation m MemberReference methodName ldc StatementExpression MethodInvocation MiniJava MemberReference m MemberReference params MemberReference rubyIndex coerceArgumentsToRuby StatementExpression MethodInvocation m MemberReference javaPath Literal "callMethod" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType String ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation MiniJava MemberReference m MemberReference ArraySelector Literal 0 methodSignature coerceResultAndReturn StatementExpression MethodInvocation m end StatementExpression MethodInvocation cw visitEnd LocalVariableDeclaration BasicType byte VariableDeclarator classBytes MethodInvocation cw toByteArray StatementExpression MethodInvocation MemberReference classDumpDir MemberReference javaPath MemberReference classBytes dumpReifiedClass LocalVariableDeclaration ReferenceType Class VariableDeclarator result MethodInvocation parentCL MemberReference javaName MemberReference classBytes defineClass TryStatement LocalVariableDeclaration ReferenceType java ReferenceType lang ReferenceType reflect ReferenceType Method VariableDeclarator clinit MethodInvocation result Literal "clinit" ClassReference ReferenceType Ruby ClassReference ReferenceType RubyClass getDeclaredMethod StatementExpression MethodInvocation clinit Literal null MemberReference runtime This invoke CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e StatementExpression MethodInvocation MemberReference result StatementExpression Assignment MemberReference reifiedClass MemberReference result =	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "untrace_var" ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject untrace_var FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block IfStatement BinaryOperation == MemberReference args length Literal 0 ThrowStatement MethodInvocation context MethodInvocation Literal 0 Literal 1 newArgumentError getRuntime LocalVariableDeclaration ReferenceType String VariableDeclarator var TernaryExpression BinaryOperation >= MemberReference args length Literal 1 MemberReference ArraySelector Literal 0 MethodInvocation toString args Literal null IfStatement BinaryOperation != MethodInvocation var Literal 0 charAt Literal '$' ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime IfStatement BinaryOperation > MemberReference args length Literal 1 BlockStatement LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType IRubyObject VariableDeclarator success ClassCreator ReferenceType ArrayList TypeArgument ReferenceType IRubyObject ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation < MemberReference i MemberReference args length MemberReference ++ i BlockStatement IfStatement MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation MemberReference var MemberReference ArraySelector MemberReference i args untraceVar getRuntime BlockStatement StatementExpression MethodInvocation success MemberReference ArraySelector MemberReference i args add ReturnStatement MethodInvocation RubyArray MethodInvocation context getRuntime MemberReference success newArray BlockStatement StatementExpression MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation MemberReference var untraceVar getRuntime ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType RubyHash convertToHash ReturnStatement Cast ReferenceType RubyHash MethodInvocation TypeConverter This MethodInvocation MethodInvocation getHash getRuntime Literal "to_hash" convertToType	0
MethodDeclaration Modifier private defineEncodings LocalVariableDeclaration ReferenceType HashEntryIterator VariableDeclarator hei MethodInvocation encodings entryIterator WhileStatement MethodInvocation hei hasNext BlockStatement LocalVariableDeclaration ReferenceType CaseInsensitiveBytesHash ReferenceType CaseInsensitiveBytesHashEntry TypeArgument ReferenceType Entry VariableDeclarator e Cast ReferenceType CaseInsensitiveBytesHash ReferenceType CaseInsensitiveBytesHashEntry TypeArgument ReferenceType Entry MethodInvocation hei next LocalVariableDeclaration ReferenceType Entry VariableDeclarator ee MemberReference e value LocalVariableDeclaration ReferenceType RubyEncoding VariableDeclarator encoding MethodInvocation RubyEncoding MemberReference runtime MemberReference e bytes MemberReference e p MemberReference e end MethodInvocation ee isDummy StatementExpression Assignment MemberReference ArraySelector MethodInvocation ee getIndex encodingList MemberReference encoding = StatementExpression MethodInvocation MemberReference encoding MemberReference e bytes MemberReference e p MemberReference e end defineEncodingConstants	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyArray argument_types ReturnStatement MethodInvocation MethodInvocation getParameterTypes buildRubyArray	1
MethodDeclaration Modifier public Annotation JRubyMethod Annotation Override ReferenceType IRubyObject abs FormalParameter ReferenceType ThreadContext context IfStatement BinaryOperation < MemberReference value Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference value MemberReference Long MIN_VALUE BlockStatement ReturnStatement MethodInvocation RubyBignum MethodInvocation context getRuntime MethodInvocation BigInteger MethodInvocation negate MemberReference value valueOf newBignum ReturnStatement MethodInvocation RubyFixnum MethodInvocation context getRuntime MemberReference - value newFixnum ReturnStatement This	0
MethodDeclaration Modifier static protected ReferenceType String intoCommandArguments FormalParameter ReferenceType String str LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator args ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration BasicType boolean VariableDeclarator inSingle Literal false LocalVariableDeclaration BasicType int VariableDeclarator contentStart Literal - 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator j MethodInvocation str length BinaryOperation < MemberReference i MemberReference j MemberReference ++ i BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation str MemberReference i charAt Literal ' ' MemberReference ! inSingle BinaryOperation != MemberReference contentStart Literal - 1 BlockStatement StatementExpression MethodInvocation args MethodInvocation str MemberReference contentStart MemberReference i substring add StatementExpression Assignment MemberReference contentStart Literal - 1 = ContinueStatement IfStatement BinaryOperation == MethodInvocation str MemberReference i charAt Literal ' ' BlockStatement ContinueStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation str MemberReference i charAt Literal '\'' MemberReference ! inSingle BlockStatement StatementExpression Assignment MemberReference inSingle Literal true = StatementExpression Assignment MemberReference contentStart BinaryOperation + MemberReference i Literal 1 = ContinueStatement IfStatement BinaryOperation == MethodInvocation str MemberReference i charAt Literal '\'' BlockStatement StatementExpression Assignment MemberReference inSingle Literal false = StatementExpression MethodInvocation args MethodInvocation str MemberReference contentStart MemberReference i substring add StatementExpression Assignment MemberReference contentStart Literal - 1 = ContinueStatement IfStatement BinaryOperation == MemberReference contentStart Literal - 1 BlockStatement StatementExpression Assignment MemberReference contentStart MemberReference i = IfStatement BinaryOperation != MemberReference contentStart Literal - 1 BlockStatement StatementExpression MethodInvocation args MethodInvocation str MemberReference contentStart substring add ReturnStatement Cast ReferenceType String MethodInvocation args ArrayCreator ReferenceType String Literal 0 toArray	1
MethodDeclaration Modifier public ReferenceType DirectedGraph getGraph ReturnStatement MemberReference	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "rand" ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType RubyNumeric rand FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType Random VariableDeclarator random MethodInvocation runtime getRandom IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyBignum BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator bigCeilBytes Cast ReferenceType RubyBignum MemberReference arg LocalVariableDeclaration ReferenceType BigInteger VariableDeclarator bigCeil ClassCreator MethodInvocation abs ReferenceType BigInteger MemberReference bigCeilBytes LocalVariableDeclaration BasicType byte VariableDeclarator randBytes ArrayCreator BasicType byte MemberReference bigCeilBytes length StatementExpression MethodInvocation random MemberReference randBytes nextBytes LocalVariableDeclaration ReferenceType BigInteger VariableDeclarator result ClassCreator MethodInvocation abs MethodInvocation MemberReference bigCeil mod ReferenceType BigInteger MemberReference randBytes ReturnStatement ClassCreator ReferenceType RubyBignum MemberReference runtime MemberReference result LocalVariableDeclaration ReferenceType RubyInteger VariableDeclarator integerCeil Cast ReferenceType RubyInteger MethodInvocation RubyKernel MemberReference context MemberReference recv MemberReference arg new_integer LocalVariableDeclaration BasicType long VariableDeclarator ceil MethodInvocation Math MethodInvocation integerCeil getLongValue abs IfStatement BinaryOperation == MemberReference ceil Literal 0 ReturnStatement MethodInvocation RubyFloat MemberReference runtime MethodInvocation random nextDouble newFloat IfStatement BinaryOperation > MemberReference ceil MemberReference Integer MAX_VALUE ReturnStatement MethodInvocation runtime BinaryOperation % MethodInvocation Math MethodInvocation random nextLong abs MemberReference ceil newFixnum ReturnStatement MethodInvocation runtime MethodInvocation random Cast BasicType int MemberReference ceil nextInt newFixnum	1
MethodDeclaration Modifier public ReferenceType Object convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyObject ReturnStatement MethodInvocation rubyObject ClassReference ReferenceType Long toJava	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "[]=" ReferenceType IRubyObject s_hist_set FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject index FormalParameter ReferenceType IRubyObject val LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType ConsoleHolder VariableDeclarator holder MethodInvocation MemberReference runtime getHolder LocalVariableDeclaration BasicType int VariableDeclarator i Cast BasicType int MethodInvocation index MethodInvocation getLongValue convertToInteger IfStatement BinaryOperation < MemberReference i Literal 0 StatementExpression Assignment MemberReference i MethodInvocation holder.history size += TryStatement StatementExpression MethodInvocation holder.history MemberReference i MethodInvocation val asJavaString set CatchClause CatchClauseParameter IndexOutOfBoundsException ioobe ThrowStatement MethodInvocation runtime BinaryOperation + Literal "invalid history index: " MemberReference i newIndexError ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration ReferenceType T getOrCreate FormalParameter ReferenceType Object object FormalParameter BasicType int hash FormalParameter ReferenceType A allocator LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator table LocalVariableDeclaration ReferenceType T VariableDeclarator proxy ForStatement ForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator e Assignment MemberReference table MemberReference entryTable = BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference hash MemberReference e hash BinaryOperation == MemberReference object MethodInvocation e.objectRef get BlockStatement IfStatement BinaryOperation != Assignment MemberReference proxy MethodInvocation e.proxyRef get = Literal null ReturnStatement MemberReference proxy BreakStatement StatementExpression MethodInvocation lock TryStatement StatementExpression MethodInvocation expunge LocalVariableDeclaration BasicType int VariableDeclarator potentialNewSize IfStatement BinaryOperation > Assignment MemberReference potentialNewSize BinaryOperation + MemberReference tableSize Literal 1 = MemberReference threshold BlockStatement StatementExpression Assignment MemberReference table MethodInvocation rehash = BlockStatement StatementExpression Assignment MemberReference table MemberReference entryTable = LocalVariableDeclaration BasicType int VariableDeclarator index LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator e ForStatement ForControl Assignment MemberReference e MemberReference ArraySelector Assignment MemberReference index BinaryOperation & MemberReference hash BinaryOperation - MemberReference table length Literal 1 = table = BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference hash MemberReference e hash BinaryOperation == MemberReference object MethodInvocation e.objectRef get BlockStatement IfStatement BinaryOperation != Assignment MemberReference proxy MethodInvocation e.proxyRef get = Literal null ReturnStatement MemberReference proxy StatementExpression MethodInvocation MemberReference table MemberReference hash MemberReference e remove StatementExpression MemberReference -- potentialNewSize BreakStatement StatementExpression Assignment MemberReference proxy MethodInvocation cache MemberReference object MemberReference allocator allocateProxy = StatementExpression Assignment MemberReference e ClassCreator ReferenceType Entry TypeArgument ReferenceType T MemberReference object MemberReference hash MemberReference proxy MemberReference cache referenceType MemberReference ArraySelector MemberReference index table MemberReference referenceQueue = StatementExpression Assignment MemberReference ArraySelector MemberReference index table MemberReference e = StatementExpression Assignment MemberReference tableSize MemberReference potentialNewSize = StatementExpression Assignment MemberReference entryTable MemberReference table = ReturnStatement MemberReference proxy StatementExpression MethodInvocation unlock	1
MethodDeclaration Modifier public ReferenceType Operand buildAlias FormalParameter Modifier final ReferenceType AliasNode alias FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType Operand VariableDeclarator args ArrayCreator ReferenceType Operand ArrayInitializer ClassCreator ReferenceType MetaObject MemberReference s ClassCreator ReferenceType MethAddr MethodInvocation alias getNewName ClassCreator ReferenceType MethAddr MethodInvocation alias getOldName StatementExpression MethodInvocation s ClassCreator ReferenceType RUBY_INTERNALS_CALL_Instr Literal null MemberReference MethAddr DEFINE_ALIAS MemberReference args addInstr ReturnStatement MemberReference Nil NIL	1
MethodDeclaration Modifier public static ReferenceType IRubyObject createBacktraceFromFrames FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyStackTraceElement backtraceFrames FormalParameter BasicType boolean cropAtEval LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator backtrace MethodInvocation runtime newArray IfStatement BinaryOperation || BinaryOperation == MemberReference backtraceFrames Literal null BinaryOperation <= MemberReference backtraceFrames length Literal 0 ReturnStatement MemberReference backtrace LocalVariableDeclaration BasicType int VariableDeclarator traceSize MemberReference backtraceFrames length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i BinaryOperation - MemberReference traceSize Literal 1 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType RubyStackTraceElement VariableDeclarator frame MemberReference ArraySelector MemberReference i backtraceFrames IfStatement BinaryOperation && MemberReference cropAtEval MethodInvocation frame isBinding BreakStatement StatementExpression MethodInvocation MemberReference runtime MemberReference backtrace MemberReference frame MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 backtraceFrames addBackTraceElement ReturnStatement MemberReference backtrace	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "assoc" ElementValuePair required Literal 1 ReferenceType IRubyObject assoc FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject key LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference begin BinaryOperation < MemberReference i BinaryOperation + MemberReference begin MemberReference realLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator v MemberReference ArraySelector MemberReference i values IfStatement BinaryOperation instanceof MemberReference v ReferenceType RubyArray BlockStatement LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator arr Cast ReferenceType RubyArray MemberReference v IfStatement BinaryOperation && BinaryOperation > MemberReference arr realLength Literal 0 MethodInvocation MemberReference context MemberReference arr ArraySelector MemberReference arr begin values MemberReference key equalInternal ReturnStatement MemberReference arr ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public ReferenceType StringBuffer format FormalParameter ReferenceType Date ignored FormalParameter ReferenceType StringBuffer toAppendTo FormalParameter ReferenceType FieldPosition LocalVariableDeclaration ReferenceType TimeOutputFormatter VariableDeclarator formatter Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Token VariableDeclarator token MemberReference compiledPattern BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator output Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator format Literal true SwitchStatement MethodInvocation token getFormat SwitchStatementCase FORMAT_OUTPUT StatementExpression Assignment MemberReference formatter Cast ReferenceType TimeOutputFormatter MethodInvocation token getData = BreakStatement SwitchStatementCase FORMAT_STRING StatementExpression Assignment MemberReference output MethodInvocation token MethodInvocation toString getData = StatementExpression Assignment MemberReference format Literal false = BreakStatement SwitchStatementCase FORMAT_WEEK_LONG LocalVariableDeclaration BasicType int VariableDeclarator v BinaryOperation % BinaryOperation + MethodInvocation dt getDayOfWeek Literal 1 Literal 8 IfStatement BinaryOperation == MemberReference v Literal 0 BlockStatement StatementExpression MemberReference ++ v StatementExpression Assignment MemberReference output MethodInvocation formatSymbols ArraySelector MemberReference v getWeekdays = BreakStatement SwitchStatementCase FORMAT_WEEK_SHORT StatementExpression Assignment MemberReference v BinaryOperation % BinaryOperation + MethodInvocation dt getDayOfWeek Literal 1 Literal 8 = IfStatement BinaryOperation == MemberReference v Literal 0 BlockStatement StatementExpression MemberReference ++ v StatementExpression Assignment MemberReference output MethodInvocation formatSymbols ArraySelector MemberReference v getShortWeekdays = BreakStatement SwitchStatementCase FORMAT_MONTH_LONG StatementExpression Assignment MemberReference output MethodInvocation formatSymbols ArraySelector BinaryOperation - MethodInvocation dt getMonthOfYear Literal 1 getMonths = BreakStatement SwitchStatementCase FORMAT_MONTH_SHORT StatementExpression Assignment MemberReference output MethodInvocation formatSymbols ArraySelector BinaryOperation - MethodInvocation dt getMonthOfYear Literal 1 getShortMonths = BreakStatement SwitchStatementCase FORMAT_DAY LocalVariableDeclaration BasicType int VariableDeclarator value MethodInvocation dt getDayOfMonth StatementExpression Assignment MemberReference output MethodInvocation String Literal "%02d" MemberReference value format = BreakStatement SwitchStatementCase FORMAT_DAY_S StatementExpression Assignment MemberReference value MethodInvocation dt getDayOfMonth = StatementExpression Assignment MemberReference output BinaryOperation + TernaryExpression BinaryOperation < MemberReference value Literal 10 Literal " " Literal "" MethodInvocation Integer MemberReference value toString = BreakStatement SwitchStatementCase FORMAT_HOUR FORMAT_HOUR_BLANK StatementExpression Assignment MemberReference value MethodInvocation dt getHourOfDay = StatementExpression Assignment MemberReference output Literal "" = IfStatement BinaryOperation < MemberReference value Literal 10 BlockStatement StatementExpression Assignment MemberReference output TernaryExpression BinaryOperation == MethodInvocation token getFormat MemberReference FORMAT_HOUR Literal "0" Literal " " += StatementExpression Assignment MemberReference output MemberReference value += BreakStatement SwitchStatementCase FORMAT_HOUR_M FORMAT_HOUR_S StatementExpression Assignment MemberReference value MethodInvocation dt getHourOfDay = IfStatement BinaryOperation > MemberReference value Literal 12 BlockStatement StatementExpression Assignment MemberReference value Literal 12 -= IfStatement BinaryOperation == MemberReference value Literal 0 BlockStatement StatementExpression Assignment MemberReference output Literal "12" = BlockStatement StatementExpression Assignment MemberReference output Literal "" = IfStatement BinaryOperation < MemberReference value Literal 10 BlockStatement StatementExpression Assignment MemberReference output TernaryExpression BinaryOperation == MethodInvocation token getFormat MemberReference FORMAT_HOUR_M Literal "0" Literal " " += StatementExpression Assignment MemberReference output MemberReference value += BreakStatement SwitchStatementCase FORMAT_DAY_YEAR StatementExpression Assignment MemberReference value MethodInvocation dt getDayOfYear = StatementExpression Assignment MemberReference output MethodInvocation String Literal "%03d" MemberReference value format = BreakStatement SwitchStatementCase FORMAT_MINUTES StatementExpression Assignment MemberReference value MethodInvocation dt getMinuteOfHour = StatementExpression Assignment MemberReference output MethodInvocation String Literal "%02d" MemberReference value format = BreakStatement SwitchStatementCase FORMAT_MONTH StatementExpression Assignment MemberReference value MethodInvocation dt getMonthOfYear = StatementExpression Assignment MemberReference output MethodInvocation String Literal "%02d" MemberReference value format = BreakStatement SwitchStatementCase FORMAT_MERIDIAN FORMAT_MERIDIAN_LOWER_CASE IfStatement BinaryOperation < MethodInvocation dt getHourOfDay Literal 12 BlockStatement StatementExpression Assignment MemberReference output TernaryExpression BinaryOperation == MethodInvocation token getFormat MemberReference FORMAT_MERIDIAN Literal "AM" Literal "am" = BlockStatement StatementExpression Assignment MemberReference output TernaryExpression BinaryOperation == MethodInvocation token getFormat MemberReference FORMAT_MERIDIAN Literal "PM" Literal "pm" = BreakStatement SwitchStatementCase FORMAT_SECONDS StatementExpression Assignment MemberReference value MethodInvocation dt getSecondOfMinute = StatementExpression Assignment MemberReference output BinaryOperation + TernaryExpression BinaryOperation < MemberReference value Literal 10 Literal "0" Literal "" MethodInvocation Integer MemberReference value toString = BreakStatement SwitchStatementCase FORMAT_WEEK_YEAR_M StatementExpression Assignment MemberReference output MethodInvocation MemberReference java.util.Calendar formatWeekYear = BreakStatement SwitchStatementCase FORMAT_WEEK_YEAR_S StatementExpression Assignment MemberReference output MethodInvocation MemberReference java.util.Calendar SUNDAY formatWeekYear = BreakStatement SwitchStatementCase FORMAT_DAY_WEEK FORMAT_DAY_WEEK2 StatementExpression Assignment MemberReference value MethodInvocation dt getDayOfWeek = IfStatement BinaryOperation == MethodInvocation token getFormat MemberReference FORMAT_DAY_WEEK BlockStatement StatementExpression Assignment MemberReference value BinaryOperation % MemberReference value Literal 7 = StatementExpression Assignment MemberReference output MethodInvocation Integer MemberReference value toString = BreakStatement SwitchStatementCase FORMAT_YEAR_LONG StatementExpression Assignment MemberReference value MethodInvocation dt getYear = StatementExpression Assignment MemberReference output MethodInvocation String Literal "%04d" MemberReference value format = BreakStatement SwitchStatementCase FORMAT_YEAR_SHORT StatementExpression Assignment MemberReference value BinaryOperation % MethodInvocation dt getYear Literal 100 = StatementExpression Assignment MemberReference output MethodInvocation String Literal "%02d" MemberReference value format = BreakStatement SwitchStatementCase FORMAT_ZONE_OFF StatementExpression Assignment MemberReference value MethodInvocation dt MethodInvocation MethodInvocation dt getMillis getOffset getZone = StatementExpression Assignment MemberReference output TernaryExpression BinaryOperation < MemberReference value Literal 0 Literal "-" Literal "+" = StatementExpression Assignment MemberReference value MethodInvocation Math MemberReference value abs = IfStatement BinaryOperation < BinaryOperation / MemberReference value Literal 3600000 Literal 10 BlockStatement StatementExpression Assignment MemberReference output Literal "0" += StatementExpression Assignment MemberReference output BinaryOperation / MemberReference value Literal 3600000 += StatementExpression Assignment MemberReference value BinaryOperation / BinaryOperation % MemberReference value Literal 3600000 Literal 60000 = IfStatement BinaryOperation < MemberReference value Literal 10 BlockStatement StatementExpression Assignment MemberReference output Literal "0" += StatementExpression Assignment MemberReference output MemberReference value += BreakStatement SwitchStatementCase FORMAT_ZONE_ID StatementExpression MethodInvocation toAppendTo MethodInvocation dt MethodInvocation MethodInvocation dt getMillis getShortName getZone append BreakStatement SwitchStatementCase FORMAT_CENTURY StatementExpression MethodInvocation toAppendTo MethodInvocation dt getCenturyOfEra append BreakStatement SwitchStatementCase FORMAT_MILLISEC StatementExpression Assignment MemberReference value MethodInvocation dt getMillisOfSecond = StatementExpression Assignment MemberReference output MethodInvocation String Literal "%03d" MemberReference value format = BreakStatement SwitchStatementCase FORMAT_EPOCH StatementExpression Assignment MemberReference output MethodInvocation Long BinaryOperation / MethodInvocation dt getMillis Literal 1000 toString = BreakStatement SwitchStatementCase FORMAT_WEEK_WEEKYEAR StatementExpression Assignment MemberReference value MethodInvocation dt getWeekOfWeekyear = StatementExpression Assignment MemberReference output MethodInvocation String Literal "%02d" MemberReference value format = BreakStatement SwitchStatementCase FORMAT_NANOSEC LocalVariableDeclaration BasicType long VariableDeclarator nano MethodInvocation System nanoTime StatementExpression Assignment MemberReference value Cast BasicType int BinaryOperation % MemberReference nano Literal 1000000000 = StatementExpression Assignment MemberReference output MethodInvocation Integer MemberReference value toString = BreakStatement SwitchStatementCase FORMAT_WEEKYEAR StatementExpression Assignment MemberReference output MethodInvocation Integer MethodInvocation dt getWeekyear toString = BreakStatement IfStatement BinaryOperation != MemberReference output Literal null BlockStatement StatementExpression MethodInvocation toAppendTo TernaryExpression MemberReference format MethodInvocation MemberReference formatter MemberReference output MemberReference output append ReturnStatement MemberReference toAppendTo	1
MethodDeclaration Modifier public ReferenceType Object case479_line1815 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null Literal null Literal null Literal null Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier protected BasicType int internalAdler ReturnStatement MethodInvocation MethodInvocation getAdler getDeflater	0
MethodDeclaration Modifier public final ReferenceType RubySymbol FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 2 MemberReference name	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "current" ElementValuePair meta Literal true ReferenceType RubyThread current FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation recv MethodInvocation getCurrentContext MethodInvocation getThread getRuntime	0
MethodDeclaration Modifier public ReferenceType Object case93_line646 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getPosition Literal null Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_colon2 = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Object case15_line348 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType IfNode MethodInvocation Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals getConditionNode Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject as FormalParameter ReferenceType Class javaClass ThrowStatement MethodInvocation MethodInvocation BinaryOperation + MethodInvocation MethodInvocation getBaseName getMetaClass Literal " cannot coerce to a Java type." newTypeError getRuntime	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "import" ElementValuePair module Literal true ReferenceType IRubyObject rb_import FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject name LocalVariableDeclaration ReferenceType String VariableDeclarator className MethodInvocation name toString TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator cls MethodInvocation MethodInvocation context MethodInvocation getJRubyClassLoader getRuntime MemberReference className findClass LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator namespace IfStatement BinaryOperation instanceof MemberReference self ReferenceType RubyModule BlockStatement StatementExpression Assignment MemberReference namespace Cast ReferenceType RubyModule MemberReference self = BlockStatement StatementExpression Assignment MemberReference namespace MethodInvocation self MethodInvocation getRealClass getMetaClass = StatementExpression MethodInvocation namespace MethodInvocation cls getSimpleName MethodInvocation MethodInvocation context getRuntime MemberReference cls getMirrorForClass defineConstant ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime CatchClause CatchClauseParameter Exception e IfStatement MethodInvocation context MethodInvocation getDebug MethodInvocation isTrue getRuntime BlockStatement StatementExpression MethodInvocation e printStackTrace ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not find class " MemberReference className Literal ", exception: " MemberReference e newTypeError getRuntime	1
MethodDeclaration Modifier public ReferenceType getCacheCompiler ReturnStatement MemberReference cacheCompiler	0
MethodDeclaration Modifier public ReferenceType Arity getArity ReturnStatement MethodInvocation Arity singleArgument	0
MethodDeclaration Modifier private LocalVariableDeclaration BasicType boolean VariableDeclarator oneNine MethodInvocation is1_9 IfStatement MemberReference oneNine BlockStatement StatementExpression Assignment MemberReference basicObjectClass MethodInvocation RubyClass This Literal "BasicObject" Literal null MemberReference RubyBasicObject OBJECT_ALLOCATOR createBootstrapClass = StatementExpression Assignment MemberReference objectClass MethodInvocation RubyClass This Literal "Object" MemberReference basicObjectClass MemberReference RubyObject OBJECT_ALLOCATOR createBootstrapClass = BlockStatement StatementExpression Assignment MemberReference objectClass MethodInvocation RubyClass This Literal "Object" Literal null MemberReference RubyObject OBJECT_ALLOCATOR createBootstrapClass = StatementExpression Assignment MemberReference moduleClass MethodInvocation RubyClass This Literal "Module" MemberReference objectClass MemberReference RubyModule MODULE_ALLOCATOR createBootstrapClass = StatementExpression Assignment MemberReference classClass MethodInvocation RubyClass This Literal "Class" MemberReference moduleClass MemberReference RubyClass CLASS_ALLOCATOR createBootstrapClass = IfStatement MemberReference oneNine StatementExpression MethodInvocation basicObjectClass MemberReference classClass setMetaClass StatementExpression MethodInvocation objectClass MemberReference classClass setMetaClass StatementExpression MethodInvocation moduleClass MemberReference classClass setMetaClass StatementExpression MethodInvocation classClass MemberReference classClass setMetaClass LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator metaClass IfStatement MemberReference oneNine StatementExpression Assignment MemberReference metaClass MethodInvocation basicObjectClass MemberReference classClass makeMetaClass = StatementExpression Assignment MemberReference metaClass MethodInvocation objectClass MemberReference classClass makeMetaClass = StatementExpression Assignment MemberReference metaClass MethodInvocation moduleClass MemberReference metaClass makeMetaClass = StatementExpression Assignment MemberReference metaClass MethodInvocation classClass MemberReference metaClass makeMetaClass = IfStatement MemberReference oneNine StatementExpression MethodInvocation RubyBasicObject This MemberReference basicObjectClass createBasicObjectClass StatementExpression MethodInvocation RubyObject This MemberReference objectClass createObjectClass StatementExpression MethodInvocation RubyModule This MemberReference moduleClass createModuleClass StatementExpression MethodInvocation RubyClass This MemberReference classClass createClassClass IfStatement MemberReference oneNine StatementExpression MethodInvocation objectClass Literal "BasicObject" MemberReference basicObjectClass setConstant StatementExpression MethodInvocation objectClass Literal "Object" MemberReference objectClass setConstant StatementExpression MethodInvocation objectClass Literal "Class" MemberReference classClass setConstant StatementExpression MethodInvocation objectClass Literal "Module" MemberReference moduleClass setConstant StatementExpression MethodInvocation RubyKernel This createKernelModule StatementExpression MethodInvocation objectClass MemberReference kernelModule includeModule StatementExpression Assignment MemberReference topSelf MethodInvocation TopSelfFactory This createTopSelf =	1
MethodDeclaration Modifier public Annotation Override ReferenceType Arity getArity ReturnStatement MethodInvocation argsNode getArity	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter BasicType long IfStatement BinaryOperation instanceof MemberReference self ReferenceType RubyFixnum BlockStatement ReturnStatement Cast ReferenceType RubyFixnum MemberReference self ReturnStatement SuperMethodInvocation MemberReference context MemberReference caller MemberReference self MemberReference call	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "^" ReferenceType IRubyObject false_xor FormalParameter ReferenceType IRubyObject f FormalParameter ReferenceType IRubyObject oth ReturnStatement TernaryExpression MethodInvocation oth isTrue MethodInvocation f MethodInvocation getTrue getRuntime MemberReference f	1
MethodDeclaration Modifier public final ReferenceType RubyFixnum getFixnum4 FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int value ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 4 MemberReference value	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "^" ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject op_xor FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other StatementExpression Assignment MemberReference other MethodInvocation other convertToInteger = IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime MethodInvocation value Cast ReferenceType RubyBignum MemberReference other bignorm IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime MethodInvocation value MethodInvocation BigInteger Cast ReferenceType RubyFixnum MemberReference other valueOf bignorm ReturnStatement MethodInvocation MemberReference context Literal "^" MemberReference other coerceBin	1
MethodDeclaration Modifier public ReferenceType RubyClass getEncodingError ReturnStatement MemberReference encodingError	0
MethodDeclaration Modifier public compileFalse FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr IfStatement MemberReference RubyInstanceConfig PEEPHOLE_OPTZ BlockStatement IfStatement MemberReference expr BlockStatement StatementExpression MethodInvocation context loadFalse StatementExpression MethodInvocation context pollThreadEvents BlockStatement StatementExpression MethodInvocation context loadFalse StatementExpression MethodInvocation context pollThreadEvents IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "singleton_method_undefined" ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject singleton_method_undefined FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject symbolId FormalParameter ReferenceType Block block ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public ReferenceType Object case490_line1808 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation yyerrok ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject setValueThreeDepthZero FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation MemberReference value assertSetValueThreeDepthZero ReturnStatement Assignment MemberReference ArraySelector Literal 3 variableValues MemberReference value =	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair frame Literal true ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject sub19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation context getRuntime strDup StatementExpression MethodInvocation str MemberReference context MemberReference arg0 MemberReference block sub_bang19 ReturnStatement MemberReference str	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "ceil" Annotation Override ReferenceType IRubyObject ceil ReturnStatement MethodInvocation MethodInvocation getRuntime MethodInvocation Math MemberReference value ceil dbl2num	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject op_fdiv FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MemberReference context MethodInvocation MemberReference context This f_to_f MemberReference other f_div	1
MethodDeclaration Modifier public static ReferenceType Block FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter BasicType int arity FormalParameter ReferenceType CompiledBlockCallback callback FormalParameter BasicType boolean hasMultipleArgsHead FormalParameter BasicType int argsNodeType ReturnStatement MethodInvocation CompiledSharedScopeBlock MemberReference context MemberReference self MethodInvocation Arity MemberReference arity createArity MethodInvocation context getCurrentScope MemberReference callback MemberReference hasMultipleArgsHead MemberReference argsNodeType newCompiledSharedScopeClosure	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference self MemberReference name MemberReference Block NULL_BLOCK Literal 1 pre ReturnStatement MethodInvocation jitCompiledScript MemberReference context MemberReference self MemberReference arg0 MemberReference Block NULL_BLOCK __file__ CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter JumpException.RedoJump rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier public static ReferenceType IRubyObject get_package_module FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject symObject ReturnStatement MethodInvocation MethodInvocation recv getRuntime MethodInvocation symObject asJavaString getPackageModule	1
MethodDeclaration Modifier private static ReferenceType IR_Class addCoreClass FormalParameter ReferenceType String name FormalParameter ReferenceType IR_Scope parent FormalParameter ReferenceType String coreMethods LocalVariableDeclaration ReferenceType IR_Class VariableDeclarator c ClassCreator ReferenceType IR_Class MemberReference parent Cast ReferenceType IR_Scope Literal null Literal null MemberReference name Literal false StatementExpression MethodInvocation _coreClasses MemberReference c MemberReference c put IfStatement BinaryOperation != MemberReference coreMethods Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator m MemberReference coreMethods BlockStatement LocalVariableDeclaration ReferenceType IR_Method VariableDeclarator meth ClassCreator ReferenceType IR_Method MemberReference c Literal null MemberReference m Literal true StatementExpression MethodInvocation meth Literal false setCodeModificationFlag StatementExpression MethodInvocation c MemberReference meth addMethod ReturnStatement MemberReference c	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal ElementValuePair optional Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation ArgsFileData MemberReference recv getDataFrom LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation ! data MemberReference context next_argv BlockStatement ReturnStatement TernaryExpression MethodInvocation runtime is1_9 MethodInvocation runtime newEmptyArray MethodInvocation runtime getNil IfStatement BinaryOperation instanceof MemberReference data currentFile ReferenceType RubyIO BlockStatement ReturnStatement MethodInvocation data.currentFile MemberReference context Literal MemberReference args callMethod LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ary MethodInvocation runtime newArray LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator line WhileStatement Assignment MemberReference line MethodInvocation MemberReference context MemberReference recv MemberReference args argf_getline = BlockStatement StatementExpression MethodInvocation ary MemberReference line append ReturnStatement MemberReference ary	0
MethodDeclaration Modifier public BasicType boolean isKindOfModule FormalParameter ReferenceType RubyModule type ForStatement ForControl VariableDeclaration ReferenceType RubyModule VariableDeclarator module This BinaryOperation != MemberReference module Literal null Assignment MemberReference module MethodInvocation module getSuperClass = BlockStatement IfStatement MethodInvocation module MemberReference type isSame ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "truncate" ReferenceType IRubyObject truncate ReturnStatement MethodInvocation MethodInvocation truncate	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "path" ReferenceType IRubyObject path ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime StatementExpression MethodInvocation MemberReference runtime createJavaCallables LocalVariableDeclaration ReferenceType JavaProxy VariableDeclarator proxy MethodInvocation MemberReference self castJavaProxy LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference args length LocalVariableDeclaration ReferenceType Object VariableDeclarator convertedArgs ArrayCreator ReferenceType Object MemberReference len LocalVariableDeclaration ReferenceType JavaConstructor VariableDeclarator constructor Cast ReferenceType JavaConstructor MethodInvocation MemberReference self MemberReference name MemberReference args MemberReference len findCallable ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference len MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i convertedArgs MethodInvocation MemberReference context MemberReference ArraySelector MemberReference i args MemberReference constructor MemberReference i convertArg = StatementExpression MethodInvocation proxy MethodInvocation JavaObject MemberReference runtime MethodInvocation constructor MemberReference convertedArgs newInstanceDirect wrap dataWrapStruct ReturnStatement MemberReference self	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "[]" Literal "slice" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject aref FormalParameter ReferenceType IRubyObject arg0 AssertStatement MethodInvocation ! arg0 MethodInvocation is1_9 getRuntime IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubyFixnum ReturnStatement MethodInvocation Cast ReferenceType RubyFixnum MemberReference arg0 entry IfStatement BinaryOperation instanceof MemberReference arg0 ReferenceType RubySymbol ThrowStatement MethodInvocation MethodInvocation Literal "Symbol as array index" newTypeError getRuntime ReturnStatement MethodInvocation MemberReference arg0 arefCommon	1
MethodDeclaration Modifier public ReferenceType Object case288_line1085 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType FCallNoArgBlockNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType IterNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType int addVariable FormalParameter ReferenceType String name LocalVariableDeclaration BasicType int VariableDeclarator slot MethodInvocation MemberReference name isDefined IfStatement BinaryOperation >= MemberReference slot Literal 0 ReturnStatement MemberReference slot StatementExpression MethodInvocation MemberReference name growVariableNames ReturnStatement BinaryOperation - MemberReference length Literal 1	1
MethodDeclaration Modifier private ReferenceType IRubyObject singleByteUpcase FormalParameter ReferenceType Ruby runtime FormalParameter BasicType byte bytes FormalParameter BasicType int s FormalParameter BasicType int end LocalVariableDeclaration BasicType boolean VariableDeclarator modify Literal false WhileStatement BinaryOperation < MemberReference s MemberReference end BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator c BinaryOperation & MemberReference ArraySelector MemberReference s bytes Literal 0xff IfStatement MethodInvocation ASCII MemberReference c isLower BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference s bytes MemberReference AsciiTables ArraySelector MemberReference c ToUpperCaseTable = StatementExpression Assignment MemberReference modify Literal true = StatementExpression MemberReference ++ s ReturnStatement TernaryExpression MemberReference modify This MethodInvocation runtime getNil	0
MethodDeclaration Modifier public static ReferenceType IRubyObject fastDeclareClassVariable FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String internedName FormalParameter ReferenceType IRubyObject value LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator rubyClass MethodInvocation ASTInterpreter MemberReference context MemberReference runtime getClassVariableBase IfStatement BinaryOperation == MemberReference rubyClass Literal null ThrowStatement MethodInvocation runtime Literal "no class/module to define class variable" newTypeError StatementExpression MethodInvocation rubyClass MemberReference internedName MemberReference value fastSetClassVar ReturnStatement MemberReference value	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType RETURNNODE	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject ruby_to_java FormalParameter Modifier final ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject object FormalParameter ReferenceType Block unusedBlock IfStatement MethodInvocation object Literal "to_java_object" respondsTo BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result Cast ReferenceType JavaObject MethodInvocation object dataGetStruct IfStatement BinaryOperation == MemberReference result Literal null BlockStatement StatementExpression Assignment MemberReference result MethodInvocation object MethodInvocation recv MethodInvocation getCurrentContext getRuntime Literal "to_java_object" callMethod = IfStatement BinaryOperation instanceof MemberReference result ReferenceType JavaObject BlockStatement StatementExpression MethodInvocation recv MethodInvocation getJavaSupport MethodInvocation MethodInvocation Cast ReferenceType JavaObject MemberReference result MemberReference object put getRuntime ReturnStatement MemberReference result ReturnStatement MethodInvocation MemberReference recv MemberReference object MemberReference unusedBlock primitive_to_java	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject egid FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation MethodInvocation context getRuntime egid	0
MethodDeclaration Modifier public BasicType int incrementParenNest StatementExpression MemberReference ++ parenNest ReturnStatement MemberReference parenNest	0
MethodDeclaration Modifier public ReferenceType IRubyObject get FormalParameter ReferenceType String name AssertStatement BinaryOperation != MemberReference name Literal null AssertStatement MethodInvocation name Literal "$" startsWith LocalVariableDeclaration ReferenceType GlobalVariable VariableDeclarator variable Cast ReferenceType GlobalVariable MethodInvocation globalVariables MemberReference name get IfStatement BinaryOperation != MemberReference variable Literal null ReturnStatement MethodInvocation variable MethodInvocation getValue getAccessor IfStatement MethodInvocation runtime isVerbose BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID GLOBAL_NOT_INITIALIZED BinaryOperation + BinaryOperation + Literal "global variable `" MemberReference name Literal "' not initialized" MemberReference name warning getWarnings ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public ReferenceType Object unmarshalFrom FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass type FormalParameter ReferenceType unmarshalStream IOException LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation type StatementExpression MethodInvocation unmarshalStream MemberReference result StatementExpression MethodInvocation unmarshalStream MemberReference result ReturnStatement MemberReference result	0
MethodDeclaration Modifier public setArgValues FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 FormalParameter ReferenceType IRubyObject arg8 FormalParameter ReferenceType IRubyObject arg9 StatementExpression MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 MemberReference arg8 MemberReference arg9 Literal 10 setArgValues	1
MethodDeclaration Modifier public ReferenceType Object case73_line559 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MemberReference EMPTY_LIST	0
MethodDeclaration Modifier public sastore StatementExpression MethodInvocation MethodInvocation MemberReference visitInsn getMethodVisitor	0
MethodDeclaration Modifier public final ReferenceType NativeType getNativeType ReturnStatement This	0
MethodDeclaration Modifier public compilePostExe FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType PostExeNode VariableDeclarator postExeNode Cast ReferenceType PostExeNode MemberReference node LocalVariableDeclaration Modifier final ReferenceType CompilerCallback VariableDeclarator closureBody ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation postExeNode getBodyNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation postExeNode getBodyNode MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation context loadNil StatementExpression MethodInvocation context MemberReference closureBody createNewEndBlock IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier protected Annotation Override ReferenceType IRubyObject constantTableStore FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject value ReturnStatement MethodInvocation MemberReference name MemberReference value constantTableStore	1
MethodDeclaration Modifier public ReferenceType Node getFirstNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime	1
MethodDeclaration Modifier protected BasicType int FormalParameter ReferenceType Object value IfStatement BinaryOperation == MemberReference value Literal null ReturnStatement Literal 0 ReturnStatement MethodInvocation value hashCode	1
MethodDeclaration Modifier public static ReferenceType newCompiledBlockLight FormalParameter ReferenceType Arity arity FormalParameter ReferenceType scope FormalParameter ReferenceType CompiledBlockCallback19 callback FormalParameter BasicType boolean hasMultipleArgsHead FormalParameter BasicType int ReturnStatement ClassCreator ReferenceType MemberReference arity MemberReference scope MemberReference callback MemberReference hasMultipleArgsHead MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "===" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject eqq_p19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation MemberReference context Literal "include?" MemberReference obj callMethod	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair required Literal 1 ElementValuePair rest Literal true ReferenceType JavaCallable declared_method_smart FormalParameter ReferenceType IRubyObject args ClassNotFoundException LocalVariableDeclaration ReferenceType String VariableDeclarator methodName MemberReference ArraySelector Literal 0 MethodInvocation asJavaString args LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator argumentTypes MethodInvocation MemberReference args buildArgumentTypes LocalVariableDeclaration ReferenceType JavaCallable VariableDeclarator callable MethodInvocation MethodInvocation getRuntime MethodInvocation javaClass MemberReference methodName MemberReference argumentTypes getMatchingCallable IfStatement BinaryOperation != MemberReference callable Literal null ReturnStatement MemberReference callable ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "undefined method '" MemberReference methodName Literal "' for class '" MethodInvocation MethodInvocation getName javaClass Literal "'" MemberReference methodName newNameError getRuntime	1
MethodDeclaration Modifier private Annotation Deprecated ReferenceType ClassWriter createCtorFast FormalParameter ReferenceType String namePath Exception LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw ClassCreator ReferenceType ClassWriter MemberReference ClassWriter COMPUTE_MAXS StatementExpression MethodInvocation cw MemberReference V1_4 BinaryOperation + MemberReference ACC_PUBLIC MemberReference ACC_SUPER MemberReference namePath Literal null MemberReference FAST_SUPER_CLASS Literal null visit LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation cw MemberReference ACC_PUBLIC Literal "<init>" Literal "()V" Literal null Literal null visitMethod StatementExpression MethodInvocation mv visitCode StatementExpression MethodInvocation mv MemberReference ALOAD Literal 0 visitVarInsn StatementExpression MethodInvocation mv MemberReference INVOKESPECIAL MemberReference FAST_SUPER_CLASS Literal "<init>" Literal "()V" visitMethodInsn LocalVariableDeclaration ReferenceType Label VariableDeclarator line ClassCreator ReferenceType Label StatementExpression MethodInvocation mv Literal 0 MemberReference line visitLineNumber StatementExpression MethodInvocation mv MemberReference RETURN visitInsn StatementExpression MethodInvocation mv Literal 1 Literal 1 visitMaxs StatementExpression MethodInvocation mv visitEnd ReturnStatement MemberReference cw	1
MethodDeclaration Modifier public final ReferenceType String ReturnStatement MethodInvocation staticScope	0
MethodDeclaration Modifier public emitGET_FIELD FormalParameter ReferenceType GET_FIELD_Instr putField LocalVariableDeclaration ReferenceType String VariableDeclarator field Cast ReferenceType FieldRef MethodInvocation putField ArraySelector Literal 1 getOperands StatementExpression MethodInvocation MemberReference field declareField StatementExpression MethodInvocation MethodInvocation putField ArraySelector Literal 0 getOperands StatementExpression MethodInvocation MethodInvocation MethodInvocation Type ClassReference ReferenceType Object getType MemberReference field MethodInvocation Type ClassReference ReferenceType Object getType getField method	1
MethodDeclaration Modifier public BasicType boolean isDebug ReturnStatement MemberReference debug	0
MethodDeclaration Modifier public compileNewline FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr StatementExpression MethodInvocation context MethodInvocation node getPosition lineNumber StatementExpression MethodInvocation context MethodInvocation node getPosition setLinePosition LocalVariableDeclaration ReferenceType NewlineNode VariableDeclarator newlineNode Cast ReferenceType NewlineNode MemberReference node StatementExpression MethodInvocation MethodInvocation newlineNode getNextNode MemberReference context MemberReference expr compile	1
MethodDeclaration Modifier public ReferenceType IRubyObject op_minus FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long other ReturnStatement MethodInvocation MemberReference context MemberReference other subtractFixnum	1
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This visitConstNode	0
MethodDeclaration Modifier public BasicType byte getZeroTerminatedByteArray FormalParameter BasicType long offset ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair meta Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation MethodInvocation recv getRuntime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "read" ReferenceType IRubyObject read FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 LocalVariableDeclaration ReferenceType OpenFile VariableDeclarator myOpenFile MethodInvocation getOpenFileChecked IfStatement MethodInvocation arg0 isNil BlockStatement TryStatement StatementExpression MethodInvocation myOpenFile MethodInvocation getRuntime checkReadable StatementExpression MethodInvocation myOpenFile setReadBuffered ReturnStatement MethodInvocation MemberReference arg1 readAll CatchClause CatchClauseParameter PipeException ex ThrowStatement MethodInvocation MethodInvocation newErrnoEPIPEError getRuntime CatchClause CatchClauseParameter InvalidValueException ex ThrowStatement MethodInvocation MethodInvocation newErrnoEINVALError getRuntime CatchClause CatchClauseParameter EOFException ex ThrowStatement MethodInvocation MethodInvocation newEOFError getRuntime CatchClause CatchClauseParameter IOException ex ThrowStatement MethodInvocation MethodInvocation MemberReference ex newIOErrorFromException getRuntime CatchClause CatchClauseParameter BadDescriptorException ex ThrowStatement MethodInvocation MethodInvocation newErrnoEBADFError getRuntime LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation RubyNumeric MemberReference arg0 num2int IfStatement BinaryOperation < MemberReference length Literal 0 BlockStatement ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + Literal "negative length " MemberReference length Literal " given" newArgumentError getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str Literal null IfStatement MethodInvocation arg1 isNil BlockStatement BlockStatement StatementExpression Assignment MemberReference str MethodInvocation arg1 convertToString = StatementExpression MethodInvocation str MemberReference length modify IfStatement BinaryOperation == MemberReference length Literal 0 BlockStatement ReturnStatement MemberReference str ReturnStatement MethodInvocation MemberReference context MemberReference myOpenFile MemberReference length MemberReference str readNotAll	1
MethodDeclaration Modifier public static ReferenceType File listRoots ReturnStatement ArrayCreator ReferenceType File Literal 0	0
MethodDeclaration Modifier public ReferenceType Object case213_line860 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Literal "<" Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation getPosition getOperatorCallNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public put FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType StructLayout ReferenceType Storage cache FormalParameter ReferenceType IRubyObject ptr FormalParameter ReferenceType IRubyObject value IfStatement BinaryOperation instanceof MemberReference value ReferenceType Pointer BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference ptr getOffset Cast ReferenceType Pointer MemberReference value putMemoryIO MemberReference ptr getMemoryIO IfStatement BinaryOperation instanceof MemberReference value ReferenceType Struct BlockStatement LocalVariableDeclaration ReferenceType MemoryIO VariableDeclarator mem Cast ReferenceType Struct MemberReference value IfStatement BinaryOperation instanceof MemberReference mem ReferenceType DirectMemoryIO BlockStatement ThrowStatement MethodInvocation runtime Literal "Struct memory not backed by a native newArgumentError StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference ptr getOffset MemberReference mem putMemoryIO MemberReference ptr getMemoryIO IfStatement BinaryOperation instanceof MemberReference value ReferenceType RubyInteger BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference offset MethodInvocation Util MemberReference ptr int64Value putAddress MemberReference ptr getMemoryIO IfStatement MethodInvocation value Literal "to_ptr" respondsTo BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator addr MethodInvocation value MethodInvocation runtime getCurrentContext Literal "to_ptr" callMethod IfStatement BinaryOperation instanceof MemberReference addr ReferenceType Pointer BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference offset Cast ReferenceType Pointer MemberReference addr putMemoryIO MemberReference ptr getMemoryIO BlockStatement ThrowStatement MethodInvocation runtime Literal "Invalid pointer value" newArgumentError IfStatement MethodInvocation value isNil BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference offset Literal 0L putAddress MemberReference ptr getMemoryIO BlockStatement ThrowStatement MethodInvocation runtime Literal "Invalid pointer value" newArgumentError StatementExpression MethodInvocation cache This MemberReference value putReference	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MemberReference EMPTY_LIST	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "+" ElementValuePair backtrace Literal true ReferenceType IRubyObject op_plus FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator arrayClass MethodInvocation JavaClass MethodInvocation context getRuntime MethodInvocation MethodInvocation getComponentType getJavaArray get IfStatement BinaryOperation instanceof MemberReference other ReferenceType ArrayJavaProxy BlockStatement LocalVariableDeclaration ReferenceType JavaArray VariableDeclarator otherArray Cast ReferenceType ArrayJavaProxy MemberReference other IfStatement MethodInvocation MethodInvocation getComponentType MethodInvocation MethodInvocation otherArray getComponentType isAssignableFrom getJavaArray BlockStatement ReturnStatement MethodInvocation arrayClass MemberReference context MethodInvocation getJavaArray MemberReference otherArray concatArrays ReturnStatement MethodInvocation arrayClass MemberReference context MethodInvocation getJavaArray MemberReference other concatArrays	1
MethodDeclaration Modifier public testFormatPaddingBlank LocalVariableDeclaration ReferenceType TimeOutputFormatter VariableDeclarator formatter MethodInvocation TimeOutputFormatter Literal getFormatter StatementExpression MethodInvocation Literal " up" MethodInvocation formatter Literal "up" format assertEquals	0
MethodDeclaration Modifier public compileAssignment FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr SwitchStatement MethodInvocation node getNodeType SwitchStatementCase ATTRASSIGNNODE StatementExpression MethodInvocation MemberReference node MemberReference context MemberReference expr compileAttrAssignAssignment BreakStatement SwitchStatementCase DASGNNODE LocalVariableDeclaration ReferenceType DAsgnNode VariableDeclarator dasgnNode Cast ReferenceType DAsgnNode MemberReference node StatementExpression MethodInvocation context MethodInvocation MethodInvocation dasgnNode getIndex MethodInvocation dasgnNode getDepth MemberReference expr assignLocalVariable getVariableCompiler BreakStatement SwitchStatementCase CLASSVARASGNNODE StatementExpression MethodInvocation MemberReference node MemberReference context MemberReference expr compileClassVarAsgnAssignment BreakStatement SwitchStatementCase CLASSVARDECLNODE StatementExpression MethodInvocation MemberReference node MemberReference context MemberReference expr compileClassVarDeclAssignment BreakStatement SwitchStatementCase CONSTDECLNODE StatementExpression MethodInvocation MemberReference node MemberReference context MemberReference expr compileConstDeclAssignment BreakStatement SwitchStatementCase GLOBALASGNNODE StatementExpression MethodInvocation MemberReference node MemberReference context MemberReference expr compileGlobalAsgnAssignment BreakStatement SwitchStatementCase INSTASGNNODE StatementExpression MethodInvocation MemberReference node MemberReference context MemberReference expr compileInstAsgnAssignment BreakStatement SwitchStatementCase LOCALASGNNODE LocalVariableDeclaration ReferenceType LocalAsgnNode VariableDeclarator localAsgnNode Cast ReferenceType LocalAsgnNode MemberReference node StatementExpression MethodInvocation context MethodInvocation MethodInvocation localAsgnNode getIndex MethodInvocation localAsgnNode getDepth MemberReference expr assignLocalVariable getVariableCompiler BreakStatement SwitchStatementCase MULTIPLEASGNNODE StatementExpression MethodInvocation MemberReference node MemberReference context MemberReference expr BreakStatement SwitchStatementCase ZEROARGNODE ThrowStatement ClassCreator ReferenceType NotCompilableException BinaryOperation + Literal "Shouldn't get here; zeroarg does not do assignment: " MemberReference node SwitchStatementCase ThrowStatement ClassCreator ReferenceType NotCompilableException BinaryOperation + Literal "Can't compile assignment node: " MemberReference node	0
MethodDeclaration Modifier private static populateFields FormalParameter ReferenceType RubyModule rubyMod FormalParameter Modifier final ReferenceType Class cls RaiseException SecurityException LocalVariableDeclaration ReferenceType Ruby VariableDeclarator ruby MethodInvocation rubyMod getRuntime LocalVariableDeclaration ReferenceType Field VariableDeclarator fields MethodInvocation cls getDeclaredFields ForStatement EnhancedForControl VariableDeclaration ReferenceType Field VariableDeclarator field MemberReference fields BlockStatement IfStatement BinaryOperation && BinaryOperation && MethodInvocation Modifier MethodInvocation field getModifiers isStatic MethodInvocation Modifier MethodInvocation field getModifiers isPublic MethodInvocation IdUtil MethodInvocation field getName isConstant BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator value Literal null TryStatement StatementExpression Assignment MemberReference value MethodInvocation field Literal null get = CatchClause CatchClauseParameter Exception e ThrowStatement MethodInvocation ruby BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not access field " MethodInvocation cls getCanonicalName Literal "::" MethodInvocation field getName Literal " using " MethodInvocation MethodInvocation field getType ci newTypeError StatementExpression MethodInvocation rubyMod MethodInvocation field getName ClassCreator ReferenceType JavaObjectWrapper Cast ReferenceType RubyClass MethodInvocation MemberReference ruby MethodInvocation value getClass getMirrorForClass MemberReference value defineConstant	1
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context Literal pushString	0
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public ReferenceType Object case11_line336 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType VAliasNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private BasicType boolean packedContains FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator table MemberReference packedVTable LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation name hashCode ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference vTableSize MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator n Cast ReferenceType String MemberReference ArraySelector MemberReference i table IfStatement BinaryOperation && BinaryOperation == MethodInvocation n hashCode MemberReference hash MethodInvocation name MemberReference n equals ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "each_pair" ElementValuePair frame Literal true ReferenceType IRubyObject each_pair19 FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block each_pair MethodInvocation MethodInvocation context getRuntime This Literal "each_pair" enumeratorize	1
MethodDeclaration Modifier public BasicType int hashCode LocalVariableDeclaration BasicType int VariableDeclarator code Literal 0 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation entryIterator WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference code MethodInvocation it MethodInvocation hashCode next += ReturnStatement MemberReference code	0
MethodDeclaration Modifier public BasicType boolean isTracing ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject setsockopt FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject lev FormalParameter ReferenceType IRubyObject optname FormalParameter ReferenceType IRubyObject val LocalVariableDeclaration BasicType int VariableDeclarator level MethodInvocation RubyNumeric MemberReference lev fix2int LocalVariableDeclaration BasicType int VariableDeclarator opt MethodInvocation RubyNumeric MemberReference optname fix2int TryStatement SwitchStatement MethodInvocation SocketLevel MemberReference level valueOf SwitchStatementCase SOL_IP SOL_TCP SOL_UDP SwitchStatement MethodInvocation SocketOption MemberReference opt valueOf SwitchStatementCase SO_BROADCAST StatementExpression MethodInvocation MemberReference val setBroadcast BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference val BreakStatement SwitchStatementCase SO_LINGER StatementExpression MethodInvocation MemberReference val setLinger BreakStatement SwitchStatementCase SO_OOBINLINE StatementExpression MethodInvocation MemberReference val BreakStatement SwitchStatementCase SO_RCVBUF StatementExpression MethodInvocation MemberReference val setRcvBuf BreakStatement SwitchStatementCase SO_REUSEADDR StatementExpression MethodInvocation MemberReference val setReuseAddr BreakStatement SwitchStatementCase SO_SNDBUF StatementExpression MethodInvocation MemberReference val setSndBuf BreakStatement SwitchStatementCase SO_RCVTIMEO SO_SNDTIMEO StatementExpression MethodInvocation MemberReference val setTimeout BreakStatement SwitchStatementCase SO_TYPE SO_RCVLOWAT SO_SNDLOWAT SO_DEBUG SO_ERROR SO_DONTROUTE SO_TIMESTAMP BreakStatement SwitchStatementCase IfStatement BinaryOperation && BinaryOperation == MethodInvocation value MemberReference level BinaryOperation == MethodInvocation TCP_NODELAY value MemberReference opt BlockStatement StatementExpression MethodInvocation MemberReference val setTcpNoDelay BlockStatement ThrowStatement MethodInvocation context MethodInvocation newErrnoENOPROTOOPTError getRuntime BreakStatement SwitchStatementCase IfStatement BinaryOperation && BinaryOperation == MethodInvocation value MemberReference level BinaryOperation == MethodInvocation TCP_NODELAY value MemberReference opt BlockStatement StatementExpression MethodInvocation MemberReference val setTcpNoDelay BlockStatement ThrowStatement MethodInvocation context MethodInvocation newErrnoENOPROTOOPTError getRuntime CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation context MethodInvocation newErrnoENOPROTOOPTError getRuntime ReturnStatement MethodInvocation context MethodInvocation Literal 0 newFixnum getRuntime	0
MethodDeclaration Modifier private static ReferenceType ByteList FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteList bytes FormalParameter ReferenceType Encoding enc FormalParameter BasicType int options ReturnStatement MethodInvocation MemberReference runtime MemberReference bytes bytes MemberReference bytes begin MemberReference bytes realSize MemberReference enc MemberReference options	0
MethodDeclaration Modifier public static ReferenceType Test suite Exception ReturnStatement ClassCreator ReferenceType TestUnitTestSuite MemberReference	0
MethodDeclaration Modifier private static FormalParameter ReferenceType ByteList result FormalParameter BasicType float f StatementExpression MethodInvocation MemberReference result MethodInvocation Float MemberReference f encodeIntBigEndian	0
MethodDeclaration Modifier public ReferenceType Object convert FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyObject ReturnStatement MethodInvocation rubyObject ClassReference ReferenceType Float toJava	0
MethodDeclaration Modifier public BasicType int getLine ReturnStatement MemberReference line	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "[]" Literal "slice" ElementValuePair reads MemberReference BACKREF ElementValuePair writes MemberReference BACKREF ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject op_aref FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyFixnum BlockStatement ReturnStatement MethodInvocation MemberReference runtime MethodInvocation RubyFixnum Cast ReferenceType RubyFixnum MemberReference arg fix2int op_aref IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyRegexp BlockStatement ReturnStatement MethodInvocation MemberReference runtime MemberReference context Cast ReferenceType RubyRegexp MemberReference arg Literal 0 subpat IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyString BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str Cast ReferenceType RubyString MemberReference arg ReturnStatement TernaryExpression BinaryOperation != MethodInvocation value MemberReference str value indexOf Literal - 1 MethodInvocation str MemberReference runtime strDup MethodInvocation runtime getNil IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyRange BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator begLen Cast ReferenceType RubyRange MemberReference arg ReturnStatement TernaryExpression BinaryOperation == MemberReference begLen Literal null MethodInvocation runtime getNil MethodInvocation MemberReference runtime MemberReference ArraySelector Literal 0 begLen MemberReference ArraySelector Literal 1 begLen substr ReturnStatement MethodInvocation MemberReference runtime MethodInvocation RubyFixnum MemberReference arg num2int op_aref	1
MethodDeclaration Modifier public ReferenceType Object case364_line1369 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Literal null = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private static ReferenceType Arity newArity FormalParameter BasicType int value LocalVariableDeclaration ReferenceType Arity VariableDeclarator result SynchronizedStatement MemberReference arities StatementExpression Assignment MemberReference result MethodInvocation arities MemberReference value get = IfStatement BinaryOperation == MemberReference result Literal null BlockStatement StatementExpression Assignment MemberReference result ClassCreator ReferenceType Arity MemberReference value = StatementExpression MethodInvocation arities MemberReference value MemberReference result put ReturnStatement MemberReference result	1
MethodDeclaration Modifier public StatementExpression MethodInvocation	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject sysaccept ReturnStatement MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime accept	1
MethodDeclaration Modifier public setSelf FormalParameter ReferenceType IRubyObject self StatementExpression Assignment This MemberReference self MemberReference self =	0
MethodDeclaration Modifier public ReferenceType Object case321_line1231 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType IfNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getConditionNode Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType int getPriority ReturnStatement Literal 1	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject fdiv FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation RuntimeHelpers MemberReference context This MethodInvocation Literal "/" MemberReference other invoke	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "sync=" ElementValuePair required Literal 1 ReferenceType IRubyObject sync_set FormalParameter ReferenceType IRubyObject newSync StatementExpression MethodInvocation MethodInvocation MethodInvocation newSync isTrue setSync getOpenFileChecked StatementExpression MethodInvocation MethodInvocation getMainStream MethodInvocation MethodInvocation newSync isTrue setSync getOpenFileChecked ReturnStatement This	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "join" ReferenceType IRubyObject join FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject sep LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == MemberReference realLength Literal 0 ReturnStatement MethodInvocation RubyString MemberReference runtime newEmptyString LocalVariableDeclaration BasicType boolean VariableDeclarator taint BinaryOperation || MethodInvocation isTaint MethodInvocation sep isTaint LocalVariableDeclaration BasicType boolean VariableDeclarator untrusted BinaryOperation || MethodInvocation isUntrusted MethodInvocation sep isUntrusted LocalVariableDeclaration BasicType int VariableDeclarator len Literal 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference begin BinaryOperation < MemberReference i BinaryOperation + MemberReference begin MemberReference realLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value TryStatement StatementExpression Assignment MemberReference value MemberReference ArraySelector MemberReference i values = IfStatement BinaryOperation && MethodInvocation runtime is1_9 MethodInvocation MemberReference context This MemberReference value equalInternal BlockStatement ThrowStatement MethodInvocation runtime Literal "recursive array join" newArgumentError CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification ReturnStatement MethodInvocation RubyString MemberReference runtime newEmptyString LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation value checkStringType StatementExpression Assignment MemberReference len TernaryExpression MethodInvocation tmp isNil Literal 10 Cast ReferenceType RubyString MemberReference tmp += LocalVariableDeclaration ReferenceType ByteList VariableDeclarator sepBytes Literal null IfStatement MethodInvocation ! sep isNil BlockStatement StatementExpression Assignment MemberReference sepBytes MethodInvocation sep MethodInvocation getByteList convertToString = StatementExpression Assignment MemberReference len BinaryOperation * MemberReference sepBytes realSize BinaryOperation - MemberReference realLength Literal 1 += LocalVariableDeclaration ReferenceType ByteList VariableDeclarator buf ClassCreator ReferenceType ByteList MemberReference len ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference realLength MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp TryStatement StatementExpression Assignment MemberReference tmp MemberReference ArraySelector BinaryOperation + MemberReference begin MemberReference i values = CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification ReturnStatement MethodInvocation RubyString MemberReference runtime newEmptyString IfStatement BinaryOperation instanceof MemberReference tmp ReferenceType RubyString BlockStatement IfStatement BinaryOperation instanceof MemberReference tmp ReferenceType RubyArray BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference tmp This MethodInvocation runtime MemberReference tmp isInspecting BlockStatement StatementExpression Assignment MemberReference tmp MethodInvocation runtime Literal "[...]" newString = BlockStatement StatementExpression Assignment MemberReference tmp MethodInvocation MemberReference context Cast ReferenceType RubyArray MemberReference tmp MemberReference sep inspectJoin = BlockStatement StatementExpression Assignment MemberReference tmp MethodInvocation RubyString MemberReference context MemberReference tmp objAsString = IfStatement BinaryOperation && BinaryOperation > MemberReference i Literal 0 BinaryOperation != MemberReference sepBytes Literal null StatementExpression MethodInvocation buf MemberReference sepBytes append StatementExpression MethodInvocation buf MethodInvocation tmp MethodInvocation getByteList asString append IfStatement MethodInvocation tmp isTaint StatementExpression Assignment MemberReference taint Literal true = IfStatement MethodInvocation tmp isUntrusted StatementExpression Assignment MemberReference untrusted Literal true = LocalVariableDeclaration ReferenceType RubyString VariableDeclarator result MethodInvocation runtime MemberReference buf newString IfStatement MemberReference taint StatementExpression MethodInvocation result Literal true setTaint IfStatement MemberReference untrusted StatementExpression MethodInvocation result MemberReference context untrust ReturnStatement MemberReference result	1
MethodDeclaration Modifier public if_icmpgt FormalParameter ReferenceType Label arg0 StatementExpression MethodInvocation MethodInvocation MemberReference IF_ICMPGT MemberReference arg0 visitJumpInsn getMethodVisitor	1
MethodDeclaration Modifier final public static BasicType byte FormalParameter BasicType byte in FormalParameter BasicType int shift FormalParameter BasicType boolean upper IfStatement BinaryOperation || BinaryOperation < MemberReference shift Literal 1 BinaryOperation > MemberReference shift Literal 4 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "shift value must be 1-4" LocalVariableDeclaration BasicType int VariableDeclarator ilen MemberReference in length LocalVariableDeclaration BasicType int VariableDeclarator olen BinaryOperation / BinaryOperation - BinaryOperation + BinaryOperation * MemberReference ilen Literal 8 MemberReference shift Literal 1 MemberReference shift LocalVariableDeclaration BasicType byte VariableDeclarator out ArrayCreator BasicType byte MemberReference olen LocalVariableDeclaration BasicType int VariableDeclarator mask BinaryOperation - BinaryOperation << Literal 1 MemberReference shift Literal 1 LocalVariableDeclaration BasicType byte VariableDeclarator digits TernaryExpression MemberReference upper MemberReference UPPER_DIGITS MemberReference LOWER_DIGITS LocalVariableDeclaration BasicType int VariableDeclarator bitbuf Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator bitcnt Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference ilen VariableDeclarator o MemberReference olen BinaryOperation >= MemberReference -- o Literal 0 BlockStatement IfStatement BinaryOperation < MemberReference bitcnt MemberReference shift BlockStatement StatementExpression Assignment MemberReference bitbuf BinaryOperation << BinaryOperation & Cast BasicType int MemberReference ArraySelector MemberReference -- i in Cast BasicType int Literal 0xff MemberReference bitcnt |= StatementExpression Assignment MemberReference bitcnt Literal 8 += StatementExpression Assignment MemberReference ArraySelector MemberReference o out MemberReference ArraySelector BinaryOperation & MemberReference bitbuf MemberReference mask digits = StatementExpression Assignment MemberReference bitbuf MemberReference shift >>= StatementExpression Assignment MemberReference bitcnt MemberReference shift -= ReturnStatement MemberReference out	1
MethodDeclaration Modifier public ReferenceType LoadService create FormalParameter ReferenceType Ruby runtime StatementExpression Assignment MemberReference ArraySelector Literal 0 called Literal true = ReturnStatement ClassCreator ReferenceType NullLoadService MemberReference runtime	0
MethodDeclaration Modifier public Annotation Override BasicType double ReturnStatement MemberReference value	0
MethodDeclaration Modifier public ReferenceType IRubyObject finvoke FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation MemberReference name searchMethod IfStatement MethodInvocation MemberReference method BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference name MemberReference CallType FUNCTIONAL MemberReference arg0 MemberReference arg1 MemberReference Block NULL_BLOCK callMethodMissing ReturnStatement MethodInvocation method MemberReference context MemberReference self This MemberReference name MemberReference arg0 MemberReference arg1 call	0
MethodDeclaration Modifier public final ReferenceType RubyString FormalParameter ReferenceType Ruby runtime ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 1 getString	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject flatten FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator result ClassCreator ReferenceType RubyArray MemberReference runtime MethodInvocation getMetaClass MemberReference realLength StatementExpression MethodInvocation MemberReference context Literal - 1 MemberReference result flatten StatementExpression MethodInvocation result This infectBy ReturnStatement MemberReference result	0
MethodDeclaration Modifier public setPosition FormalParameter ReferenceType ISourcePosition position StatementExpression Assignment This MemberReference position MemberReference position =	0
MethodDeclaration Modifier private ReferenceType IRubyObject callMethodMissing FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType DynamicMethod method FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MemberReference context MemberReference self MethodInvocation self getMetaClass MemberReference methodName MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference Block NULL_BLOCK call MemberReference context MemberReference self MethodInvocation method getVisibility MemberReference methodName MemberReference callType	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "find_index" ElementValuePair frame Literal true ReferenceType IRubyObject find_index FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation ! block isGiven ReturnStatement MethodInvocation MemberReference runtime MemberReference self Literal "find_index" enumeratorize LocalVariableDeclaration Modifier final BasicType long VariableDeclarator result ArrayCreator BasicType long ArrayInitializer Literal 0 TryStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation block MethodInvocation isTrue MemberReference ctx MemberReference larg yield ThrowStatement MemberReference JumpException SPECIAL_JUMP StatementExpression MemberReference ++ ArraySelector Literal 0 result ReturnStatement MethodInvocation runtime getNil callEach CatchClause CatchClauseParameter JumpException.SpecialJump sj ReturnStatement MethodInvocation RubyFixnum MemberReference runtime MemberReference ArraySelector Literal 0 result newFixnum ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public static ReferenceType String getArgumentDefinition FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Node node FormalParameter ReferenceType String type FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block IfStatement BinaryOperation == MemberReference node Literal null ReturnStatement MemberReference type IfStatement BinaryOperation instanceof MemberReference node ReferenceType ArrayNode BlockStatement LocalVariableDeclaration ReferenceType ArrayNode VariableDeclarator list Cast ReferenceType ArrayNode MemberReference node LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation list size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation list MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block MemberReference i get Literal null ReturnStatement Literal null IfStatement BinaryOperation == MethodInvocation node MemberReference runtime MemberReference context MemberReference self MemberReference block Literal null BlockStatement ReturnStatement Literal null ReturnStatement MemberReference type	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "bytes" ElementValuePair optional Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject bytes FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference recv MemberReference block each_byte MethodInvocation MethodInvocation context getRuntime MemberReference recv Literal "bytes" enumeratorize	0
MethodDeclaration Modifier public final put FormalParameter BasicType long offset FormalParameter BasicType long src FormalParameter BasicType int off FormalParameter BasicType int len ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier private ReferenceType Long createId FormalParameter ReferenceType IRubyObject object StatementExpression MethodInvocation cleanIdentities StatementExpression Assignment MemberReference maxId Literal 2 += LocalVariableDeclaration ReferenceType Long VariableDeclarator longMaxId ClassCreator ReferenceType Long MemberReference maxId StatementExpression MethodInvocation identities MemberReference longMaxId ClassCreator ReferenceType IdReference MemberReference object MemberReference maxId MemberReference deadIdentityReferences put StatementExpression MethodInvocation identitiesByObject MemberReference object MemberReference longMaxId put ReturnStatement MemberReference longMaxId	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation body MemberReference context MemberReference binding MemberReference type	0
MethodDeclaration Modifier final public static putArrayOfUnsigned8 FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter ReferenceType RubyArray ary LocalVariableDeclaration BasicType byte VariableDeclarator array ArrayCreator BasicType byte MethodInvocation ary size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference array length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i array Cast BasicType byte MethodInvocation Util MethodInvocation ary MemberReference i entry uint8Value = StatementExpression MethodInvocation io MemberReference offset MemberReference array Literal 0 MemberReference array length put	1
MethodDeclaration Modifier public unread FormalParameter BasicType int c IfStatement BinaryOperation == MemberReference c MemberReference RubyYaccLexer EOF ReturnStatement StatementExpression MethodInvocation retreat IfStatement BinaryOperation == MemberReference c Literal '\n' StatementExpression MemberReference -- line StatementExpression Assignment MemberReference ArraySelector MemberReference ++ bufLength buf Cast BasicType char MemberReference c = StatementExpression MethodInvocation growBuf	1
MethodDeclaration Modifier public BasicType boolean isStaticCallTarget ReturnStatement Literal true	0
MethodDeclaration Modifier final public static ReferenceType IRubyObject checkData FormalParameter ReferenceType IRubyObject obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType org ReferenceType jruby ReferenceType runtime ReferenceType marshal ReferenceType DataType BlockStatement ReturnStatement MemberReference obj LocalVariableDeclaration ReferenceType String VariableDeclarator type IfStatement MethodInvocation obj isNil BlockStatement StatementExpression Assignment MemberReference type Literal = IfStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyBoolean BlockStatement StatementExpression Assignment MemberReference type TernaryExpression MethodInvocation obj isTrue Literal "true" Literal "false" = BlockStatement StatementExpression Assignment MemberReference type MethodInvocation obj MethodInvocation getRealClass MethodInvocation getName getMetaClass = ThrowStatement MethodInvocation obj MethodInvocation BinaryOperation + BinaryOperation + Literal "wrong argument type " MemberReference type Literal " (expected newTypeError getRuntime	0
MethodDeclaration Modifier public ReferenceType Arity getArity ReturnStatement MethodInvocation Arity optional	0
MethodDeclaration Modifier protected ReferenceType String getNodeName LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation MethodInvocation getName getClass LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation name Literal '.' lastIndexOf LocalVariableDeclaration ReferenceType String VariableDeclarator nodeType MethodInvocation name BinaryOperation + MemberReference i Literal 1 substring ReturnStatement MemberReference nodeType	1
MethodDeclaration Modifier public ReferenceType GeneratorAdapter method ReturnStatement MethodInvocation MemberReference method methodData	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "to_sym" Literal "intern" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType RubySymbol intern IfStatement BinaryOperation == MemberReference value realSize Literal 0 ThrowStatement MethodInvocation MethodInvocation Literal "interning empty string" newArgumentError getRuntime ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference value realSize MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference value ArraySelector BinaryOperation + MemberReference value begin MemberReference i bytes Literal 0 ThrowStatement MethodInvocation MethodInvocation Literal "symbol string may not contain '\\0'" newArgumentError getRuntime ReturnStatement MethodInvocation to_sym	1
MethodDeclaration Modifier protected BasicType boolean swallow FormalParameter BasicType int term IOException BadDescriptorException LocalVariableDeclaration ReferenceType Stream VariableDeclarator readStream MethodInvocation openFile getMainStream LocalVariableDeclaration BasicType int VariableDeclarator c DoStatement BinaryOperation != MemberReference c Literal - 1 BlockStatement StatementExpression MethodInvocation MemberReference readStream readCheck TryStatement StatementExpression Assignment MemberReference c MethodInvocation readStream fgetc = CatchClause CatchClauseParameter EOFException e StatementExpression Assignment MemberReference c Literal - 1 = IfStatement BinaryOperation != MemberReference c MemberReference term BlockStatement StatementExpression MethodInvocation readStream MemberReference c ungetc ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Node getValue ReturnStatement MemberReference node	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference name MemberReference self MemberReference block MemberReference runtime pre StatementExpression MethodInvocation argsNode MemberReference runtime Literal 7 checkArgCount StatementExpression MethodInvocation argsNode MemberReference context MemberReference runtime MemberReference self MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference block prepare ReturnStatement MethodInvocation body MemberReference runtime MemberReference context MemberReference self MemberReference block CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter JumpException.RedoJump rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isKindOf FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyComplex	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType COLON3NODE	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "[]" ElementValuePair rest Literal true ElementValuePair backtrace Literal true ReferenceType IRubyObject op_aref FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject args IfStatement BinaryOperation == MemberReference args length Literal 0 BlockStatement ReturnStatement MethodInvocation JavaUtilities MemberReference self Cast ReferenceType JavaClass MethodInvocation RuntimeHelpers MemberReference context MemberReference self Literal "java_class" invoke get_proxy_class BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator arrayJavaProxyCreator MethodInvocation context MethodInvocation Literal "ArrayJavaProxyCreator" getClass getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator newArgs ArrayCreator ReferenceType IRubyObject BinaryOperation + MemberReference args length Literal 1 StatementExpression MethodInvocation System MemberReference args Literal 0 MemberReference newArgs Literal 1 MemberReference args length arraycopy StatementExpression Assignment MemberReference ArraySelector Literal 0 newArgs MethodInvocation RuntimeHelpers MemberReference context MemberReference self Literal "java_class" invoke = ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference arrayJavaProxyCreator Literal "new" MemberReference newArgs invoke	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject connect FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject host FormalParameter ReferenceType IRubyObject port TryStatement LocalVariableDeclaration ReferenceType InetSocketAddress VariableDeclarator addr StatementExpression Assignment MemberReference addr ClassCreator ReferenceType InetSocketAddress MethodInvocation InetAddress MethodInvocation host MethodInvocation toString convertToString getByName MethodInvocation RubyNumeric MemberReference port fix2int = StatementExpression Cast ReferenceType DatagramChannel This MethodInvocation getChannel ReturnStatement MethodInvocation RubyFixnum MethodInvocation context getRuntime zero CatchClause CatchClauseParameter UnknownHostException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "connect: name or service not known" sockerr CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "connect: name or service not known" sockerr	1
MethodDeclaration Modifier public ReferenceType Variable getNewVariable ReturnStatement MethodInvocation Literal "%v_" getNewVariable	0
MethodDeclaration Modifier public Annotation Override ReferenceType RubyModule getNonIncludedClass ReturnStatement MemberReference	0
MethodDeclaration * private class OpElementAsgnArgumentsCallback implements ArgumentsCallback * private Node * public node) * = * * public int * switch (node.getNodeType()) * case * case * case * return * case * ArrayNode arrayNode = * if (arrayNode.size() == 0) * return * } else if (arrayNode.size() > 3) * return * } else * return * * * return * * * public void call(IR_Scope m) * if == * // if arity 1, just build the one element to save us the array * * } else * // build into * * * * * public Operand node, IR_Scope m) * final OpElementAsgnNode opElementAsgnNode = (OpElementAsgnNode) * CompilerCallback receiverCallback = new * public void call(IR_Scope m) * build(opElementAsgnNode.getReceiverNode(), * * * ArgumentsCallback argsCallback = new * CompilerCallback valueCallback = new * public void call(IR_Scope m) * build(opElementAsgnNode.getValueNode(), m, * * * argsCallback, * // TODO: don't require * if (!expr) * * public Operand node, IR_Scope m) * final OpElementAsgnNode opElementAsgnNode = (OpElementAsgnNode) * CompilerCallback receiverCallback = new * public void call(IR_Scope m) * build(opElementAsgnNode.getReceiverNode(), * * * ArgumentsCallback argsCallback = new * CompilerCallback valueCallback = new * public void call(IR_Scope m) * build(opElementAsgnNode.getValueNode(), * * * argsCallback, * * public Operand buildOpElementAsgnWithMethod(Node node, IR_Scope m) * final OpElementAsgnNode opElementAsgnNode = (OpElementAsgnNode) * CompilerCallback receiverCallback = new * public void call(IR_Scope m) * build(opElementAsgnNode.getReceiverNode(), * * * ArgumentsCallback argsCallback = * CompilerCallback valueCallback = new * public void call(IR_Scope m) * build(opElementAsgnNode.getValueNode(), * * * argsCallback, * */ Modifier public ReferenceType Operand buildOr FormalParameter Modifier final ReferenceType OrNode orNode FormalParameter ReferenceType IR_Scope m IfStatement MethodInvocation orNode MethodInvocation getNodeType MethodInvocation alwaysTrue getFirstNode BlockStatement StatementExpression MethodInvocation MethodInvocation orNode getFirstNode MemberReference m build ReturnStatement MemberReference BooleanLiteral TRUE IfStatement MethodInvocation orNode MethodInvocation getNodeType MethodInvocation alwaysFalse getFirstNode BlockStatement StatementExpression MethodInvocation MethodInvocation orNode getFirstNode MemberReference m build ReturnStatement MethodInvocation MethodInvocation orNode getSecondNode MemberReference m build BlockStatement LocalVariableDeclaration ReferenceType Variable VariableDeclarator ret MethodInvocation m getNewVariable LocalVariableDeclaration ReferenceType Label VariableDeclarator l MethodInvocation m getNewLabel LocalVariableDeclaration ReferenceType Operand VariableDeclarator v1 MethodInvocation MethodInvocation orNode getFirstNode MemberReference m build StatementExpression MethodInvocation m ClassCreator ReferenceType COPY_Instr MemberReference ret MemberReference BooleanLiteral TRUE addInstr StatementExpression MethodInvocation m ClassCreator ReferenceType BEQ_Instr MemberReference v1 MemberReference BooleanLiteral TRUE MemberReference l addInstr LocalVariableDeclaration ReferenceType Operand VariableDeclarator v2 MethodInvocation MethodInvocation orNode getSecondNode MemberReference m build StatementExpression MethodInvocation m ClassCreator ReferenceType COPY_Instr MemberReference ret MemberReference v2 addInstr StatementExpression MethodInvocation m ClassCreator ReferenceType LABEL_Instr MemberReference l addInstr ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public ReferenceType Object case106_line688 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private createSysErr FormalParameter BasicType int i FormalParameter ReferenceType String name IfStatement MethodInvocation profile MemberReference name allowClass BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator errno MethodInvocation MethodInvocation MemberReference name MemberReference MethodInvocation getAllocator defineClassUnder getErrno StatementExpression MethodInvocation errnos MemberReference i MemberReference errno put StatementExpression MethodInvocation errno Literal MethodInvocation MemberReference i newFixnum defineConstant	0
MethodDeclaration Modifier public ReferenceType RubyModule getEnclosingModule FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ReturnStatement MethodInvocation runtime getObject	0
MethodDeclaration Modifier public invokevirtual FormalParameter ReferenceType String arg1 FormalParameter ReferenceType String arg2 FormalParameter ReferenceType String arg3 StatementExpression MethodInvocation MethodInvocation MemberReference INVOKEVIRTUAL MemberReference arg1 MemberReference arg2 MemberReference arg3 visitMethodInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType Operand buildNot FormalParameter ReferenceType NotNode node FormalParameter ReferenceType IR_Scope m LocalVariableDeclaration ReferenceType Variable VariableDeclarator ret MethodInvocation m getNewVariable StatementExpression MethodInvocation m ClassCreator ReferenceType MemberReference Operation NOT MemberReference ret MethodInvocation MethodInvocation node getConditionNode MemberReference m build addInstr ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "exclude_end?" ReferenceType RubyBoolean exclude_end_p ReturnStatement MethodInvocation MethodInvocation MemberReference isExclusive newBoolean getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "!=" ElementValuePair required Literal 1 ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_not_equal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation context MethodInvocation MethodInvocation ! MethodInvocation isTrue MemberReference context MemberReference other op_equal newBoolean getRuntime	1
MethodDeclaration Modifier public static ReferenceType Process run FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject string IOException ReturnStatement MethodInvocation MemberReference runtime ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference string run	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType JavaFileStat VariableDeclarator fs ClassCreator ReferenceType JavaFileStat Literal null Literal null IfStatement MemberReference Platform IS_WINDOWS BlockStatement StatementExpression MethodInvocation fs Literal "c:/" setup BlockStatement StatementExpression MethodInvocation fs Literal "/" setup StatementExpression MethodInvocation MethodInvocation fs isSymlink assertFalse	0
MethodDeclaration Modifier public static ReferenceType RubyClass createMatchDataClass FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator matchDataClass MethodInvocation runtime Literal "MatchData" MethodInvocation runtime getObject MemberReference defineClass StatementExpression MethodInvocation runtime MemberReference matchDataClass setMatchData StatementExpression MethodInvocation runtime Literal "MatchingData" MemberReference matchDataClass defineGlobalConstant StatementExpression Assignment MemberReference matchDataClass ClassCreator ReferenceType RubyModule ReferenceType MethodDeclaration Modifier public Annotation Override BasicType boolean isKindOf FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyMatchData = StatementExpression MethodInvocation matchDataClass MethodInvocation Literal "new" undefineMethod getMetaClass StatementExpression MethodInvocation matchDataClass ClassReference ReferenceType RubyMatchData defineAnnotatedMethods ReturnStatement MemberReference matchDataClass	0
MethodDeclaration Modifier public BasicType boolean feof IOException BadDescriptorException StatementExpression MethodInvocation checkReadable IfStatement MemberReference eof BlockStatement ReturnStatement Literal true BlockStatement ReturnStatement Literal false	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "[]" ElementValuePair meta Literal true ElementValuePair rest Literal true ReferenceType IRubyObject op_aref FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator javaClass MethodInvocation RuntimeHelpers MemberReference context MemberReference recv Literal "java_class" invoke IfStatement BinaryOperation > MemberReference args length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator newArgs ArrayCreator ReferenceType IRubyObject BinaryOperation + MemberReference args length Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 newArgs MemberReference javaClass = StatementExpression MethodInvocation System MemberReference args Literal 0 MemberReference newArgs Literal 1 MemberReference args length arraycopy ReturnStatement MethodInvocation context MethodInvocation Literal "ArrayJavaProxyCreator" fastGetClass MethodInvocation MemberReference context MemberReference newArgs MemberReference Block NULL_BLOCK newInstance getRuntime BlockStatement ReturnStatement MethodInvocation Java MemberReference javaClass MethodInvocation RuntimeHelpers MemberReference context MemberReference javaClass Literal "array_class" invoke get_proxy_class	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator singletonClass IfStatement BinaryOperation || BinaryOperation instanceof MemberReference receiver ReferenceType RubyFixnum BinaryOperation instanceof MemberReference receiver ReferenceType RubySymbol BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "no virtual class for " MethodInvocation receiver MethodInvocation getBaseName getMetaClass newTypeError BlockStatement IfStatement BinaryOperation && BinaryOperation >= MethodInvocation runtime getSafeLevel Literal 4 MethodInvocation ! receiver isTaint BlockStatement ThrowStatement MethodInvocation runtime Literal "Insecure: can't extend object." newSecurityError StatementExpression Assignment MemberReference singletonClass MethodInvocation receiver getSingletonClass = StatementExpression MethodInvocation scope MemberReference singletonClass setModule ReturnStatement MethodInvocation ASTInterpreter MemberReference runtime MemberReference context MemberReference scope MemberReference bodyNode MemberReference singletonClass MemberReference self MemberReference aBlock evalClassDefinitionBody	0
MethodDeclaration Modifier public final putAddress FormalParameter BasicType byte buffer FormalParameter BasicType int offset FormalParameter BasicType long value StatementExpression MethodInvocation MemberReference buffer MemberReference offset Cast BasicType int MemberReference value putInt32	0
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public defineClass FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType staticScope FormalParameter Modifier final ReferenceType CompilerCallback superCallback FormalParameter Modifier final ReferenceType CompilerCallback pathCallback FormalParameter Modifier final ReferenceType CompilerCallback bodyCallback FormalParameter Modifier final ReferenceType CompilerCallback receiverCallback FormalParameter Modifier final ReferenceType ASTInspector inspector LocalVariableDeclaration ReferenceType String VariableDeclarator classMethodName Literal null IfStatement BinaryOperation == MemberReference receiverCallback Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator mangledName MethodInvocation JavaNameMangler MemberReference name mangleStringForCleanJavaIdentifier StatementExpression Assignment MemberReference classMethodName BinaryOperation + BinaryOperation + BinaryOperation + Literal "class_" MethodInvocation script Literal "$RUBY$" MemberReference mangledName = BlockStatement StatementExpression Assignment MemberReference classMethodName BinaryOperation + BinaryOperation + Literal "sclass_" MethodInvocation script Literal "$RUBY$__singleton__" = LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator classBody ClassCreator ReferenceType ClassBodyCompiler MemberReference script MemberReference classMethodName MemberReference inspector MemberReference staticScope LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator bodyPrep ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation == MemberReference receiverCallback Literal null BlockStatement IfStatement BinaryOperation != MemberReference superCallback Literal null BlockStatement StatementExpression MethodInvocation classBody StatementExpression MethodInvocation classBody.method MemberReference StandardASMCompiler SELF_INDEX aload StatementExpression MethodInvocation classBody Literal "prepareSuperClass" MethodInvocation ClassReference ReferenceType RubyClass MethodInvocation ClassReference ReferenceType Ruby ClassReference ReferenceType IRubyObject params sig invokeUtilityMethod BlockStatement StatementExpression MethodInvocation classBody.method aconst_null StatementExpression MethodInvocation classBody loadThreadContext StatementExpression MethodInvocation pathCallback MemberReference classBody call StatementExpression MethodInvocation classBody Literal MethodInvocation ClassReference ReferenceType RubyModule MethodInvocation ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject params sig invokeUtilityMethod StatementExpression MethodInvocation classBody.method swap StatementExpression MethodInvocation classBody.method MemberReference name ldc StatementExpression MethodInvocation classBody.method swap StatementExpression MethodInvocation classBody.method MethodInvocation ClassReference ReferenceType RubyModule p Literal "defineOrGetClassUnder" MethodInvocation ClassReference ReferenceType RubyClass MethodInvocation ClassReference ReferenceType String ClassReference ReferenceType RubyClass params sig invokevirtual BlockStatement StatementExpression MethodInvocation classBody StatementExpression MethodInvocation classBody.method MemberReference StandardASMCompiler SELF_INDEX aload LocalVariableDeclaration BasicType int VariableDeclarator selfTemp MethodInvocation classBody MethodInvocation grabTempLocal getVariableCompiler StatementExpression MethodInvocation classBody MethodInvocation MemberReference selfTemp setTempLocal getVariableCompiler StatementExpression MethodInvocation classBody.method MemberReference StandardASMCompiler SELF_INDEX aload StatementExpression MethodInvocation classBody Literal "getSingletonClass" MethodInvocation ClassReference ReferenceType RubyClass MethodInvocation ClassReference ReferenceType Ruby ClassReference ReferenceType IRubyObject params sig invokeUtilityMethod StatementExpression MethodInvocation classBody.method dup StatementExpression MethodInvocation classBody.method MemberReference StandardASMCompiler SELF_INDEX astore StatementExpression MethodInvocation classBody loadThreadContext StatementExpression MethodInvocation classBody.method swap StatementExpression MethodInvocation script MethodInvocation MemberReference classBody MemberReference staticScope getCacheCompiler IfStatement BinaryOperation || MethodInvocation inspector hasClosure MethodInvocation inspector hasScopeAwareMethods BlockStatement StatementExpression MethodInvocation classBody Literal MethodInvocation MemberReference Void TYPE MethodInvocation ClassReference ReferenceType RubyModule ClassReference ReferenceType params sig invokeThreadContext BlockStatement StatementExpression MethodInvocation classBody Literal MethodInvocation MemberReference Void TYPE MethodInvocation ClassReference ReferenceType RubyModule ClassReference ReferenceType params sig invokeThreadContext LocalVariableDeclaration ReferenceType Label VariableDeclarator start ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator end ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator after ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator noException ClassCreator ReferenceType Label StatementExpression MethodInvocation classBody.method MemberReference start MemberReference end MemberReference after Literal null trycatch StatementExpression MethodInvocation classBody MemberReference bodyPrep MemberReference staticScope beginMethod StatementExpression MethodInvocation classBody.method MemberReference start label StatementExpression MethodInvocation bodyCallback MemberReference classBody call StatementExpression MethodInvocation classBody.method MemberReference end label StatementExpression MethodInvocation classBody loadThreadContext StatementExpression MethodInvocation classBody Literal "postCompiledClass" MethodInvocation MemberReference Void TYPE MethodInvocation params sig invokeThreadContext StatementExpression MethodInvocation classBody.method MemberReference noException go_to StatementExpression MethodInvocation classBody.method MemberReference after label StatementExpression MethodInvocation classBody loadThreadContext StatementExpression MethodInvocation classBody Literal "postCompiledClass" MethodInvocation MemberReference Void TYPE MethodInvocation params sig invokeThreadContext StatementExpression MethodInvocation classBody.method athrow StatementExpression MethodInvocation classBody.method MemberReference noException label StatementExpression MethodInvocation classBody endBody StatementExpression MethodInvocation method MemberReference StandardASMCompiler THIS aload StatementExpression MethodInvocation loadThreadContext IfStatement BinaryOperation == MemberReference receiverCallback Literal null BlockStatement IfStatement BinaryOperation != MemberReference superCallback Literal null BlockStatement StatementExpression MethodInvocation superCallback This call BlockStatement StatementExpression MethodInvocation method MemberReference StandardASMCompiler SELF_INDEX aload BlockStatement StatementExpression MethodInvocation receiverCallback This call StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType Block p Literal "NULL_BLOCK" MethodInvocation ClassReference ReferenceType Block ci getstatic StatementExpression MethodInvocation method MethodInvocation script getClassname MemberReference classMethodName MethodInvocation StandardASMCompiler MethodInvocation script getClassname Literal 0 getStaticMethodSignature invokestatic	1
MethodDeclaration Modifier public ReferenceType DirectMemoryIO FormalParameter ReferenceType Ruby runtime FormalParameter BasicType long address ReturnStatement MethodInvocation NativeMemoryIO MemberReference runtime MemberReference address wrap	0
MethodDeclaration Modifier public trace FormalParameter ReferenceType IRubyObject value IfStatement BinaryOperation == MemberReference traces Literal null ReturnStatement LocalVariableDeclaration ReferenceType ThreadContext VariableDeclarator context MethodInvocation value MethodInvocation getCurrentContext getRuntime IfStatement MethodInvocation context ReturnStatement TryStatement StatementExpression MethodInvocation context Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation traces size MemberReference ++ i BlockStatement StatementExpression Cast ReferenceType RubyProc MethodInvocation traces MemberReference i get StatementExpression MethodInvocation context Literal false	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "re_exchange" ElementValuePair module Literal true ReferenceType IRubyObject re_exchange FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference Block NULL_BLOCK switch_rb	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyInteger hour ReturnStatement MethodInvocation MethodInvocation MethodInvocation dt getHourOfDay newFixnum getRuntime	0
MethodDeclaration Modifier public ReferenceType Operand buildFixnum FormalParameter ReferenceType FixnumNode node FormalParameter ReferenceType IR_Scope m ReturnStatement ClassCreator ReferenceType Fixnum MethodInvocation node getValue	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "sprintf" Literal "format" ElementValuePair required Literal 1 ElementValuePair rest Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject sprintf FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args IfStatement BinaryOperation == MemberReference args length Literal 0 BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal must have at least one argument" newArgumentError getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation RubyString MemberReference ArraySelector Literal 0 args stringValue LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator newArgs MethodInvocation context MethodInvocation MemberReference args newArrayNoCopy getRuntime StatementExpression MethodInvocation newArgs MemberReference context shift ReturnStatement MethodInvocation str MemberReference context MemberReference newArgs op_format	0
MethodDeclaration Modifier public ReferenceType RubyNumeric multiplyWith FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyFloat value ReturnStatement Cast ReferenceType RubyNumeric MethodInvocation MemberReference context MemberReference value op_mul	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "new!" ElementValuePair meta Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject newInstanceBang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject num ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference num MethodInvocation RubyFixnum MethodInvocation context getRuntime one newInstanceBang	0
MethodDeclaration Modifier private colon3Node FormalParameter ReferenceType Colon3Node node StatementExpression MethodInvocation sb MethodInvocation MethodInvocation node getName append Literal " " append	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + SuperMethodInvocation toString MethodInvocation Arrays MemberReference _args toString	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "string=" ElementValuePair required Literal 1 ReferenceType IRubyObject set_string FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation ArrayCreator ReferenceType IRubyObject ArrayInitializer MethodInvocation arg convertToString reopen	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block passedBlock AssertStatement BinaryOperation != MemberReference args Literal null LocalVariableDeclaration ReferenceType Block VariableDeclarator newBlock MethodInvocation block LocalVariableDeclaration ReferenceType JumpTarget VariableDeclarator MethodInvocation newBlock MethodInvocation getFrame MethodInvocation getBinding TryStatement IfStatement BinaryOperation != MemberReference self Literal null StatementExpression MethodInvocation newBlock MethodInvocation MemberReference self setSelf getBinding ReturnStatement MethodInvocation newBlock MemberReference context MemberReference args MemberReference passedBlock call CatchClause CatchClauseParameter JumpException.BreakJump bj ReturnStatement MethodInvocation MethodInvocation getRuntime MemberReference newBlock MemberReference bj MemberReference handleBreakJump CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MethodInvocation getRuntime MemberReference rj MemberReference handleReturnJump CatchClause CatchClauseParameter JumpException.RetryJump rj ReturnStatement MethodInvocation MethodInvocation getRuntime MemberReference rj handleRetryJump	1
MethodDeclaration Modifier private ReferenceType RubyBigDecimal handleAddSpecialValues FormalParameter ReferenceType RubyBigDecimal val IfStatement BinaryOperation || MethodInvocation isNaN MemberReference val isNaN BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime newNaN IfStatement BinaryOperation > BinaryOperation * MemberReference infinitySign MemberReference val infinitySign Literal 0 BlockStatement ReturnStatement TernaryExpression MethodInvocation isInfinity This MemberReference val IfStatement BinaryOperation < BinaryOperation * MemberReference infinitySign MemberReference val infinitySign Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime newNaN IfStatement BinaryOperation == BinaryOperation * MemberReference infinitySign MemberReference val infinitySign Literal 0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator sign BinaryOperation + MemberReference infinitySign MemberReference val infinitySign IfStatement BinaryOperation != MemberReference sign Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime MemberReference sign newInfinity ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType RubyClass createEnumClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule ffiModule LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator enumClass MethodInvocation ffiModule Literal "Enum" MethodInvocation ffiModule Literal "Type" fastGetClass MemberReference Allocator INSTANCE defineClassUnder StatementExpression MethodInvocation enumClass ClassReference ReferenceType Enum defineAnnotatedMethods StatementExpression MethodInvocation enumClass ClassReference ReferenceType Enum defineAnnotatedConstants ReturnStatement MemberReference enumClass	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "eof?" Literal "eof" ReferenceType RubyBoolean eof_p FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement LocalVariableDeclaration ReferenceType OpenFile VariableDeclarator myOpenFile MethodInvocation getOpenFileChecked StatementExpression MethodInvocation myOpenFile MemberReference runtime checkReadable StatementExpression MethodInvocation myOpenFile setReadBuffered IfStatement MethodInvocation myOpenFile MethodInvocation feof getMainStream BlockStatement ReturnStatement MethodInvocation runtime getTrue IfStatement MethodInvocation myOpenFile MethodInvocation readDataBuffered getMainStream BlockStatement ReturnStatement MethodInvocation runtime getFalse StatementExpression MethodInvocation MethodInvocation myOpenFile getMainStream readCheck StatementExpression MethodInvocation myOpenFile MethodInvocation clearerr getMainStream LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation myOpenFile MethodInvocation fgetc getMainStream IfStatement BinaryOperation != MemberReference c Literal - 1 BlockStatement StatementExpression MethodInvocation myOpenFile MethodInvocation MemberReference c ungetc getMainStream ReturnStatement MethodInvocation runtime getFalse StatementExpression MethodInvocation myOpenFile MemberReference runtime checkClosed StatementExpression MethodInvocation myOpenFile MethodInvocation clearerr getMainStream ReturnStatement MethodInvocation runtime getTrue CatchClause CatchClauseParameter PipeException ex ThrowStatement MethodInvocation runtime newErrnoEPIPEError CatchClause CatchClauseParameter InvalidValueException ex ThrowStatement MethodInvocation runtime newErrnoEINVALError CatchClause CatchClauseParameter BadDescriptorException e ThrowStatement MethodInvocation runtime newErrnoEBADFError CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation runtime MethodInvocation e getMessage newIOError	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isNative IfStatement BinaryOperation == MemberReference compiledMethod Literal null StatementExpression MethodInvocation initializeMethod ReturnStatement MethodInvocation compiledMethod isNative	1
MethodDeclaration Modifier public ReferenceType PrintStream getOutputStream ReturnStatement MemberReference System out	1
MethodDeclaration Modifier static protected ReferenceType JRubyFile getDir FormalParameter Modifier final ReferenceType Ruby runtime FormalParameter Modifier final ReferenceType String path FormalParameter Modifier final BasicType boolean mustExist LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator result MethodInvocation JRubyFile MethodInvocation runtime getCurrentDirectory MemberReference path create IfStatement BinaryOperation && MemberReference mustExist MethodInvocation ! result exists BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "No such file or directory - " MemberReference path newErrnoENOENTError LocalVariableDeclaration BasicType boolean VariableDeclarator isDirectory MethodInvocation result isDirectory IfStatement BinaryOperation || MethodInvocation path Literal "file:" startsWith BinaryOperation && MemberReference mustExist MemberReference ! isDirectory BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + MemberReference path Literal " is not a directory" newErrnoENOTDIRError IfStatement BinaryOperation && MemberReference ! mustExist MemberReference isDirectory BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + Literal "File exists - " MemberReference path newErrnoEEXISTError ReturnStatement MemberReference result	1
MethodDeclaration Modifier final public static ReferenceType ByteList intToBinaryByteList FormalParameter BasicType int i ReturnStatement ClassCreator ReferenceType ByteList MethodInvocation MemberReference i	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 ReturnStatement MethodInvocation oldMethod MemberReference context MemberReference self MemberReference klazz MemberReference oldName MemberReference arg1 MemberReference arg2 MemberReference arg3 call	0
MethodDeclaration Modifier public static ReferenceType IRubyObject fetchClassVariable FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator rubyClass MethodInvocation ASTInterpreter MemberReference context MemberReference runtime getClassVariableBase IfStatement BinaryOperation == MemberReference rubyClass Literal null StatementExpression Assignment MemberReference rubyClass MethodInvocation self getMetaClass = ReturnStatement MethodInvocation rubyClass MemberReference name getClassVar	1
MethodDeclaration Modifier public final ReferenceType getBlockBody FormalParameter ReferenceType Object scriptObject FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int index FormalParameter ReferenceType String descriptor LocalVariableDeclaration ReferenceType VariableDeclarator body MemberReference ArraySelector MemberReference index IfStatement BinaryOperation == MemberReference body Literal null BlockStatement ReturnStatement MethodInvocation MemberReference scriptObject MemberReference context MemberReference index MemberReference descriptor createBlockBody ReturnStatement MemberReference body	0
MethodDeclaration Modifier protected tearDown Exception StatementExpression MethodInvocation in close StatementExpression MethodInvocation out close StatementExpression MethodInvocation err close StatementExpression MethodInvocation printOut close StatementExpression MethodInvocation printErr close StatementExpression Assignment MemberReference in Literal null = StatementExpression Assignment MemberReference out Literal null = StatementExpression Assignment MemberReference err Literal null = StatementExpression Assignment MemberReference printOut Literal null = StatementExpression Assignment MemberReference printErr Literal null = StatementExpression Assignment MemberReference runtime Literal null =	0
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor visitor ReturnStatement MethodInvocation visitor This visitSplatNode	0
MethodDeclaration Modifier public ReferenceType Object case264_line1014 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals newSplatNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator variable Cast ReferenceType IRubyObject MethodInvocation MethodInvocation MemberReference self get MethodInvocation self MethodInvocation getRealClass getMetaClass verifyAccessor ReturnStatement TernaryExpression BinaryOperation == MemberReference variable Literal null MethodInvocation runtime getNil MemberReference variable	0
MethodDeclaration Modifier public static ReferenceType CodeVersion StatementExpression MemberReference ++ _nextVersionNumber ReturnStatement ClassCreator ReferenceType CodeVersion MemberReference _nextVersionNumber	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "get_array_of_int8" Literal "get_array_of_char" ElementValuePair required Literal 2 ReferenceType IRubyObject get_array_of_int8 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset FormalParameter ReferenceType IRubyObject length ReturnStatement MethodInvocation MemoryUtil MethodInvocation context getRuntime MemberReference io MethodInvocation MemberReference offset getOffset MethodInvocation Util MemberReference length int32Value getArrayOfSigned8	1
MethodDeclaration Modifier private static BasicType int safeGet FormalParameter ReferenceType ByteBuffer encode ReturnStatement TernaryExpression MethodInvocation encode hasRemaining BinaryOperation & MethodInvocation encode get Literal 0xff Literal 0	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "delete_if" ElementValuePair frame Literal true ReferenceType IRubyObject delete_if19 FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block delete_if MethodInvocation MethodInvocation context getRuntime This Literal "delete_if" enumeratorize	1
MethodDeclaration Modifier public static ReferenceType File listRoots LocalVariableDeclaration ReferenceType File VariableDeclarator roots MethodInvocation File listRoots LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator smartRoots ArrayCreator ReferenceType JRubyFile MemberReference roots length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 VariableDeclarator j MemberReference roots length BinaryOperation < MemberReference i MemberReference j MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i smartRoots ClassCreator ReferenceType JRubyFile MemberReference ArraySelector MemberReference i MethodInvocation getPath roots = ReturnStatement MemberReference smartRoots	0
MethodDeclaration Modifier protected backAction FormalParameter ReferenceType KeyEvent event IfStatement BinaryOperation <= MethodInvocation area getCaretPosition MemberReference startPos StatementExpression MethodInvocation event consume	1
MethodDeclaration Modifier public ReferenceType Collection values LocalVariableDeclaration ReferenceType Collection VariableDeclarator vs MemberReference values ReturnStatement TernaryExpression BinaryOperation != MemberReference vs Literal null MemberReference vs Assignment MemberReference values ClassCreator ReferenceType Values =	1
MethodDeclaration Modifier public Annotation Override setArgValues FormalParameter ReferenceType IRubyObject arg0 StatementExpression Assignment MemberReference variableValueZero MemberReference arg0 =	0
MethodDeclaration Modifier public static ReferenceType IR_Class getCoreClass FormalParameter ReferenceType String n ReturnStatement MethodInvocation _coreClasses MemberReference n get	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "get_uint16" Literal "get_ushort" ElementValuePair required Literal 1 ReferenceType IRubyObject get_uint16 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset ReturnStatement MethodInvocation Util MethodInvocation context getRuntime MethodInvocation MethodInvocation MethodInvocation MemberReference offset getOffset getShort getMemoryIO newUnsigned16	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name ReturnStatement MethodInvocation RuntimeHelpers MemberReference context MemberReference self Literal "__jcreate!" invoke	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object iObject ReturnStatement TernaryExpression BinaryOperation == MemberReference iObject Literal null Literal null MethodInvocation iObject toString	0
MethodDeclaration Modifier public ReferenceType Object case51_line486 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType IterNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals MethodInvocation support getCurrentScope Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals = StatementExpression MethodInvocation support popCurrentScope ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value1 FormalParameter ReferenceType Block block StatementExpression MethodInvocation pre MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference value1 MemberReference block Literal false assign Literal 0 get StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block Literal 1 StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime MemberReference IRubyObject NULL_ARRAY MemberReference block Literal true assign	0
MethodDeclaration Modifier private ReferenceType DatagramSocket asDatagramSocket LocalVariableDeclaration ReferenceType Channel VariableDeclarator socketChannel MethodInvocation openFile MethodInvocation getDescriptor MethodInvocation getChannel getMainStream IfStatement BinaryOperation instanceof MemberReference socketChannel ReferenceType DatagramChannel BlockStatement ThrowStatement MethodInvocation MethodInvocation newErrnoENOPROTOOPTError getRuntime ReturnStatement Cast ReferenceType DatagramChannel MemberReference socketChannel	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation rescueBodyNode getOptRescueNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation rescueBodyNode getOptRescueNode MemberReference context MemberReference light BlockStatement StatementExpression MethodInvocation context	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock IfStatement MethodInvocation ! result isTrue ReturnStatement MethodInvocation ASTInterpreter MemberReference context MemberReference result ReturnStatement MethodInvocation secondNode MemberReference runtime MemberReference context MemberReference self MemberReference aBlock	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "autoload" ElementValuePair required Literal 2 ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject FormalParameter Modifier final ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject symbol FormalParameter Modifier final ReferenceType IRubyObject file LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration Modifier final ReferenceType LoadService VariableDeclarator loadService MethodInvocation runtime LocalVariableDeclaration ReferenceType String VariableDeclarator nonInternedName MethodInvocation symbol asJavaString IfStatement MethodInvocation ! IdUtil MemberReference nonInternedName isValidConstantName BlockStatement ThrowStatement MethodInvocation runtime Literal "autoload must be constant name" MemberReference nonInternedName newNameError IfStatement BinaryOperation instanceof MemberReference file ReferenceType RubyString ThrowStatement MethodInvocation runtime MemberReference file MethodInvocation runtime getString newTypeError LocalVariableDeclaration ReferenceType RubyString VariableDeclarator fileString MethodInvocation file convertToString IfStatement MethodInvocation fileString isEmpty BlockStatement ThrowStatement MethodInvocation runtime Literal "empty file name" newArgumentError LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator baseName MethodInvocation symbol MethodInvocation intern asJavaString LocalVariableDeclaration Modifier final ReferenceType RubyModule VariableDeclarator module TernaryExpression BinaryOperation instanceof MemberReference recv ReferenceType RubyModule Cast ReferenceType RubyModule MemberReference recv MethodInvocation runtime getObject LocalVariableDeclaration ReferenceType String VariableDeclarator nm BinaryOperation + BinaryOperation + MethodInvocation module getName Literal "::" MemberReference baseName LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator existingValue MethodInvocation module MemberReference baseName fastFetchConstant IfStatement BinaryOperation && BinaryOperation != MemberReference existingValue Literal null BinaryOperation != MemberReference existingValue MemberReference RubyObject UNDEF ReturnStatement MethodInvocation runtime getNil StatementExpression MethodInvocation module MemberReference baseName MemberReference RubyObject UNDEF fastStoreConstant StatementExpression MethodInvocation loadService MemberReference nm ClassCreator ReferenceType MethodDeclaration Modifier public ReferenceType String file ReturnStatement MethodInvocation file toString MethodDeclaration * @see org.jruby.runtime.load.IAutoloadMethod#load(Ruby, */ Modifier public ReferenceType IRubyObject load FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name LocalVariableDeclaration BasicType boolean VariableDeclarator required MethodInvocation loadService MethodInvocation file require IfStatement MemberReference ! required ReturnStatement Literal null ReturnStatement MethodInvocation module MemberReference baseName fastGetConstant addAutoload ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public final ReferenceType RubyFixnum FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int index FormalParameter BasicType long value LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator MemberReference ArraySelector MemberReference index fixnums IfStatement BinaryOperation == MemberReference Literal null ReturnStatement Assignment MemberReference ArraySelector MemberReference index fixnums MethodInvocation RubyFixnum MemberReference runtime MemberReference value newFixnum = ReturnStatement MemberReference	1
MethodDeclaration Modifier public ReferenceType Object unmarshalFrom FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass type FormalParameter ReferenceType unmarshalStream IOException LocalVariableDeclaration ReferenceType RubyException VariableDeclarator exc Cast ReferenceType RubyException MethodInvocation type StatementExpression MethodInvocation unmarshalStream MemberReference exc StatementExpression MethodInvocation unmarshalStream MemberReference exc StatementExpression Assignment MemberReference exc message Cast ReferenceType IRubyObject MethodInvocation exc Literal "mesg" removeInternalVariable = StatementExpression MethodInvocation exc Cast ReferenceType IRubyObject MethodInvocation exc Literal "bt" removeInternalVariable set_backtrace ReturnStatement MemberReference exc	0
MethodDeclaration Modifier private final ReferenceType IRubyObject internalGet FormalParameter ReferenceType IRubyObject key ReturnStatement MethodInvocation MemberReference value MemberReference key internalGetEntry	1
MethodDeclaration Modifier public ReferenceType Object case378_line1430 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Literal null new_call = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "sign" ReferenceType IRubyObject sign IfStatement MethodInvocation isNaN BlockStatement ReturnStatement MethodInvocation MethodInvocation Literal fastGetConstant getMetaClass IfStatement MethodInvocation isInfinity BlockStatement IfStatement BinaryOperation < MemberReference infinitySign Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation Literal "SIGN_NEGATIVE_INFINITE" fastGetConstant getMetaClass BlockStatement ReturnStatement MethodInvocation MethodInvocation Literal fastGetConstant getMetaClass IfStatement MethodInvocation isZero BlockStatement IfStatement BinaryOperation < MemberReference zeroSign Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation Literal fastGetConstant getMetaClass BlockStatement ReturnStatement MethodInvocation MethodInvocation Literal fastGetConstant getMetaClass IfStatement BinaryOperation < MethodInvocation value signum Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation Literal fastGetConstant getMetaClass BlockStatement ReturnStatement MethodInvocation MethodInvocation Literal fastGetConstant getMetaClass	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ">" ElementValuePair required Literal 1 ReferenceType IRubyObject op_gt FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation MemberReference context MemberReference arg Literal '>' cmp	1
MethodDeclaration Modifier protected BasicType boolean waitWritable FormalParameter ReferenceType ChannelDescriptor descriptor IOException LocalVariableDeclaration ReferenceType Channel VariableDeclarator channel MethodInvocation descriptor getChannel IfStatement BinaryOperation || BinaryOperation == MemberReference channel Literal null BinaryOperation instanceof MemberReference channel ReferenceType SelectableChannel BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType SelectableChannel VariableDeclarator selectable Cast ReferenceType SelectableChannel MemberReference channel LocalVariableDeclaration ReferenceType Selector VariableDeclarator selector Literal null SynchronizedStatement MethodInvocation selectable blockingLock LocalVariableDeclaration BasicType boolean VariableDeclarator oldBlocking MethodInvocation selectable isBlocking TryStatement StatementExpression Assignment MemberReference selector MethodInvocation Selector open = StatementExpression MethodInvocation selectable Literal false configureBlocking LocalVariableDeclaration BasicType int VariableDeclarator real_ops BinaryOperation & MethodInvocation selectable validOps MemberReference SelectionKey OP_WRITE LocalVariableDeclaration ReferenceType SelectionKey VariableDeclarator key MethodInvocation selectable MemberReference selector keyFor IfStatement BinaryOperation == MemberReference key Literal null BlockStatement StatementExpression MethodInvocation selectable MemberReference selector MemberReference real_ops MemberReference descriptor register BlockStatement StatementExpression MethodInvocation key BinaryOperation | MethodInvocation key interestOps MemberReference real_ops interestOps WhileStatement BinaryOperation == MethodInvocation selector select Literal 0 Statement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation selector MethodInvocation iterator selectedKeys MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType SelectionKey VariableDeclarator skey Cast ReferenceType SelectionKey MethodInvocation i next IfStatement BinaryOperation != BinaryOperation & BinaryOperation & MethodInvocation skey interestOps MethodInvocation skey readyOps MemberReference SelectionKey OP_WRITE Literal 0 BlockStatement IfStatement BinaryOperation == MethodInvocation skey attachment MemberReference descriptor BlockStatement ReturnStatement Literal true ReturnStatement Literal false IfStatement BinaryOperation != MemberReference selector Literal null BlockStatement TryStatement StatementExpression MethodInvocation selector close CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation selectable MemberReference oldBlocking configureBlocking	1
MethodDeclaration Modifier public ReferenceType Object case96_line661 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation Literal "class/module name must be CONSTANT" yyerror ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType int isDefined FormalParameter ReferenceType String name FormalParameter BasicType int depth ReturnStatement BinaryOperation | BinaryOperation << MemberReference depth Literal 16 MethodInvocation MemberReference name exists	0
MethodDeclaration Modifier public ReferenceType Operand buildSuper FormalParameter ReferenceType SuperNode superNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Operand VariableDeclarator args MethodInvocation MethodInvocation superNode getArgsNode MemberReference s setupCallArgs LocalVariableDeclaration ReferenceType Operand VariableDeclarator block MethodInvocation MethodInvocation superNode getIterNode MemberReference s setupCallClosure LocalVariableDeclaration ReferenceType Variable VariableDeclarator ret MethodInvocation s getNewVariable StatementExpression MethodInvocation s ClassCreator ReferenceType RUBY_INTERNALS_CALL_Instr MemberReference ret MemberReference MethAddr SUPER MethodInvocation args ArrayCreator ReferenceType Operand MethodInvocation args size toArray MemberReference block addInstr ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public synchronized Annotation JRubyMethod ReferenceType IRubyObject clear FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation MemberReference context checkShutdown StatementExpression MethodInvocation entries clear ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public testSymbolTable Exception LocalVariableDeclaration ReferenceType RubySymbol ReferenceType SymbolTable VariableDeclarator st MethodInvocation runtime getSymbolTable StatementExpression MethodInvocation MethodInvocation st Literal "somename" lookup assertNull LocalVariableDeclaration ReferenceType RubySymbol VariableDeclarator symbol MethodInvocation RubySymbol MemberReference runtime Literal "somename" newSymbol StatementExpression MethodInvocation MemberReference symbol MethodInvocation st Literal "somename" lookup assertSame StatementExpression MethodInvocation MemberReference symbol MethodInvocation st Literal "somename" assertSame StatementExpression MethodInvocation MemberReference symbol MethodInvocation st Literal "somename" assertSame LocalVariableDeclaration ReferenceType RubySymbol VariableDeclarator another MethodInvocation st Literal "another_name" StatementExpression MethodInvocation MemberReference another MethodInvocation st Literal "another_name" lookup assertSame StatementExpression MethodInvocation MemberReference another MethodInvocation st Literal "another_name" assertSame StatementExpression MethodInvocation MemberReference another MethodInvocation st Literal "another_name" assertSame	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "==" ReferenceType IRubyObject op_equal19 FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation RecursiveComparator MemberReference context Literal "==" This MemberReference other Literal null compare	1
MethodDeclaration Modifier public synchronized ReferenceType ByteList readnonblock FormalParameter BasicType int number IOException BadDescriptorException EOFException AssertStatement BinaryOperation >= MemberReference number Literal 0 IfStatement BinaryOperation == MemberReference number Literal 0 BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MethodInvocation descriptor getChannel ReferenceType SelectableChannel BlockStatement LocalVariableDeclaration ReferenceType SelectableChannel VariableDeclarator selectableChannel Cast ReferenceType SelectableChannel MethodInvocation descriptor getChannel SynchronizedStatement MethodInvocation selectableChannel blockingLock LocalVariableDeclaration BasicType boolean VariableDeclarator oldBlocking MethodInvocation selectableChannel isBlocking TryStatement StatementExpression MethodInvocation selectableChannel Literal false configureBlocking ReturnStatement MethodInvocation MemberReference number readpartial StatementExpression MethodInvocation selectableChannel MemberReference oldBlocking configureBlocking IfStatement BinaryOperation instanceof MethodInvocation descriptor getChannel ReferenceType FileChannel BlockStatement ReturnStatement MethodInvocation MemberReference number fread BlockStatement ReturnStatement Literal null	1
MethodDeclaration Modifier public postYieldNoScope FormalParameter ReferenceType Frame lastFrame StatementExpression MethodInvocation MemberReference lastFrame StatementExpression MethodInvocation	0
MethodDeclaration Modifier private initUI LocalVariableDeclaration Modifier final ReferenceType JFrame VariableDeclarator frame ClassCreator ReferenceType JFrame Literal "A sample BSF application" LocalVariableDeclaration Modifier final ReferenceType JMenuBar VariableDeclarator menubar ClassCreator ReferenceType JMenuBar LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator input ClassCreator ReferenceType Literal "$frame.setTitle(\"A new title\")" LocalVariableDeclaration Modifier final ReferenceType JButton VariableDeclarator execute ClassCreator ReferenceType JButton Literal "Execute" LocalVariableDeclaration Modifier final ReferenceType JButton VariableDeclarator eval ClassCreator ReferenceType JButton Literal "Eval" TryStatement StatementExpression MethodInvocation manager Literal "frame" MemberReference frame ClassReference ReferenceType JFrame declareBean StatementExpression MethodInvocation manager Literal "menubar" MemberReference menubar ClassReference ReferenceType JMenuBar declareBean StatementExpression MethodInvocation manager Literal "input" MemberReference input ClassReference ReferenceType declareBean StatementExpression MethodInvocation manager Literal "execute" MemberReference execute ClassReference ReferenceType JButton declareBean StatementExpression MethodInvocation manager Literal "eval" MemberReference eval ClassReference ReferenceType JButton declareBean CatchClause CatchClauseParameter BSFException excptn StatementExpression MethodInvocation excptn printStackTrace StatementExpression MethodInvocation JOptionPane Literal null MethodInvocation excptn getMessage showMessageDialog StatementExpression MethodInvocation frame MethodInvocation ClassCreator ReferenceType Literal 12 Literal 12 setLayout getContentPane StatementExpression MethodInvocation frame MethodInvocation MemberReference input MemberReference CENTER add getContentPane LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType ClassCreator ReferenceType FlowLayout Literal 12 StatementExpression MethodInvocation frame MethodInvocation MemberReference MemberReference SOUTH add getContentPane StatementExpression MethodInvocation MemberReference execute MemberReference EAST add StatementExpression MethodInvocation MemberReference eval MemberReference EAST add TryStatement StatementExpression MethodInvocation manager Literal "ruby" Literal "initUI" Literal 1 Literal 1 Literal "$frame.setJMenuBar($menubar)" exec CatchClause CatchClauseParameter BSFException excptn StatementExpression MethodInvocation excptn printStackTrace StatementExpression MethodInvocation JOptionPane Literal null MethodInvocation excptn getMessage showMessageDialog StatementExpression MethodInvocation execute ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e TryStatement StatementExpression MethodInvocation manager Literal "ruby" Literal "initUI" Literal 1 Literal 1 MethodInvocation input getText exec CatchClause CatchClauseParameter BSFException excptn StatementExpression MethodInvocation excptn printStackTrace StatementExpression MethodInvocation JOptionPane MemberReference frame MethodInvocation excptn getMessage showMessageDialog addActionListener StatementExpression MethodInvocation eval ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator expression MethodInvocation JOptionPane MemberReference frame Literal "Please enter a Ruby expression:" showInputDialog StatementExpression MethodInvocation input MethodInvocation String MethodInvocation manager Literal "ruby" Literal "initUI" Literal 1 Literal 1 MemberReference expression eval valueOf setText CatchClause CatchClauseParameter BSFException excptn StatementExpression MethodInvocation excptn printStackTrace StatementExpression MethodInvocation JOptionPane MemberReference frame MethodInvocation excptn getMessage showMessageDialog addActionListener StatementExpression MethodInvocation frame pack StatementExpression MethodInvocation frame Literal true setVisible StatementExpression MethodInvocation frame MemberReference JFrame setDefaultCloseOperation	1
MethodDeclaration Modifier public ReferenceType IRubyObject checkStringType LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator str MethodInvocation TypeConverter This MethodInvocation MethodInvocation getString getRuntime Literal "to_str" convertToTypeWithCheck IfStatement BinaryOperation && MethodInvocation ! str isNil BinaryOperation instanceof MemberReference str ReferenceType RubyString BlockStatement StatementExpression Assignment MemberReference str MethodInvocation RubyString MethodInvocation getRuntime newEmptyString = ReturnStatement MemberReference str	0
MethodDeclaration Modifier public static BasicType long FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject rawArgs ReturnStatement MethodInvocation MemberReference runtime MemberReference rawArgs MethodInvocation runtime getOutputStream	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "lineno" ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation MemberReference line newFixnum getRuntime	0
MethodDeclaration Modifier public final BasicType long getAddress FormalParameter BasicType long offset ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier public ReferenceType Throwable getCause ReturnStatement MemberReference cause	0
MethodDeclaration Modifier synchronized final setConcreteProxyCallback FormalParameter ReferenceType Callback concreteProxyCallback IfStatement BinaryOperation == This MemberReference concreteProxyCallback Literal null BlockStatement StatementExpression Assignment This MemberReference concreteProxyCallback MemberReference concreteProxyCallback =	0
MethodDeclaration Modifier public ReferenceType IRubyObject afill FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject endIndex FormalParameter ReferenceType IRubyObject value IfStatement BinaryOperation instanceof MemberReference ReferenceType RubyInteger BlockStatement ThrowStatement MethodInvocation MethodInvocation MemberReference MethodInvocation MethodInvocation getInteger getRuntime newTypeError getRuntime LocalVariableDeclaration BasicType int VariableDeclarator intIndex Cast BasicType int Cast ReferenceType RubyInteger MemberReference IfStatement BinaryOperation instanceof MemberReference endIndex ReferenceType RubyInteger BlockStatement ThrowStatement MethodInvocation MethodInvocation MemberReference endIndex MethodInvocation MethodInvocation getInteger getRuntime newTypeError getRuntime LocalVariableDeclaration BasicType int VariableDeclarator intEndIndex Cast BasicType int Cast ReferenceType RubyInteger MemberReference endIndex IfStatement BinaryOperation instanceof MemberReference value ReferenceType JavaObject BlockStatement ThrowStatement MethodInvocation MethodInvocation BinaryOperation + Literal "not a java MemberReference value newTypeError getRuntime LocalVariableDeclaration ReferenceType Object VariableDeclarator javaObject Cast ReferenceType JavaObject MemberReference value StatementExpression MethodInvocation MemberReference intIndex MemberReference intEndIndex MemberReference javaObject fillWithExceptionHandling ReturnStatement MemberReference value	0
MethodDeclaration Modifier public ReferenceType Object case478_line1812 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType RestArgNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Literal null Literal null Cast ReferenceType RestArgNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "squeeze" ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject squeeze FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation context getRuntime strDup StatementExpression MethodInvocation str MemberReference context MemberReference arg squeeze_bang ReturnStatement MemberReference str	0
MethodDeclaration Modifier final public static BasicType byte FormalParameter BasicType int i FormalParameter BasicType boolean upper LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation Integer MemberReference i toHexString StatementExpression Assignment MemberReference s TernaryExpression MemberReference upper MethodInvocation s toUpperCase MethodInvocation s toLowerCase = ReturnStatement MethodInvocation ByteList MemberReference s plain	1
MethodDeclaration Modifier public ReferenceType RubyModule defineModule FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference name MemberReference objectClass defineModuleUnder	0
MethodDeclaration Modifier public ReferenceType ThreadContext ReferenceType RubyStackTraceElement ReturnStatement MemberReference backtraceFrames	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "close" ReferenceType IRubyObject close StatementExpression MethodInvocation checkDir StatementExpression Assignment MemberReference isOpen Literal false = ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public free IfStatement MemberReference holder released BlockStatement ThrowStatement MethodInvocation MethodInvocation Literal "memory already freed" newRuntimeError getRuntime StatementExpression MethodInvocation holder free StatementExpression MethodInvocation referenceSet MemberReference holder remove	0
MethodDeclaration Modifier private static ReferenceType Object coerceToJavaType FormalParameter ReferenceType Ruby ruby FormalParameter ReferenceType RubyFixnum self FormalParameter ReferenceType Class javaClass IfStatement ClassReference ! MethodInvocation MemberReference javaClass isAssignableFrom ReferenceType Number BlockStatement ThrowStatement MethodInvocation ruby BinaryOperation + MethodInvocation javaClass getCanonicalName Literal " is not a numeric type" newTypeError LocalVariableDeclaration ReferenceType VariableDeclarator coercer MethodInvocation MemberReference javaClass get IfStatement BinaryOperation == MemberReference coercer Literal null BlockStatement ThrowStatement MethodInvocation ruby BinaryOperation + Literal "Cannot coerce Fixnum to " MethodInvocation javaClass getCanonicalName newTypeError ReturnStatement MethodInvocation coercer MemberReference self coerce	0
MethodDeclaration Modifier public BasicType boolean isConstant ReturnStatement MethodInvocation _re isConstant	0
MethodDeclaration Modifier private static BasicType boolean has_magic FormalParameter BasicType byte bytes FormalParameter BasicType int begin FormalParameter BasicType int end FormalParameter BasicType int flags LocalVariableDeclaration BasicType boolean VariableDeclarator escape BinaryOperation == BinaryOperation & MemberReference flags MemberReference FNM_NOESCAPE Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator nocase BinaryOperation != BinaryOperation & MemberReference flags MemberReference FNM_CASEFOLD Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator open Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference begin BinaryOperation < MemberReference i MemberReference end MemberReference ++ i BlockStatement SwitchStatement MemberReference ArraySelector MemberReference i bytes SwitchStatementCase Literal '?' Literal '*' ReturnStatement Literal true SwitchStatementCase Literal '[' StatementExpression MemberReference ++ open ContinueStatement SwitchStatementCase Literal ']' IfStatement BinaryOperation > MemberReference open Literal 0 ReturnStatement Literal true ContinueStatement SwitchStatementCase Literal '\\' IfStatement BinaryOperation && MemberReference escape BinaryOperation == MemberReference i MemberReference end ReturnStatement Literal false BreakStatement SwitchStatementCase IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference FNM_SYSCASE Literal 0 MemberReference nocase MethodInvocation Character Cast BasicType char BinaryOperation & MemberReference ArraySelector MemberReference i bytes Literal 0xFF isLetter ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier final ReferenceType Encoding checkEncoding FormalParameter ReferenceType EncodingCapable other LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation MemberReference other isCompatibleWith IfStatement BinaryOperation == MemberReference enc Literal null ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "incompatible character encodings: " MemberReference value encoding Literal " and " MethodInvocation other getEncoding newEncodingCompatibilityError getRuntime ReturnStatement MemberReference enc	1
MethodDeclaration Modifier public load FormalParameter ReferenceType Ruby runtime FormalParameter BasicType boolean wrap TryStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator jarFile MethodInvocation resource getURL StatementExpression MethodInvocation runtime MethodInvocation MemberReference jarFile addURL getJRubyClassLoader LocalVariableDeclaration ReferenceType JarInputStream VariableDeclarator in ClassCreator ReferenceType JarInputStream MethodInvocation resource getInputStream LocalVariableDeclaration ReferenceType Manifest VariableDeclarator mf MethodInvocation in getManifest IfStatement BinaryOperation != MemberReference mf Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator rubyInit MethodInvocation mf MethodInvocation Literal "Ruby-Init" getValue getMainAttributes IfStatement BinaryOperation != MemberReference rubyInit Literal null BlockStatement LocalVariableDeclaration ReferenceType JarEntry VariableDeclarator entry MethodInvocation in getNextJarEntry WhileStatement BinaryOperation && BinaryOperation != MemberReference entry Literal null MethodInvocation ! entry MethodInvocation MemberReference rubyInit equals getName BlockStatement StatementExpression Assignment MemberReference entry MethodInvocation in getNextJarEntry = IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator old TernaryExpression MethodInvocation runtime MethodInvocation Literal "$JAR_URL" isDefined getGlobalVariables MethodInvocation runtime MethodInvocation Literal "$JAR_URL" get getGlobalVariables MethodInvocation runtime getNil TryStatement StatementExpression MethodInvocation runtime MethodInvocation Literal "$JAR_URL" MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "jar:" MemberReference jarFile Literal "!/" newString set getGlobalVariables StatementExpression MethodInvocation runtime Literal MemberReference in MemberReference wrap loadFile StatementExpression MethodInvocation runtime MethodInvocation Literal "$JAR_URL" MemberReference old set getGlobalVariables StatementExpression MethodInvocation in close CatchClause CatchClauseParameter FileNotFoundException e ThrowStatement MethodInvocation runtime MemberReference e newIOErrorFromException CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation runtime MemberReference e newIOErrorFromException	1
MethodDeclaration Modifier public setOnceRegexp FormalParameter ReferenceType RubyRegexp regexp IfStatement BinaryOperation && MemberReference once BinaryOperation == MemberReference onceRegexp Literal null StatementExpression Assignment This MemberReference onceRegexp MemberReference regexp =	1
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Runnable VariableDeclarator raiseBody ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation body This branch LocalVariableDeclaration ReferenceType Runnable VariableDeclarator raiseCatch ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType Throwable ClassReference ReferenceType RaiseException ClassReference ReferenceType ThreadContext sig invokeUtilityMethod StatementExpression MethodInvocation method athrow StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType RaiseException p MemberReference raiseBody MemberReference raiseCatch trycatch	0
MethodDeclaration Modifier private BasicType int strLength FormalParameter ReferenceType Encoding enc IfStatement MethodInvocation MemberReference enc singleByteOptimizable ReturnStatement MemberReference value realSize ReturnStatement MethodInvocation MemberReference value MemberReference enc strLength	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair rest Literal true ReferenceType IRubyObject new_instance FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration BasicType int VariableDeclarator length MemberReference args length LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator types MemberReference parameterTypes IfStatement BinaryOperation != MemberReference length MemberReference types length BlockStatement ThrowStatement MethodInvocation MethodInvocation MemberReference length MemberReference types length newArgumentError getRuntime LocalVariableDeclaration ReferenceType Object VariableDeclarator constructorArguments ArrayCreator ReferenceType Object MemberReference length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference length BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i constructorArguments MemberReference ArraySelector MemberReference i MethodInvocation MemberReference ArraySelector MemberReference i types toJava args = TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator result MethodInvocation constructor MemberReference constructorArguments newInstance ReturnStatement MethodInvocation JavaObject MethodInvocation getRuntime MemberReference result wrap CatchClause CatchClauseParameter IllegalArgumentException iae ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "expected " MethodInvocation MethodInvocation inspect argument_types Literal ", got [" MemberReference ArraySelector Literal 0 MethodInvocation getClass MethodInvocation getName constructorArguments Literal ", ...]" newTypeError getRuntime CatchClause CatchClauseParameter IllegalAccessException iae ThrowStatement MethodInvocation MethodInvocation Literal "illegal access" newTypeError getRuntime CatchClause CatchClauseParameter InvocationTargetException ite StatementExpression MethodInvocation MethodInvocation getJavaSupport MethodInvocation MethodInvocation ite getTargetException MemberReference constructor handleNativeException getRuntime AssertStatement Literal false ReturnStatement Literal null CatchClause CatchClauseParameter InstantiationException ie ThrowStatement MethodInvocation MethodInvocation BinaryOperation + Literal "can't make instance of " MethodInvocation constructor MethodInvocation getName getDeclaringClass newTypeError getRuntime	1
MethodDeclaration Modifier protected FormalParameter BasicType int c SwitchStatement MemberReference c SwitchStatementCase Literal '\n' StatementExpression MethodInvocation lineBuffer Cast BasicType char MemberReference c append SwitchStatementCase Literal - 1 StatementExpression MethodInvocation captureFeatureNewline BreakStatement SwitchStatementCase StatementExpression MethodInvocation lineBuffer Cast BasicType char MemberReference c append BreakStatement	1
MethodDeclaration Modifier public ReferenceType Object case491_line1877 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop IfStatement MethodInvocation ! support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals is_local_id BlockStatement StatementExpression MethodInvocation Literal "formal argument must be local variable" yyerror StatementExpression MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals shadowing_lvar StatementExpression MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals arg_var StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType OptArgNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals assignable = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final putLong FormalParameter BasicType long offset FormalParameter BasicType long value StatementExpression MethodInvocation MemberReference offset Literal 8 checkBounds StatementExpression MethodInvocation IO MemberReference buffer MethodInvocation MemberReference offset index MemberReference value putInt64	1
MethodDeclaration Modifier public ReferenceType Object case486_line1837 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation support Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals shadowing_lvar StatementExpression Assignment MemberReference yyVal Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final ReferenceType IRubyObject fromNative FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long value ReturnStatement MethodInvocation Util MethodInvocation context getRuntime Cast BasicType int MemberReference value newUnsigned32	1
MethodDeclaration Modifier public static ReferenceType Handle createHandle FormalParameter ReferenceType JRubyClassLoader classLoader FormalParameter ReferenceType Method method ReturnStatement MethodInvocation MemberReference classLoader MemberReference method MemberReference DEBUG createHandle	0
MethodDeclaration Modifier final public static BasicType double FormalParameter ReferenceType ByteList bytes ReturnStatement MethodInvocation MethodInvocation bytes unsafeBytes MethodInvocation bytes begin MethodInvocation bytes length Literal false	0
MethodDeclaration Modifier public FormalParameter BasicType boolean isWithinDefined StatementExpression Assignment This MemberReference isWithinDefined MemberReference isWithinDefined =	0
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject object IfStatement BinaryOperation instanceof MemberReference self ReferenceType RubyModule BlockStatement ThrowStatement MethodInvocation context MethodInvocation MemberReference self MethodInvocation context MethodInvocation getModule getRuntime newTypeError getRuntime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator singleton MethodInvocation object getSingletonClass StatementExpression MethodInvocation singleton ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference self include ReturnStatement MemberReference singleton	0
MethodDeclaration Modifier public static ReferenceType String setShortObj FormalParameter ReferenceType Short s ReturnStatement MethodInvocation String MemberReference s valueOf	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType Block block IfStatement MethodInvocation block isGiven BlockStatement LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime StatementExpression MethodInvocation MemberReference runtime createJavaCallables LocalVariableDeclaration ReferenceType JavaProxy VariableDeclarator proxy MethodInvocation MemberReference self castJavaProxy LocalVariableDeclaration ReferenceType RubyProc VariableDeclarator proc MethodInvocation RubyProc MethodInvocation self getRuntime MemberReference block MemberReference Block.Type LAMBDA newProc LocalVariableDeclaration ReferenceType JavaConstructor VariableDeclarator constructor Cast ReferenceType JavaConstructor MethodInvocation MemberReference self MemberReference name MemberReference proc findCallableArityOne LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg0 MethodInvocation MemberReference context MemberReference proc MemberReference constructor Literal 0 convertArg StatementExpression MethodInvocation proxy MethodInvocation JavaObject MemberReference runtime MethodInvocation constructor MemberReference cArg0 newInstanceDirect wrap dataWrapStruct ReturnStatement MemberReference self BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name call	0
MethodDeclaration Modifier private BasicType boolean protectedAccessOk FormalParameter ReferenceType IRubyObject caller ReturnStatement MethodInvocation MethodInvocation MemberReference caller isInstance getProtectedClass	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject args ReturnStatement MemberReference args	0
MethodDeclaration Modifier public final BasicType int intValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyBoolean BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "wrong argument type. Expected true or false" newTypeError getRuntime ReturnStatement TernaryExpression MethodInvocation obj isTrue Literal 1 Literal 0	1
MethodDeclaration Modifier public remove LocalVariableDeclaration ReferenceType Entry VariableDeclarator remove MemberReference entry StatementExpression MethodInvocation expunge StatementExpression Assignment MemberReference entry MemberReference entry next = StatementExpression MethodInvocation locateNext StatementExpression This MethodInvocation MemberReference remove removeEntry	0
MethodDeclaration Modifier public ReferenceType Object case37_line446 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals newOrNode = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public opElementAsgnWithAnd FormalParameter ReferenceType CompilerCallback receiver FormalParameter ReferenceType ArgumentsCallback args FormalParameter ReferenceType CompilerCallback valueCallback StatementExpression MethodInvocation methodCompiler MethodInvocation getCacheCompiler MethodInvocation MemberReference methodCompiler Literal "[]" MemberReference CallType FUNCTIONAL cacheCallSite getScriptCompiler StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation methodCompiler loadSelf StatementExpression MethodInvocation receiver MemberReference methodCompiler call StatementExpression MethodInvocation args MemberReference methodCompiler call StatementExpression MethodInvocation method dup2 LocalVariableDeclaration BasicType int VariableDeclarator argsLocal MethodInvocation methodCompiler MethodInvocation grabTempLocal getVariableCompiler StatementExpression MethodInvocation methodCompiler MethodInvocation MemberReference argsLocal setTempLocal getVariableCompiler LocalVariableDeclaration BasicType int VariableDeclarator receiverLocal MethodInvocation methodCompiler MethodInvocation grabTempLocal getVariableCompiler StatementExpression MethodInvocation methodCompiler MethodInvocation MemberReference receiverLocal setTempLocal getVariableCompiler SwitchStatement MethodInvocation args getArity SwitchStatementCase Literal 1 StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType CallSite p Literal "call" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokevirtual BreakStatement SwitchStatementCase StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType CallSite p Literal "call" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation method dup StatementExpression MethodInvocation methodCompiler Literal MethodInvocation ClassReference BasicType boolean sig LocalVariableDeclaration ReferenceType Label VariableDeclarator done ClassCreator ReferenceType Label StatementExpression MethodInvocation method MemberReference done ifeq StatementExpression MethodInvocation method pop StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation methodCompiler loadSelf StatementExpression MethodInvocation methodCompiler MethodInvocation MemberReference receiverLocal getTempLocal getVariableCompiler StatementExpression MethodInvocation methodCompiler MethodInvocation MemberReference argsLocal getTempLocal getVariableCompiler StatementExpression MethodInvocation valueCallback MemberReference methodCompiler call StatementExpression MethodInvocation methodCompiler MethodInvocation getCacheCompiler MethodInvocation MemberReference methodCompiler Literal "[]=" MemberReference CallType FUNCTIONAL cacheCallSite getScriptCompiler SwitchStatement MethodInvocation args getArity SwitchStatementCase Literal 0 ThrowStatement ClassCreator ReferenceType NotCompilableException Literal "Op Element Asgn with zero-arity args" SwitchStatementCase Literal 1 StatementExpression MethodInvocation methodCompiler Literal "opElementAsgnWithOrPartTwoOneArg" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallSite sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation methodCompiler Literal "opElementAsgnWithOrPartTwoTwoArgs" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallSite sig invokeUtilityMethod BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation methodCompiler Literal "opElementAsgnWithOrPartTwoThreeArgs" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallSite sig invokeUtilityMethod BreakStatement SwitchStatementCase StatementExpression MethodInvocation methodCompiler Literal "opElementAsgnWithOrPartTwoNArgs" MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType IRubyObject ClassReference ReferenceType CallSite sig invokeUtilityMethod BreakStatement StatementExpression MethodInvocation method MemberReference done label StatementExpression MethodInvocation methodCompiler MethodInvocation releaseTempLocal getVariableCompiler StatementExpression MethodInvocation methodCompiler MethodInvocation releaseTempLocal getVariableCompiler	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "with_index" ElementValuePair frame Literal true ReferenceType IRubyObject with_index FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self MemberReference block Literal "with_index" with_index_common	1
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klazz ReturnStatement ClassCreator ReferenceType Fiber MemberReference runtime MemberReference klazz	0
MethodDeclaration Modifier public ReferenceType JavaProxyConstructor getConstructor FormalParameter ReferenceType Class args SecurityException NoSuchMethodException LocalVariableDeclaration ReferenceType Class VariableDeclarator realArgs ArrayCreator ReferenceType Class BinaryOperation + MemberReference args length Literal 1 StatementExpression MethodInvocation System MemberReference args Literal 0 MemberReference realArgs Literal 0 MemberReference args length arraycopy StatementExpression Assignment MemberReference ArraySelector MemberReference args length realArgs ClassReference ReferenceType JavaProxyInvocationHandler = LocalVariableDeclaration ReferenceType Constructor VariableDeclarator constructor MethodInvocation proxyClass MemberReference realArgs getConstructor ReturnStatement ClassCreator ReferenceType JavaProxyConstructor MethodInvocation getRuntime This MemberReference constructor	1
MethodDeclaration Modifier public BasicType int hashCode ReturnStatement BinaryOperation ^ MethodInvocation MethodInvocation getKey keyHash MethodInvocation MethodInvocation getValue	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg ReturnStatement MethodInvocation oldMethod MemberReference context MemberReference self MemberReference klazz MemberReference oldName MemberReference arg call	0
MethodDeclaration Modifier private ReferenceType IRubyObject callBlock FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator selfType MethodInvocation MemberReference context MemberReference self pollAndGetClass LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator myCache MemberReference cache IfStatement MethodInvocation myCache MemberReference selfType typeOk BlockStatement ReturnStatement MethodInvocation myCache.method MemberReference context MemberReference self MemberReference selfType MemberReference methodName MemberReference args MemberReference block call ReturnStatement MethodInvocation MemberReference caller MemberReference selfType MemberReference block MemberReference args MemberReference context MemberReference self cacheAndCall	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "minmax" ElementValuePair frame Literal true ReferenceType IRubyObject minmax FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator result ArrayCreator ReferenceType IRubyObject ArrayInitializer Literal null Literal null LocalVariableDeclaration Modifier final ReferenceType ThreadContext VariableDeclarator localContext MemberReference context IfStatement MethodInvocation block isGiven BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "minmax" checkContext LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator arg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result Assignment MemberReference ArraySelector Literal 1 result MemberReference arg = = BlockStatement IfStatement BinaryOperation < MethodInvocation RubyComparable MemberReference ctx MethodInvocation block MemberReference ctx MethodInvocation runtime MemberReference arg MemberReference ArraySelector Literal 0 result newArray yield MemberReference arg MemberReference ArraySelector Literal 0 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference arg = IfStatement BinaryOperation > MethodInvocation RubyComparable MemberReference ctx MethodInvocation block MemberReference ctx MethodInvocation runtime MemberReference arg MemberReference ArraySelector Literal 1 result newArray yield MemberReference arg MemberReference ArraySelector Literal 1 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 1 result MemberReference arg = ReturnStatement MethodInvocation runtime getNil callEach BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator arg MethodInvocation MemberReference runtime MemberReference largs checkArgs SynchronizedStatement MemberReference result IfStatement BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result Assignment MemberReference ArraySelector Literal 1 result MemberReference arg = = BlockStatement IfStatement BinaryOperation < MethodInvocation RubyComparable MemberReference ctx MethodInvocation arg MemberReference ctx Literal "<=>" MemberReference ArraySelector Literal 0 result callMethod MemberReference arg MemberReference ArraySelector Literal 0 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference arg = IfStatement BinaryOperation > MethodInvocation RubyComparable MemberReference ctx MethodInvocation arg MemberReference ctx Literal "<=>" MemberReference ArraySelector Literal 1 result callMethod MemberReference arg MemberReference ArraySelector Literal 1 result cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 1 result MemberReference arg = ReturnStatement MethodInvocation runtime getNil callEach IfStatement BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 result Assignment MemberReference ArraySelector Literal 1 result MethodInvocation runtime getNil = = ReturnStatement MethodInvocation runtime MemberReference result newArrayNoCopy	1
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context Literal pushString	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 StatementExpression Assignment MemberReference args MethodInvocation MemberReference context MemberReference args MemberReference type prepareArgumentsForCall = ReturnStatement MethodInvocation MemberReference context MethodInvocation RubyArray MethodInvocation context getRuntime MemberReference args newArrayNoCopy Literal null Literal null Literal true MemberReference binding MemberReference type yield	0
MethodDeclaration Modifier public final BasicType int getMinimumAlignment ReturnStatement MethodInvocation getNativeAlignment	1
MethodDeclaration Modifier public final put FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation io MemberReference offset MethodInvocation Util MemberReference value int32Value putInt	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "modulo" ReferenceType IRubyObject modulo FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MemberReference context Literal "%" MemberReference other callMethod	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "close_write" ReferenceType IRubyObject close_write StatementExpression MethodInvocation checkWritable StatementExpression Assignment MemberReference closedWrite Literal true = ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject to_s FormalParameter ReferenceType IRubyObject recv IfStatement BinaryOperation != MethodInvocation recv dataGetStruct Literal null BlockStatement ReturnStatement Cast ReferenceType JavaObject MethodInvocation recv dataGetStruct BlockStatement ReturnStatement Cast ReferenceType RubyObject MemberReference recv	1
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject match IfStatement MethodInvocation match isNil ReturnStatement MemberReference match LocalVariableDeclaration ReferenceType RubyMatchData VariableDeclarator m Cast ReferenceType RubyMatchData MemberReference match LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation m getRuntime IfStatement BinaryOperation == MemberReference m begin Literal - 1 ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation m.str MethodInvocation MemberReference m infectBy MemberReference runtime MemberReference m end BinaryOperation - MethodInvocation m.str MemberReference realSize getByteList MemberReference m end makeShared	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation value toString	0
MethodDeclaration Modifier private static FormalParameter ReferenceType ByteList result FormalParameter BasicType long l StatementExpression MethodInvocation MemberReference result Cast BasicType int BinaryOperation >>> MemberReference l Literal 32 encodeIntBigEndian StatementExpression MethodInvocation MemberReference result Cast BasicType int BinaryOperation & MemberReference l Literal encodeIntBigEndian	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "atan2" ElementValuePair required Literal 2 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType RubyFloat FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject x FormalParameter ReferenceType IRubyObject y LocalVariableDeclaration BasicType double VariableDeclarator valuea Cast ReferenceType RubyFloat MethodInvocation RubyKernel MemberReference recv MemberReference x new_float LocalVariableDeclaration BasicType double VariableDeclarator valueb Cast ReferenceType RubyFloat MethodInvocation RubyKernel MemberReference recv MemberReference y new_float ReturnStatement MethodInvocation RubyFloat MethodInvocation recv getRuntime MethodInvocation Math MemberReference valuea MemberReference valueb newFloat	0
MethodDeclaration Modifier final public static ReferenceType ByteBuffer slice FormalParameter ReferenceType ByteBuffer buf FormalParameter BasicType int offset LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator tmp MethodInvocation buf duplicate StatementExpression MethodInvocation tmp Cast BasicType int MemberReference offset position ReturnStatement MethodInvocation tmp slice	1
MethodDeclaration Modifier private BasicType int singleQuote IOException StatementExpression Assignment MemberReference lex_strterm ClassCreator ReferenceType StringTerm MemberReference str_squote Literal '\0' Literal '\'' = StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "'" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tSTRING_BEG	0
MethodDeclaration Modifier public clear StatementExpression MethodInvocation rb_clear	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "div" ReferenceType IRubyObject op_div FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType RubyBigDecimal VariableDeclarator val MethodInvocation MemberReference other Literal false getVpValue IfStatement BinaryOperation == MemberReference val Literal null BlockStatement ReturnStatement MethodInvocation MemberReference context Literal "div" MemberReference other callCoerced IfStatement BinaryOperation || BinaryOperation || MethodInvocation isNaN MethodInvocation val isZero MethodInvocation val isNaN BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime newNaN IfStatement BinaryOperation || MethodInvocation isInfinity MethodInvocation val isInfinity BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime newNaN ReturnStatement ClassCreator MethodInvocation setResult ReferenceType RubyBigDecimal MethodInvocation getRuntime This MemberReference value MethodInvocation MemberReference val value divideToIntegralValue	1
MethodDeclaration Modifier final protected ensureClassVariablesSettable LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime IfStatement BinaryOperation && MethodInvocation ! isFrozen BinaryOperation || BinaryOperation < MethodInvocation runtime getSafeLevel Literal 4 MethodInvocation isTaint BlockStatement ReturnStatement IfStatement BinaryOperation && BinaryOperation >= MethodInvocation runtime getSafeLevel Literal 4 MethodInvocation ! isTaint BlockStatement ThrowStatement MethodInvocation runtime MemberReference ERR_INSECURE_SET_CONSTANT newSecurityError IfStatement MethodInvocation isFrozen BlockStatement IfStatement BinaryOperation instanceof This ReferenceType RubyModule BlockStatement ThrowStatement MethodInvocation runtime MemberReference ERR_FROZEN_CONST_TYPE newFrozenError BlockStatement ThrowStatement MethodInvocation runtime Literal "" newFrozenError	0
MethodDeclaration Modifier public compileColon3 FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType Colon3Node VariableDeclarator iVisited Cast ReferenceType Colon3Node MemberReference node LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation iVisited getName StatementExpression MethodInvocation context MemberReference name retrieveConstantFromObject IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public Annotation Override ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType DynamicMethod getMethods ReturnStatement MethodInvocation getMethods	0
MethodDeclaration Modifier private ReferenceType Regex getQuotedPattern FormalParameter ReferenceType IRubyObject obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyRegexp ReturnStatement Cast ReferenceType RubyRegexp MemberReference obj LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime ReturnStatement MethodInvocation RubyRegexp MemberReference runtime MethodInvocation MemberReference value MemberReference obj getStringForPattern MethodInvocation runtime MethodInvocation getEncoding getKCode Literal 0 getQuotedRegexpFromCache	1
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType String o1 FormalParameter ReferenceType String o2 ReturnStatement BinaryOperation - MethodInvocation SAMPLES MemberReference o2 get MethodInvocation SAMPLES MemberReference o1 get	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject getc FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv StatementExpression MethodInvocation context MethodInvocation getWarnings MethodInvocation MemberReference ID DEPRECATED_METHOD Literal is obsolete; use instead" Literal Literal warn getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator defin MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation Literal "$stdin" get getRuntime ReturnStatement MethodInvocation defin MemberReference context Literal callMethod	0
MethodDeclaration Modifier public ReferenceType Object case441_line1649 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation Literal "formal argument cannot be a constant" yyerror ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes IfStatement BinaryOperation != MemberReference post Literal null ReturnStatement MethodInvocation Node MemberReference pre MemberReference optArgs MemberReference restArgNode MemberReference post MemberReference blockArgNode createList ReturnStatement MethodInvocation Node MemberReference pre MemberReference optArgs MemberReference restArgNode MemberReference blockArgNode createList	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "scan_full" ElementValuePair required Literal 3 ReferenceType IRubyObject scan_full FormalParameter ReferenceType IRubyObject regex FormalParameter ReferenceType IRubyObject s FormalParameter ReferenceType IRubyObject f ReturnStatement MethodInvocation MemberReference regex MethodInvocation s isTrue MethodInvocation f isTrue Literal true scan	1
MethodDeclaration Modifier public static ReferenceType IRubyObject each_slice FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final BasicType int VariableDeclarator size MethodInvocation RubyNumeric MemberReference arg num2int LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation <= MemberReference size Literal 0 ThrowStatement MethodInvocation runtime Literal "invalid slice size" newArgumentError LocalVariableDeclaration Modifier final ReferenceType RubyArray VariableDeclarator result ArrayCreator ReferenceType RubyArray ArrayInitializer MethodInvocation runtime MemberReference size newArray StatementExpression MethodInvocation RubyEnumerable MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MemberReference ArraySelector Literal 0 MethodInvocation MemberReference ArraySelector Literal 0 largs append result IfStatement BinaryOperation == MemberReference ArraySelector Literal 0 MethodInvocation size result MemberReference size BlockStatement StatementExpression MethodInvocation block MemberReference ctx MemberReference ArraySelector Literal 0 result yield StatementExpression Assignment MemberReference ArraySelector Literal 0 result MethodInvocation runtime MemberReference size newArray = ReturnStatement MethodInvocation runtime getNil callEach IfStatement BinaryOperation > MemberReference ArraySelector Literal 0 MethodInvocation size result Literal 0 StatementExpression MethodInvocation block MemberReference context MemberReference ArraySelector Literal 0 result yield ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject getValues ReturnStatement ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference variableValueZero MemberReference variableValueOne MemberReference variableValueTwo	0
MethodDeclaration Modifier public BasicType long getCodeSize ReturnStatement MethodInvocation codeSize get	0
MethodDeclaration Modifier private ReferenceType SymbolEntry rehash LocalVariableDeclaration ReferenceType SymbolEntry VariableDeclarator oldTable MemberReference symbolTable LocalVariableDeclaration BasicType int VariableDeclarator oldCapacity IfStatement BinaryOperation >= Assignment MemberReference oldCapacity MemberReference oldTable length = MemberReference MAXIMUM_CAPACITY BlockStatement ReturnStatement MemberReference oldTable LocalVariableDeclaration BasicType int VariableDeclarator newCapacity BinaryOperation << MemberReference oldCapacity Literal 1 LocalVariableDeclaration ReferenceType SymbolEntry VariableDeclarator newTable ArrayCreator ReferenceType SymbolEntry MemberReference newCapacity StatementExpression Assignment MemberReference threshold Cast BasicType int BinaryOperation * MemberReference newCapacity MemberReference loadFactor = LocalVariableDeclaration BasicType int VariableDeclarator sizeMask BinaryOperation - MemberReference newCapacity Literal 1 LocalVariableDeclaration ReferenceType SymbolEntry VariableDeclarator e ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference oldCapacity BinaryOperation >= MemberReference -- i Literal 0 BlockStatement StatementExpression Assignment MemberReference e MemberReference ArraySelector MemberReference i oldTable = IfStatement BinaryOperation != MemberReference e Literal null BlockStatement LocalVariableDeclaration ReferenceType SymbolEntry VariableDeclarator next MemberReference e next LocalVariableDeclaration BasicType int VariableDeclarator idx BinaryOperation & MemberReference e hash MemberReference sizeMask IfStatement BinaryOperation == MemberReference next Literal null StatementExpression Assignment MemberReference ArraySelector MemberReference idx newTable MemberReference e = BlockStatement LocalVariableDeclaration ReferenceType SymbolEntry VariableDeclarator lastRun MemberReference e LocalVariableDeclaration BasicType int VariableDeclarator lastIdx MemberReference idx ForStatement ForControl VariableDeclaration ReferenceType SymbolEntry VariableDeclarator last MemberReference next BinaryOperation != MemberReference last Literal null Assignment MemberReference last MemberReference last next = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator k BinaryOperation & MemberReference last hash MemberReference sizeMask IfStatement BinaryOperation != MemberReference k MemberReference lastIdx BlockStatement StatementExpression Assignment MemberReference lastIdx MemberReference k = StatementExpression Assignment MemberReference lastRun MemberReference last = StatementExpression Assignment MemberReference ArraySelector MemberReference lastIdx newTable MemberReference lastRun = ForStatement ForControl VariableDeclaration ReferenceType SymbolEntry VariableDeclarator p MemberReference e BinaryOperation != MemberReference p MemberReference lastRun Assignment MemberReference p MemberReference p next = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator k BinaryOperation & MemberReference p hash MemberReference sizeMask LocalVariableDeclaration ReferenceType SymbolEntry VariableDeclarator n MemberReference ArraySelector MemberReference k newTable StatementExpression Assignment MemberReference ArraySelector MemberReference k newTable ClassCreator ReferenceType SymbolEntry MemberReference p hash MemberReference p name MemberReference p symbol MemberReference n = StatementExpression Assignment MemberReference symbolTable MemberReference newTable = ReturnStatement MemberReference newTable	1
MethodDeclaration Modifier public Annotation JRubyMethod Annotation Override ReferenceType IRubyObject to_s LocalVariableDeclaration ReferenceType Object VariableDeclarator dataStruct MethodInvocation dataGetStruct IfStatement BinaryOperation != MemberReference dataStruct Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator stringValue MethodInvocation dataStruct toString IfStatement BinaryOperation != MemberReference stringValue Literal null BlockStatement ReturnStatement MethodInvocation RubyString MethodInvocation getRuntime MethodInvocation dataStruct toString ReturnStatement MethodInvocation MethodInvocation getNil getRuntime ReturnStatement MethodInvocation RubyString MethodInvocation getRuntime newEmptyString	0
MethodDeclaration Modifier public addBuiltinLibrary FormalParameter ReferenceType String name FormalParameter ReferenceType Library library StatementExpression MethodInvocation builtinLibraries MemberReference name MemberReference library put	0
MethodDeclaration Modifier public ReferenceType Object case261_line1004 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType Node getLast ReturnStatement TernaryExpression BinaryOperation == MethodInvocation list size Literal 0 Literal null MethodInvocation list BinaryOperation - MethodInvocation list size Literal 1 get	1
MethodDeclaration Modifier public ReferenceType Object case249_line967 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType getFlowDirection ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Set keySet ReturnStatement ClassCreator ReferenceType AbstractSet MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement MethodInvocation keyIterator MethodDeclaration Modifier public BasicType int size ReturnStatement This GenericMap MethodInvocation size MethodDeclaration Modifier public ReferenceType Object toArray FormalParameter ReferenceType Object arr ReturnStatement MethodInvocation GenericMap MemberReference arr MethodInvocation size MethodInvocation iterator toArray	0
MethodDeclaration Modifier public internalRaise FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator exception MethodInvocation MemberReference runtime MemberReference args MemberReference Block NULL_BLOCK prepareRaiseException StatementExpression MethodInvocation ClassCreator ReferenceType ThreadService ReferenceType Event This This MemberReference ThreadService.Event.Type RAISE MemberReference exception	0
MethodDeclaration Modifier public ReferenceType LoadService create FormalParameter ReferenceType Ruby runtime ReturnStatement ClassCreator ReferenceType LoadService MemberReference runtime	0
MethodDeclaration Modifier public BasicType int getInOutFlags ReturnStatement MemberReference inout	0
MethodDeclaration Modifier public static ReferenceType RubyClass createJavaObjectClass FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyModule javaModule LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation javaModule Literal "JavaObject" MethodInvocation runtime getObject MemberReference JAVA_OBJECT_ALLOCATOR defineClassUnder StatementExpression MethodInvocation MemberReference runtime MemberReference result registerRubyMethods StatementExpression MethodInvocation result MethodInvocation Literal "new" undefineMethod getMetaClass StatementExpression MethodInvocation result MethodInvocation Literal "allocate" undefineMethod getMetaClass ReturnStatement MemberReference result	1
MethodDeclaration Modifier private static ReferenceType String formatDouble FormalParameter BasicType double x ReturnStatement MethodInvocation pattern MethodInvocation Literal "$1" replaceFirst MethodInvocation String Literal "%.32g" MemberReference x format matcher	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "select" ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject select FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType RubyArray VariableDeclarator result IfStatement BinaryOperation == MemberReference regs Literal null BlockStatement IfStatement BinaryOperation < MemberReference begin Literal 0 ReturnStatement MethodInvocation runtime newEmptyArray LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator s MethodInvocation str MemberReference runtime MemberReference begin BinaryOperation - MemberReference end MemberReference begin substr StatementExpression MethodInvocation s MethodInvocation isTaint setTaint StatementExpression Assignment MemberReference result TernaryExpression MethodInvocation block MethodInvocation isTrue MemberReference context MemberReference s yield MethodInvocation runtime MemberReference s newArray MethodInvocation runtime newEmptyArray = BlockStatement StatementExpression Assignment MemberReference result MethodInvocation runtime newArray = LocalVariableDeclaration BasicType boolean VariableDeclarator taint MethodInvocation isTaint ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference regs numRegs MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator s MethodInvocation str MemberReference runtime MemberReference regs ArraySelector MemberReference i beg BinaryOperation - MemberReference regs ArraySelector MemberReference i end MemberReference regs ArraySelector MemberReference i beg substr IfStatement MemberReference taint StatementExpression MethodInvocation s Literal true setTaint IfStatement MethodInvocation block MethodInvocation isTrue MemberReference context MemberReference s yield StatementExpression MethodInvocation result MemberReference s append ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType autoloadFor FormalParameter ReferenceType String name ReturnStatement MethodInvocation autoloadMap MemberReference name get	0
MethodDeclaration Modifier public Annotation Override write FormalParameter BasicType byte b TryStatement StatementExpression MethodInvocation ClassCreator ReferenceType String MemberReference b Literal "UTF-8" writeLine CatchClause CatchClauseParameter UnsupportedEncodingException ex StatementExpression MethodInvocation ClassCreator ReferenceType String MemberReference b writeLine	0
MethodDeclaration Modifier public final get FormalParameter BasicType long offset FormalParameter BasicType float dst FormalParameter BasicType int off FormalParameter BasicType int len StatementExpression MethodInvocation MemberReference offset BinaryOperation << MemberReference len Literal 2 checkBounds StatementExpression MethodInvocation IO BinaryOperation + MemberReference address MemberReference offset MemberReference dst MemberReference off MemberReference len getFloatArray	0
MethodDeclaration Modifier public BasicType int getClassLoadCount ReturnStatement MethodInvocation classLoadCount get	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule klazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation method MemberReference context MemberReference self MemberReference klazz MemberReference name MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference block call	1
MethodDeclaration Modifier public ReferenceType RubySymbol ReferenceType SymbolTable getSymbolTable ReturnStatement MemberReference symbolTable	0
MethodDeclaration setInteger FormalParameter ReferenceType RubyClass integerClass StatementExpression Assignment This MemberReference integerClass MemberReference integerClass =	0
MethodDeclaration Modifier public ReferenceType Object removeInternalVariable FormalParameter ReferenceType String name AssertStatement MethodInvocation ! IdUtil MemberReference name isRubyVariable ReturnStatement MethodInvocation MemberReference name variableTableRemove	1
MethodDeclaration Modifier public setFrozen FormalParameter BasicType boolean frozen IfStatement MemberReference frozen BlockStatement StatementExpression Assignment MemberReference flags MemberReference FROZEN_F |= BlockStatement StatementExpression Assignment MemberReference flags MemberReference ~ FROZEN_F &=	0
MethodDeclaration Modifier public ReferenceType Binding currentBinding FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Visibility visibility LocalVariableDeclaration ReferenceType Frame VariableDeclarator frame MethodInvocation getCurrentFrame ReturnStatement ClassCreator ReferenceType Binding MemberReference self MemberReference frame MemberReference visibility MethodInvocation getRubyClass MethodInvocation getCurrentScope MemberReference file MemberReference line	0
MethodDeclaration Modifier public setArgValues FormalParameter ReferenceType IRubyObject values FormalParameter BasicType int size AssertStatement BinaryOperation <= MemberReference size MemberReference SIZE BinaryOperation + BinaryOperation + BinaryOperation + This MethodInvocation getClass MethodInvocation getSimpleName Literal " does not support scopes with " MemberReference size Literal " variables"	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair rest Literal true ReferenceType IRubyObject recv FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType OpenFile VariableDeclarator openFile MethodInvocation getOpenFileChecked TryStatement ReturnStatement MethodInvocation RubyString MethodInvocation context getRuntime MethodInvocation openFile MethodInvocation MethodInvocation RubyNumeric MemberReference ArraySelector Literal 0 args fix2int read getMainStream newString CatchClause CatchClauseParameter BadDescriptorException e ThrowStatement MethodInvocation context MethodInvocation newErrnoEBADFError getRuntime CatchClause CatchClauseParameter EOFException e ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime CatchClause CatchClauseParameter IOException e IfStatement Literal MethodInvocation MethodInvocation e getMessage equals "Socket not open" BlockStatement ThrowStatement MethodInvocation context MethodInvocation MethodInvocation e getMessage newIOError getRuntime ThrowStatement MethodInvocation context MethodInvocation MethodInvocation e getMessage newSystemCallError getRuntime	1
MethodDeclaration Modifier public ReferenceType JumpTarget ReturnStatement MemberReference	0
MethodDeclaration Modifier private assertSetValue FormalParameter BasicType int offset FormalParameter ReferenceType IRubyObject value AssertStatement BinaryOperation < MemberReference offset MemberReference variableValues length BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Setting " MemberReference offset Literal " to " MemberReference value Literal ", O: " This	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject as FormalParameter ReferenceType Class javaClass ReturnStatement MethodInvocation MiniJava MethodInvocation getRuntime MethodInvocation MethodInvocation getRuntime This MemberReference javaClass coerceToJavaType javaToRuby	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ">" ElementValuePair required Literal 1 ReferenceType IRubyObject op_gt FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyTime BlockStatement ReturnStatement MethodInvocation MethodInvocation BinaryOperation > MethodInvocation Cast ReferenceType RubyTime MemberReference other cmp Literal 0 newBoolean getRuntime ReturnStatement MethodInvocation RubyComparable MemberReference context This MemberReference other op_gt	1
MethodDeclaration Modifier public compileOpAsgnOr FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType OpAsgnOrNode VariableDeclarator orNode Cast ReferenceType OpAsgnOrNode MemberReference node IfStatement MethodInvocation MethodInvocation orNode getFirstNode BlockStatement StatementExpression MethodInvocation MethodInvocation orNode getFirstNode MemberReference context compileGetDefinitionBase StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation orNode getSecondNode MemberReference context Literal true compile ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation orNode getFirstNode MemberReference context Literal true compile StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation MethodInvocation orNode getSecondNode MemberReference context Literal true compile performBooleanBranch isNull BlockStatement StatementExpression MethodInvocation MethodInvocation orNode getFirstNode MemberReference context Literal true compile StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation MethodInvocation orNode getSecondNode MemberReference context Literal true compile performBooleanBranch StatementExpression MethodInvocation context pollThreadEvents IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public Annotation Override finish IOException StatementExpression MethodInvocation StatementExpression SuperMethodInvocation finish StatementExpression MethodInvocation writeTrailer	0
MethodDeclaration Modifier public ReferenceType Object case232_line925 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals ClassCreator ReferenceType Hash19Node MethodInvocation getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals arg_append = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public waitUntilReady IOException InterruptedException WhileStatement BinaryOperation == MethodInvocation ready Literal 0 BlockStatement StatementExpression MethodInvocation Thread Literal 10 sleep	0
MethodDeclaration Modifier public BasicType boolean isBackrefLastlineScope ReturnStatement MemberReference isBackrefLastlineScope	0
MethodDeclaration Modifier public FormalParameter ReferenceType CompilerCallback argsCallback FormalParameter ReferenceType scope StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation methodCompiler Literal "getCurrentScope" MethodInvocation ClassReference ReferenceType DynamicScope sig invokeThreadContext StatementExpression MethodInvocation method MethodInvocation methodCompiler getDynamicScopeIndex astore IfStatement BinaryOperation != MemberReference scope Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation scope getNumberOfVariables MemberReference ++ i BlockStatement StatementExpression MethodInvocation methodCompiler loadNil StatementExpression MethodInvocation MemberReference i Literal false assignLocalVariable StatementExpression Assignment MemberReference MethodInvocation scope getNumberOfVariables += IfStatement BinaryOperation != MemberReference argsCallback Literal null BlockStatement StatementExpression MethodInvocation method MemberReference argsIndex aload StatementExpression MethodInvocation argsCallback MemberReference methodCompiler call	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject listen FormalParameter ReferenceType IRubyObject backlog ReturnStatement MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime MemberReference backlog listen	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType Block block IfStatement BinaryOperation == MemberReference compiledMethod Literal null StatementExpression MethodInvocation initializeMethod ReturnStatement MethodInvocation compiledMethod MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference block call	1
MethodDeclaration Modifier public BasicType int getStartLine ReturnStatement MemberReference line	0
MethodDeclaration Modifier public ReferenceType RubyClass getFloatDomainError ReturnStatement MemberReference floatDomainError	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator values Cast ReferenceType RubyArray MemberReference arg LocalVariableDeclaration BasicType int VariableDeclarator valueLength MethodInvocation values getLength SwitchStatement MemberReference valueLength SwitchStatementCase Literal 0 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block assign BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 0 eltInternal MemberReference block assign BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 0 eltInternal MethodInvocation values Literal 1 eltInternal MemberReference block assign BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 0 eltInternal MethodInvocation values Literal 1 eltInternal MethodInvocation values Literal 2 eltInternal MemberReference block assign BreakStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MemberReference preLength BinaryOperation < MemberReference i MemberReference valueLength MemberReference ++ i BlockStatement StatementExpression MethodInvocation pre MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation values MemberReference i eltInternal MemberReference block Literal false assign MemberReference i get IfStatement BinaryOperation < MemberReference valueLength MemberReference preLength BlockStatement StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block MemberReference valueLength IfStatement BinaryOperation == MemberReference valueLength MemberReference preLength BlockStatement StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime MemberReference IRubyObject NULL_ARRAY MemberReference block Literal true assign BlockStatement StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MethodInvocation values MemberReference preLength BinaryOperation - MemberReference valueLength MemberReference preLength subseqLight MemberReference block Literal true assign	1
MethodDeclaration Modifier public ReferenceType String foo ReturnStatement Literal "MyClass"	0
MethodDeclaration Modifier protected ReferenceType Iterator keyIterator ReturnStatement ClassCreator ReferenceType KeyIterator	0
MethodDeclaration Modifier public ReferenceType Object case386_line1458 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType IterNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals getPosition Cast ReferenceType ArgsNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals MethodInvocation support getCurrentScope = StatementExpression MethodInvocation support popCurrentScope ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public FormalParameter ReferenceType Profile newProfile StatementExpression Assignment MemberReference profile MemberReference newProfile =	0
MethodDeclaration Modifier public final FormalParameter BasicType int size StatementExpression Assignment MemberReference scopes ArrayCreator ReferenceType MemberReference size =	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<" ElementValuePair required Literal 1 ReferenceType IRubyObject op_lt FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other SwitchStatement MethodInvocation other MemberReference index getMetaClass SwitchStatementCase MemberReference ClassIndex FIXNUM MemberReference ClassIndex BIGNUM MemberReference ClassIndex FLOAT LocalVariableDeclaration BasicType double VariableDeclarator b Cast ReferenceType RubyNumeric MemberReference other ReturnStatement MethodInvocation RubyBoolean MethodInvocation getRuntime BinaryOperation && MethodInvocation ! Double MemberReference b isNaN BinaryOperation < MemberReference value MemberReference b newBoolean SwitchStatementCase ReturnStatement MethodInvocation MemberReference context Literal "<" MemberReference other coerceRelOp	1
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public static ReferenceType Block FormalParameter ReferenceType Block given FormalParameter ReferenceType Block parent IfStatement MethodInvocation ! given isGiven BlockStatement ReturnStatement MemberReference parent ReturnStatement MemberReference given	0
MethodDeclaration Modifier public ReferenceType Object case254_line1004 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop LocalVariableDeclaration ReferenceType Node VariableDeclarator node MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals splat_array IfStatement BinaryOperation != MemberReference node Literal null BlockStatement StatementExpression Assignment MemberReference yyVal MethodInvocation support MemberReference node Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals list_append = BlockStatement StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals arg_append = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType long getStartTime ReturnStatement MemberReference startTime	0
MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value IfStatement MemberReference ! ArraySelector Literal 0 StatementExpression MethodInvocation buffer MethodInvocation Literal ' ' append Literal ',' append StatementExpression MethodInvocation buffer MethodInvocation MethodInvocation getByteList MemberReference context MemberReference key inspect append StatementExpression MethodInvocation buffer MethodInvocation Literal '>' append Literal '=' append StatementExpression MethodInvocation buffer MethodInvocation MethodInvocation getByteList MemberReference context MemberReference value inspect append StatementExpression Assignment MemberReference ArraySelector Literal 0 Literal false =	1
MethodDeclaration Modifier public BasicType boolean isSync ReturnStatement BinaryOperation != BinaryOperation & MemberReference mode MemberReference SYNC Literal 0	0
MethodDeclaration Modifier public static ReferenceType RubyEncoding FormalParameter ReferenceType Ruby runtime FormalParameter BasicType byte name FormalParameter BasicType int p FormalParameter BasicType int end FormalParameter BasicType boolean isDummy ReturnStatement ClassCreator ReferenceType RubyEncoding MemberReference runtime MemberReference name MemberReference p MemberReference end MemberReference isDummy	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "==" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_equal19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation == This MemberReference other ReturnStatement MethodInvocation runtime getTrue IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyString BlockStatement LocalVariableDeclaration ReferenceType RubyString VariableDeclarator otherString Cast ReferenceType RubyString MemberReference other ReturnStatement TernaryExpression BinaryOperation && MethodInvocation MemberReference otherString isComparableWith MethodInvocation value MemberReference otherString value equal MethodInvocation runtime getTrue MethodInvocation runtime getFalse ReturnStatement MethodInvocation MemberReference context MemberReference other op_equalCommon	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType COLON2NODE	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "get_array_of_int32" Literal "get_array_of_int" ElementValuePair required Literal 2 ReferenceType IRubyObject get_array_of_int32 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset FormalParameter ReferenceType IRubyObject length ReturnStatement MethodInvocation MemoryUtil MethodInvocation context getRuntime MethodInvocation getMemoryIO MethodInvocation MemberReference offset getOffset MethodInvocation Util MemberReference length int32Value getArrayOfSigned32	1
MethodDeclaration Modifier public loadConstantSet FormalParameter ReferenceType RubyModule module FormalParameter ReferenceType String constantSetName ForStatement EnhancedForControl VariableDeclaration ReferenceType Constant VariableDeclarator c MethodInvocation MemberReference constantSetName getConstantSet BlockStatement IfStatement MethodInvocation Character MethodInvocation c MethodInvocation Literal 0 charAt name isUpperCase BlockStatement StatementExpression MethodInvocation module MethodInvocation c name MethodInvocation MethodInvocation c value newFixnum fastSetConstant	0
MethodDeclaration Modifier public ReferenceType Set ReturnStatement ClassCreator ReferenceType BaseSet MemberReference	0
MethodDeclaration Modifier public hookIntoRuntimeWithStreams FormalParameter Modifier final ReferenceType Ruby runtime StatementExpression MethodInvocation MemberReference runtime hookIntoRuntime LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator in ClassCreator ReferenceType RubyIO MemberReference runtime MethodInvocation getInputStream StatementExpression MethodInvocation runtime MethodInvocation Literal "$stdin" MemberReference in set getGlobalVariables LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator out ClassCreator ReferenceType RubyIO MemberReference runtime MethodInvocation getOutputStream StatementExpression MethodInvocation runtime MethodInvocation Literal "$stdout" MemberReference out set getGlobalVariables StatementExpression MethodInvocation runtime MethodInvocation Literal "$stderr" MemberReference out set getGlobalVariables	0
MethodDeclaration Modifier public ReferenceType Object case443_line1655 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation Literal "formal argument cannot be an global variable" yyerror ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier protected ReferenceType DynamicMethod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String methodName ReturnStatement MethodInvocation runtimeCache MemberReference context MemberReference self Literal 7 MemberReference methodName getMethod	0
MethodDeclaration Modifier private final static ReferenceType String determineLibExt SwitchStatement MemberReference OS SwitchStatementCase WINDOWS ReturnStatement Literal "dll" SwitchStatementCase AIX ReturnStatement Literal "a" SwitchStatementCase DARWIN ReturnStatement Literal "dylib" SwitchStatementCase ReturnStatement Literal "so"	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_f" ReferenceType IRubyObject to_f ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime MethodInvocation newFloat	1
MethodDeclaration Modifier private check IfStatement BinaryOperation == MemberReference pattern Literal null ThrowStatement MethodInvocation MethodInvocation Literal "uninitialized Regexp" newTypeError getRuntime	1
MethodDeclaration Modifier private static safeInvokeAndWait FormalParameter ReferenceType Runnable runnable InvocationTargetException InterruptedException IfStatement MethodInvocation EventQueue BlockStatement TryStatement StatementExpression MethodInvocation runnable run CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType InvocationTargetException MemberReference e BlockStatement StatementExpression MethodInvocation EventQueue MemberReference runnable invokeAndWait	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType NOTNODE	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator values Cast ReferenceType RubyArray MemberReference arg LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation values getLength SwitchStatement MemberReference length SwitchStatementCase Literal 0 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference block assign BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 0 eltInternal MemberReference block assign BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 0 eltInternal MethodInvocation values Literal 1 eltInternal MemberReference block assign BreakStatement SwitchStatementCase Literal 3 StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 0 eltInternal MethodInvocation values Literal 1 eltInternal MethodInvocation values Literal 2 eltInternal MemberReference block assign BreakStatement SwitchStatementCase StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 0 eltInternal MemberReference block Literal false assign StatementExpression MethodInvocation parameter2 MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 1 eltInternal MemberReference block Literal false assign StatementExpression MethodInvocation parameter3 MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 2 eltInternal MemberReference block Literal false assign StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MethodInvocation values Literal 3 BinaryOperation - MemberReference length Literal 3 subseqLight MemberReference block Literal true assign BreakStatement	0
MethodDeclaration Modifier public static ReferenceType CacheEntry FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType String name1 FormalParameter ReferenceType String name2 FormalParameter ReferenceType String name3 FormalParameter ReferenceType String name4 FormalParameter ReferenceType String name5 FormalParameter ReferenceType String name6 FormalParameter ReferenceType String name7 FormalParameter ReferenceType String name8 ReturnStatement MethodInvocation MethodInvocation obj getMetaClass MemberReference name1 MemberReference name2 MemberReference name3 MemberReference name4 MemberReference name5 MemberReference name6 MemberReference name7 MemberReference name8	1
MethodDeclaration Modifier public insertInstr FormalParameter ReferenceType IR_Instr i StatementExpression MethodInvocation _instrs Literal 0 MemberReference i add	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair backtrace Literal true ReferenceType IRubyObject java_method FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject rubyName LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation rubyName asJavaString ReturnStatement MethodInvocation MemberReference name getRubyMethod	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "readline" ElementValuePair writes MemberReference FrameField LASTLINE ReferenceType IRubyObject readline FormalParameter ReferenceType ThreadContext context IOException LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator dst MethodInvocation MemberReference context ArrayCreator ReferenceType IRubyObject Literal 0 gets IfStatement MethodInvocation dst isNil BlockStatement ThrowStatement MethodInvocation MethodInvocation newEOFError getRuntime ReturnStatement MemberReference dst	0
MethodDeclaration Modifier private ensureRuntimeCacheInited FormalParameter ReferenceType SkinnyMethodAdapter initMethod IfStatement MemberReference ! runtimeCacheInited BlockStatement StatementExpression MethodInvocation initMethod Literal 0 aload StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p newobj StatementExpression MethodInvocation initMethod dup StatementExpression MethodInvocation initMethod MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache p Literal "<init>" MethodInvocation VoidClassReference sig invokespecial StatementExpression MethodInvocation initMethod MethodInvocation ClassReference ReferenceType AbstractScript p Literal "runtimeCache" MethodInvocation ClassReference AbstractScript ReferenceType RuntimeCache ci putfield StatementExpression Assignment MemberReference runtimeCacheInited Literal true =	0
MethodDeclaration Modifier private ReferenceType Operand buildAttrAssign FormalParameter Modifier final ReferenceType AttrAssignNode attrAssignNode FormalParameter ReferenceType IR_Scope s LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Operand VariableDeclarator args MethodInvocation MethodInvocation attrAssignNode getArgsNode MemberReference s setupCallArgs LocalVariableDeclaration ReferenceType Operand VariableDeclarator obj MethodInvocation MethodInvocation attrAssignNode getReceiverNode MemberReference s build StatementExpression MethodInvocation s ClassCreator ReferenceType ATTR_ASSIGN_Instr MemberReference obj ClassCreator ReferenceType StringLiteral MethodInvocation attrAssignNode getName MethodInvocation args Literal 1 get addInstr ReturnStatement MethodInvocation args Literal 0 get	0
MethodDeclaration Modifier public BasicType double getValue ReturnStatement MemberReference value	0
MethodDeclaration Modifier final static ReferenceType Struct newStruct FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass FormalParameter ReferenceType IRubyObject ptr ReturnStatement ClassCreator ReferenceType Struct MemberReference runtime Cast ReferenceType RubyClass MemberReference klass MethodInvocation MemberReference runtime MemberReference klass getStructLayout MemberReference ptr	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "executable?" ElementValuePair required Literal 1 ElementValuePair module Literal true ReferenceType IRubyObject executable_p FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject filename LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator file MethodInvocation MemberReference filename file ReturnStatement MethodInvocation runtime BinaryOperation && MethodInvocation file exists MethodInvocation runtime MethodInvocation MethodInvocation file getAbsolutePath stat MethodInvocation isExecutable getPosix newBoolean	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "inspect" Annotation Override ReferenceType IRubyObject inspect ReturnStatement SuperMethodInvocation inspect	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation andNode getSecondNode MemberReference context Literal true compile	0
MethodDeclaration Modifier public static ReferenceType RubyArray constructRubyArray FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject one FormalParameter ReferenceType IRubyObject two FormalParameter ReferenceType IRubyObject three FormalParameter ReferenceType IRubyObject four FormalParameter ReferenceType IRubyObject five ReturnStatement MethodInvocation RubyArray MemberReference runtime MemberReference one MemberReference two MemberReference three MemberReference four MemberReference five	0
MethodDeclaration Modifier private ReferenceType IRubyObject getConstantInner FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String internedName FormalParameter ReferenceType RubyModule object LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation cref MemberReference internedName fastFetchConstant IfStatement BinaryOperation != MemberReference result Literal null BlockStatement IfStatement BinaryOperation == MemberReference result MemberReference RubyObject UNDEF ReturnStatement MethodInvocation MemberReference runtime MemberReference internedName MemberReference object getUndefConstant ReturnStatement MemberReference result ReturnStatement TernaryExpression BinaryOperation == MemberReference Literal null Literal null MethodInvocation MemberReference runtime MemberReference internedName MemberReference object getConstantInnerNoObject	1
MethodDeclaration Modifier private ReferenceType IRubyObject indexCommon19 FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject sub FormalParameter BasicType int pos IfStatement BinaryOperation instanceof MemberReference sub ReferenceType RubyRegexp BlockStatement LocalVariableDeclaration ReferenceType RubyRegexp VariableDeclarator regSub Cast ReferenceType RubyRegexp MemberReference sub StatementExpression Assignment MemberReference pos TernaryExpression MethodInvocation singleByteOptimizable MemberReference pos MethodInvocation StringSupport MethodInvocation MemberReference regSub checkEncoding MemberReference value bytes MemberReference value begin BinaryOperation + MemberReference value begin MemberReference value realSize MemberReference pos nth = StatementExpression Assignment MemberReference pos MethodInvocation regSub This MemberReference pos Literal false adjustStartPos19 = StatementExpression Assignment MemberReference pos MethodInvocation regSub MemberReference context This MemberReference pos Literal false search19 = StatementExpression Assignment MemberReference pos MethodInvocation MemberReference pos subLength = IfStatement BinaryOperation instanceof MemberReference sub ReferenceType RubyString BlockStatement StatementExpression Assignment MemberReference pos MethodInvocation Cast ReferenceType RubyString MemberReference sub MemberReference pos strIndex19 = StatementExpression Assignment MemberReference pos MethodInvocation MemberReference pos subLength = BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator tmp MethodInvocation sub checkStringType IfStatement MethodInvocation tmp isNil ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + Literal "type mismatch: " MethodInvocation sub MethodInvocation getName getMetaClass Literal " given" newTypeError StatementExpression Assignment MemberReference pos MethodInvocation Cast ReferenceType RubyString MemberReference tmp MemberReference pos strIndex19 = StatementExpression Assignment MemberReference pos MethodInvocation MemberReference pos subLength = ReturnStatement TernaryExpression BinaryOperation == MemberReference pos Literal - 1 MethodInvocation runtime getNil MethodInvocation RubyFixnum MemberReference runtime MemberReference pos newFixnum	1
MethodDeclaration Modifier public ReferenceType Object case504_line1935 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation Override ReferenceType Class loadClass FormalParameter ReferenceType String name ClassNotFoundException IfStatement MethodInvocation name Literal "org.jruby.test.TestHelper" equals ReturnStatement MethodInvocation MemberReference name findModClass ReturnStatement SuperMethodInvocation MemberReference name loadClass	1
MethodDeclaration Modifier private modifyAndKeepCodeRange StatementExpression MethodInvocation modify StatementExpression MethodInvocation keepCodeRange	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject inspect ReturnStatement MethodInvocation MethodInvocation getRuntime inspect	0
MethodDeclaration Modifier public BasicType boolean isAssumePrinting ReturnStatement MemberReference assumePrinting	0
MethodDeclaration Modifier public static BasicType int scanOct FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int len FormalParameter ReferenceType Encoding enc LocalVariableDeclaration BasicType int VariableDeclarator v Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator c WhileStatement BinaryOperation && BinaryOperation && BinaryOperation > MemberReference -- len Literal 0 MethodInvocation enc Assignment MemberReference c BinaryOperation & MemberReference ArraySelector MemberReference ++ p bytes Literal 0xff = isDigit BinaryOperation < MemberReference c Literal '8' BlockStatement StatementExpression Assignment MemberReference v BinaryOperation + BinaryOperation << MemberReference v Literal 3 MethodInvocation Encoding MemberReference c = ReturnStatement MemberReference v	0
MethodDeclaration Modifier public compileIter FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context LocalVariableDeclaration Modifier final ReferenceType IterNode VariableDeclarator Cast ReferenceType IterNode MemberReference node LocalVariableDeclaration Modifier final ReferenceType CompilerCallback VariableDeclarator closureBody ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation getBodyNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation getBodyNode MemberReference context Literal true compile BlockStatement StatementExpression MethodInvocation context loadNil LocalVariableDeclaration Modifier final ReferenceType CompilerCallback VariableDeclarator ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context IfStatement BinaryOperation != MethodInvocation getVarNode Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation getVarNode MemberReference context Literal false compileAssignment LocalVariableDeclaration BasicType boolean VariableDeclarator hasMultipleArgsHead Literal false IfStatement BinaryOperation instanceof MethodInvocation getVarNode ReferenceType MultipleAsgnNode BlockStatement StatementExpression Assignment MemberReference hasMultipleArgsHead BinaryOperation != Cast ReferenceType MultipleAsgnNode MethodInvocation getVarNode Literal null = LocalVariableDeclaration ReferenceType NodeType VariableDeclarator argsNodeId MethodInvocation MemberReference getArgumentTypeWackyHack LocalVariableDeclaration ReferenceType ASTInspector VariableDeclarator inspector ClassCreator ReferenceType ASTInspector StatementExpression MethodInvocation inspector MethodInvocation getBodyNode inspect StatementExpression MethodInvocation inspector MethodInvocation getVarNode inspect IfStatement BinaryOperation == MemberReference argsNodeId Literal null BlockStatement StatementExpression MethodInvocation context MethodInvocation MethodInvocation getStartLine getPosition MethodInvocation getScope MethodInvocation Arity MethodInvocation getValue MethodInvocation getVarNode MemberReference closureBody Literal null MemberReference hasMultipleArgsHead MemberReference argsNodeId MemberReference inspector BlockStatement StatementExpression MethodInvocation context MethodInvocation MethodInvocation getStartLine getPosition MethodInvocation getScope MethodInvocation Arity MethodInvocation getValue MethodInvocation getVarNode MemberReference closureBody MemberReference MemberReference hasMultipleArgsHead MemberReference argsNodeId MemberReference inspector	0
MethodDeclaration Modifier public setRubyFrameDelta FormalParameter BasicType int newDelta StatementExpression Assignment This MemberReference rubyFrameDelta MemberReference newDelta =	0
MethodDeclaration Modifier public ReferenceType RubyArray newArray ReturnStatement MethodInvocation RubyArray This newArray	0
MethodDeclaration Modifier public final Annotation Override BasicType int compareTo FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement ReturnStatement MethodInvocation value Cast ReferenceType RubyBignum MemberReference other compareTo ReturnStatement Cast BasicType int MethodInvocation MethodInvocation convertToInteger MethodInvocation getLongValue MethodInvocation MethodInvocation getCurrentContext getRuntime Literal "<=>" MemberReference other coerceCmp	0
MethodDeclaration Modifier public Annotation Override IfStatement MemberReference inNestedMethod BlockStatement StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation Literal "returnJump" MethodInvocation ClassReference JumpException ReferenceType ReturnJump ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext sig invokeUtilityMethod StatementExpression MethodInvocation method athrow BlockStatement StatementExpression MethodInvocation method areturn	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 Annotation Override ReferenceType IRubyObject coerce FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MethodInvocation MethodInvocation RubyKernel This MemberReference other new_float This newArray getRuntime	0
MethodDeclaration Modifier public compileArgsPushArguments FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType ArgsPushNode VariableDeclarator argsPushNode Cast ReferenceType ArgsPushNode MemberReference node StatementExpression MethodInvocation MethodInvocation argsPushNode getFirstNode MemberReference context Literal true compile StatementExpression MethodInvocation MethodInvocation argsPushNode getSecondNode MemberReference context Literal true compile StatementExpression MethodInvocation context appendToArray StatementExpression MethodInvocation context convertToJavaArray IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public emitBEQ FormalParameter ReferenceType BEQ_Instr beq LocalVariableDeclaration ReferenceType Operand VariableDeclarator args MethodInvocation beq getOperands StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 args StatementExpression MethodInvocation MemberReference ArraySelector Literal 1 args StatementExpression MethodInvocation MethodInvocation MethodInvocation Type ClassReference ReferenceType Object getType MemberReference EQ MethodInvocation MethodInvocation beq getLabel method	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "__method__" Literal "__callee__" ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject __method__ FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType Frame VariableDeclarator f MethodInvocation context getCurrentFrame LocalVariableDeclaration ReferenceType String VariableDeclarator name TernaryExpression BinaryOperation != MemberReference f Literal null MethodInvocation f getName Literal null ReturnStatement TernaryExpression BinaryOperation != MemberReference name Literal null MethodInvocation context MethodInvocation MemberReference name newSymbol getRuntime MethodInvocation context MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public static ReferenceType Object coerceOtherToType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Class target LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation MethodInvocation arg getClass MemberReference target isDuckTypeConvertable BlockStatement LocalVariableDeclaration ReferenceType RubyObject VariableDeclarator rubyObject Cast ReferenceType RubyObject MemberReference arg IfStatement MethodInvocation ! rubyObject Literal "java_object" respondsTo BlockStatement ReturnStatement MethodInvocation MemberReference context MemberReference rubyObject MemberReference target convertProcToInterface IfStatement MethodInvocation arg Literal "to_java_object" respondsTo BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator javaObject MethodInvocation arg MemberReference context Literal "to_java_object" callMethod IfStatement BinaryOperation instanceof MemberReference javaObject ReferenceType JavaObject BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MethodInvocation Cast ReferenceType JavaObject MemberReference javaObject MemberReference arg put getJavaSupport StatementExpression Assignment MemberReference javaObject Cast ReferenceType JavaObject MemberReference javaObject = ReturnStatement MemberReference javaObject ReturnStatement MemberReference arg	1
MethodDeclaration Modifier private BasicType long shiftedValue ReturnStatement BinaryOperation << MemberReference status Literal 8	0
MethodDeclaration Modifier protected setUp Exception StatementExpression Assignment MemberReference in ClassCreator ReferenceType ByteArrayInputStream ArrayCreator BasicType byte Literal 0 = StatementExpression Assignment MemberReference out ClassCreator ReferenceType ByteArrayOutputStream = StatementExpression Assignment MemberReference err ClassCreator ReferenceType ByteArrayOutputStream = StatementExpression Assignment MemberReference runtime MethodInvocation Ruby MemberReference in Assignment MemberReference printOut ClassCreator ReferenceType PrintStream MemberReference out = Assignment MemberReference printErr ClassCreator ReferenceType PrintStream MemberReference err = newInstance = StatementExpression MethodInvocation MemberReference runtime	0
MethodDeclaration Modifier public BasicType int getModifiers ReturnStatement MethodInvocation constructor getModifiers	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair frame Literal true ReferenceType IRubyObject marshal_load FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject str TryStatement LocalVariableDeclaration ReferenceType ByteList VariableDeclarator byteList MethodInvocation str MethodInvocation getByteList convertToString LocalVariableDeclaration ReferenceType ByteArrayInputStream VariableDeclarator bais ClassCreator ReferenceType ByteArrayInputStream MemberReference byteList bytes MemberReference byteList begin MemberReference byteList realSize LocalVariableDeclaration ReferenceType ObjectInputStream VariableDeclarator ois ClassCreator ReferenceType ObjectInputStream MemberReference bais StatementExpression MethodInvocation MethodInvocation ois readObject dataWrapStruct ReturnStatement This CatchClause CatchClauseParameter IOException ioe ThrowStatement MethodInvocation context MethodInvocation MemberReference ioe newIOErrorFromException getRuntime CatchClause CatchClauseParameter ClassNotFoundException cnfe ThrowStatement MethodInvocation context MethodInvocation BinaryOperation + Literal "Class not found unmarshaling Java type: " MethodInvocation cnfe getLocalizedMessage newTypeError getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "java_proxy?" ReferenceType IRubyObject is_java_proxy ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public ReferenceType Node newEvStrNode FormalParameter ReferenceType ISourcePosition position FormalParameter ReferenceType Node node LocalVariableDeclaration ReferenceType Node VariableDeclarator head MemberReference node WhileStatement Literal true BlockStatement IfStatement BinaryOperation == MemberReference node Literal null BreakStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation instanceof MemberReference node ReferenceType StrNode BinaryOperation instanceof MemberReference node ReferenceType DStrNode BinaryOperation instanceof MemberReference node ReferenceType EvStrNode BlockStatement ReturnStatement MemberReference node IfStatement BinaryOperation instanceof MemberReference node ReferenceType NewlineNode BreakStatement StatementExpression Assignment MemberReference node Cast ReferenceType NewlineNode MemberReference node = ReturnStatement ClassCreator ReferenceType EvStrNode MemberReference position MemberReference head	1
MethodDeclaration Modifier public getFrameName StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation Literal "getFrameName" MethodInvocation ClassReference ReferenceType String sig invokeThreadContext	0
MethodDeclaration Modifier public ReferenceType RubyModule ReturnStatement MemberReference gcModule	0
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value1 FormalParameter ReferenceType Block block StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MemberReference value1 MemberReference block Literal false assign StatementExpression MethodInvocation parameter2 MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime getNil MemberReference block Literal false assign StatementExpression MethodInvocation rest MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime MemberReference IRubyObject NULL_ARRAY MemberReference block Literal true assign	0
MethodDeclaration Modifier public ReferenceType Object case395_line1496 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation lexer getStrTerm = StatementExpression MethodInvocation lexer Literal null setStrTerm StatementExpression MethodInvocation lexer MemberReference LexState EXPR_BEG setState StatementExpression MethodInvocation lexer MethodInvocation stop getConditionState StatementExpression MethodInvocation lexer MethodInvocation stop getCmdArgumentState ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public defineAlias FormalParameter ReferenceType String newName FormalParameter ReferenceType String oldName StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation method MemberReference newName ldc StatementExpression MethodInvocation method MemberReference oldName ldc StatementExpression MethodInvocation Literal MethodInvocation ClassReference ReferenceType IRubyObject ClassReference ReferenceType ThreadContext ClassReference ReferenceType String ClassReference ReferenceType String sig invokeUtilityMethod	0
MethodDeclaration Modifier public ReferenceType DynamicMethod getRealMethod ReturnStatement MethodInvocation oldMethod getRealMethod	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation receiver MethodInvocation getCurrentContext getRuntime MemberReference receiver MemberReference args MemberReference block invokeSuper	0
MethodDeclaration Modifier public Exception TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "begin\n" Literal "require 'test/load_error'\n" Literal "rescue LoadError => e\n" Literal " require 'test/load_error'\n" Literal eval StatementExpression MethodInvocation Literal "should raise exception" fail CatchClause CatchClauseParameter RaiseException re StatementExpression MethodInvocation Literal MethodInvocation re MethodInvocation getMetaClass MethodInvocation toString getException assertEquals StatementExpression MethodInvocation BinaryOperation >= MethodInvocation re MethodInvocation toString MethodInvocation Literal "bogus_missing_lib" indexOf getException Literal 0 assertTrue	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isKindOf FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyArray	0
MethodDeclaration Modifier protected ReferenceType String getSignature ReturnStatement MethodInvocation StandardASMCompiler MethodInvocation script getClassname getStaticClosure19Signature	0
MethodDeclaration Modifier private pushFrame FormalParameter ReferenceType String name LocalVariableDeclaration BasicType int VariableDeclarator index This ++ MemberReference frameIndex LocalVariableDeclaration ReferenceType Frame VariableDeclarator stack MemberReference frameStack StatementExpression MemberReference ArraySelector MemberReference index MethodInvocation MemberReference name MemberReference file MemberReference line updateFrame stack IfStatement BinaryOperation == BinaryOperation + MemberReference index Literal 1 MemberReference stack length BlockStatement StatementExpression MethodInvocation expandFramesIfNecessary	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType CallSite asetSite StatementExpression MethodInvocation asetSite MemberReference context MemberReference self MemberReference receiver MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args MemberReference value call ReturnStatement MemberReference value	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation untilNode getConditionNode MemberReference context Literal true compile StatementExpression MethodInvocation context negateCurrentValue	0
MethodDeclaration Modifier public ReferenceType Node getIterNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "all?" checkContext LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation ! larg isTrue BlockStatement ThrowStatement MemberReference JumpException SPECIAL_JUMP ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public ReferenceType IRubyObject rejectBang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block IfStatement MethodInvocation ! block isGiven ThrowStatement MethodInvocation context MethodInvocation newLocalJumpErrorNoBlock getRuntime LocalVariableDeclaration BasicType int VariableDeclarator i2 Literal 0 StatementExpression MethodInvocation modify ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i1 Literal 0 BinaryOperation < MemberReference i1 MemberReference realLength MemberReference ++ i1 BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator v MemberReference ArraySelector BinaryOperation + MemberReference begin MemberReference i1 values IfStatement MethodInvocation block MethodInvocation isTrue MemberReference context MemberReference v yield ContinueStatement IfStatement BinaryOperation != MemberReference i1 MemberReference i2 StatementExpression MethodInvocation MemberReference i2 MemberReference v store StatementExpression MemberReference ++ i2 IfStatement BinaryOperation == MemberReference realLength MemberReference i2 ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime IfStatement BinaryOperation < MemberReference i2 MemberReference realLength BlockStatement TryStatement StatementExpression MethodInvocation RuntimeHelpers MemberReference values BinaryOperation + MemberReference begin MemberReference i2 BinaryOperation + MemberReference begin MemberReference realLength MethodInvocation context getRuntime fillNil CatchClause CatchClauseParameter ArrayIndexOutOfBoundsException e StatementExpression MethodInvocation concurrentModification StatementExpression Assignment MemberReference realLength MemberReference i2 = ReturnStatement This	1
MethodDeclaration Modifier public final ReferenceType RubyString cat FormalParameter BasicType byte str FormalParameter BasicType int beg FormalParameter BasicType int len StatementExpression MethodInvocation BinaryOperation + MemberReference value realSize MemberReference len modify StatementExpression MethodInvocation System MemberReference str MemberReference beg MemberReference value bytes BinaryOperation + MemberReference value begin MemberReference value realSize MemberReference len arraycopy StatementExpression Assignment MemberReference value realSize MemberReference len += ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType IRubyObject choiceCommon FormalParameter ReferenceType ThreadContext context ReturnStatement MemberReference ArraySelector BinaryOperation + MemberReference begin MethodInvocation context MethodInvocation getRandom MethodInvocation MemberReference realLength nextInt getRuntime values	0
MethodDeclaration Modifier public final ReferenceType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType String descriptor ReturnStatement MethodInvocation runtimeCache This MemberReference context Literal 5 MemberReference descriptor getBlockBody19	0
MethodDeclaration Modifier private addConditionalForWhen FormalParameter Modifier final ReferenceType WhenNode whenNode FormalParameter ReferenceType List TypeArgument ReferenceType ArgumentsCallback conditionals FormalParameter ReferenceType List TypeArgument ReferenceType CompilerCallback bodies FormalParameter ReferenceType CompilerCallback body StatementExpression MethodInvocation bodies MemberReference body add IfStatement BinaryOperation instanceof MethodInvocation whenNode getExpressionNodes ReferenceType ArrayNode BlockStatement IfStatement BinaryOperation instanceof MemberReference whenNode ReferenceType WhenOneArgNode BlockStatement StatementExpression MethodInvocation conditionals ClassCreator ReferenceType ArgumentsCallback MethodDeclaration Modifier public BasicType int getArity ReturnStatement Literal 1 MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation whenNode getExpressionNodes MemberReference context Literal true compile add ReturnStatement StatementExpression MethodInvocation conditionals MethodInvocation MethodInvocation whenNode getExpressionNodes getArgsCallback add	1
MethodDeclaration Modifier public ReferenceType Frame getFrames FormalParameter BasicType int delta LocalVariableDeclaration BasicType int VariableDeclarator top BinaryOperation + MemberReference frameIndex MemberReference delta LocalVariableDeclaration ReferenceType Frame VariableDeclarator frames ArrayCreator ReferenceType Frame BinaryOperation + MemberReference top Literal 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation <= MemberReference i MemberReference top MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i frames MemberReference ArraySelector MemberReference i MethodInvocation duplicateForBacktrace frameStack = ReturnStatement MemberReference frames	0
MethodDeclaration Modifier public StatementExpression MethodInvocation dup2_x2 StatementExpression MethodInvocation	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block IfStatement BinaryOperation instanceof MemberReference self ReferenceType RubyProc BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "interface impl method_missing for block used with non-Proc object" newTypeError getRuntime LocalVariableDeclaration ReferenceType RubyProc VariableDeclarator proc Cast ReferenceType RubyProc MemberReference self LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator newArgs IfStatement BinaryOperation == MemberReference args length Literal 1 BlockStatement StatementExpression Assignment MemberReference newArgs MemberReference IRubyObject NULL_ARRAY = BlockStatement StatementExpression Assignment MemberReference newArgs ArrayCreator ReferenceType IRubyObject BinaryOperation - MemberReference args length Literal 1 = StatementExpression MethodInvocation System MemberReference args Literal 1 MemberReference newArgs Literal 0 BinaryOperation - MemberReference args length Literal 1 arraycopy ReturnStatement MethodInvocation proc MemberReference context MemberReference newArgs call	0
MethodDeclaration Modifier public ReferenceType getStaticScope ReturnStatement MemberReference staticScope	0
MethodDeclaration Modifier public ReferenceType RubyString ReturnStatement MemberReference searchNameString	0
MethodDeclaration Modifier public ReferenceType Object case431_line1660 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType InstVarNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals Cast ReferenceType String Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public final ReferenceType RubyRegexp FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name FormalParameter BasicType int options ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 1 MemberReference name MemberReference options	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject gethostbyaddr FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MethodInvocation recv MethodInvocation getCurrentContext getRuntime MemberReference recv MemberReference args gethostbyaddr	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType Binding binding FormalParameter ReferenceType Block ReferenceType Type type LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator args ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 StatementExpression Assignment MemberReference args MethodInvocation MemberReference context MemberReference args MemberReference type prepareArgumentsForCall = ReturnStatement MethodInvocation MemberReference context MethodInvocation RubyArray MethodInvocation context getRuntime MemberReference args newArrayNoCopy Literal null Literal null Literal true MemberReference binding MemberReference type yield	0
MethodDeclaration ReferenceType T get FormalParameter ReferenceType Object object FormalParameter BasicType int hash LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator table ForStatement ForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType T VariableDeclarator e Assignment MemberReference table MemberReference entryTable = BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference hash MemberReference e hash BinaryOperation == MemberReference object MethodInvocation e.objectRef get BlockStatement ReturnStatement MethodInvocation e.proxyRef get ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType long lseek FormalParameter BasicType long offset FormalParameter BasicType int whence IOException InvalidValueException PipeException BadDescriptorException IfStatement BinaryOperation instanceof MemberReference channel ReferenceType FileChannel BlockStatement StatementExpression MethodInvocation checkOpen LocalVariableDeclaration ReferenceType FileChannel VariableDeclarator fileChannel Cast ReferenceType FileChannel MemberReference channel TryStatement LocalVariableDeclaration BasicType long VariableDeclarator pos SwitchStatement MemberReference whence SwitchStatementCase MemberReference Stream SEEK_SET StatementExpression Assignment MemberReference pos MemberReference offset = StatementExpression MethodInvocation fileChannel MemberReference pos position BreakStatement SwitchStatementCase MemberReference Stream SEEK_CUR StatementExpression Assignment MemberReference pos BinaryOperation + MethodInvocation fileChannel position MemberReference offset = StatementExpression MethodInvocation fileChannel MemberReference pos position BreakStatement SwitchStatementCase MemberReference Stream SEEK_END StatementExpression Assignment MemberReference pos BinaryOperation + MethodInvocation fileChannel size MemberReference offset = StatementExpression MethodInvocation fileChannel MemberReference pos position BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType InvalidValueException ReturnStatement MemberReference pos CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement ClassCreator ReferenceType InvalidValueException BlockStatement ThrowStatement ClassCreator ReferenceType PipeException	1
MethodDeclaration * */ Modifier public ReferenceType IRubyObject inexact_p FormalParameter ReferenceType ThreadContext context ReturnStatement TernaryExpression MethodInvocation MethodInvocation isTrue MemberReference context exact_p MethodInvocation context MethodInvocation getFalse getRuntime MethodInvocation context MethodInvocation getTrue getRuntime	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation MemberReference self MemberReference args jcreateProxy	0
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType DEFINEDNODE	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self FormalParameter BasicType long ReturnStatement MethodInvocation MemberReference context MemberReference caller MemberReference self MethodInvocation RubyFixnum MethodInvocation context getRuntime MemberReference newFixnum call	0
MethodDeclaration Modifier private BasicType int ampersand FormalParameter BasicType boolean spaceSeen IOException LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation src read SwitchStatement MemberReference c SwitchStatementCase Literal '&' StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = IfStatement BinaryOperation == Assignment MemberReference c MethodInvocation src read = Literal '=' BlockStatement StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "&&" MethodInvocation getPosition = StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = ReturnStatement MemberReference Tokens tOP_ASGN StatementExpression MethodInvocation src MemberReference c unread StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "&&" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tANDOP SwitchStatementCase Literal '=' StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "&" MethodInvocation getPosition = StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = ReturnStatement MemberReference Tokens tOP_ASGN StatementExpression MethodInvocation src MemberReference c unread LocalVariableDeclaration ReferenceType ISourcePosition VariableDeclarator tmpPosition MethodInvocation getPosition IfStatement BinaryOperation && BinaryOperation && MethodInvocation isARG MemberReference spaceSeen MethodInvocation ! Character MemberReference c isWhitespace BlockStatement IfStatement MethodInvocation warnings isVerbose StatementExpression MethodInvocation warnings MemberReference ID ARGUMENT_AS_PREFIX MemberReference tmpPosition Literal "`&' interpreted as argument prefix" Literal "&" warning StatementExpression Assignment MemberReference c MemberReference Tokens tAMPER = IfStatement MethodInvocation isBEG BlockStatement StatementExpression Assignment MemberReference c MemberReference Tokens tAMPER = BlockStatement StatementExpression Assignment MemberReference c MemberReference Tokens tAMPER2 = StatementExpression MethodInvocation determineExpressionState StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "&" MemberReference tmpPosition = ReturnStatement MemberReference c	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator o1 MethodInvocation runtime Literal 10 newFixnum LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator o2 MethodInvocation runtime Literal 20 newFixnum LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator o3 MethodInvocation runtime Literal 30 newFixnum LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator o4 MethodInvocation runtime Literal "hello" newString StatementExpression MethodInvocation target MemberReference o1 add StatementExpression MethodInvocation target MemberReference o2 add StatementExpression MethodInvocation target MemberReference o3 add StatementExpression MethodInvocation target MemberReference o4 add LocalVariableDeclaration ReferenceType List VariableDeclarator storedFixnums ClassCreator ReferenceType ArrayList Literal 3 StatementExpression MethodInvocation storedFixnums MemberReference o1 add StatementExpression MethodInvocation storedFixnums MemberReference o2 add StatementExpression MethodInvocation storedFixnums MemberReference o3 add LocalVariableDeclaration ReferenceType Iterator VariableDeclarator strings MethodInvocation target MethodInvocation runtime getString iterator StatementExpression MethodInvocation MemberReference o4 MethodInvocation strings next assertSame StatementExpression MethodInvocation MethodInvocation strings next assertNull LocalVariableDeclaration ReferenceType Iterator VariableDeclarator numerics MethodInvocation target MethodInvocation runtime getNumeric iterator ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i Literal 3 MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator item MethodInvocation numerics next StatementExpression MethodInvocation MethodInvocation storedFixnums MemberReference item contains assertTrue StatementExpression MethodInvocation MethodInvocation numerics next assertNull	0
MethodDeclaration Modifier private ReferenceType DynamicMethod createProcMethod FormalParameter ReferenceType String name FormalParameter ReferenceType Visibility visibility FormalParameter ReferenceType RubyProc proc LocalVariableDeclaration ReferenceType Block VariableDeclarator block MethodInvocation proc getBlock StatementExpression MethodInvocation block MethodInvocation getFrame MethodInvocation This setKlazz getBinding StatementExpression MethodInvocation block MethodInvocation getFrame MethodInvocation MemberReference name setName getBinding LocalVariableDeclaration ReferenceType VariableDeclarator scope MethodInvocation block MethodInvocation getStaticScope getBody StatementExpression MethodInvocation scope Literal true setArgumentScope LocalVariableDeclaration ReferenceType Arity VariableDeclarator arity MethodInvocation block arity StatementExpression MethodInvocation scope MethodInvocation arity required setRequiredArgs IfStatement MethodInvocation ! arity BlockStatement StatementExpression MethodInvocation scope MethodInvocation arity required ReturnStatement ClassCreator ReferenceType ProcMethod This MemberReference proc MemberReference visibility	1
MethodDeclaration Modifier public performBooleanBranch FormalParameter ReferenceType BranchCallback FormalParameter ReferenceType BranchCallback falseBranch LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label LocalVariableDeclaration ReferenceType Label VariableDeclarator ClassCreator ReferenceType Label StatementExpression MethodInvocation isTrue StatementExpression MethodInvocation method MemberReference ifeq StatementExpression MethodInvocation This branch StatementExpression MethodInvocation method MemberReference go_to StatementExpression MethodInvocation method MemberReference label StatementExpression MethodInvocation falseBranch This branch StatementExpression MethodInvocation method MemberReference label	1
MethodDeclaration Modifier public static ReferenceType IRubyObject inject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject init FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType IRubyObject VariableDeclarator result ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference init LocalVariableDeclaration Modifier final ReferenceType ThreadContext VariableDeclarator localContext MemberReference context StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference self ClassCreator ReferenceType BlockCallback MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal checkContext StatementExpression Assignment MemberReference ArraySelector Literal 0 result TernaryExpression BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null MemberReference larg MethodInvocation block MemberReference ctx MethodInvocation runtime MemberReference ArraySelector Literal 0 result MemberReference larg newArray Literal null Literal null Literal true yield = ReturnStatement MethodInvocation runtime getNil callEach ReturnStatement TernaryExpression BinaryOperation == MemberReference ArraySelector Literal 0 result Literal null MethodInvocation runtime getNil MemberReference ArraySelector Literal 0 result	0
MethodDeclaration Modifier public ReferenceType Object unmarshalFrom FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass type FormalParameter ReferenceType unmarshalStream IOException LocalVariableDeclaration ReferenceType RubySystemCallError VariableDeclarator exc Cast ReferenceType RubySystemCallError MethodInvocation type StatementExpression MethodInvocation unmarshalStream MemberReference exc StatementExpression MethodInvocation unmarshalStream MemberReference exc StatementExpression Assignment MemberReference exc message Cast ReferenceType IRubyObject MethodInvocation exc Literal "mesg" removeInternalVariable = StatementExpression Assignment MemberReference exc errno Cast ReferenceType IRubyObject MethodInvocation exc Literal "errno" removeInternalVariable = StatementExpression MethodInvocation exc Cast ReferenceType IRubyObject MethodInvocation exc Literal "bt" removeInternalVariable set_backtrace ReturnStatement MemberReference exc	0
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType IRubyObject self LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator selfType MethodInvocation MemberReference context MemberReference self pollAndGetClass LocalVariableDeclaration ReferenceType CacheEntry VariableDeclarator myCache MemberReference cache IfStatement MethodInvocation myCache MemberReference selfType typeOk BlockStatement ReturnStatement MethodInvocation myCache.method MemberReference context MemberReference self MemberReference selfType MemberReference methodName call ReturnStatement MethodInvocation MemberReference caller MemberReference selfType MemberReference context MemberReference self cacheAndCall	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "inspect" Annotation Override ReferenceType IRubyObject inspect IfStatement BinaryOperation == MemberReference realLength Literal 0 ReturnStatement MethodInvocation MethodInvocation Literal "[]" newString getRuntime IfStatement MethodInvocation MethodInvocation This isInspecting getRuntime ReturnStatement MethodInvocation MethodInvocation Literal "[...]" newString getRuntime TryStatement StatementExpression MethodInvocation MethodInvocation This registerInspecting getRuntime ReturnStatement MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime inspectAry StatementExpression MethodInvocation MethodInvocation This unregisterInspecting getRuntime	1
MethodDeclaration Modifier private ReferenceType RubyArray regexSplit FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject pat FormalParameter BasicType boolean limit FormalParameter BasicType int lim FormalParameter BasicType int i LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration Modifier final ReferenceType Regex VariableDeclarator pattern MethodInvocation MemberReference pat getQuotedPattern LocalVariableDeclaration BasicType int VariableDeclarator begin MemberReference value begin LocalVariableDeclaration BasicType int VariableDeclarator len MemberReference value realSize LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MemberReference begin MemberReference len LocalVariableDeclaration BasicType byte VariableDeclarator bytes MemberReference value bytes LocalVariableDeclaration Modifier final ReferenceType Matcher VariableDeclarator matcher MethodInvocation pattern MemberReference bytes MemberReference begin MemberReference matcher LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator result MethodInvocation runtime newArray LocalVariableDeclaration ReferenceType Encoding VariableDeclarator enc MethodInvocation pattern getEncoding LocalVariableDeclaration BasicType boolean VariableDeclarator captures BinaryOperation != MethodInvocation pattern numberOfCaptures Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator end VariableDeclarator beg Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator lastNull Literal false LocalVariableDeclaration BasicType int VariableDeclarator start MemberReference begin WhileStatement BinaryOperation >= Assignment MemberReference end MethodInvocation matcher MemberReference start MemberReference MemberReference Option NONE search = Literal 0 BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference start BinaryOperation + MemberReference end MemberReference begin BinaryOperation == MethodInvocation matcher getBegin MethodInvocation matcher getEnd BlockStatement IfStatement BinaryOperation == MemberReference len Literal 0 BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference runtime MethodInvocation getMetaClass newEmptyString append BreakStatement IfStatement MemberReference lastNull BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference runtime MemberReference beg MethodInvocation enc MemberReference bytes BinaryOperation + MemberReference begin MemberReference beg MemberReference length makeShared append StatementExpression Assignment MemberReference beg BinaryOperation - MemberReference start MemberReference begin = BlockStatement StatementExpression Assignment MemberReference start TernaryExpression BinaryOperation == MemberReference start MemberReference Literal 1 MethodInvocation enc MemberReference bytes MemberReference start MemberReference length += StatementExpression Assignment MemberReference lastNull Literal true = ContinueStatement BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference runtime MemberReference beg BinaryOperation - MemberReference end MemberReference beg makeShared append StatementExpression Assignment MemberReference beg MethodInvocation matcher getEnd = StatementExpression Assignment MemberReference start BinaryOperation + MemberReference begin MemberReference beg = StatementExpression Assignment MemberReference lastNull Literal false = IfStatement MemberReference captures StatementExpression MethodInvocation MemberReference runtime MemberReference result MemberReference matcher Literal false populateCapturesForSplit IfStatement BinaryOperation && MemberReference limit BinaryOperation <= MemberReference lim MemberReference ++ i BreakStatement StatementExpression MethodInvocation context MethodInvocation MethodInvocation runtime getNil setBackRef getCurrentScope IfStatement BinaryOperation && BinaryOperation > MemberReference len Literal 0 BinaryOperation || BinaryOperation || MemberReference limit BinaryOperation > MemberReference len MemberReference beg BinaryOperation < MemberReference lim Literal 0 StatementExpression MethodInvocation result MethodInvocation MemberReference runtime MemberReference beg BinaryOperation - MemberReference len MemberReference beg makeShared append ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType Object case358_line1348 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType ArgsNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType InstanceVariables getInstanceVariables ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType Object case489_line1869 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType ArrayNode MethodInvocation getPosition Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType StackTraceElement getElement ReturnStatement MemberReference element	0
MethodDeclaration Modifier private static defineGlobalEnvConstants FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType Map VariableDeclarator environmentVariableMap Literal null LocalVariableDeclaration ReferenceType OSEnvironment VariableDeclarator environment ClassCreator ReferenceType OSEnvironment StatementExpression Assignment MemberReference environmentVariableMap MethodInvocation environment MemberReference runtime getEnvironmentVariableMap = IfStatement BinaryOperation == MemberReference environmentVariableMap Literal null BlockStatement StatementExpression Assignment MemberReference environmentVariableMap ClassCreator ReferenceType HashMap = LocalVariableDeclaration ReferenceType StringOnlyRubyHash VariableDeclarator h1 ClassCreator ReferenceType StringOnlyRubyHash MemberReference runtime MemberReference environmentVariableMap MethodInvocation runtime getNil StatementExpression MethodInvocation h1 MethodInvocation ClassReference ReferenceType StringOnlyRubyHash defineAnnotatedMethods getSingletonClass StatementExpression MethodInvocation runtime Literal "ENV" MemberReference h1 defineGlobalConstant LocalVariableDeclaration ReferenceType Map VariableDeclarator systemProps MethodInvocation environment MemberReference runtime getSystemPropertiesMap StatementExpression MethodInvocation runtime Literal "ENV_JAVA" ClassCreator ReferenceType StringOnlyRubyHash MemberReference runtime MemberReference systemProps MethodInvocation runtime getNil defineGlobalConstant	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "each_key" ElementValuePair frame Literal true ReferenceType IRubyObject each_key19 FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block each_key MethodInvocation MethodInvocation context getRuntime This Literal "each_key" enumeratorize	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs StatementExpression MethodInvocation MemberReference localContext MemberReference ctx Literal "min_by" checkContext LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator v MethodInvocation block MemberReference ctx MemberReference larg yield IfStatement BinaryOperation || BinaryOperation == MemberReference memo Literal null BinaryOperation < MethodInvocation RubyComparable MemberReference ctx MethodInvocation v MemberReference ctx Literal "<=>" MemberReference memo callMethod MemberReference v MemberReference memo cmpint Literal 0 BlockStatement StatementExpression Assignment MemberReference memo MemberReference v = StatementExpression Assignment MemberReference ArraySelector Literal 0 result MemberReference larg = ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "==" ElementValuePair required Literal 1 Annotation Override ReferenceType RubyBoolean op_equal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyMethod ReturnStatement MethodInvocation context MethodInvocation getFalse getRuntime LocalVariableDeclaration ReferenceType RubyMethod VariableDeclarator otherMethod Cast ReferenceType RubyMethod MemberReference other ReturnStatement MethodInvocation context MethodInvocation BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference implementationModule MemberReference otherMethod implementationModule BinaryOperation == MemberReference originModule MemberReference otherMethod originModule BinaryOperation == MemberReference receiver MemberReference otherMethod receiver BinaryOperation == MethodInvocation method getRealMethod MethodInvocation otherMethod.method getRealMethod newBoolean getRuntime	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock ReturnStatement MethodInvocation runtime MethodInvocation ! conditionNode MethodInvocation isTrue MemberReference runtime MemberReference context MemberReference self MemberReference aBlock newBoolean	0
MethodDeclaration Modifier public ReferenceType StrTerm getStrTerm ReturnStatement MemberReference lex_strterm	0
MethodDeclaration Modifier final protected testFrozen FormalParameter ReferenceType String message IfStatement MethodInvocation isFrozen BlockStatement ThrowStatement MethodInvocation MethodInvocation MemberReference message newFrozenError getRuntime	0
MethodDeclaration Modifier public ReferenceType Object case440_line1644 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation support MethodInvocation getPosition createEmptyArgsNodePosition Literal null Literal null Literal null Literal null Literal null new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "flush" ElementValuePair optional Literal 1 ReferenceType IRubyObject flush FormalParameter ReferenceType IRubyObject args IOException IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference args length Literal 0 MemberReference ArraySelector Literal 0 MethodInvocation isNil args BinaryOperation != MethodInvocation RubyNumeric MemberReference ArraySelector Literal 0 args fix2int Literal 0 BlockStatement StatementExpression MethodInvocation io flush ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair required Literal 1 ElementValuePair optional Literal 1 ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair backtrace Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator hostname MemberReference ArraySelector Literal 0 args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator port TernaryExpression BinaryOperation > MemberReference args length Literal 1 MemberReference ArraySelector Literal 1 args MethodInvocation context MethodInvocation getNil getRuntime IfStatement BinaryOperation || MethodInvocation hostname isNil BinaryOperation && BinaryOperation instanceof MemberReference hostname ReferenceType RubyString Cast ReferenceType RubyString MemberReference hostname BlockStatement StatementExpression Assignment MemberReference hostname MethodInvocation context MethodInvocation Literal "0.0.0.0" newString getRuntime = IfStatement BinaryOperation instanceof MemberReference hostname ReferenceType RubyFixnum BlockStatement StatementExpression Assignment MemberReference port MemberReference hostname = StatementExpression Assignment MemberReference hostname MethodInvocation context MethodInvocation Literal "0.0.0.0" newString getRuntime = LocalVariableDeclaration ReferenceType String VariableDeclarator shost MethodInvocation hostname MethodInvocation toString convertToString TryStatement LocalVariableDeclaration ReferenceType InetAddress VariableDeclarator addr MethodInvocation InetAddress MemberReference shost getByName StatementExpression Assignment MemberReference ssc MethodInvocation ServerSocketChannel open = LocalVariableDeclaration BasicType int VariableDeclarator portInt IfStatement BinaryOperation instanceof MemberReference port ReferenceType RubyInteger BlockStatement StatementExpression Assignment MemberReference portInt MethodInvocation RubyNumeric MemberReference port fix2int = BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator portString MethodInvocation port convertToString LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator portInteger MethodInvocation portString Literal "to_i" convertToInteger StatementExpression Assignment MemberReference portInt MethodInvocation RubyNumeric MemberReference portInteger fix2int = IfStatement BinaryOperation <= MemberReference portInt Literal 0 BlockStatement StatementExpression Assignment MemberReference portInt MethodInvocation RubyNumeric MethodInvocation RubySocket MemberReference context MethodInvocation context MethodInvocation getObject getRuntime ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference portString getservbyname fix2int = StatementExpression Assignment MemberReference socket_address ClassCreator ReferenceType InetSocketAddress MemberReference addr MemberReference portInt = StatementExpression MethodInvocation ssc MethodInvocation MemberReference socket_address socket StatementExpression MethodInvocation MethodInvocation context getRuntime ClassCreator ReferenceType ChannelDescriptor MemberReference ssc MethodInvocation RubyIO getNewFileno ClassCreator ReferenceType ModeFlags MemberReference ModeFlags RDWR ClassCreator ReferenceType FileDescriptor initSocket CatchClause CatchClauseParameter InvalidValueException ex ThrowStatement MethodInvocation context MethodInvocation newErrnoEINVALError getRuntime CatchClause CatchClauseParameter UnknownHostException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "initialize: name or service not known" sockerr CatchClause CatchClauseParameter BindException e ThrowStatement MethodInvocation context MethodInvocation newErrnoEADDRINUSEError getRuntime CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "initialize: name or service not known" sockerr CatchClause CatchClauseParameter IllegalArgumentException iae ThrowStatement MethodInvocation MethodInvocation context getRuntime MethodInvocation iae getMessage sockerr ReturnStatement This	1
MethodDeclaration Modifier protected ReferenceType Library findBuiltinLibrary FormalParameter ReferenceType SearchState state FormalParameter ReferenceType String baseName FormalParameter ReferenceType SuffixType suffixType ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator suffix MethodInvocation suffixType getSuffixes BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator namePlusSuffix BinaryOperation + MemberReference baseName MemberReference suffix StatementExpression MethodInvocation Literal "builtinLib" MemberReference namePlusSuffix debugLogTry IfStatement MethodInvocation builtinLibraries MemberReference namePlusSuffix containsKey BlockStatement StatementExpression Assignment MemberReference state loadName MemberReference namePlusSuffix = LocalVariableDeclaration ReferenceType Library VariableDeclarator lib MethodInvocation builtinLibraries MemberReference namePlusSuffix get StatementExpression MethodInvocation Literal "builtinLib" MemberReference namePlusSuffix debugLogFound ReturnStatement MemberReference lib ReturnStatement Literal null	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "chomp" ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ElementValuePair reads MemberReference LASTLINE ElementValuePair writes MemberReference LASTLINE ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType IRubyObject chomp FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MemberReference context MethodInvocation context getRuntime getLastlineString LocalVariableDeclaration ReferenceType RubyString VariableDeclarator dup Cast ReferenceType RubyString MethodInvocation str dup IfStatement MethodInvocation dup MethodInvocation isNil MemberReference context chomp_bang BlockStatement ReturnStatement MemberReference str StatementExpression MethodInvocation context MethodInvocation MemberReference dup setLastLine getCurrentScope ReturnStatement MemberReference dup	0
MethodDeclaration Modifier private synchronized ReferenceType Object getVariableTableForWrite FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference varTable MemberReference NULL_OBJECT_ARRAY BlockStatement StatementExpression Assignment MemberReference varTable ArrayCreator ReferenceType Object MethodInvocation MethodInvocation getRealClass MethodInvocation getVariableTableSize getMetaClass = IfStatement BinaryOperation <= MemberReference varTable length MemberReference index BlockStatement IfStatement MemberReference DEBUG StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + Literal "resizing from " MemberReference varTable length Literal " to " MethodInvocation MethodInvocation getRealClass MethodInvocation getVariableTableSize getMetaClass println LocalVariableDeclaration ReferenceType Object VariableDeclarator newTable ArrayCreator ReferenceType Object MethodInvocation MethodInvocation getRealClass MethodInvocation getVariableTableSize getMetaClass StatementExpression MethodInvocation System MemberReference varTable Literal 0 MemberReference newTable Literal 0 MemberReference varTable length arraycopy StatementExpression Assignment MemberReference varTable MemberReference newTable = ReturnStatement MemberReference varTable	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject accept_nonblock ReturnStatement MethodInvocation MethodInvocation MethodInvocation getCurrentContext getRuntime accept_nonblock	1
MethodDeclaration setRegexp FormalParameter ReferenceType RubyClass regexpClass StatementExpression Assignment This MemberReference regexpClass MemberReference regexpClass =	0
MethodDeclaration Modifier public ReferenceType IRubyObject convert FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object IfStatement BinaryOperation == MemberReference object Literal null ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation RubyBoolean MemberReference runtime Cast ReferenceType Boolean MemberReference object newBoolean	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "eos?" ReferenceType RubyBoolean eos_p FormalParameter ReferenceType ThreadContext context StatementExpression MethodInvocation check ReturnStatement TernaryExpression BinaryOperation >= MemberReference pos MethodInvocation str MemberReference realSize getByteList MethodInvocation context MethodInvocation getTrue getRuntime MethodInvocation context MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public ReferenceType RubyClass getModule ReturnStatement MemberReference moduleClass	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_str" ReferenceType IRubyObject to_str FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType String VariableDeclarator format Literal null IfStatement BinaryOperation == MemberReference visibility MemberReference PRIVATE BlockStatement StatementExpression Assignment MemberReference format Literal "private method `%s' called for %s" = IfStatement BinaryOperation == MemberReference visibility MemberReference PROTECTED BlockStatement StatementExpression Assignment MemberReference format Literal "protected method `%s' called for %s" = IfStatement BinaryOperation == MemberReference callType MemberReference CallType VARIABLE BlockStatement StatementExpression Assignment MemberReference format Literal "undefined local variable or method `%s' for %s" = IfStatement BinaryOperation == MemberReference callType MemberReference CallType SUPER BlockStatement StatementExpression Assignment MemberReference format Literal "super: no superclass method `%s'" = IfStatement BinaryOperation == MemberReference format Literal null StatementExpression Assignment MemberReference format Literal "undefined method `%s' for %s" = LocalVariableDeclaration ReferenceType String VariableDeclarator description Literal null IfStatement MethodInvocation object isNil BlockStatement StatementExpression Assignment MemberReference description Literal = IfStatement BinaryOperation && BinaryOperation instanceof MemberReference object ReferenceType RubyBoolean MethodInvocation object isTrue BlockStatement StatementExpression Assignment MemberReference description Literal "true" = IfStatement BinaryOperation && BinaryOperation instanceof MemberReference object ReferenceType RubyBoolean MethodInvocation ! object isTrue BlockStatement StatementExpression Assignment MemberReference description Literal "false" = BlockStatement TryStatement StatementExpression Assignment MemberReference description MethodInvocation RubyObject MethodInvocation toString MemberReference context MemberReference object inspect = CatchClause CatchClauseParameter JumpException e IfStatement BinaryOperation || BinaryOperation == MemberReference description Literal null BinaryOperation > MethodInvocation description length Literal 65 StatementExpression Assignment MemberReference description MethodInvocation object MethodInvocation toString anyToString = IfStatement BinaryOperation || BinaryOperation == MethodInvocation description length Literal 0 BinaryOperation && BinaryOperation > MethodInvocation description length Literal 0 BinaryOperation != MethodInvocation description Literal 0 charAt Literal '#' BlockStatement StatementExpression Assignment MemberReference description BinaryOperation + BinaryOperation + MemberReference description Literal ":" MethodInvocation object MethodInvocation getRealClass MethodInvocation getName getMetaClass = LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator arr MethodInvocation runtime MemberReference method MethodInvocation runtime MemberReference description newString newArray LocalVariableDeclaration ReferenceType ByteList VariableDeclarator msgBytes ClassCreator ReferenceType ByteList BinaryOperation + BinaryOperation + MethodInvocation format length MethodInvocation description length MethodInvocation method MethodInvocation length toString StatementExpression MethodInvocation Sprintf MemberReference msgBytes MemberReference format MemberReference arr sprintf ReturnStatement MethodInvocation runtime MethodInvocation MemberReference object infectBy MemberReference msgBytes newString	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator receiver MethodInvocation MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference aBlock getReceiverNode LocalVariableDeclaration ReferenceType Block VariableDeclarator block MethodInvocation RuntimeHelpers MemberReference context MemberReference self MemberReference getBlock TryStatement ReturnStatement MethodInvocation callAdapter MemberReference context MemberReference self MemberReference receiver MemberReference block call CatchClause CatchClauseParameter JumpException.RetryJump rj ThrowStatement MethodInvocation runtime MemberReference Reason MemberReference self Literal is not supported outside rescue" newLocalJumpError StatementExpression MethodInvocation block escape	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "eof?" ReferenceType IRubyObject eof_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation ArgsFileData MemberReference recv getDataFrom IfStatement MemberReference ! data inited ReturnStatement MethodInvocation context MethodInvocation getTrue getRuntime IfStatement BinaryOperation instanceof MemberReference data currentFile ReferenceType RubyIO ReturnStatement MethodInvocation data.currentFile MemberReference context Literal "eof?" callMethod ReturnStatement Cast ReferenceType RubyIO MemberReference data currentFile	1
MethodDeclaration addConstructor FormalParameter ReferenceType Constructor ctor FormalParameter ReferenceType Class TypeArgument ? javaClass IfStatement BinaryOperation == MemberReference constructors Literal null BlockStatement StatementExpression Assignment MemberReference constructors ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Constructor Literal 4 = IfStatement MethodInvocation ! Ruby isSecurityRestricted BlockStatement TryStatement StatementExpression MethodInvocation ctor Literal true setAccessible CatchClause CatchClauseParameter SecurityException e StatementExpression MethodInvocation constructors MemberReference ctor add StatementExpression Assignment MemberReference haveLocalConstructor BinaryOperation == MemberReference javaClass MethodInvocation ctor getDeclaringClass |=	1
MethodDeclaration Modifier public ReferenceType RubyParser FormalParameter ReferenceType CompatVersion version IfStatement BinaryOperation == MemberReference version MemberReference CompatVersion RUBY1_8 BlockStatement ReturnStatement ClassCreator ReferenceType DefaultRubyParser BlockStatement ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier private ReferenceType Object fastHashStore FormalParameter ReferenceType String internedName FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator table TernaryExpression BinaryOperation > BinaryOperation + MemberReference vTableSize Literal 1 MemberReference vTableThreshold MethodInvocation rehash MemberReference vTable LocalVariableDeclaration BasicType int VariableDeclarator index LocalVariableDeclaration BasicType int VariableDeclarator hash MethodInvocation internedName hashCode LocalVariableDeclaration ReferenceType VariableTableEntry VariableDeclarator e ForStatement ForControl Assignment MemberReference e MemberReference ArraySelector Assignment MemberReference index BinaryOperation & MemberReference hash BinaryOperation - MemberReference table length Literal 1 = table = BinaryOperation != MemberReference e Literal null Assignment MemberReference e MemberReference e next = BlockStatement IfStatement BinaryOperation == MemberReference internedName MemberReference e name BlockStatement StatementExpression Assignment MemberReference e value MemberReference value = ReturnStatement MemberReference value StatementExpression Assignment MemberReference e ClassCreator ReferenceType VariableTableEntry MemberReference hash MemberReference internedName MemberReference value MemberReference ArraySelector MemberReference index table = StatementExpression Assignment MemberReference ArraySelector MemberReference index table MemberReference e = StatementExpression MemberReference ++ vTableSize StatementExpression Assignment MemberReference vTable MemberReference table = ReturnStatement MemberReference value	1
MethodDeclaration Modifier public static ReferenceType Handle createHandle FormalParameter ReferenceType JRubyClassLoader classLoader FormalParameter ReferenceType Method method FormalParameter BasicType boolean debug LocalVariableDeclaration ReferenceType ClassVisitor VariableDeclarator cv IfStatement MemberReference debug BlockStatement StatementExpression Assignment MemberReference cv ClassCreator ReferenceType ASMifierClassVisitor ClassCreator ReferenceType PrintWriter MemberReference System out = BlockStatement StatementExpression Assignment MemberReference cv ClassCreator ReferenceType ClassWriter MemberReference ClassWriter COMPUTE_MAXS = LocalVariableDeclaration ReferenceType Class VariableDeclarator returnType MethodInvocation method getReturnType LocalVariableDeclaration ReferenceType Class VariableDeclarator paramTypes MethodInvocation method getParameterTypes LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator loader MethodInvocation method MethodInvocation getClassLoader getDeclaringClass IfStatement BinaryOperation == MemberReference loader Literal null BlockStatement StatementExpression Assignment MemberReference loader MethodInvocation ClassLoader getSystemClassLoader = LocalVariableDeclaration ReferenceType String VariableDeclarator name BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation method MethodInvocation getCanonicalName MethodInvocation Literal "\\." Literal "__" replaceAll getDeclaringClass Literal "#" MethodInvocation Math MethodInvocation loader hashCode abs Literal "#" MethodInvocation method getName Literal "#" MethodInvocation Math MethodInvocation MethodInvocation hashCode MemberReference returnType MemberReference paramTypes pretty abs TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator existing MethodInvocation classLoader MemberReference name loadClass ReturnStatement Cast ReferenceType Handle MethodInvocation existing newInstance CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation cv BinaryOperation | BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_FINAL MemberReference ACC_SUPER MemberReference V1_5 MemberReference name Literal null MethodInvocation ClassReference ReferenceType Handle p Literal null visit LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator m LocalVariableDeclaration ReferenceType String VariableDeclarator signature LocalVariableDeclaration BasicType boolean VariableDeclarator needsArgsVersion Literal true SwitchStatement MemberReference paramTypes length SwitchStatementCase Literal 0 StatementExpression Assignment MemberReference signature MethodInvocation ClassReference ReferenceType Object ClassReference ReferenceType Object sig = BreakStatement SwitchStatementCase Literal 1 StatementExpression Assignment MemberReference signature MethodInvocation ClassReference ReferenceType Object ClassReference ReferenceType Object ClassReference ReferenceType Object sig = BreakStatement SwitchStatementCase Literal 2 StatementExpression Assignment MemberReference signature MethodInvocation ClassReference ReferenceType Object ClassReference ReferenceType Object ClassReference ReferenceType Object ClassReference ReferenceType Object sig = BreakStatement SwitchStatementCase Literal 3 StatementExpression Assignment MemberReference signature MethodInvocation ClassReference ReferenceType Object ClassReference ReferenceType Object ClassReference ReferenceType Object ClassReference ReferenceType Object ClassReference ReferenceType Object sig = BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference needsArgsVersion Literal false = StatementExpression Assignment MemberReference signature MethodInvocation ClassReference ReferenceType Object ClassReference ReferenceType Object ClassReference ReferenceType Object sig = BreakStatement StatementExpression Assignment MemberReference m ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cv BinaryOperation | BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_FINAL MemberReference ACC_SYNTHETIC Literal "invoke" MemberReference signature Literal null Literal null visitMethod = StatementExpression MethodInvocation m start IfStatement MethodInvocation ! Modifier MethodInvocation method getModifiers isStatic BlockStatement StatementExpression MethodInvocation m Literal 1 aload IfStatement BinaryOperation != MethodInvocation method getDeclaringClass ClassReference ReferenceType Object BlockStatement StatementExpression MethodInvocation m MethodInvocation MethodInvocation method getDeclaringClass p checkcast SwitchStatement MemberReference paramTypes length SwitchStatementCase Literal 0 Literal 1 Literal 2 Literal 3 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference paramTypes length MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference m BinaryOperation + MemberReference i Literal 2 MemberReference ArraySelector MemberReference i paramTypes loadUnboxedArgument BreakStatement SwitchStatementCase ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference paramTypes length MemberReference ++ i BlockStatement StatementExpression MethodInvocation m Literal 2 aload StatementExpression MethodInvocation m MemberReference i pushInt StatementExpression MethodInvocation m aaload LocalVariableDeclaration ReferenceType Class VariableDeclarator paramClass MemberReference ArraySelector MemberReference i paramTypes IfStatement MethodInvocation paramClass isPrimitive BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator boxType MethodInvocation MemberReference paramClass getBoxType StatementExpression MethodInvocation m MethodInvocation MemberReference boxType p checkcast StatementExpression MethodInvocation m MethodInvocation MemberReference boxType p BinaryOperation + MethodInvocation paramClass toString Literal "Value" MethodInvocation MemberReference paramClass sig invokevirtual IfStatement BinaryOperation != MemberReference paramClass ClassReference ReferenceType Object BlockStatement StatementExpression MethodInvocation m MethodInvocation MemberReference paramClass p checkcast BreakStatement IfStatement MethodInvocation Modifier MethodInvocation method getModifiers isStatic BlockStatement StatementExpression MethodInvocation m MethodInvocation MethodInvocation method getDeclaringClass p MethodInvocation method getName MethodInvocation MemberReference returnType MemberReference paramTypes sig invokestatic IfStatement MethodInvocation Modifier MethodInvocation method MethodInvocation getModifiers getDeclaringClass isInterface BlockStatement StatementExpression MethodInvocation m MethodInvocation MethodInvocation method getDeclaringClass p MethodInvocation method getName MethodInvocation MemberReference returnType MemberReference paramTypes sig invokeinterface BlockStatement StatementExpression MethodInvocation m MethodInvocation MethodInvocation method getDeclaringClass p MethodInvocation method getName MethodInvocation MemberReference returnType MemberReference paramTypes sig invokevirtual IfStatement BinaryOperation == MemberReference returnType VoidClassReference BlockStatement StatementExpression MethodInvocation m aconst_null IfStatement MethodInvocation returnType isPrimitive BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator boxType MethodInvocation MemberReference returnType getBoxType StatementExpression MethodInvocation m MethodInvocation MemberReference boxType p Literal "valueOf" MethodInvocation MemberReference boxType MemberReference returnType sig invokestatic StatementExpression MethodInvocation m areturn StatementExpression MethodInvocation m end IfStatement MemberReference needsArgsVersion BlockStatement StatementExpression Assignment MemberReference m ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cv BinaryOperation | BinaryOperation | MemberReference ACC_PUBLIC MemberReference ACC_FINAL MemberReference ACC_SYNTHETIC Literal "invoke" MethodInvocation ClassReference ReferenceType Object ClassReference ReferenceType Object ClassReference ReferenceType Object sig Literal null Literal null visitMethod = StatementExpression MethodInvocation m start StatementExpression MethodInvocation m Literal 0 aload StatementExpression MethodInvocation m Literal 1 aload ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference paramTypes length MemberReference ++ i BlockStatement StatementExpression MethodInvocation m Literal 2 aload StatementExpression MethodInvocation m MemberReference i ldc StatementExpression MethodInvocation m aaload StatementExpression MethodInvocation m MemberReference name Literal "invoke" MethodInvocation ClassReference ReferenceType Object MethodInvocation ClassReference ReferenceType Object ClassReference ReferenceType Object MemberReference paramTypes length params sig invokevirtual StatementExpression MethodInvocation m areturn StatementExpression MethodInvocation m end StatementExpression Assignment MemberReference m ClassCreator ReferenceType SkinnyMethodAdapter MethodInvocation cv MemberReference ACC_PUBLIC Literal "<init>" MethodInvocation VoidClassReference sig Literal null Literal null visitMethod = StatementExpression MethodInvocation m start StatementExpression MethodInvocation m Literal 0 aload StatementExpression MethodInvocation m MethodInvocation ClassReference ReferenceType Handle p Literal "<init>" MethodInvocation VoidClassReference sig invokespecial StatementExpression MethodInvocation m voidreturn StatementExpression MethodInvocation m end StatementExpression MethodInvocation cv visitEnd IfStatement MemberReference debug BlockStatement StatementExpression Cast ReferenceType ASMifierClassVisitor MemberReference cv ReturnStatement MethodInvocation MemberReference classLoader MemberReference method Literal false createHandle BlockStatement LocalVariableDeclaration BasicType byte VariableDeclarator bytes Cast ReferenceType ClassWriter MemberReference cv LocalVariableDeclaration ReferenceType Class VariableDeclarator handleClass TernaryExpression BinaryOperation != MemberReference classLoader Literal null MemberReference classLoader ClassCreator ReferenceType JRubyClassLoader ClassReference MethodInvocation getClassLoader ReferenceType JRubyClassLoader TryStatement ReturnStatement Cast ReferenceType Handle MethodInvocation handleClass newInstance CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MethodInvocation sb toString	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 StatementExpression MethodInvocation MethodInvocation self getRuntime createJavaMethods LocalVariableDeclaration ReferenceType JavaMethod VariableDeclarator method Cast ReferenceType JavaMethod MethodInvocation MemberReference self MemberReference name MemberReference arg0 MemberReference arg1 findCallableArityTwo LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg0 MethodInvocation MemberReference context MemberReference arg0 MemberReference method Literal 0 convertArg LocalVariableDeclaration ReferenceType Object VariableDeclarator cArg1 MethodInvocation MemberReference context MemberReference arg1 MemberReference method Literal 1 convertArg ReturnStatement MethodInvocation method MemberReference cArg0 MemberReference cArg1 invokeStaticDirect	0
MethodDeclaration setMethod FormalParameter ReferenceType RubyClass methodClass StatementExpression Assignment This MemberReference methodClass MemberReference methodClass =	0
MethodDeclaration Modifier public final ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType MemberReference runtime MemberReference klass	1
MethodDeclaration Modifier public ReferenceType ListNode getPost ReturnStatement MemberReference post	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context LocalVariableDeclaration ReferenceType Node VariableDeclarator argsNode MethodInvocation multipleAsgn19Node getRest IfStatement BinaryOperation instanceof MemberReference argsNode ReferenceType StarNode BlockStatement StatementExpression MethodInvocation context consumeCurrentValue BlockStatement StatementExpression MethodInvocation MemberReference argsNode MemberReference context Literal false compileAssignment	0
MethodDeclaration Modifier public ReferenceType Node getFirstNode ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isKindOf FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyString	0
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object other ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference other ReferenceType JavaObject BinaryOperation == This MethodInvocation dataGetStruct Cast ReferenceType JavaObject MemberReference other	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isKindOf FormalParameter ReferenceType IRubyObject obj FormalParameter ReferenceType RubyModule type ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType RubyFile	0
MethodDeclaration Modifier private ReferenceType IRubyObject convertToInteger FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "can't convert Float into Integer" newTypeError getRuntime ReturnStatement MethodInvocation other convertToInteger	0
MethodDeclaration Modifier public ReferenceType RubyArray newEmptyArray ReturnStatement MethodInvocation RubyArray This newEmptyArray	0
MethodDeclaration Modifier public static ReferenceType String getType FormalParameter BasicType double i FormalParameter ReferenceType String o FormalParameter ReferenceType String o2 FormalParameter ReferenceType String o3 ReturnStatement Literal "double,string,string,string"	0
MethodDeclaration Modifier public integrate FormalParameter ReferenceType ASTInspector other StatementExpression Assignment MemberReference flags MemberReference other flags |=	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "each_cons" ReferenceType IRubyObject each_cons19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference self MemberReference arg MemberReference block each_cons MethodInvocation MethodInvocation context getRuntime MemberReference self Literal "each_cons" MemberReference arg enumeratorize	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType ARRAYNODE	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Node childNodes ReturnStatement MethodInvocation Node MemberReference MemberReference valueNode createList	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "floor" Annotation Override ReferenceType IRubyObject floor ReturnStatement MethodInvocation MethodInvocation getRuntime MethodInvocation Math MemberReference value floor dbl2num	0
MethodDeclaration Modifier public static Annotation Deprecated ReferenceType IRubyObject open FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject path ReturnStatement MethodInvocation MethodInvocation recv MethodInvocation getCurrentContext getRuntime MemberReference recv MemberReference path open	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyFixnum hash ReturnStatement MethodInvocation MethodInvocation MethodInvocation hashCode newFixnum getRuntime	0
MethodDeclaration Modifier public static main FormalParameter ReferenceType String args Exception LocalVariableDeclaration ReferenceType FileReader VariableDeclarator fr ClassCreator ReferenceType FileReader MemberReference ArraySelector Literal 0 args LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator br ClassCreator ReferenceType BufferedReader MemberReference fr LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator classNames ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator line WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation br readLine = Literal null BlockStatement StatementExpression MethodInvocation classNames MemberReference line add StatementExpression MethodInvocation br close LocalVariableDeclaration ReferenceType DumpingInvocationMethodFactory VariableDeclarator dumper ClassCreator ReferenceType DumpingInvocationMethodFactory MemberReference ArraySelector Literal 1 args ClassCreator ReferenceType JRubyClassLoader MethodInvocation ClassLoader getSystemClassLoader ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator name MemberReference classNames BlockStatement LocalVariableDeclaration ReferenceType MethodClumper VariableDeclarator clumper ClassCreator ReferenceType MethodClumper TryStatement IfStatement MemberReference DEBUG StatementExpression MethodInvocation System.out BinaryOperation + Literal "generating for class " MemberReference name println LocalVariableDeclaration ReferenceType Class VariableDeclarator cls MethodInvocation Class MemberReference name Literal false ClassReference MethodInvocation getClassLoader ReferenceType InvokerGenerator forName StatementExpression MethodInvocation clumper MemberReference cls clump ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator entry MethodInvocation clumper MethodInvocation entrySet BlockStatement StatementExpression MethodInvocation dumper MethodInvocation entry getValue getAnnotatedMethodClass ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator entry MethodInvocation clumper MethodInvocation entrySet BlockStatement StatementExpression MethodInvocation dumper MethodInvocation entry getValue getAnnotatedMethodClass ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator entry MethodInvocation clumper MethodInvocation entrySet getStaticAnnotatedMethods1_8 BlockStatement StatementExpression MethodInvocation dumper MethodInvocation entry getValue getAnnotatedMethodClass ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator entry MethodInvocation clumper MethodInvocation entrySet getAnnotatedMethods1_8 BlockStatement StatementExpression MethodInvocation dumper MethodInvocation entry getValue getAnnotatedMethodClass ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator entry MethodInvocation clumper MethodInvocation entrySet getStaticAnnotatedMethods1_9 BlockStatement StatementExpression MethodInvocation dumper MethodInvocation entry getValue getAnnotatedMethodClass ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType JavaMethodDescriptor VariableDeclarator entry MethodInvocation clumper MethodInvocation entrySet getAnnotatedMethods1_9 BlockStatement StatementExpression MethodInvocation dumper MethodInvocation entry getValue getAnnotatedMethodClass CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation e printStackTrace ThrowStatement MemberReference e	1
MethodDeclaration Modifier public ReferenceType IRubyObject getSingleNilArray ReturnStatement MemberReference singleNilArray	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "[]" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject op_aref19 FormalParameter ReferenceType IRubyObject idx LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation MemberReference idx op_arefCommon ReturnStatement TernaryExpression BinaryOperation == MemberReference result Literal null Cast ReferenceType RubyArray MethodInvocation to_a MemberReference result	1
MethodDeclaration Modifier public static ReferenceType IRubyObject backref FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator backref MethodInvocation context MethodInvocation MethodInvocation context getRuntime getBackRef getCurrentScope IfStatement BinaryOperation instanceof MemberReference backref ReferenceType RubyMatchData BlockStatement StatementExpression Cast ReferenceType RubyMatchData MemberReference backref ReturnStatement MemberReference backref	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType MemberReference runtime MemberReference klass	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "select" ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block LocalVariableDeclaration Modifier final ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement MethodInvocation ! block isGiven ReturnStatement MethodInvocation MemberReference runtime This Literal "select" enumeratorize LocalVariableDeclaration Modifier final ReferenceType RubyHash VariableDeclarator result MethodInvocation MemberReference runtime newHash StatementExpression MethodInvocation ClassCreator ReferenceType Visitor MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value IfStatement MethodInvocation block MethodInvocation isTrue MemberReference context MethodInvocation runtime MemberReference key MemberReference value newArray Literal null Literal null Literal true yield BlockStatement StatementExpression MethodInvocation result MemberReference key MemberReference value fastASet iteratorVisitAll ReturnStatement MemberReference result	1
MethodDeclaration Modifier public static ReferenceType RubyClass createBigDecimal FormalParameter ReferenceType Ruby runtime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator result MethodInvocation runtime Literal "BigDecimal" MethodInvocation runtime getNumeric MemberReference BIGDECIMAL_ALLOCATOR defineClass StatementExpression MethodInvocation runtime MethodInvocation ClassReference ReferenceType BigDecimalKernelMethods defineAnnotatedMethods getKernel StatementExpression MethodInvocation result Literal "vpPrecLimit" MethodInvocation RubyFixnum MemberReference runtime zero setInternalModuleVariable StatementExpression MethodInvocation result Literal "vpExceptionMode" MethodInvocation RubyFixnum MemberReference runtime zero setInternalModuleVariable StatementExpression MethodInvocation result Literal "vpRoundingMode" MethodInvocation runtime MemberReference ROUND_HALF_UP newFixnum setInternalModuleVariable StatementExpression MethodInvocation result ClassReference ReferenceType RubyBigDecimal defineAnnotatedMethods StatementExpression MethodInvocation result ClassReference ReferenceType RubyBigDecimal defineAnnotatedConstants ReturnStatement MemberReference result	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "method_missing" ElementValuePair rest Literal true ElementValuePair frame Literal true ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject method_missing FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Visibility VariableDeclarator lastVis MethodInvocation context getLastVisibility LocalVariableDeclaration ReferenceType CallType VariableDeclarator lastCallType MethodInvocation context getLastCallType IfStatement BinaryOperation || BinaryOperation == MemberReference args length Literal 0 BinaryOperation instanceof MemberReference ArraySelector Literal 0 args ReferenceType RubySymbol ThrowStatement MethodInvocation context MethodInvocation Literal "no id given" newArgumentError getRuntime ReturnStatement MethodInvocation MemberReference context MemberReference recv Cast ReferenceType RubySymbol MemberReference ArraySelector Literal 0 args MemberReference lastVis MemberReference lastCallType MemberReference args MemberReference block methodMissingDirect	1
MethodDeclaration Modifier public BasicType int getLineNumber ReturnStatement MemberReference lineNumber	0
MethodDeclaration Modifier public BasicType boolean hasMethod ReturnStatement MethodInvocation MemberReference METHOD getFlag	0
MethodDeclaration Modifier static BasicType boolean isConstant FormalParameter Modifier final ReferenceType Field field ReturnStatement BinaryOperation && BinaryOperation == BinaryOperation & MethodInvocation field getModifiers MemberReference MemberReference MethodInvocation Character MethodInvocation field MethodInvocation Literal 0 charAt getName isUpperCase	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "delete_if" ElementValuePair frame Literal true ReferenceType IRubyObject delete_if FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block deleteIf MethodInvocation MethodInvocation context getRuntime This Literal "delete_if" enumeratorize	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject args LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator proxy MethodInvocation oldNew MemberReference context MemberReference self MemberReference clazz Literal "new_proxy" MemberReference args call IfStatement BinaryOperation instanceof MethodInvocation proxy dataGetStruct ReferenceType JavaObject BlockStatement StatementExpression MethodInvocation RuntimeHelpers MemberReference context MemberReference proxy Literal "__jcreate!" MemberReference args invoke ReturnStatement MemberReference proxy	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ReferenceType IRubyObject endpwent FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime TryStatement StatementExpression MethodInvocation runtime MethodInvocation endpwent getPosix CatchClause CatchClauseParameter Exception e IfStatement MethodInvocation runtime MethodInvocation isTrue getDebug BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID NOT_IMPLEMENTED Literal is not supported by JRuby on this platform" MemberReference e warn getWarnings ReturnStatement MethodInvocation runtime getNil	0
MethodDeclaration Modifier protected BasicType int assignOptArgs FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter BasicType int givenArgsCount LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference preCount BinaryOperation && BinaryOperation < MemberReference i BinaryOperation - MemberReference args length MemberReference postCount BinaryOperation < MemberReference j MethodInvocation optArgs size MemberReference ++ i MemberReference ++ j BlockStatement StatementExpression MethodInvocation optArgs MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference ArraySelector MemberReference i args MemberReference Block NULL_BLOCK Literal true assign MemberReference j get StatementExpression MemberReference ++ givenArgsCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference j MethodInvocation optArgs size MemberReference ++ i MemberReference ++ j BlockStatement StatementExpression MethodInvocation optArgs MethodInvocation MemberReference runtime MemberReference context MemberReference self MemberReference Block NULL_BLOCK MemberReference j get ReturnStatement MemberReference givenArgsCount	1
MethodDeclaration Modifier public ReferenceType RubyModule getModule FormalParameter ReferenceType String name ReturnStatement Cast ReferenceType RubyModule MethodInvocation objectClass MemberReference name getConstantAt	0
MethodDeclaration Modifier public ReferenceType Node new_bv FormalParameter ReferenceType Token identifier IfStatement MethodInvocation ! MemberReference identifier is_local_id BlockStatement StatementExpression MethodInvocation MethodInvocation identifier getPosition Cast ReferenceType String MethodInvocation identifier getValue getterIdentifierError StatementExpression MethodInvocation MemberReference identifier shadowing_lvar StatementExpression MethodInvocation MemberReference identifier arg_var ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "put_float64" Literal "put_double" ElementValuePair required Literal 2 ReferenceType IRubyObject put_float64 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject offset FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference offset getOffset MethodInvocation Util MemberReference value doubleValue putDouble getMemoryIO ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + Literal TernaryExpression BinaryOperation == MemberReference _pieces Literal null Literal "" MethodInvocation java.util.Arrays MethodInvocation _pieces toArray toString	0
MethodDeclaration Modifier public static ReferenceType Object unwrapJavaObject FormalParameter ReferenceType IRubyObject object ReturnStatement Cast ReferenceType JavaObject MethodInvocation object dataGetStruct	0
MethodDeclaration Modifier public ReferenceType Object case68_line543 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType MultipleAsgnNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Literal null Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject flush FormalParameter BasicType int flush IOException ReturnStatement MethodInvocation ClassCreator ReferenceType ByteList Literal 0 MemberReference flush	0
MethodDeclaration Modifier private ReferenceType IRubyObject whenNoTest FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block aBlock IfStatement MethodInvocation expressionNodes MethodInvocation isTrue MemberReference runtime MemberReference context MemberReference self MemberReference aBlock BlockStatement ReturnStatement MethodInvocation bodyNode MemberReference runtime MemberReference context MemberReference self MemberReference aBlock ReturnStatement Literal null	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation MethodInvocation context getRuntime	0
MethodDeclaration Modifier private ReferenceType RubyString replaceCommon FormalParameter ReferenceType IRubyObject other StatementExpression MethodInvocation modifyCheck LocalVariableDeclaration ReferenceType RubyString VariableDeclarator otherStr MethodInvocation other convertToString StatementExpression Assignment MemberReference otherStr shareLevel Assignment MemberReference shareLevel MemberReference SHARE_LEVEL_BYTELIST = = StatementExpression Assignment MemberReference value MemberReference otherStr value = StatementExpression MethodInvocation MemberReference otherStr infectBy ReturnStatement MemberReference otherStr	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair meta Literal true ReferenceType IRubyObject gethostname FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv TryStatement ReturnStatement MethodInvocation context MethodInvocation MethodInvocation InetAddress MethodInvocation getHostName getLocalHost newString getRuntime CatchClause CatchClauseParameter UnknownHostException e TryStatement ReturnStatement MethodInvocation context MethodInvocation MethodInvocation InetAddress MethodInvocation getHostName ArrayCreator BasicType byte ArrayInitializer Literal 0 Literal 0 Literal 0 Literal 0 getByAddress newString getRuntime CatchClause CatchClauseParameter UnknownHostException e2 ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "gethostname: name or service not known" sockerr	1
MethodDeclaration Modifier private invokeCCallTrace FormalParameter ReferenceType SkinnyMethodAdapter method StatementExpression MethodInvocation method Literal 0 aload StatementExpression MethodInvocation method Literal 1 aload StatementExpression MethodInvocation method Literal 4 aload StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType JavaMethod p Literal MethodInvocation VoidClassReference ClassReference ReferenceType ThreadContext ClassReference ReferenceType String sig invokevirtual	0
MethodDeclaration Modifier synchronized createJavaMethods FormalParameter ReferenceType Ruby runtime IfStatement MemberReference ! initialized BlockStatement IfStatement BinaryOperation != MemberReference methods Literal null BlockStatement IfStatement BinaryOperation == MemberReference methods length Literal 1 BlockStatement StatementExpression Assignment MemberReference javaCallable MethodInvocation JavaMethod MemberReference runtime MemberReference ArraySelector Literal 0 methods create = BlockStatement LocalVariableDeclaration ReferenceType Map VariableDeclarator methodsMap ClassCreator ReferenceType HashMap LocalVariableDeclaration BasicType int VariableDeclarator maxArity Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Method VariableDeclarator method MemberReference methods BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator arity MethodInvocation method MemberReference length getParameterTypes StatementExpression Assignment MemberReference maxArity MethodInvocation Math MemberReference arity MemberReference maxArity max = LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType JavaMethod VariableDeclarator methodsForArity Cast ReferenceType ArrayList TypeArgument ReferenceType JavaMethod MethodInvocation methodsMap MemberReference arity get IfStatement BinaryOperation == MemberReference methodsForArity Literal null BlockStatement StatementExpression Assignment MemberReference methodsForArity ClassCreator ReferenceType ArrayList TypeArgument ReferenceType JavaMethod = StatementExpression MethodInvocation methodsMap MemberReference arity MemberReference methodsForArity put StatementExpression MethodInvocation methodsForArity MethodInvocation JavaMethod MemberReference runtime MemberReference method create add StatementExpression Assignment MemberReference javaCallables ArrayCreator ReferenceType JavaMethod BinaryOperation + MemberReference maxArity Literal 1 = ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Map ReferenceType Entry VariableDeclarator iter MethodInvocation methodsMap MethodInvocation iterator entrySet MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry MethodInvocation iter next LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType JavaMethod VariableDeclarator methodsForArity Cast ReferenceType List TypeArgument ReferenceType JavaMethod MethodInvocation entry getValue LocalVariableDeclaration ReferenceType JavaMethod VariableDeclarator methodsArray MethodInvocation methodsForArity ArrayCreator ReferenceType JavaMethod MethodInvocation methodsForArity size toArray StatementExpression Assignment MemberReference ArraySelector Cast ReferenceType Integer MethodInvocation entry getKey javaCallables MemberReference methodsArray = StatementExpression Assignment MemberReference methods Literal null = StatementExpression Assignment MemberReference cache ClassCreator ReferenceType ConcurrentHashMap = StatementExpression Assignment MemberReference initialized Literal true =	1
MethodDeclaration Modifier public final put FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType MemoryIO io FormalParameter BasicType long offset FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation io MemberReference offset Cast BasicType byte MethodInvocation Util MemberReference value uint8Value putByte	1
MethodDeclaration Modifier public Annotation Override ReferenceType File getAbsoluteFile ReturnStatement ClassCreator ReferenceType NormalizedFile MethodInvocation getAbsolutePath	0
MethodDeclaration Modifier public ReferenceType IR_Class getTargetClass ReturnStatement TernaryExpression BinaryOperation instanceof MemberReference _scope ReferenceType IR_Module MethodInvocation IR_Class Literal "Module" getCoreClass Literal null	1
MethodDeclaration Modifier public ReferenceType Object put FormalParameter ReferenceType Object key FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation JavaUtil MethodInvocation getRuntime MemberReference key convertJavaToUsableRubyObject MethodInvocation JavaUtil MethodInvocation getRuntime MemberReference value convertJavaToUsableRubyObject internalPut ReturnStatement MemberReference value	0
MethodDeclaration Modifier public final BasicType int arrayOffset ReturnStatement MemberReference offset	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType IRubyObject LocalVariableDeclaration ReferenceType RubySymbol VariableDeclarator symbol MethodInvocation RubySymbol MethodInvocation getRuntime MemberReference value getSymbolLong IfStatement BinaryOperation != MemberReference symbol Literal null ReturnStatement MethodInvocation MethodInvocation MethodInvocation symbol asJavaString newString getRuntime ReturnStatement MethodInvocation MethodInvocation getNil getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ElementValuePair compat MemberReference CompatVersion RUBY1_8 ReferenceType RubyString downcase FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation context getRuntime strDup StatementExpression MethodInvocation str MemberReference context downcase_bang ReturnStatement MemberReference str	0
MethodDeclaration Modifier static protected BasicType boolean equalInternal FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType IRubyObject that FormalParameter Modifier final ReferenceType IRubyObject other ReturnStatement BinaryOperation || BinaryOperation == MemberReference that MemberReference other MethodInvocation that MethodInvocation isTrue MemberReference context Literal "==" MemberReference other callMethod	0
MethodDeclaration Modifier private ReferenceType IRubyObject invokeDirectWithExceptionHandling FormalParameter ReferenceType Method method FormalParameter ReferenceType Object javaInvokee FormalParameter ReferenceType Object arg0 FormalParameter ReferenceType Object arg1 TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator result TernaryExpression BinaryOperation != MemberReference handle Literal null MethodInvocation handle MemberReference javaInvokee MemberReference arg0 MemberReference arg1 invoke MethodInvocation method MemberReference javaInvokee MemberReference arg0 MemberReference arg1 invoke ReturnStatement MethodInvocation MemberReference result convertReturn CatchClause CatchClauseParameter IllegalArgumentException iae ReturnStatement MethodInvocation MemberReference method MemberReference iae MemberReference arg0 MemberReference arg1 handlelIllegalArgumentEx CatchClause CatchClauseParameter IllegalAccessException iae ReturnStatement MethodInvocation MemberReference method MemberReference iae handleIllegalAccessEx CatchClause CatchClauseParameter InvocationTargetException ite ReturnStatement MethodInvocation MemberReference ite MemberReference method handleInvocationTargetEx CatchClause CatchClauseParameter Throwable t ReturnStatement MethodInvocation MemberReference t MemberReference method handleThrowable	1
MethodDeclaration Modifier public final BasicType long getLong FormalParameter BasicType long offset StatementExpression MethodInvocation MemberReference offset Literal 8 checkBounds ReturnStatement MethodInvocation IO BinaryOperation + MemberReference address MemberReference offset getLong	0
MethodDeclaration Modifier public ReferenceType IRubyObject __file__ FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MemberReference self ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference arg1 MemberReference arg2 MemberReference block __file__	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "instance_eval" ElementValuePair frame Literal true ReferenceType IRubyObject instance_eval FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference context MethodInvocation getInstanceEvalClass MemberReference arg0 MemberReference block specificEval	1
MethodDeclaration Modifier public ReferenceType NodeType getNodeType ReturnStatement MemberReference NodeType LAMBDANODE	0
MethodDeclaration Modifier public ReferenceType Object case452_line1708 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals appendToBlock = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private ReferenceType createBlockBody19 FormalParameter ReferenceType Object scriptObject FormalParameter ReferenceType ThreadContext context FormalParameter BasicType int index FormalParameter ReferenceType String descriptor NumberFormatException LocalVariableDeclaration ReferenceType String VariableDeclarator firstSplit MethodInvocation descriptor Literal "," split LocalVariableDeclaration ReferenceType String VariableDeclarator secondSplit IfStatement BinaryOperation == MemberReference ArraySelector Literal 2 MethodInvocation length firstSplit Literal 0 BlockStatement StatementExpression Assignment MemberReference secondSplit ArrayCreator ReferenceType String Literal 0 = BlockStatement StatementExpression Assignment MemberReference secondSplit MemberReference ArraySelector Literal 2 MethodInvocation Literal ";" split firstSplit = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference secondSplit length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i secondSplit MemberReference ArraySelector MemberReference i MethodInvocation intern secondSplit = LocalVariableDeclaration ReferenceType VariableDeclarator body MethodInvocation RuntimeHelpers MemberReference context MemberReference scriptObject MemberReference ArraySelector Literal 0 firstSplit MethodInvocation Integer MemberReference ArraySelector Literal 1 firstSplit parseInt MemberReference secondSplit MethodInvocation Boolean MemberReference ArraySelector Literal 3 firstSplit valueOf MethodInvocation Integer MemberReference ArraySelector Literal 4 firstSplit parseInt MethodInvocation Boolean MemberReference ArraySelector Literal 5 firstSplit valueOf createCompiledBlockBody19 ReturnStatement Assignment MemberReference ArraySelector MemberReference index MemberReference body =	1
MethodDeclaration Modifier public ReferenceType Node getValueNode ReturnStatement MemberReference valueNode	0
MethodDeclaration Modifier public ReferenceType IRubyObject decode FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ByteBuffer enc ReturnStatement MethodInvocation RubyFloat MemberReference runtime MethodInvocation MemberReference enc newFloat	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "new_out" Literal "alloc_out" Literal "__alloc_out" ElementValuePair meta Literal true ReferenceType Buffer allocateOutput FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject sizeArg FormalParameter ReferenceType IRubyObject arg2 ReturnStatement MethodInvocation MemberReference context MemberReference recv MemberReference sizeArg MethodInvocation MemberReference arg2 getCount MemberReference OUT	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context Literal "class variable" pushString StatementExpression MethodInvocation context MemberReference ending go	0
MethodDeclaration setNumeric FormalParameter ReferenceType RubyClass numericClass StatementExpression Assignment This MemberReference numericClass MemberReference numericClass =	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyArray declared_constructors ReturnStatement MethodInvocation MethodInvocation MethodInvocation getDeclaredConstructors javaClass buildConstructors	1
MethodDeclaration Modifier private static ReferenceType IRubyObject fixCoerce FormalParameter ReferenceType IRubyObject x DoStatement BinaryOperation && BinaryOperation instanceof MemberReference x ReferenceType RubyFixnum BinaryOperation instanceof MemberReference x ReferenceType RubyBignum BlockStatement StatementExpression Assignment MemberReference x MethodInvocation x convertToInteger = ReturnStatement MemberReference x	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject receiver FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType CallSite varAsgnSite StatementExpression MethodInvocation varAsgnSite MemberReference context MemberReference self MemberReference receiver MemberReference value call ReturnStatement MemberReference value	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement ClassCreator ReferenceType SomeImplementation	0
MethodDeclaration Modifier public static FormalParameter ReferenceType MethodVisitor method FormalParameter ReferenceType String classname LocalVariableDeclaration ReferenceType SkinnyMethodAdapter VariableDeclarator mv ClassCreator ReferenceType SkinnyMethodAdapter MemberReference method StatementExpression MethodInvocation mv MethodInvocation MemberReference classname c ldc StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType Class p Literal "forName" MethodInvocation ClassReference ReferenceType Class MethodInvocation ClassReference ReferenceType String params sig invokestatic StatementExpression MethodInvocation mv MethodInvocation ClassReference ReferenceType InvokeDynamicSupport p Literal MethodInvocation VoidClassReference ClassReference ReferenceType Class sig invokestatic	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + SuperMethodInvocation toString Literal "(" MemberReference _argIndex TernaryExpression MemberReference _restOfArgArray Literal ", ALL" Literal "" Literal ")"	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public static ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator backref MethodInvocation context MethodInvocation MethodInvocation context getRuntime getBackRef getCurrentScope ReturnStatement MethodInvocation RubyRegexp MemberReference backref	0
MethodDeclaration Modifier public ReferenceType Object case312_line1210 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType RedoNode Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public FormalParameter ReferenceType ModeFlags subsetModes StatementExpression MethodInvocation subsetModes MemberReference modes	0
MethodDeclaration Modifier public static ReferenceType Object FormalParameter ReferenceType Object otherValue ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "compare_by_identity?" ElementValuePair frame Literal true ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject getCompareByIdentity_p FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MethodInvocation isComparedByIdentity newBoolean getRuntime	1
MethodDeclaration Modifier public ReferenceType RubyHash each_key FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter Modifier final ReferenceType Block block StatementExpression MethodInvocation ClassCreator ReferenceType Visitor MethodDeclaration Modifier public visit FormalParameter ReferenceType IRubyObject key FormalParameter ReferenceType IRubyObject value StatementExpression MethodInvocation block MemberReference context MemberReference key yield iteratorVisitAll ReturnStatement This	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType RescueBodyNode getRescueNode ReturnStatement MemberReference rescueNode	0
MethodDeclaration Modifier public BasicType boolean isEmpty ReturnStatement BinaryOperation == MemberReference size Literal 0	0
MethodDeclaration Modifier private ReferenceType IRubyObject addAsBignum FormalParameter ReferenceType ThreadContext context FormalParameter BasicType long other ReturnStatement MethodInvocation RubyBignum MethodInvocation MemberReference context MemberReference other op_plus MethodInvocation context getRuntime MemberReference value newBignum	0
MethodDeclaration visit FormalParameter ReferenceType Visitor visitor IfStatement BinaryOperation != MemberReference name1 Literal null StatementExpression MethodInvocation visitor MemberReference name1 MemberReference value1 visit IfStatement BinaryOperation != MemberReference name2 Literal null StatementExpression MethodInvocation visitor MemberReference name2 MemberReference visit IfStatement BinaryOperation != MemberReference name3 Literal null StatementExpression MethodInvocation visitor MemberReference name3 MemberReference visit IfStatement BinaryOperation != MemberReference name4 Literal null StatementExpression MethodInvocation visitor MemberReference name4 MemberReference value4 visit IfStatement BinaryOperation != MemberReference name5 Literal null StatementExpression MethodInvocation visitor MemberReference name5 MemberReference value5 visit	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "to_i" ReferenceType IRubyObject to_i ReturnStatement MethodInvocation Literal 10 Literal false	1
MethodDeclaration Modifier public BasicType boolean isShowBytecode ReturnStatement MemberReference showBytecode	0
MethodDeclaration Modifier public beginFlatClosure FormalParameter ReferenceType CompilerCallback argsCallback FormalParameter ReferenceType scope StatementExpression MethodInvocation methodCompiler loadThreadContext StatementExpression MethodInvocation methodCompiler Literal "getCurrentScope" MethodInvocation ClassReference ReferenceType DynamicScope sig invokeThreadContext StatementExpression MethodInvocation method MethodInvocation methodCompiler getDynamicScopeIndex astore IfStatement BinaryOperation > MethodInvocation scope getNumberOfVariables Literal 4 BlockStatement StatementExpression MethodInvocation method MethodInvocation methodCompiler getDynamicScopeIndex aload StatementExpression MethodInvocation method MethodInvocation ClassReference ReferenceType DynamicScope p Literal "getValues" MethodInvocation ClassReference ReferenceType IRubyObject sig invokevirtual StatementExpression MethodInvocation method MethodInvocation methodCompiler getVarsArrayIndex astore IfStatement BinaryOperation != MemberReference argsCallback Literal null BlockStatement StatementExpression MethodInvocation method MemberReference argsIndex aload StatementExpression MethodInvocation argsCallback MemberReference methodCompiler call	0
MethodDeclaration Modifier public remove FormalParameter ReferenceType RubyThread rubyThread SynchronizedStatement MemberReference rubyThread StatementExpression MethodInvocation rubyThread Literal null StatementExpression MethodInvocation rubyThreadList MemberReference rubyThread remove	1
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter StatementExpression MethodInvocation buffer MethodInvocation Util MemberReference parameter int32Value putInt	1
MethodDeclaration Modifier public ReferenceType IRubyObject assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType Block block FormalParameter BasicType boolean checkArity ThrowStatement ClassCreator ReferenceType RuntimeException BinaryOperation + BinaryOperation + Literal "Invalid node encountered in interpreter: \"" MethodInvocation MethodInvocation getName getClass Literal "\", please report this at www.jruby.org"	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "zero?" ElementValuePair required Literal 1 ElementValuePair module Literal true ReferenceType RubyBoolean zero_p FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject filename LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry MethodInvocation MemberReference filename file_in_archive IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement ReturnStatement MethodInvocation runtime BinaryOperation == MethodInvocation entry getSize Literal 0L newBoolean LocalVariableDeclaration ReferenceType JRubyFile VariableDeclarator file MethodInvocation MemberReference filename file ReturnStatement MethodInvocation runtime BinaryOperation && MethodInvocation file exists BinaryOperation == MethodInvocation file length Literal 0L newBoolean	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "re_exchangeable?" ElementValuePair module Literal true ReferenceType IRubyObject re_exchangeable_p FormalParameter ReferenceType IRubyObject self ThrowStatement MethodInvocation self MethodInvocation Literal "Process::UID::re_exchangeable? not implemented yet" newNotImplementedError getRuntime	1
MethodDeclaration Modifier public ReferenceType Object accept FormalParameter ReferenceType NodeVisitor iVisitor ReturnStatement MethodInvocation iVisitor This	0
MethodDeclaration Modifier public BasicType boolean isReadable ReturnStatement BinaryOperation != BinaryOperation & MemberReference mode MemberReference READABLE Literal 0	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 FormalParameter ReferenceType IRubyObject arg5 FormalParameter ReferenceType IRubyObject arg6 FormalParameter ReferenceType IRubyObject arg7 IfStatement BinaryOperation >= MemberReference box callCount Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 call MemberReference context MemberReference name tryJitReturnMethod ReturnStatement MethodInvocation box.actualMethod MemberReference context MemberReference self MemberReference clazz MemberReference name MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference arg5 MemberReference arg6 MemberReference arg7 call	0
MethodDeclaration Modifier public BasicType boolean hasInternalVariable FormalParameter ReferenceType String name AssertStatement MethodInvocation ! IdUtil MemberReference name isRubyVariable ReturnStatement MethodInvocation MemberReference name variableTableContains	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getBlockMethod FormalParameter ReferenceType String method ReturnStatement ClassCreator ReferenceType ReflectionCallback MemberReference type MemberReference method ArrayCreator ReferenceType Class ArrayInitializer MemberReference RubyKernel IRUBY_OBJECT MemberReference RubyKernel IRUBY_OBJECT Literal false Literal true MethodInvocation Arity Literal 2 fixed Literal false	1
MethodDeclaration Modifier private final static ReferenceType OS determineOS LocalVariableDeclaration ReferenceType String VariableDeclarator osName MethodInvocation System MethodInvocation Literal " " split ArraySelector Literal 0 MethodInvocation toLowerCase Literal "os.name" getProperty IfStatement BinaryOperation || MethodInvocation osName Literal "mac" startsWith MethodInvocation osName Literal "darwin" startsWith BlockStatement ReturnStatement MemberReference OS DARWIN IfStatement BinaryOperation || MethodInvocation osName Literal "sunos" startsWith MethodInvocation osName Literal "solaris" startsWith BlockStatement ReturnStatement MemberReference OS SOLARIS ForStatement EnhancedForControl VariableDeclaration ReferenceType OS VariableDeclarator os MethodInvocation OS values BlockStatement IfStatement MethodInvocation osName MethodInvocation os MethodInvocation toLowerCase toString startsWith BlockStatement ReturnStatement MemberReference os ReturnStatement MemberReference OS UNKNOWN	1
MethodDeclaration Modifier private ReferenceType RubyBigDecimal setResult ReturnStatement MethodInvocation Literal 0 setResult	0
MethodDeclaration Modifier public BasicType boolean friendly ReturnStatement MethodInvocation bri friendly	0
MethodDeclaration Modifier public ReferenceType ByteList getByteList ReturnStatement MemberReference value	0
MethodDeclaration Modifier private ReferenceType IRubyObject scanNoIter FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Regex pattern FormalParameter ReferenceType Matcher matcher FormalParameter ReferenceType Encoding enc FormalParameter BasicType int begin FormalParameter BasicType int FormalParameter BasicType int tuFlags LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ary MethodInvocation runtime newArray LocalVariableDeclaration BasicType int VariableDeclarator end Literal 0 IfStatement BinaryOperation == MethodInvocation pattern numberOfCaptures Literal 0 BlockStatement WhileStatement BinaryOperation >= MethodInvocation matcher BinaryOperation + MemberReference begin MemberReference end MemberReference MemberReference Option NONE search Literal 0 BlockStatement StatementExpression Assignment MemberReference end MethodInvocation MemberReference matcher MemberReference enc MemberReference begin MemberReference = LocalVariableDeclaration ReferenceType RubyString VariableDeclarator substr MethodInvocation MemberReference runtime MethodInvocation matcher getBegin BinaryOperation - MethodInvocation matcher getEnd MethodInvocation matcher getBegin makeShared StatementExpression MethodInvocation substr MemberReference tuFlags infectBy StatementExpression MethodInvocation ary MemberReference substr append BlockStatement WhileStatement BinaryOperation >= MethodInvocation matcher BinaryOperation + MemberReference begin MemberReference end MemberReference MemberReference Option NONE search Literal 0 BlockStatement StatementExpression Assignment MemberReference end MethodInvocation MemberReference matcher MemberReference enc MemberReference begin MemberReference = StatementExpression MethodInvocation ary MethodInvocation MemberReference runtime MemberReference matcher MemberReference MemberReference tuFlags Literal false append LocalVariableDeclaration ReferenceType DynamicScope VariableDeclarator scope MethodInvocation context getCurrentScope IfStatement BinaryOperation > MethodInvocation ary size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType RubyMatchData VariableDeclarator match MethodInvocation RubyRegexp MemberReference context This MemberReference scope MemberReference matcher MemberReference pattern updateBackRef StatementExpression MethodInvocation match MemberReference tuFlags infectBy BlockStatement StatementExpression MethodInvocation scope MethodInvocation runtime getNil setBackRef ReturnStatement MemberReference ary	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "<=" ElementValuePair required Literal 1 ReferenceType IRubyObject op_le FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other SwitchStatement MethodInvocation other MemberReference index getMetaClass SwitchStatementCase MemberReference ClassIndex FIXNUM MemberReference ClassIndex BIGNUM MemberReference ClassIndex FLOAT LocalVariableDeclaration BasicType double VariableDeclarator b Cast ReferenceType RubyNumeric MemberReference other ReturnStatement MethodInvocation RubyBoolean MethodInvocation getRuntime BinaryOperation && MethodInvocation ! Double MemberReference b isNaN BinaryOperation <= MemberReference value MemberReference b newBoolean SwitchStatementCase ReturnStatement MethodInvocation MemberReference context Literal "<=" MemberReference other coerceRelOp	1
MethodDeclaration Modifier public ReferenceType CallSite ReturnStatement MemberReference baseCallSites	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass klass ReturnStatement ClassCreator ReferenceType RubyHash MemberReference runtime MemberReference klass	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "send" Literal "__send__" ReferenceType IRubyObject send FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ThrowStatement MethodInvocation context MethodInvocation Literal 0 Literal 1 newArgumentError getRuntime	0
MethodDeclaration Modifier public ReferenceType IRubyObject getClassVar FormalParameter ReferenceType String name AssertStatement MethodInvocation IdUtil MemberReference name isClassVariable LocalVariableDeclaration ReferenceType Object VariableDeclarator value LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module This DoStatement BinaryOperation != Assignment MemberReference module MethodInvocation module getSuperClass = Literal null BlockStatement IfStatement BinaryOperation != Assignment MemberReference value MethodInvocation module MemberReference name fetchClassVariable = Literal null ReturnStatement Cast ReferenceType IRubyObject MemberReference value ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "uninitialized class variable " MemberReference name Literal " in " MethodInvocation getName MemberReference name newNameError getRuntime	1
MethodDeclaration Modifier public final BasicType long longValue FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject obj ReturnStatement MethodInvocation Util MemberReference obj uint16Value	1
MethodDeclaration Modifier private testPrintErrorWithBacktrace FormalParameter ReferenceType String backtrace Exception LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator oldStderr Cast ReferenceType RubyIO MethodInvocation runtime MethodInvocation Literal "$stderr" get getGlobalVariables TryStatement LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator stderrOutput ClassCreator ReferenceType ByteArrayOutputStream LocalVariableDeclaration ReferenceType RubyIO VariableDeclarator newStderr ClassCreator ReferenceType RubyIO MemberReference runtime MemberReference stderrOutput StatementExpression MethodInvocation runtime MethodInvocation Literal "$stderr" MemberReference newStderr set getGlobalVariables TryStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal "class MyError < def backtrace " MemberReference backtrace Literal " end end raise MyError.new " eval StatementExpression MethodInvocation Literal "Expected MyError to be raised" fail CatchClause CatchClauseParameter RaiseException re StatementExpression MethodInvocation runtime MethodInvocation re getException printError StatementExpression MethodInvocation runtime MethodInvocation Literal "$stderr" MemberReference oldStderr set getGlobalVariables	0
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyFixnum length ThrowStatement MethodInvocation MethodInvocation Literal "not a java array" newTypeError getRuntime	1
MethodDeclaration Modifier public static ReferenceType RubyNumeric unmarshalFrom FormalParameter ReferenceType input IOException LocalVariableDeclaration BasicType boolean VariableDeclarator positive BinaryOperation == MethodInvocation input readUnsignedByte Literal '+' LocalVariableDeclaration BasicType int VariableDeclarator shortLength MethodInvocation input LocalVariableDeclaration BasicType byte VariableDeclarator digits ArrayCreator BasicType byte BinaryOperation + BinaryOperation * MemberReference shortLength Literal 2 Literal 1 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference digits length Literal 1 BinaryOperation >= MemberReference i Literal 1 MemberReference -- i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i digits MethodInvocation input readSignedByte = LocalVariableDeclaration ReferenceType BigInteger VariableDeclarator value ClassCreator ReferenceType BigInteger MemberReference digits IfStatement MemberReference ! positive BlockStatement StatementExpression Assignment MemberReference value MethodInvocation value negate = LocalVariableDeclaration ReferenceType RubyNumeric VariableDeclarator result MethodInvocation MethodInvocation input getRuntime MemberReference value bignorm StatementExpression MethodInvocation input MemberReference result ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType ModeFlags getOriginalModes ReturnStatement MemberReference originalModes	0
MethodDeclaration Modifier public ReferenceType Node parseFromMain FormalParameter ReferenceType InputStream inputStream FormalParameter ReferenceType String filename IfStatement MethodInvocation config isInlineScript BlockStatement ReturnStatement MethodInvocation MemberReference inputStream MemberReference filename MethodInvocation MethodInvocation getCurrentScope getCurrentContext BlockStatement ReturnStatement MethodInvocation MemberReference inputStream MemberReference filename MethodInvocation MethodInvocation getCurrentScope getCurrentContext parseFile	0
MethodDeclaration Modifier private static ReferenceType IRubyObject callMethodMissing FormalParameter ReferenceType CacheEntry entry FormalParameter ReferenceType CallType callType FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation MemberReference context MemberReference self MethodInvocation self getMetaClass MemberReference name MemberReference Block NULL_BLOCK call MemberReference context MemberReference self MethodInvocation getVisibility MemberReference name MemberReference callType	0
MethodDeclaration Modifier public static ReferenceType Object ReturnStatement MemberReference staticObject	0
MethodDeclaration Modifier public static ReferenceType IRubyObject uid_set FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType IRubyObject arg StatementExpression MethodInvocation runtime MethodInvocation Cast BasicType int MethodInvocation arg MethodInvocation getLongValue convertToInteger setuid getPosix ReturnStatement MethodInvocation RubyFixnum MemberReference runtime zero	1
MethodDeclaration Modifier public ReferenceType Object case366_line1377 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType LambdaNode MethodInvocation Cast ReferenceType ArgsNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition Cast ReferenceType ArgsNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation support getCurrentScope = StatementExpression MethodInvocation support popCurrentScope StatementExpression MethodInvocation lexer Cast ReferenceType Integer MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals setLeftParenBegin ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier static protected registerRubyMethods FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType RubyClass result StatementExpression MethodInvocation result ClassReference ReferenceType JavaObject defineAnnotatedMethods	1
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference ++ innerIndex	0
MethodDeclaration Modifier private final JavaSoftCheckResize IfStatement MethodInvocation overThreshold BlockStatement LocalVariableDeclaration ReferenceType RubyHashEntry VariableDeclarator tbl MemberReference table IfStatement BinaryOperation == MemberReference tbl length MemberReference MAXIMUM_CAPACITY BlockStatement StatementExpression Assignment MemberReference threshold MemberReference Integer MAX_VALUE = ReturnStatement StatementExpression MethodInvocation MemberReference table resizeAndAdjustThreshold	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "join" ReferenceType IRubyObject join FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation MemberReference context MethodInvocation context MethodInvocation getGlobalVariables MethodInvocation Literal "$," get getRuntime join	0
MethodDeclaration Modifier public final ReferenceType BigInteger FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String name ReturnStatement MethodInvocation runtimeCache MemberReference runtime Literal 9 MemberReference name getBigInteger	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "fill" ElementValuePair required Literal 3 ReferenceType IRubyObject afill FormalParameter ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject endIndex FormalParameter ReferenceType IRubyObject someValue ThrowStatement MethodInvocation MethodInvocation Literal "not a java array" newTypeError getRuntime	0
MethodDeclaration Modifier private Annotation Deprecated loadArguments FormalParameter ReferenceType MethodVisitor mv FormalParameter BasicType int argsIndex FormalParameter BasicType int count FormalParameter ReferenceType Class types StatementExpression MethodInvocation MemberReference mv MemberReference argsIndex MemberReference count MemberReference types Literal false loadArguments	1
MethodDeclaration Modifier public ReferenceType Object case470_line1788 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Literal null Cast ReferenceType RestArgNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Literal null Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private final static ReferenceType ByteList grow FormalParameter ReferenceType ByteList i2Grow FormalParameter BasicType byte iPads FormalParameter BasicType int iLength LocalVariableDeclaration BasicType int VariableDeclarator lPadLength MemberReference iPads length WhileStatement BinaryOperation >= MemberReference iLength MemberReference lPadLength BlockStatement StatementExpression MethodInvocation i2Grow MemberReference iPads append StatementExpression Assignment MemberReference iLength MemberReference lPadLength -= StatementExpression MethodInvocation i2Grow MemberReference iPads Literal 0 MemberReference iLength append ReturnStatement MemberReference i2Grow	1
MethodDeclaration Modifier public BasicType boolean isClassVarDefined FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module This DoStatement BinaryOperation != Assignment MemberReference module MethodInvocation module getSuperClass = Literal null BlockStatement IfStatement MethodInvocation module MemberReference name hasClassVariable ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "eid" ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self ReturnStatement MethodInvocation MethodInvocation context getRuntime	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType RubyModule target LocalVariableDeclaration BasicType int VariableDeclarator newGeneration MethodInvocation context MethodInvocation getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value MethodInvocation target MemberReference name StatementExpression Assignment MemberReference cachedValue MemberReference value = IfStatement BinaryOperation != MemberReference value Literal null BlockStatement StatementExpression Assignment MemberReference generation MemberReference newGeneration = StatementExpression Assignment MemberReference hash MethodInvocation target hashCode = ReturnStatement MemberReference value	0
MethodDeclaration Modifier public static ReferenceType String getType FormalParameter BasicType int i ReturnStatement Literal "int"	0
MethodDeclaration Modifier private final static BasicType short yyTable3 ReturnStatement ArrayCreator BasicType short ArrayInitializer Literal 214 Literal 214 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 214 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 214 Literal 214 Literal 214 Literal 214 Literal 214 Literal 214 Literal 214 Literal 214 Literal 214 Literal 214 Literal 0 Literal 214 Literal 214 Literal 0 Literal 0 Literal 0 Literal 0 Literal 210 Literal 0 Literal 0 Literal 214 Literal 0 Literal 0 Literal 214 Literal 0 Literal 0 Literal 214 Literal 210 Literal 214 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 214 Literal 214 Literal 0 Literal 0 Literal 0 Literal 0 Literal 214 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 214 Literal 0 Literal 0 Literal 0 Literal 0 Literal 210 Literal 0 Literal 0 Literal 213 Literal 213 Literal 213 Literal 0 Literal 0 Literal 213 Literal 213 Literal 213 Literal 0 Literal 213 Literal 0 Literal 210 Literal 210 Literal 0 Literal 0 Literal 0 Literal 210 Literal 0 Literal 0 Literal 213 Literal 213 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 213 Literal 213 Literal 0 Literal 213 Literal 213 Literal 213 Literal 213 Literal 213 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 213 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 213 Literal 213 Literal 213 Literal 213 Literal 213 Literal 213 Literal 213 Literal 213 Literal 213 Literal 213 Literal 0 Literal 213 Literal 213 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 215 Literal 213 Literal 0 Literal 0 Literal 213 Literal 0 Literal 0 Literal 213 Literal 0 Literal 213 Literal 215 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 213 Literal 213 Literal 0 Literal 211 Literal 211 Literal 211 Literal 213 Literal 0 Literal 211 Literal 211 Literal 211 Literal 0 Literal 211 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 213 Literal 0 Literal 0 Literal 0 Literal 211 Literal 211 Literal 0 Literal 215 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 211 Literal 211 Literal 0 Literal 211 Literal 211 Literal 211 Literal 211 Literal 211 Literal 215 Literal 215 Literal 0 Literal 0 Literal 0 Literal 215 Literal 0 Literal 211 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 211 Literal 211 Literal 211 Literal 211 Literal 211 Literal 211 Literal 211 Literal 211 Literal 211 Literal 211 Literal 0 Literal 211 Literal 211 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 211 Literal 0 Literal 0 Literal 211 Literal 0 Literal 0 Literal 211 Literal 0 Literal 211 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 211 Literal 211 Literal 216 Literal 0 Literal 0 Literal 0 Literal 211 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 216 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 211 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 210 Literal 210 Literal 210 Literal 0 Literal 0 Literal 210 Literal 210 Literal 210 Literal 0 Literal 210 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 210 Literal 210 Literal 0 Literal 216 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 210 Literal 210 Literal 0 Literal 210 Literal 210 Literal 210 Literal 210 Literal 210 Literal 216 Literal 216 Literal 0 Literal 0 Literal 0 Literal 216 Literal 0 Literal 210 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 210 Literal 210 Literal 0 Literal 0 Literal 0 Literal 210 Literal 210 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 217 Literal 210 Literal 0 Literal 0 Literal 210 Literal 0 Literal 0 Literal 210 Literal 0 Literal 210 Literal 217 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 210 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 210 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 217 Literal 0 Literal 0 Literal 215 Literal 215 Literal 215 Literal 0 Literal 0 Literal 215 Literal 215 Literal 215 Literal 0 Literal 215 Literal 0 Literal 217 Literal 217 Literal 0 Literal 0 Literal 0 Literal 217 Literal 0 Literal 0 Literal 215 Literal 215 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 215 Literal 215 Literal 0 Literal 215 Literal 215 Literal 215 Literal 215 Literal 215 Literal 0 Literal 0 Literal 0 Literal 224 Literal 0 Literal 0 Literal 0 Literal 215 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 224 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 215 Literal 215 Literal 0 Literal 0 Literal 0 Literal 215 Literal 215 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 215 Literal 0 Literal 0 Literal 215 Literal 0 Literal 0 Literal 215 Literal 224 Literal 215 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 224 Literal 224 Literal 0 Literal 215 Literal 0 Literal 224 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 215 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 216 Literal 216 Literal 216 Literal 0 Literal 0 Literal 216 Literal 216 Literal 216 Literal 0 Literal 216 Literal 0 Literal 218 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 216 Literal 216 Literal 218 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 216 Literal 216 Literal 0 Literal 216 Literal 216 Literal 216 Literal 216 Literal 216 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 216 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 218 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 216 Literal 216 Literal 0 Literal 0 Literal 0 Literal 216 Literal 216 Literal 218 Literal 218 Literal 0 Literal 0 Literal 0 Literal 218 Literal 0 Literal 216 Literal 0 Literal 0 Literal 216 Literal 0 Literal 0 Literal 216 Literal 0 Literal 216 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 217 Literal 217 Literal 217 Literal 216 Literal 0 Literal 217 Literal 217 Literal 217 Literal 0 Literal 217 Literal 0 Literal 219 Literal 0 Literal 0 Literal 0 Literal 216 Literal 0 Literal 0 Literal 0 Literal 217 Literal 217 Literal 219 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 217 Literal 217 Literal 0 Literal 217 Literal 217 Literal 217 Literal 217 Literal 217 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 217 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 219 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 217 Literal 217 Literal 0 Literal 0 Literal 0 Literal 217 Literal 217 Literal 219 Literal 219 Literal 0 Literal 0 Literal 0 Literal 219 Literal 0 Literal 217 Literal 0 Literal 0 Literal 217 Literal 0 Literal 0 Literal 217 Literal 0 Literal 217 Literal 0 Literal 224 Literal 224 Literal 224 Literal 0 Literal 0 Literal 224 Literal 224 Literal 224 Literal 0 Literal 224 Literal 0 Literal 225 Literal 0 Literal 0 Literal 217 Literal 0 Literal 0 Literal 0 Literal 0 Literal 224 Literal 224 Literal 225 Literal 0 Literal 0 Literal 0 Literal 0 Literal 217 Literal 0 Literal 224 Literal 224 Literal 0 Literal 224 Literal 224 Literal 224 Literal 224 Literal 224 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 224 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 32 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 225 Literal 0 Literal 0 Literal 0 Literal 32 Literal 0 Literal 0 Literal 224 Literal 224 Literal 0 Literal 0 Literal 0 Literal 224 Literal 224 Literal 225 Literal 225 Literal 0 Literal 0 Literal 0 Literal 225 Literal 0 Literal 224 Literal 0 Literal 0 Literal 224 Literal 0 Literal 0 Literal 224 Literal 0 Literal 224 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 218 Literal 218 Literal 218 Literal 250 Literal 0 Literal 218 Literal 218 Literal 218 Literal 0 Literal 218 Literal 224 Literal 195 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 32 Literal 218 Literal 218 Literal 195 Literal 224 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 218 Literal 218 Literal 0 Literal 218 Literal 218 Literal 218 Literal 218 Literal 218 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 218 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 196 Literal 0 Literal 0 Literal 0 Literal 195 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 196 Literal 218 Literal 218 Literal 0 Literal 0 Literal 0 Literal 218 Literal 218 Literal 195 Literal 195 Literal 0 Literal 0 Literal 0 Literal 195 Literal 0 Literal 218 Literal 0 Literal 0 Literal 218 Literal 0 Literal 0 Literal 218 Literal 0 Literal 218 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 196 Literal 0 Literal 219 Literal 219 Literal 219 Literal 218 Literal 0 Literal 219 Literal 219 Literal 219 Literal 0 Literal 219 Literal 0 Literal 0 Literal 196 Literal 196 Literal 0 Literal 218 Literal 0 Literal 196 Literal 0 Literal 219 Literal 219 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 219 Literal 219 Literal 0 Literal 219 Literal 219 Literal 219 Literal 219 Literal 219 Literal 0 Literal 0 Literal 0 Literal 226 Literal 0 Literal 0 Literal 0 Literal 219 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 226 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 219 Literal 219 Literal 0 Literal 0 Literal 0 Literal 219 Literal 219 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 219 Literal 0 Literal 0 Literal 219 Literal 0 Literal 0 Literal 219 Literal 226 Literal 219 Literal 0 Literal 225 Literal 225 Literal 225 Literal 0 Literal 0 Literal 225 Literal 225 Literal 225 Literal 0 Literal 225 Literal 0 Literal 226 Literal 226 Literal 0 Literal 219 Literal 0 Literal 0 Literal 0 Literal 0 Literal 225 Literal 225 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 219 Literal 0 Literal 225 Literal 225 Literal 0 Literal 225 Literal 225 Literal 225 Literal 225 Literal 225 Literal 0 Literal 0 Literal 32 Literal 32 Literal 32 Literal 0 Literal 0 Literal 225 Literal 32 Literal 32 Literal 0 Literal 32 Literal 0 Literal 194 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 194 Literal 0 Literal 0 Literal 0 Literal 225 Literal 0 Literal 0 Literal 0 Literal 225 Literal 225 Literal 32 Literal 32 Literal 32 Literal 32 Literal 32 Literal 0 Literal 0 Literal 225 Literal 0 Literal 0 Literal 225 Literal 0 Literal 0 Literal 225 Literal 0 Literal 225 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 195 Literal 195 Literal 195 Literal 194 Literal 0 Literal 195 Literal 195 Literal 195 Literal 0 Literal 195 Literal 225 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 194 Literal 194 Literal 195 Literal 195 Literal 0 Literal 225 Literal 0 Literal 0 Literal 0 Literal 0 Literal 32 Literal 195 Literal 195 Literal 0 Literal 195 Literal 195 Literal 195 Literal 195 Literal 195 Literal 0 Literal 0 Literal 0 Literal 0 Literal 196 Literal 196 Literal 196 Literal 195 Literal 193 Literal 196 Literal 196 Literal 196 Literal 32 Literal 196 Literal 0 Literal 0 Literal 0 Literal 0 Literal 193 Literal 0 Literal 0 Literal 0 Literal 0 Literal 196 Literal 196 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 196 Literal 196 Literal 0 Literal 196 Literal 196 Literal 196 Literal 196 Literal 196 Literal 195 Literal 0 Literal 0 Literal 195 Literal 0 Literal 0 Literal 195 Literal 196 Literal 195 Literal 0 Literal 0 Literal 0 Literal 193 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 195 Literal 0 Literal 193 Literal 193 Literal 0 Literal 189 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 195 Literal 0 Literal 0 Literal 189 Literal 196 Literal 0 Literal 0 Literal 196 Literal 0 Literal 0 Literal 196 Literal 0 Literal 196 Literal 226 Literal 226 Literal 226 Literal 0 Literal 0 Literal 226 Literal 226 Literal 226 Literal 0 Literal 226 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 196 Literal 0 Literal 0 Literal 0 Literal 226 Literal 226 Literal 0 Literal 0 Literal 0 Literal 189 Literal 0 Literal 0 Literal 196 Literal 226 Literal 226 Literal 0 Literal 226 Literal 226 Literal 226 Literal 226 Literal 226 Literal 0 Literal 0 Literal 189 Literal 189 Literal 0 Literal 0 Literal 0 Literal 226 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 226 Literal 190 Literal 0 Literal 226 Literal 0 Literal 0 Literal 226 Literal 0 Literal 226 Literal 0 Literal 0 Literal 190 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 194 Literal 194 Literal 194 Literal 0 Literal 226 Literal 194 Literal 194 Literal 194 Literal 0 Literal 194 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 226 Literal 0 Literal 0 Literal 194 Literal 194 Literal 0 Literal 0 Literal 0 Literal 0 Literal 190 Literal 0 Literal 0 Literal 194 Literal 194 Literal 0 Literal 194 Literal 194 Literal 194 Literal 194 Literal 194 Literal 0 Literal 0 Literal 0 Literal 190 Literal 190 Literal 0 Literal 0 Literal 194 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 191 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 194 Literal 191 Literal 0 Literal 194 Literal 0 Literal 0 Literal 194 Literal 0 Literal 194 Literal 193 Literal 193 Literal 193 Literal 0 Literal 0 Literal 193 Literal 193 Literal 193 Literal 0 Literal 193 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 194 Literal 0 Literal 0 Literal 0 Literal 193 Literal 193 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 191 Literal 194 Literal 193 Literal 193 Literal 0 Literal 193 Literal 193 Literal 193 Literal 193 Literal 193 Literal 0 Literal 0 Literal 0 Literal 0 Literal 191 Literal 191 Literal 0 Literal 193 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 189 Literal 189 Literal 189 Literal 0 Literal 0 Literal 189 Literal 189 Literal 189 Literal 0 Literal 189 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 193 Literal 0 Literal 0 Literal 193 Literal 189 Literal 189 Literal 193 Literal 0 Literal 193 Literal 0 Literal 0 Literal 0 Literal 0 Literal 189 Literal 189 Literal 192 Literal 189 Literal 189 Literal 189 Literal 189 Literal 189 Literal 0 Literal 0 Literal 0 Literal 193 Literal 192 Literal 0 Literal 0 Literal 189 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 193 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 192 Literal 0 Literal 189 Literal 0 Literal 0 Literal 189 Literal 0 Literal 0 Literal 189 Literal 0 Literal 189 Literal 0 Literal 0 Literal 0 Literal 192 Literal 192 Literal 0 Literal 185 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 190 Literal 190 Literal 190 Literal 189 Literal 185 Literal 190 Literal 190 Literal 190 Literal 0 Literal 190 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 189 Literal 0 Literal 0 Literal 0 Literal 190 Literal 190 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 190 Literal 190 Literal 0 Literal 190 Literal 190 Literal 190 Literal 190 Literal 190 Literal 0 Literal 0 Literal 185 Literal 0 Literal 0 Literal 0 Literal 0 Literal 190 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 185 Literal 185 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 190 Literal 0 Literal 0 Literal 190 Literal 187 Literal 0 Literal 190 Literal 0 Literal 190 Literal 0 Literal 191 Literal 191 Literal 191 Literal 0 Literal 187 Literal 191 Literal 191 Literal 191 Literal 0 Literal 191 Literal 0 Literal 0 Literal 0 Literal 0 Literal 190 Literal 0 Literal 0 Literal 0 Literal 0 Literal 191 Literal 191 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 190 Literal 0 Literal 191 Literal 191 Literal 0 Literal 191 Literal 191 Literal 191 Literal 191 Literal 191 Literal 0 Literal 0 Literal 187 Literal 0 Literal 0 Literal 0 Literal 0 Literal 191 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 34 Literal 0 Literal 0 Literal 187 Literal 187 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 34 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 191 Literal 0 Literal 0 Literal 191 Literal 0 Literal 0 Literal 191 Literal 0 Literal 191 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 227 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 191 Literal 227 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 34 Literal 192 Literal 192 Literal 192 Literal 191 Literal 0 Literal 192 Literal 192 Literal 192 Literal 0 Literal 192 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 192 Literal 192 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 227 Literal 0 Literal 192 Literal 192 Literal 0 Literal 192 Literal 192 Literal 192 Literal 192 Literal 192 Literal 0 Literal 0 Literal 0 Literal 0 Literal 227 Literal 227 Literal 256 Literal 192 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 256 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 185 Literal 185 Literal 185 Literal 0 Literal 0 Literal 185 Literal 185 Literal 185 Literal 0 Literal 185 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 192 Literal 0 Literal 0 Literal 192 Literal 185 Literal 185 Literal 192 Literal 0 Literal 192 Literal 0 Literal 251 Literal 0 Literal 0 Literal 185 Literal 185 Literal 0 Literal 185 Literal 185 Literal 185 Literal 185 Literal 185 Literal 0 Literal 0 Literal 0 Literal 192 Literal 256 Literal 0 Literal 0 Literal 185 Literal 0 Literal 188 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 192 Literal 0 Literal 0 Literal 0 Literal 188 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 185 Literal 0 Literal 0 Literal 185 Literal 0 Literal 0 Literal 185 Literal 0 Literal 185 Literal 0 Literal 187 Literal 187 Literal 187 Literal 188 Literal 0 Literal 187 Literal 187 Literal 187 Literal 0 Literal 187 Literal 0 Literal 0 Literal 0 Literal 0 Literal 185 Literal 0 Literal 0 Literal 188 Literal 188 Literal 187 Literal 187 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 185 Literal 0 Literal 187 Literal 187 Literal 0 Literal 187 Literal 187 Literal 187 Literal 187 Literal 187 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 187 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 186 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 34 Literal 34 Literal 34 Literal 0 Literal 186 Literal 0 Literal 34 Literal 34 Literal 0 Literal 34 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 187 Literal 0 Literal 0 Literal 187 Literal 0 Literal 0 Literal 187 Literal 0 Literal 187 Literal 0 Literal 34 Literal 34 Literal 34 Literal 34 Literal 34 Literal 0 Literal 0 Literal 186 Literal 0 Literal 0 Literal 0 Literal 227 Literal 227 Literal 227 Literal 187 Literal 0 Literal 227 Literal 227 Literal 227 Literal 0 Literal 227 Literal 186 Literal 186 Literal 0 Literal 184 Literal 0 Literal 187 Literal 0 Literal 0 Literal 0 Literal 227 Literal 227 Literal 0 Literal 0 Literal 184 Literal 0 Literal 0 Literal 0 Literal 0 Literal 227 Literal 227 Literal 0 Literal 227 Literal 227 Literal 227 Literal 227 Literal 227 Literal 0 Literal 34 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 227 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 184 Literal 34 Literal 0 Literal 256 Literal 256 Literal 256 Literal 0 Literal 0 Literal 256 Literal 256 Literal 256 Literal 0 Literal 256 Literal 0 Literal 184 Literal 184 Literal 0 Literal 0 Literal 0 Literal 227 Literal 0 Literal 0 Literal 227 Literal 0 Literal 0 Literal 227 Literal 0 Literal 227 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 256 Literal 256 Literal 256 Literal 256 Literal 256 Literal 0 Literal 0 Literal 0 Literal 0 Literal 227 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 227 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 188 Literal 188 Literal 188 Literal 0 Literal 0 Literal 188 Literal 188 Literal 188 Literal 0 Literal 188 Literal 0 Literal 0 Literal 256 Literal 0 Literal 0 Literal 256 Literal 0 Literal 0 Literal 0 Literal 188 Literal 188 Literal 96 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 188 Literal 188 Literal 0 Literal 188 Literal 188 Literal 188 Literal 188 Literal 188 Literal 256 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 188 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 96 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 188 Literal 0 Literal 0 Literal 188 Literal 0 Literal 0 Literal 188 Literal 0 Literal 188 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 186 Literal 186 Literal 186 Literal 0 Literal 0 Literal 186 Literal 186 Literal 186 Literal 0 Literal 186 Literal 188 Literal 0 Literal 444 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 186 Literal 186 Literal 0 Literal 188 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 186 Literal 186 Literal 0 Literal 186 Literal 186 Literal 186 Literal 186 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 186 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 97 Literal 0 Literal 0 Literal 0 Literal 184 Literal 184 Literal 184 Literal 0 Literal 0 Literal 184 Literal 184 Literal 184 Literal 0 Literal 184 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 186 Literal 0 Literal 0 Literal 186 Literal 184 Literal 184 Literal 186 Literal 0 Literal 186 Literal 0 Literal 0 Literal 0 Literal 0 Literal 184 Literal 184 Literal 0 Literal 184 Literal 184 Literal 184 Literal 184 Literal 0 Literal 0 Literal 0 Literal 0 Literal 186 Literal 0 Literal 0 Literal 0 Literal 184 Literal 0 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 186 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 184 Literal 447 Literal 0 Literal 184 Literal 0 Literal 0 Literal 184 Literal 0 Literal 184 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 184 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 184 Literal 0 Literal 0 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 96 Literal 96 Literal 96 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 515 Literal 0 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 0 Literal 96 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 444 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 444 Literal 96 Literal 0 Literal 0 Literal 96 Literal 515 Literal 0 Literal 96 Literal 96 Literal 0 Literal 96 Literal 0 Literal 96 Literal 0 Literal 522 Literal 0 Literal 96 Literal 0 Literal 0 Literal 0 Literal 0 Literal 96 Literal 0 Literal 0 Literal 96 Literal 0 Literal 515 Literal 0 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 0 Literal 0 Literal 96 Literal 0 Literal 96 Literal 96 Literal 0 Literal 96 Literal 96 Literal 0 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 516 Literal 0 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 0 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 447 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 447 Literal 97 Literal 0 Literal 0 Literal 97 Literal 516 Literal 0 Literal 97 Literal 97 Literal 0 Literal 97 Literal 0 Literal 97 Literal 0 Literal 270 Literal 0 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 97 Literal 0 Literal 0 Literal 97 Literal 0 Literal 516 Literal 0 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 0 Literal 0 Literal 97 Literal 0 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 97 Literal 96 Literal 96 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 522 Literal 0 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 0 Literal 96 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 522 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 522 Literal 96 Literal 0 Literal 0 Literal 96 Literal 518 Literal 0 Literal 96 Literal 96 Literal 0 Literal 96 Literal 0 Literal 96 Literal 0 Literal 271 Literal 0 Literal 96 Literal 0 Literal 0 Literal 0 Literal 0 Literal 96 Literal 0 Literal 0 Literal 96 Literal 0 Literal 522 Literal 0 Literal 0 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 96 Literal 0 Literal 0 Literal 0 Literal 96 Literal 0 Literal 96 Literal 96 Literal 0 Literal 96 Literal 96 Literal 0 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 315 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 0 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 315 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 270 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 270 Literal 97 Literal 0 Literal 0 Literal 97 Literal 519 Literal 0 Literal 97 Literal 97 Literal 0 Literal 97 Literal 0 Literal 97 Literal 0 Literal 0 Literal 0 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 97 Literal 0 Literal 0 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 0 Literal 0 Literal 97 Literal 0 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 540 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 0 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 271 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 271 Literal 97 Literal 0 Literal 0 Literal 97 Literal 0 Literal 0 Literal 97 Literal 97 Literal 0 Literal 97 Literal 0 Literal 97 Literal 0 Literal 0 Literal 0 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 97 Literal 0 Literal 0 Literal 97 Literal 0 Literal 0 Literal 0 Literal 0 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 97 Literal 0 Literal 0 Literal 0 Literal 97 Literal 0 Literal 97 Literal 97 Literal 0 Literal 97 Literal 97 Literal 0 Literal 0 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 0 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 540 Literal 0 Literal 0 Literal 0 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 0 Literal 0 Literal 315 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 0 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 0 Literal 315 Literal 315 Literal 315 Literal 315 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 315 Literal 0 Literal 0 Literal 315 Literal 0 Literal 0 Literal 315 Literal 315 Literal 0 Literal 315 Literal 0 Literal 315 Literal 0 Literal 0 Literal 0 Literal 315 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 315 Literal 0 Literal 0 Literal 0 Literal 0 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 315 Literal 0 Literal 0 Literal 0 Literal 315 Literal 0 Literal 315 Literal 315 Literal 0 Literal 315 Literal 315 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 0 Literal 540 Literal 227 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 0 Literal 226 Literal 0 Literal 14 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 14 Literal 0 Literal 0 Literal 0 Literal 540 Literal 0 Literal 0 Literal 540 Literal 0 Literal 0 Literal 540 Literal 540 Literal 0 Literal 540 Literal 0 Literal 540 Literal 0 Literal 0 Literal 0 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 0 Literal 540 Literal 0 Literal 540 Literal 540 Literal 0 Literal 540 Literal 540 Literal 0 Literal 14 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 0 Literal 540 Literal 540 Literal 0 Literal 0 Literal 0 Literal 540 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 184 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 184 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 229 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 0 Literal 0 Literal 540 Literal 184 Literal 0 Literal 540 Literal 540 Literal 0 Literal 540 Literal 0 Literal 540 Literal 0 Literal 0 Literal 0 Literal 540 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 540 Literal 0 Literal 384 Literal 540 Literal 0 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 540 Literal 0 Literal 384 Literal 0 Literal 540 Literal 0 Literal 540 Literal 540 Literal 0 Literal 540 Literal 540 Literal 0 Literal 4 Literal 5 Literal 6 Literal 0 Literal 8 Literal 0 Literal 0 Literal 0 Literal 9 Literal 10 Literal 0 Literal 0 Literal 0 Literal 11 Literal 0 Literal 12 Literal 13 Literal 14 Literal 15 Literal 16 Literal 17 Literal 18 Literal 0 Literal 0 Literal 81 Literal 0 Literal 19 Literal 20 Literal 21 Literal 22 Literal 23 Literal 24 Literal 25 Literal 0 Literal 0 Literal 26 Literal 0 Literal 0 Literal 0 Literal 384 Literal 0 Literal 89 Literal 28 Literal 384 Literal 0 Literal 31 Literal 32 Literal 33 Literal 0 Literal 34 Literal 35 Literal 36 Literal 37 Literal 38 Literal 39 Literal 0 Literal 40 Literal 41 Literal 42 Literal 43 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 14 Literal 14 Literal 14 Literal 0 Literal 0 Literal 384 Literal 14 Literal 14 Literal 0 Literal 14 Literal 0 Literal 0 Literal 0 Literal 217 Literal 0 Literal 310 Literal 111 Literal 0 Literal 0 Literal 46 Literal 47 Literal 0 Literal 48 Literal 0 Literal 0 Literal 310 Literal 0 Literal 0 Literal 50 Literal 0 Literal 0 Literal 14 Literal 14 Literal 14 Literal 14 Literal 14 Literal 51 Literal 0 Literal 0 Literal 0 Literal 0 Literal 52 Literal 53 Literal 54 Literal 55 Literal 56 Literal 57 Literal 0 Literal 0 Literal 0 Literal 58 Literal 0 Literal 59 Literal 60 Literal 0 Literal 61 Literal 62 Literal 0 Literal 0 Literal 310 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 310 Literal 0 Literal 0 Literal 0 Literal 310 Literal 14 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 184 Literal 184 Literal 184 Literal 0 Literal 14 Literal 0 Literal 184 Literal 184 Literal 0 Literal 184 Literal 310 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 311 Literal 0 Literal 0 Literal 184 Literal 184 Literal 0 Literal 184 Literal 184 Literal 184 Literal 184 Literal 311 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 311 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 184 Literal 384 Literal 384 Literal 384 Literal 0 Literal 311 Literal 0 Literal 384 Literal 384 Literal 311 Literal 384 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 384 Literal 0 Literal 184 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 384 Literal 384 Literal 0 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 311 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 0 Literal 0 Literal 384 Literal 384 Literal 384 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 384 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 384 Literal 274 Literal 384 Literal 0 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 384 Literal 274 Literal 384 Literal 384 Literal 384 Literal 310 Literal 310 Literal 310 Literal 0 Literal 0 Literal 310 Literal 310 Literal 310 Literal 0 Literal 310 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 310 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 310 Literal 310 Literal 274 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 274 Literal 0 Literal 0 Literal 0 Literal 274 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 0 Literal 0 Literal 310 Literal 310 Literal 310 Literal 0 Literal 0 Literal 0 Literal 274 Literal 0 Literal 310 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 310 Literal 0 Literal 310 Literal 456 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 310 Literal 0 Literal 310 Literal 456 Literal 310 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 311 Literal 311 Literal 311 Literal 0 Literal 0 Literal 311 Literal 311 Literal 311 Literal 0 Literal 311 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 311 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 80 Literal 311 Literal 311 Literal 0 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 456 Literal 0 Literal 88 Literal 0 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 0 Literal 0 Literal 311 Literal 311 Literal 311 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 311 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 311 Literal 0 Literal 311 Literal 0 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 311 Literal 264 Literal 311 Literal 0 Literal 311 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 87 Literal 274 Literal 274 Literal 274 Literal 0 Literal 0 Literal 274 Literal 274 Literal 274 Literal 0 Literal 274 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 0 Literal 95 Literal 0 Literal 264 Literal 274 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 274 Literal 274 Literal 0 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 0 Literal 0 Literal 274 Literal 274 Literal 274 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 274 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 274 Literal 0 Literal 274 Literal 271 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 274 Literal 0 Literal 274 Literal 271 Literal 274 Literal 0 Literal 0 Literal 456 Literal 456 Literal 456 Literal 0 Literal 0 Literal 0 Literal 456 Literal 456 Literal 0 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 456 Literal 456 Literal 86 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 271 Literal 0 Literal 94 Literal 0 Literal 271 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 0 Literal 0 Literal 456 Literal 456 Literal 456 Literal 0 Literal 457 Literal 0 Literal 271 Literal 0 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 456 Literal 0 Literal 456 Literal 0 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 456 Literal 250 Literal 456 Literal 0 Literal 456 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 250 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 264 Literal 264 Literal 0 Literal 0 Literal 0 Literal 264 Literal 264 Literal 0 Literal 264 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 252 Literal 250 Literal 264 Literal 264 Literal 0 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 252 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 250 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 0 Literal 252 Literal 264 Literal 264 Literal 264 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 264 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 252 Literal 264 Literal 56 Literal 264 Literal 0 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 264 Literal 56 Literal 264 Literal 0 Literal 264 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 47 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 47 Literal 271 Literal 271 Literal 271 Literal 0 Literal 0 Literal 0 Literal 271 Literal 271 Literal 0 Literal 271 Literal 0 Literal 0 Literal 56 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 271 Literal 271 Literal 0 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 0 Literal 0 Literal 0 Literal 0 Literal 254 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 47 Literal 0 Literal 254 Literal 0 Literal 0 Literal 0 Literal 0 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 0 Literal 0 Literal 271 Literal 271 Literal 271 Literal 0 Literal 0 Literal 0 Literal 255 Literal 0 Literal 271 Literal 0 Literal 0 Literal 0 Literal 0 Literal 252 Literal 0 Literal 271 Literal 255 Literal 271 Literal 0 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 271 Literal 0 Literal 271 Literal 254 Literal 271 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 250 Literal 250 Literal 250 Literal 0 Literal 0 Literal 250 Literal 250 Literal 250 Literal 0 Literal 250 Literal 253 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 250 Literal 250 Literal 0 Literal 0 Literal 0 Literal 0 Literal 255 Literal 0 Literal 0 Literal 250 Literal 250 Literal 0 Literal 250 Literal 250 Literal 250 Literal 250 Literal 250 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 252 Literal 252 Literal 252 Literal 0 Literal 0 Literal 252 Literal 252 Literal 252 Literal 0 Literal 252 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 252 Literal 252 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 252 Literal 252 Literal 0 Literal 252 Literal 252 Literal 252 Literal 252 Literal 252 Literal 250 Literal 0 Literal 0 Literal 250 Literal 0 Literal 250 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 250 Literal 570 Literal 0 Literal 0 Literal 56 Literal 56 Literal 56 Literal 0 Literal 0 Literal 56 Literal 56 Literal 56 Literal 0 Literal 56 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 252 Literal 56 Literal 56 Literal 252 Literal 0 Literal 252 Literal 0 Literal 0 Literal 0 Literal 0 Literal 56 Literal 56 Literal 0 Literal 56 Literal 56 Literal 56 Literal 56 Literal 56 Literal 47 Literal 47 Literal 47 Literal 252 Literal 0 Literal 47 Literal 47 Literal 47 Literal 0 Literal 47 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 47 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 47 Literal 47 Literal 0 Literal 47 Literal 47 Literal 47 Literal 47 Literal 47 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 56 Literal 0 Literal 0 Literal 56 Literal 0 Literal 0 Literal 0 Literal 0 Literal 254 Literal 254 Literal 254 Literal 0 Literal 0 Literal 254 Literal 254 Literal 254 Literal 0 Literal 254 Literal 0 Literal 0 Literal 0 Literal 56 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 47 Literal 0 Literal 0 Literal 254 Literal 254 Literal 254 Literal 254 Literal 254 Literal 0 Literal 255 Literal 255 Literal 255 Literal 0 Literal 0 Literal 255 Literal 255 Literal 255 Literal 0 Literal 255 Literal 0 Literal 407 Literal 47 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0 Literal 0	1
MethodDeclaration Modifier public ReferenceType Object case399_line1507 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "tr!" ReferenceType IRubyObject tr_bang19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject src FormalParameter ReferenceType IRubyObject repl ReturnStatement MethodInvocation MemberReference context MemberReference src MemberReference repl Literal false trTrans19	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "lineno" ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation recv MethodInvocation MethodInvocation ArgsFileData MemberReference currentLineNumber MemberReference recv getDataFrom newFixnum getRuntime	0
MethodDeclaration Modifier public static ReferenceType File createTempFile FormalParameter ReferenceType String prefix FormalParameter ReferenceType String suffix IOException ReturnStatement ClassCreator ReferenceType JRubyFile MethodInvocation File MemberReference prefix MemberReference suffix createTempFile	0
MethodDeclaration Modifier public Annotation Override destroy TryStatement IfStatement BinaryOperation != MemberReference input Literal null StatementExpression MethodInvocation input close IfStatement BinaryOperation != MemberReference inerr Literal null StatementExpression MethodInvocation inerr close IfStatement BinaryOperation != MemberReference output Literal null StatementExpression MethodInvocation output close IfStatement BinaryOperation != MemberReference inputChannel Literal null StatementExpression MethodInvocation inputChannel close IfStatement BinaryOperation != MemberReference inerrChannel Literal null StatementExpression MethodInvocation inerrChannel close IfStatement BinaryOperation != MemberReference Literal null StatementExpression MethodInvocation close SynchronizedStatement This IfStatement BinaryOperation != MemberReference inputPumper Literal null SynchronizedStatement MemberReference inputPumper StatementExpression MethodInvocation inputPumper quit IfStatement BinaryOperation != MemberReference inerrPumper Literal null SynchronizedStatement MemberReference inerrPumper StatementExpression MethodInvocation inerrPumper quit IfStatement BinaryOperation != MemberReference outputPumper Literal null SynchronizedStatement MemberReference outputPumper StatementExpression MethodInvocation outputPumper quit StatementExpression MethodInvocation child destroy CatchClause CatchClauseParameter IOException ioe ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference ioe	1
MethodDeclaration Modifier public static ReferenceType IRubyObject get_proxy_class FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject java_class_object LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType JavaClass VariableDeclarator javaClass IfStatement BinaryOperation instanceof MemberReference java_class_object ReferenceType RubyString BlockStatement StatementExpression Assignment MemberReference javaClass MethodInvocation JavaClass MemberReference recv MemberReference java_class_object for_name = IfStatement BinaryOperation instanceof MemberReference java_class_object ReferenceType JavaClass BlockStatement StatementExpression Assignment MemberReference javaClass Cast ReferenceType JavaClass MemberReference java_class_object = BlockStatement ThrowStatement MethodInvocation runtime MemberReference java_class_object MethodInvocation runtime MethodInvocation getJavaClassClass getJavaSupport newTypeError ReturnStatement MethodInvocation MemberReference runtime MemberReference javaClass getProxyClass	1
MethodDeclaration Modifier public Annotation JRubyMethod ReferenceType RubyString inspect ReturnStatement MethodInvocation MethodInvocation BinaryOperation + Literal "class " MethodInvocation MethodInvocation getName javaClass newString getRuntime	0
MethodDeclaration Modifier public static Annotation JRubyMethod ReferenceType IRubyObject to_java_object FormalParameter ReferenceType IRubyObject recv ReturnStatement Cast ReferenceType JavaObject MethodInvocation recv dataGetStruct	1
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject callback FormalParameter ReferenceType IRubyObject value FormalParameter ReferenceType IRubyObject method FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType Block block ReturnStatement MethodInvocation MemberReference value MemberReference method MemberReference self MemberReference block bmcall	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair alias ElementArrayValue Literal ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv LocalVariableDeclaration ReferenceType ArgsFileData VariableDeclarator data MethodInvocation ArgsFileData MemberReference recv getDataFrom IfStatement MethodInvocation ! data MemberReference context next_argv ThrowStatement MethodInvocation context MethodInvocation Literal "no stream to tell" newArgumentError getRuntime ReturnStatement Cast ReferenceType RubyIO MemberReference data currentFile	1
MethodDeclaration Modifier public assignLocalVariable FormalParameter BasicType int index FormalParameter BasicType boolean expr IfStatement MemberReference expr BlockStatement StatementExpression MethodInvocation method dup StatementExpression MethodInvocation method BinaryOperation + MemberReference baseVariableIndex MemberReference index astore	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 FormalParameter ReferenceType IRubyObject arg2 FormalParameter ReferenceType IRubyObject arg3 FormalParameter ReferenceType IRubyObject arg4 ReturnStatement MethodInvocation body MemberReference context MemberReference arg0 MemberReference arg1 MemberReference arg2 MemberReference arg3 MemberReference arg4 MemberReference binding MemberReference type	0
MethodDeclaration Modifier public static ReferenceType String setShort FormalParameter BasicType short s ReturnStatement MethodInvocation String MemberReference s valueOf	0
MethodDeclaration Modifier public StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation wrapJavaObject	0
MethodDeclaration Modifier public static BasicType int utf8Offset FormalParameter BasicType byte bytes FormalParameter BasicType int p FormalParameter BasicType int end FormalParameter BasicType int n LocalVariableDeclaration BasicType int VariableDeclarator pp MethodInvocation MemberReference bytes MemberReference p MemberReference end MemberReference n utf8Nth ReturnStatement TernaryExpression BinaryOperation == MemberReference pp Literal - 1 BinaryOperation - MemberReference end MemberReference p BinaryOperation - MemberReference pp MemberReference p	0
MethodDeclaration Modifier public ReferenceType Object case409_line1553 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals negateInteger = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "**" Literal "power" ElementValuePair required Literal 1 ReferenceType IRubyObject op_pow FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration BasicType double VariableDeclarator d IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator fix Cast ReferenceType RubyFixnum MemberReference other LocalVariableDeclaration BasicType long VariableDeclarator fixValue MethodInvocation fix getLongValue IfStatement BinaryOperation > BinaryOperation * BinaryOperation * BinaryOperation / BinaryOperation + MethodInvocation value bitLength Literal 7 Literal 8 Literal 4 MethodInvocation Math MemberReference fixValue abs BinaryOperation * Literal 1024 Literal 1024 BlockStatement StatementExpression MethodInvocation MethodInvocation getWarnings MethodInvocation MemberReference ID MAY_BE_TOO_BIG Literal "in a**b, b may be too big" MemberReference fixValue warn getRuntime IfStatement BinaryOperation >= MemberReference fixValue Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime MethodInvocation value Cast BasicType int MemberReference fixValue pow bignorm BlockStatement ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime MethodInvocation Math MethodInvocation This big2dbl Cast BasicType double MemberReference fixValue pow newFloat IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement StatementExpression Assignment MemberReference d Cast ReferenceType RubyBignum MemberReference other = StatementExpression MethodInvocation MethodInvocation getWarnings MethodInvocation MemberReference ID MAY_BE_TOO_BIG Literal "in a**b, b may be too big" MemberReference d warn getRuntime IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement StatementExpression Assignment MemberReference d Cast ReferenceType RubyFloat MemberReference other = BlockStatement ReturnStatement MethodInvocation MemberReference context Literal "**" MemberReference other coerceBin ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime MethodInvocation Math MethodInvocation This big2dbl MemberReference d pow newFloat	1
MethodDeclaration Modifier public compileGetDefinitionBase FormalParameter Modifier final ReferenceType Node node FormalParameter ReferenceType BodyCompiler context SwitchStatement MethodInvocation node getNodeType SwitchStatementCase CLASSVARASGNNODE CLASSVARDECLNODE CONSTDECLNODE DASGNNODE GLOBALASGNNODE LOCALASGNNODE MULTIPLEASGNNODE OPASGNNODE OPELEMENTASGNNODE DVARNODE FALSENODE TRUENODE LOCALVARNODE INSTVARNODE BACKREFNODE SELFNODE VCALLNODE YIELDNODE GLOBALVARNODE CONSTNODE FCALLNODE CLASSVARNODE StatementExpression MethodInvocation MemberReference node MemberReference context compileGetDefinition BreakStatement SwitchStatementCase LocalVariableDeclaration ReferenceType BranchCallback VariableDeclarator reg ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context StatementExpression MethodInvocation MemberReference node MemberReference context compileGetDefinition LocalVariableDeclaration ReferenceType BranchCallback VariableDeclarator out ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context StatementExpression MethodInvocation context MemberReference reg MemberReference out ClassReference ReferenceType String protect	1
MethodDeclaration Modifier public ReferenceType Iterator iterator ReturnStatement ClassCreator ReferenceType BaseIterator MemberReference view	0
MethodDeclaration Modifier public Annotation Override ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType RubyModule clazz FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg0 LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime TryStatement StatementExpression MethodInvocation MemberReference context MemberReference name MemberReference self MemberReference Block NULL_BLOCK MemberReference runtime pre StatementExpression MethodInvocation argsNode MemberReference runtime Literal 1 checkArgCount StatementExpression MethodInvocation argsNode MemberReference context MemberReference runtime MemberReference self MemberReference arg0 MemberReference Block NULL_BLOCK prepare ReturnStatement MethodInvocation body MemberReference runtime MemberReference context MemberReference self MemberReference Block NULL_BLOCK CatchClause CatchClauseParameter rj ReturnStatement MethodInvocation MemberReference context MemberReference rj handleReturn CatchClause CatchClauseParameter JumpException.RedoJump rj ReturnStatement MethodInvocation MemberReference runtime handleRedo StatementExpression MethodInvocation MemberReference runtime MemberReference context MemberReference name post	0
MethodDeclaration Modifier private checkZeroDivisionError FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other IfStatement BinaryOperation && BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BinaryOperation == Cast ReferenceType RubyFloat MemberReference other Literal 0.0d BlockStatement ThrowStatement MethodInvocation context MethodInvocation newZeroDivisionError getRuntime	0
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation whenNode getBodyNode MemberReference context MemberReference expr compile	0
MethodDeclaration Modifier public BasicType boolean canModifyCode LocalVariableDeclaration ReferenceType IR_Method VariableDeclarator m MethodInvocation ReturnStatement TernaryExpression BinaryOperation == MemberReference m Literal null Literal true MethodInvocation m modifiesCode	1
MethodDeclaration Modifier public final ReferenceType IRubyObject invoke FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Function function FormalParameter ReferenceType HeapInvocationBuffer args LocalVariableDeclaration Modifier final BasicType long VariableDeclarator address MethodInvocation invoker MemberReference function MemberReference args invokeAddress ReturnStatement ClassCreator ReferenceType Pointer MemberReference runtime MethodInvocation NativeMemoryIO MemberReference runtime MemberReference address wrap	1
MethodDeclaration Modifier public ReferenceType IRubyObject getOrig ReturnStatement MemberReference self	0
MethodDeclaration Modifier private static BasicType long other2long FormalParameter ReferenceType IRubyObject arg RaiseException IfStatement MethodInvocation arg isNil BlockStatement ThrowStatement MethodInvocation arg MethodInvocation Literal "no implicit conversion from nil to integer" newTypeError getRuntime IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyFloat BlockStatement ReturnStatement MethodInvocation Cast ReferenceType RubyFloat MemberReference arg float2long IfStatement BinaryOperation instanceof MemberReference arg ReferenceType RubyBignum BlockStatement ReturnStatement MethodInvocation RubyBignum Cast ReferenceType RubyBignum MemberReference arg ReturnStatement MethodInvocation arg MethodInvocation getLongValue convertToInteger	0
MethodDeclaration Modifier public ReferenceType IRubyObject FormalParameter ReferenceType Ruby runtime IfStatement MethodInvocation ! staticScope isBackrefLastlineScope BlockStatement ReturnStatement MethodInvocation parent MemberReference runtime ThrowStatement ClassCreator ReferenceType RuntimeException Literal "DummyDynamicScope should never be used for lastline storage"	1
MethodDeclaration Modifier protected ReferenceType String yyExpecting FormalParameter BasicType int state LocalVariableDeclaration BasicType int VariableDeclarator token VariableDeclarator n VariableDeclarator len Literal 0 LocalVariableDeclaration BasicType boolean VariableDeclarator ok ArrayCreator BasicType boolean MemberReference yyNames length IfStatement BinaryOperation != Assignment MemberReference n MemberReference ArraySelector MemberReference state yySindex = Literal 0 ForStatement ForControl Assignment MemberReference token TernaryExpression BinaryOperation < MemberReference n Literal 0 MemberReference - n Literal 0 = BinaryOperation && BinaryOperation < MemberReference token MemberReference yyNames length BinaryOperation < BinaryOperation + MemberReference n MemberReference token MemberReference yyTable length MemberReference ++ token IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference n MemberReference token yyCheck MemberReference token MemberReference ! ArraySelector MemberReference token ok BinaryOperation != MemberReference ArraySelector MemberReference token yyNames Literal null BlockStatement StatementExpression MemberReference ++ len StatementExpression Assignment MemberReference ArraySelector MemberReference token ok Literal true = IfStatement BinaryOperation != Assignment MemberReference n MemberReference ArraySelector MemberReference state yyRindex = Literal 0 ForStatement ForControl Assignment MemberReference token TernaryExpression BinaryOperation < MemberReference n Literal 0 MemberReference - n Literal 0 = BinaryOperation && BinaryOperation < MemberReference token MemberReference yyNames length BinaryOperation < BinaryOperation + MemberReference n MemberReference token MemberReference yyTable length MemberReference ++ token IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MemberReference ArraySelector BinaryOperation + MemberReference n MemberReference token yyCheck MemberReference token MemberReference ! ArraySelector MemberReference token ok BinaryOperation != MemberReference ArraySelector MemberReference token yyNames Literal null BlockStatement StatementExpression MemberReference ++ len StatementExpression Assignment MemberReference ArraySelector MemberReference token ok Literal true = LocalVariableDeclaration ReferenceType String VariableDeclarator result ArrayCreator ReferenceType String MemberReference len ForStatement ForControl Assignment MemberReference n Assignment MemberReference token Literal 0 = = BinaryOperation < MemberReference n MemberReference len MemberReference ++ token IfStatement MemberReference ArraySelector MemberReference token ok StatementExpression Assignment MemberReference ArraySelector MemberReference ++ n result MemberReference ArraySelector MemberReference token yyNames = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "superclass" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject superclass19 FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator superClazz MemberReference superClass IfStatement BinaryOperation == MemberReference superClazz Literal null BlockStatement IfStatement BinaryOperation == MemberReference metaClass MethodInvocation runtime getBasicObject ReturnStatement MethodInvocation runtime getNil ThrowStatement MethodInvocation runtime Literal "uninitialized class" newTypeError WhileStatement BinaryOperation && BinaryOperation != MemberReference superClazz Literal null MethodInvocation superClazz isIncluded StatementExpression Assignment MemberReference superClazz MemberReference superClazz superClass = ReturnStatement TernaryExpression BinaryOperation != MemberReference superClazz Literal null MemberReference superClazz MethodInvocation runtime getNil	1
MethodDeclaration Modifier public BasicType long getInt64 FormalParameter BasicType byte array FormalParameter BasicType int offset ReturnStatement BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation << BinaryOperation & Cast BasicType long MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 0 array Literal 0xff Literal 56 BinaryOperation << BinaryOperation & Cast BasicType long MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 1 array Literal 0xff Literal 48 BinaryOperation << BinaryOperation & Cast BasicType long MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 2 array Literal 0xff Literal 40 BinaryOperation << BinaryOperation & Cast BasicType long MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 3 array Literal 0xff Literal 32 BinaryOperation << BinaryOperation & Cast BasicType long MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 4 array Literal 0xff Literal 24 BinaryOperation << BinaryOperation & Cast BasicType long MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 5 array Literal 0xff Literal 16 BinaryOperation << BinaryOperation & Cast BasicType long MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 6 array Literal 0xff Literal 8 BinaryOperation << BinaryOperation & Cast BasicType long MemberReference ArraySelector BinaryOperation + MemberReference offset Literal 7 array Literal 0xff Literal 0	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "cycle" ReferenceType IRubyObject cycle FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType Block block IfStatement MethodInvocation arg isNil ReturnStatement MethodInvocation MemberReference context MemberReference block cycle IfStatement MethodInvocation ! block isGiven ReturnStatement MethodInvocation MethodInvocation context getRuntime This Literal "cycle" MemberReference arg enumeratorize LocalVariableDeclaration BasicType long VariableDeclarator MethodInvocation RubyNumeric MemberReference arg num2long IfStatement BinaryOperation <= MemberReference Literal 0 ReturnStatement MethodInvocation context MethodInvocation getNil getRuntime ReturnStatement MethodInvocation MemberReference context MemberReference MemberReference block cycleCommon	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "each_byte" ElementValuePair optional Literal 1 ElementValuePair frame Literal true ReferenceType IRubyObject each_byte FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args FormalParameter Modifier final ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference recv MemberReference block each_byte MethodInvocation MethodInvocation context getRuntime MemberReference recv Literal "each_byte" enumeratorize	1
MethodDeclaration Modifier final public static ReferenceType IRubyObject newUnsigned8 FormalParameter ReferenceType Ruby runtime FormalParameter BasicType int value ReturnStatement MethodInvocation runtime TernaryExpression BinaryOperation < MemberReference value Literal 0 Cast BasicType long BinaryOperation + BinaryOperation & MemberReference value Literal 0x7FL Literal 0x80L MemberReference value newFixnum	1
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference callAdapter methodName	0
MethodDeclaration Modifier public compileMatch3 FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration ReferenceType Match3Node VariableDeclarator matchNode Cast ReferenceType Match3Node MemberReference node StatementExpression MethodInvocation MethodInvocation matchNode getReceiverNode MemberReference context Literal true compile StatementExpression MethodInvocation MethodInvocation matchNode getValueNode MemberReference context Literal true compile StatementExpression MethodInvocation context IfStatement MemberReference ! expr StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public ReferenceType String getThreadDumpSignal ReturnStatement MemberReference threadDumpSignal	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement BinaryOperation + BinaryOperation + Literal file: " MethodInvocation getFileName SuperMethodInvocation toString	0
MethodDeclaration Modifier protected ReferenceType InetSocketAddress getRemoteSocket LocalVariableDeclaration ReferenceType Channel VariableDeclarator socketChannel MethodInvocation openFile MethodInvocation getDescriptor MethodInvocation getChannel getMainStream IfStatement BinaryOperation instanceof MemberReference socketChannel ReferenceType SocketChannel BlockStatement ReturnStatement Cast ReferenceType InetSocketAddress Cast ReferenceType SocketChannel MemberReference socketChannel BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object case253_line978 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression MethodInvocation lexer MemberReference LexState EXPR_ENDARG setState ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private final ReferenceType ClosureInfo getClosureInfo FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType CallbackInfo cbInfo LocalVariableDeclaration ReferenceType Object VariableDeclarator info MethodInvocation cbInfo getProviderCallbackInfo IfStatement BinaryOperation && BinaryOperation != MemberReference info Literal null BinaryOperation instanceof MemberReference info ReferenceType ClosureInfo BlockStatement ReturnStatement Cast ReferenceType ClosureInfo MemberReference info StatementExpression MethodInvocation cbInfo Assignment MemberReference info MethodInvocation MemberReference runtime MemberReference cbInfo newClosureInfo = setProviderCallbackInfo ReturnStatement Cast ReferenceType ClosureInfo MemberReference info	1
MethodDeclaration Modifier public ReferenceType IRubyObject fastGetClassVar FormalParameter ReferenceType String internedName AssertStatement BinaryOperation == MemberReference internedName MethodInvocation internedName intern BinaryOperation + MemberReference internedName Literal " is not interned" AssertStatement MethodInvocation IdUtil MemberReference internedName isClassVariable LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator value LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module This DoStatement BinaryOperation != Assignment MemberReference module MethodInvocation module getSuperClass = Literal null BlockStatement IfStatement BinaryOperation != Assignment MemberReference value MethodInvocation module MemberReference internedName fetchClassVariable = Literal null ReturnStatement MemberReference value ThrowStatement MethodInvocation MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + Literal "uninitialized class variable " MemberReference internedName Literal " in " MethodInvocation getName MemberReference internedName newNameError getRuntime	1
MethodDeclaration Modifier public StatementExpression MethodInvocation method MemberReference StandardASMCompiler THREADCONTEXT_INDEX aload StatementExpression MethodInvocation method iconst_1 StatementExpression MethodInvocation Literal "setWithinDefined" MethodInvocation VoidClassReference MethodInvocation ClassReference BasicType boolean params sig invokeThreadContext	0
MethodDeclaration Modifier private BasicType boolean matches FormalParameter ReferenceType ByteList match FormalParameter ReferenceType ByteList buffer FormalParameter BasicType int length IOException LocalVariableDeclaration BasicType int VariableDeclarator c ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference c MethodInvocation read = StatementExpression MethodInvocation buffer MemberReference c append IfStatement BinaryOperation != MethodInvocation match MemberReference i charAt MemberReference c BlockStatement StatementExpression MethodInvocation MemberReference buffer ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "each_index" ElementValuePair frame Literal true ReferenceType IRubyObject each_index FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block ReturnStatement TernaryExpression MethodInvocation block isGiven MethodInvocation MemberReference context MemberReference block eachIndex MethodInvocation MethodInvocation context getRuntime This Literal "each_index" enumeratorize	1
MethodDeclaration Modifier private BasicType boolean overThreshold ReturnStatement BinaryOperation > MemberReference size MemberReference threshold	0
MethodDeclaration Modifier public static ReferenceType RubyNumeric FormalParameter ReferenceType Ruby runtime FormalParameter BasicType long val ReturnStatement MethodInvocation RubyFixnum MemberReference runtime MemberReference val newFixnum	0
MethodDeclaration Modifier public ReferenceType RubyModule getJavaArrayUtilitiesModule LocalVariableDeclaration ReferenceType RubyModule VariableDeclarator module IfStatement BinaryOperation != Assignment MemberReference module MemberReference javaArrayUtilitiesModule = Literal null ReturnStatement MemberReference module ReturnStatement Assignment MemberReference javaArrayUtilitiesModule MethodInvocation runtime Literal "JavaArrayUtilities" fastGetModule =	1
MethodDeclaration Modifier public final Annotation Deprecated ReferenceType RubyString strDup ReturnStatement MethodInvocation MethodInvocation getRuntime MethodInvocation getMetaClass strDup	1
MethodDeclaration Modifier final ReferenceType CallbackMemoryIO newClosure FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Type returnType FormalParameter ReferenceType Type parameterTypes FormalParameter ReferenceType Object proc FormalParameter ReferenceType CallingConvention convention LocalVariableDeclaration ReferenceType ClosureInfo VariableDeclarator info ClassCreator ReferenceType ClosureInfo MemberReference runtime MemberReference returnType MemberReference parameterTypes MemberReference convention LocalVariableDeclaration Modifier final ReferenceType CallbackProxy VariableDeclarator cbProxy ClassCreator ReferenceType CallbackProxy MemberReference runtime MemberReference info MemberReference proc LocalVariableDeclaration Modifier final ReferenceType Closure ReferenceType Handle VariableDeclarator handle MethodInvocation ClosureManager MethodInvocation MemberReference cbProxy MemberReference info ffiReturnType MemberReference info ffiParameterTypes MemberReference info convention newClosure getInstance ReturnStatement ClassCreator ReferenceType CallbackMemoryIO MemberReference runtime MemberReference handle	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "success?" ReferenceType IRubyObject success_p IfStatement MethodInvocation status isNil ReturnStatement MethodInvocation MethodInvocation getTrue getRuntime IfStatement MethodInvocation status MethodInvocation RubyFixnum MethodInvocation getRuntime zero equals ReturnStatement MethodInvocation MethodInvocation getTrue getRuntime ReturnStatement MethodInvocation MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public prepareLoadSearch FormalParameter Modifier final ReferenceType String file IfStatement BinaryOperation > MethodInvocation file Literal '.' lastIndexOf MethodInvocation file Literal '/' lastIndexOf BlockStatement LocalVariableDeclaration ReferenceType Matcher VariableDeclarator matcher Literal null IfStatement Assignment MemberReference matcher MethodInvocation sourcePattern MemberReference file matcher = BlockStatement StatementExpression Assignment MemberReference suffixType MemberReference SuffixType Source = StatementExpression Assignment MemberReference searchFile MethodInvocation file Literal 0 MethodInvocation matcher start substring = BlockStatement StatementExpression Assignment MemberReference suffixType MemberReference SuffixType Neither = StatementExpression Assignment MemberReference searchFile MemberReference file = BlockStatement StatementExpression Assignment MemberReference suffixType MemberReference SuffixType Neither = StatementExpression Assignment MemberReference searchFile MemberReference file =	1
MethodDeclaration Modifier public ReferenceType ISourcePosition getPosition ReturnStatement MethodInvocation positionFactory Literal null getPosition	0
MethodDeclaration Modifier public synchronized static Annotation Deprecated BasicType int getIndex FormalParameter ReferenceType String methodName LocalVariableDeclaration ReferenceType Integer VariableDeclarator index MethodInvocation NUMBERS MemberReference methodName get IfStatement BinaryOperation == MemberReference index Literal null BlockStatement StatementExpression Assignment MemberReference index ClassCreator ReferenceType Integer MethodInvocation size = StatementExpression MethodInvocation NUMBERS MemberReference methodName MemberReference index put StatementExpression MethodInvocation MemberReference methodName add ReturnStatement MemberReference index	1
MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context consumeCurrentValue IfStatement BinaryOperation != MethodInvocation getVarNode Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference ReferenceType LambdaNode BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator required MethodInvocation argsNode getRequiredArgsCount LocalVariableDeclaration Modifier final BasicType int VariableDeclarator opt MethodInvocation argsNode getOptionalArgsCount LocalVariableDeclaration Modifier final BasicType int VariableDeclarator rest MethodInvocation argsNode getRestArg StatementExpression MethodInvocation context MethodInvocation MemberReference required MemberReference opt MemberReference rest checkMethodArity getVariableCompiler StatementExpression MethodInvocation MemberReference argsNode MemberReference context Literal true compileMethodArgs BlockStatement StatementExpression MethodInvocation MemberReference argsNode MemberReference context Literal true compileMethodArgs	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType ISourcePosition position IfStatement MemberReference ! RubyInstanceConfig POSITIONLESS_COMPILE_ENABLED BlockStatement StatementExpression MethodInvocation loadThreadContext StatementExpression MethodInvocation method MethodInvocation position getFile ldc StatementExpression MethodInvocation Literal MethodInvocation VoidClassReference MethodInvocation ClassReference ReferenceType String params sig invokeThreadContext	0
MethodDeclaration Modifier public ReferenceType Object case57_line509 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 4 MemberReference yyTop yyVals Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 2 MemberReference yyTop yyVals Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType IterNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_call = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier private final ReferenceType RubyHashEntry internalCopyTable FormalParameter ReferenceType RubyHashEntry destHead LocalVariableDeclaration ReferenceType RubyHashEntry VariableDeclarator newTable ArrayCreator ReferenceType RubyHashEntry MemberReference table length ForStatement ForControl VariableDeclaration ReferenceType RubyHashEntry VariableDeclarator entry MemberReference head nextAdded BinaryOperation != MemberReference entry MemberReference head Assignment MemberReference entry MemberReference entry nextAdded = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation MemberReference entry hash MemberReference table length bucketIndex StatementExpression Assignment MemberReference ArraySelector MemberReference i newTable ClassCreator ReferenceType RubyHashEntry MemberReference entry hash MemberReference entry key MemberReference entry value MemberReference ArraySelector MemberReference i newTable MemberReference destHead = ReturnStatement MemberReference newTable	1
MethodDeclaration Modifier public static ReferenceType IRubyObject pack_sockaddr_in FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter BasicType int iport FormalParameter ReferenceType String host LocalVariableDeclaration ReferenceType ByteArrayOutputStream VariableDeclarator bufS ClassCreator ReferenceType ByteArrayOutputStream TryStatement LocalVariableDeclaration ReferenceType DataOutputStream VariableDeclarator ds ClassCreator ReferenceType DataOutputStream MemberReference bufS IfStatement MemberReference Platform IS_BSD BlockStatement StatementExpression MethodInvocation ds Literal 16 write StatementExpression MethodInvocation ds Literal 2 write BlockStatement StatementExpression MethodInvocation ds Literal 2 write StatementExpression MethodInvocation ds Literal 0 write StatementExpression MethodInvocation ds BinaryOperation >> MemberReference iport Literal 8 write StatementExpression MethodInvocation ds MemberReference iport write TryStatement IfStatement BinaryOperation && BinaryOperation != MemberReference host Literal null Literal MethodInvocation MemberReference host equals "" BlockStatement StatementExpression MethodInvocation ds Literal 0 writeInt BlockStatement LocalVariableDeclaration ReferenceType InetAddress VariableDeclarator addrs MethodInvocation InetAddress MemberReference host getAllByName LocalVariableDeclaration BasicType byte VariableDeclarator addr MemberReference ArraySelector Literal 0 MethodInvocation getAddress addrs StatementExpression MethodInvocation ds MemberReference addr Literal 0 MemberReference addr length write CatchClause CatchClauseParameter UnknownHostException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "getaddrinfo: No address with nodename" sockerr StatementExpression MethodInvocation ds Literal 0 writeInt StatementExpression MethodInvocation ds Literal 0 writeInt CatchClause CatchClauseParameter IOException e ThrowStatement MethodInvocation MethodInvocation context getRuntime Literal "pack_sockaddr_in: internal error" sockerr ReturnStatement MethodInvocation context MethodInvocation ClassCreator ReferenceType ByteList MethodInvocation bufS toByteArray Literal false newString getRuntime	1
MethodDeclaration Modifier public buildSpecificArityArguments FormalParameter ReferenceType List TypeArgument ReferenceType Operand args FormalParameter ReferenceType Node node FormalParameter ReferenceType IR_Scope s IfStatement BinaryOperation == MethodInvocation node getNodeType MemberReference NodeType ARRAYNODE BlockStatement LocalVariableDeclaration ReferenceType ArrayNode VariableDeclarator arrayNode Cast ReferenceType ArrayNode MemberReference node IfStatement MethodInvocation arrayNode isLightweight BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Node VariableDeclarator n MethodInvocation arrayNode childNodes StatementExpression MethodInvocation args MethodInvocation MemberReference n MemberReference s build add BlockStatement StatementExpression MethodInvocation args MethodInvocation MemberReference arrayNode MemberReference s build add BlockStatement StatementExpression MethodInvocation args MethodInvocation MemberReference node MemberReference s build add	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "zero?" ReferenceType IRubyObject zero_p ReturnStatement MethodInvocation MethodInvocation MethodInvocation isZero newBoolean getRuntime	1
MethodDeclaration Modifier final public static BasicType int int32Value FormalParameter ReferenceType IRubyObject parameter LocalVariableDeclaration Modifier final BasicType long VariableDeclarator value MethodInvocation MemberReference parameter longValue IfStatement BinaryOperation || BinaryOperation < MemberReference value MemberReference Integer MIN_VALUE BinaryOperation > MemberReference value Literal 0xffffffffL BlockStatement ThrowStatement MethodInvocation parameter MethodInvocation BinaryOperation + BinaryOperation + Literal "Value " MemberReference value Literal " outside range" newRangeError getRuntime ReturnStatement Cast BasicType int MemberReference value	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "*" ElementValuePair required Literal 1 ReferenceType IRubyObject op_mul FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFixnum BlockStatement LocalVariableDeclaration ReferenceType BigInteger VariableDeclarator result MethodInvocation value MethodInvocation Cast ReferenceType RubyFixnum MemberReference other fix2big multiply ReturnStatement TernaryExpression BinaryOperation == MethodInvocation result signum Literal 0 MethodInvocation RubyFixnum MemberReference runtime zero ClassCreator ReferenceType RubyBignum MemberReference runtime MemberReference result IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyBignum BlockStatement LocalVariableDeclaration ReferenceType BigInteger VariableDeclarator result MethodInvocation value Cast ReferenceType RubyBignum MemberReference other multiply ReturnStatement TernaryExpression BinaryOperation == MethodInvocation result signum Literal 0 MethodInvocation RubyFixnum MemberReference runtime zero ClassCreator ReferenceType RubyBignum MemberReference runtime MemberReference result IfStatement BinaryOperation instanceof MemberReference other ReferenceType RubyFloat BlockStatement ReturnStatement MethodInvocation RubyFloat MethodInvocation getRuntime BinaryOperation * MethodInvocation This big2dbl Cast ReferenceType RubyFloat MemberReference other newFloat ReturnStatement MethodInvocation MemberReference context Literal "*" MemberReference other coerceBin	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "rstrip" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation context getRuntime strDup StatementExpression MethodInvocation str MemberReference context rstrip_bang19 ReturnStatement MemberReference str	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "squeeze" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject squeeze19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg LocalVariableDeclaration ReferenceType RubyString VariableDeclarator str MethodInvocation MethodInvocation context getRuntime strDup StatementExpression MethodInvocation str MemberReference context MemberReference arg squeeze_bang19 ReturnStatement MemberReference str	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair required Literal 2 ElementValuePair meta Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject from FormalParameter ReferenceType IRubyObject to LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator fromStr MethodInvocation MemberReference context MemberReference from get_path LocalVariableDeclaration ReferenceType RubyString VariableDeclarator toStr MethodInvocation MemberReference context MemberReference to get_path LocalVariableDeclaration ReferenceType String VariableDeclarator tovalue MethodInvocation toStr getUnicodeValue StatementExpression Assignment MemberReference tovalue MethodInvocation JRubyFile MethodInvocation getAbsolutePath MethodInvocation runtime getCurrentDirectory MemberReference tovalue create = TryStatement IfStatement BinaryOperation == MethodInvocation runtime MethodInvocation MethodInvocation fromStr getUnicodeValue MemberReference tovalue getPosix Literal - 1 BlockStatement ThrowStatement MethodInvocation runtime BinaryOperation + BinaryOperation + BinaryOperation + Literal "File exists - " MemberReference fromStr Literal " or " MemberReference toStr newErrnoEEXISTError CatchClause CatchClauseParameter java.lang.UnsatisfiedLinkError ule ThrowStatement MethodInvocation runtime Literal "symlink() function is unimplemented on this machine" newNotImplementedError ReturnStatement MethodInvocation runtime Literal 0 newFixnum	1
MethodDeclaration Modifier public static ReferenceType Block createMethodBlock FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType DynamicScope FormalParameter ReferenceType MethodBlock body LocalVariableDeclaration ReferenceType Binding VariableDeclarator binding MethodInvocation context MemberReference self MemberReference currentBinding ReturnStatement ClassCreator ReferenceType Block MemberReference body MemberReference binding	0
MethodDeclaration Modifier public BasicType int size ReturnStatement MemberReference count	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "instance_of?" ElementValuePair required Literal 1 ReferenceType RubyBoolean instance_of_p FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject type IfStatement BinaryOperation == MethodInvocation type MemberReference type BlockStatement ReturnStatement MethodInvocation context MethodInvocation getTrue getRuntime IfStatement BinaryOperation instanceof MemberReference type ReferenceType RubyModule BlockStatement ThrowStatement MethodInvocation context MethodInvocation Literal "class or module required" newTypeError getRuntime BlockStatement ReturnStatement MethodInvocation context MethodInvocation getFalse getRuntime	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "set_dictionary" ElementValuePair required Literal 1 ElementValuePair backtrace Literal true ReferenceType IRubyObject set_dictionary FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject arg Exception TryStatement ReturnStatement MethodInvocation MemberReference arg set_dictionary CatchClause CatchClauseParameter IllegalArgumentException iae LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator errorClass MethodInvocation runtime MethodInvocation Literal "StreamError" fastGetClass Literal "Zlib" fastGetModule ThrowStatement ClassCreator ReferenceType RaiseException MethodInvocation RubyException MemberReference runtime MemberReference errorClass MethodInvocation iae getMessage newException Literal true	1
MethodDeclaration Modifier public ReferenceType RubyIO each_line FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation context getRuntime LocalVariableDeclaration ReferenceType ByteList VariableDeclarator separator MethodInvocation MemberReference runtime MemberReference args ForStatement ForControl VariableDeclaration ReferenceType IRubyObject VariableDeclarator line MethodInvocation MemberReference runtime MemberReference separator getline MethodInvocation ! line isNil Assignment MemberReference line MethodInvocation MemberReference runtime MemberReference separator getline = BlockStatement StatementExpression MethodInvocation block MemberReference context MemberReference line yield ReturnStatement This	1
MethodDeclaration Modifier public Annotation Override assign FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject value1 FormalParameter ReferenceType Block block StatementExpression MethodInvocation parameter1 MemberReference runtime MemberReference context MemberReference self MemberReference value1 MemberReference block Literal false assign StatementExpression MethodInvocation parameter2 MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime getNil MemberReference block Literal false assign StatementExpression MethodInvocation parameter3 MemberReference runtime MemberReference context MemberReference self MethodInvocation runtime getNil MemberReference block Literal false assign	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType IRubyObject ReturnStatement MethodInvocation MethodInvocation MethodInvocation internalAdler newFixnum getRuntime	0
MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType CFG_Edge FormalParameter ReferenceType BasicBlock bb ReturnStatement MethodInvocation MemberReference bb	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "lstat" ElementValuePair required Literal 1 ElementValuePair meta Literal true ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject filename LocalVariableDeclaration ReferenceType String VariableDeclarator f MethodInvocation MethodInvocation getUnicodeValue MemberReference context MemberReference filename get_path IfStatement BinaryOperation && MethodInvocation f Literal "file:" startsWith BinaryOperation != MethodInvocation f Literal '!' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference f MethodInvocation f Literal 5 MethodInvocation f Literal "!" indexOf substring = ReturnStatement MethodInvocation context MethodInvocation MemberReference f Literal true newFileStat getRuntime	1
MethodDeclaration Modifier public ReferenceType Operand FormalParameter ReferenceType Map TypeArgument ReferenceType Operand TypeArgument ReferenceType Operand valueMap StatementExpression Assignment MemberReference MethodInvocation MemberReference valueMap = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType IRubyObject rindex FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject args SwitchStatement MemberReference args length SwitchStatementCase Literal 1 ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args rindex SwitchStatementCase Literal 2 ReturnStatement MethodInvocation MemberReference context MemberReference ArraySelector Literal 0 args MemberReference ArraySelector Literal 1 args rindex SwitchStatementCase StatementExpression MethodInvocation Arity MethodInvocation context getRuntime MemberReference args length Literal 1 Literal 2 raiseArgumentError ReturnStatement Literal null	1
MethodDeclaration Modifier public load FormalParameter ReferenceType Ruby runtime FormalParameter BasicType boolean wrap IOException StatementExpression MethodInvocation RubyKernel MethodInvocation runtime getKernel MethodInvocation runtime Literal newString MemberReference Block NULL_BLOCK require LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator delegatorClass Cast ReferenceType RubyClass MethodInvocation runtime Literal getClassFromPath LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator weakrefClass MethodInvocation runtime Literal MemberReference delegatorClass MemberReference defineClass StatementExpression MethodInvocation weakrefClass ClassReference ReferenceType WeakRef defineAnnotatedMethods StatementExpression MethodInvocation runtime Literal "RefError" MethodInvocation runtime getStandardError MethodInvocation runtime MethodInvocation getAllocator getStandardError defineClass	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name ElementArrayValue Literal "to_s" Literal "to_string" ReferenceType RubyString to_string ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation toString accessibleObject newString getRuntime	1
MethodDeclaration Modifier public ReferenceType IRubyObject convert FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType Object object IfStatement BinaryOperation == MemberReference object Literal null ReturnStatement MethodInvocation runtime getNil ReturnStatement MethodInvocation RubyString MemberReference runtime Cast ReferenceType ByteList MemberReference object newString	1
MethodDeclaration Modifier public Annotation Override ReferenceType ByteList readLineBytes IOException LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator c MethodInvocation read BinaryOperation && BinaryOperation != MemberReference c Literal '\n' BinaryOperation != MemberReference c MemberReference RubyYaccLexer EOF Assignment MemberReference c MethodInvocation read = BlockStatement StatementExpression MemberReference ++ count ReturnStatement ClassCreator ReferenceType ByteList MemberReference bytes BinaryOperation - BinaryOperation - MemberReference index MemberReference count Literal 1 MemberReference count Literal false	0
MethodDeclaration Modifier public static ReferenceType IRubyObject invoke FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject arg FormalParameter ReferenceType CallType callType FormalParameter ReferenceType Block block ReturnStatement MethodInvocation self MethodInvocation MemberReference context MemberReference self MemberReference name MemberReference arg MemberReference callType MemberReference block invoke getMetaClass	0
MethodDeclaration Modifier public ReferenceType ChainedChildBodyCompiler FormalParameter ReferenceType String methodName StatementExpression MethodInvocation method MemberReference StandardASMCompiler THIS aload ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i Literal 4 MemberReference ++ i BlockStatement StatementExpression MethodInvocation method MemberReference i aload StatementExpression Assignment MemberReference methodName BinaryOperation + BinaryOperation + MemberReference methodName Literal "_" MethodInvocation script = StatementExpression MethodInvocation method MethodInvocation script getClassname MemberReference methodName MethodInvocation getSignature invokestatic LocalVariableDeclaration ReferenceType ChainedChildBodyCompiler19 VariableDeclarator methodCompiler ClassCreator ReferenceType ChainedChildBodyCompiler19 MemberReference script MemberReference methodName MemberReference inspector MemberReference scope This StatementExpression MethodInvocation methodCompiler ReturnStatement MemberReference methodCompiler	0
MethodDeclaration Modifier public ReferenceType Object case45_line467 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType BreakNode MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition MethodInvocation support Cast ReferenceType Node MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals MethodInvocation Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals getPosition ret_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public ReferenceType IRubyObject call FormalParameter ReferenceType ThreadContext ctx FormalParameter ReferenceType IRubyObject largs FormalParameter ReferenceType Block blk LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator larg MethodInvocation MemberReference runtime MemberReference largs checkArgs IfStatement MethodInvocation larg MemberReference cond equals ThrowStatement MemberReference JumpException SPECIAL_JUMP StatementExpression MemberReference ++ ArraySelector Literal 0 result ReturnStatement MethodInvocation runtime getNil	1
MethodDeclaration Modifier public ReferenceType RubyString newString ReturnStatement MethodInvocation RubyString This ClassCreator ReferenceType ByteList newString	0
MethodDeclaration Modifier public test_to_s StatementExpression MethodInvocation MethodInvocation rubyObject MethodInvocation Literal "#<Object:0x" startsWith toString assertTrue	1
MethodDeclaration Modifier public ReferenceType IRubyObject execute FormalParameter ReferenceType IRubyObject self FormalParameter ReferenceType IRubyObject args FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType String VariableDeclarator name MemberReference ArraySelector Literal 0 MethodInvocation asJavaString args LocalVariableDeclaration ReferenceType DynamicMethod VariableDeclarator method MethodInvocation self MethodInvocation MemberReference name searchMethod getMetaClass LocalVariableDeclaration BasicType int VariableDeclarator v MethodInvocation method MethodInvocation getValue getArity LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator newArgs ArrayCreator ReferenceType IRubyObject BinaryOperation - MemberReference args length Literal 1 StatementExpression MethodInvocation System MemberReference args Literal 1 MemberReference newArgs Literal 0 MemberReference newArgs length arraycopy IfStatement BinaryOperation || BinaryOperation < MemberReference v Literal 0 BinaryOperation == MemberReference v MemberReference newArgs length BlockStatement ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation self MethodInvocation getCurrentContext getRuntime MemberReference self MemberReference name MemberReference newArgs MemberReference block invoke BlockStatement LocalVariableDeclaration ReferenceType RubyClass VariableDeclarator superClass MethodInvocation self MethodInvocation getSuperClass getMetaClass ReturnStatement MethodInvocation RuntimeHelpers MethodInvocation self MethodInvocation getCurrentContext getRuntime MemberReference superClass MemberReference self MemberReference name MemberReference newArgs MemberReference block invokeAs	0
MethodDeclaration Modifier public BasicType boolean evaluateAtStart ReturnStatement MemberReference evaluateAtStart	0
MethodDeclaration Modifier private final static BasicType int D_ENCRYPT FormalParameter BasicType int L FormalParameter BasicType int R FormalParameter BasicType int S FormalParameter BasicType int E0 FormalParameter BasicType int E1 FormalParameter BasicType int s LocalVariableDeclaration BasicType int VariableDeclarator t LocalVariableDeclaration BasicType int VariableDeclarator u LocalVariableDeclaration BasicType int VariableDeclarator v StatementExpression Assignment MemberReference v BinaryOperation ^ MemberReference R BinaryOperation >>> MemberReference R Literal 16 = StatementExpression Assignment MemberReference u BinaryOperation & MemberReference v MemberReference E0 = StatementExpression Assignment MemberReference v BinaryOperation & MemberReference v MemberReference E1 = StatementExpression Assignment MemberReference u BinaryOperation ^ BinaryOperation ^ BinaryOperation ^ MemberReference u BinaryOperation << MemberReference u Literal 16 MemberReference R MemberReference ArraySelector MemberReference S s = StatementExpression Assignment MemberReference t BinaryOperation ^ BinaryOperation ^ BinaryOperation ^ MemberReference v BinaryOperation << MemberReference v Literal 16 MemberReference R MemberReference ArraySelector BinaryOperation + MemberReference S Literal 1 s = StatementExpression Assignment MemberReference t BinaryOperation | BinaryOperation >>> MemberReference t Literal 4 BinaryOperation << MemberReference t Literal 28 = StatementExpression Assignment MemberReference L BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation | BinaryOperation | MemberReference ArraySelector Literal 1 ArraySelector BinaryOperation & MemberReference t Literal 63 SPtrans MemberReference ArraySelector Literal 3 ArraySelector BinaryOperation & BinaryOperation >>> MemberReference t Literal 8 Literal 63 SPtrans MemberReference ArraySelector Literal 5 ArraySelector BinaryOperation & BinaryOperation >>> MemberReference t Literal 16 Literal 63 SPtrans MemberReference ArraySelector Literal 7 ArraySelector BinaryOperation & BinaryOperation >>> MemberReference t Literal 24 Literal 63 SPtrans MemberReference ArraySelector Literal 0 ArraySelector BinaryOperation & MemberReference u Literal 63 SPtrans MemberReference ArraySelector Literal 2 ArraySelector BinaryOperation & BinaryOperation >>> MemberReference u Literal 8 Literal 63 SPtrans MemberReference ArraySelector Literal 4 ArraySelector BinaryOperation & BinaryOperation >>> MemberReference u Literal 16 Literal 63 SPtrans MemberReference ArraySelector Literal 6 ArraySelector BinaryOperation & BinaryOperation >>> MemberReference u Literal 24 Literal 63 SPtrans ^= ReturnStatement MemberReference L	1
MethodDeclaration Modifier private ReferenceType RubyBigDecimal handleMinusSpecialValues FormalParameter ReferenceType RubyBigDecimal val IfStatement BinaryOperation || MethodInvocation isNaN MethodInvocation val isNaN BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime newNaN IfStatement BinaryOperation > BinaryOperation * MemberReference infinitySign MemberReference val infinitySign Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime newNaN IfStatement BinaryOperation < BinaryOperation * MemberReference infinitySign MemberReference val infinitySign Literal 0 BlockStatement ReturnStatement This IfStatement BinaryOperation == BinaryOperation * MemberReference infinitySign MemberReference val infinitySign Literal 0 BlockStatement IfStatement MethodInvocation isInfinity BlockStatement ReturnStatement This IfStatement MethodInvocation val isInfinity BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime BinaryOperation * MemberReference val infinitySign Literal - 1 newInfinity LocalVariableDeclaration BasicType int VariableDeclarator sign BinaryOperation + MemberReference infinitySign MemberReference val infinitySign IfStatement BinaryOperation != MemberReference sign Literal 0 BlockStatement ReturnStatement MethodInvocation MethodInvocation getRuntime MemberReference sign newInfinity ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Object case450_line1719 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal ClassCreator ReferenceType Token Literal MemberReference Tokens kSELF Cast ReferenceType Token MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "initialize" ElementValuePair frame Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject fileNumber FormalParameter ReferenceType IRubyObject modeValue FormalParameter ReferenceType IRubyObject options FormalParameter ReferenceType Block unusedBlock LocalVariableDeclaration BasicType int VariableDeclarator fileno MethodInvocation RubyNumeric MemberReference fileNumber fix2int LocalVariableDeclaration ReferenceType ModeFlags VariableDeclarator modes MethodInvocation MemberReference context MemberReference modeValue parseModes19 StatementExpression Assignment MemberReference modes MethodInvocation MemberReference context MemberReference options MemberReference modes parseOptions = ReturnStatement MethodInvocation MemberReference fileno MemberReference modes initializeCommon19	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType List TypeArgument ReferenceType Variable l StatementExpression MethodInvocation _refName MemberReference l	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Callback getSingletonMethod FormalParameter ReferenceType String method FormalParameter ReferenceType Class arg1 LocalVariableDeclaration ReferenceType String VariableDeclarator mname BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation type getName Literal "Callback$" MemberReference method Literal "_S1" LocalVariableDeclaration ReferenceType String VariableDeclarator mnamePath BinaryOperation + BinaryOperation + BinaryOperation + MemberReference typePath Literal "Callback$" MemberReference method Literal "_S1" SynchronizedStatement MethodInvocation runtime getJRubyClassLoader LocalVariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation MemberReference mname tryClass TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator descriptor ArrayCreator ReferenceType Class ArrayInitializer MemberReference arg1 IfStatement BinaryOperation == MemberReference c Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator signature ArrayCreator ReferenceType Class ArrayInitializer MemberReference RubyKernel IRUBY_OBJECT MemberReference arg1 ClassReference ReferenceType Block LocalVariableDeclaration ReferenceType Class VariableDeclarator ret MethodInvocation MemberReference method MemberReference signature getReturnClass LocalVariableDeclaration ReferenceType ClassWriter VariableDeclarator cw MethodInvocation MemberReference mnamePath createCtor LocalVariableDeclaration ReferenceType MethodVisitor VariableDeclarator mv MethodInvocation MemberReference cw startCallS StatementExpression MethodInvocation MemberReference mv MemberReference METHOD_ARGS_INDEX Literal 1 MemberReference descriptor loadArguments StatementExpression MethodInvocation mv MemberReference ALOAD Literal 3 visitVarInsn StatementExpression MethodInvocation mv MemberReference INVOKESTATIC MemberReference typePath MemberReference method MethodInvocation MemberReference ret MemberReference signature sig visitMethodInsn StatementExpression MethodInvocation mv MemberReference ARETURN visitInsn StatementExpression MethodInvocation mv Literal 3 Literal 3 visitMaxs StatementExpression Assignment MemberReference c MethodInvocation MemberReference cw MemberReference mv MemberReference mname endCall = LocalVariableDeclaration ReferenceType InvocationCallback VariableDeclarator ic Cast ReferenceType InvocationCallback MethodInvocation c newInstance StatementExpression MethodInvocation ic MethodInvocation Arity singleArgument setArity StatementExpression MethodInvocation ic MemberReference descriptor setArgumentTypes StatementExpression MethodInvocation ic MemberReference method setJavaName StatementExpression MethodInvocation ic Literal true setSingleton ReturnStatement MemberReference ic CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter Exception e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation e getMessage	1
MethodDeclaration Modifier public final ReferenceType CompiledBlockCallback FormalParameter ReferenceType Ruby runtime FormalParameter ReferenceType String method ReturnStatement MethodInvocation runtimeCache This MemberReference runtime Literal 7 MemberReference method	0
MethodDeclaration Modifier public WhileStatement BinaryOperation && BinaryOperation < MemberReference argumentIndex MemberReference arguments length MethodInvocation MemberReference ArraySelector MemberReference argumentIndex arguments isInterpreterArgument BlockStatement StatementExpression MethodInvocation processArgument StatementExpression MemberReference ++ argumentIndex IfStatement BinaryOperation && MemberReference ! hasInlineScript BinaryOperation == MemberReference scriptFileName Literal null BlockStatement IfStatement BinaryOperation < MemberReference argumentIndex MemberReference arguments length BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference argumentIndex arguments setScriptFileName StatementExpression MemberReference ++ argumentIndex IfStatement MemberReference processArgv StatementExpression MethodInvocation processArgv	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair required Literal 1 ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject id2ref FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject id LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation id getRuntime IfStatement BinaryOperation instanceof MemberReference id ReferenceType RubyFixnum BlockStatement ThrowStatement MethodInvocation recv MethodInvocation MemberReference id MethodInvocation recv MethodInvocation getRuntime newTypeError getRuntime LocalVariableDeclaration ReferenceType RubyFixnum VariableDeclarator idFixnum Cast ReferenceType RubyFixnum MemberReference id LocalVariableDeclaration BasicType long VariableDeclarator longId MethodInvocation idFixnum getLongValue IfStatement BinaryOperation == MemberReference longId Literal 0 BlockStatement ReturnStatement MethodInvocation runtime getFalse IfStatement BinaryOperation == MemberReference longId Literal 2 BlockStatement ReturnStatement MethodInvocation runtime getTrue IfStatement BinaryOperation == MemberReference longId Literal 4 BlockStatement ReturnStatement MethodInvocation runtime getNil IfStatement BinaryOperation != BinaryOperation % MemberReference longId Literal 2 Literal 0 BlockStatement ReturnStatement MethodInvocation runtime BinaryOperation / BinaryOperation - MemberReference longId Literal 1 Literal 2 newFixnum BlockStatement LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator object MethodInvocation runtime MethodInvocation MemberReference longId id2ref getObjectSpace IfStatement BinaryOperation == MemberReference object Literal null BlockStatement ReturnStatement MethodInvocation runtime getNil ReturnStatement MemberReference object	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ReferenceType RubyFixnum hash ReturnStatement MethodInvocation MethodInvocation MethodInvocation value hashCode newFixnum getRuntime	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "open" ElementValuePair required Literal 1 ElementValuePair frame Literal true ElementValuePair meta Literal true ReferenceType IRubyObject open FormalParameter Modifier final ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject filename FormalParameter ReferenceType Block block IOException LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator io MethodInvocation RuntimeHelpers MemberReference context MethodInvocation runtime getFile Literal "open" MemberReference filename MethodInvocation runtime Literal newString invoke LocalVariableDeclaration ReferenceType VariableDeclarator gzio MethodInvocation MemberReference recv ArrayCreator ReferenceType IRubyObject ArrayInitializer MemberReference io MemberReference block newInstance ReturnStatement MethodInvocation RubyGzipFile MemberReference context MemberReference gzio MemberReference block wrapBlock	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType ModeFlags superset IfStatement BinaryOperation || BinaryOperation || BinaryOperation && MethodInvocation ! superset isReadable MethodInvocation isReadable BinaryOperation && MethodInvocation ! superset isWritable MethodInvocation isWritable BinaryOperation && MethodInvocation ! superset isAppendable MethodInvocation isAppendable BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "select" ElementValuePair required Literal 1 ElementValuePair optional Literal 3 ElementValuePair module Literal true ElementValuePair visibility MemberReference PRIVATE ReferenceType IRubyObject select FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject args ReturnStatement MethodInvocation RubyIO MemberReference context MethodInvocation context getRuntime MemberReference args	0
MethodDeclaration Modifier public dumpClass FormalParameter ReferenceType PrintStream out LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator pw ClassCreator ReferenceType PrintWriter MemberReference out TryStatement LocalVariableDeclaration ReferenceType TraceClassVisitor VariableDeclarator tcv ClassCreator ReferenceType TraceClassVisitor MemberReference pw StatementExpression ClassCreator MethodInvocation MemberReference tcv Literal 0 accept ReferenceType ClassReader MethodInvocation toByteArray StatementExpression MethodInvocation pw close	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "garbage_collect" ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject garbage_collect FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation RubyGC MemberReference recv start	1
MethodDeclaration Modifier public dreturn StatementExpression MethodInvocation MethodInvocation MemberReference DRETURN visitInsn getMethodVisitor	0
MethodDeclaration Modifier public ReferenceType Class TypeArgument ? getParameterTypes ReturnStatement MemberReference parameterTypes	0
MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation iVisited getReceiverNode MemberReference context Literal true compile StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context metaclass StatementExpression MethodInvocation context duplicateCurrentValue StatementExpression MethodInvocation context MethodInvocation iVisited getName StatementExpression MethodInvocation context duplicateCurrentValue LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator isfalse MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator isreal MethodInvocation context getNewEnding LocalVariableDeclaration ReferenceType Object VariableDeclarator ending MethodInvocation context getNewEnding StatementExpression MethodInvocation context MemberReference isfalse Literal 3 isPrivate StatementExpression MethodInvocation context MemberReference isreal Literal 1 StatementExpression MethodInvocation context MemberReference isreal StatementExpression MethodInvocation context consumeCurrentValue StatementExpression MethodInvocation context MemberReference isfalse go StatementExpression MethodInvocation context MemberReference isreal setEnding StatementExpression MethodInvocation context MethodInvocation iVisited getName ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation iVisited getArgsNode MemberReference context Literal "method" compileGetArgumentDefinition ClassCreator ReferenceType BranchCallback MethodDeclaration Modifier public branch FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation context MemberReference isfalse go isMethodBound StatementExpression MethodInvocation context MemberReference ending go StatementExpression MethodInvocation context MemberReference isfalse setEnding StatementExpression MethodInvocation context pushNull StatementExpression MethodInvocation context MemberReference ending setEnding	0
MethodDeclaration Modifier public ReferenceType IRubyObject rejectCommon FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType Block block LocalVariableDeclaration ReferenceType RubyArray VariableDeclarator ary MethodInvocation StatementExpression MethodInvocation ary MemberReference context MemberReference block reject_bang ReturnStatement MemberReference ary	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType ListNode ReturnStatement MemberReference pre	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "encode!" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject encode_bang FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject enc StatementExpression MethodInvocation modify19 LocalVariableDeclaration ReferenceType Charset VariableDeclarator from TernaryExpression MethodInvocation value.encoding MethodInvocation Literal "ASCII" startsWith toString MethodInvocation Charset Literal "ASCII" forName MethodInvocation Charset MethodInvocation value.encoding toString forName LocalVariableDeclaration ReferenceType Encoding VariableDeclarator encoding MethodInvocation RubyEncoding MethodInvocation context getRuntime MemberReference enc LocalVariableDeclaration ReferenceType Charset VariableDeclarator to TernaryExpression MethodInvocation encoding MethodInvocation Literal "ASCII" startsWith toString MethodInvocation Charset Literal "ASCII" forName MethodInvocation Charset MethodInvocation encoding toString forName LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator MethodInvocation ByteBuffer MethodInvocation value unsafeBytes MethodInvocation value begin MethodInvocation value length wrap LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator toBytes MethodInvocation to MethodInvocation from MemberReference decode encode StatementExpression Assignment MemberReference value ClassCreator ReferenceType ByteList MethodInvocation toBytes array MemberReference encoding = ReturnStatement This	1
MethodDeclaration Modifier protected ReferenceType Pointer getPointer FormalParameter ReferenceType Ruby runtime FormalParameter BasicType long offset ReturnStatement ClassCreator ReferenceType Pointer MemberReference runtime MethodInvocation MemberReference runtime getPointerClass MethodInvocation MethodInvocation MemberReference offset getMemoryIO getMemoryIO MemberReference Long MAX_VALUE	0
MethodDeclaration Modifier public BasicType int getVariableTableSize ReturnStatement MethodInvocation variableAccessors size	0
MethodDeclaration Modifier public unregisterParserStats IfStatement MemberReference managementEnabled StatementExpression MethodInvocation BinaryOperation + MemberReference base Literal "service=ParserStats" unregister	1
MethodDeclaration Modifier public testErrorLineNumber Exception LocalVariableDeclaration ReferenceType String VariableDeclarator script BinaryOperation + Literal \n" Literal "p 'b'\n" TryStatement StatementExpression MethodInvocation MemberReference script eval StatementExpression MethodInvocation Literal "should have raised an exception" fail CatchClause CatchClauseParameter RaiseException re StatementExpression MethodInvocation BinaryOperation != MethodInvocation re MethodInvocation Literal indexOf toString Literal - 1 assertTrue	0
MethodDeclaration Modifier private ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject arg0 FormalParameter BasicType int jflag LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation getRuntime LocalVariableDeclaration ReferenceType RubyString VariableDeclarator result MethodInvocation MemberReference runtime MemberReference SPACE_BYTELIST Literal 1 Literal true MemberReference value encoding MethodInvocation RubyFixnum MemberReference arg0 num2int MemberReference jflag justifyCommon IfStatement BinaryOperation != MethodInvocation getCodeRange MemberReference CR_BROKEN StatementExpression MethodInvocation result MethodInvocation getCodeRange setCodeRange ReturnStatement MemberReference result	1
MethodDeclaration Modifier private ReferenceType IRubyObject engineeringValue FormalParameter ReferenceType String arg LocalVariableDeclaration BasicType int VariableDeclarator exponent MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator signum MethodInvocation value signum LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator build ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation build TernaryExpression BinaryOperation == MemberReference signum Literal - 1 Literal "-" TernaryExpression BinaryOperation == MemberReference signum Literal 1 TernaryExpression MethodInvocation MemberReference arg posSign TernaryExpression MethodInvocation MemberReference arg posSpace Literal " " Literal "+" Literal "" Literal "" append StatementExpression MethodInvocation build Literal "0." append IfStatement BinaryOperation == Literal 0 MethodInvocation MemberReference arg groups BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MethodInvocation unscaledValue removeTrailingZeroes IfStatement Literal MethodInvocation MemberReference s equals "" BlockStatement StatementExpression MethodInvocation build Literal "0" append BlockStatement StatementExpression MethodInvocation build MemberReference s append BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 LocalVariableDeclaration ReferenceType String VariableDeclarator sep Literal "" WhileStatement BinaryOperation < MemberReference index MethodInvocation MethodInvocation length unscaledValue BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator next BinaryOperation + MemberReference index MethodInvocation MemberReference arg groups IfStatement BinaryOperation > MemberReference next MethodInvocation MethodInvocation length unscaledValue BlockStatement StatementExpression Assignment MemberReference next MethodInvocation MethodInvocation length unscaledValue = StatementExpression MethodInvocation build MethodInvocation MethodInvocation MethodInvocation MemberReference index MemberReference next substring unscaledValue append MemberReference sep append StatementExpression Assignment MemberReference sep Literal " " = StatementExpression Assignment MemberReference index MethodInvocation MemberReference arg groups += StatementExpression MethodInvocation build MethodInvocation MemberReference exponent append Literal "E" append ReturnStatement MethodInvocation MethodInvocation MethodInvocation build toString newString getRuntime	1
MethodDeclaration Modifier public final marshal FormalParameter ReferenceType Invocation invocation FormalParameter ReferenceType InvocationBuffer buffer FormalParameter ReferenceType IRubyObject parameter StatementExpression MethodInvocation MethodInvocation invocation getThreadContext MemberReference buffer MemberReference parameter marshal	1
MethodDeclaration Modifier public FormalParameter ReferenceType IR_Instr instr SwitchStatement MemberReference instr _op SwitchStatementCase BEQ StatementExpression MethodInvocation Cast ReferenceType BEQ_Instr MemberReference instr emitBEQ BreakStatement SwitchStatementCase CALL StatementExpression MethodInvocation Cast ReferenceType CALL_Instr MemberReference instr emitCALL BreakStatement SwitchStatementCase COPY StatementExpression MethodInvocation Cast ReferenceType COPY_Instr MemberReference instr emitCOPY BreakStatement SwitchStatementCase DEF_INST_METH StatementExpression MethodInvocation Cast ReferenceType DEFINE_INSTANCE_METHOD_Instr MemberReference instr emitDEF_INST_METH BreakStatement SwitchStatementCase JUMP StatementExpression MethodInvocation Cast ReferenceType JUMP_Instr MemberReference instr emitJUMP BreakStatement SwitchStatementCase LABEL StatementExpression MethodInvocation Cast ReferenceType LABEL_Instr MemberReference instr emitLABEL BreakStatement SwitchStatementCase PUT_FIELD StatementExpression MethodInvocation Cast ReferenceType PUT_FIELD_Instr MemberReference instr emitPUT_FIELD BreakStatement SwitchStatementCase GET_FIELD StatementExpression MethodInvocation Cast ReferenceType GET_FIELD_Instr MemberReference instr emitGET_FIELD BreakStatement SwitchStatementCase RECV_ARG StatementExpression MethodInvocation Cast ReferenceType RECV_ARG_Instr MemberReference instr emitRECV_ARG BreakStatement SwitchStatementCase RETURN StatementExpression MethodInvocation Cast ReferenceType RETURN_Instr MemberReference instr emitRETURN BreakStatement SwitchStatementCase StatementExpression MethodInvocation System.err BinaryOperation + Literal "unsupported: " MemberReference instr _op println	1
MethodDeclaration Modifier public ReferenceType RubyModule findImplementer FormalParameter ReferenceType RubyModule clazz ForStatement ForControl VariableDeclaration ReferenceType RubyModule VariableDeclarator module This BinaryOperation != MemberReference module Literal null Assignment MemberReference module MethodInvocation module getSuperClass = BlockStatement IfStatement MethodInvocation module MemberReference clazz isSame ReturnStatement MemberReference module ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "divmod" ReferenceType IRubyObject op_divmod FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator val MethodInvocation MemberReference context MethodInvocation MemberReference context This MemberReference other f_div f_floor ReturnStatement MethodInvocation context MethodInvocation MemberReference val MethodInvocation MemberReference context This MethodInvocation MemberReference context MemberReference other MemberReference val f_mul f_sub newArray getRuntime	1
MethodDeclaration Modifier public setIndex FormalParameter BasicType int value StatementExpression Assignment MemberReference index MemberReference value =	0
MethodDeclaration Modifier public final Annotation Override ReferenceType String toString ReturnStatement MethodInvocation nativeType name	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "sync" ReferenceType RubyBoolean sync FormalParameter ReferenceType ThreadContext context ReturnStatement MethodInvocation context MethodInvocation MethodInvocation MethodInvocation getMainStream MethodInvocation isSync getOpenFileChecked newBoolean getRuntime	0
MethodDeclaration Modifier public ReferenceType Object case340_line1289 FormalParameter ReferenceType Object yyVal FormalParameter ReferenceType Object yyVals FormalParameter BasicType int yyTop StatementExpression Assignment MemberReference yyVal MethodInvocation support MethodInvocation Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 7 MemberReference yyTop yyVals getPosition Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 7 MemberReference yyTop yyVals Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 5 MemberReference yyTop yyVals Cast ReferenceType RestArgNode MemberReference ArraySelector BinaryOperation + Literal - 3 MemberReference yyTop yyVals Cast ReferenceType ListNode MemberReference ArraySelector BinaryOperation + Literal - 1 MemberReference yyTop yyVals Cast ReferenceType BlockArgNode MemberReference ArraySelector BinaryOperation + Literal 0 MemberReference yyTop yyVals new_args = ReturnStatement MemberReference yyVal	1
MethodDeclaration Modifier public BasicType boolean notVisibleAndNotMethodMissing FormalParameter ReferenceType DynamicMethod method FormalParameter ReferenceType String name FormalParameter ReferenceType IRubyObject caller FormalParameter ReferenceType CallType callType ReturnStatement BinaryOperation && MethodInvocation ! method MemberReference caller MemberReference callType isCallableFrom MethodInvocation ! name Literal "method_missing" equals	1
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal ElementValuePair module Literal true ElementValuePair visibility MemberReference Visibility PRIVATE ReferenceType IRubyObject pid FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject recv ReturnStatement MethodInvocation MethodInvocation context getRuntime pid	0
MethodDeclaration Modifier public ReferenceType RubyObject ReferenceType Data newData FormalParameter ReferenceType RubyClass objectClass FormalParameter ReferenceType Object sval ReturnStatement ClassCreator ReferenceType RubyObject ReferenceType Data This MemberReference objectClass MemberReference sval	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal "Not 32 or 64-bit BinaryOperation ^ MemberReference Platform IS_32_BIT MemberReference Platform assertTrue	0
MethodDeclaration Modifier public ReferenceType IRubyObject getValue LocalVariableDeclaration ReferenceType IRubyObject VariableDeclarator result MethodInvocation JavaUtil MemberReference runtime MemberReference bean bean MemberReference bean type convertJavaToRuby ReturnStatement TernaryExpression BinaryOperation instanceof MemberReference result ReferenceType JavaObject MethodInvocation Java MemberReference runtime MemberReference result wrap MemberReference result	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "hexdigest" ElementValuePair required Literal 1 ElementValuePair meta Literal true ReferenceType IRubyObject s_hexdigest FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject str LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType RubyClass MemberReference recv TryStatement LocalVariableDeclaration ReferenceType MessageDigest VariableDeclarator md MethodInvocation MemberReference runtime MemberReference name createMessageDigest ReturnStatement MethodInvocation RubyString MemberReference runtime MethodInvocation ByteList MethodInvocation MethodInvocation md MethodInvocation str MethodInvocation getBytes convertToString digest plain CatchClause CatchClauseParameter NoSuchAlgorithmException e ThrowStatement MethodInvocation recv MethodInvocation BinaryOperation + BinaryOperation + Literal "Unsupported digest algorithm (" MemberReference name Literal ")" newNotImplementedError getRuntime	1
MethodDeclaration Modifier public BasicType int IfStatement BinaryOperation == MemberReference -- left Literal 0 StatementExpression MethodInvocation nextState LocalVariableDeclaration BasicType int VariableDeclarator y MemberReference ArraySelector MemberReference ++ next state StatementExpression Assignment MemberReference y BinaryOperation >>> MemberReference y Literal 11 ^= StatementExpression Assignment MemberReference y BinaryOperation & BinaryOperation << MemberReference y Literal 7 Literal 0x9d2c5680L ^= StatementExpression Assignment MemberReference y BinaryOperation & BinaryOperation << MemberReference y Literal 15 Literal 0xefc60000L ^= StatementExpression Assignment MemberReference y BinaryOperation >>> MemberReference y Literal 18 ^= ReturnStatement MemberReference y	1
MethodDeclaration Modifier private BasicType int percent FormalParameter BasicType boolean spaceSeen IOException IfStatement MethodInvocation isBEG ReturnStatement MethodInvocation MethodInvocation src read parseQuote LocalVariableDeclaration BasicType int VariableDeclarator c MethodInvocation src read IfStatement BinaryOperation == MemberReference c Literal '=' BlockStatement StatementExpression Assignment MemberReference lex_state MemberReference LexState EXPR_BEG = StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "%" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tOP_ASGN IfStatement BinaryOperation && BinaryOperation && MethodInvocation isARG MemberReference spaceSeen MethodInvocation ! Character MemberReference c isWhitespace ReturnStatement MethodInvocation MemberReference c parseQuote StatementExpression MethodInvocation determineExpressionState StatementExpression MethodInvocation src MemberReference c unread StatementExpression Assignment MemberReference yaccValue ClassCreator ReferenceType Token Literal "%" MethodInvocation getPosition = ReturnStatement MemberReference Tokens tPERCENT	1
MethodDeclaration Modifier public final putLong FormalParameter BasicType long offset FormalParameter BasicType long value StatementExpression MethodInvocation MemberReference offset Literal 8 checkBounds StatementExpression MethodInvocation IO BinaryOperation + MemberReference address MemberReference offset MemberReference value putLong	0
MethodDeclaration Modifier public final putLong FormalParameter BasicType long offset FormalParameter BasicType long value ThrowStatement MethodInvocation ex	0
MethodDeclaration Modifier protected ReferenceType Class findModClass FormalParameter ReferenceType String name ClassNotFoundException LocalVariableDeclaration BasicType byte VariableDeclarator classBytes MethodInvocation MemberReference name loadClassBytes StatementExpression MethodInvocation MemberReference classBytes Literal "Original" Literal "ABCDEFGH" replace ReturnStatement MethodInvocation MemberReference name MemberReference classBytes Literal 0 MemberReference classBytes length defineClass	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "quo" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject quo_19 FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation RubyRational MethodInvocation MemberReference context Literal "/" MemberReference other callMethod MethodInvocation context getRuntime This newRationalRaw	1
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "rjust" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject rjust19 FormalParameter ReferenceType IRubyObject arg0 ReturnStatement MethodInvocation MemberReference arg0 Literal 'r'	0
MethodDeclaration Modifier public ReferenceType IRubyObject inspect LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator result ClassCreator ReferenceType StringBuilder StatementExpression MethodInvocation result MethodInvocation append LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator parameterTypes MethodInvocation getParameterTypes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference parameterTypes length MemberReference ++ i BlockStatement StatementExpression MethodInvocation result MemberReference ArraySelector MemberReference i MethodInvocation getName parameterTypes append IfStatement BinaryOperation < MemberReference i BinaryOperation - MemberReference parameterTypes length Literal 1 BlockStatement StatementExpression MethodInvocation result Literal ',' append StatementExpression MethodInvocation result Literal ")>" append ReturnStatement MethodInvocation MethodInvocation MethodInvocation result toString newString getRuntime	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal "ljust" ElementValuePair compat MemberReference CompatVersion RUBY1_9 ReferenceType IRubyObject ljust19 FormalParameter ReferenceType IRubyObject arg0 FormalParameter ReferenceType IRubyObject arg1 ReturnStatement MethodInvocation MemberReference arg0 MemberReference arg1 Literal 'l'	0
MethodDeclaration Modifier public Annotation JRubyMethod ElementValuePair name Literal ">>" ReferenceType IRubyObject op_rshift FormalParameter ReferenceType ThreadContext context FormalParameter ReferenceType IRubyObject other ReturnStatement MethodInvocation MethodInvocation context getRuntime MemberReference other op_rshift	1
MethodDeclaration Modifier public ReferenceType Entry findAliasEntry FormalParameter ReferenceType ByteList bytes ReturnStatement MethodInvocation aliases MemberReference bytes bytes MemberReference bytes begin BinaryOperation + MemberReference bytes begin MemberReference bytes realSize get	0
MethodDeclaration Modifier public compileDot FormalParameter ReferenceType Node node FormalParameter ReferenceType BodyCompiler context FormalParameter BasicType boolean expr LocalVariableDeclaration Modifier final ReferenceType DotNode VariableDeclarator dotNode Cast ReferenceType DotNode MemberReference node LocalVariableDeclaration BasicType boolean VariableDeclarator doit BinaryOperation || MemberReference expr MemberReference ! RubyInstanceConfig PEEPHOLE_OPTZ LocalVariableDeclaration BasicType boolean VariableDeclarator popit BinaryOperation && MemberReference ! RubyInstanceConfig PEEPHOLE_OPTZ MemberReference ! expr IfStatement MemberReference doit BlockStatement LocalVariableDeclaration ReferenceType CompilerCallback VariableDeclarator beginEndCallback ClassCreator ReferenceType CompilerCallback MethodDeclaration Modifier public call FormalParameter ReferenceType BodyCompiler context StatementExpression MethodInvocation MethodInvocation dotNode getBeginNode MemberReference context Literal true compile StatementExpression MethodInvocation MethodInvocation dotNode getEndNode MemberReference context Literal true compile StatementExpression MethodInvocation context MemberReference beginEndCallback MethodInvocation dotNode isExclusive createNewRange IfStatement MemberReference popit StatementExpression MethodInvocation context consumeCurrentValue	1
MethodDeclaration Modifier public setResult FormalParameter ReferenceType RubyParserResult result StatementExpression Assignment This MemberReference result MemberReference result =	0
MethodDeclaration Modifier public static Annotation JRubyMethod ElementValuePair name Literal "getpwnam" ElementValuePair required Literal 1 ElementValuePair module Literal true ReferenceType IRubyObject FormalParameter ReferenceType IRubyObject recv FormalParameter ReferenceType IRubyObject name LocalVariableDeclaration ReferenceType Ruby VariableDeclarator runtime MethodInvocation recv getRuntime LocalVariableDeclaration ReferenceType String VariableDeclarator nam MethodInvocation name MethodInvocation toString convertToString TryStatement LocalVariableDeclaration ReferenceType Passwd VariableDeclarator pwd MethodInvocation runtime MethodInvocation MemberReference nam getPosix IfStatement BinaryOperation == MemberReference pwd Literal null BlockStatement IfStatement MemberReference Platform IS_WINDOWS BlockStatement ReturnStatement MethodInvocation runtime getNil ThrowStatement MethodInvocation runtime BinaryOperation + Literal "can't find user for " MemberReference nam newArgumentError ReturnStatement MethodInvocation MethodInvocation recv getRuntime MemberReference pwd setupPasswd CatchClause CatchClauseParameter Exception e IfStatement MethodInvocation runtime MethodInvocation isTrue getDebug BlockStatement StatementExpression MethodInvocation runtime MethodInvocation MemberReference ID NOT_IMPLEMENTED Literal is not supported by JRuby on this platform" MemberReference e warn getWarnings ReturnStatement MethodInvocation runtime getNil	0
