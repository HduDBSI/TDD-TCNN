MethodDeclaration Modifier BasicType ReturnStatement public boolean MethodInvocation MemberReference getFlag CLOSURE	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Cast Cast ClassVarNode ReferenceType MemberReference ReferenceType Cast Token ArraySelector yyVals String ReferenceType MemberReference BinaryOperation Token ArraySelector yyVals + Literal MemberReference BinaryOperation 0 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement protected DynamicMethod ReferenceType context ReferenceType self ReferenceType methodName MethodInvocation ThreadContext IRubyObject String runtimeCache MemberReference MemberReference Literal MemberReference getMethod context self 8 methodName	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType arg MethodInvocation IRubyObject IRubyObject MethodInvocation MemberReference recv getRuntime arg	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression public ReferenceType clazz ReferenceType name ReferenceType self ReferenceType block MethodInvocation MethodInvocation RubyModule String IRubyObject Block MemberReference MemberReference MemberReference MemberReference MemberReference clazz clazz name self block	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean MethodInvocation ruby MethodInvocation MethodInvocation get getInstanceConfig	0
MethodDeclaration Modifier FormalParameter FormalParameter ForStatement static public ReferenceType ReferenceType fields EnhancedForControl BlockStatement Map TypeArgument TypeArgument VariableDeclaration MethodInvocation LocalVariableDeclaration IfStatement ReferenceType ReferenceType ReferenceType VariableDeclarator fields entrySet ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement String Object Map ReferenceType fieldEntry Object value MethodInvocation value MethodInvocation getClass LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression MethodInvocation BlockStatement IfStatement Entry TypeArgument TypeArgument fieldEntry getValue isArray ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation value MethodInvocation getClass StatementExpression BinaryOperation BlockStatement BlockStatement ReferenceType ReferenceType Object values Cast arrayV MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression arrayV visitEnd MethodInvocation instanceof MemberReference ReferenceType StatementExpression StatementExpression String Object ReferenceType MemberReference MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation MethodInvocation MethodInvocation MethodInvocation value Class MethodInvocation MethodInvocation Object value fieldEntry getKey int i Literal i values length arrayV Literal MemberReference visit fieldEntry getKey MethodInvocation ci value toString MethodInvocation MethodInvocation visit MethodInvocation MemberReference visit 0 null ArraySelector values value getClass fieldEntry getKey Type Cast getType fieldEntry getKey value MemberReference ReferenceType MemberReference i Class value	1
MethodDeclaration Modifier ReferenceType parse FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public ReferenceType runtime ReferenceType script ReferenceType filename BasicType lineNumber ClassCreator Ruby String String int ReferenceType MemberReference MethodInvocation runtime runtime MemberReference MemberReference Literal MemberReference script filename null lineNumber	0
MethodDeclaration Modifier FormalParameter FormalParameter SwitchStatement static ReferenceType runtime BasicType strategy MemberReference SwitchStatementCase SwitchStatementCase Ruby int strategy MemberReference MemberReference MemberReference BreakStatement LocalVariableDeclaration ThrowStatement ReferenceType VariableDeclarator ClassCreator RubyClass errorClass MethodInvocation ReferenceType MethodInvocation Literal runtime MethodInvocation Literal fastGetModule RaiseException RubyException MemberReference MemberReference Literal newException true Literal fastGetClass "Zlib" runtime errorClass "stream error: invalid	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject receiver MethodInvocation IRubyObject args Cast Block block MethodInvocation callAdapter MemberReference MemberReference MemberReference MemberReference MemberReference call MethodInvocation getReceiverNode ReferenceType MethodInvocation RuntimeHelpers MemberReference MemberReference MemberReference MemberReference MemberReference getBlock context self receiver args block MemberReference MemberReference MemberReference MemberReference ArrayNode getArgsNode runtime context self runtime context self	0
MethodDeclaration Modifier FormalParameter FormalParameter IOException StatementExpression IfStatement StatementExpression public ReferenceType obj ReferenceType type MethodInvocation BinaryOperation BlockStatement MethodInvocation IRubyObject RubyClass MemberReference write == MethodInvocation Literal ThrowStatement MethodInvocation type MethodInvocation getName '#' MethodInvocation runtime MethodInvocation Literal charAt obj MethodInvocation getRuntime type getName 0 BinaryOperation newTypeError + Literal MethodInvocation "can't dump class " type getName	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public Operand ReferenceType node ReferenceType s ReferenceType VariableDeclarator EnhancedForControl StatementExpression ClassCreator Node IR_Scope List TypeArgument strPieces ClassCreator VariableDeclaration MethodInvocation MethodInvocation ReferenceType ClassCreator ReferenceType ReferenceType ReferenceType VariableDeclarator node childNodes strPieces MethodInvocation add ReferenceType MemberReference Operand ArrayList TypeArgument Node n MemberReference MemberReference build strPieces ReferenceType n s Operand	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block RuntimeHelpers MemberReference MemberReference Literal MemberReference MemberReference invoke context self args block	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration WhileStatement ReturnStatement private static long ReferenceType enc BasicType bytes BasicType p BasicType end BasicType VariableDeclarator VariableDeclarator BinaryOperation BlockStatement MethodInvocation Encoding byte int int int cr Literal c Literal < MemberReference MemberReference IfStatement LocalVariableDeclaration IfStatement StatementExpression MemberReference TernaryExpression pack 0 0 p end MethodInvocation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference c BinaryOperation MemberReference MemberReference Encoding MemberReference isAscii LocalVariableDeclaration IfStatement StatementExpression StatementExpression int cl MethodInvocation > MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression ++ c == MemberReference Literal CR_7BIT cr ArraySelector bytes BasicType VariableDeclarator BinaryOperation ReturnStatement Assignment Assignment MemberReference MemberReference MemberReference MemberReference preciseLength cl 0 Assignment Assignment Assignment MemberReference cr 0 MemberReference int q MethodInvocation == MemberReference Literal MethodInvocation MemberReference BinaryOperation += MemberReference MemberReference = enc bytes p end MemberReference MemberReference |= MemberReference MemberReference += MemberReference MemberReference = ++ p p MemberReference MemberReference MemberReference searchNonAscii q - 1 BinaryOperation TernaryExpression pack c - MemberReference MemberReference p q cr CR_VALID p cl cr CR_BROKEN bytes p end + MemberReference BinaryOperation BinaryOperation MemberReference MemberReference q p c - MemberReference MemberReference == MemberReference Literal CR_7BIT cr end p cr 0	1
MethodDeclaration Modifier Annotation Annotation ReferenceType to_s IfStatement ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject MethodInvocation BlockStatement MethodInvocation name Literal isSingleton LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement MethodInvocation getRuntime "to_s" ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation MethodInvocation newString IRubyObject attached Cast StringBuilder buffer ClassCreator != MemberReference Literal IfStatement buffer Literal append MethodInvocation getRuntime getName ReferenceType This ReferenceType Literal attached null BinaryOperation BlockStatement BlockStatement ">" MethodInvocation newString MetaClass StringBuilder || BinaryOperation BinaryOperation StatementExpression StatementExpression buffer toString instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation MethodInvocation attached RubyClass attached RubyModule buffer MethodInvocation append buffer MethodInvocation append attached inspect attached anyToString	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType block MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject Block MemberReference MemberReference ArrayCreator MemberReference context self ReferenceType ArrayInitializer block IRubyObject MemberReference MemberReference MemberReference arg1 arg2 arg3	1
MethodDeclaration Modifier Annotation ReferenceType each_line FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType block TernaryExpression name Literal optional Literal frame Literal ThreadContext IRubyObject Block MethodInvocation MethodInvocation MethodInvocation "each_line" 1 true block isGiven MemberReference MemberReference MemberReference MethodInvocation This Literal MemberReference enumeratorize context args block context getRuntime "each_line" args	1
MethodDeclaration Modifier Annotation Annotation ReferenceType hash StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement public JRubyMethod ElementValuePair Override RubyFixnum MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal check int hash MethodInvocation int len MemberReference int p MemberReference byte bytes MemberReference > MemberReference Literal StatementExpression MethodInvocation getRuntime pattern str realSize str begin str bytes -- len 0 Assignment BinaryOperation newFixnum MemberReference BinaryOperation = + MemberReference BinaryOperation hash + BinaryOperation MemberReference hash >> MemberReference Literal * MemberReference Literal ArraySelector bytes hash 5 hash 33 MemberReference ++ p	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement protected IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType method ReferenceType arg0 ReferenceType arg1 MethodInvocation ThreadContext IRubyObject String DynamicMethod IRubyObject IRubyObject RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference context self method getVisibility name callType arg0 arg1 Block	0
MethodDeclaration Modifier ReferenceType getInputStream IOException IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public InputStream BinaryOperation BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation ClassCreator != MemberReference Literal ReturnStatement byte bytes ArrayCreator ByteBuffer buffer MethodInvocation FileInputStream fis ClassCreator FileChannel fc MethodInvocation fc MemberReference read fis close ReferenceType MemberReference resource null MethodInvocation BasicType Cast ByteBuffer MemberReference wrap ReferenceType MemberReference fis getChannel buffer ByteArrayInputStream bytes resource openStream byte BasicType MethodInvocation bytes FileInputStream path int path length	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement private IRubyObject ReferenceType context ReferenceType self ReferenceType method ReferenceType arg0 ReferenceType arg1 MethodInvocation ThreadContext IRubyObject DynamicMethod IRubyObject IRubyObject RuntimeHelpers MethodInvocation MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference call context self method getVisibility methodName callType context self self getMetaClass methodName arg0 arg1 Block	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public Operand BasicType argIndex BasicType getSubArray Literal int boolean null	1
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType getFastOptMethod FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference + BinaryOperation MemberReference MemberReference tryClass == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression FastInvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setArgumentTypes ic MemberReference setJavaName ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity optional InvocationCallback OPTIONAL_ARGS method e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation mv MemberReference MemberReference visitVarInsn MemberReference ClassReference checkCast mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference mv Literal Literal visitMaxs MemberReference MethodInvocation = FastInvocationCallback c newInstance IllegalArgumentException e getMessage ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtorFast MemberReference startCallFast ALOAD METHOD_ARGS_INDEX mv ReferenceType INVOKEVIRTUAL typePath method MemberReference MemberReference sig ARETURN 2 3 c MemberReference MemberReference MemberReference endCall Class ClassReference method signature mnamePath cw IRubyObject ret signature cw mv mname ReferenceType IRubyObject	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement static public String ReferenceType obj MethodInvocation Object obj MethodInvocation getClass toString	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType items MethodInvocation MethodInvocation name Literal rest Literal compat MemberReference IRubyObject modifyCheck MemberReference true CompatVersion RUBY1_9 items	0
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler context pushNull	0
MethodDeclaration Modifier Annotation Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject ReferenceType other ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference name Literal required Literal IRubyObject IRubyObject obj instanceof MemberReference ReferenceType StatementExpression StatementExpression obj 1 other RubyFloat Assignment Assignment MemberReference MethodInvocation = MemberReference MethodInvocation = obj MethodInvocation getRuntime obj MethodInvocation getRuntime MemberReference MethodInvocation newArray MethodInvocation This newArray other to_f MemberReference Literal getVpValue other true	0
MethodDeclaration Modifier ReferenceType getVariable FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime BasicType i ReferenceType name ReferenceType object MethodInvocation Ruby int String IRubyObject runtimeCache MemberReference MemberReference MemberReference MemberReference getVariable runtime i name object	0
MethodDeclaration Modifier post FormalParameter FormalParameter FormalParameter StatementExpression protected ReferenceType context ReferenceType ReferenceType MethodInvocation ThreadContext context MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject Object result Cast MemberReference MemberReference javaToRuby ReferenceType MethodInvocation ruby result Object handle TernaryExpression MethodInvocation MethodInvocation MethodInvocation invoke MemberReference Literal Cast MemberReference MemberReference MemberReference isStatic null ReferenceType MemberReference arg0 arg1 arg2 JavaObjectWrapper self	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public RubyFixnum ReferenceType runtime BasicType value MethodInvocation Ruby int runtimeCache MemberReference Literal MemberReference runtime 1 value	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter ReturnStatement static public int BasicType bytes BasicType p BasicType len MethodInvocation byte int int MemberReference MemberReference MemberReference MemberReference bytes p len ASCIIEncoding INSTANCE	0
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement ReturnStatement public String ReferenceType MethodInvocation BlockStatement MethodInvocation String MethodInvocation MemberReference matcher ReturnStatement System MemberReference find MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType obj ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation name ElementArrayValue frame Literal compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation || BinaryOperation MethodInvocation IfStatement ReturnStatement BinaryOperation BlockStatement RuntimeHelpers MemberReference This MemberReference MemberReference Literal Literal true CompatVersion RUBY1_9 context getRuntime || BinaryOperation MethodInvocation ! TypeConverter MethodInvocation MemberReference MethodInvocation Literal convertToTypeWithCheck BinaryOperation BlockStatement MethodInvocation && BinaryOperation BinaryOperation IfStatement IfStatement context obj Block "include?" "member?" || BinaryOperation BinaryOperation ! TypeConverter MethodInvocation MemberReference MethodInvocation Literal convertToTypeWithCheck isNil end runtime getInteger "to_int" != MethodInvocation Literal IfStatement runtime getFalse && BinaryOperation BinaryOperation == Cast Literal MethodInvocation ReturnStatement BinaryOperation BlockStatement instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType isNil begin runtime getInteger "to_int" MemberReference MemberReference MemberReference rangeLe null MemberReference BlockStatement BlockStatement && BinaryOperation BinaryOperation == Cast Literal ReferenceType MemberReference 1 obj isNil MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement begin RubyNumeric end RubyNumeric context begin obj isExclusive IfStatement IfStatement instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType ReferenceType MemberReference 1 RubyString end runtime getFalse obj RubyString ReferenceType VariableDeclarator BinaryOperation ReturnStatement BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement begin RubyString end RubyString RubyString begin ByteList Vbytes Cast != MemberReference Literal MethodInvocation int v BinaryOperation ByteList Bbytes Cast int b BinaryOperation ByteList Ebytes Cast int e BinaryOperation && BinaryOperation MethodInvocation IfStatement ReturnStatement != MethodInvocation Literal MethodInvocation != MethodInvocation Literal MethodInvocation ReferenceType MemberReference Vbytes realSize 1 runtime getFalse & MemberReference Literal ReferenceType MemberReference & MemberReference Literal ReferenceType MemberReference & MemberReference Literal && MethodInvocation MethodInvocation Encoding MemberReference isAscii BinaryOperation ReturnStatement MethodInvocation MemberReference MemberReference MemberReference rangeLt null runtime getTrue MemberReference MemberReference MemberReference rangeLe null runtime getTrue RubyString obj Vbytes ArraySelector bytes 0xff RubyString begin Bbytes ArraySelector bytes 0xff RubyString end Ebytes ArraySelector bytes 0xff Encoding MemberReference isAscii Encoding MemberReference isAscii e || BinaryOperation BinaryOperation MethodInvocation runtime getFalse context obj end context obj end MemberReference MemberReference MemberReference v b && BinaryOperation BinaryOperation && MemberReference BinaryOperation runtime getTrue Vbytes begin Bbytes begin Ebytes begin <= MemberReference MemberReference < MemberReference MemberReference ! isExclusive == MemberReference MemberReference b v v e v e	1
MethodDeclaration Modifier FormalParameter IOException LocalVariableDeclaration IfStatement private ReferenceType val ReferenceType VariableDeclarator BinaryOperation BlockStatement IRubyObject Channel socketChannel MethodInvocation instanceof MemberReference ReferenceType IfStatement openFile MethodInvocation MethodInvocation getMainStream socketChannel SocketChannel BinaryOperation BlockStatement BlockStatement getDescriptor getChannel && BinaryOperation MethodInvocation StatementExpression LocalVariableDeclaration IfStatement instanceof MemberReference ReferenceType ! val isTrue MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement val RubyBoolean MethodInvocation asSocket int num MethodInvocation == MemberReference Literal StatementExpression StatementExpression Literal Literal MemberReference asNumber num - 1 MethodInvocation MethodInvocation false 0 val MethodInvocation asSocket MethodInvocation asSocket Literal Literal Literal MemberReference false 0 true num	1
MethodDeclaration Modifier ReferenceType canonicalize FormalParameter ReturnStatement private static String ReferenceType path MethodInvocation String Literal MemberReference canonicalize null path	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg Modifier BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal required Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject final int Cast Ruby runtime MethodInvocation BlockCallback ClassCreator RubyThread MethodInvocation MemberReference MethodInvocation newInstance 1 true Visibility PRIVATE BasicType MethodInvocation context getRuntime ReferenceType MethodDeclaration runtime getThread IRubyObject MemberReference Cast MemberReference MemberReference MemberReference int arg MethodInvocation convertToInteger BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement recv ReferenceType MemberReference Arity context getLongValue public IRubyObject ReferenceType context ReferenceType args ReferenceType block BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation RubyModule recv ThreadContext IRubyObject Block int status ArrayCreator int result MethodInvocation context MethodInvocation getRuntime BasicType Literal context MethodInvocation MethodInvocation getRuntime MemberReference newFixnum int 1 getPosix MemberReference MemberReference Literal result status 0	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + BinaryOperation Literal + BinaryOperation TernaryExpression ")" + BinaryOperation MemberReference BinaryOperation Literal BinaryOperation + SuperMethodInvocation Literal _source == MemberReference Literal "" + Literal MemberReference toString "(" null ", "	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter StatementExpression IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation BinaryOperation ReturnStatement MethodInvocation name Literal ThreadContext check == MemberReference Literal MethodInvocation str MethodInvocation MethodInvocation Literal MemberReference makeShared begin - 1 context MethodInvocation getRuntime This infectBy context getRuntime 0 begin getNil	1
MethodDeclaration Modifier process ForStatement TryStatement public EnhancedForControl BlockStatement LocalVariableDeclaration ForStatement StatementExpression CatchClause VariableDeclaration MethodInvocation StatementExpression ReferenceType VariableDeclarator EnhancedForControl BlockStatement MethodInvocation CatchClauseParameter ThrowStatement ReferenceType VariableDeclarator env MethodInvocation FileWriter fw ClassCreator VariableDeclaration MemberReference StatementExpression StatementExpression fw close Exception e ClassCreator MethodInvocation ReferenceType Literal ReferenceType VariableDeclarator classNames MethodInvocation MethodInvocation ReferenceType MemberReference ClassCreator MemberReference FileWriter String name fw MemberReference write fw Literal write RuntimeException e ReferenceType name '\n'	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration WhileStatement ReturnStatement private IRubyObject ReferenceType runtime BasicType bytes BasicType s BasicType end BasicType VariableDeclarator BinaryOperation BlockStatement TernaryExpression Ruby byte int int boolean modify Literal < MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression MemberReference This MethodInvocation false s end BasicType VariableDeclarator MethodInvocation BlockStatement MemberReference modify runtime getNil int c BinaryOperation ASCII MemberReference isUpper StatementExpression StatementExpression ++ s & MemberReference Literal c Assignment Assignment ArraySelector bytes 0xff MemberReference MemberReference = MemberReference Literal = MemberReference ArraySelector bytes AsciiTables ArraySelector modify true s MemberReference MemberReference s c	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BasicType VariableDeclarator MemberReference StatementExpression ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment Assignment Assignment MemberReference StatementExpression MemberReference name Literal ThreadContext IRubyObject num This boolean neg MethodInvocation neg Assignment IRubyObject den This IRubyObject two MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = neg Assignment num MemberReference MemberReference MemberReference f_negative_p MemberReference MethodInvocation = MemberReference RubyFixnum MethodInvocation two num MemberReference MethodInvocation MemberReference f_add den MemberReference MemberReference MemberReference f_mul num MemberReference MemberReference MemberReference f_idiv MemberReference MethodInvocation = num context num num MemberReference MemberReference f_negate den context getRuntime context MemberReference MemberReference MemberReference f_mul den context den two context num den num MemberReference MemberReference f_negate context num context num two context num	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration TryStatement ReturnStatement static public JRubyMethod IRubyObject ReferenceType context ReferenceType obj ReferenceType VariableDeclarator LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression CatchClause MemberReference ThreadContext IRubyObject RubyIO io Cast ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation CatchClauseParameter ReturnStatement obj ReferenceType MemberReference OpenFile openFile MethodInvocation ChannelDescriptor descriptor MethodInvocation openFile MethodInvocation getMainStream ReturnStatement openFile MethodInvocation getMainStream Exception MethodInvocation RubyIO obj io getOpenFile openFile MethodInvocation getMainStream feof MethodInvocation context MethodInvocation getRuntime getDescriptor context MethodInvocation getRuntime getNil getNil	1
MethodDeclaration Modifier ReferenceType getBodyNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression public Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation final ByteArrayOutputStream err ClassCreator RubyInstanceConfig config ClassCreator Ruby ruby MethodInvocation RubyException exception Cast RubyString lines ArrayCreator RubyArray backtrace MethodInvocation exception MemberReference ruby MemberReference Literal MethodInvocation assertEquals ReferenceType ReferenceType StatementExpression StatementExpression StatementExpression StatementExpression Ruby MemberReference newInstance ReferenceType MethodInvocation ReferenceType ArrayInitializer RubyArray MemberReference MethodInvocation newArray backtrace exception "Line 1: A message Line err toString ByteArrayOutputStream RubyInstanceConfig MethodInvocation MethodInvocation MethodInvocation MethodInvocation config RubyException runtime MethodInvocation Literal getClass RubyString MethodInvocation MethodInvocation ruby TypeArgument MemberReference Arrays MemberReference MemberReference ClassCreator setError Literal MethodInvocation ArrayCreator MemberReference newInstance "NameError" RubyString MemberReference Literal newString RubyString MemberReference Literal newString ReferenceType lines System in System out ReferenceType MemberReference false ruby getCurrentContext ReferenceType ArrayInitializer Block ruby "Line 1" ruby "Line 2" IRubyObject PrintStream err IRubyObject MethodInvocation ruby Literal newString "A	1
MethodDeclaration Modifier FormalParameter StatementExpression public BasicType time MethodInvocation int MemberReference time	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext RubyComplex MemberReference This CompatVersion RUBY1_9 context	1
MethodDeclaration Modifier ReferenceType handleNextJump FormalParameter FormalParameter FormalParameter ReturnStatement private IRubyObject ReferenceType context ReferenceType nj ReferenceType type TernaryExpression ThreadContext JumpException ReferenceType Block ReferenceType BinaryOperation MethodInvocation Cast NextJump Type == MethodInvocation Literal context MethodInvocation getRuntime ReferenceType MethodInvocation nj getValue null getNil IRubyObject nj getValue	1
MethodDeclaration Modifier ReferenceType execute FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType recv ReferenceType args ReferenceType block MethodInvocation IRubyObject IRubyObject Block RubyFixnum MethodInvocation Literal newFixnum recv getRuntime 128	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement public Modifier ReferenceType multipleAsgnNode ReferenceType s ReferenceType values Modifier ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement final MultipleAsgnNode IR_Scope Operand final ListNode MethodInvocation int i Literal != MemberReference Literal LocalVariableDeclaration ForStatement Node an MethodInvocation == MemberReference Literal IfStatement BinaryOperation BlockStatement IfStatement multipleAsgnNode getHeadNode 0 null ReferenceType VariableDeclarator EnhancedForControl BlockStatement multipleAsgnNode getArgsNode an null BinaryOperation ThrowStatement instanceof MemberReference ReferenceType BinaryOperation BlockStatement BlockStatement ListNode Cast VariableDeclaration MethodInvocation IfStatement StatementExpression == MemberReference Literal ClassCreator an StarNode != MemberReference Literal StatementExpression StatementExpression ReferenceType MemberReference ReferenceType VariableDeclarator childNodes BinaryOperation StatementExpression StatementExpression MemberReference null ReferenceType BinaryOperation values null MethodInvocation MethodInvocation ListNode Node an == MemberReference Literal MethodInvocation MethodInvocation ++ i NotCompilableException + Literal MethodInvocation MemberReference MemberReference MemberReference MemberReference Literal buildAssignment MemberReference MemberReference MemberReference Literal buildBlockArgsAssignment values null MemberReference MemberReference MemberReference Literal buildBlockArgsAssignment MemberReference MemberReference MemberReference MemberReference Literal buildAssignment "Something's multiple assignment with no head or args at: " multipleAsgnNode getPosition an s values i true an s i true an s i false an s values i false	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType value MethodInvocation MethodInvocation long int MemberReference Literal checkBounds MemberReference MethodInvocation MemberReference offset 4 buffer MemberReference index value offset	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation name Literal reads ElementArrayValue writes MemberReference ThreadContext Ruby runtime MethodInvocation IRubyObject line MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement ReturnStatement context MethodInvocation getCurrentScope runtime getNil "~" MemberReference MemberReference BACKREF context getRuntime context MethodInvocation getCurrentScope line RubyString BasicType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation MethodInvocation setBackRef BACKREF MemberReference int start MethodInvocation < MemberReference Literal MethodInvocation runtime MemberReference newFixnum runtime getNil runtime MemberReference Cast Literal Literal search start 0 runtime getNil start context ReferenceType MemberReference 0 false RubyString line	1
MethodDeclaration Modifier ReferenceType getCurrentVisibility ReturnStatement public Visibility MethodInvocation MethodInvocation getVisibility	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Arity MethodInvocation MethodInvocation	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType BinaryOperation BlockStatement MethodInvocation name Literal IRubyObject instanceof MemberReference ReferenceType ThrowStatement MethodInvocation getRuntime JavaClass MethodInvocation This newBoolean MethodInvocation getRuntime MethodInvocation MethodInvocation MemberReference MethodInvocation newTypeError Cast isAnnotationPresent MethodInvocation MethodInvocation getRuntime ReferenceType MemberReference getJavaSupport JavaClass	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration WhileStatement StatementExpression private static ReferenceType a BasicType lo BasicType hi ReferenceType c ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment Object int int Comparator Object x MemberReference && BinaryOperation BinaryOperation StatementExpression MemberReference MemberReference = ArraySelector a < MemberReference MemberReference > MethodInvocation Literal Assignment ArraySelector a x MemberReference lo hi c MemberReference MemberReference compare 0 MemberReference MemberReference = MemberReference lo x ArraySelector a ArraySelector a ArraySelector a lo BinaryOperation MemberReference MemberReference + MemberReference Literal lo ++ lo lo 1	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation == MemberReference Literal StatementExpression ReturnStatement modify MemberReference MemberReference MemberReference BinaryOperation CompatVersion RUBY1_8 context getRuntime value realSize 0 MethodInvocation MethodInvocation runtime value bytes value begin + MemberReference MemberReference modifyCheck runtime getNil value begin value realSize	1
MethodDeclaration Modifier ReferenceType javaToRuby FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime BasicType value MethodInvocation Ruby long MemberReference ClassCreator javaToRuby runtime ReferenceType MemberReference Long value	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement static public CallSite ReferenceType BasicType index ReferenceType name Assignment MemberReference CallSite int String MemberReference MethodInvocation = ArraySelector MemberReference MemberReference name index	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation == MemberReference Literal MethodInvocation MemberReference MemberReference MemberReference MemberReference BinaryOperation CompatVersion RUBY1_8 context getRuntime value realSize 0 runtime getNil runtime ASCII value bytes value begin + MemberReference MemberReference value begin value realSize	1
MethodDeclaration Modifier BasicType write FormalParameter IOException ReturnStatement public int ReferenceType src MethodInvocation ByteBuffer MemberReference MemberReference write write src	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter ReturnStatement public short BasicType array BasicType offset Cast byte int BasicType BinaryOperation short | BinaryOperation BinaryOperation << BinaryOperation Literal & MemberReference Literal & MemberReference Literal 8 ArraySelector array 0xff ArraySelector array 0xff BinaryOperation BinaryOperation + MemberReference Literal + MemberReference Literal offset 1 offset 0	0
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression final public BasicType length MethodInvocation MethodInvocation int MemberReference modify length	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType MethodInvocation Ruby ThreadContext IRubyObject Block RubyRegexp MemberReference MethodInvocation nth_match matchNumber context MethodInvocation getCurrentScope MemberReference runtime	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement static public String ReferenceType l MethodInvocation Long String MemberReference valueOf l	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter ReturnStatement protected boolean ReferenceType method ReferenceType caller MethodInvocation DynamicMethod IRubyObject method isUndefined	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier ReferenceType ReturnStatement final public CallSite MemberReference runtimeCache ArraySelector Literal 1	0
MethodDeclaration Modifier Annotation ReferenceType LocalVariableDeclaration IfStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement name Literal compat MemberReference Ruby runtime MethodInvocation == MethodInvocation Literal ReturnStatement ReturnStatement "name" CompatVersion RUBY1_9 getRuntime null MethodInvocation MethodInvocation runtime getNil runtime MethodInvocation newString getName	0
MethodDeclaration Modifier ReferenceType str_to_c_strict FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private static IRubyObject ReferenceType context ReferenceType recv ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject RubyArray a MethodInvocation || MethodInvocation BinaryOperation LocalVariableDeclaration ThrowStatement a Literal eltInternal MemberReference MemberReference str_to_c_internal a MethodInvocation Literal eltInternal > MethodInvocation Literal ReferenceType VariableDeclarator MethodInvocation 0 context recv isNil 0 a MethodInvocation MethodInvocation MethodInvocation Literal eltInternal 0 IRubyObject s MethodInvocation context MethodInvocation getRuntime convertToString getByteList length 1 recv MemberReference Literal callMethod BinaryOperation newArgumentError context "inspect" + Literal MethodInvocation "invalid value for " s convertToString	1
MethodDeclaration Modifier Annotation ReferenceType getName ReturnStatement public Override String MethodInvocation nameNode getName	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter IOException StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType args ReferenceType unusedBlock Assignment Assignment This name Literal required Literal rest Literal frame Literal visibility MemberReference IRubyObject Block MemberReference Cast = MemberReference ClassCreator = "initialize" 1 true true Visibility PRIVATE ReferenceType MemberReference io ReferenceType ClassCreator RubyObject ArraySelector args ReferenceType MemberReference Literal Literal Literal false false 0	0
MethodDeclaration Modifier BasicType cmp FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement private int ReferenceType other BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement Literal RubyTime long millis MethodInvocation long millis_other MethodInvocation long MemberReference || BinaryOperation BinaryOperation ReturnStatement BinaryOperation BlockStatement 0 other other usec > MemberReference MemberReference && BinaryOperation BinaryOperation Literal || BinaryOperation BinaryOperation ReturnStatement millis millis_other == MemberReference MemberReference > MemberReference MemberReference 1 < MemberReference MemberReference && BinaryOperation BinaryOperation Literal millis millis_other usec millis millis_other == MemberReference MemberReference < MemberReference MemberReference - 1 millis millis_other usec	1
MethodDeclaration Modifier ReferenceType ReturnStatement public IR_Method MethodInvocation	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter Exception ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv MethodInvocation name Literal module Literal visibility MemberReference IRubyObject recv MethodInvocation getRuntime true Visibility PRIVATE MethodInvocation newString getDelimiter	1
MethodDeclaration Modifier ReferenceType each_line FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType block MethodInvocation ThreadContext Block MemberReference MethodInvocation MemberReference context context MethodInvocation MethodInvocation getRuntime block getGlobalVariables Literal get "$/"	1
MethodDeclaration Modifier Annotation ReferenceType LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair RubyString ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation name Literal String MethodInvocation Literal equals StatementExpression MethodInvocation getRuntime dt MethodInvocation getZone Assignment MemberReference newString MethodInvocation getShortName MemberReference Literal = dt getMillis	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MemberReference Literal getOperatorCallNode NilImplicitNode NIL "!"	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType obj MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject MemberReference MemberReference include_p CompatVersion RUBY1_9 context obj	1
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression StatementExpression synchronized public ReferenceType r Assignment MethodInvocation Assignment Runnable MemberReference Literal = r run MemberReference Literal = running true running false	0
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast Cast Cast Cast OpAsgnNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType Cast ReferenceType Cast ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals String ReferenceType MemberReference String ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation BinaryOperation Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation + Literal MemberReference + Literal MemberReference BinaryOperation BinaryOperation + Literal MemberReference - 4 yyTop 0 yyTop + Literal MemberReference + Literal MemberReference - 4 yyTop - 2 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType readall IOException BadDescriptorException LocalVariableDeclaration IfStatement synchronized public ByteList Modifier BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement final long fileSize TernaryExpression > MemberReference Literal StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression WhileStatement StatementExpression StatementExpression ReturnStatement MethodInvocation BlockStatement BlockStatement BinaryOperation Cast Literal fileSize 0 MethodInvocation ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation BlockStatement Assignment MethodInvocation MemberReference descriptor ReturnStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement WhileStatement ReturnStatement && MethodInvocation BinaryOperation ReferenceType MethodInvocation 0 ensureRead FileChannel channel Cast final long left BinaryOperation <= MemberReference Literal StatementExpression ReturnStatement > MemberReference MemberReference IfStatement ByteList result ClassCreator ByteBuffer buf MethodInvocation MemberReference copyBufferedBytes buf hasRemaining LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement StatementExpression MemberReference Literal = result MethodInvocation length result ClassCreator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference descriptor isSeekable instanceof MethodInvocation ReferenceType FileChannel descriptor getChannel ReferenceType MethodInvocation + BinaryOperation MethodInvocation left 0 Assignment Literal left Integer MAX_VALUE BinaryOperation BlockStatement BlockStatement ReferenceType Cast ByteBuffer MethodInvocation MethodInvocation Cast wrap buf Modifier BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation eof true buf position ReferenceType Literal checkReadable ByteList ClassCreator ByteList read MethodInvocation == MemberReference Literal StatementExpression ReturnStatement != MemberReference Literal StatementExpression StatementExpression descriptor getChannel FileChannel FileChannel descriptor getChannel - MemberReference MethodInvocation bufferedBytesAvailable MemberReference Literal = null != MethodInvocation Literal ThrowStatement ThrowStatement ByteList BasicType MemberReference result unsafeBytes result begin BasicType MemberReference final int BinaryOperation ByteBuffer tmp MethodInvocation > MethodInvocation MemberReference StatementExpression int n MethodInvocation <= MemberReference Literal BreakStatement buf MethodInvocation position ByteList 0 ReferenceType MemberReference fread read null Assignment MemberReference read null MethodInvocation Assignment fileSize channel position eof true getRuntime null MethodInvocation ClassCreator int left int left * BinaryOperation Literal buf duplicate tmp remaining MethodInvocation channel MemberReference read n 0 tmp position ByteList BUFSIZE MemberReference Literal = MemberReference append MemberReference MethodInvocation = MethodInvocation getRuntime ReferenceType Literal * Literal Literal 1024 tmp BinaryOperation limit tmp eof true read read MemberReference fread Literal newIOError IOException "File too 1 1024 + MethodInvocation MemberReference BUFSIZE "File too tmp position	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public RubyTime ReferenceType runtime ReferenceType dt BasicType usec ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby DateTime long RubyTime t ClassCreator t MemberReference setUSec t ReferenceType MemberReference MethodInvocation MemberReference usec RubyTime runtime runtime dt	0
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter ReturnStatement public Object ReferenceType context ReferenceType rubyObject MethodInvocation ThreadContext IRubyObject rubyObject ClassReference toJava ReferenceType Character	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Operand ReferenceType This Map TypeArgument TypeArgument ReferenceType ReferenceType Operand Operand	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast Cast Cast Cast OpAsgnNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType Cast ReferenceType Cast ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals String ReferenceType MemberReference String ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation BinaryOperation Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation + Literal MemberReference + Literal MemberReference BinaryOperation BinaryOperation + Literal MemberReference - 4 yyTop 0 yyTop + Literal MemberReference + Literal MemberReference - 4 yyTop - 2 yyTop - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType gsub_bang FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType block MethodInvocation name Literal frame Literal reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject Block MemberReference MemberReference MemberReference MemberReference Literal "gsub!" true BACKREF BACKREF CompatVersion RUBY1_8 context arg0 arg1 block true	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement StatementExpression final static public ReferenceType runtime ReferenceType io BasicType offset ReferenceType ary BasicType VariableDeclarator ForControl BlockStatement MethodInvocation Ruby MemoryIO long RubyArray int array ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression io MemberReference MemberReference Literal MemberReference put BasicType MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment offset array 0 array length int ary size int i Literal i array length MemberReference MethodInvocation = 0 ArraySelector array Util MethodInvocation int32Value MemberReference ary MemberReference entry i i	1
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType invocation ReferenceType buffer ReferenceType parameter MethodInvocation InvocationBuffer IRubyObject MethodInvocation MemberReference MemberReference marshal invocation buffer parameter	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MemberReference MemberReference MemberReference compile context expr	0
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration IfStatement ReturnStatement public RubyClass ReferenceType VariableDeclarator BinaryOperation ReturnStatement Assignment RubyClass clazz != Assignment Literal MemberReference MemberReference MethodInvocation = MemberReference MemberReference = null clazz MethodInvocation getJavaModule clazz Literal fastGetClass	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression private ReferenceType runtime ReferenceType name MethodInvocation Ruby String runtime MethodInvocation getWarnings MemberReference BinaryOperation warning ID + BinaryOperation Literal + Literal MemberReference " not initialized" variable " name	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public int ReferenceType enc BasicType bytes BasicType p BasicType end BasicType VariableDeclarator BinaryOperation StatementExpression Literal Encoding byte int int int l MethodInvocation > MemberReference Literal MethodInvocation - 1 MemberReference MemberReference MemberReference MemberReference preciseLength l 0 enc MemberReference MemberReference MemberReference mbcToCode enc bytes p end bytes p end	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement IfStatement LocalVariableDeclaration TryStatement final static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType src ReferenceType dst ReferenceType rbLength BinaryOperation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement CatchClause CatchClause CatchClause CatchClause CatchClause name Literal module Literal ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject instanceof MemberReference ReferenceType ThrowStatement instanceof MemberReference ReferenceType ThrowStatement Ruby runtime MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ReturnStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement true src RubyIO MethodInvocation dst MethodInvocation context getRuntime OpenFile openFile Cast openFile MemberReference openFile MemberReference checkReadable ChannelStream stream Cast ByteBuffer buffer Cast int count MethodInvocation > MemberReference MethodInvocation ThrowStatement < MemberReference MethodInvocation StatementExpression StatementExpression runtime MethodInvocation newFixnum PipeException ex MethodInvocation InvalidValueException ex MethodInvocation EOFException e MethodInvocation BadDescriptorException e MethodInvocation IOException e MethodInvocation context MethodInvocation getRuntime context MethodInvocation getRuntime ReferenceType MemberReference runtime runtime ReferenceType MethodInvocation ReferenceType MemberReference RubyNumeric MemberReference num2int count buffer remaining MethodInvocation count buffer remaining Assignment MethodInvocation stream MemberReference read runtime newErrnoEPIPEError runtime newErrnoEINVALError runtime Literal newFixnum runtime newErrnoEBADFError runtime MemberReference newIOErrorFromException Literal newTypeError Literal newTypeError RubyIO src ChannelStream openFile getMainStream dst rbLength runtime Literal newIndexError MemberReference MethodInvocation = buffer MemberReference limit buffer - 1 e "wrong argument (expected "wrong argument (expected count too for output buffer" buffer buffer duplicate count	1
MethodDeclaration Modifier FormalParameter StatementExpression private ReferenceType node MethodInvocation ClassVarAsgnNode sb MethodInvocation Literal append MethodInvocation append " " node getName	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement final public ByteList BasicType size Assignment int MemberReference ArrayCreator = ReferenceType MemberReference ByteList size	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType runtime ReferenceType ReferenceType VariableDeclarator Assignment MemberReference Ruby RubyClass RubyClass clazz ClassCreator MemberReference MemberReference = clazz ReferenceType MemberReference clazz ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR RubyClass runtime	0
MethodDeclaration Modifier StatementExpression StatementExpression public MethodInvocation MethodInvocation loadSelf metaclass	0
MethodDeclaration Modifier ReferenceType ReturnStatement public String MemberReference charset	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement private static RubyBoolean ReferenceType runtime ReferenceType TernaryExpression Ruby IRubyObject MethodInvocation MethodInvocation MethodInvocation isTrue runtime getTrue runtime getFalse	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType arg1 ReferenceType block ReturnStatement CatchClause CatchClause ThreadContext IRubyObject IRubyObject IRubyObject Block MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ThrowStatement MemberReference MemberReference MemberReference MemberReference MemberReference callBlock JumpException.BreakJump bj MethodInvocation JumpException.RetryJump rj MethodInvocation context caller self arg1 block MemberReference MemberReference handleBreakJump MemberReference retryJumpError context bj context	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod RubyArray MethodInvocation MethodInvocation Literal java_methods MethodInvocation javaClass false getDeclaredMethods	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation BinaryOperation newRaiseException MethodInvocation + Literal MemberReference Literal fastGetClass error - " message	0
MethodDeclaration Modifier ReferenceType setupCallArgs FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement ReturnStatement public List TypeArgument ReferenceType args ReferenceType s ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MemberReference ReferenceType Node IR_Scope List TypeArgument argsList ClassCreator argsList MethodInvocation add != MemberReference Literal StatementExpression StatementExpression argsList Operand ReferenceType ReferenceType s args null Assignment MethodInvocation Operand ArrayList TypeArgument MemberReference MethodInvocation = MemberReference MemberReference MemberReference buildArgs ReferenceType args MemberReference skipOverNewlines argsList args s Operand args	1
MethodDeclaration Modifier ReferenceType getBodyNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast Cast Literal new_call ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference null Node ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType op_equal FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement TernaryExpression name Literal ThreadContext IRubyObject Ruby runtime MethodInvocation || BinaryOperation BinaryOperation IfStatement IfStatement IfStatement ReturnStatement BinaryOperation BlockStatement IfStatement MethodInvocation MethodInvocation MethodInvocation "==" context getRuntime instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType BinaryOperation ReturnStatement BinaryOperation ReturnStatement MethodInvocation ReturnStatement MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement MemberReference MemberReference This runtime getTrue runtime getFalse other RubyFixnum other RubyBignum && MethodInvocation MethodInvocation MethodInvocation || BinaryOperation BinaryOperation MethodInvocation MemberReference MemberReference MemberReference MethodInvocation runtime getFalse other RubyFloat TernaryExpression instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement IfStatement ReturnStatement context other MemberReference MemberReference f_zero_p MemberReference MemberReference f_zero_p runtime getTrue instanceof MemberReference ReferenceType != Cast Literal runtime getFalse context num other runtime getTrue MethodInvocation MethodInvocation MethodInvocation other RubyRational ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation ReturnStatement MethodInvocation context num context other den RubyFixnum ReferenceType MemberReference 1 MemberReference MethodInvocation MemberReference runtime getTrue runtime getFalse RubyRational otherRational Cast && MethodInvocation MethodInvocation MethodInvocation && MethodInvocation MethodInvocation MethodInvocation runtime getFalse RubyFixnum den context MemberReference This f_to_f other ReferenceType MemberReference MemberReference MemberReference f_zero_p MemberReference MemberReference f_zero_p runtime getTrue MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference runtime getTrue context RubyRational other context num context otherRational num context num otherRational num context den otherRational den	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair RubyBoolean MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation newBoolean MethodInvocation javaClass isInterface	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public DynamicMethod ReferenceType implementationClass ReferenceType methodName ReferenceType arity ReferenceType visibility ReferenceType scope ReferenceType scriptObject ReferenceType callConfig MethodInvocation RubyModule String Arity Visibility Object CallConfiguration MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference implementationClass methodName arity visibility scope scriptObject callConfig	0
MethodDeclaration Modifier addMethodGuard FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement private ReferenceType m ReferenceType deoptLabel ReferenceType versionMap ReferenceType instrs ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IR_Method Label Map TypeArgument TypeArgument ListIterator String fullName MethodInvocation CodeVersion knownVersion MethodInvocation CodeVersion MethodInvocation || BinaryOperation BinaryOperation StatementExpression StatementExpression ReferenceType ReferenceType m versionMap MemberReference get m == MemberReference Literal != MemberReference MemberReference MethodInvocation MethodInvocation String CodeVersion fullName knownVersion null knownVersion instrs ClassCreator add versionMap MemberReference MemberReference put ReferenceType MethodInvocation MemberReference MethodInvocation MemberReference fullName m m m deoptLabel	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyModule ReferenceType context ReferenceType args MethodInvocation This name Literal rest Literal visibility MemberReference writes MemberReference ThreadContext IRubyObject MemberReference MemberReference MemberReference setVisibility "protected" true PRIVATE context args PROTECTED	0
MethodDeclaration Modifier BasicType intValue FormalParameter FormalParameter ReturnStatement final public int ReferenceType context ReferenceType obj Cast ThreadContext IRubyObject BasicType MethodInvocation int Util MemberReference uint32Value obj	1
MethodDeclaration Modifier FormalParameter ThrowStatement public BasicType MethodInvocation boolean ex	0
MethodDeclaration Modifier Annotation ReferenceType sum FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal ThreadContext MemberReference Literal context 16	0
MethodDeclaration Modifier BasicType getAddress ReturnStatement public long MemberReference address	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement private static IRubyObject ReferenceType context ReferenceType clazz ReferenceType num ReferenceType den ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference BlockStatement ClassCreator ThreadContext IRubyObject IRubyObject IRubyObject Ruby runtime MethodInvocation IRubyObject res MethodInvocation == MemberReference MethodInvocation StatementExpression StatementExpression BinaryOperation BlockStatement Numeric IfStatement ReferenceType MethodInvocation MemberReference MemberReference MemberReference context getRuntime MemberReference MemberReference MethodInvocation f_cmp res RubyFixnum MemberReference minus_one Assignment Assignment == MemberReference MethodInvocation ThrowStatement BinaryOperation ReturnStatement RubyRational context getRuntime clazz num den context den RubyFixnum MemberReference zero runtime MemberReference MethodInvocation = MemberReference MethodInvocation = res RubyFixnum MemberReference zero MethodInvocation && MethodInvocation MemberReference MemberReference runtime num MemberReference MemberReference f_negate den MemberReference MemberReference f_negate runtime runtime MemberReference MemberReference f_one_p canonicalization num context num context den context den	1
MethodDeclaration Modifier Annotation ReferenceType taint FormalParameter ReturnStatement public Override IRubyObject ReferenceType context This ThreadContext	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException MethodInvocation message Literal fastGetClass	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast Cast newWhenNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop 0 yyTop - 4 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType fileno ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime getNil	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter AssertStatement LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType args BinaryOperation ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject String IRubyObject != MemberReference Literal DynamicMethod method MethodInvocation MemberReference ReturnStatement method MemberReference MemberReference This MemberReference MemberReference call args null MemberReference searchMethod method MethodInvocation context self name args name RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference context self method getVisibility name CallType FUNCTIONAL args Block	1
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType home Assignment String MemberReference MethodInvocation = jrubyHome MemberReference home	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType value ReferenceType runtime MethodInvocation IRubyObject Ruby MemberReference MemberReference runtime value	1
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context BasicType value MethodInvocation ThreadContext int Util MethodInvocation MemberReference newUnsigned32 context getRuntime value	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context BasicType other MethodInvocation ThreadContext long MemberReference other	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public Operand ReferenceType ReferenceType m ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference MatchNode IR_Scope Variable ret MethodInvocation Operand regexp MethodInvocation m ClassCreator addInstr ret m getNewVariable MethodInvocation MemberReference build ReferenceType MemberReference MemberReference ArrayCreator m ret MethAddr ReferenceType ArrayInitializer Operand MemberReference regexp	0
MethodDeclaration Modifier ReferenceType slice_bang FormalParameter SwitchStatement public IRubyObject ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase IRubyObject args length Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 1 MethodInvocation 2 MethodInvocation MethodInvocation Literal MemberReference slice_bang MemberReference MemberReference slice_bang Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null ArraySelector args ArraySelector args ArraySelector args getRuntime args length 1 2 Literal Literal Literal 0 0 1	1
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType block MethodInvocation MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject Block parameter1 MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign rest MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign runtime context self runtime getNil block false runtime context self runtime getNil block false runtime context self runtime MemberReference block true IRubyObject	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Operand ReferenceType constDeclNode ReferenceType s ReferenceType val ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference ConstDeclNode IR_Scope Operand Node constNode MethodInvocation == MemberReference Literal StatementExpression BinaryOperation BlockStatement BlockStatement val constDeclNode constNode null MethodInvocation == MethodInvocation MemberReference LocalVariableDeclaration StatementExpression StatementExpression s MethodInvocation MemberReference constNode NodeType COLON2NODE ReferenceType VariableDeclarator MethodInvocation MethodInvocation constDeclNode getName val Operand module MethodInvocation s ClassCreator addInstr s ClassCreator addInstr Cast MemberReference build ReferenceType MemberReference MethodInvocation MemberReference ReferenceType MethodInvocation MethodInvocation MemberReference ReferenceType MemberReference s module constDeclNode getName val s constDeclNode getName val Colon2Node constNode	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int support Cast backrefAssignError yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean BinaryOperation == MemberReference Literal '\n'	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal getOperatorCallNode ReferenceType MemberReference "~" Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement ReturnStatement public boolean ReferenceType desc ReferenceType ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation BlockStatement Literal JavaMethodDescriptor MethodFactory JRubyMethod jrubyMethod MemberReference == MemberReference Literal Literal || BinaryOperation BinaryOperation LocalVariableDeclaration StatementExpression ReturnStatement false desc anno jrubyMethod null false == MethodInvocation MemberReference == MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation Literal jrubyMethod compat CompatVersion MethodInvocation MethodInvocation getRuntime jrubyMethod compat DynamicMethod MethodInvocation This MemberReference MemberReference define true getInstanceConfig This MemberReference getAnnotatedMethod desc desc	1
MethodDeclaration Modifier Annotation invalidateCacheDescendants StatementExpression SynchronizedStatement public Override SuperMethodInvocation MethodInvocation LocalVariableDeclaration IfStatement invalidateCacheDescendants runtime getHierarchyLock ReferenceType VariableDeclarator BinaryOperation ForStatement Set TypeArgument mySubclasses MemberReference != MemberReference Literal EnhancedForControl BlockStatement ReferenceType subclasses mySubclasses null VariableDeclaration MemberReference StatementExpression RubyClass ReferenceType VariableDeclarator mySubclasses MethodInvocation RubyClass subclass subclass invalidateCacheDescendants	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement protected LoadServiceResource ReferenceType namePlusSuffix ReferenceType loadPathEntry ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference String String LoadServiceResource foundResource Literal JarFile current MethodInvocation boolean isFileJarUrl BinaryOperation String after TernaryExpression String before TernaryExpression == Literal MemberReference TryStatement String canonicalEntry BinaryOperation != MemberReference Literal StatementExpression IfStatement foundResource null MemberReference get && MethodInvocation BinaryOperation MemberReference BinaryOperation Literal MemberReference MethodInvocation MemberReference null current IfStatement StatementExpression CatchClause CatchClause CatchClause + MemberReference MemberReference current null MethodInvocation BinaryOperation BlockStatement loadPathEntry loadPathEntry Literal startsWith != MethodInvocation Literal isFileJarUrl + MethodInvocation Literal "" isFileJarUrl loadPathEntry Literal MethodInvocation substring loadPathEntry MethodInvocation BlockStatement IfStatement MethodInvocation CatchClauseParameter IfStatement CatchClauseParameter CatchClauseParameter ThrowStatement after namePlusSuffix Literal BinaryOperation debugLogTry != MethodInvocation Literal TryStatement "file:" loadPathEntry Literal indexOf - 1 loadPathEntry BinaryOperation substring "/" 0 loadPathEntry Literal indexOf loadPathEntry Literal startsWith StatementExpression MethodInvocation BlockStatement BlockStatement MemberReference MemberReference put ZipException ignored MethodInvocation BlockStatement FileNotFoundException ignored IOException e MethodInvocation + BinaryOperation MemberReference current MemberReference getJarEntry null IfStatement StatementExpression CatchClause "!/" + MethodInvocation Literal "!/" Assignment loadPathEntry Literal endsWith StatementExpression StatementExpression loadPathEntry current runtime MethodInvocation getInstanceConfig StatementExpression StatementExpression runtime MemberReference newIOErrorFromException + MethodInvocation Literal canonicalEntry canonicalEntry MethodInvocation BlockStatement IfStatement MethodInvocation CatchClauseParameter ThrowStatement loadPathEntry Literal indexOf 2 MemberReference ClassCreator = ".jar" Assignment Assignment isVerbose MethodInvocation MethodInvocation e current getName "!/" loadPathEntry Literal endsWith StatementExpression MethodInvocation BlockStatement BlockStatement MemberReference debugLogFound MalformedURLException e MethodInvocation "!/" current ReferenceType MethodInvocation MemberReference ClassCreator = MemberReference ClassCreator = runtime MethodInvocation ignored MethodInvocation printStackTrace ".jar" Assignment loadPathEntry Literal startsWith StatementExpression StatementExpression foundResource runtime MemberReference newIOErrorFromException JarFile loadPathEntry Literal substring current ReferenceType MemberReference current ReferenceType MethodInvocation BinaryOperation println runtime MemberReference ClassCreator = "file:" Assignment Assignment e 4 JarFile loadPathEntry JarFile loadPathEntry Literal MethodInvocation substring + BinaryOperation Literal foundResource ReferenceType ClassCreator BinaryOperation MemberReference ClassCreator = MemberReference ClassCreator = 5 loadPathEntry Literal indexOf + Literal MemberReference ", stack trace follows:" LoadServiceResource ReferenceType BinaryOperation + Literal MemberReference foundResource ReferenceType ClassCreator BinaryOperation foundResource ReferenceType ClassCreator BinaryOperation "!/" trying to access " loadPathEntry URL + BinaryOperation MemberReference "/" namePlusSuffix LoadServiceResource ReferenceType BinaryOperation + BinaryOperation MemberReference LoadServiceResource ReferenceType BinaryOperation + MemberReference MemberReference + BinaryOperation Literal canonicalEntry URL + BinaryOperation MemberReference + MemberReference Literal namePlusSuffix URL + BinaryOperation MemberReference loadPathEntry namePlusSuffix + Literal MemberReference "!/" + BinaryOperation Literal canonicalEntry loadPathEntry "/" + BinaryOperation Literal namePlusSuffix "jar:file:" loadPathEntry + Literal MemberReference "!/" + Literal MethodInvocation "!/" before "jar:file:" loadPathEntry Literal substring 4	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement StatementExpression ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation MethodInvocation BlockStatement MethodInvocation MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation ctx BinaryOperation pattern MethodInvocation MemberReference Literal MemberReference callMethod LocalVariableDeclaration SynchronizedStatement ctx BinaryOperation runtime getNil MemberReference MemberReference checkArgs + MethodInvocation Literal isTrue ctx "===" larg ReferenceType VariableDeclarator MemberReference StatementExpression - MethodInvocation Literal runtime largs ctx 2 IRubyObject value MethodInvocation result MethodInvocation ctx 2 block MemberReference MemberReference yield result MemberReference append ctx larg value	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public Override Node ReferenceType ClassCreator Node ReferenceType MethodInvocation MethodInvocation MethodInvocation MethodInvocation Cast getPosition getReceiverNode getName getArgsNode ReferenceType MemberReference IterNode	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public RubyModule ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference Ruby RubyModule MethodInvocation runtime MemberReference ClassReference defineAnnotatedMethods runtime Literal ReferenceType RubyComparable	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType MethodInvocation TernaryExpression name Literal meta Literal IRubyObject IRubyObject recv MethodInvocation getRuntime MethodInvocation MethodInvocation MethodInvocation true MethodInvocation recv MethodInvocation getRuntime recv MethodInvocation getRuntime recv MethodInvocation getRuntime isTrue getTrue getFalse	1
MethodDeclaration Modifier BasicType IfStatement ReturnStatement public boolean BinaryOperation BlockStatement MethodInvocation && MethodInvocation BinaryOperation ReturnStatement || MemberReference BinaryOperation Literal != MemberReference Literal true null	0
MethodDeclaration Modifier BasicType FormalParameter IfStatement protected int ReferenceType key BinaryOperation ReturnStatement ReturnStatement Object == MemberReference Literal Literal MethodInvocation key null 0 key hashCode	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Long lexer MethodInvocation getCmdArgumentState begin	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override DynamicScope ClassCreator ReferenceType MemberReference MemberReference staticScope parent	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MemberReference name Literal reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject IRubyObject result MethodInvocation result isNil StatementExpression StatementExpression result "slice!" BACKREF BACKREF CompatVersion RUBY1_9 MemberReference MemberReference MemberReference op_aref19 MethodInvocation MethodInvocation context arg0 arg1 modifyCheck MemberReference MemberReference MemberReference MethodInvocation op_aset19 context arg0 arg1 RubyString MethodInvocation newEmptyString context getRuntime	1
MethodDeclaration Modifier FormalParameter RaiseException IfStatement protected ReferenceType file MethodInvocation BlockStatement String file Literal equals ThrowStatement "" MethodInvocation runtime BinaryOperation newLoadError + Literal MemberReference "No such file to load -- " file	1
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType DEFNNODE	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int lexer MemberReference setState yyVal LexState EXPR_FNAME	1
MethodDeclaration Modifier Annotation ReferenceType directory_p ReturnStatement public JRubyMethod ElementValuePair RubyBoolean MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation newBoolean stat isDirectory	1
MethodDeclaration Modifier load FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType runtime BasicType wrap ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference BlockStatement BlockStatement MethodInvocation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Ruby boolean RubyModule configModule MethodInvocation configModule ClassReference defineAnnotatedMethods RubyHash configHash MethodInvocation configModule Literal MemberReference defineConstant runtime MethodInvocation getObject String versionParts MethodInvocation MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal BinaryOperation setConfig MemberReference Literal BinaryOperation setConfig String normalizedHome Ruby isSecurityRestricted StatementExpression StatementExpression MemberReference Literal ClassCreator setConfig MemberReference Literal MethodInvocation setConfig MemberReference Literal MethodInvocation setConfig MemberReference Literal MethodInvocation setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MethodInvocation setConfig MemberReference Literal MethodInvocation setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MethodInvocation setConfig MemberReference Literal MemberReference setConfig String jrubyJarFile Literal URL jrubyPropertiesUrl MethodInvocation != MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig String libdir MethodInvocation == MemberReference Literal StatementExpression TryStatement String rubyLibDir ClassCreator String ClassCreator String ClassCreator String siteArchDir ClassCreator String archDir ClassCreator String shareDir ClassCreator MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal Literal setConfig MemberReference Literal MemberReference setConfig MemberReference Literal ClassCreator setConfig MemberReference Literal ClassCreator setConfig MemberReference Literal ClassCreator setConfig MemberReference Literal Literal setConfig Platform IS_WINDOWS StatementExpression StatementExpression runtime is1_9 StatementExpression RubyHash mkmfHash MethodInvocation MemberReference Literal MemberReference setConfig MemberReference Literal Literal setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal Literal setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal Literal setConfig MemberReference Literal ClassCreator setConfig MemberReference Literal ClassCreator setConfig MemberReference Literal ClassCreator setConfig MemberReference Literal ClassCreator setConfig MemberReference MemberReference runtime Literal ReferenceType RubyHash MemberReference configHash Literal MemberReference defineConstant Literal split configHash ArraySelector versionParts configHash ArraySelector versionParts configHash ArraySelector versionParts configHash + BinaryOperation MemberReference configHash + Literal MethodInvocation Assignment Assignment configHash MethodInvocation ReferenceType MemberReference Literal configHash configHash configHash configHash normalizedHome configHash normalizedHome configHash getOSName configHash System Literal getProperty configHash Platform configHash getOSName configHash Platform Ruby MethodInvocation getClassLoader jrubyPropertiesUrl null ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation BlockStatement configHash jrubyJarFile configHash jrubyJarFile configHash Constants BUILD configHash "target" Constants System Literal getProperty libdir null Assignment StatementExpression CatchClause MethodInvocation ReferenceType MemberReference Literal MethodInvocation ReferenceType MemberReference Literal MethodInvocation ReferenceType MemberReference Literal MethodInvocation ReferenceType MemberReference Literal MethodInvocation ReferenceType MemberReference Literal MethodInvocation ReferenceType MemberReference Literal configHash libdir configHash rubyLibDir configHash configHash configHash siteArchDir configHash archDir configHash archDir configHash "configure_args" "" configHash shareDir configHash MethodInvocation ReferenceType MemberReference Literal configHash MethodInvocation ReferenceType MemberReference Literal configHash MethodInvocation ReferenceType MemberReference Literal configHash "jar" MethodInvocation MethodInvocation MethodInvocation RubyHash MemberReference mkmfHash libdir mkmfHash "java" mkmfHash rubyLibDir mkmfHash mkmfHash mkmfHash "java" mkmfHash siteArchDir mkmfHash archDir mkmfHash archDir mkmfHash "configure_args" "" mkmfHash MethodInvocation ReferenceType MemberReference Literal mkmfHash MethodInvocation ReferenceType MemberReference Literal mkmfHash MethodInvocation ReferenceType MemberReference Literal mkmfHash MethodInvocation ReferenceType MemberReference Literal configModule mkmfHash runtime configModule Literal Literal Literal + MemberReference Literal ArraySelector versionParts System Literal getProperty MemberReference Literal = MemberReference MethodInvocation = getPath NormalizedFile normalizedHome "bin" "java.vendor" MemberReference getResource Pattern jarFile MethodInvocation Matcher jarMatcher MethodInvocation jarMatcher find jarMatcher matches StatementExpression MemberReference ClassCreator = Assignment CatchClauseParameter StatementExpression getPath NormalizedFile libdir getPath NormalizedFile libdir getPath NormalizedFile libdir getPath NormalizedFile libdir getPath NormalizedFile libdir getPath NormalizedFile normalizedHome getPath NormalizedFile normalizedHome getPath NormalizedFile normalizedHome getPath NormalizedFile normalizedHome "var" MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal ClassCreator setConfig runtime getPath NormalizedFile normalizedHome getPath NormalizedFile normalizedHome getPath NormalizedFile normalizedHome getPath NormalizedFile normalizedHome "var" 0 1 2 ArraySelector versionParts '.' Literal normalizedHome normalizedHome runtime Constants Pattern BinaryOperation compile jarFile MethodInvocation matcher Assignment libdir MethodInvocation ReferenceType MemberReference Literal MemberReference ClassCreator = IOException e Assignment configHash ".exe" configHash "" configHash MethodInvocation ReferenceType MemberReference Literal Literal 1 + Literal MemberReference jrubyPropertiesUrl toString MemberReference MethodInvocation = getPath NormalizedFile normalizedHome "lib" libdir MethodInvocation ReferenceType MemberReference MemberReference ClassCreator = getPath NormalizedFile shareDir 0 Constants jrubyJarFile jarMatcher Literal group getCanonicalPath NormalizedFile libdir libdir MethodInvocation ReferenceType MemberReference 1 getAbsolutePath NormalizedFile libdir	1
MethodDeclaration Modifier load FormalParameter FormalParameter IOException StatementExpression public Modifier ReferenceType runtime BasicType wrap MethodInvocation final Ruby boolean MemberReference runtime	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation ClassCreator newArrayNode Cast getPosition ReferenceType MethodInvocation Cast ReferenceType MemberReference Hash19Node getPosition ReferenceType MemberReference ListNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast ClassCreator Cast Literal new_call ReferenceType MemberReference ReferenceType Literal Cast ReferenceType MemberReference null Node ArraySelector yyVals Token "call" ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation Node ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference - 2 yyTop + Literal MemberReference 0 yyTop - 2 yyTop	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression public ReferenceType clazz ReferenceType name ReferenceType self ReferenceType block ReferenceType staticScope ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation MethodInvocation RubyModule String IRubyObject Block RubyModule implementationClass MethodInvocation == MemberReference Literal StatementExpression MemberReference MemberReference MemberReference MemberReference MethodInvocation MemberReference staticScope getModule implementationClass null Assignment clazz name self block staticScope implementationClass MemberReference MemberReference = implementationClass clazz	1
MethodDeclaration Modifier BasicType bufferedBytesAvailable ReturnStatement private final int BinaryOperation + MethodInvocation TernaryExpression buffer remaining BinaryOperation Literal Literal && MemberReference BinaryOperation 1 0 reading != MemberReference Literal ungotc - 1	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self MethodInvocation name Literal module Literal ThreadContext IRubyObject MemberReference MemberReference MemberReference true context self Block	0
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression public ReferenceType runtime ReferenceType cache ReferenceType ReferenceType value ReferenceType VariableDeclarator MethodInvocation Ruby StructLayout ReferenceType IRubyObject IRubyObject ByteList bl MethodInvocation MethodInvocation MemberReference getMemoryIO value MethodInvocation convertToString MemberReference MethodInvocation MethodInvocation MethodInvocation getByteList offset bl unsafeBytes bl begin Math MethodInvocation BinaryOperation min bl length - MemberReference Literal length 1	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType MethodInvocation MemberReference MemberReference ">=" CompatVersion RUBY1_9 other RubyFixnum RubyBoolean MethodInvocation BinaryOperation newBoolean context other context getRuntime >= MemberReference Cast value ReferenceType MemberReference RubyFixnum other	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast newArrayNode ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType ReturnStatement public MemberReference staticScope	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement Assignment MemberReference Object Object int != Cast Literal StatementExpression MemberReference Cast = yyVal ReferenceType MemberReference null Cast yyVal ReferenceType MemberReference Node ArraySelector yyVals ReferenceType Cast Node ArraySelector yyVals BinaryOperation ISourcePositionHolder ReferenceType MemberReference BinaryOperation + Literal MemberReference Node ArraySelector yyVals + Literal MemberReference - 1 yyTop BinaryOperation - 1 yyTop + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context BasicType value MethodInvocation ThreadContext long context MethodInvocation getRuntime getNil	1
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType context ReferenceType buffer ReferenceType parameter MethodInvocation ThreadContext InvocationBuffer IRubyObject buffer MethodInvocation putLong Util MemberReference int64Value parameter	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override Arity MemberReference Arity	0
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration StatementExpression static ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Ruby RubyClass MethodInvocation ClassReference defineAnnotatedMethods runtime Literal MethodInvocation MemberReference defineClass ReferenceType "BasicSocket" runtime	1
MethodDeclaration Modifier ReferenceType getFile ReturnStatement public String MemberReference file	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyString ReferenceType context BinaryOperation BlockStatement This name Literal compat MemberReference ThreadContext > MemberReference Literal StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement CompatVersion RUBY1_9 value realSize 1 MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement modifyAndKeepCodeRange byte bytes MemberReference int p MemberReference int len MemberReference Encoding enc MemberReference MemberReference singleByteOptimizable ForStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement StatementExpression IfStatement value bytes value begin value realSize value encoding enc ForControl BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement Assignment BinaryOperation StatementExpression VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression StatementExpression int end BinaryOperation int op MemberReference byte obytes ArrayCreator boolean single Literal < MemberReference MemberReference LocalVariableDeclaration IfStatement MemberReference MemberReference = == MethodInvocation MemberReference MethodInvocation BasicType VariableDeclarator < MemberReference BinaryOperation ++ i BasicType VariableDeclarator Assignment Assignment + MemberReference MemberReference len BasicType MemberReference true p end BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement value bytes obytes getCodeRange CR_UNKNOWN TernaryExpression setCodeRange int i Literal i >> MemberReference Literal byte b MemberReference MemberReference MemberReference = MemberReference MemberReference = p len byte len int cl MethodInvocation || BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference MemberReference 0 len 1 ArraySelector bytes ArraySelector bytes ArraySelector bytes ArraySelector bytes b StringSupport MemberReference MemberReference MemberReference MemberReference length > MemberReference Literal != BinaryOperation Literal Assignment Assignment MethodInvocation Assignment Assignment single CR_7BIT CR_VALID BinaryOperation BinaryOperation BinaryOperation BinaryOperation enc bytes p end cl 1 & MemberReference Literal 0 MemberReference Literal = MemberReference MemberReference -= System MemberReference MemberReference MemberReference MemberReference MemberReference arraycopy MemberReference MemberReference += MemberReference MemberReference = + MemberReference MemberReference + MemberReference MemberReference - BinaryOperation Literal - BinaryOperation Literal ArraySelector bytes 0x80 single false op cl bytes p obytes op cl p cl ArraySelector obytes ArraySelector bytes p i p i - BinaryOperation MemberReference 1 - BinaryOperation MemberReference 1 MemberReference MemberReference MemberReference + MemberReference MemberReference i + MemberReference MemberReference i p -- op ++ p p len p len	1
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public String BasicType i ReferenceType o ReferenceType o2 ReferenceType Literal long Object Object Object	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType step ReferenceType block ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement This ThreadContext IRubyObject Block Ruby runtime MethodInvocation && BinaryOperation BinaryOperation StatementExpression BinaryOperation BlockStatement IfStatement context getRuntime && BinaryOperation BinaryOperation instanceof MemberReference ReferenceType MethodInvocation || BinaryOperation BinaryOperation StatementExpression BinaryOperation BlockStatement BlockStatement instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType step RubyFixnum MemberReference MemberReference Cast MemberReference || BinaryOperation BinaryOperation instanceof MemberReference ReferenceType MethodInvocation || BinaryOperation MethodInvocation StatementExpression LocalVariableDeclaration IfStatement begin RubyFixnum end RubyFixnum context runtime ReferenceType MemberReference block instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType step RubyFloat RubyNumeric MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference || BinaryOperation MethodInvocation ! MethodInvocation MemberReference MemberReference Literal checkIntegerType MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement RubyFixnum step begin RubyFloat end RubyFloat context runtime begin end step isExclusive block instanceof MemberReference ReferenceType ! MethodInvocation MemberReference MemberReference Literal checkIntegerType isNil runtime end "to_int" MemberReference MemberReference MemberReference MemberReference IRubyObject tmp MethodInvocation ! tmp isNil LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement StatementExpression begin RubyNumeric isNil runtime begin "to_int" context runtime step block begin checkStringType ReferenceType VariableDeclarator ReferenceType VariableDeclarator Cast MethodInvocation ThrowStatement MethodInvocation StepBlockCallBack ClassCreator Block blockCallback MethodInvocation ReferenceType MemberReference ! begin Literal respondsTo MethodInvocation MemberReference ClassCreator rangeEach ReferenceType MemberReference MethodInvocation MemberReference This MethodInvocation MethodInvocation MemberReference MemberReference RubyString tmp "succ" runtime BinaryOperation newTypeError context ReferenceType MemberReference MethodInvocation MemberReference StepBlockCallBack block RubyFixnum MemberReference one step runtime getRange Arity singleArgument context + Literal MethodInvocation StepBlockCallBack block RubyFixnum MemberReference one step runtime "can't iterate from " begin MethodInvocation getMetaClass runtime getName	1
MethodDeclaration Modifier call FormalParameter StatementExpression StatementExpression public ReferenceType context MethodInvocation MethodInvocation BodyCompiler MemberReference MemberReference Literal compile context pollThreadEvents value context true	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean MethodInvocation m	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject Type context MethodInvocation getRuntime MemberReference MethodInvocation Literal context MethodInvocation getRuntime out of ArrayCreator ReferenceType ArrayInitializer IRubyObject MemberReference MemberReference arg0 arg1	0
MethodDeclaration Modifier setMethodAdapter FormalParameter StatementExpression public ReferenceType Assignment SkinnyMethodAdapter This MemberReference = MemberReference method	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement final public RubyRegexp ReferenceType runtime ReferenceType name BasicType options MethodInvocation Ruby String int runtimeCache MemberReference Literal MemberReference MemberReference runtime 7 name options	0
MethodDeclaration Modifier dup StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference DUP	0
MethodDeclaration Modifier init FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression protected ReferenceType implementationClass ReferenceType visibility ReferenceType callConfig Assignment Assignment Assignment Assignment Assignment RubyModule Visibility CallConfiguration This MemberReference = This MemberReference = This MethodInvocation = This MemberReference = This MethodInvocation = MemberReference visibility MemberReference implementationClass MemberReference MemberReference MemberReference callConfig MemberReference implementationClass MethodInvocation getRuntime visibility implementationClass implementationClass callConfig	1
MethodDeclaration Modifier Annotation ReferenceType LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement public SuppressWarnings Literal String ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MemberReference "unchecked" RubyHash hash Cast int i Literal String env ArrayCreator VariableDeclaration MethodInvocation MemberReference LocalVariableDeclaration StatementExpression env ReferenceType MethodInvocation 0 ReferenceType MethodInvocation ReferenceType VariableDeclarator iter hasNext ++ i ReferenceType VariableDeclarator Assignment RubyHash runtime MethodInvocation getObject String hash size Iterator TypeArgument iter MethodInvocation Map ReferenceType entry MethodInvocation MemberReference BinaryOperation = Literal fastGetConstant ReferenceType hash MethodInvocation Entry TypeArgument TypeArgument iter next ArraySelector env + BinaryOperation MethodInvocation Entry TypeArgument TypeArgument iterator ReferenceType ReferenceType MemberReference + MethodInvocation Literal entry MethodInvocation getValue ReferenceType ReferenceType Object Object i entry MethodInvocation getKey "=" toString Object Object toString	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression final public BasicType offset BasicType size BasicType value MethodInvocation long long byte BinaryOperation MemberReference MemberReference + MemberReference MemberReference size value address offset	0
MethodDeclaration Modifier assignLocalVariable FormalParameter FormalParameter FormalParameter IfStatement public BasicType index BasicType depth BasicType expr BinaryOperation BlockStatement BlockStatement int int boolean == MemberReference Literal StatementExpression StatementExpression depth 0 MethodInvocation MethodInvocation MemberReference MemberReference assignLocalVariable MemberReference MemberReference MemberReference index expr depth index expr	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation ArrayNode Cast getPosition ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public Deprecated IRubyObject ReferenceType scriptNode BasicType MethodInvocation Node boolean MemberReference scriptNode	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime MemberReference newBoolean isNaN	1
MethodDeclaration Modifier Annotation ReferenceType closed_p ReturnStatement public JRubyMethod ElementValuePair IRubyObject TernaryExpression name ElementArrayValue MemberReference MethodInvocation MethodInvocation Literal Literal closed MethodInvocation getRuntime MethodInvocation getRuntime "closed?" getTrue getFalse	1
MethodDeclaration Modifier Annotation ReferenceType assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration AssertStatement LocalVariableDeclaration StatementExpression ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value ReferenceType BasicType checkArity ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block boolean IRubyObject receiver MethodInvocation IRubyObject MethodInvocation MemberReference MemberReference CallSite MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference call runtime getNil MemberReference MemberReference MemberReference MemberReference arg1 MemberReference MemberReference MemberReference MemberReference receiver receiver MemberReference MemberReference context self receiver value runtime context self runtime context self self receiver	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement protected JavaCallable ReferenceType self ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference IRubyObject String IRubyObject IRubyObject IRubyObject IRubyObject JavaCallable callable == Assignment Literal LocalVariableDeclaration IfStatement StatementExpression IfStatement callable MemberReference MemberReference = null ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement callable javaCallable JavaCallable callablesForArity Literal || BinaryOperation BinaryOperation ThrowStatement MemberReference MethodInvocation = != MethodInvocation Literal ThrowStatement null <= MemberReference Literal == Assignment Literal MethodInvocation callable CallableSelector MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference callable MemberReference getParameterTypes 4 MethodInvocation javaCallables length 4 MemberReference MemberReference = null self MethodInvocation getRuntime self cache callablesForArity arg0 arg1 arg2 arg3 length self MethodInvocation getRuntime callablesForArity ArraySelector javaCallables Literal BinaryOperation newArgumentError Literal MethodInvocation newArgumentError Literal 4 - MemberReference Literal 4 callable MemberReference getParameterTypes 4 javaCallables length 1 length	1
MethodDeclaration Modifier Annotation ReferenceType get ReturnStatement public Override IRubyObject MethodInvocation RuntimeHelpers MemberReference MethodInvocation runtime runtime getCurrentContext	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Operand ReferenceType globalAsgnNode ReferenceType m ReferenceType VariableDeclarator MethodInvocation MemberReference GlobalAsgnNode IR_Scope Operand value MethodInvocation m ClassCreator addInstr value MethodInvocation MemberReference build ReferenceType MethodInvocation MemberReference globalAsgnNode getValueNode m globalAsgnNode getName value	0
MethodDeclaration Modifier Annotation ReferenceType eof ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name ElementArrayValue MethodInvocation getRuntime Literal Literal MethodInvocation newBoolean	0
MethodDeclaration Modifier LocalVariableDeclaration StatementExpression IfStatement StatementExpression StatementExpression private ReferenceType VariableDeclarator Assignment BinaryOperation StatementExpression MethodInvocation Assignment StringBuilder temp MemberReference MemberReference MemberReference = && BinaryOperation BinaryOperation MethodInvocation temp Literal setLength MemberReference MemberReference = lineBuffer != MemberReference Literal > MethodInvocation Literal list MethodInvocation add 0 lineBuffer temp list null lineBuffer length 0 toString	1
MethodDeclaration Modifier Annotation ReferenceType assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value ReferenceType block BasicType checkArity BinaryOperation BlockStatement MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block boolean instanceof MemberReference ReferenceType StatementExpression MemberReference MemberReference MemberReference This Cast MemberReference value RubyArray Assignment runtime context self ReferenceType MemberReference checkArity MemberReference MethodInvocation = RubyArray value value MemberReference MemberReference BinaryOperation runtime value != MemberReference Literal pre null	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType method Assignment DynamicMethod MemberReference MemberReference = method	0
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter IfStatement public ReferenceType context ReferenceType buffer ReferenceType value MethodInvocation BlockStatement IfStatement ThreadContext InvocationBuffer IRubyObject value isNil StatementExpression BinaryOperation BlockStatement BlockStatement MethodInvocation || BinaryOperation MethodInvocation StatementExpression ThrowStatement buffer Literal instanceof MemberReference ReferenceType value Literal respondsTo MethodInvocation MethodInvocation 0 value RubyProc "call" MemberReference MemberReference MemberReference context MethodInvocation getRuntime context buffer value Literal newTypeError "wrong argument callable object"	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override BigInteger MethodInvocation BigInteger Cast valueOf BasicType MemberReference long value	0
MethodDeclaration FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression StatementExpression ReferenceType table ReferenceType name ReferenceType value BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl Statement Assignment Assignment VariableTableEntry String Object int index int hash MethodInvocation VariableTableEntry e Assignment BinaryOperation Assignment MemberReference ClassCreator = MemberReference MemberReference = name hashCode MemberReference MemberReference = != MemberReference Literal MemberReference MemberReference = e ReferenceType MemberReference MemberReference MemberReference MemberReference ArraySelector table e e ArraySelector table e null e e next VariableTableEntry hash name value ArraySelector table MemberReference Assignment MemberReference index MemberReference BinaryOperation = index index & MemberReference BinaryOperation hash - MemberReference Literal table length 1	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean ConstNode constNode Cast context MethodInvocation ! expr MethodInvocation ReferenceType MemberReference constNode getName context consumeCurrentValue ConstNode node	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration ForStatement IfStatement IfStatement ReturnStatement public Operand Modifier ReferenceType argsNode ReferenceType s Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator MethodInvocation BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement BinaryOperation StatementExpression BinaryOperation BlockStatement Literal final ArgsNode IR_Scope final int required MethodInvocation final int opt MethodInvocation final int rest MethodInvocation s ClassCreator addInstr int argIndex Literal ListNode preArgs MethodInvocation VariableDeclaration BinaryOperation MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression != MethodInvocation Literal MethodInvocation || BinaryOperation BinaryOperation LocalVariableDeclaration ForStatement IfStatement null argsNode getRequiredArgsCount argsNode getOptionalArgsCount argsNode getRestArg ReferenceType MethodInvocation Literal 1 argsNode getPre BasicType VariableDeclarator < MemberReference MemberReference ++ i ++ argIndex ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation argsNode getBlock null s ClassCreator addInstr > MemberReference Literal > MemberReference Literal ReferenceType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement RECV_ARG_Instr s 0 int i Literal i required ArgumentNode a Cast instanceof MemberReference ReferenceType LocalVariableDeclaration StatementExpression s ClassCreator addInstr ReferenceType ClassCreator opt 0 rest - 1 ListNode optArgs MethodInvocation VariableDeclaration BinaryOperation MemberReference MemberReference LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression > MemberReference Literal StatementExpression StatementExpression 0 ReferenceType MethodInvocation a TypedArgumentNode ReferenceType VariableDeclarator MethodInvocation ReferenceType ClassCreator MemberReference ReferenceType MethodInvocation argsNode getOptArgs BasicType VariableDeclarator < MemberReference MemberReference ++ j ++ argIndex ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation rest - 1 MethodInvocation MemberReference ArgumentNode preArgs MemberReference get TypedArgumentNode t Cast s ClassCreator addInstr RECV_ARG_Instr ReferenceType MethodInvocation argIndex Variable argsNode MethodInvocation getBlock int j Literal j opt Label l MethodInvocation LocalAsgnNode n Cast s ClassCreator addInstr MemberReference MemberReference build s ClassCreator addInstr s ClassCreator addInstr ++ argIndex i ReferenceType MemberReference ReferenceType MemberReference MethodInvocation Variable a getName getName 0 s ReferenceType MethodInvocation ReferenceType ClassCreator MemberReference MemberReference n s ReferenceType MemberReference ReferenceType ClassCreator MemberReference Literal TypedArgumentNode a argIndex MethodInvocation LocalAsgnNode optArgs MemberReference get ReferenceType MethodInvocation argIndex l LABEL_Instr l RECV_ARG_Instr ReferenceType MethodInvocation argIndex true t j Variable n getName Variable argsNode MethodInvocation getName	1
MethodDeclaration Modifier BasicType isOpen ReturnStatement public boolean BinaryOperation || BinaryOperation BinaryOperation != MemberReference Literal != MemberReference Literal null null	0
MethodDeclaration Modifier Annotation ReferenceType get LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference IRubyObject MethodInvocation IRubyObject backtrace TernaryExpression instanceof MemberReference ReferenceType StatementExpression backtrace runtime MethodInvocation getGlobalVariables MethodInvocation MethodInvocation MethodInvocation backtrace RubyArray Assignment Literal get isNil runtime getNil MethodInvocation Literal callMethod MemberReference MethodInvocation = "$!" MethodInvocation getRuntime backtrace runtime getNil getCurrentContext	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast new_super ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType op_equal FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType recv ReferenceType rhs Cast name ElementArrayValue IRubyObject IRubyObject ReferenceType MethodInvocation Literal JavaObject recv dataGetStruct "=="	1
MethodDeclaration Modifier Annotation ReferenceType string IfStatement public JRubyMethod ElementValuePair IRubyObject BinaryOperation BlockStatement BlockStatement name Literal == MemberReference Literal ReturnStatement ReturnStatement "string" internal null MethodInvocation MemberReference MethodInvocation getRuntime internal getNil	0
MethodDeclaration Modifier Annotation ReferenceType to_s FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod RubyString ReferenceType arg0 BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation IRubyObject int base MethodInvocation || BinaryOperation BinaryOperation ThrowStatement MethodInvocation getRuntime MemberReference num2int < MemberReference Literal > MemberReference Literal MethodInvocation MethodInvocation newString arg0 base 2 base 36 MethodInvocation getRuntime Convert2 MemberReference MemberReference BinaryOperation newArgumentError value base + Literal MemberReference "illegal radix " base	1
MethodDeclaration Modifier visit FormalParameter IfStatement LocalVariableDeclaration ForStatement public ReferenceType MemberReference BlockStatement IfStatement ReferenceType VariableDeclarator ForControl BlockStatement USE_PACKED_ARRAY LocalVariableDeclaration IfStatement MemberReference BlockStatement VariableTableEntry table MemberReference VariableDeclaration BinaryOperation ForStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement USE_PACKED_FIELDS IfStatement vTable BasicType VariableDeclarator >= MemberReference Literal ForControl BlockStatement Object table MemberReference != MemberReference Literal ForStatement ReturnStatement BinaryOperation BlockStatement int i MemberReference -- i 0 VariableDeclaration BinaryOperation Assignment LocalVariableDeclaration IfStatement StatementExpression packedVTable table null ForControl BlockStatement != MemberReference Literal StatementExpression ReturnStatement table length ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression packedVFields null MethodInvocation VariableTableEntry e MemberReference e null e e next Object readValue MemberReference == MemberReference Literal SynchronizedStatement MemberReference MemberReference visit BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation packedVFields MemberReference visit ArraySelector table e value readValue null MemberReference StatementExpression e name readValue int i Literal i vTableSize Cast MemberReference visit MemberReference object Assignment 0 ReferenceType MemberReference ArraySelector table i MemberReference MemberReference = String ArraySelector table BinaryOperation readValue e value MemberReference + MemberReference MemberReference i i MAX_PACKED	1
MethodDeclaration Modifier Annotation ReferenceType newInstanceBang FormalParameter FormalParameter FormalParameter FormalParameter IfStatement IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType real ReferenceType image BinaryOperation StatementExpression BinaryOperation StatementExpression ClassCreator name Literal meta Literal visibility MemberReference ThreadContext IRubyObject IRubyObject IRubyObject instanceof MemberReference ReferenceType Assignment instanceof MemberReference ReferenceType Assignment ReferenceType MethodInvocation MemberReference MemberReference MemberReference true Visibility PRIVATE real RubyNumeric MemberReference MethodInvocation = image RubyNumeric MemberReference MethodInvocation = RubyComplex context getRuntime recv real image real MemberReference MemberReference f_to_i image MemberReference MemberReference f_to_i context real context image	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public RubyString ReferenceType runtime ReferenceType bytes ReferenceType enc BasicType cr MethodInvocation Ruby ByteList Encoding int MemberReference MethodInvocation MemberReference MemberReference MemberReference runtime runtime getString bytes enc cr	0
MethodDeclaration Modifier BasicType FormalParameter ForStatement ReturnStatement private boolean Modifier ReferenceType name ForControl BlockStatement Literal final String VariableDeclaration BinaryOperation Assignment IfStatement false ReferenceType VariableDeclarator != MemberReference Literal MemberReference MethodInvocation = MethodInvocation BlockStatement RubyModule p This p null p p getSuperClass p MemberReference ReturnStatement name Literal true	0
MethodDeclaration Modifier BasicType isEmpty ReturnStatement public boolean Literal false	0
MethodDeclaration Modifier FormalParameter IfStatement public ReferenceType operand MethodInvocation BlockStatement IfStatement Operand operand isConstant StatementExpression BinaryOperation BlockStatement MethodInvocation instanceof MemberReference ReferenceType StatementExpression Cast operand Variable MethodInvocation ReferenceType MemberReference Cast operand ReferenceType MemberReference Variable operand	0
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration StatementExpression StatementExpression static ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby RubyClass rb_cUNIXServer MethodInvocation runtime MethodInvocation getObject rb_cUNIXServer ClassReference defineAnnotatedMethods runtime Literal MethodInvocation MemberReference defineClass Literal MemberReference fastSetConstant ReferenceType runtime Literal fastGetClass rb_cUNIXServer "UNIXSocket"	1
MethodDeclaration Modifier Annotation ReferenceType dup ReturnStatement final public Override DynamicMethod This	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod IRubyObject ReferenceType context ReferenceType log BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject < MethodInvocation Literal StatementExpression context MethodInvocation getRuntime INSTANCE MemberReference MethodInvocation 0 MethodInvocation Literal newFixnum fd RubyNumeric MemberReference fix2int MethodInvocation Literal 0 log context getRuntime	0
MethodDeclaration Modifier setReadBuffered StatementExpression public Assignment MemberReference MemberReference |= mode	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ThrowStatement public Override Object ReferenceType ClassCreator NodeVisitor ReferenceType Literal UnsupportedOperationException "Not supported	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType MethodInvocation createList Node getValueNode	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JavaProxyMethod ReferenceType proxyClass ReferenceType name ReferenceType desc BasicType MethodInvocation JavaProxyClass String String boolean proxyClass MemberReference MemberReference MemberReference initMethod name desc	0
MethodDeclaration Modifier Annotation ReferenceType to_f IfStatement IfStatement IfStatement IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation BlockStatement MethodInvocation BlockStatement MethodInvocation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation name Literal isNaN ReturnStatement isInfinity ReturnStatement isZero ReturnStatement > MethodInvocation MemberReference SwitchStatement < MethodInvocation MemberReference ReturnStatement RubyFloat MethodInvocation MethodInvocation newFloat "to_f" MethodInvocation MethodInvocation MethodInvocation - value scale RubyFloat MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase - value scale RubyFloat MethodInvocation getRuntime value doubleValue RubyFloat MethodInvocation MemberReference newFloat RubyFloat MethodInvocation TernaryExpression newFloat RubyFloat MethodInvocation TernaryExpression newFloat value signum Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement RubyFloat MethodInvocation Literal newFloat getRuntime Double NaN getRuntime BinaryOperation MemberReference MemberReference getRuntime BinaryOperation Literal Literal - 1 MethodInvocation 0 MethodInvocation 1 MethodInvocation getRuntime 0 < MemberReference Literal Double NEGATIVE_INFINITY Double POSITIVE_INFINITY < MemberReference Literal - 0.0 0.0 RubyFloat MethodInvocation MemberReference newFloat RubyFloat MethodInvocation Literal newFloat RubyFloat MethodInvocation MemberReference newFloat infinitySign 0 0 getRuntime Double NEGATIVE_INFINITY getRuntime 0 getRuntime Double POSITIVE_INFINITY	1
MethodDeclaration Modifier ReferenceType callBlock FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType arg1 ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject Block RubyClass selfType MethodInvocation MemberReference MemberReference ReturnStatement MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference cache selfType MethodInvocation caller selfType block context self arg1 context self MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self selfType methodName arg1 block	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement static public IRubyObject ReferenceType receiver ReferenceType ReferenceType arg0 ReferenceType value ReferenceType context ReferenceType caller MethodInvocation MemberReference IRubyObject CallSite IRubyObject IRubyObject ThreadContext IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference call value context caller receiver arg0 value	0
MethodDeclaration Modifier FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration ForStatement IfStatement LocalVariableDeclaration IfStatement StatementExpression protected static ReferenceType rubyMod Modifier ReferenceType cls ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator EnhancedForControl BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation RubyModule final Class Ruby ruby MethodInvocation rubyMod MethodInvocation Class interfaces MethodInvocation VariableDeclaration MemberReference StatementExpression && BinaryOperation MethodInvocation ReturnStatement RubyModule rubySing MethodInvocation cls isArray StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference MemberReference rubyMod getRuntime cls getCanonicalName cls getInterfaces ReferenceType VariableDeclarator interfaces MethodInvocation != MethodInvocation Literal ! Modifier MethodInvocation isPublic rubyMod MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation rubyMod rubySing cls Class ifc rubyMod MethodInvocation includeModule cls null cls getModifiers MemberReference MemberReference MemberReference MemberReference Literal MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference rubyMod cls rubyMod cls true rubySing cls rubySing rubyMod cls ruby ifc	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Future MemberReference	0
MethodDeclaration Modifier ReferenceType yyName FormalParameter IfStatement LocalVariableDeclaration IfStatement ReturnStatement final static public String BasicType token BinaryOperation ReturnStatement ReferenceType VariableDeclarator BinaryOperation ReturnStatement Literal int || BinaryOperation BinaryOperation Literal String name != Assignment Literal MemberReference < MemberReference Literal > MemberReference MemberReference MemberReference MemberReference = null name token 0 token yyNames length name ArraySelector yyNames MemberReference token	1
MethodDeclaration Modifier ReferenceType newSigned8 FormalParameter FormalParameter StatementExpression ReturnStatement final static public IRubyObject ReferenceType runtime BasicType value Assignment MethodInvocation Ruby int MemberReference Literal &= runtime TernaryExpression newFixnum value 0xff BinaryOperation MemberReference BinaryOperation < MemberReference Literal value + Literal BinaryOperation value 0x80 - 0x80 - MemberReference Literal value 0x80	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement final public byte BasicType offset MethodInvocation long BinaryOperation + MemberReference MemberReference address offset	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter IfStatement ReturnStatement private static float ReferenceType runtime ReferenceType o BinaryOperation BlockStatement Cast Ruby IRubyObject instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement BasicType MethodInvocation o RubyString ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement BlockStatement float RubyKernel MethodInvocation MemberReference MemberReference String str MethodInvocation float f Cast str Literal matches ReturnStatement ThrowStatement o o o asJavaString BasicType MethodInvocation MemberReference MethodInvocation float RubyNumeric MethodInvocation num2dbl f runtime Literal newTypeError o item not a	0
MethodDeclaration Modifier BasicType FormalParameter LocalVariableDeclaration ReturnStatement private static final int ReferenceType buffer BasicType VariableDeclarator BinaryOperation Buffer int f MethodInvocation | TernaryExpression TernaryExpression buffer BinaryOperation MemberReference Literal BinaryOperation MemberReference Literal != BinaryOperation Literal ArrayFlags IN 0 != BinaryOperation Literal ArrayFlags 0 & MemberReference MemberReference 0 & MemberReference MemberReference 0 f Buffer IN f Buffer	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair RubyBoolean ReferenceType context MethodInvocation TernaryExpression name Literal ThreadContext check MethodInvocation MethodInvocation MethodInvocation isMatched context MethodInvocation getRuntime context MethodInvocation getRuntime getTrue getFalse	1
MethodDeclaration Modifier BasicType hasNext ReturnStatement public boolean BinaryOperation != MemberReference Literal entry null	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType runtime ReferenceType ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby RubyClass instance ClassCreator instance MemberReference instance ReferenceType MemberReference MemberReference runtime	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair RubyArray ReferenceType args MethodInvocation name Literal optional Literal compat MemberReference IRubyObject MemberReference MemberReference Literal Literal instance_methods 1 CompatVersion RUBY1_8 args PUBLIC false false	1
MethodDeclaration Modifier ReferenceType getConditionState ReturnStatement public MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType Literal Ruby ThreadContext IRubyObject Block	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference StatementExpression Node BodyCompiler boolean ConstDeclNode constDeclNode Cast Node constNode MethodInvocation == MemberReference Literal StatementExpression StatementExpression BinaryOperation BlockStatement BlockStatement ! expr MethodInvocation ReferenceType MemberReference constDeclNode constNode null MethodInvocation MethodInvocation == MethodInvocation MemberReference StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression context consumeCurrentValue ConstDeclNode node MethodInvocation MemberReference Literal compile context MethodInvocation constNode NodeType COLON2NODE MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation constDeclNode getValueNode context true constDeclNode getName Cast MemberReference Literal compile MethodInvocation MemberReference Literal compile context MethodInvocation MethodInvocation MemberReference Literal compile context MethodInvocation ReferenceType MemberReference context true constDeclNode getValueNode context true constDeclNode getName constDeclNode getValueNode context true constDeclNode getName Colon2Node constNode	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x BasicType VariableDeclarator MethodInvocation name Literal required Literal module Literal visibility MemberReference IRubyObject IRubyObject double value Cast RubyFloat MethodInvocation BinaryOperation newFloat 1 true Visibility PRIVATE ReferenceType MethodInvocation recv getRuntime / BinaryOperation Literal RubyFloat RubyKernel MemberReference MemberReference + MethodInvocation MethodInvocation 2.0 recv x Math MemberReference exp Math MemberReference exp value - value	0
MethodDeclaration Modifier Annotation ReferenceType singleton_class FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType recv Cast meta Literal IRubyObject ReferenceType MemberReference true RubyClass recv	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType p1 MemberReference name Literal required Literal IRubyObject p1 1	1
MethodDeclaration Modifier ReferenceType newArray FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement final static public RubyArray Modifier ReferenceType runtime Modifier BasicType len ReferenceType VariableDeclarator MethodInvocation MemberReference final Ruby final long RubyArray array ClassCreator RuntimeHelpers MemberReference Literal MemberReference MemberReference fillNil array ReferenceType MemberReference MemberReference array values 0 length runtime RubyArray runtime len	0
MethodDeclaration Modifier ReferenceType ReturnStatement public IRubyObject MemberReference self	0
MethodDeclaration Modifier run StatementExpression public MethodInvocation	0
MethodDeclaration Modifier ReferenceType javaToRuby FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime BasicType value MethodInvocation Ruby char MemberReference ClassCreator javaToRuby runtime ReferenceType MemberReference Character value	1
MethodDeclaration Modifier ReferenceType f_integer_p FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType x MethodInvocation ThreadContext IRubyObject x MemberReference Literal callMethod context "integer?"	1
MethodDeclaration Modifier ReferenceType pair ReturnStatement static public Pair ClassCreator ReferenceType Pair	0
MethodDeclaration Modifier Annotation ReferenceType java_send FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType rubyName ReferenceType argTypes ReferenceType arg0 ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation backtrace Literal ThreadContext IRubyObject IRubyObject IRubyObject String name MethodInvocation RubyArray argTypesAry MethodInvocation Ruby runtime MethodInvocation != MethodInvocation Literal ThrowStatement Class argTypeClass Cast JavaMethod method ClassCreator method MethodInvocation MethodInvocation true rubyName asJavaString argTypes convertToArray context getRuntime argTypesAry size 1 MethodInvocation ReferenceType MethodInvocation ReferenceType MemberReference MethodInvocation getObject arg0 MemberReference toJava JavaMethod MemberReference MethodInvocation Literal Class argTypesAry MethodInvocation Literal eltInternal JavaMethod runtime MemberReference MemberReference getMethod argTypeClass runtime argTypesAry size 1 ClassReference toJava 0 name argTypeClass ReferenceType Class	1
MethodDeclaration Modifier Annotation init FormalParameter FormalParameter ThrowStatement public Override ReferenceType runtime ReferenceType ffi MethodInvocation Ruby RubyModule runtime MemberReference newNotImplementedError msg	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name ElementArrayValue required Literal ThreadContext IRubyObject MemberReference MemberReference Literal op_divide Literal 1 context other false "div"	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType name MethodInvocation Ruby String runtime MethodInvocation getGlobalVariables MemberReference get name	0
MethodDeclaration Modifier FormalParameter IfStatement public ReferenceType value BinaryOperation BlockStatement BlockStatement CompilerCallback != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression currentLoopLabels null MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation value This call value This call Literal MethodInvocation invokeUtilityMethod ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType IRubyObject ThreadContext IRubyObject	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement static public RubyIO ReferenceType runtime ReferenceType channel ClassCreator Ruby Channel ReferenceType MemberReference MemberReference RubyIO runtime channel	0
MethodDeclaration Modifier ReferenceType getOutputStream ReturnStatement public PrintStream ClassCreator ReferenceType ClassCreator PrintStream ReferenceType MethodInvocation MethodInvocation getGlobalVariables Literal get	0
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType io BasicType offset MethodInvocation Ruby MemoryIO long Util MemberReference MethodInvocation newSigned8 runtime io MemberReference offset	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType block ReferenceType VariableDeclarator StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject Block Ruby runtime MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference Literal pre MemberReference MemberReference MemberReference MemberReference rj MethodInvocation rj MethodInvocation MemberReference MemberReference MemberReference post context self name block 1 context self arg0 block MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier ReferenceType getReceiverNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType args ReferenceType ReferenceType type ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject Block ReferenceType IRubyObject value TernaryExpression MemberReference MemberReference Literal Literal Literal MemberReference MemberReference MemberReference yield Type BinaryOperation MemberReference MethodInvocation context value null null true type Block == MemberReference Literal ArraySelector args context MethodInvocation getRuntime args length 1 Literal MemberReference 0 args	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement final public RubyRegexp BasicType index ReferenceType pattern BasicType options ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference int RubyString int RubyRegexp regexp MemberReference == MemberReference Literal StatementExpression StatementExpression regexp ArraySelector regexp null Assignment Assignment MemberReference MemberReference MethodInvocation = MemberReference MemberReference = index regexp RubyRegexp MethodInvocation MethodInvocation MemberReference ArraySelector regexp pattern getRuntime pattern getByteList options MemberReference index	0
MethodDeclaration Modifier ReferenceType getKey ReturnStatement public Object MemberReference key	0
MethodDeclaration Modifier ReferenceType run TryStatement StatementExpression ReturnStatement public Object StatementExpression CatchClause MethodInvocation Literal Assignment CatchClauseParameter StatementExpression ReturnStatement defineClass_method Literal setAccessible null MemberReference ClassReference = Exception e MethodInvocation Literal true defineClass_method MethodInvocation ReferenceType e printStackTrace null Literal ArrayCreator getDeclaredMethod ClassLoader ReferenceType ArrayInitializer Class ClassReference ClassReference ClassReference ClassReference ClassReference ReferenceType BasicType BasicType BasicType ReferenceType String byte int int	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement private static boolean BasicType value BinaryOperation long && BinaryOperation BinaryOperation >= MemberReference MemberReference <= MemberReference MemberReference value Character MIN_VALUE value Character MAX_VALUE	1
MethodDeclaration Modifier FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement private ReferenceType ReferenceType cases ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement WhenNode ArrayNode Node MethodInvocation || BinaryOperation BinaryOperation StatementExpression ReturnStatement instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression getExpressionNodes instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation ListNode ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation SplatNode ArgsCatNode cases MemberReference add ListNode list Cast ISourcePosition position MethodInvocation Node MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement cases MemberReference add ReferenceType MemberReference getPosition getBodyNode BasicType VariableDeclarator < MemberReference MethodInvocation ++ i ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ListNode int i Literal i list size Node expression MethodInvocation || BinaryOperation BinaryOperation StatementExpression StatementExpression 0 list MemberReference get instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation MethodInvocation i expression SplatNode expression ArgsCatNode cases ClassCreator add cases ClassCreator add ReferenceType MemberReference MemberReference MemberReference Literal ReferenceType MemberReference MemberReference MemberReference Literal WhenNode position expression null position expression null	0
MethodDeclaration Modifier update FormalParameter StatementExpression public Modifier BasicType b This final byte MemberReference MethodInvocation intern MemberReference update b	0
MethodDeclaration Modifier FormalParameter FormalParameter IfStatement StatementExpression IfStatement static public ReferenceType holder ReferenceType BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement ConsoleHolder != MemberReference Literal StatementExpression MemberReference MemberReference = != MemberReference Literal StatementExpression holder readline null MethodInvocation holder holder readline null MethodInvocation holder.readline MemberReference holder.readline MemberReference holder holder	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType offset ReferenceType VariableDeclarator Cast name Literal required Literal ThreadContext IRubyObject IRubyObject ArgsFileData data MethodInvocation ReferenceType MemberReference "pos=" 1 MemberReference MemberReference Literal getData RubyIO data currentFile context recv "no stream to set	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType str ReferenceType pos ReferenceType block MethodInvocation name Literal reads MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject Block MemberReference MemberReference MethodInvocation MemberReference match19Common "match" BACKREF CompatVersion RUBY1_9 context str RubyNumeric MemberReference num2int block pos	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation ReturnStatement MethodInvocation StatementExpression MethodInvocation Ruby ThreadContext IRubyObject Block RubyClass cls MethodInvocation VariableAccessor localAccessor MemberReference IRubyObject value != MethodInvocation MethodInvocation StatementExpression IfStatement StatementExpression StatementExpression StatementExpression != MemberReference Literal MemberReference runtime isVerbose MethodInvocation runtime getNil self MethodInvocation getMetaClass accessor localAccessor cls hashCode Assignment BinaryOperation ReturnStatement Assignment Assignment Assignment value null value MemberReference getRealClass MemberReference MethodInvocation = == MemberReference Literal MethodInvocation MemberReference Cast = MemberReference MemberReference = MemberReference Cast = runtime localAccessor cls MemberReference localAccessor null runtime getNil value ReferenceType MethodInvocation accessor localAccessor value ReferenceType MethodInvocation name IRubyObject localAccessor MemberReference get IRubyObject localAccessor MemberReference get self self	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement static public IRubyObject ReferenceType re Cast RaiseException ReferenceType MethodInvocation re getException	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean BinaryOperation != BinaryOperation Literal & MemberReference MemberReference 0 mode	0
MethodDeclaration Modifier Annotation ReferenceType op_equal19 FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType other MethodInvocation name Literal required Literal compat MemberReference ThreadContext IRubyObject IRubyObject MemberReference MemberReference MemberReference MethodInvocation callCmpMethod "==" 1 CompatVersion RUBY1_9 context recv other context MethodInvocation getRuntime Literal newBoolean false	1
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter ReturnStatement public Object ReferenceType context ReferenceType rubyObject MethodInvocation ThreadContext IRubyObject rubyObject ClassReference toJava ReferenceType Byte	0
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType FCALLNODE	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement private IRubyObject ReferenceType runtime BasicType table BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation IfStatement MethodInvocation Ruby boolean int i Literal byte bytes MemberReference int p MemberReference int end BinaryOperation < MemberReference MemberReference MemberReference StatementExpression runtime MemberReference newFixnum 0 value bytes value begin + MemberReference MemberReference p end ArraySelector table MemberReference i p value realSize BinaryOperation ++ i & MemberReference Literal ArraySelector bytes 0xff MemberReference ++ p	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression private final Modifier ReferenceType key Modifier ReferenceType value Modifier BasicType MethodInvocation Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator MemberReference BlockStatement Assignment MemberReference final IRubyObject final IRubyObject final boolean final int hash MethodInvocation final int i MethodInvocation ForStatement MemberReference ClassCreator = ++ size MethodInvocation hashValue MemberReference MemberReference ForControl BlockStatement ArraySelector table ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference key hashCode hash table length VariableDeclaration BinaryOperation Assignment IfStatement MemberReference RubyHashEntry hash key value ArraySelector table head ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = MethodInvocation BlockStatement i MemberReference RubyHashEntry entry MemberReference entry null entry entry next MemberReference MemberReference MemberReference internalKeyExist StatementExpression ReturnStatement i ArraySelector table entry hash key Assignment MemberReference MemberReference MemberReference = i entry value value	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal ThreadContext RubyString MethodInvocation newEmptyString context getRuntime	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset ReferenceType arrParam MethodInvocation This name ElementArrayValue required Literal ThreadContext IRubyObject IRubyObject MemoryUtil MethodInvocation MethodInvocation MethodInvocation MethodInvocation Literal Literal 2 context getRuntime getMemoryIO MemberReference getOffset MemberReference checkArray offset arrParam	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 BinaryOperation StatementExpression MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject == MemberReference Literal MethodInvocation compiledMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call compiledMethod null initializeMethod context self clazz name arg0 arg1	1
MethodDeclaration Modifier Annotation ReferenceType op_cmp FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement TryStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType obj ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement StatementExpression LocalVariableDeclaration IfStatement ForStatement StatementExpression BasicType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation ReturnStatement MethodInvocation name Literal required Literal ThreadContext IRubyObject Ruby runtime MethodInvocation RubyArray ary2 MethodInvocation || BinaryOperation MethodInvocation MethodInvocation MethodInvocation BasicType VariableDeclarator BinaryOperation StatementExpression ForControl BlockStatement MethodInvocation int len BinaryOperation == MemberReference Literal MethodInvocation > MemberReference Literal MethodInvocation RubyFixnum MemberReference minus_one "<=>" 1 context getRuntime obj convertToArray == This MemberReference runtime This isInspecting RubyFixnum MemberReference zero runtime This registerInspecting int len MemberReference > MemberReference MemberReference Assignment VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement runtime This unregisterInspecting - MemberReference MemberReference len 0 RubyFixnum MemberReference zero len 0 RubyFixnum MemberReference one runtime ary2 runtime realLength len ary2 realLength MemberReference MemberReference = BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator BinaryOperation ReturnStatement realLength ary2 realLength runtime runtime len ary2 realLength int i Literal i len IRubyObject v MethodInvocation || BinaryOperation BinaryOperation MemberReference 0 MethodInvocation MemberReference elt instanceof MemberReference ReferenceType != Cast Literal v MemberReference Literal MethodInvocation callMethod i v RubyFixnum ReferenceType MemberReference 0 context "<=>" ary2 MemberReference elt RubyFixnum v i	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType MethodInvocation Ruby ThreadContext IRubyObject Block MemberReference runtime	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter RaiseException IfStatement IfStatement IfStatement LocalVariableDeclaration IfStatement ReturnStatement private static RubyClass ReferenceType runtime ReferenceType receiver ReferenceType name BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference Ruby IRubyObject String && BinaryOperation MethodInvocation ThrowStatement || BinaryOperation BinaryOperation ThrowStatement receiver isFrozen ThrowStatement RubyClass rubyClass MethodInvocation && BinaryOperation BinaryOperation ThrowStatement rubyClass >= MethodInvocation Literal ! receiver isTaint MethodInvocation instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation MethodInvocation receiver >= MethodInvocation Literal != MethodInvocation Literal MethodInvocation runtime getSafeLevel 4 runtime Literal newSecurityError receiver RubyFixnum receiver RubySymbol runtime BinaryOperation newTypeError runtime Literal runtime getSafeLevel 4 rubyClass MethodInvocation getMethods null runtime Literal newSecurityError can't define singleton + BinaryOperation MethodInvocation MemberReference get "redefining method + BinaryOperation Literal receiver MethodInvocation getMetaClass name + Literal MemberReference "\" for " "can't define singleton method \"" name	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType arg8 MethodInvocation IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject ArrayCreator Literal ReferenceType ArrayInitializer 9 IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration TryStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType name ReferenceType VariableDeclarator BinaryOperation ReturnStatement ReferenceType VariableDeclarator LocalVariableDeclaration LocalVariableDeclaration WhileStatement CatchClause MethodInvocation required Literal IRubyObject InputStream in MethodInvocation == MemberReference Literal MethodInvocation ByteArrayOutputStream out ClassCreator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement CatchClauseParameter ThrowStatement MethodInvocation getRuntime 1 MethodInvocation javaClass in null MethodInvocation getRuntime ReferenceType int len byte buf ArrayCreator >= Assignment Literal StatementExpression IOException e MethodInvocation ClassCreator newString MethodInvocation getResourceAsStream getNil ByteArrayOutputStream BasicType Literal MemberReference MethodInvocation = 0 MethodInvocation MethodInvocation getRuntime ReferenceType MethodInvocation Literal name asJavaString byte 4096 len in MemberReference read out MemberReference Literal MemberReference write MemberReference newIOErrorFromException ByteList out toByteArray false buf buf 0 len e	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType MethodInvocation Ruby ThreadContext IRubyObject Block callAdapter MemberReference MemberReference MethodInvocation MethodInvocation call context self MethodInvocation getReceiverNode RuntimeHelpers MemberReference MemberReference MemberReference MemberReference MemberReference getBlock MemberReference MemberReference MemberReference MemberReference runtime context self runtime context self	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private RubyClass ReferenceType ReferenceType cls ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference VariableAccessor RubyClass RubyClass ReferenceType localAccessor MemberReference != MethodInvocation MethodInvocation StatementExpression StatementExpression localAccessor VariableAccessor accessor localAccessor cls hashCode Assignment Assignment MemberReference MethodInvocation = MemberReference MemberReference = localAccessor cls MemberReference accessor localAccessor variableName	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context ReferenceType name MethodInvocation ThreadContext String runtimeCache MemberReference MemberReference Literal context name 6	0
MethodDeclaration Modifier Annotation ReferenceType yield FormalParameter FormalParameter FormalParameter InterruptedException LocalVariableDeclaration IfStatement SynchronizedStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference StatementExpression StatementExpression MethodInvocation compat MemberReference rest Literal meta Literal ThreadContext IRubyObject IRubyObject Fiber fiber MethodInvocation == MemberReference Literal StatementExpression BinaryOperation BlockStatement BlockStatement fiber yieldLock MethodInvocation MethodInvocation context MethodInvocation getRuntime CompatVersion RUBY1_9 true true context args length 0 Assignment == MemberReference Literal StatementExpression StatementExpression wait getNil MemberReference MethodInvocation = args length 1 Assignment Assignment fiber result context MethodInvocation getRuntime MemberReference MemberReference = MemberReference MethodInvocation = getNil fiber result ArraySelector args fiber result context MethodInvocation getRuntime Literal MemberReference 0 args	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement IfStatement ReturnStatement private String ReferenceType home MethodInvocation BlockStatement MethodInvocation BlockStatement IfStatement MemberReference String home Literal equals StatementExpression home Literal startsWith StatementExpression MethodInvocation BlockStatement home "." Assignment Assignment ! home Literal startsWith LocalVariableDeclaration IfStatement IfStatement MemberReference MethodInvocation = MemberReference MethodInvocation = "file:" ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation BlockStatement home System Literal getProperty home home Literal substring NormalizedFile f ClassCreator ! f isAbsolute StatementExpression ! f exists StatementExpression ReturnStatement "user.dir" 3 ReferenceType MemberReference Assignment MethodInvocation MethodInvocation NormalizedFile home MemberReference MethodInvocation = System.err BinaryOperation println System Literal getProperty home f getAbsolutePath + BinaryOperation MethodInvocation "java.io.tmpdir" + BinaryOperation Literal System Literal getProperty + Literal MemberReference "\" does not using " "java.io.tmpdir" "Warning: home \"" f	1
MethodDeclaration Modifier Annotation ReferenceType constructors LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod RubyArray ReferenceType VariableDeclarator BinaryOperation ReturnStatement Assignment RubyArray ctors != Assignment Literal MemberReference MemberReference MethodInvocation = MemberReference MemberReference = null ctors constructors MethodInvocation buildConstructors ctors constructors MethodInvocation javaClass getConstructors	1
MethodDeclaration Modifier Annotation ReferenceType name FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext context MethodInvocation getRuntime "name" CompatVersion RUBY1_8 MemberReference newString methodName	0
MethodDeclaration Modifier ReferenceType getData FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private static ArgsFileData ReferenceType context ReferenceType recv ReferenceType errorMessage ReferenceType VariableDeclarator MethodInvocation ThrowStatement MemberReference ThreadContext IRubyObject String ArgsFileData data MethodInvocation ! data MemberReference next_argv MethodInvocation data ArgsFileData MemberReference getDataFrom context context MethodInvocation getRuntime recv MemberReference newArgumentError errorMessage	1
MethodDeclaration Modifier main FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ForStatement ForStatement ForStatement static public ReferenceType args BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement ForControl BlockStatement ForControl BlockStatement ForControl BlockStatement String int Literal int n Literal >= MemberReference Literal StatementExpression IfStatement VariableDeclaration BinaryOperation MemberReference StatementExpression VariableDeclaration BinaryOperation MemberReference StatementExpression VariableDeclaration BinaryOperation MemberReference StatementExpression 5 30 args length 1 Assignment BinaryOperation BlockStatement BasicType VariableDeclarator < MemberReference MemberReference ++ j MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ j MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ j MethodInvocation MemberReference MethodInvocation = >= MemberReference Literal StatementExpression int j Literal j MemberReference int j Literal j MemberReference int j Literal j MemberReference Integer MemberReference parseInt args length 2 Assignment 0 n 0 n 0 n ArraySelector args MemberReference MethodInvocation = Literal n Integer MemberReference parseInt 0 ArraySelector args Literal 1	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Map TypeArgument TypeArgument MemberReference ReferenceType ReferenceType String DateTimeZone	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter ReturnStatement protected boolean ReferenceType method ReferenceType caller MethodInvocation DynamicMethod IRubyObject method isUndefined	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public Operand ReferenceType ReferenceType m ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference Match2Node IR_Scope Variable ret MethodInvocation Operand receiver MethodInvocation Operand value MethodInvocation m ClassCreator addInstr ret m getNewVariable MethodInvocation MemberReference build MethodInvocation MemberReference build ReferenceType MemberReference MemberReference ArrayCreator getReceiverNode m getValueNode m ret MethAddr ReferenceType ArrayInitializer Operand MemberReference MemberReference receiver value	0
MethodDeclaration Modifier ReferenceType getType FormalParameter FormalParameter FormalParameter ReturnStatement static public String BasicType i ReferenceType o ReferenceType o2 Literal double String String	0
MethodDeclaration Modifier BasicType getBytesInUTF8 FormalParameter TryStatement private static byte ReferenceType s ReturnStatement CatchClause String MethodInvocation CatchClauseParameter ReturnStatement s Literal getBytes java.io.UnsupportedEncodingException ex MethodInvocation "UTF-8" s getBytes	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement private IRubyObject ReferenceType ReferenceType VariableDeclarator MethodInvocation MemberReference IRubyObject self MethodInvocation MethodInvocation getFrame self MemberReference self	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x MethodInvocation name Literal required Literal module Literal visibility MemberReference compat MemberReference IRubyObject IRubyObject MemberReference MemberReference 1 true Visibility PRIVATE CompatVersion RUBY1_8 recv x	0
MethodDeclaration Modifier StatementExpression StatementExpression public MethodInvocation MethodInvocation reset reset	0
MethodDeclaration Modifier BasicType ReturnStatement public int MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement final public Override IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType arg1 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject MemberReference MemberReference invoke context arg1	1
MethodDeclaration Modifier FormalParameter StatementExpression private ReferenceType Assignment String This MemberReference = MemberReference	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Literal MemberReference Cast Token Tokens kSELF ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType op_equal FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType oth BasicType VariableDeclarator MemberReference BlockStatement TernaryExpression name Literal required Literal IRubyObject boolean ret BinaryOperation ! ret IfStatement MemberReference MethodInvocation MethodInvocation "==" 1 == This MemberReference BinaryOperation BlockStatement BlockStatement ret MethodInvocation getRuntime MethodInvocation getRuntime oth instanceof MemberReference ReferenceType LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression getTrue getFalse oth Base ReferenceType VariableDeclarator Assignment ReferenceType VariableDeclarator Assignment Base b Cast MemberReference BinaryOperation = IRubyObject str MethodInvocation MemberReference This = ReferenceType MemberReference ret && This MethodInvocation oth convertToString ret MethodInvocation MethodInvocation Base oth MemberReference MethodInvocation MethodInvocation Arrays MethodInvocation MethodInvocation equals to_s MemberReference equals MethodInvocation equals b str	1
MethodDeclaration Modifier cleanup LocalVariableDeclaration WhileStatement private ReferenceType VariableDeclarator BinaryOperation BlockStatement reference != Assignment Literal StatementExpression MemberReference Cast = null MethodInvocation reference ReferenceType MethodInvocation cache MethodInvocation remove referenceQueue poll reference getKey	0
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration ReturnStatement public ReferenceType VariableDeclarator ClassCreator frame MethodInvocation ReferenceType MemberReference MethodInvocation MethodInvocation MemberReference MemberReference frame getCurrentScope file line	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType args MethodInvocation IRubyObject IRubyObject MethodInvocation MemberReference MemberReference recv MethodInvocation getRuntime recv args getCurrentContext	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType str ReferenceType block MethodInvocation name Literal reads MemberReference compat MemberReference ThreadContext IRubyObject Block MemberReference MemberReference Literal MemberReference match19Common "match" BACKREF CompatVersion RUBY1_9 context str 0 block	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public Operand ReferenceType opAsgnNode ReferenceType s BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment MethodInvocation ReferenceType VariableDeclarator Assignment MethodInvocation MemberReference OpAsgnNode IR_Scope || MethodInvocation MethodInvocation ThrowStatement Operand v1 MethodInvocation Variable getResult MethodInvocation IR_Instr callInstr ClassCreator s MemberReference addInstr Operand v2 MethodInvocation Variable setValue MethodInvocation MemberReference ClassCreator = s MemberReference addInstr Variable setResult MethodInvocation MemberReference ClassCreator = s MemberReference addInstr setResult opAsgnNode MethodInvocation opAsgnNode MethodInvocation ClassCreator MethodInvocation MemberReference build s getNewVariable ReferenceType MemberReference ClassCreator ArrayCreator Literal callInstr MethodInvocation MemberReference build s getNewVariable callInstr ReferenceType MemberReference ClassCreator ArrayCreator Literal callInstr s getNewVariable callInstr ReferenceType MemberReference ClassCreator ArrayCreator Literal callInstr Literal equals Literal equals ReferenceType BinaryOperation opAsgnNode getReceiverNode s CALL_Instr getResult ReferenceType MethodInvocation ReferenceType ArrayInitializer null opAsgnNode getValueNode s CALL_Instr setValue ReferenceType MethodInvocation ReferenceType ArrayInitializer null CALL_Instr setResult ReferenceType MethodInvocation ReferenceType ArrayInitializer null "||" "&&" NotCompilableException + Literal MemberReference MethAddr opAsgnNode getVariableName Operand MemberReference MethAddr opAsgnNode Operand MemberReference MemberReference MethAddr opAsgnNode Operand MemberReference MemberReference "Unknown node encountered in " opAsgnNode v1 getResult v2 v1 setValue	1
MethodDeclaration Modifier BasicType ReturnStatement public long MemberReference usec	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType obj MethodInvocation obj	0
MethodDeclaration Modifier Annotation ReferenceType to_i ReturnStatement public Deprecated IRubyObject MethodInvocation MethodInvocation to_i getRuntime	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter TryStatement private IRubyObject ReferenceType method ReferenceType javaInvokee LocalVariableDeclaration ReturnStatement CatchClause CatchClause CatchClause CatchClause Method Object ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement Object result TernaryExpression MemberReference convertReturn IllegalArgumentException iae MethodInvocation IllegalAccessException iae MethodInvocation InvocationTargetException ite MethodInvocation Throwable t MethodInvocation BinaryOperation MethodInvocation MethodInvocation result MemberReference MemberReference handlelIllegalArgumentEx MemberReference MemberReference handleIllegalAccessEx MemberReference MemberReference handleInvocationTargetEx MemberReference MemberReference handleThrowable != MemberReference Literal handle MemberReference invoke method MemberReference invoke method iae method iae ite method t method handle null javaInvokee javaInvokee	1
MethodDeclaration Modifier Annotation FormalParameter FormalParameter StatementExpression StatementExpression public Override ReferenceType arg0 ReferenceType arg1 Assignment Assignment IRubyObject IRubyObject MemberReference MemberReference = MemberReference MemberReference = variableValueZero arg0 variableValueOne arg1	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType receiver ReferenceType visibility ReferenceType name ReferenceType callType ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType block MethodInvocation ThreadContext IRubyObject Visibility String CallType IRubyObject IRubyObject IRubyObject Block MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference call context receiver visibility name callType context receiver receiver getMetaClass name arg0 arg1 arg2 block	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public Operand ReferenceType dstrNode ReferenceType s ReferenceType VariableDeclarator EnhancedForControl StatementExpression ClassCreator DStrNode IR_Scope List TypeArgument strPieces ClassCreator VariableDeclaration MethodInvocation MethodInvocation ReferenceType MemberReference ReferenceType ReferenceType ReferenceType VariableDeclarator dstrNode childNodes strPieces MethodInvocation add strPieces Operand ArrayList TypeArgument Node n MemberReference MemberReference build ReferenceType n s Operand	1
MethodDeclaration Modifier prepare FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement IfStatement public ReferenceType context ReferenceType runtime ReferenceType self ReferenceType args ReferenceType block ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement BinaryOperation StatementExpression BinaryOperation StatementExpression ThreadContext Ruby IRubyObject IRubyObject Block DynamicScope scope MethodInvocation ! IfStatement IfStatement StatementExpression || MemberReference BinaryOperation MethodInvocation != MethodInvocation Literal MethodInvocation context getCurrentScope BinaryOperation StatementExpression BinaryOperation StatementExpression MethodInvocation != MemberReference Literal MemberReference MemberReference MemberReference MemberReference MemberReference getBlock null MemberReference MemberReference MemberReference processBlockArg > MemberReference Literal MethodInvocation > MemberReference Literal MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference restArg - 1 context runtime scope self args scope runtime block preCount 0 scope MemberReference MethodInvocation 0 scope MemberReference MemberReference MemberReference context runtime self args block scope args Math MemberReference MemberReference min args args length preCount	1
MethodDeclaration Modifier warning FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression public ReferenceType id ReferenceType message ReferenceType data ReferenceType VariableDeclarator MethodInvocation ID String Object ThreadContext context MethodInvocation MemberReference MethodInvocation MethodInvocation MemberReference MemberReference warning runtime getCurrentContext id context getFile context getLine message data	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + BinaryOperation MemberReference + MemberReference Literal ", *"	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement public Object ReferenceType numeric ReferenceType target BasicType VariableDeclarator MethodInvocation BlockStatement BlockStatement RubyNumeric Class double value MethodInvocation MemberReference ReturnStatement ThrowStatement numeric value MethodInvocation MethodInvocation Float Cast valueOf numeric MethodInvocation getRuntime BasicType MemberReference BinaryOperation newTypeError float value + Literal MemberReference "too for " numeric	0
MethodDeclaration Modifier subpatSet FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement IfStatement StatementExpression private ReferenceType context ReferenceType regexp BasicType nth ReferenceType repl ReferenceType VariableDeclarator BinaryOperation ThrowStatement ReferenceType VariableDeclarator Assignment Modifier BasicType VariableDeclarator VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation ThrowStatement MethodInvocation ThreadContext RubyRegexp int IRubyObject Ruby runtime MethodInvocation < MethodInvocation Literal MethodInvocation RubyMatchData match Cast MemberReference MethodInvocation = final int start end == MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression == MemberReference Literal MethodInvocation MemberReference BinaryOperation MethodInvocation replaceInternal context getRuntime regexp MemberReference This Literal Literal search 0 runtime Literal newIndexError ReferenceType MethodInvocation nth MemberReference MemberReference MemberReference match regs null Assignment Assignment Assignment Assignment start - 1 runtime BinaryOperation newIndexError start - MemberReference MemberReference repl convertToString context 0 false "regexp not matched" RubyMatchData context MethodInvocation getCurrentScope runtime nth match regs MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = + BinaryOperation Literal end start MemberReference start match begin end match end start match.regs ArraySelector beg end match.regs ArraySelector end + Literal MemberReference " not matched" runtime MemberReference MemberReference "regexp group " nth nth nth	1
MethodDeclaration install FormalParameter IfStatement ReferenceType proxy MethodInvocation BlockStatement RubyModule Modifier MethodInvocation isPublic StatementExpression field getModifiers MethodInvocation proxy MethodInvocation MemberReference ClassCreator addMethod name ReferenceType MemberReference MemberReference MemberReference name proxy field	0
MethodDeclaration Modifier initCopy FormalParameter FormalParameter AssertStatement StatementExpression IfStatement IfStatement StatementExpression private static ReferenceType clone ReferenceType original MethodInvocation BinaryOperation MethodInvocation MethodInvocation StatementExpression BinaryOperation StatementExpression MethodInvocation IRubyObject IRubyObject ! clone isFrozen + BinaryOperation Literal original MemberReference original hasVariables MethodInvocation instanceof MemberReference ReferenceType Cast clone MethodInvocation Literal MemberReference callMethod + Literal MethodInvocation ") clone clone MethodInvocation syncVariables original RubyModule ReferenceType MemberReference clone MethodInvocation getRuntime "initialize_copy" original object (" clone MethodInvocation getMetaClass original getVariableList RubyModule clone getCurrentContext getName	1
MethodDeclaration Modifier ReferenceType handleNextJump FormalParameter FormalParameter FormalParameter ReturnStatement private IRubyObject ReferenceType context ReferenceType nj ReferenceType type TernaryExpression ThreadContext JumpException ReferenceType Block ReferenceType BinaryOperation MethodInvocation Cast NextJump Type == MethodInvocation Literal context MethodInvocation getRuntime ReferenceType MethodInvocation nj getValue null getNil IRubyObject nj getValue	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType VariableDeclarator MethodInvocation frame Literal ThreadContext IRubyObject RubyIO io Cast JavaUtil MethodInvocation MethodInvocation convertJavaToUsableRubyObject true ReferenceType MemberReference context getRuntime io getChannel RubyIO self	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public Operand ReferenceType node ReferenceType m ClassCreator XStrNode IR_Scope ReferenceType ClassCreator ReferenceType MethodInvocation StringLiteral node getValue	1
MethodDeclaration Modifier Annotation ReferenceType step FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType step ReferenceType block TernaryExpression name Literal frame Literal compat MemberReference ThreadContext IRubyObject Block MethodInvocation MethodInvocation MethodInvocation true CompatVersion RUBY1_8 block isGiven MemberReference MemberReference MemberReference MethodInvocation This Literal MemberReference enumeratorize context step block context getRuntime step	0
MethodDeclaration Modifier ReferenceType parseFile FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Node ReferenceType in ReferenceType file ReferenceType scope BasicType lineNumber BinaryOperation StatementExpression MethodInvocation InputStream String DynamicScope int != MemberReference Literal MethodInvocation parser MemberReference MemberReference MemberReference ClassCreator parse parserStats null parserStats file in scope ReferenceType MethodInvocation MemberReference Literal Literal Literal MemberReference getKCode lineNumber false false true config	1
MethodDeclaration Modifier ReferenceType FormalParameter AssertStatement StatementExpression ReturnStatement public IRubyObject ReferenceType name MethodInvocation MethodInvocation Cast String IdUtil MemberReference isInstanceVariable ensureInstanceVariablesSettable ReferenceType MethodInvocation name IRubyObject MemberReference name	1
MethodDeclaration Modifier ReferenceType previous ReturnStatement public Object MethodInvocation MethodInvocation Assignment elt ClassReference toJava MemberReference MemberReference = ReferenceType last -- index Object	1
MethodDeclaration Modifier ReferenceType findClass FormalParameter FormalParameter ClassNotFoundException IfStatement protected static Class ReferenceType classLoader ReferenceType className BinaryOperation BlockStatement BlockStatement ClassLoader String && BinaryOperation MethodInvocation SwitchStatement ReturnStatement == MethodInvocation Literal Character MethodInvocation isLowerCase MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase MethodInvocation className Literal indexOf - 1 className Literal charAt className Literal charAt Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ReturnStatement classLoader MemberReference loadClass '.' 0 0 'b' ClassReference 's' ClassReference 'c' ClassReference 'i' ClassReference 'l' ClassReference 'f' ClassReference 'd' ClassReference MethodInvocation className BasicType BasicType BasicType BasicType BasicType BasicType BasicType classLoader MemberReference loadClass byte short char int long float double className	0
MethodDeclaration Modifier setUp StatementExpression public Assignment MemberReference MethodInvocation = runtime Ruby newInstance	0
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement private static ReferenceType scope BinaryOperation BlockStatement BlockStatement IRubyObject instanceof MemberReference ReferenceType ReturnStatement IfStatement scope Cast BinaryOperation BlockStatement BlockStatement ReferenceType MemberReference instanceof MemberReference ReferenceType ReturnStatement ThrowStatement scope scope RubyProc Cast MethodInvocation ReferenceType MemberReference scope MethodInvocation getRuntime RubyProc scope BinaryOperation newTypeError + BinaryOperation Literal + Literal MethodInvocation " (expected "wrong argument type " scope getMetaClass	0
MethodDeclaration Modifier FormalParameter RaiseException IfStatement private ReferenceType javaInvokee MethodInvocation BlockStatement Object ! method MethodInvocation getDeclaringClass ThrowStatement MemberReference isInstance MethodInvocation javaInvokee MethodInvocation getRuntime BinaryOperation newTypeError + BinaryOperation Literal + BinaryOperation MethodInvocation ")" + BinaryOperation Literal method MethodInvocation getDeclaringClass + BinaryOperation MethodInvocation " " getName + Literal Literal javaInvokee MethodInvocation getClass not instance of class (" getName	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement protected Override IRubyObject ReferenceType internedName MethodInvocation String MemberReference internedName	0
MethodDeclaration Modifier FormalParameter ForStatement StatementExpression ForStatement StatementExpression private synchronized Modifier ReferenceType proxy EnhancedForControl BlockStatement Assignment EnhancedForControl BlockStatement Assignment final RubyClass VariableDeclaration MethodInvocation StatementExpression MemberReference Literal = VariableDeclaration MethodInvocation StatementExpression MemberReference Literal = ReferenceType VariableDeclarator values MethodInvocation null ReferenceType VariableDeclarator values MethodInvocation null NamedInstaller installer installer MemberReference install NamedInstaller installer installer MemberReference install proxy proxy	0
MethodDeclaration Modifier Annotation ReferenceType assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value ReferenceType block BasicType checkArity ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block boolean IRubyObject receiver MethodInvocation == MemberReference Literal StatementExpression LocalVariableDeclaration StatementExpression StatementExpression runtime getNil MemberReference MemberReference MemberReference MemberReference argsNode null MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation runtime context self block RuntimeHelpers MemberReference MemberReference MethodInvocation ArrayCreator MemberReference MemberReference invoke RubyArray args Cast args MemberReference append RuntimeHelpers MemberReference MemberReference MethodInvocation MethodInvocation MemberReference MemberReference invoke context receiver getName ReferenceType ArrayInitializer CallType NORMAL Block ReferenceType MethodInvocation value context receiver getName args toJavaArray CallType NORMAL Block IRubyObject MemberReference RubyArray argsNode MemberReference MemberReference MemberReference MemberReference value runtime context self block	0
MethodDeclaration Modifier modifyCheck FormalParameter FormalParameter FormalParameter IfStatement private final BasicType b BasicType len ReferenceType enc BinaryOperation ThrowStatement byte int Encoding || BinaryOperation BinaryOperation MethodInvocation || BinaryOperation BinaryOperation != MemberReference MemberReference MethodInvocation getRuntime != MemberReference MemberReference != MemberReference MemberReference value encoding enc Literal newRuntimeError value bytes b value realSize len "string	1
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile callNode getReceiverNode context true	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation MethodInvocation name Literal required Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation ByteArrayOutputStream output ClassCreator RubyString string MethodInvocation int MethodInvocation runtime MethodInvocation getGlobalVariables RubyString MemberReference MethodInvocation 1 true PRIVATE context getRuntime ReferenceType convertToString MemberReference ArrayCreator MemberReference Literal MethodInvocation set runtime output toByteArray ByteArrayOutputStream runtime ReferenceType ArrayInitializer output MemberReference MemberReference IRubyObject MemberReference runtime string	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType enc BasicType bytes BasicType s BasicType end BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement TernaryExpression Ruby Encoding byte int int boolean modify Literal int c < MemberReference MemberReference IfStatement MemberReference This MethodInvocation false s end BinaryOperation BlockStatement BlockStatement modify runtime getNil && MethodInvocation MethodInvocation IfStatement StatementExpression StatementExpression IfStatement StatementExpression enc isAsciiCompatible Encoding Assignment isAscii MethodInvocation BlockStatement MemberReference Assignment MethodInvocation BlockStatement Assignment MemberReference BinaryOperation = ASCII MemberReference isLower StatementExpression StatementExpression ++ s MemberReference MethodInvocation = enc MemberReference isLower StatementExpression StatementExpression MemberReference MethodInvocation += c & MemberReference Literal c Assignment Assignment c MemberReference MemberReference MemberReference MemberReference MemberReference codePoint c MethodInvocation Assignment s MemberReference MemberReference MemberReference codeLength ArraySelector bytes 0xff MemberReference MemberReference = MemberReference Literal = runtime enc bytes s end enc MethodInvocation MemberReference MemberReference codeToMbc MemberReference Literal = runtime enc c MemberReference ArraySelector bytes AsciiTables ArraySelector ToUpperCaseTable modify true MemberReference MemberReference bytes s modify true s MemberReference MemberReference enc c s c	1
MethodDeclaration Modifier ReferenceType getInstance FormalParameter FormalParameter IfStatement ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType BinaryOperation BlockStatement MethodInvocation Ruby Object != MemberReference Literal ReturnStatement runtime getNil null MethodInvocation runtime MethodInvocation MethodInvocation getJavaSupport MemberReference Cast ReferenceType MethodInvocation RubyClass MemberReference MethodInvocation getProxyClass runtime JavaClass MemberReference MethodInvocation get runtime getClass	0
MethodDeclaration Modifier ReferenceType getType FormalParameter ReturnStatement static public String BasicType c Literal char "char"	0
MethodDeclaration Modifier Annotation ReferenceType ThrowStatement public Override ClassCreator ReferenceType MemberReference UnsupportedOperationException msg	0
MethodDeclaration Modifier Annotation BasicType read IOException LocalVariableDeclaration IfStatement public Override int BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement byte b ArrayCreator == MethodInvocation Literal ReturnStatement ReturnStatement BasicType Literal MemberReference Literal Literal read 1 MemberReference Literal byte 1 b 0 1 ArraySelector b - 1 Literal 0	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg0 ReferenceType arg1 MethodInvocation name Literal compat MemberReference IRubyObject IRubyObject MemberReference MemberReference Literal CompatVersion RUBY1_8 arg0 arg1 'l'	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement public IRubyObject ReferenceType scriptNode ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MemberReference BlockStatement BinaryOperation BlockStatement BlockStatement Node Script script Literal boolean compile MethodInvocation boolean MethodInvocation compile StatementExpression IfStatement != MemberReference Literal IfStatement IfStatement ReturnStatement null MethodInvocation MethodInvocation getInstanceConfig MethodInvocation MethodInvocation getInstanceConfig Assignment BinaryOperation BlockStatement script null MethodInvocation BlockStatement BlockStatement MethodInvocation StatementExpression MethodInvocation MemberReference MethodInvocation = && MemberReference BinaryOperation ReturnStatement config ReturnStatement ReturnStatement config MethodInvocation MemberReference script MemberReference == MemberReference Literal MethodInvocation MemberReference MethodInvocation System.err Literal print scriptNode scriptNode script null getNil MemberReference runScript bytecode printing only with JVM script	1
MethodDeclaration Modifier BasicType getLineNumber ReturnStatement public int MemberReference lineNumber	0
MethodDeclaration Modifier StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation loadNil Literal MethodInvocation invokeUtilityMethod ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType IRubyObject String Ruby IRubyObject	0
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType regexp MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation RubyRegexp regexp check int options MethodInvocation && BinaryOperation BinaryOperation IfStatement MemberReference MemberReference && MethodInvocation BinaryOperation != MemberReference MemberReference BinaryOperation BlockStatement IfStatement regexp str options ! regexp != MemberReference Literal regexp kcode KCode NIL == MemberReference MemberReference StatementExpression BinaryOperation BlockStatement IfStatement regexp kcode null regexp kcode KCode NONE Assignment == MemberReference MemberReference StatementExpression BinaryOperation BlockStatement IfStatement MemberReference Literal |= regexp kcode KCode EUC Assignment == MemberReference MemberReference StatementExpression BinaryOperation BlockStatement options 16 MemberReference Literal |= regexp kcode KCode SJIS Assignment == MemberReference MemberReference StatementExpression options 32 MemberReference Literal |= regexp kcode KCode Assignment options 48 MemberReference Literal |= options 64	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal ThreadContext IRubyObject int MethodInvocation > MemberReference MemberReference StatementExpression context MethodInvocation getRuntime RubyNumeric MemberReference num2int size Assignment MemberReference newFixnum MemberReference MemberReference = size size	1
MethodDeclaration Modifier FormalParameter StatementExpression public BasicType arg MethodInvocation int MethodInvocation getMethodVisitor MemberReference MemberReference arg	0
MethodDeclaration Modifier FormalParameter StatementExpression public BasicType arg MethodInvocation int MethodInvocation getMethodVisitor MemberReference MemberReference arg	0
MethodDeclaration Modifier StatementExpression StatementExpression public Assignment Assignment MemberReference Literal = MemberReference Literal = null finalizers null	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression public ReferenceType ret MethodInvocation MethodInvocation MethodInvocation MethodInvocation method ret ArraySelector returnValue Literal 0	0
MethodDeclaration ReferenceType ReturnStatement Iterator ClassCreator ReferenceType	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext context MethodInvocation getRuntime "name" CompatVersion RUBY1_9 MemberReference methodName	0
MethodDeclaration Modifier Annotation ReferenceType write FormalParameter IOException LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType p1 ReferenceType VariableDeclarator MethodInvocation MethodInvocation name Literal required Literal IRubyObject ByteList bytes MethodInvocation io MethodInvocation MethodInvocation MethodInvocation write MethodInvocation getRuntime 1 p1 MethodInvocation asString bytes unsafeBytes bytes begin bytes length MethodInvocation newFixnum getByteList bytes length	0
MethodDeclaration Modifier FormalParameter StatementExpression private ReferenceType node MethodInvocation ArgumentNode sb MethodInvocation Literal append MethodInvocation append " " node getName	0
MethodDeclaration Modifier BasicType glob_helper FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement private static int ReferenceType cwd BasicType bytes BasicType begin BasicType end BasicType sub BasicType flags ReferenceType func ReferenceType arg BasicType VariableDeclarator VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment MethodInvocation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator mainLoop BinaryOperation BlockStatement MemberReference String byte int int int int int p m int status Literal byte newpath Literal File st MemberReference TernaryExpression = ! MemberReference MemberReference MemberReference MemberReference IfStatement IfStatement ReturnStatement ByteList buf ClassCreator List TypeArgument link ClassCreator && BinaryOperation BinaryOperation IfStatement StatementExpression IfStatement StatementExpression status 0 null p BinaryOperation MemberReference MemberReference bytes p end flags BinaryOperation BlockStatement BinaryOperation BlockStatement IfStatement MemberReference ReferenceType Literal ReferenceType ReferenceType != MemberReference Literal == MemberReference Literal BinaryOperation StatementExpression Assignment MethodInvocation BlockStatement Assignment != MemberReference Literal sub begin || MemberReference BinaryOperation StatementExpression StatementExpression IfStatement || BinaryOperation BinaryOperation IfStatement MethodInvocation BlockStatement IfStatement status ByteList 20 ByteList ArrayList TypeArgument p - 1 status 0 == MemberReference Literal MemberReference MemberReference MethodInvocation = MemberReference MemberReference TernaryExpression MemberReference DoStatement IfStatement MemberReference MemberReference = sub - 1 DOSISH == BinaryOperation Literal Assignment MethodInvocation BinaryOperation BlockStatement BlockStatement == MemberReference Literal && BinaryOperation MethodInvocation ClassCreator BlockStatement MemberReference MemberReference MemberReference LocalVariableDeclaration ForStatement StatementExpression LocalVariableDeclaration TryStatement BinaryOperation BlockStatement ReferenceType ArraySelector bytes '/' ++ p m MemberReference MemberReference MemberReference Cast bytes p BinaryOperation MemberReference MemberReference flags finalize Literal BlockStatement BinaryOperation BlockStatement p m & MemberReference MemberReference 0 MemberReference ArrayCreator = System MemberReference Literal MemberReference Literal MemberReference arraycopy != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ArraySelector bytes '/' && BinaryOperation BinaryOperation MemberReference isdirsep MethodInvocation ReferenceType MethodInvocation StatementExpression bytes begin end BasicType VariableDeclarator ForControl BlockStatement Assignment ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement IfStatement IfStatement CatchClause > BinaryOperation Literal IfStatement ByteList MemberReference bytes p end BasicType Literal == MemberReference Literal end m false LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement > MethodInvocation Literal ForStatement BreakStatement flags FNM_NOESCAPE newpath BasicType MemberReference bytes 0 newpath 0 end sub - 1 Assignment Assignment Assignment Assignment Assignment MemberReference && MemberReference BinaryOperation == MemberReference Literal ArraySelector bytes exists JavaSecuredFile MemberReference MemberReference BinaryOperation newStringFromUTF8 Assignment int ix MemberReference VariableDeclaration BinaryOperation MemberReference IfStatement MemberReference ClassCreator = String jar MethodInvocation ReferenceType VariableDeclarator MethodInvocation StatementExpression BinaryOperation StatementExpression BinaryOperation BlockStatement CatchClauseParameter - MemberReference MemberReference 0 ClassCreator BlockStatement p byte '/' m - 1 BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement BlockStatement link size 0 EnhancedForControl BlockStatement mainLoop byte end MemberReference BinaryOperation = MemberReference MethodInvocation = MemberReference MemberReference = MemberReference MethodInvocation = MemberReference MemberReference = begin DOSISH < BinaryOperation MemberReference ArraySelector bytes ':' BinaryOperation bytes begin - MemberReference MemberReference MemberReference MethodInvocation = end BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement st ReferenceType MethodInvocation MemberReference BinaryOperation BinaryOperation newStringFromUTF8 JarFile jf ClassCreator jar Literal startsWith Assignment != MethodInvocation Literal Assignment != MethodInvocation Literal StatementExpression Exception e end begin MethodInvocation ReferenceType MemberReference MethodInvocation StatementExpression byte base MethodInvocation byte dir TernaryExpression byte magic MethodInvocation boolean Literal String jar Literal JarFile jf Literal || BinaryOperation BinaryOperation StatementExpression MethodInvocation BlockStatement BlockStatement || BinaryOperation MethodInvocation IfStatement BreakStatement == MemberReference Literal LocalVariableDeclaration ForStatement TryStatement VariableDeclaration MemberReference IfStatement p - MemberReference MemberReference end MemberReference MemberReference MemberReference remove_backslashes sub p end MemberReference Literal MemberReference remove_backslashes bytes newpath + MemberReference Literal end BinaryOperation + MemberReference Literal end begin status func MemberReference MemberReference MemberReference MemberReference call int i Literal i end == MemberReference Literal StatementExpression BreakStatement JavaSecuredFile MemberReference BinaryOperation BinaryOperation newStringFromUTF8 bytes + BinaryOperation Literal - MemberReference BinaryOperation ReferenceType MemberReference "/" MemberReference MethodInvocation = jf BinaryOperation getEntry null MemberReference BinaryOperation = jf MemberReference getEntry null Assignment exists JavaSecuredFile cwd MemberReference MemberReference BinaryOperation newStringFromUTF8 Assignment MemberReference MemberReference MemberReference extract_path BinaryOperation ArrayCreator MemberReference MemberReference MemberReference MemberReference false null null == MemberReference Literal && BinaryOperation MethodInvocation Assignment MemberReference Literal MemberReference LocalVariableDeclaration ForStatement StatementExpression StatementExpression TryStatement StatementExpression && BinaryOperation BinaryOperation st isDirectory BinaryOperation BlockStatement mainLoop jar null ReferenceType VariableDeclarator ForControl BlockStatement LocalVariableDeclaration ForStatement ForStatement CatchClause ReferenceType VariableDeclarator link BinaryOperation BlockStatement sub begin newpath p end newpath 0 end begin 2 + MemberReference Literal begin 2 bytes begin end arg 0 ArraySelector bytes '!' Assignment bytes + MemberReference Literal - MemberReference Literal + MemberReference MemberReference 1 end + MemberReference Literal JarFile st jar jar Literal substring + MemberReference Literal jar + MemberReference Literal jar MemberReference MethodInvocation = bytes begin - MemberReference MemberReference MemberReference MethodInvocation = bytes begin p == MemberReference MemberReference BasicType ArrayInitializer base bytes p end ArraySelector dir '/' && BinaryOperation BinaryOperation MemberReference isdirsep MemberReference ClassCreator = dir 0 dir length BasicType VariableDeclarator ForControl BlockStatement Assignment Assignment StatementExpression IfStatement IfStatement CatchClause Assignment != MemberReference Literal || Literal BinaryOperation && BinaryOperation MethodInvocation LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement String dirp MethodInvocation VariableDeclaration BinaryOperation MemberReference IfStatement LocalVariableDeclaration IfStatement ReferenceType VariableDeclarator ForControl BlockStatement EnhancedForControl BlockStatement CatchClauseParameter ByteList b == MemberReference Literal IfStatement IfStatement begin 1 BinaryOperation MemberReference MemberReference = begin 5 ix 5 begin ix ix 1 1 jar "/" jar "/" status func MemberReference MemberReference MemberReference MemberReference call end begin status func MemberReference MemberReference BinaryOperation MemberReference call begin p byte Literal Literal && MemberReference BinaryOperation == MemberReference Literal ArraySelector dir st ReferenceType MethodInvocation int ix MemberReference VariableDeclaration BinaryOperation MemberReference IfStatement MemberReference ClassCreator = MemberReference MethodInvocation = Assignment MethodInvocation StatementExpression BinaryOperation StatementExpression CatchClauseParameter StatementExpression StatementExpression MemberReference ClassCreator = jf null MethodInvocation "" && BinaryOperation MethodInvocation != MemberReference Literal Arrays MemberReference MemberReference equals BasicType VariableDeclarator Assignment MethodInvocation MethodInvocation MethodInvocation Assignment BinaryOperation BlockStatement MemberReference files BasicType VariableDeclarator < MemberReference MemberReference ++ i MemberReference BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement List TypeArgument dirp ClassCreator VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement VariableDeclaration MemberReference LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement Exception e status 0 BinaryOperation BlockStatement BlockStatement MethodInvocation BlockStatement + MemberReference MemberReference ix i bytes begin end arg bytes begin - MemberReference MemberReference arg '.' 0 DOSISH < Literal MemberReference ArraySelector dir ':' Literal JavaSecuredFile MemberReference newStringFromUTF8 dir length BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement st ReferenceType MethodInvocation jar MemberReference BinaryOperation BinaryOperation newStringFromUTF8 MemberReference ClassCreator = jar Literal startsWith Assignment != MethodInvocation Literal Assignment Exception e Assignment Assignment st ReferenceType MemberReference MethodInvocation MemberReference equals != MethodInvocation Literal jf MethodInvocation MemberReference getJarEntry m - 1 magic DOUBLE_STAR int n MemberReference MemberReference Literal = buf Literal length buf MemberReference append buf MemberReference TernaryExpression BinaryOperation append MemberReference MethodInvocation = != MemberReference Literal BreakStatement st int i Literal i dirp length LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression StatementExpression IfStatement IfStatement ContinueStatement byte bs MethodInvocation == MethodInvocation Literal StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression StatementExpression ReferenceType ReferenceType ReferenceType VariableDeclarator hasMoreElements ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator dirp BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement MemberReference BlockStatement BinaryOperation BlockStatement || BinaryOperation BinaryOperation StatementExpression StatementExpression st isDirectory LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression begin i end begin 2 dir length Literal 2 dir int i Literal i dir length == MemberReference Literal StatementExpression BreakStatement JavaSecuredFile MemberReference Literal BinaryOperation newStringFromUTF8 dir + MemberReference Literal - MemberReference BinaryOperation jf ReferenceType MemberReference "/" MemberReference MethodInvocation = jf BinaryOperation getEntry null MemberReference BinaryOperation = MemberReference Literal = MemberReference Literal = JavaSecuredFile cwd MemberReference newStringFromUTF8 jar jf MemberReference getJarEntry null isDirectory jar base length true 0 base bytes BinaryOperation MemberReference BinaryOperation - MemberReference TernaryExpression status MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference glob_helper status 0 finalize 0 BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement MemberReference getBytesInUTF8 MemberReference Literal MemberReference MemberReference Literal MemberReference MemberReference fnmatch 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement MethodInvocation Assignment JarEntry ArrayList TypeArgument Enumeration TypeArgument MethodInvocation JarEntry je MethodInvocation String name MethodInvocation int ix MethodInvocation || BinaryOperation BinaryOperation IfStatement JarEntry je byte bs MethodInvocation int len MemberReference je isDirectory StatementExpression IfStatement StatementExpression StatementExpression StatementExpression StatementExpression IfStatement ContinueStatement == MethodInvocation Literal StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression StatementExpression == MemberReference Literal && BinaryOperation MethodInvocation Assignment Assignment BasicType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Assignment 1 0 ArraySelector dir '!' Assignment dir 5 - MemberReference Literal ix 1 dir length + MemberReference Literal JarFile st jar jar Literal substring + MemberReference Literal jar + MemberReference Literal jar null jf null dir jar > MemberReference Literal m + MemberReference Literal end BinaryOperation MemberReference BinaryOperation cwd buf bytes buf begin buf realSize n flags func arg byte bs MethodInvocation != MethodInvocation Literal ContinueStatement buf Literal length buf MemberReference append buf TernaryExpression append buf MethodInvocation append || BinaryOperation BinaryOperation StatementExpression StatementExpression && BinaryOperation Literal LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression IfStatement ArraySelector dirp magic 0 magic length bs 0 bs length flags buf Literal length buf MemberReference append buf TernaryExpression append buf MethodInvocation append == MemberReference Literal StatementExpression IfStatement ContinueStatement link MemberReference add MemberReference ClassCreator = ReferenceType ReferenceType jf entries nextElement je getName name Literal MethodInvocation indexOf == MemberReference Literal == MemberReference BinaryOperation BinaryOperation BlockStatement MethodInvocation getBytesInUTF8 bs length MemberReference BinaryOperation BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BlockStatement MemberReference Literal MemberReference MemberReference Literal MemberReference MemberReference fnmatch 0 MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement MethodInvocation Assignment b ArraySelector bytes '/' && BinaryOperation BinaryOperation MemberReference isdirsep MemberReference ClassCreator = MemberReference ClassCreator = int len MemberReference buf Literal length buf MemberReference append buf MemberReference MemberReference BinaryOperation append MemberReference MethodInvocation = MemberReference MemberReference MemberReference = ix 5 ix 1 1 jar "/" jar "/" base length 0 m 1 > MemberReference Literal m + MemberReference Literal MemberReference getBytesInUTF8 MemberReference Literal Literal MemberReference Literal MemberReference MemberReference fnmatch 0 0 base MethodInvocation MemberReference MemberReference MemberReference getBytesInUTF8 == MemberReference Literal && BinaryOperation MethodInvocation Assignment Assignment && MethodInvocation Literal ! MethodInvocation ".." BasicType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Assignment BinaryOperation BlockStatement MemberReference 0 base MethodInvocation MemberReference MemberReference MemberReference getBytesInUTF8 m - 1 Assignment BinaryOperation BlockStatement buf buf ReferenceType Literal JarEntry JarEntry '/' jar length ix - 1 ix - MethodInvocation Literal || Literal BinaryOperation StatementExpression je getName -- len != MethodInvocation Literal ContinueStatement buf Literal length buf MemberReference Literal BinaryOperation append buf TernaryExpression append buf MemberReference Literal MemberReference append je isDirectory LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression IfStatement magic 0 magic length bs 0 len flags buf Literal length buf MemberReference Literal BinaryOperation append buf TernaryExpression append buf MemberReference Literal MemberReference append == MemberReference Literal StatementExpression IfStatement ContinueStatement link MemberReference add MemberReference ClassCreator = Literal && MemberReference BinaryOperation == MemberReference Literal b ArraySelector bytes st ReferenceType MethodInvocation st ReferenceType MemberReference MethodInvocation b realSize 0 b bytes m - MemberReference MemberReference status MemberReference MemberReference Literal MemberReference MemberReference MemberReference MemberReference MemberReference glob_helper i ix i base length 0 m 1 ArraySelector dirp STAR 0 1 bs 0 bs length flags MemberReference SLASH ArraySelector dirp buf ArraySelector bytes '/' && BinaryOperation BinaryOperation MemberReference isdirsep MemberReference ClassCreator = MemberReference ClassCreator = st isDirectory ! MethodInvocation "." MemberReference equals int t MemberReference buf MemberReference append buf MemberReference append buf MemberReference MemberReference BinaryOperation append MemberReference MethodInvocation = != MemberReference Literal BreakStatement i MemberReference SLASH ArraySelector dirp MemberReference MethodInvocation = != MemberReference Literal BreakStatement ByteList 20 name length 1 MethodInvocation "/" && MethodInvocation BinaryOperation MethodInvocation MemberReference Literal Literal MemberReference Literal MemberReference MemberReference fnmatch 0 0 base 0 - MemberReference MethodInvocation MethodInvocation MemberReference MemberReference bs 0 len BasicType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Assignment BinaryOperation BlockStatement 0 base 0 - MemberReference MethodInvocation MethodInvocation MemberReference MemberReference bs 0 len m - 1 Assignment BinaryOperation BlockStatement buf buf ReferenceType Literal 0 DOSISH < Literal MemberReference b ArraySelector bytes ':' Literal JavaSecuredFile MemberReference Literal MemberReference newStringFromUTF8 JavaSecuredFile cwd MemberReference Literal MemberReference newStringFromUTF8 end m cwd buf bytes 0 buf realSize len flags func arg MemberReference base MemberReference Literal && MemberReference BinaryOperation == MemberReference Literal buf ArraySelector bytes st ReferenceType MethodInvocation st ReferenceType MemberReference MethodInvocation MemberReference equals ArraySelector dirp buf realSize SLASH DOUBLE_STAR bytes m - MemberReference MemberReference status MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference glob_helper status 0 base MemberReference status func MemberReference Literal MemberReference MemberReference call status 0 MemberReference equals name MemberReference startsWith > MethodInvocation MethodInvocation dirp MemberReference add STAR 0 1 bs 0 len flags base length jar length MemberReference SLASH int t MemberReference buf MemberReference append buf MemberReference append buf MemberReference MemberReference BinaryOperation append MemberReference MethodInvocation = != MemberReference Literal BreakStatement base length jar length MemberReference SLASH MemberReference MethodInvocation = != MemberReference Literal BreakStatement ByteList 20 2 b realSize Literal 2 b bytes 0 b realSize b bytes 0 b realSize i i 0 DOSISH < Literal MemberReference buf ArraySelector bytes ':' Literal JavaSecuredFile MemberReference MemberReference MemberReference newStringFromUTF8 JavaSecuredFile cwd MemberReference MemberReference MemberReference newStringFromUTF8 ArraySelector dirp MemberReference end m cwd buf bytes buf begin buf realSize t flags func arg i buf bytes 0 buf realSize arg jar jar name length jar length je base buf realSize SLASH DOUBLE_STAR bytes m - MemberReference MemberReference status MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference glob_helper status 0 base status func MemberReference Literal MemberReference MemberReference call status 0 1 2 buf realSize Literal 2 buf bytes buf begin buf realSize buf bytes buf begin buf realSize MemberReference i end m cwd buf bytes buf begin buf realSize t flags func arg buf bytes 0 buf realSize arg 1 i	1
MethodDeclaration Modifier ReferenceType next LocalVariableDeclaration IfStatement public Object ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Object result MemberReference == MemberReference Literal ThrowStatement StatementExpression StatementExpression ReturnStatement entry result null ClassCreator Assignment MethodInvocation MemberReference ReferenceType MemberReference MemberReference = result NoSuchElementException entry entry next	0
MethodDeclaration Modifier subpatSet19 FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression private ReferenceType context ReferenceType regexp ReferenceType backref ReferenceType repl ReferenceType VariableDeclarator BinaryOperation ThrowStatement ReferenceType VariableDeclarator BasicType VariableDeclarator Modifier BasicType VariableDeclarator VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation ThrowStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation ThreadContext RubyRegexp IRubyObject IRubyObject Ruby runtime MethodInvocation < MethodInvocation Literal MethodInvocation RubyMatchData match Cast int nth TernaryExpression final int start end == MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression == MemberReference Literal MethodInvocation RubyString replStr MethodInvocation Encoding enc MethodInvocation MemberReference BinaryOperation MemberReference replaceInternal MemberReference associateEncoding context getRuntime regexp MemberReference This Literal Literal search19 0 runtime Literal newIndexError ReferenceType MethodInvocation BinaryOperation Literal MethodInvocation match regs null Assignment Assignment Assignment Assignment start - 1 runtime BinaryOperation newIndexError repl convertToString MemberReference checkEncoding start - MemberReference MemberReference replStr enc context 0 false "regexp not matched" RubyMatchData context MethodInvocation getCurrentScope == MemberReference Literal 0 MemberReference MethodInvocation MemberReference MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = + BinaryOperation Literal replStr end start MemberReference backref null runtime match MemberReference match regs start match begin end match end start match.regs ArraySelector beg end match.regs ArraySelector end + Literal MemberReference " not matched" runtime backref MemberReference MemberReference "regexp group " nth nth nth	1
MethodDeclaration Modifier BasicType ReturnStatement static public byte Cast BasicType Literal byte 1	0
MethodDeclaration Modifier Annotation ReferenceType same FormalParameter IfStatement LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType other BinaryOperation BlockStatement BasicType VariableDeclarator TernaryExpression name Literal IRubyObject instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement StatementExpression boolean BinaryOperation MemberReference MethodInvocation MethodInvocation other JavaObject ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment == This MemberReference MethodInvocation getRuntime MethodInvocation getRuntime Object MethodInvocation instanceof MemberReference ReferenceType ReturnStatement MemberReference Cast = other getTrue getFalse other dataGetStruct JavaObject MethodInvocation other ReferenceType MemberReference MethodInvocation getRuntime IRubyObject getFalse	0
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType context ReferenceType buffer ReferenceType parameter MethodInvocation ThreadContext InvocationBuffer IRubyObject buffer MethodInvocation Util MemberReference uint8Value parameter	1
MethodDeclaration Modifier ReferenceType getBodyNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast Cast Cast getPosition ReferenceType Cast ReferenceType MemberReference ReferenceType MemberReference String ReferenceType MemberReference IterNode ArraySelector yyVals Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType filename ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal required Literal module Literal IRubyObject IRubyObject Ruby runtime MethodInvocation JRubyFile file MethodInvocation runtime BinaryOperation newBoolean 1 true recv getRuntime MemberReference file && MethodInvocation MethodInvocation filename file exists runtime MethodInvocation MethodInvocation getPosix MethodInvocation stat file getAbsolutePath	1
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public Object ReferenceType context ReferenceType rubyObject MethodInvocation BlockStatement ClassCreator ThreadContext IRubyObject rubyObject Literal respondsTo ReturnStatement ReferenceType Cast "to_i" ClassCreator Short BasicType Literal ReferenceType Cast short 0 Short BasicType Cast short ReferenceType MethodInvocation RubyNumeric rubyObject MemberReference Literal callMethod context "to_i"	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast Literal Cast Cast new_args Cast getPosition ReferenceType MemberReference ReferenceType MemberReference null ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals ListNode ArraySelector yyVals ListNode ArraySelector yyVals BlockArgNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 5 yyTop - 3 yyTop - 1 yyTop 0 yyTop - 5 yyTop	1
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement private final IRubyObject ReferenceType context ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 BasicType VariableDeclarator MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject long retval MethodInvocation resultConverter MemberReference MemberReference fromNative invoker MemberReference MethodInvocation MethodInvocation MethodInvocation context retval function c1 MemberReference MemberReference longValue c2 MemberReference MemberReference longValue c3 MemberReference MemberReference longValue context arg1 context arg2 context arg3	1
MethodDeclaration Modifier ReferenceType getBodyNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType target ReferenceType context ReferenceType name MethodInvocation RubyModule ThreadContext String runtimeCache MemberReference MemberReference MemberReference Literal target context name 2	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement public Operand Modifier ReferenceType andNode ReferenceType m MethodInvocation BlockStatement IfStatement final AndNode IR_Scope andNode MethodInvocation MethodInvocation getFirstNode StatementExpression ReturnStatement MethodInvocation BlockStatement BlockStatement MethodInvocation MethodInvocation andNode MethodInvocation MethodInvocation getFirstNode StatementExpression ReturnStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement MethodInvocation MemberReference build MethodInvocation MemberReference build MethodInvocation MemberReference ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference andNode getFirstNode m andNode m MethodInvocation MemberReference build BooleanLiteral FALSE Variable ret MethodInvocation Label l MethodInvocation Operand v1 MethodInvocation m ClassCreator addInstr m ClassCreator addInstr Operand v2 MethodInvocation m ClassCreator addInstr m ClassCreator addInstr ret andNode getFirstNode m m getNewVariable m MethodInvocation MemberReference build ReferenceType MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MethodInvocation MemberReference build ReferenceType MemberReference MemberReference ReferenceType MemberReference andNode getFirstNode m ret BooleanLiteral FALSE v1 BooleanLiteral FALSE l andNode m ret v2 LABEL_Instr l	0
MethodDeclaration Modifier Annotation store FormalParameter ThrowStatement public Deprecated ReferenceType symbol ClassCreator RubySymbol ReferenceType UnsupportedOperationException	1
MethodDeclaration Modifier ReferenceType getDescriptor ReturnStatement public ChannelDescriptor MemberReference descriptor	0
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler context MemberReference go	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType args MethodInvocation IRubyObject IRubyObject MethodInvocation MemberReference recv getRuntime args	1
MethodDeclaration Modifier FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression StatementExpression public ReferenceType clazz ReferenceType staticScope ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation RubyModule RubyModule implementationClass MethodInvocation == MemberReference Literal StatementExpression MethodInvocation MemberReference staticScope getModule implementationClass null Assignment staticScope implementationClass MemberReference MemberReference = implementationClass clazz	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod RubyString MethodInvocation MethodInvocation getRuntime MethodInvocation newString field	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference Object Object int int options Cast Node node Cast == MemberReference Literal StatementExpression BinaryOperation BlockStatement IfStatement yyVal ReferenceType MemberReference ReferenceType MemberReference node null Assignment instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement BlockStatement RegexpNode ArraySelector yyVals Node ArraySelector yyVals MemberReference ClassCreator = node StrNode Assignment instanceof MemberReference ReferenceType StatementExpression StatementExpression BinaryOperation BinaryOperation yyVal ReferenceType MethodInvocation MethodInvocation BinaryOperation MemberReference ClassCreator = node DStrNode Assignment Assignment + Literal MemberReference + Literal MemberReference RegexpNode Cast getPosition ByteList Literal create & MemberReference MemberReference yyVal ReferenceType Cast Cast BinaryOperation MemberReference ClassCreator = MemberReference ClassCreator = 0 yyTop - 1 yyTop ReferenceType MemberReference "" options ~ ReOptions RE_OPTION_ONCE RegexpNode ReferenceType MemberReference ReferenceType Cast & MemberReference MemberReference yyVal ReferenceType MethodInvocation Cast MemberReference BinaryOperation yyVal MethodInvocation ReferenceType MethodInvocation MemberReference BinaryOperation Token ArraySelector yyVals Node ArraySelector yyVals ByteList ReferenceType MemberReference options ~ ReOptions RE_OPTION_ONCE DRegexpNode Cast getPosition ReferenceType MemberReference options != BinaryOperation Literal MemberReference add DRegexpNode Cast getPosition options != BinaryOperation Literal BinaryOperation BinaryOperation StrNode node ReferenceType MemberReference DStrNode node & MemberReference MemberReference 0 node ReferenceType MemberReference & MemberReference MemberReference 0 + Literal MemberReference + Literal MemberReference Token ArraySelector yyVals options ReOptions RE_OPTION_ONCE Token ArraySelector yyVals options ReOptions RE_OPTION_ONCE - 2 yyTop - 1 yyTop BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop - 2 yyTop	1
MethodDeclaration Modifier ReferenceType nth_match FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration StatementExpression ReturnStatement static public IRubyObject BasicType nth ReferenceType match MethodInvocation ReturnStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation MemberReference int IRubyObject match isNil MemberReference RubyMatchData m Cast Ruby runtime MethodInvocation final int start end == MemberReference Literal IfStatement StatementExpression StatementExpression IfStatement StatementExpression StatementExpression == MemberReference Literal MethodInvocation RubyString str MethodInvocation str MemberReference infectBy str match ReferenceType MemberReference m getRuntime m regs null BinaryOperation ReturnStatement Assignment Assignment BinaryOperation ReturnStatement Assignment Assignment start - 1 runtime getNil m.str MemberReference MemberReference BinaryOperation makeShared m RubyMatchData match || BinaryOperation BinaryOperation MethodInvocation MemberReference MemberReference = MemberReference MemberReference = || BinaryOperation BinaryOperation MethodInvocation MemberReference MemberReference = MemberReference MemberReference = runtime start - MemberReference MemberReference >= MemberReference Literal && BinaryOperation BinaryOperation runtime getNil start m begin end m end >= MemberReference MemberReference && BinaryOperation BinaryOperation runtime getNil start m.regs ArraySelector beg end m.regs ArraySelector end end start nth 1 < MemberReference Literal <= MemberReference Literal nth m.regs numRegs < MemberReference Literal <= Assignment Literal MemberReference MemberReference nth 0 ++ nth 0 nth 0 MemberReference MemberReference += 0 nth nth nth m.regs numRegs	1
MethodDeclaration Modifier BasicType containsKey FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ForStatement ReturnStatement private boolean BasicType hash ReferenceType masked_key BasicType VariableDeclarator MethodInvocation ForControl BlockStatement Literal int Object int idx MethodInvocation VariableDeclaration BinaryOperation Assignment IfStatement false MemberReference index ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = MethodInvocation ReturnStatement hash Entry ent MemberReference ent null ent ent next ent MemberReference MemberReference Literal ArraySelector table hash masked_key true MemberReference idx	1
MethodDeclaration Modifier ReferenceType getAnnotatedMethodClass FormalParameter Exception LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration SynchronizedStatement public Class ReferenceType descs ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BlockStatement ReferenceType VariableDeclarator MemberReference StatementExpression ReferenceType VariableDeclarator MemberReference BlockStatement ReferenceType VariableDeclarator MemberReference LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement List TypeArgument JavaMethodDescriptor desc1 MethodInvocation == MethodInvocation Literal ReturnStatement ! Modifier MethodInvocation isPublic StatementExpression String javaMethodName MemberReference DEBUG MethodInvocation String generatedClassName MethodInvocation RubyInstanceConfig FULL_TRACE_ENABLED StatementExpression String generatedClassPath MethodInvocation classLoader ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference StatementExpression BinaryOperation BlockStatement MemberReference ReferenceType descs Literal get descs size 1 MethodInvocation desc1 MethodInvocation getDeclaringClass MethodInvocation desc1 name out BinaryOperation println CodegenUtils MemberReference MemberReference MemberReference MemberReference MemberReference Literal MethodInvocation Assignment generatedClassName Literal Literal replace Class c MethodInvocation DescriptorInfo info ClassCreator DEBUG MethodInvocation == MemberReference Literal LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression c JavaMethodDescriptor 0 MemberReference getAnnotatedMethodClass getModifiers System.err BinaryOperation println + BinaryOperation MemberReference javaMethodName desc1 declaringClassName desc1 isStatic desc1 actualRequired desc1 optional true frame MemberReference Literal += '.' '/' MemberReference MethodInvocation tryClass ReferenceType MemberReference out BinaryOperation println c null ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation ThrowStatement ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator EnhancedForControl BlockStatement Assignment desc1 + BinaryOperation Literal + BinaryOperation Literal javaMethodName generatedClassName generatedClassName desc1 getDeclaringClass DescriptorInfo descs + BinaryOperation MethodInvocation Class superClass Literal == MethodInvocation Literal StatementExpression IfStatement == MemberReference Literal ClassCreator String MethodInvocation int dotIndex MethodInvocation ClassWriter cw MethodInvocation VariableDeclaration MemberReference LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression MemberReference MethodInvocation = + Literal MemberReference "; reflected handles won't work" + Literal MemberReference "." + BinaryOperation Literal info isRest null info - 1 Assignment MethodInvocation BlockStatement BlockStatement superClass null ReferenceType Literal MemberReference p Literal lastIndexOf MemberReference BinaryOperation MemberReference createJavaMethodCtor ReferenceType VariableDeclarator descs BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation c MemberReference MemberReference "warning: non-public class" desc1 declaringClassName "Binding " desc1 declaringClassName + BinaryOperation MethodInvocation ", " MemberReference ClassReference = info isRest IfStatement IfStatement RuntimeException "invalid multi superClass '.' generatedClassPath + BinaryOperation MemberReference JavaMethodDescriptor desc int specificArity Literal && BinaryOperation MemberReference IfStatement boolean hasBlock MemberReference SkinnyMethodAdapter mv Literal MemberReference MethodInvocation = mv visitCode Label line ClassCreator mv Literal MemberReference visitLineNumber MemberReference MemberReference MemberReference MemberReference MemberReference createAnnotatedMethodInvocation MemberReference cw generatedClassName + BinaryOperation Literal info superClass JavaMethod ReferenceType MethodInvocation BlockStatement BlockStatement MethodInvocation BlockStatement BlockStatement + MethodInvocation Literal desc1 name - 1 == MemberReference Literal ! desc rest BinaryOperation BlockStatement IfStatement desc hasBlock null mv MemberReference Literal MemberReference MemberReference ReferenceType 0 line desc mv specificArity hasBlock mv + BinaryOperation MethodInvocation ", " JavaMethodN info StatementExpression StatementExpression info StatementExpression StatementExpression BinaryOperation substring "#" desc optional 0 == MemberReference Literal IfStatement BinaryOperation BlockStatement cw "call" specificArity hasBlock Label + BinaryOperation Literal info getMax Assignment Assignment Assignment Assignment + MemberReference Literal desc required 0 BinaryOperation BlockStatement BlockStatement && BinaryOperation BinaryOperation StatementExpression + Literal MethodInvocation ", max: " MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = dotIndex 1 <= MemberReference Literal StatementExpression StatementExpression >= MemberReference Literal <= MemberReference Literal Assignment " " info superClass JavaMethod ArraySelector ArraySelector superClass JavaMethod ArraySelector ArraySelector superClass JavaMethod ArraySelector ArraySelector superClass JavaMethod ArraySelector ArraySelector desc actualRequired 3 Assignment Assignment desc required 0 desc required 3 MemberReference MemberReference = MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference MemberReference = MemberReference Literal = specificArity desc required info info getMax info info getMax info info getMax info info getMax specificArity desc actualRequired specificArity - 1	1
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType ZSUPERNODE	0
MethodDeclaration Modifier ReferenceType dbl_cmp FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement static public IRubyObject ReferenceType runtime BasicType a BasicType b BinaryOperation ReturnStatement TernaryExpression Ruby double double || MethodInvocation MethodInvocation MethodInvocation BinaryOperation MethodInvocation TernaryExpression Double MemberReference isNaN Double MemberReference isNaN runtime getNil == MemberReference MemberReference RubyFixnum MemberReference zero BinaryOperation MethodInvocation MethodInvocation a b a b runtime > MemberReference MemberReference RubyFixnum MemberReference one RubyFixnum MemberReference minus_one a b runtime runtime	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast Cast Literal new_call ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference null Node ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement protected static IRubyObject ReferenceType context ReferenceType arg MethodInvocation ThreadContext IRubyObject context MethodInvocation MethodInvocation getRuntime MemberReference Literal MemberReference callMethod context arg	0
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	1
MethodDeclaration Modifier Annotation BasicType FormalParameter FormalParameter ReturnStatement public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyHash	0
MethodDeclaration Modifier Annotation BasicType equals FormalParameter ReturnStatement public Override boolean ReferenceType obj BinaryOperation Object && BinaryOperation BinaryOperation instanceof MemberReference ReferenceType == Cast Literal obj ReferenceType MemberReference 0 obj	0
MethodDeclaration Modifier ReferenceType get LocalVariableDeclaration IfStatement ReturnStatement private Map TypeArgument TypeArgument ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ReferenceType ReferenceType Map TypeArgument TypeArgument patternCache MethodInvocation == MemberReference Literal StatementExpression StatementExpression patternCache ByteList Regex ReferenceType ReferenceType cache get patternCache null Assignment Assignment ByteList Regex MemberReference ClassCreator = MemberReference ClassCreator = patternCache ReferenceType Literal cache ReferenceType MemberReference ConcurrentHashMap TypeArgument TypeArgument 5 SoftReference TypeArgument patternCache ReferenceType ReferenceType ReferenceType ByteList Regex Map TypeArgument TypeArgument ReferenceType ReferenceType ByteList Regex	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement StatementExpression StatementExpression public ReferenceType clazz ReferenceType name ReferenceType staticScope MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation RubyModule String MemberReference RubyModule implementationClass MethodInvocation == MemberReference Literal StatementExpression MethodInvocation MemberReference name staticScope getModule implementationClass null Assignment staticScope implementationClass MemberReference MemberReference = implementationClass clazz	1
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter ReturnStatement public String BasicType c Literal char "char"	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg1 ReferenceType arg2 MethodInvocation MethodInvocation name Literal compat MemberReference IRubyObject IRubyObject modifyCheck MemberReference MemberReference insert CompatVersion RUBY1_9 arg1 arg2	0
MethodDeclaration Modifier FormalParameter IOException StatementExpression StatementExpression StatementExpression public ReferenceType value MethodInvocation MethodInvocation MethodInvocation String Literal write MethodInvocation writeInt out MethodInvocation write ':' value length RubyString MemberReference value	0
MethodDeclaration Modifier Annotation ReferenceType shift FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType num MethodInvocation ReferenceType VariableDeclarator BasicType VariableDeclarator Assignment Assignment MemberReference name Literal ThreadContext IRubyObject modify RubyArray result MethodInvocation int n MemberReference MemberReference MemberReference += MemberReference MemberReference -= result MemberReference MemberReference Literal MethodInvocation result realLength begin n realLength n context num false context MethodInvocation getRuntime getArray	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter ReturnStatement final public double BasicType buffer BasicType offset MethodInvocation byte int Double MethodInvocation MemberReference MemberReference buffer offset	0
MethodDeclaration Modifier Annotation ReferenceType op_equal FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType other Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation name Literal required Literal IRubyObject final BigInteger otherValue instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement IfStatement RubyBoolean MethodInvocation BinaryOperation newBoolean "==" 1 other RubyFixnum Assignment instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement BlockStatement getRuntime == MethodInvocation Literal MemberReference MethodInvocation = other RubyBignum Assignment instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement ReturnStatement ReturnStatement value MemberReference compareTo 0 otherValue Cast fix2big MemberReference Cast = other RubyFloat BasicType VariableDeclarator MethodInvocation BlockStatement MethodInvocation MethodInvocation otherValue ReferenceType MemberReference otherValue ReferenceType MemberReference double a Cast Double MemberReference isNaN ReturnStatement RubyBoolean MethodInvocation BinaryOperation newBoolean other MethodInvocation This RubyFixnum other RubyBignum other ReferenceType MemberReference a MethodInvocation getRuntime == MemberReference MethodInvocation MethodInvocation getRuntime RubyFloat other MethodInvocation getRuntime a This big2dbl getCurrentContext getFalse	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal module Literal visibility MemberReference IRubyObject RubyBasicObject res Cast res MethodInvocation taint res true Visibility PRIVATE ReferenceType Cast recv getRuntime RubyBasicObject ReferenceType MemberReference RubyModule recv	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType Literal Ruby ThreadContext IRubyObject Block	0
MethodDeclaration Modifier StatementExpression StatementExpression public MethodInvocation MethodInvocation Literal MethodInvocation ClassReference MethodInvocation sig ReferenceType params RubyClass	0
MethodDeclaration Modifier ReferenceType awkSplit FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement IfStatement ReturnStatement private RubyArray BasicType limit BasicType lim BasicType i ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator VariableDeclarator BinaryOperation BlockStatement BinaryOperation StatementExpression MemberReference boolean int int Ruby runtime MethodInvocation RubyArray result MethodInvocation byte bytes MemberReference int p MemberReference int len MemberReference int end BinaryOperation boolean skip Literal int e Literal b Literal < MemberReference MemberReference LocalVariableDeclaration IfStatement && BinaryOperation BinaryOperation MethodInvocation result getRuntime runtime newArray value bytes value begin value realSize + MemberReference MemberReference true 0 0 p end BasicType VariableDeclarator MemberReference BlockStatement BlockStatement > MemberReference Literal || BinaryOperation BinaryOperation result MethodInvocation append p len int c BinaryOperation skip IfStatement IfStatement len 0 || MemberReference BinaryOperation < MemberReference Literal MemberReference MemberReference BinaryOperation makeShared & MemberReference Literal MethodInvocation BlockStatement BlockStatement MethodInvocation BlockStatement BlockStatement limit > MemberReference MemberReference lim 0 runtime b - MemberReference MemberReference ArraySelector bytes 0xff ASCII MemberReference isSpace StatementExpression StatementExpression StatementExpression IfStatement ASCII MemberReference isSpace StatementExpression StatementExpression StatementExpression IfStatement StatementExpression len b len b MemberReference c MemberReference Assignment Assignment BinaryOperation BreakStatement c MethodInvocation Assignment Assignment MemberReference StatementExpression MemberReference ++ p ++ b MemberReference BinaryOperation = MemberReference Literal = && MemberReference BinaryOperation result MethodInvocation append MemberReference Literal = MemberReference BinaryOperation = limit MemberReference ++ e e + MemberReference Literal skip false limit <= MemberReference MemberReference MemberReference MemberReference BinaryOperation makeShared skip true b + MemberReference Literal ++ i b 1 lim i runtime b - MemberReference MemberReference e 1 e b	1
MethodDeclaration Modifier Annotation ReferenceType asJavaString ReturnStatement public Override String MethodInvocation toString	0
MethodDeclaration Modifier Annotation ReferenceType op_rshift FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType other BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation name Literal required Literal IRubyObject long shift boolean neg Literal IfStatement StatementExpression MethodInvocation TernaryExpression bignorm ">>" 1 false BinaryOperation BlockStatement IfStatement Assignment getRuntime MemberReference MethodInvocation MethodInvocation instanceof MemberReference ReferenceType StatementExpression IfStatement BreakStatement BinaryOperation BlockStatement MemberReference MethodInvocation = neg value Cast shiftLeft value Cast other RubyFixnum Assignment BinaryOperation BlockStatement instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement StatementExpression BreakStatement other other convertToInteger BasicType MemberReference BasicType MemberReference MemberReference Cast = < MemberReference Literal StatementExpression StatementExpression other RubyBignum ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Assignment int shift int shift shift ReferenceType MemberReference shift 0 Assignment Assignment RubyBignum otherBignum Cast >= MethodInvocation Literal LocalVariableDeclaration IfStatement StatementExpression MemberReference MethodInvocation = RubyFixnum other MemberReference Literal = MemberReference MemberReference = ReferenceType MemberReference signum 0 ReferenceType VariableDeclarator MethodInvocation ReturnStatement Assignment shift MemberReference neg true shift - shift RubyBignum other IRubyObject tmp MethodInvocation ! tmp isNil MemberReference MemberReference Literal = otherBignum otherBignum This checkShiftDown tmp neg true	1
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyModule MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg BinaryOperation BlockStatement BlockStatement ThreadContext IRubyObject RubyModule String IRubyObject instanceof MemberReference ReferenceType ReturnStatement ReturnStatement arg JavaObjectWrapper MethodInvocation MethodInvocation context MethodInvocation getRuntime context MethodInvocation getRuntime Cast newBoolean getFalse ReferenceType MemberReference JavaObjectWrapper self	0
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Set TypeArgument ReferenceType MethodInvocation ReferenceType BasicBlock MemberReference CFG_Edge	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public Object ReferenceType a ReferenceType b ReferenceType c ReferenceType d ReferenceType obj MethodInvocation Object Object Object Object obj	0
MethodDeclaration Modifier ReferenceType ReturnStatement public IRubyObject MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType StatementExpression IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation MethodInvocation ReturnStatement MethodInvocation name Literal check ! isMatched MethodInvocation RubyFixnum MethodInvocation BinaryOperation newFixnum MethodInvocation getRuntime getRuntime - MemberReference MemberReference getNil end beg	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement private boolean ReferenceType context BasicType level ReferenceType result ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator Literal BlockStatement MemberReference ThreadContext int RubyArray Ruby runtime MethodInvocation RubyArray stack ClassCreator IdentityHashMap TypeArgument TypeArgument memo ClassCreator RubyArray ary This memo MemberReference MemberReference put boolean modified Literal int i Literal true LocalVariableDeclaration WhileStatement IfStatement StatementExpression StatementExpression StatementExpression StatementExpression modified context getRuntime ReferenceType MemberReference MemberReference Literal ReferenceType ReferenceType ReferenceType ary NEVER false 0 ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BreakStatement MethodInvocation Assignment Assignment Assignment RubyArray runtime ARRAY_DEFAULT_SIZE false Object Object IdentityHashMap TypeArgument TypeArgument IRubyObject tmp < MemberReference MemberReference LocalVariableDeclaration StatementExpression IfStatement == MemberReference Literal memo MemberReference remove MemberReference MethodInvocation = MemberReference Cast = MemberReference Cast = ReferenceType ReferenceType i ary realLength ReferenceType VariableDeclarator Assignment BinaryOperation BlockStatement BlockStatement stack realLength 0 ary tmp stack MemberReference pop i BasicType Cast ary ReferenceType MethodInvocation Object Object IRubyObject elt MemberReference MemberReference MethodInvocation = || MethodInvocation BinaryOperation StatementExpression StatementExpression IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression context int ReferenceType MemberReference RubyArray stack MemberReference pop ary ArraySelector values tmp elt checkArrayType tmp isNil && BinaryOperation BinaryOperation MethodInvocation Assignment BinaryOperation ThrowStatement MethodInvocation MethodInvocation MethodInvocation Assignment Assignment RubyFixnum tmp context BinaryOperation >= MemberReference Literal >= BinaryOperation MemberReference result MemberReference append MemberReference Literal = != MethodInvocation Literal MethodInvocation memo MemberReference MemberReference put stack MemberReference append stack MethodInvocation append MemberReference Cast = MemberReference Literal = + MemberReference MemberReference level 0 / MemberReference Literal level elt modified true memo MemberReference get null runtime Literal newArgumentError tmp NEVER ary RubyFixnum MemberReference MemberReference newFixnum ary ReferenceType MemberReference i 0 ary begin ++ i stack realLength 2 tmp "tried to array" runtime i RubyArray tmp	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod IRubyObject ReferenceType context ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ThreadContext ReferenceType addr MethodInvocation len ClassCreator < MethodInvocation Literal StatementExpression MethodInvocation MemberReference MemberReference newInstance ReferenceType MemberReference INSTANCE MemberReference MemberReference MemberReference 0 MethodInvocation context getRuntime addr len fd addr len MethodInvocation Literal context getRuntime	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType block TernaryExpression name Literal optional Literal frame Literal writes MemberReference ThreadContext IRubyObject Block MethodInvocation MethodInvocation MethodInvocation 1 true block isGiven MemberReference MemberReference MemberReference MethodInvocation This Literal MemberReference enumeratorize context args block context getRuntime args	0
MethodDeclaration Modifier ReferenceType ReturnStatement public MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ThrowStatement private static IRubyObject ReferenceType context ReferenceType recv ReferenceType symbol ReferenceType lastVis ReferenceType lastCallType ReferenceType args ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ClassCreator ThreadContext IRubyObject RubySymbol Visibility CallType IRubyObject Block Ruby runtime MethodInvocation IRubyObject msg ClassCreator final IRubyObject exArgs final RubyClass exc != MemberReference MemberReference StatementExpression StatementExpression StatementExpression StatementExpression ReferenceType Cast context getRuntime ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference lastCallType CallType VARIABLE Assignment Assignment Assignment Assignment RaiseException ReferenceType MethodInvocation ReferenceType runtime recv symbol lastVis lastCallType MemberReference MethodInvocation = MemberReference ArrayCreator = MemberReference MethodInvocation = MemberReference ArrayCreator = RubyException exc MemberReference MemberReference MemberReference newInstance exc runtime exArgs ReferenceType ArrayInitializer exc runtime exArgs ReferenceType ArrayInitializer context exArgs Block IRubyObject MemberReference MemberReference MethodInvocation IRubyObject MemberReference MemberReference msg symbol RubyArray MemberReference MemberReference Literal msg symbol runtime args 1	1
MethodDeclaration Modifier prepare FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement public ReferenceType context ReferenceType runtime ReferenceType self ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType block ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement BinaryOperation StatementExpression ThreadContext Ruby IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block DynamicScope scope MethodInvocation isSimple StatementExpression StatementExpression != MethodInvocation Literal MethodInvocation context getCurrentScope MethodInvocation MethodInvocation getBlock null MemberReference MemberReference MemberReference processBlockArg scope MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference ArrayCreator MemberReference prepare scope runtime block arg0 arg1 arg2 arg3 context runtime self ReferenceType ArrayInitializer block IRubyObject MemberReference MemberReference MemberReference MemberReference arg0 arg1 arg2 arg3	1
MethodDeclaration Modifier ReferenceType createSymbolKey FormalParameter FormalParameter IfStatement ReturnStatement private static final RubySymbol ReferenceType runtime ReferenceType key BinaryOperation BlockStatement MethodInvocation Ruby IRubyObject instanceof MemberReference ReferenceType ReturnStatement runtime MethodInvocation key RubySymbol Cast MethodInvocation ReferenceType MemberReference key asJavaString RubySymbol key	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static final MemoryPointer ReferenceType runtime BasicType BasicType count BasicType clear Modifier BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ClassCreator Ruby int int boolean final int total BinaryOperation AllocatedDirectMemoryIO io MethodInvocation == MemberReference Literal ThrowStatement ReferenceType MemberReference MethodInvocation MemberReference MemberReference MemberReference * MemberReference MemberReference Factory MethodInvocation getInstance io null ClassCreator MemoryPointer runtime runtime MethodInvocation Literal fastGetModule io total count MemberReference TernaryExpression MemberReference ReferenceType MemberReference MethodInvocation MethodInvocation Literal Literal fastGetClass runtime BinaryOperation MemberReference Literal clear RaiseException runtime runtime String Literal MemberReference MemberReference format true "MemoryPointer" > MemberReference Literal total 1 "Failed to %d objects of %d count total 0	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType receiver ReferenceType args MethodInvocation IRubyObject IRubyObject RuntimeHelpers MethodInvocation MemberReference MemberReference MemberReference receiver MethodInvocation getRuntime receiver args Block getCurrentContext	0
MethodDeclaration Modifier ReferenceType execute FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public IRubyObject ReferenceType recv ReferenceType args ReferenceType block MethodInvocation MethodInvocation IRubyObject IRubyObject Block Arity MethodInvocation MemberReference Literal Literal checkArgumentCount Java MemberReference MemberReference recv getRuntime args 1 1 recv ArraySelector args Literal 0	0
MethodDeclaration Modifier Annotation ReferenceType set FormalParameter StatementExpression ReturnStatement public Override IRubyObject ReferenceType MethodInvocation MemberReference IRubyObject runtime MethodInvocation getCurrentContext MemberReference	0
MethodDeclaration Modifier remove IfStatement StatementExpression public BinaryOperation BlockStatement MethodInvocation == MemberReference MemberReference ThrowStatement MemberReference entry head ClassCreator entry ReferenceType Literal IllegalStateException out of range"	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public CallSite ReferenceType caller ReferenceType name ReferenceType type ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference Class String == MemberReference Literal StatementExpression StatementExpression MethodInvocation MethodInvocation MemberReference name "call" Assignment Assignment type Literal ClassReference MethodHandles MethodInvocation Literal MemberReference MemberReference ClassCreator = MemberReference ClassCreator = 0 ReferenceType MethodHandles MethodInvocation lookup 0 ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference ClassReference Literal MemberReference caller name type CallType NORMAL caller name type CallType FUNCTIONAL ReferenceType	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration IfStatement private final IRubyObject ReferenceType runtime ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Ruby ByteList result ClassCreator MemberReference MemberReference = result Cast append result MemberReference append RubyString str MethodInvocation && MethodInvocation MethodInvocation ReturnStatement StatementExpression LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement ReferenceType BinaryOperation result encoding symbolBytes encoding BasicType Literal symbolBytes RubyString MemberReference MemberReference newString isPrintable MemberReference isSymbolName MemberReference Assignment ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference ByteList + MemberReference Literal byte ':' runtime result symbol str MemberReference Cast = ByteList bytes MethodInvocation bytes Literal Literal set bytes Literal Literal set str symbolBytes realSize 1 str ReferenceType MethodInvocation str getByteList 0 ':' 1 '"' RubyString str	1
MethodDeclaration Modifier ReferenceType makeShared FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement final public RubyString ReferenceType runtime BasicType index BasicType len Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation MemberReference Ruby int int final RubyString shared RubyClass meta MethodInvocation == MemberReference Literal StatementExpression BinaryOperation BlockStatement BlockStatement shared This infectBy shared getMetaClass len 0 Assignment == MemberReference Literal StatementExpression IfStatement StatementExpression StatementExpression MemberReference MethodInvocation = len 1 Assignment BinaryOperation StatementExpression Assignment Assignment shared MemberReference MemberReference newEmptyString MemberReference MethodInvocation = == MemberReference MemberReference Assignment MemberReference ClassCreator = MemberReference MemberReference = runtime meta shared MemberReference MemberReference MemberReference MemberReference MemberReference = shared ReferenceType MemberReference MemberReference MethodInvocation shared SHARE_LEVEL_BUFFER runtime meta RubyInteger ArraySelector SINGLE_CHAR_BYTELISTS SHARE_LEVEL_BUFFER RubyString runtime meta value MemberReference MemberReference makeShared BinaryOperation index len & MemberReference Literal value ArraySelector bytes 0xff BinaryOperation + MemberReference MemberReference value begin index	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self BasicType MethodInvocation ThreadContext IRubyObject IRubyObject long MemberReference MemberReference MemberReference MethodInvocation call context caller self RubyFixnum MethodInvocation MemberReference newFixnum context getRuntime	0
MethodDeclaration Modifier Exception StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression TryStatement public Assignment MethodInvocation Assignment ReferenceType VariableDeclarator MethodInvocation MethodInvocation LocalVariableDeclaration LocalVariableDeclaration IfStatement CatchClause MemberReference ClassCreator = testDir mkdirs MemberReference ClassCreator = FileWriter fw ClassCreator fw Literal write fw close ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement CatchClauseParameter testDir ReferenceType Literal testFile ReferenceType MemberReference Literal ReferenceType MemberReference ByteArrayOutputStream baos ClassCreator int result MethodInvocation == MemberReference Literal LocalVariableDeclaration StatementExpression StatementExpression Exception e File File testDir FileWriter testFile ReferenceType MemberReference ArrayCreator MemberReference result 0 ReferenceType VariableDeclarator Assignment MethodInvocation ByteArrayOutputStream runtime ReferenceType ArrayInitializer baos String msg MethodInvocation MemberReference MethodInvocation = Literal MemberReference assertEquals IRubyObject MethodInvocation MethodInvocation MethodInvocation baos toString msg msg Literal Literal replaceAll msg RubyString MemberReference Literal newString RubyString MemberReference Literal newString RubyString MemberReference MethodInvocation newString "\n" "" runtime runtime "-1" runtime testDir getName	1
MethodDeclaration Modifier Annotation ReferenceType library FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MemberReference name Literal ThreadContext library	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType block MethodInvocation BlockStatement BlockStatement ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject Block block isGiven LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement ReturnStatement ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference MethodInvocation Ruby runtime MethodInvocation MemberReference proxy MethodInvocation RubyProc proc MethodInvocation JavaConstructor constructor Cast Object cArg0 MethodInvocation Object cArg1 MethodInvocation Object MethodInvocation proxy MethodInvocation self MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context getRuntime runtime MemberReference RubyProc MethodInvocation MemberReference MemberReference newProc ReferenceType MethodInvocation MemberReference MemberReference MemberReference Literal convertArg MemberReference MemberReference MemberReference Literal convertArg MemberReference MemberReference MemberReference Literal convertArg JavaObject MemberReference MethodInvocation wrap context self clazz name arg0 arg1 self self getRuntime block Block.Type JavaConstructor MemberReference MemberReference MemberReference MemberReference MemberReference context arg0 constructor 0 context arg1 constructor 1 context proc constructor 2 runtime constructor MemberReference MemberReference MemberReference self name arg0 arg1 proc cArg0 cArg1	0
MethodDeclaration Modifier init_sock FormalParameter TryStatement protected ReferenceType runtime LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression CatchClause Ruby ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement ModeFlags modes ClassCreator openFile ClassCreator setMainStream openFile MethodInvocation setPipeStream openFile MethodInvocation setMode openFile MethodInvocation getMainStream InvalidValueException MethodInvocation ReferenceType MemberReference ReferenceType MemberReference ClassCreator openFile getMainStream modes Literal setSync runtime newErrnoEINVALError ModeFlags ModeFlags RDWR ChannelStream runtime ReferenceType ClassCreator MethodInvocation MemberReference ClassCreator true ChannelDescriptor ReferenceType MemberReference getNewFileno modes ReferenceType fd java ReferenceType io ReferenceType FileDescriptor	1
MethodDeclaration Modifier ReferenceType IfStatement public BinaryOperation BlockStatement BlockStatement == MethodInvocation MemberReference ReturnStatement ReturnStatement CompatVersion RUBY1_8 ClassCreator ClassCreator ReferenceType ReferenceType	0
MethodDeclaration Modifier FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression static public ReferenceType runtime MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby runtime MethodInvocation RubyModule mDigest MethodInvocation RubyClass cDigestBase MethodInvocation RubyClass cDigest_MD5 MethodInvocation cDigest_MD5 Literal ClassCreator cDigest_MD5 Literal MethodInvocation setInternalModuleVariable Literal require runtime Literal fastGetModule mDigest Literal fastGetClass mDigest Literal MemberReference MethodInvocation defineClassUnder "block_length" ReferenceType MethodDeclaration MethodDeclaration "metadata" runtime Literal newString "digest.so" "Digest" "Base" cDigestBase cDigestBase getAllocator Callback Modifier ReferenceType ReturnStatement Modifier ReferenceType execute FormalParameter FormalParameter FormalParameter ReturnStatement public Arity MemberReference public IRubyObject ReferenceType recv ReferenceType args ReferenceType block MethodInvocation Arity IRubyObject IRubyObject Block RubyFixnum MethodInvocation Literal newFixnum recv getRuntime 64	1
MethodDeclaration Modifier Annotation ReferenceType eql_p FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation ReturnStatement TernaryExpression name Literal ThreadContext IRubyObject != MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation "eql?" getClass other getClass MethodInvocation getRuntime MemberReference This MemberReference equalInternal MethodInvocation getRuntime MethodInvocation getRuntime getFalse context other getTrue getFalse	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement public IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MemberReference Ruby ThreadContext IRubyObject Block int size MethodInvocation IRubyObject array ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression array size ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment IRubyObject size int i Literal i size MemberReference MethodInvocation = 0 ArraySelector array MethodInvocation MemberReference get MemberReference MemberReference MemberReference MemberReference MemberReference i i runtime context self	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement public ReferenceType methodName ReferenceType arg BinaryOperation BlockStatement IfStatement Literal String instanceof MemberReference ReferenceType IfStatement BinaryOperation BlockStatement null arg Fixnum MethodInvocation ReturnStatement IfStatement instanceof MemberReference ReferenceType IfStatement methodName Literal equals ClassCreator MethodInvocation ReturnStatement IfStatement arg Float MethodInvocation ReturnStatement IfStatement "+" ReferenceType BinaryOperation methodName Literal equals ClassCreator MethodInvocation ReturnStatement IfStatement methodName Literal equals ClassCreator MethodInvocation ReturnStatement IfStatement Fixnum + MemberReference Cast "-" ReferenceType BinaryOperation methodName Literal equals ClassCreator MethodInvocation BlockStatement "+" ReferenceType BinaryOperation methodName Literal equals ClassCreator MethodInvocation ReturnStatement IfStatement ReferenceType MemberReference Fixnum - MemberReference Cast "*" ReferenceType BinaryOperation methodName Literal equals LocalVariableDeclaration ReturnStatement Float + MemberReference Cast "-" ReferenceType BinaryOperation methodName Literal equals ClassCreator MethodInvocation BlockStatement Fixnum arg ReferenceType MemberReference Fixnum * MemberReference Cast "/" ReferenceType VariableDeclarator TernaryExpression ReferenceType MemberReference Float - MemberReference Cast "*" ReferenceType BinaryOperation methodName Literal equals LocalVariableDeclaration ReturnStatement Fixnum arg ReferenceType MemberReference Long divisor Cast BinaryOperation Literal ClassCreator Float arg ReferenceType MemberReference Float * MemberReference Cast "/" ReferenceType VariableDeclarator TernaryExpression Fixnum arg ReferenceType MemberReference == MemberReference Literal null ReferenceType BinaryOperation Float arg ReferenceType MemberReference Double divisor Cast BinaryOperation Literal ClassCreator Fixnum arg divisor 0L Fixnum / MemberReference MemberReference Float arg ReferenceType MemberReference == MemberReference Literal null ReferenceType BinaryOperation divisor Float arg divisor 0.0 Float / MemberReference MemberReference divisor	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation StatementExpression ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation BlockStatement BlockStatement name Literal reads MemberReference writes MemberReference compat MemberReference ThreadContext Ruby runtime MethodInvocation DynamicScope scope MethodInvocation IRubyObject backref MethodInvocation instanceof MemberReference ReferenceType Cast IRubyObject s MethodInvocation RubyArray a MethodInvocation scope MemberReference setBackRef ! a MethodInvocation Literal eltInternal ReturnStatement ReturnStatement BACKREF BACKREF CompatVersion RUBY1_9 context getRuntime context getCurrentScope scope MemberReference backref RubyMatchData ReferenceType MemberReference RuntimeHelpers MemberReference This Literal MethodInvocation MethodInvocation invoke RubyComplex MemberReference MemberReference str_to_c_internal backref isNil 0 MethodInvocation MethodInvocation runtime RubyMatchData backref context RubyRegexp MemberReference MemberReference newDummyRegexp runtime ClassCreator newString context s a Literal eltInternal RubyComplex MemberReference MethodInvocation runtime Numeric.ComplexPatterns ReferenceType ArrayCreator 0 context RubyFixnum MemberReference zero ByteList BasicType ArrayInitializer runtime byte Literal '_'	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject MethodInvocation proxy MethodInvocation JavaMethod method Cast Object cArg0 MethodInvocation method MethodInvocation MemberReference self getRuntime MemberReference ReferenceType MethodInvocation MemberReference MemberReference MemberReference Literal convertArg proxy getObject cArg0 self JavaMethod MemberReference MemberReference MemberReference context arg0 method 0 self name arg0	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType src ReferenceType repl MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject IRubyObject MemberReference MemberReference MemberReference Literal CompatVersion RUBY1_8 context src repl true	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter SwitchStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject RubyModule String IRubyObject args length Literal ReturnStatement Literal ReturnStatement ReturnStatement 2 MethodInvocation 3 MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call This MemberReference MemberReference MemberReference Literal Literal raiseArgumentError context self clazz name ArraySelector args ArraySelector args context self clazz name ArraySelector args ArraySelector args ArraySelector args context name args length 2 3 Literal Literal Literal Literal Literal 0 1 0 1 2	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean BinaryOperation == MemberReference MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType StatementExpression ReturnStatement public JRubyMethod ElementValuePair RubyTime Assignment This name Literal MemberReference MethodInvocation = dt dt MethodInvocation MethodInvocation getRuntime	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation ZArrayNode Cast getPosition ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier ReferenceType decode FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public IRubyObject ReferenceType runtime ReferenceType enc BasicType VariableDeclarator MethodInvocation Ruby ByteBuffer int c MethodInvocation runtime TernaryExpression newFixnum enc get BinaryOperation BinaryOperation MemberReference > MemberReference Cast - MemberReference Literal c c BasicType Literal c 256 char 127	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType MethodInvocation Ruby ThreadContext IRubyObject Block callAdapter MemberReference MemberReference MemberReference MethodInvocation context self self RuntimeHelpers MemberReference MemberReference MemberReference getBlock context self	0
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public RubyModule BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment Assignment MemberReference int index MemberReference RubyModule stack MemberReference RubyModule ret MemberReference MemberReference Literal = MemberReference BinaryOperation = ret ArraySelector stack ArraySelector stack null - MemberReference Literal MemberReference MemberReference index 1 index index	0
MethodDeclaration Modifier BasicType FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private static final int ReferenceType BasicType VariableDeclarator VariableDeclarator Assignment Assignment Assignment Assignment MemberReference IRubyObject int f Literal flags MethodInvocation MemberReference TernaryExpression |= MemberReference TernaryExpression |= MemberReference TernaryExpression |= MemberReference TernaryExpression |= f 0 RubyNumeric MemberReference fix2int f BinaryOperation MemberReference Literal f BinaryOperation MemberReference Literal f BinaryOperation MemberReference Literal f BinaryOperation MemberReference Literal != BinaryOperation Literal Library LAZY 0 != BinaryOperation Literal Library 0 != BinaryOperation Literal Library LOCAL 0 != BinaryOperation Literal Library 0 & MemberReference MemberReference 0 & MemberReference MemberReference 0 & MemberReference MemberReference 0 & MemberReference MemberReference 0 flags flags flags flags	1
MethodDeclaration Modifier ReferenceType ReturnStatement public MemberReference scope	0
MethodDeclaration Modifier sync FormalParameter IfStatement public ReferenceType vars BinaryOperation BlockStatement BlockStatement List TypeArgument && BinaryOperation BinaryOperation IfStatement StatementExpression StatementExpression ForStatement ReferenceType <= MethodInvocation MemberReference || MemberReference MemberReference MemberReference BlockStatement IfStatement Assignment Assignment EnhancedForControl BlockStatement Variable TypeArgument vars size MAX_PACKED USE_PACKED_ARRAY USE_PACKED_FIELDS USE_PACKED_ARRAY StatementExpression LocalVariableDeclaration ForStatement StatementExpression MemberReference BlockStatement MemberReference Cast = MemberReference ArrayCreator = VariableDeclaration MemberReference StatementExpression ReferenceType Assignment BasicType VariableDeclarator EnhancedForControl BlockStatement Assignment USE_PACKED_FIELDS StatementExpression ForStatement vTableThreshold BasicType BinaryOperation vTable ReferenceType MemberReference ReferenceType VariableDeclarator vars MethodInvocation IRubyObject MemberReference ArrayCreator = int i Literal VariableDeclaration MemberReference LocalVariableDeclaration AssertStatement StatementExpression StatementExpression StatementExpression MemberReference MethodInvocation = Assignment EnhancedForControl BlockStatement int * MemberReference MemberReference VariableTableEntry Variable TypeArgument var MethodInvocation MethodInvocation store packedVTable ReferenceType BinaryOperation 0 ReferenceType VariableDeclarator vars ReferenceType VariableDeclarator BinaryOperation BinaryOperation Assignment Assignment MemberReference vTableSize vars size MemberReference ClassCreator = VariableDeclaration MemberReference LocalVariableDeclaration AssertStatement StatementExpression ReferenceType var getName var getValue Object * MemberReference Literal Variable TypeArgument var String name MethodInvocation == MemberReference MethodInvocation + MemberReference Literal MemberReference MemberReference = MemberReference MethodInvocation = ++ i packedVFields ReferenceType ReferenceType VariableDeclarator vars ReferenceType VariableDeclarator BinaryOperation BinaryOperation MethodInvocation IRubyObject MAX_PACKED 2 ReferenceType var getName name name intern name " is not interned" ArraySelector packedVTable name ArraySelector packedVTable var getValue Variable TypeArgument var String name MethodInvocation == MemberReference MethodInvocation + MemberReference Literal packedVFields MemberReference MethodInvocation insert IRubyObject MemberReference BinaryOperation ReferenceType var getName name name intern name " is not interned" name var getValue i + MemberReference MemberReference IRubyObject i MAX_PACKED	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType args ReferenceType unusedBlock BinaryOperation BlockStatement This name Literal optional Literal frame Literal IRubyObject Block && BinaryOperation MemberReference StatementExpression "initialize" 1 true > MemberReference Literal ! ArraySelector MethodInvocation args MethodInvocation args length 0 Literal isNil MemberReference update 0 ArraySelector args Literal 0	0
MethodDeclaration Modifier ReferenceType toString FormalParameter ReturnStatement static public String ReferenceType obj MethodInvocation Object obj toString	0
MethodDeclaration Modifier Annotation ReferenceType image FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name ElementArrayValue compat MemberReference ThreadContext RubyFixnum MethodInvocation zero Literal Literal CompatVersion RUBY1_9 context getRuntime	0
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement ThrowStatement static ReferenceType returnType BinaryOperation BlockStatement IfStatement MethodInvocation Type instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement returnType MethodInvocation getRuntime returnType Type ReferenceType MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement BinaryOperation newArgumentError Builtin MethodInvocation returnType CallbackInfo ClassCreator instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement + Literal MemberReference returnType getNativeType ReferenceType Cast returnType org ReferenceType ClassCreator instanceof MemberReference ReferenceType ReturnStatement "Cannot get for " returnType ReferenceType MemberReference jruby ReferenceType ReferenceType Cast returnType StructByValue ClassCreator CallbackInfo returnType ext ReferenceType ReferenceType MemberReference ReferenceType Cast ffi ReferenceType org ReferenceType returnType ReferenceType MemberReference Enum jruby ReferenceType StructByValue returnType ext ReferenceType ffi ReferenceType Enum	0
MethodDeclaration Modifier BasicType FormalParameter IfStatement ReturnStatement private boolean ReferenceType arg BinaryOperation BlockStatement Literal String != Literal MemberReference ReturnStatement false null arg MethodInvocation MemberReference arg	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter SwitchStatement public ReferenceType args ReferenceType node ReferenceType s MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase List TypeArgument Node IR_Scope node ARGSCATNODE StatementExpression BreakStatement ARGSPUSHNODE StatementExpression BreakStatement ARRAYNODE StatementExpression BreakStatement SPLATNODE StatementExpression BreakStatement LocalVariableDeclaration IfStatement ReferenceType MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator BinaryOperation StatementExpression Operand MemberReference Cast MemberReference MemberReference Cast MemberReference MemberReference MemberReference MemberReference MemberReference Cast MemberReference Operand retVal MethodInvocation != MemberReference Literal MethodInvocation args ReferenceType MemberReference s args ReferenceType MemberReference s args node s args ReferenceType MemberReference s MemberReference MemberReference build retVal null args MemberReference add ArgsCatNode node ArgsPushNode node SplatNode node node s retVal	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration ReturnStatement protected static RubyClass ReferenceType context ReferenceType self ReferenceType ReferenceType MethodInvocation ReferenceType VariableDeclarator MemberReference ThreadContext IRubyObject RubyModule String MemberReference MemberReference MemberReference RubyClass superClass MethodInvocation superClass context RuntimeHelpers MethodInvocation MethodInvocation MemberReference getSuperClass self getMetaClass	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType extender MethodInvocation MethodInvocation required Literal IRubyObject MemberReference MethodInvocation getRuntime 1 extender getNil	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block ReferenceType MemberReference MethodInvocation Literal Literal Literal MemberReference MemberReference yield Type context context MethodInvocation getRuntime null null true type MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference arg0 arg1 arg2 arg3 arg4 arg5 arg6	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter Exception LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType recv ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MemberReference name Literal IRubyObject ConsoleHolder holder MethodInvocation RubyArray histList MethodInvocation VariableDeclaration MethodInvocation StatementExpression histList "to_a" MethodInvocation getHolder recv MethodInvocation getRuntime ReferenceType VariableDeclarator i hasNext MethodInvocation recv getRuntime newArray Iterator i MethodInvocation histList MethodInvocation append holder.history MethodInvocation recv MethodInvocation getRuntime iterator Cast newString ReferenceType MethodInvocation String i next	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference Object Object int Node node MethodInvocation != MemberReference Literal StatementExpression StatementExpression yyVal support Cast splat_array node null Assignment Assignment ReferenceType MemberReference MemberReference MethodInvocation = MemberReference MethodInvocation = Node ArraySelector yyVals yyVal support MemberReference Cast yyVal support Cast Cast arg_append BinaryOperation node ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference + Literal MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Node ArraySelector yyVals - 2 yyTop BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference 0 yyTop - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter SwitchStatement public String ReferenceType typeNode MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase Node typeNode CONSTNODE ReturnStatement ReturnStatement ReturnStatement Cast Cast Literal ReferenceType MemberReference ReferenceType MemberReference ConstNode typeNode SymbolNode typeNode	0
MethodDeclaration Modifier Annotation ReferenceType select FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args MethodInvocation name Literal required Literal optional Literal meta Literal ThreadContext IRubyObject IRubyObject MemberReference MethodInvocation MemberReference "select" 1 3 true context context getRuntime args	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RaiseException MethodInvocation MethodInvocation Literal newRaiseException MethodInvocation reset by Literal fastGetClass	0
MethodDeclaration Modifier BasicType matches FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public boolean Modifier ReferenceType entry Modifier ReferenceType obj Modifier ReferenceType VariableDeclarator BinaryOperation final RubyHashEntry final Object final IRubyObject key MemberReference || BinaryOperation Cast entry key == MemberReference MemberReference ReferenceType MemberReference obj key IRubyObject obj	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression private static ReferenceType result BasicType l MethodInvocation MethodInvocation ByteList long MemberReference Cast MemberReference Cast result BasicType BinaryOperation result BasicType BinaryOperation int & MemberReference Literal int >>> MemberReference Literal l l 32	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod IRubyObject MethodInvocation Java MethodInvocation MethodInvocation getInstance getRuntime MethodInvocation javaClass getDeclaredAnnotations	1
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation newFixnum stat MethodInvocation major stat	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement static public boolean ReferenceType candidate BinaryOperation IRubyObject instanceof MethodInvocation ReferenceType candidate dataGetStruct JavaObject	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement private static IRubyObject ReferenceType entry ReferenceType callType ReferenceType context ReferenceType self ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType block MethodInvocation CallType ThreadContext IRubyObject String IRubyObject IRubyObject IRubyObject Block RuntimeHelpers MethodInvocation MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference call context self getVisibility name callType context self self getMetaClass name arg0 arg1 arg2 block	1
MethodDeclaration Modifier Annotation FormalParameter IfStatement StatementExpression public Override ReferenceType callConfig BinaryOperation StatementExpression MethodInvocation CallConfiguration == MemberReference Literal MethodInvocation compiledMethod MemberReference compiledMethod null initializeMethod callConfig	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg0 ReferenceType arg1 ReferenceType block ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference name Literal frame Literal module Literal visibility MemberReference reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject IRubyObject Block RubyString str Cast ! str MethodInvocation MemberReference MemberReference MemberReference MemberReference gsub_bang StatementExpression str true true PRIVATE CompatVersion RUBY1_8 ReferenceType MethodInvocation isNil context arg0 arg1 block MethodInvocation RubyString MethodInvocation MemberReference MethodInvocation getLastlineString context MethodInvocation getCurrentScope dup context context getRuntime MemberReference setLastLine str	0
MethodDeclaration Modifier Annotation ReferenceType TryStatement public JRubyMethod ElementValuePair RubyArray LocalVariableDeclaration StatementExpression ReturnStatement CatchClause name Literal Modifier ReferenceType VariableDeclarator MethodInvocation MemberReference CatchClauseParameter ThrowStatement "values" final RubyArray values MethodInvocation ClassCreator values MethodInvocation RubyArray MethodInvocation MemberReference newArray ReferenceType MethodDeclaration concurrentModification getRuntime size Visitor Modifier visit FormalParameter FormalParameter StatementExpression public ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject values MemberReference append value	1
MethodDeclaration Modifier ReferenceType getBodyNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter WhileStatement ReturnStatement private Node ReferenceType head BinaryOperation BlockStatement MemberReference Node instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement StatementExpression head head NewlineNode ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment Node nextNode Cast instanceof MemberReference ReferenceType BreakStatement MemberReference MemberReference = ReferenceType MemberReference nextNode NewlineNode head nextNode NewlineNode head	0
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration ForStatement public ReferenceType buffer BasicType VariableDeclarator ForControl BlockStatement CharSequence int length MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression buffer length BasicType VariableDeclarator >= MemberReference Literal -- i MethodInvocation int i BinaryOperation i 0 MethodInvocation unread - MemberReference Literal buffer MemberReference charAt length 1 i	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement static public int ReferenceType runtime ReferenceType ReferenceType output ReferenceType VariableDeclarator ReferenceType VariableDeclarator LocalVariableDeclaration StatementExpression ReturnStatement CatchClause CatchClause Ruby IRubyObject OutputStream OutputStream error MethodInvocation InputStream input MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement runtime getErrorStream runtime getInputStream Process aProcess MethodInvocation MemberReference MemberReference MemberReference MemberReference aProcess waitFor IOException e MethodInvocation InterruptedException e MethodInvocation MemberReference MemberReference run aProcess input output error runtime MemberReference newIOErrorFromException runtime Literal newThreadError runtime e "unexpected interrupt"	1
MethodDeclaration Modifier ReferenceType inputStream FormalParameter StatementExpression IfStatement ReturnStatement private static InputStream ReferenceType in MethodInvocation BinaryOperation BlockStatement ClassCreator IRubyObject MemberReference instanceof MemberReference ReferenceType ReturnStatement ReferenceType MemberReference in in RubyIO Cast in ReferenceType MemberReference RubyIO in	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static ByteList ReferenceType runtime ReferenceType bytes BasicType options ReferenceType enc MethodInvocation Ruby ByteList int Encoding MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference runtime bytes bytes bytes begin bytes realSize options enc	0
MethodDeclaration Modifier Annotation ReferenceType flush TryStatement ReturnStatement public JRubyMethod ElementValuePair RubyIO StatementExpression CatchClause CatchClause This name Literal MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement MethodInvocation MethodInvocation getOpenFileChecked BadDescriptorException e MethodInvocation IOException e MethodInvocation getWriteStream fflush MethodInvocation getRuntime MethodInvocation getRuntime newErrnoEBADFError MethodInvocation newIOError e getMessage	1
MethodDeclaration Modifier Annotation ReferenceType op_equal FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType other TernaryExpression name ElementArrayValue IRubyObject BinaryOperation MethodInvocation MethodInvocation Literal Literal && BinaryOperation MethodInvocation MethodInvocation getRuntime MethodInvocation getRuntime "==" "eql?" instanceof MemberReference ReferenceType MethodInvocation getTrue getFalse other JavaAccessibleObject Cast equals ReferenceType MemberReference JavaAccessibleObject other	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset ReferenceType length MethodInvocation name ElementArrayValue required Literal ThreadContext IRubyObject IRubyObject MemoryUtil MethodInvocation MemberReference MethodInvocation MethodInvocation Literal Literal 2 context getRuntime io MemberReference getOffset Util MemberReference int32Value offset length	1
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement ReturnStatement static public String ReferenceType filename MethodInvocation BlockStatement MethodInvocation String filename Literal equals ReturnStatement MemberReference Literal Literal Literal Literal filename null "" false	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement protected boolean ReferenceType context BinaryOperation ThreadContext || MethodInvocation MemberReference context MethodInvocation getRuntime	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int Literal yyerror yyVal "can't make alias for the number variables"	1
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile orNode context true	0
MethodDeclaration Modifier Annotation pre FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression IfStatement protected Override ReferenceType context ReferenceType name ReferenceType self ReferenceType block ReferenceType runtime MethodInvocation MethodInvocation StatementExpression ThreadContext String IRubyObject Block Ruby context MethodInvocation MemberReference MemberReference MemberReference MemberReference runtime hasEventHooks MethodInvocation getImplementationClass name self block staticScope MemberReference MemberReference MemberReference context runtime name	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private final IRubyObject ReferenceType context ReferenceType method ReferenceType other ReferenceType ary ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference ThreadContext String IRubyObject RubyArray IRubyObject result MethodInvocation result isNil ReturnStatement result ary MethodInvocation Literal eltInternal MethodInvocation MemberReference MemberReference MethodInvocation callMethod 0 RubyComparable This MemberReference cmperr context method ary Literal eltInternal other 1	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter InterruptedException TryStatement public JRubyMethod IRubyObject ReferenceType context ReferenceType block StatementExpression ReturnStatement StatementExpression ThreadContext Block MethodInvocation MethodInvocation MethodInvocation MemberReference lock block MemberReference Literal yield MemberReference unlock context context null context	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType klazz ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference AutoPointer runtime klazz	0
MethodDeclaration Modifier Exception StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Literal eval Literal MethodInvocation assertEquals Literal MethodInvocation assertEquals Literal MethodInvocation assertEquals Literal MethodInvocation assertEquals Literal eval Literal MethodInvocation assertEquals Literal MethodInvocation assertEquals Literal eval Literal MethodInvocation assertEquals Literal eval Literal MethodInvocation assertEquals Literal MethodInvocation assertEquals Literal eval Literal eval Literal MethodInvocation assertEquals Literal MethodInvocation assertEquals Literal MethodInvocation assertEquals = Literal eval Literal eval Literal eval Literal eval = Literal eval Literal eval Literal eval = Literal eval "3" Literal eval = "p Literal eval "1" Literal eval Literal eval "p "p "p p x }" "p k >= "p "p "p k >= "p "p k >= "p "p	0
MethodDeclaration Modifier Annotation ReferenceType getOutputStream ReturnStatement public Override OutputStream MemberReference output	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType VariableDeclarator StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject Ruby runtime MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference MemberReference pre argsNode MemberReference Literal argsNode MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference prepare body MemberReference MemberReference MemberReference MemberReference rj MethodInvocation rj MethodInvocation MemberReference MemberReference MemberReference post context name self Block runtime runtime 4 context runtime self arg0 arg1 arg2 arg3 Block runtime context self Block MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType	0
MethodDeclaration Modifier Annotation FormalParameter FormalParameter IfStatement StatementExpression static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ReferenceType recv ReferenceType encoding MethodInvocation BlockStatement MethodInvocation name Literal required Literal frame Literal meta Literal compat MemberReference IRubyObject IRubyObject encoding isNil StatementExpression recv MethodInvocation getRuntime 1 true true CompatVersion RUBY1_9 MethodInvocation MethodInvocation recv MethodInvocation getRuntime MethodInvocation MemberReference Literal newArgumentError recv getRuntime encoding not be	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public ReferenceType arg0 BasicType arg1 MethodInvocation String boolean MethodInvocation getMethodVisitor MemberReference MemberReference arg0 arg1	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType value MethodInvocation Assignment long byte MemberReference Literal checkBounds MemberReference MemberReference = offset 1 ArraySelector buffer value MethodInvocation MemberReference index offset	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType MethodInvocation Ruby RubyClass runtime getNil	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration ForStatement ReturnStatement final static public IRubyObject ReferenceType runtime ReferenceType io BasicType offset BasicType count BasicType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ForControl BlockStatement MemberReference Ruby MemoryIO long int short array ArrayCreator io MemberReference MemberReference Literal MemberReference get RubyArray arr MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression arr BasicType MemberReference offset array 0 array length RubyArray MemberReference MemberReference newArray BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation short count runtime array length int i Literal i array length arr MethodInvocation add 0 Util MemberReference MemberReference newUnsigned16 runtime ArraySelector array MemberReference i	1
MethodDeclaration Modifier Annotation ReferenceType IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject MemberReference BlockStatement TernaryExpression name Literal closed LocalVariableDeclaration ThrowStatement BinaryOperation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ClassCreator == MemberReference Literal MethodInvocation getRuntime RubyString MethodInvocation MemberReference newString RubyClass errorClass MethodInvocation ReferenceType MethodInvocation null getNil getRuntime MethodInvocation MethodInvocation MethodInvocation getRuntime RaiseException RubyException MethodInvocation MemberReference Literal newException Literal fastGetModule Literal fastGetClass Literal fastGetClass getRuntime errorClass stream" "Zlib"	0
MethodDeclaration Modifier Annotation ReferenceType setValue FormalParameter FormalParameter FormalParameter IfStatement public Override IRubyObject BasicType offset ReferenceType value BasicType depth BinaryOperation BlockStatement BlockStatement int IRubyObject int > MemberReference Literal AssertStatement ReturnStatement AssertStatement SwitchStatement depth 0 BinaryOperation Literal MethodInvocation BinaryOperation MemberReference MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase != MemberReference Literal "If depth > 0, then parent should not be null" parent MemberReference MemberReference BinaryOperation setValue < MemberReference MemberReference SIZE_ERROR offset Literal ReturnStatement Literal ReturnStatement ThrowStatement parent null offset value - MemberReference Literal offset SIZE 0 Assignment 1 Assignment ClassCreator depth 1 MemberReference MemberReference = MemberReference MemberReference = ReferenceType MemberReference variableValueZero value variableValueOne value RuntimeException SIZE_ERROR	1
MethodDeclaration Modifier Annotation ReferenceType op_div FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement IfStatement MethodInvocation name ElementArrayValue ThreadContext IRubyObject instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement ReturnStatement BinaryOperation BlockStatement MemberReference Literal MemberReference coerceBin Literal Literal other RubyComplex ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation && BinaryOperation MethodInvocation ReturnStatement context "/" other "/" RubyComplex otherComplex Cast || BinaryOperation BinaryOperation LocalVariableDeclaration LocalVariableDeclaration ReturnStatement MemberReference MethodInvocation MethodInvocation f_quo instanceof MemberReference ReferenceType MethodInvocation MemberReference MemberReference f_real_p MethodInvocation ReferenceType MemberReference || BinaryOperation BinaryOperation instanceof MemberReference ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation context MemberReference This MethodInvocation f_mul MemberReference MemberReference other RubyNumeric isTrue context other MemberReference MethodInvocation MethodInvocation MethodInvocation newComplex RubyComplex other || BinaryOperation BinaryOperation instanceof MemberReference ReferenceType otherComplex image RubyFloat IRubyObject magn MethodInvocation IRubyObject tmp MethodInvocation MemberReference MethodInvocation MemberReference f_quo context MemberReference MemberReference f_conjugate context other context getMetaClass MemberReference MemberReference MemberReference f_quo MemberReference MemberReference MemberReference f_quo instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType otherComplex real RubyFloat RubyMath This MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation newComplexBang context MemberReference This MethodInvocation f_mul magn context other context real other context image other real RubyFloat image RubyFloat otherComplex real otherComplex image context getMetaClass MemberReference MemberReference MemberReference f_quo MemberReference MemberReference MemberReference f_quo context MemberReference MemberReference f_conjugate context otherComplex real magn context otherComplex image magn context tmp	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement static public long ReferenceType process MethodInvocation Process MemberReference process	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation BlockStatement BlockStatement ThreadContext IRubyObject RubyModule String IRubyObject Block block isGiven LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration ForStatement StatementExpression ReturnStatement ReturnStatement ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Assignment ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation MemberReference MethodInvocation Ruby runtime MethodInvocation MemberReference proxy MethodInvocation int len MemberReference Object convertedArgs ArrayCreator IRubyObject intermediate ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference MethodInvocation = JavaConstructor constructor Cast VariableDeclaration BinaryOperation MemberReference StatementExpression proxy MethodInvocation self MemberReference MemberReference MemberReference MemberReference MemberReference call context getRuntime runtime MemberReference args length ReferenceType BinaryOperation ReferenceType BinaryOperation args 0 intermediate 0 len ArraySelector intermediate RubyProc MemberReference MemberReference MemberReference newProc ReferenceType MethodInvocation BasicType VariableDeclarator < MemberReference BinaryOperation ++ i Assignment JavaObject MemberReference MethodInvocation wrap context self clazz name args self Object + MemberReference Literal IRubyObject + MemberReference Literal MemberReference runtime block Block.Type JavaConstructor MemberReference MemberReference MemberReference BinaryOperation int i Literal i + MemberReference Literal MemberReference MethodInvocation = runtime constructor MemberReference len 1 len 1 len self name intermediate + MemberReference Literal 0 len 1 ArraySelector convertedArgs MemberReference MemberReference MemberReference MemberReference convertArg convertedArgs len 1 MemberReference context ArraySelector intermediate constructor i i MemberReference i	1
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	1
MethodDeclaration Modifier BasicType size ReturnStatement public int MemberReference size	0
MethodDeclaration Modifier Annotation ReferenceType chomp_bang FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation ReturnStatement ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation == MemberReference Literal MethodInvocation IRubyObject rsObj MethodInvocation == MemberReference MethodInvocation MethodInvocation MemberReference MemberReference chompBangCommon "chomp!" CompatVersion RUBY1_8 context getRuntime value realSize 0 runtime getNil runtime MethodInvocation getGlobalVariables rsObj runtime MethodInvocation getGlobalVariables MemberReference smartChopBangCommon runtime rsObj Literal get runtime "$/"	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement static public String ReferenceType t MethodInvocation Boolean String MemberReference valueOf t	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter LocalVariableDeclaration TryStatement protected boolean ReferenceType runtime ReferenceType state ReferenceType VariableDeclarator SynchronizedStatement StatementExpression ReturnStatement CatchClause CatchClause Ruby RubyString MethodInvocation MemberReference IfStatement MethodInvocation Literal CatchClauseParameter ThrowStatement CatchClauseParameter IfStatement StatementExpression StatementExpression IfStatement LocalVariableDeclaration StatementExpression ThrowStatement RubyString MemberReference MemberReference newString MethodInvocation BlockStatement BlockStatement MemberReference Literal load true MainExitException mee MemberReference Throwable e MethodInvocation BlockStatement MethodInvocation MethodInvocation MethodInvocation StatementExpression ReferenceType VariableDeclarator MethodInvocation MemberReference runtime state loadName MemberReference contains ReturnStatement StatementExpression runtime false mee MemberReference MemberReference ReturnStatement MemberReference MemberReference runtime MethodInvocation getDebug MethodInvocation RaiseException re MethodInvocation re MemberReference initCause re Literal MethodInvocation state state searchFile Literal e isTrue e MethodInvocation printStackTrace runtime BinaryOperation newLoadError e false MemberReference true runtime + Literal MemberReference "IO error -- " state searchFile	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MemberReference Object Object int yyVal	1
MethodDeclaration Modifier Annotation ReferenceType get_java_class FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType arg0 MethodInvocation module Literal visibility MemberReference IRubyObject IRubyObject Java MemberReference MemberReference get_java_class true Visibility PRIVATE recv arg0	1
MethodDeclaration Modifier BasicType isDebug ReturnStatement public boolean MethodInvocation ruby MethodInvocation MethodInvocation get getInstanceConfig isDebug	0
MethodDeclaration ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement SwitchStatement DynamicMethod ReferenceType module ReferenceType function ReferenceType returnType ReferenceType parameterTypes ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase RubyModule Function Type Type factory This ArrayCreator resultConverter MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression parameterTypes length Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ThrowStatement ReferenceType MemberReference factory MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment 0 ClassCreator 1 ClassCreator 2 ClassCreator 3 ClassCreator MethodInvocation parameterTypes length returnType int i Literal i length MemberReference MethodInvocation = ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference module MethodInvocation getRuntime 0 ArraySelector factory MemberReference module function resultConverter module function resultConverter module function resultConverter module function resultConverter BinaryOperation newRuntimeError MemberReference ArraySelector parameterTypes + BinaryOperation Literal i MemberReference + Literal MemberReference " not implemented" i " parameterTypes length	0
MethodDeclaration Modifier Annotation ReferenceType IOException LocalVariableDeclaration ForStatement ReturnStatement public Override ByteList ReferenceType VariableDeclarator ForControl BlockStatement MemberReference ByteList ClassCreator VariableDeclaration BinaryOperation Assignment StatementExpression ReferenceType Literal BasicType VariableDeclarator && BinaryOperation BinaryOperation MemberReference MethodInvocation = MethodInvocation ByteList 80 int c MethodInvocation != MemberReference Literal != MemberReference MemberReference c read MemberReference append read c '\n' c RubyYaccLexer EOF c	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement MemberReference Object Object int support Cast checkExpression String asgnOp Cast asgnOp Literal equals StatementExpression StatementExpression MethodInvocation BlockStatement BlockStatement yyVal ReferenceType MemberReference ReferenceType Cast "||" Cast Assignment asgnOp Literal equals StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression Node ArraySelector yyVals String ReferenceType MemberReference ReferenceType MemberReference MemberReference ClassCreator = "&&" Cast Assignment Cast Cast Assignment BinaryOperation Token ArraySelector yyVals AssignableNode ArraySelector yyVals yyVal ReferenceType MethodInvocation MethodInvocation Cast ReferenceType MemberReference MemberReference ClassCreator = ReferenceType MemberReference ReferenceType MemberReference MemberReference Cast = + Literal MemberReference BinaryOperation BinaryOperation OpAsgnOrNode Cast getPosition support Cast gettable2 ReferenceType MemberReference AssignableNode ArraySelector yyVals yyVal ReferenceType MethodInvocation MethodInvocation Cast AssignableNode ArraySelector yyVals AssignableNode ArraySelector yyVals yyVal ReferenceType MemberReference 0 yyTop + Literal MemberReference + Literal MemberReference ReferenceType MemberReference ReferenceType MemberReference AssignableNode ArraySelector yyVals BinaryOperation OpAsgnAndNode Cast getPosition support Cast gettable2 ReferenceType MemberReference BinaryOperation BinaryOperation AssignableNode ArraySelector yyVals - 1 yyTop - 2 yyTop AssignableNode ArraySelector yyVals AssignableNode ArraySelector yyVals BinaryOperation + Literal MemberReference ReferenceType MemberReference ReferenceType MemberReference AssignableNode ArraySelector yyVals + Literal MemberReference + Literal MemberReference BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference - 2 yyTop AssignableNode ArraySelector yyVals AssignableNode ArraySelector yyVals BinaryOperation - 2 yyTop - 2 yyTop + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop BinaryOperation BinaryOperation + Literal MemberReference - 2 yyTop - 2 yyTop - 2 yyTop + Literal MemberReference + Literal MemberReference - 2 yyTop - 2 yyTop - 2 yyTop	1
MethodDeclaration Modifier BasicType getSafeLevel ReturnStatement public int MemberReference	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Arity MethodInvocation Arity noArguments	0
MethodDeclaration Modifier Annotation ReferenceType modifiers ReturnStatement public JRubyMethod IRubyObject MethodInvocation MethodInvocation getRuntime MethodInvocation newFixnum MethodInvocation javaClass getModifiers	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement static public IRubyObject ReferenceType ReferenceType context ReferenceType caller ReferenceType self ReferenceType name ReferenceType arg0 ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator IfStatement StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject IRubyObject String IRubyObject Block RubyClass selfClass MethodInvocation entry MethodInvocation MethodInvocation BlockStatement MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation MemberReference MemberReference selfClass MemberReference MemberReference MethodInvocation MemberReference MemberReference ReturnStatement MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call JumpException.BreakJump bj MethodInvocation JumpException.RetryJump rj MethodInvocation block escape context self name entry callType name caller MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference context self selfClass name arg0 block MemberReference MemberReference handleBreakJump MemberReference retryJumpError MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference entry context bj context entry callType context self name arg0 block	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean Literal false	0
MethodDeclaration Modifier Annotation ReferenceType set FormalParameter IfStatement StatementExpression ReturnStatement public Override IRubyObject ReferenceType value MethodInvocation BlockStatement MethodInvocation MemberReference IRubyObject runtime MethodInvocation MethodInvocation getGlobalVariables ThrowStatement runtime MethodInvocation MethodInvocation getGlobalVariables value Literal get isNil MethodInvocation Literal get MethodInvocation Literal MemberReference callMethod "$!" runtime Literal newArgumentError "$!" value MethodInvocation getRuntime value not set." getCurrentContext	0
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType function ReferenceType args MethodInvocation Ruby Function HeapInvocationBuffer info MemberReference MethodInvocation Literal newStruct runtime invoker MemberReference MemberReference 0 function args	1
MethodDeclaration Modifier Annotation ReferenceType lines FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType block TernaryExpression name Literal optional Literal frame Literal ThreadContext IRubyObject Block MethodInvocation MethodInvocation MethodInvocation 1 true block isGiven MemberReference MemberReference MemberReference MethodInvocation This Literal MemberReference enumeratorize context args block context getRuntime args	0
MethodDeclaration Modifier Annotation BasicType FormalParameter FormalParameter ReturnStatement public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyRational	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation newBoolean stat	1
MethodDeclaration ReferenceType ReturnStatement Iterator ClassCreator ReferenceType	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier BasicType complete FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public int ReferenceType buffer BasicType cursor ReferenceType candidates Assignment BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation String int List MemberReference MethodInvocation = int index MethodInvocation != MemberReference Literal StatementExpression ThreadContext context MethodInvocation IRubyObject comps MethodInvocation instanceof MemberReference ReferenceType ForStatement StatementExpression - MemberReference MethodInvocation buffer buffer Literal MemberReference substring MemberReference index - 1 Assignment MethodInvocation getRuntime RuntimeHelpers MethodInvocation MemberReference MemberReference Literal MethodInvocation invoke comps List ForControl BlockStatement MethodInvocation cursor buffer length 0 cursor buffer MemberReference MethodInvocation = getCurrentContext MemberReference Literal callMethod context "call" MethodInvocation getRuntime VariableDeclaration MethodInvocation LocalVariableDeclaration IfStatement Collections MemberReference sort buffer buffer BinaryOperation substring context "to_a" MemberReference newString ReferenceType VariableDeclarator i hasNext ReferenceType VariableDeclarator BinaryOperation BlockStatement candidates + MemberReference Literal buffer Iterator i Cast Object obj MethodInvocation != MemberReference Literal StatementExpression index 1 ReferenceType MemberReference i next obj null MethodInvocation List comps candidates MethodInvocation add obj toString	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter ReturnStatement private static int ReferenceType ReferenceType a1 ReferenceType a2 BinaryOperation IRubyObject IRubyObject IRubyObject + BinaryOperation MethodInvocation * Literal MethodInvocation MemberReference 31 MemberReference MemberReference a2 a1	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile getValueNode context true	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement private Object ReferenceType name ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement Literal String VariableTableEntry table MemberReference int hash MethodInvocation int index BinaryOperation VariableTableEntry first MemberReference VariableDeclaration BinaryOperation Assignment IfStatement null vTable name hashCode & MemberReference BinaryOperation ArraySelector table ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = BinaryOperation BlockStatement hash - MemberReference Literal MemberReference VariableTableEntry e MemberReference e null e e next && BinaryOperation MethodInvocation LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression StatementExpression StatementExpression ReturnStatement table length 1 index first == MemberReference MemberReference name MemberReference equals ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement Assignment MemberReference Assignment MemberReference hash e hash e name Object oldValue MemberReference VariableTableEntry MemberReference VariableDeclaration BinaryOperation Assignment StatementExpression MemberReference MemberReference = -- vTableSize MemberReference MemberReference = oldValue e value e next ReferenceType VariableDeclarator != MemberReference MemberReference MemberReference MemberReference = Assignment ArraySelector table vTable table VariableTableEntry p MemberReference p e p p next MemberReference ClassCreator = MemberReference first ReferenceType MemberReference MemberReference MemberReference MemberReference index VariableTableEntry p hash p name p value	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast Literal Literal Literal Cast new_args ReferenceType MemberReference ReferenceType MemberReference null null null ReferenceType MemberReference ISourcePositionHolder ArraySelector yyVals ListNode ArraySelector yyVals BlockArgNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 1 yyTop - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement ThrowStatement public IRubyObject ReferenceType runtime MethodInvocation BlockStatement ClassCreator Ruby ! staticScope ReturnStatement ReferenceType Literal MethodInvocation RuntimeException "DummyDynamicScope should never be used for backref storage" parent MemberReference runtime	1
MethodDeclaration Modifier ReferenceType getCurrentDirectory ReturnStatement public String MethodInvocation ruby MethodInvocation MethodInvocation get getInstanceConfig getCurrentDirectory	0
MethodDeclaration Modifier BasicType getLine ReturnStatement public int MemberReference line	0
MethodDeclaration Modifier ReferenceType FormalParameter ThrowStatement public IRubyObject ReferenceType nil ClassCreator IRubyObject ReferenceType BinaryOperation RuntimeException + This Literal MethodInvocation MethodInvocation " does not support scopes with or more variables" getClass getSimpleName	1
MethodDeclaration Modifier ReferenceType FormalParameter IOException LocalVariableDeclaration SwitchStatement IfStatement ReturnStatement private IRubyObject BasicType type ReferenceType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase BinaryOperation BlockStatement MemberReference int IRubyObject rubyObj Literal type Literal StatementExpression StatementExpression IfStatement BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal LocalVariableDeclaration LocalVariableDeclaration TryStatement StatementExpression StatementExpression StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement ThrowStatement && BinaryOperation BinaryOperation StatementExpression rubyObj null 'I' Assignment Assignment MemberReference BlockStatement '0' Assignment 'T' Assignment 'F' Assignment '"' Assignment 'i' Assignment 'f' Assignment '/' Assignment ':' Assignment '[' Assignment '{' Assignment '}' Assignment 'c' Assignment 'm' Assignment 'e' ReferenceType VariableDeclarator ReferenceType VariableDeclarator StatementExpression CatchClause Assignment MethodInvocation MethodInvocation 'l' Assignment 'S' Assignment 'o' Assignment 'u' Assignment 'U' Assignment 'C' Assignment MethodInvocation != MemberReference Literal != MemberReference Literal MethodInvocation MemberReference Literal = MemberReference MethodInvocation = StatementExpression StatementExpression MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = RubySymbol moduleName Cast RubyModule tp Literal Assignment CatchClauseParameter IfStatement ThrowStatement MemberReference MethodInvocation = tp MemberReference tp MethodInvocation Literal MemberReference callMethod MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MethodInvocation getRuntime proc null type ':' RuntimeHelpers MethodInvocation MemberReference Literal MemberReference invoke true rubyObj MethodInvocation Assignment rubyObj runtime getNil rubyObj runtime getTrue rubyObj runtime getFalse rubyObj RubyString This unmarshalFrom rubyObj RubyFixnum This unmarshalFrom rubyObj RubyFloat This unmarshalFrom rubyObj RubyRegexp This unmarshalFrom rubyObj RubySymbol This unmarshalFrom rubyObj RubyArray This unmarshalFrom rubyObj RubyHash This Literal unmarshalFrom rubyObj RubyHash This Literal unmarshalFrom rubyObj RubyClass This unmarshalFrom rubyObj RubyModule This unmarshalFrom ReferenceType MethodInvocation null MemberReference MethodInvocation = RaiseException e MethodInvocation BlockStatement MemberReference rubyObj rubyObj runtime getCurrentContext rubyObj rubyObj RubyBignum This unmarshalFrom rubyObj This unmarshalFrom rubyObj rubyObj rubyObj rubyObj BinaryOperation newArgumentError MethodInvocation getRuntime proc "call" rubyObj MemberReference MemberReference Literal = false true RubySymbol tp runtime MethodInvocation getClassFromPath runtime MethodInvocation Literal fastGetModule ThrowStatement e + BinaryOperation Literal getCurrentContext rubyObj false moduleName asJavaString MethodInvocation isInstance "NameError" MethodInvocation + Literal Cast ")" e getException runtime BinaryOperation newArgumentError format BasicType MemberReference + Literal MethodInvocation char type "undefined class/module " moduleName asJavaString	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType arg Modifier ReferenceType block TernaryExpression name Literal ThreadContext IRubyObject IRubyObject final Block MethodInvocation MethodInvocation MethodInvocation block isGiven MemberReference MemberReference MemberReference MemberReference each_slice MethodInvocation MemberReference Literal MemberReference enumeratorize context self arg block context getRuntime self arg	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReturnStatement CatchClause CatchClause CatchClause CatchClause ThreadContext IRubyObject RubyModule String MethodInvocation CatchClauseParameter IfStatement ThrowStatement CatchClauseParameter IfStatement ThrowStatement CatchClauseParameter IfStatement ThrowStatement CatchClauseParameter IfStatement ThrowStatement MethodInvocation MethodInvocation javaToRuby InstantiationException ex MethodInvocation StatementExpression MethodInvocation IllegalAccessException ex MethodInvocation StatementExpression MethodInvocation IllegalArgumentException ex MethodInvocation StatementExpression MethodInvocation InvocationTargetException ex MethodInvocation StatementExpression MethodInvocation context getRuntime constructor newInstance ruby MethodInvocation getDebug MethodInvocation ruby BinaryOperation newTypeError ruby MethodInvocation getDebug MethodInvocation ruby BinaryOperation newTypeError ruby MethodInvocation getDebug MethodInvocation ruby BinaryOperation newTypeError ruby MethodInvocation getDebug MethodInvocation ruby BinaryOperation newTypeError isTrue ex printStackTrace + BinaryOperation MethodInvocation isTrue ex printStackTrace + BinaryOperation MethodInvocation isTrue ex printStackTrace + BinaryOperation MethodInvocation isTrue ex printStackTrace + BinaryOperation MethodInvocation + BinaryOperation Literal MethodInvocation prettyParams + BinaryOperation Literal MethodInvocation prettyParams + BinaryOperation Literal MethodInvocation prettyParams + BinaryOperation Literal MethodInvocation prettyParams + Literal MethodInvocation " using " constructor getParameterTypes + Literal MethodInvocation " using " constructor getParameterTypes + Literal MethodInvocation " using " constructor getParameterTypes + Literal MethodInvocation " using " constructor getParameterTypes "Could not instantiate " cls getCanonicalName "Could not instantiate " cls getCanonicalName "Could not instantiate " cls getCanonicalName "Could not instantiate " cls getCanonicalName	1
MethodDeclaration Modifier Annotation Annotation ReferenceType endCall FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression LocalVariableDeclaration ReturnStatement protected Override Deprecated Class ReferenceType cw ReferenceType mv ReferenceType name MethodInvocation MethodInvocation BasicType VariableDeclarator MethodInvocation ClassWriter MethodVisitor String mv visitEnd cw visitEnd byte code MethodInvocation classLoader MemberReference MemberReference MemberReference defineClass cw toByteArray name code	1
MethodDeclaration Modifier ReferenceType each_byte FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public RubyString ReferenceType context ReferenceType block ReferenceType VariableDeclarator ForControl BlockStatement This ThreadContext Block Ruby runtime MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression context getRuntime BasicType VariableDeclarator < MemberReference MethodInvocation ++ i MethodInvocation int i Literal i value length block MemberReference MethodInvocation yield 0 context runtime BinaryOperation newFixnum & MethodInvocation Literal value MemberReference get 0xFF i	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean final OpAsgnNode opAsgnNode Cast opAsgnNode MethodInvocation StatementExpression MethodInvocation BlockStatement BlockStatement context pollThreadEvents ! expr MethodInvocation ReferenceType MemberReference Literal equals MethodInvocation opAsgnNode MethodInvocation StatementExpression StatementExpression context consumeCurrentValue OpAsgnNode node "||" MemberReference MemberReference Literal Literal equals MethodInvocation MethodInvocation opAsgnNode context true "&&" MemberReference MemberReference Literal MemberReference MemberReference Literal opAsgnNode context true opAsgnNode context true	1
MethodDeclaration Modifier BasicType ReturnStatement public int BinaryOperation + MemberReference Literal 1	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression public ReferenceType name ReferenceType method MethodInvocation String DynamicMethod MethodInvocation getMethods MemberReference MemberReference put name method	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration SynchronizedStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType block ReferenceType VariableDeclarator TernaryExpression ReturnStatement name Literal ThreadContext Block Object lock MethodInvocation BinaryOperation MemberReference MemberReference MethodInvocation getValue != MemberReference Literal lock block MemberReference Literal yield lock null context null	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast MethodInvocation Literal MultipleAsgn19Node Cast getPosition ReferenceType MemberReference support Cast Literal assignable null ReferenceType MemberReference ListNode ArraySelector yyVals ReferenceType MemberReference null ListNode ArraySelector yyVals BinaryOperation Token ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference - 3 yyTop + Literal MemberReference - 3 yyTop 0 yyTop	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement SynchronizedStatement private static ReferenceType context ReferenceType self ReferenceType module ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference IfStatement ThreadContext IRubyObject RubyModule Ruby runtime MethodInvocation && MethodInvocation MethodInvocation ThrowStatement module MethodInvocation BlockStatement BlockStatement context getRuntime module MethodInvocation getInstanceVariables module MethodInvocation MethodInvocation getInstanceVariables MethodInvocation ! module MethodInvocation getInstanceVariables LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement Literal Literal fastGetInstanceVariable isTrue runtime Literal newTypeError Literal ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement "@java_class" "@java_class" not add Java interface to existing Java RubyArray javaInterfaceMods MethodInvocation module MethodInvocation getInstanceVariables RubyClass singleton MethodInvocation singleton Literal ClassCreator addMethod RubyArray javaInterfaceMods Cast ! javaInterfaceMods MemberReference MemberReference includes StatementExpression RubyArray MemberReference MemberReference newArray Literal MemberReference fastSetInstanceVariable module "append_features" ReferenceType MemberReference MemberReference MethodDeclaration ReferenceType MethodInvocation context self MethodInvocation runtime self javaInterfaceMods singleton Visibility PUBLIC Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement RubyArray module MethodInvocation getInstanceVariables javaInterfaceMods MemberReference append public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg ReferenceType block BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation Literal fastGetInstanceVariable self ThreadContext IRubyObject RubyModule String IRubyObject Block instanceof MemberReference ReferenceType ThrowStatement RubyClass target Cast RubyArray javaInterfaceMods Cast target MethodInvocation RuntimeHelpers MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference arg RubyClass MethodInvocation ReferenceType MemberReference ReferenceType MethodInvocation javaInterfaceMods toJavaArray context clazz getSuperClass self name arg block context MethodInvocation getRuntime RubyClass arg RubyArray self MethodInvocation getInstanceVariables Literal newTypeError Literal fastGetInstanceVariable with	1
MethodDeclaration Modifier BasicType SwitchStatement public boolean This SwitchStatementCase SwitchStatementCase TRUENODE FIXNUMNODE REGEXPNODE DOTNODE ARRAYNODE ReturnStatement ReturnStatement Literal Literal true false	0
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType array BasicType i MethodInvocation Ruby Object int MemberReference Cast convert runtime ReferenceType MemberReference Character array	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType MemberReference createList Node	0
MethodDeclaration Modifier Annotation ReferenceType parse FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement ReturnStatement public Deprecated Node ReferenceType content ReferenceType file ReferenceType scope BasicType lineNumber BasicType extraPositionInformation BasicType VariableDeclarator StatementExpression CatchClause MethodInvocation String String DynamicScope int boolean byte bytes Assignment CatchClauseParameter StatementExpression parser MemberReference ClassCreator MemberReference ClassCreator parse MemberReference MethodInvocation = UnsupportedEncodingException e Assignment file ReferenceType MemberReference scope ReferenceType MethodInvocation MemberReference MemberReference Literal Literal MemberReference bytes content MethodInvocation getBytes MemberReference MethodInvocation = ByteArrayInputStream bytes getKCode lineNumber extraPositionInformation false true config getKCode bytes content getBytes	1
MethodDeclaration Modifier FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement StatementExpression SynchronizedStatement IfStatement public ReferenceType context ReferenceType name ReferenceType VariableDeclarator BinaryOperation StatementExpression BinaryOperation BlockStatement MethodInvocation MethodInvocation LocalVariableDeclaration IfStatement StatementExpression MethodInvocation BlockStatement BlockStatement ThreadContext String Ruby runtime MethodInvocation == This MethodInvocation MethodInvocation && BinaryOperation MethodInvocation ThrowStatement Literal getMethods ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation isSingleton LocalVariableDeclaration StatementExpression StatementExpression context getRuntime runtime getObject runtime Literal secure >= MethodInvocation Literal ! isTaint MethodInvocation DynamicMethod method Cast == MemberReference Literal ThrowStatement invalidateCacheDescendants ReferenceType VariableDeclarator MethodInvocation MethodInvocation 4 runtime getSafeLevel 4 runtime Literal newSecurityError ReferenceType MethodInvocation method null MethodInvocation IRubyObject singleton Cast singleton MemberReference Literal MethodInvocation callMethod MemberReference Literal MethodInvocation callMethod "Insecure: can't remove method" DynamicMethod MethodInvocation getMethods runtime BinaryOperation MemberReference newNameError ReferenceType This context runtime MemberReference context runtime MemberReference MemberReference remove + BinaryOperation MethodInvocation name MetaClass name name name + BinaryOperation Literal getName + Literal MemberReference "' not defined in " "method '" name	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + BinaryOperation Literal + BinaryOperation MemberReference ")" + BinaryOperation Literal + BinaryOperation MemberReference ", " + SuperMethodInvocation Literal toString "("	0
MethodDeclaration ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement SwitchStatement DynamicMethod ReferenceType module ReferenceType function ReferenceType returnType ReferenceType parameterTypes ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase RubyModule Function Type Type ArrayCreator resultConverter MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression parameterTypes length Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ThrowStatement ReferenceType MemberReference MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment 0 ClassCreator 1 ClassCreator 2 ClassCreator 3 ClassCreator MethodInvocation parameterTypes length returnType int i Literal i length MemberReference MethodInvocation = ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference module MethodInvocation getRuntime 0 ArraySelector MemberReference module function resultConverter module function resultConverter module function resultConverter module function resultConverter BinaryOperation newRuntimeError MemberReference ArraySelector parameterTypes + BinaryOperation Literal i MemberReference + Literal MemberReference " not implemented" i " parameterTypes length	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference processLineEnds	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal compat MemberReference ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "each_line" true CompatVersion RUBY1_8 block isGiven MemberReference MemberReference each_line MethodInvocation This Literal enumeratorize context block context getRuntime "each_line"	1
MethodDeclaration Modifier FormalParameter FormalParameter IfStatement StatementExpression public ReferenceType constRef ReferenceType val MethodInvocation StatementExpression MethodInvocation String Operand val isConstant MethodInvocation ClassCreator addInstr _constMap MemberReference MemberReference put ReferenceType This MemberReference MemberReference constRef val constRef val	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement protected Override Object ReferenceType internedName MethodInvocation String MemberReference internedName	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement StatementExpression StatementExpression ReturnStatement private String ReferenceType formatter ReferenceType output BinaryOperation ReturnStatement Assignment Assignment MemberReference String == MemberReference Literal MemberReference MemberReference MethodInvocation = MemberReference Literal = output formatter null output output formatter MemberReference format formatter null output	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType ReferenceType type ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator IfStatement ReturnStatement CatchClause StatementExpression ThreadContext IRubyObject IRubyObject Block ReferenceType Visibility oldVis MethodInvocation MethodInvocation IRubyObject self MethodInvocation MemberReference StatementExpression MethodInvocation CatchClauseParameter ReturnStatement MethodInvocation Type MethodInvocation getFrame MemberReference Literal MemberReference pre MemberReference ! noargblock MethodInvocation MemberReference MemberReference JumpException.NextJump nj MethodInvocation MemberReference MemberReference MemberReference MemberReference post getVisibility context null assigner MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference assign context self MemberReference MemberReference MemberReference handleNextJump context oldVis context getRuntime context self arg0 arg1 Block context nj type	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject BasicType other ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation long BigInteger result MethodInvocation && BinaryOperation BinaryOperation ClassCreator MethodInvocation MemberReference bignorm value MethodInvocation subtract < MethodInvocation Literal > MemberReference Literal ReferenceType MethodInvocation MemberReference getRuntime result BigInteger MemberReference valueOf value signum 0 other 0 RubyBignum getRuntime result other	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Assignment BinaryOperation BlockStatement MemberReference Object Object int MemberReference Cast = MemberReference Literal = instanceof Cast ReferenceType StatementExpression yyVal yyVal ReferenceType MemberReference lexer commandStart true ReferenceType MemberReference MultipleAsgnNode Cast Node ArraySelector yyVals Node ArraySelector yyVals ReferenceType MemberReference BinaryOperation BinaryOperation Node ArraySelector yyVals + Literal MemberReference + Literal MemberReference BinaryOperation - 1 yyTop - 1 yyTop + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType RETRYNODE	0
MethodDeclaration Modifier ReferenceType op_plus FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context BasicType other MethodInvocation ThreadContext long MemberReference other	1
MethodDeclaration Modifier ReferenceType parseOptions FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement protected ModeFlags ReferenceType context ReferenceType options ReferenceType modes ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BlockStatement MemberReference ThreadContext IRubyObject ModeFlags Ruby runtime MethodInvocation RubyHash rubyOptions Cast IRubyObject MethodInvocation IRubyObject externalEncodingOption MethodInvocation RubyString dash MethodInvocation && BinaryOperation MethodInvocation IfStatement StatementExpression && BinaryOperation MethodInvocation IfStatement StatementExpression IRubyObject encoding MethodInvocation && BinaryOperation MethodInvocation IfStatement rubyOptions MethodInvocation containsKey StatementExpression modes context getRuntime ReferenceType MemberReference rubyOptions MethodInvocation fastARef rubyOptions MethodInvocation fastARef runtime Literal newString != MemberReference Literal ! externalEncodingOption isNil MethodInvocation BlockStatement MethodInvocation != MemberReference Literal ! isNil MethodInvocation BlockStatement MethodInvocation rubyOptions MethodInvocation fastARef != MemberReference Literal ! encoding isNil BinaryOperation BlockStatement IfStatement runtime Literal Assignment RubyHash options runtime Literal runtime Literal "-" externalEncodingOption null dash MemberReference StatementExpression MemberReference MemberReference null dash MemberReference StatementExpression MemberReference MemberReference runtime Literal encoding null && BinaryOperation MethodInvocation StatementExpression BinaryOperation BlockStatement BlockStatement "mode" MemberReference MethodInvocation = externalEncodingOption Assignment context externalEncodingOption Assignment context != MemberReference Literal ! externalEncodingOption isNil MethodInvocation && BinaryOperation MethodInvocation StatementExpression StatementExpression modes MemberReference MethodInvocation parseModes19 MemberReference MethodInvocation = MemberReference MethodInvocation = externalEncodingOption null context MethodInvocation MethodInvocation getRuntime != MemberReference Literal ! isNil MethodInvocation MethodInvocation context rubyOptions MethodInvocation MethodInvocation fastARef externalEncodingOption MemberReference MemberReference getWarnings BinaryOperation warn null context MethodInvocation MethodInvocation getRuntime MemberReference MemberReference Literal asString runtime Literal runtime runtime + BinaryOperation Literal getWarnings BinaryOperation warn context encoding 0 "mode" + Literal MemberReference "': is used" + BinaryOperation Literal "Ignoring encoding parameter '" encoding + Literal MemberReference "': is used" "Ignoring encoding parameter '" encoding	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement final public JRubyMethod IRubyObject ReferenceType context MemberReference ThreadContext returnType	1
MethodDeclaration Modifier Annotation ReferenceType TryStatement public JRubyMethod JavaObject IfStatement ReturnStatement CatchClause MethodInvocation BlockStatement MethodInvocation CatchClauseParameter ThrowStatement ! Ruby isSecurityRestricted StatementExpression JavaObject MethodInvocation MethodInvocation wrap IllegalAccessException iae MethodInvocation MethodInvocation getRuntime field Literal get MethodInvocation getRuntime field Literal setAccessible null BinaryOperation newTypeError true + Literal MethodInvocation "illegal static value access: " iae getMessage	1
MethodDeclaration Modifier IfStatement public MemberReference BlockStatement BlockStatement DEBUG LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation PrintWriter pw ClassCreator ClassCreator push pw flush ClassCreator push ReferenceType MemberReference ReferenceType ClassCreator ReferenceType ClassCreator PrintWriter System out ReferenceType ClassCreator MemberReference ReferenceType BinaryOperation ReferenceType BinaryOperation pw ClassWriter | MemberReference MemberReference ClassWriter | MemberReference MemberReference ClassWriter COMPUTE_FRAMES ClassWriter COMPUTE_MAXS ClassWriter COMPUTE_FRAMES ClassWriter COMPUTE_MAXS	1
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter SwitchStatement public Deprecated IRubyObject ReferenceType context ReferenceType args ReferenceType block MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject Block args length Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 1 MethodInvocation 2 MethodInvocation MethodInvocation Literal MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null context ArraySelector args block context ArraySelector args ArraySelector args block context getRuntime args length 1 2 Literal Literal Literal 0 0 1	1
MethodDeclaration Modifier FormalParameter FormalParameter IfStatement IfStatement IfStatement private static ReferenceType to BasicType options BinaryOperation StatementExpression BinaryOperation StatementExpression BinaryOperation StatementExpression ByteList int != BinaryOperation Literal MethodInvocation != BinaryOperation Literal MethodInvocation != BinaryOperation Literal MethodInvocation & MemberReference MemberReference 0 to Cast append & MemberReference MemberReference 0 to Cast append & MemberReference MemberReference 0 to Cast append options ReOptions RE_OPTION_MULTILINE BasicType Literal options ReOptions RE_OPTION_IGNORECASE BasicType Literal options ReOptions RE_OPTION_EXTENDED BasicType Literal byte 'm' byte 'i' byte 'x'	1
MethodDeclaration Modifier setDate FormalParameter StatementExpression public ReferenceType date Assignment Date This MemberReference = MemberReference date date	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args BinaryOperation ReturnStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject != MemberReference Literal MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference call args length 1 This MemberReference MemberReference MemberReference Literal Literal raiseArgumentError context self clazz name ArraySelector args context name args length 1 1 Literal 0	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Literal BlockStatement This ThreadContext Block Ruby runtime MethodInvocation IRubyObject i MethodInvocation RubyFixnum one MethodInvocation true IfStatement StatementExpression StatementExpression context getRuntime RubyFixnum MemberReference zero RubyFixnum MemberReference one MethodInvocation BlockStatement MethodInvocation Assignment runtime runtime ! i MethodInvocation MemberReference Literal This callMethod BreakStatement block MemberReference MemberReference yield MemberReference MethodInvocation = isTrue context "<" context i i i MemberReference Literal MemberReference callMethod context "+" one	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType javaModule ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby RubyModule RubyClass result MethodInvocation result MethodInvocation includeModule result ClassReference defineAnnotatedMethods result MethodInvocation getMetaClass result MethodInvocation getMetaClass result javaModule Literal MethodInvocation MemberReference defineClassUnder runtime Literal fastGetModule ReferenceType Literal Literal javaModule Literal fastGetClass ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR JavaClass "JavaObject"	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter TryStatement private static IRubyObject ReferenceType context ReferenceType ReferenceType array StatementExpression ReturnStatement StatementExpression ThreadContext IRubyObject RubyArray MethodInvocation MethodInvocation MethodInvocation context MethodInvocation getRuntime MemberReference MemberReference MethodInvocation context MethodInvocation getRuntime MemberReference registerInspecting context array toJavaArray MemberReference unregisterInspecting array array	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Object MethodInvocation key ClassReference toJava ReferenceType Object	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Set TypeArgument ReferenceType MethodInvocation ReferenceType BasicBlock MemberReference CFG_Edge	0
MethodDeclaration Modifier replaceInternal19 FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression IfStatement private BasicType beg BasicType len ReferenceType repl ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement BlockStatement BasicType VariableDeclarator BinaryOperation StatementExpression MethodInvocation MethodInvocation Assignment BinaryOperation StatementExpression int int RubyString Encoding enc MethodInvocation int p MemberReference int e singleByteOptimizable StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement StatementExpression IfStatement int cr MethodInvocation == MemberReference MemberReference MethodInvocation BinaryOperation BinaryOperation MemberReference replaceInternal MemberReference associateEncoding MemberReference MethodInvocation = != MemberReference MemberReference MethodInvocation MemberReference checkEncoding value begin Assignment Assignment BasicType VariableDeclarator BasicType VariableDeclarator Assignment BinaryOperation StatementExpression Assignment BinaryOperation StatementExpression getCodeRange cr CR_BROKEN - MemberReference MemberReference - MemberReference MemberReference repl enc cr MemberReference MethodInvocation codeRangeAnd cr CR_BROKEN MemberReference setCodeRange repl MemberReference MemberReference += MemberReference BinaryOperation = int end BinaryOperation byte bytes MemberReference MemberReference MethodInvocation = == MemberReference Literal Assignment MemberReference MethodInvocation = == MemberReference Literal Assignment p value begin e p cr repl getCodeRange cr p beg e + MemberReference MemberReference + MemberReference MemberReference value bytes p StringSupport MemberReference MemberReference MemberReference MemberReference MemberReference nth p - 1 MemberReference MemberReference = e StringSupport MemberReference MemberReference MemberReference MemberReference MemberReference nth e - 1 MemberReference MemberReference = p len p value realSize enc bytes p end beg p end enc bytes p end len e end	1
MethodDeclaration Modifier Annotation ReferenceType insert FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg This name Literal compat MemberReference IRubyObject CompatVersion RUBY1_8	0
MethodDeclaration Modifier Annotation BasicType ReturnStatement public Override int MemberReference ClassIndex BIGNUM	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement private static int ReferenceType cwd ReferenceType ary ReferenceType pattern Assignment MethodInvocation String List TypeArgument GlobPattern MemberReference MemberReference |= MemberReference MemberReference MemberReference MemberReference Literal MemberReference MemberReference ClassCreator glob_helper ReferenceType pattern flags FNM_SYSCASE cwd pattern bytes pattern begin pattern end - 1 pattern flags ReferenceType MemberReference MemberReference ByteList ary	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private GlobalVariable ReferenceType name ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference String GlobalVariable variable Cast == MemberReference Literal StatementExpression StatementExpression variable ReferenceType MethodInvocation variable null Assignment MethodInvocation GlobalVariable MemberReference get MemberReference MethodInvocation = MemberReference MemberReference put name variable GlobalVariable MemberReference MemberReference name variable runtime name	0
MethodDeclaration Modifier StatementExpression private Assignment MemberReference MemberReference |=	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement IfStatement public ReferenceType BasicType ReferenceType optArgs BasicType optArgsCount ReferenceType requiredAssignment ReferenceType optGivenAssignment ReferenceType optNotGivenAssignment ReferenceType restAssignment ReferenceType blockAssignment MemberReference BlockStatement BlockStatement BinaryOperation BlockStatement Object int Object int ArrayCallback ArrayCallback ArrayCallback CompilerCallback CompilerCallback specificArity LocalVariableDeclaration ForStatement IfStatement != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression BasicType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement blockAssignment null MethodInvocation MethodInvocation MethodInvocation MethodInvocation int currentArgElement Literal BinaryOperation MemberReference StatementExpression StatementExpression || BinaryOperation BinaryOperation LocalVariableDeclaration ForStatement IfStatement IfStatement methodCompiler method MethodInvocation aload methodCompiler Literal MethodInvocation invokeUtilityMethod blockAssignment MemberReference call 0 < MemberReference MethodInvocation ++ currentArgElement MethodInvocation MethodInvocation || BinaryOperation BinaryOperation != MemberReference Literal BasicType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement methodCompiler ClassReference MethodInvocation sig methodCompiler currentArgElement scope getRequiredArgs method BinaryOperation aload requiredAssignment MemberReference MemberReference MemberReference nextValue > MemberReference Literal > MemberReference Literal restAssignment null int currentArgElement Literal BinaryOperation MemberReference StatementExpression StatementExpression StatementExpression StatementExpression > MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration ForStatement ForStatement StatementExpression ForStatement StatementExpression StatementExpression != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReferenceType ClassReference ClassReference params + MemberReference MemberReference methodCompiler currentArgElement 0 optArgsCount 0 0 < MemberReference MemberReference ++ currentArgElement MethodInvocation MethodInvocation MethodInvocation MethodInvocation optArgsCount 0 ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl StatementExpression ForControl BlockStatement MethodInvocation ForControl BlockStatement MethodInvocation MethodInvocation restAssignment null MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation IRubyObject ReferenceType ReferenceType argsIndex currentArgElement currentArgElement method MemberReference aload method MemberReference pushInt method arrayload requiredAssignment MemberReference MemberReference MemberReference nextValue Label doneWithOpt ClassCreator Label optLabels ArrayCreator VariableDeclaration BinaryOperation MemberReference Assignment VariableDeclaration BinaryOperation MemberReference MemberReference StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression method MemberReference go_to VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression method pop method MemberReference label method MemberReference aload methodCompiler method MemberReference pushInt methodCompiler Literal MethodInvocation invokeUtilityMethod restAssignment MemberReference call Ruby Block argsIndex currentArgElement methodCompiler currentArgElement ReferenceType ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i MemberReference ClassCreator = BasicType VariableDeclarator < MemberReference MemberReference ++ currentArgElement ++ optArgElement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation doneWithOpt BasicType VariableDeclarator < MemberReference MemberReference ++ optArgElement MethodInvocation MethodInvocation doneWithOpt argsIndex currentArgElement ClassReference ClassReference ClassReference ClassReference sig methodCompiler Label Label optArgsCount int i Literal i optLabels length ArraySelector optLabels ReferenceType int optArgElement Literal optArgElement optArgsCount method MemberReference aload method MemberReference pushInt methodCompiler Literal MethodInvocation invokeUtilityMethod method dup method MemberReference optGivenAssignment MemberReference MemberReference MemberReference nextValue int optArgElement Literal optArgElement optArgsCount method MemberReference label optNotGivenAssignment MemberReference MemberReference MemberReference nextValue ReferenceType ReferenceType ReferenceType BasicType 0 MemberReference Label 0 argsIndex currentArgElement ClassReference ClassReference ClassReference sig ArraySelector optLabels methodCompiler optArgs optArgElement 0 ArraySelector optLabels methodCompiler optArgs optArgElement RubyArray IRubyObject Ruby int i ReferenceType ReferenceType BasicType MemberReference MemberReference IRubyObject IRubyObject int optArgElement optArgElement	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private static ByteList ReferenceType str BasicType VariableDeclarator ForControl BlockStatement ClassCreator ByteList int pos Literal VariableDeclaration BinaryOperation MemberReference StatementExpression ReferenceType MemberReference BinaryOperation BinaryOperation 0 BasicType VariableDeclarator >= MemberReference Literal -- i Assignment ByteList str + MemberReference Literal - BinaryOperation Literal int i Literal i 1 MemberReference MethodInvocation = pos 1 - MethodInvocation MemberReference 3 3 pos str Literal BinaryOperation indexOf str length pos '?' + MemberReference Literal pos 1	0
MethodDeclaration Modifier BasicType FormalParameter StatementExpression IfStatement final int ReferenceType obj MethodInvocation BinaryOperation BlockStatement IfStatement IRubyObject check instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement BlockStatement obj RubySymbol MethodInvocation instanceof MemberReference ReferenceType ReturnStatement ReturnStatement Cast obj RubyString MethodInvocation MethodInvocation ReferenceType Cast Cast RubyNumeric MemberReference num2int RubyString ReferenceType MemberReference ReferenceType MemberReference obj RubySymbol obj RubyString obj	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private static int ReferenceType types ReferenceType args BasicType VariableDeclarator ForControl BlockStatement MemberReference Class TypeArgument IRubyObject int count Literal VariableDeclaration BinaryOperation MemberReference IfStatement count ? 0 BasicType VariableDeclarator < MemberReference MemberReference ++ i MemberReference BlockStatement int i Literal i args length ArraySelector MethodInvocation types StatementExpression 0 MemberReference MethodInvocation equals MemberReference i MemberReference argClass ++ count ArraySelector args MemberReference i	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject receiver MethodInvocation callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation call MethodInvocation getReceiverNode context self receiver arg1 MemberReference MemberReference MemberReference MemberReference RuntimeHelpers MemberReference MemberReference MemberReference getBlock MemberReference MemberReference MemberReference MemberReference runtime context self context self runtime context self	0
MethodDeclaration Modifier Annotation ReferenceType getc FormalParameter FormalParameter LocalVariableDeclaration WhileStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType VariableDeclarator Literal BlockStatement name Literal ThreadContext IRubyObject ArgsFileData data MethodInvocation true LocalVariableDeclaration IfStatement IfStatement IfStatement ReturnStatement ArgsFileData MemberReference getDataFrom ReferenceType VariableDeclarator MethodInvocation ReturnStatement BinaryOperation BlockStatement BlockStatement MethodInvocation BlockStatement MemberReference recv IRubyObject bt ! data MemberReference next_argv MethodInvocation instanceof MemberReference ReferenceType StatementExpression StatementExpression bt isNil StatementExpression ContinueStatement bt context context MethodInvocation getRuntime data currentFile RubyFile Assignment Assignment Assignment getNil MemberReference MethodInvocation = MemberReference Cast = MemberReference Literal = bt data.currentFile MemberReference Literal callMethod bt ReferenceType MemberReference data next_p 1 context RubyIO data currentFile	1
MethodDeclaration Modifier ReferenceType ReturnStatement public String Literal done"	0
MethodDeclaration Modifier Annotation ReferenceType yield FormalParameter FormalParameter FormalParameter ReturnStatement public Deprecated IRubyObject ReferenceType context ReferenceType value BasicType aValue MethodInvocation ThreadContext IRubyObject boolean body MemberReference MemberReference Literal Literal MemberReference MemberReference MemberReference yield context value null null aValue type	1
MethodDeclaration Modifier FormalParameter IOException StatementExpression ForStatement public ReferenceType vars MethodInvocation EnhancedForControl BlockStatement List TypeArgument MethodInvocation writeInt VariableDeclaration MemberReference IfStatement ReferenceType vars size ReferenceType VariableDeclarator vars BinaryOperation BlockStatement Variable TypeArgument Variable TypeArgument var instanceof MethodInvocation ReferenceType StatementExpression StatementExpression ReferenceType ReferenceType var getValue IRubyObject MethodInvocation MethodInvocation Object Object MethodInvocation Cast runtime MethodInvocation ReferenceType MethodInvocation var getName IRubyObject var getValue	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MethodInvocation MethodInvocation MethodInvocation MemberReference Object Object int MemberReference ClassCreator = support popCurrentScope support Cast setInDef support Cast setInSingle yyVal yyVal ReferenceType MethodInvocation Cast MethodInvocation Cast ReferenceType MemberReference ReferenceType MemberReference SClassNode Cast getPosition ReferenceType MemberReference support getCurrentScope ReferenceType MemberReference Boolean ArraySelector yyVals Integer ArraySelector yyVals ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference BinaryOperation + Literal MemberReference + Literal MemberReference - 4 yyTop - 2 yyTop + Literal MemberReference - 5 yyTop - 1 yyTop - 7 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType name ReferenceType object MethodInvocation Ruby String IRubyObject runtimeCache MemberReference Literal MemberReference MemberReference getVariable runtime 7 name object	0
MethodDeclaration Modifier BasicType getIndex ReturnStatement public int BinaryOperation & MemberReference Literal location	0
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression public Modifier BasicType crc Assignment MethodInvocation final int This MemberReference = This MemberReference crc MemberReference crc crc	0
MethodDeclaration Modifier ReferenceType ReturnStatement public String MethodInvocation getVariables	0
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType BLOCKNODE	0
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration ForStatement IfStatement ReturnStatement private static final String ReferenceType VariableDeclarator EnhancedForControl BlockStatement MethodInvocation BlockStatement MemberReference String osname MethodInvocation VariableDeclaration MethodInvocation IfStatement osname Literal startsWith ReturnStatement osname MethodInvocation Literal Literal getProperty ReferenceType VariableDeclarator keySet MethodInvocation BlockStatement "windows" MemberReference toLowerCase "os.name" "unknown" String s s MemberReference equalsIgnoreCase ReturnStatement WINDOWS osname MethodInvocation MemberReference get s	1
MethodDeclaration Modifier ReferenceType ReturnStatement public String Literal "foo"	0
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression IfStatement ReturnStatement public Operand ReferenceType Assignment BinaryOperation BlockStatement This Map TypeArgument TypeArgument MemberReference MethodInvocation = instanceof MemberReference ReferenceType StatementExpression ReferenceType ReferenceType MemberReference Variable Assignment Operand Operand MemberReference Cast = ReferenceType MemberReference Variable	0
MethodDeclaration Modifier LocalVariableDeclaration ForStatement ForStatement StatementExpression private ReferenceType VariableDeclarator ForControl BlockStatement EnhancedForControl StatementExpression Assignment List TypeArgument arglist ClassCreator BinaryOperation MemberReference LocalVariableDeclaration IfStatement VariableDeclaration MemberReference MethodInvocation MemberReference MethodInvocation = ReferenceType ReferenceType < MemberReference MemberReference ++ argumentIndex ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator argv arglist MemberReference add argv arglist ArrayCreator toArray String ArrayList TypeArgument argumentIndex arguments length String arg MemberReference && MemberReference MethodInvocation StatementExpression IfStatement StatementExpression StatementExpression String arg arg ReferenceType MethodInvocation ReferenceType ArraySelector arguments argvGlobalsOn arg Literal startsWith Assignment BinaryOperation BlockStatement BlockStatement Assignment MethodInvocation String arglist size String MemberReference "-" MemberReference MethodInvocation = > MethodInvocation Literal LocalVariableDeclaration StatementExpression StatementExpression MemberReference Literal = arglist MemberReference add argumentIndex arg arg Literal substring arg Literal indexOf 0 ReferenceType VariableDeclarator MethodInvocation MethodInvocation argvGlobalsOn false arg 1 '=' String keyvalue MethodInvocation MemberReference MemberReference put MemberReference Literal put arg Literal Literal split ArraySelector keyvalue ArraySelector keyvalue arg null "=" 2 Literal Literal 0 1	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args MethodInvocation name Literal rest Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject MethodInvocation MemberReference true true Visibility PRIVATE context getRuntime args	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement Assignment MemberReference Object Object int instanceof Cast ReferenceType StatementExpression MemberReference Cast = yyVal ReferenceType MemberReference SelfNode MethodInvocation yyVal ReferenceType MemberReference Node ArraySelector yyVals support Cast checkExpression Node ArraySelector yyVals BinaryOperation ReferenceType MemberReference BinaryOperation + Literal MemberReference Node ArraySelector yyVals + Literal MemberReference 0 yyTop BinaryOperation 0 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement private static IRubyObject ReferenceType context ReferenceType subclass ReferenceType java_class ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType ThrowStatement RubyClass rubySubclass Cast rubySubclass MethodInvocation getInstanceVariables RubyClass subclassSingleton MethodInvocation subclassSingleton MemberReference Literal addReadWriteAttribute subclassSingleton Literal ClassCreator addMethod rubySubclass Literal ClassCreator addMethod runtime getNil context getRuntime subclass RubyClass MethodInvocation ReferenceType MemberReference Literal MethodInvocation fastSetInstanceVariable rubySubclass context ReferenceType MemberReference MemberReference MethodDeclaration ReferenceType MemberReference MemberReference FieldDeclaration MethodDeclaration runtime MemberReference MethodInvocation newTypeError RubyClass subclass "@java_proxy_class" runtime getNil JavaMethodZero subclassSingleton Visibility PUBLIC Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement JavaMethodN subclassSingleton Visibility PUBLIC Modifier ReferenceType VariableDeclarator Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement LocalVariableDeclaration ReturnStatement subclass runtime getClassClass public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation private final Map TypeArgument TypeArgument ClassCreator public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject javaInterfaces MethodInvocation != MemberReference Literal MethodInvocation context MethodInvocation getRuntime ReferenceType ReferenceType ReferenceType ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject proxyClass MethodInvocation || BinaryOperation MethodInvocation StatementExpression StatementExpression JavaProxyClass realProxyClass Cast RubyArray constructors MethodInvocation ArrayList TypeArgument forArity ClassCreator VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement == MethodInvocation Literal ThrowStatement JavaProxyConstructor matching Cast Object newArgs ArrayCreator Class parameterTypes MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression JavaObject newObject MethodInvocation MemberReference MemberReference MemberReference set_java_object self MethodInvocation getInstanceVariables javaInterfaces null javaInterfaces dup getNil Integer ParameterTypes HashMap TypeArgument TypeArgument self MethodInvocation MethodInvocation getMetaClass == MemberReference Literal proxyClass isNil Assignment MethodInvocation ReferenceType MemberReference realProxyClass constructors ReferenceType ReferenceType BasicType VariableDeclarator < MemberReference MethodInvocation ++ i ReferenceType VariableDeclarator BinaryOperation BlockStatement forArity size 0 MethodInvocation ReferenceType MethodInvocation ReferenceType MemberReference matching getParameterTypes BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment matching MemberReference MemberReference newInstance self self newObject Literal fastGetInstanceVariable ReferenceType ReferenceType getInstanceVariables Literal fastGetInstanceVariable proxyClass null MemberReference MethodInvocation = self MethodInvocation MethodInvocation getMetaClass JavaProxyClass proxyClass JavaProxyConstructor ArrayList TypeArgument int i Literal i constructors size JavaProxyConstructor constructor Cast == MethodInvocation MemberReference StatementExpression context MethodInvocation getRuntime JavaProxyConstructor CallableSelector MemberReference MemberReference MethodInvocation MemberReference MemberReference matchingCallableArityN Object args length int i Literal i args length MemberReference MemberReference = self newArgs "@java_interfaces" Integer ParameterTypes "@java_proxy_class" proxyClass JavaProxyClass MemberReference MethodInvocation get_with_class getInstanceVariables Literal MemberReference fastSetInstanceVariable ReferenceType 0 ReferenceType MethodInvocation constructor MemberReference getParameterTypes args length MethodInvocation Literal newArgumentError self forArity ArrayCreator toArray args args length 0 ArraySelector newArgs ArraySelector MethodInvocation args self self getMetaClass "@java_proxy_class" proxyClass JavaProxyConstructor JavaProxyConstructor constructors MemberReference eltInternal length forArity MemberReference add "wrong of arguments for ReferenceType MethodInvocation MemberReference MemberReference MemberReference toJava i constructor JavaProxyConstructor forArity size i i ArraySelector parameterTypes MemberReference i	1
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement final public IRubyObject ReferenceType context BasicType value Modifier BasicType VariableDeclarator ClassCreator ThreadContext int final long address BinaryOperation ReferenceType MethodInvocation MethodInvocation & Cast MemberReference Pointer context getRuntime MethodInvocation MemberReference wrap BasicType MemberReference ADDRESS_MASK context getRuntime address long value	1
MethodDeclaration Modifier ReferenceType getValueNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier ReferenceType ReturnStatement public MemberReference staticScope	0
MethodDeclaration Modifier replaceText FormalParameter FormalParameter FormalParameter TryStatement protected BasicType start BasicType end ReferenceType replacement StatementExpression StatementExpression CatchClause int int String MethodInvocation MethodInvocation CatchClauseParameter StatementExpression area MethodInvocation getDocument area MethodInvocation getDocument BadLocationException e MethodInvocation MemberReference BinaryOperation remove MemberReference MemberReference MemberReference insertString e printStackTrace start - MemberReference MemberReference start replacement inputStyle end start	1
MethodDeclaration Modifier Annotation ReferenceType max FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement TernaryExpression name Literal frame Literal ThreadContext IRubyObject final Block final Ruby runtime MethodInvocation final IRubyObject result ArrayCreator final ThreadContext localContext MemberReference block isGiven StatementExpression StatementExpression BinaryOperation MethodInvocation MemberReference true context getRuntime ReferenceType ArrayInitializer context MethodInvocation MethodInvocation == MemberReference Literal runtime getNil ArraySelector result IRubyObject Literal MemberReference MemberReference MemberReference ClassCreator callEach MemberReference MemberReference MemberReference ClassCreator callEach ArraySelector result null Literal null runtime context self ReferenceType MethodDeclaration runtime context self ReferenceType MethodDeclaration Literal 0 BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement ReturnStatement BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SynchronizedStatement ReturnStatement 0 public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MethodInvocation public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MemberReference IfStatement MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation MemberReference MemberReference Literal checkContext || BinaryOperation BinaryOperation StatementExpression runtime getNil ThreadContext IRubyObject Block IRubyObject larg MethodInvocation result BinaryOperation BlockStatement runtime getNil MemberReference MemberReference checkArgs localContext ctx == MemberReference Literal > MethodInvocation Literal Assignment MemberReference MemberReference checkArgs || BinaryOperation BinaryOperation StatementExpression runtime largs ArraySelector result null RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 MemberReference MemberReference = runtime largs == MemberReference Literal > MethodInvocation Literal Assignment Literal ctx block MemberReference MethodInvocation Literal Literal Literal yield larg ArraySelector result ArraySelector result larg ArraySelector result null RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 MemberReference MemberReference = 0 ctx runtime MemberReference MemberReference newArray null null true Literal Literal Literal ctx larg MemberReference Literal MemberReference callMethod larg ArraySelector result ArraySelector result larg larg ArraySelector result 0 0 0 ctx "<=>" ArraySelector result Literal Literal Literal Literal 0 0 0 0	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation meta Literal optional Literal ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation int Literal == MemberReference Literal StatementExpression StatementExpression BinaryOperation BlockStatement BlockStatement runtime MemberReference newFixnum true 1 context getRuntime 0 args length 0 Assignment MethodInvocation == MemberReference Literal StatementExpression StatementExpression MemberReference MethodInvocation = runtime MethodInvocation getPosix args length 1 Assignment MethodInvocation runtime MethodInvocation getPosix MemberReference MemberReference MethodInvocation = runtime Literal newArgumentError Literal runtime MethodInvocation getPosix "wrong number of arguments" 0 Cast BasicType MemberReference int ArraySelector MethodInvocation MethodInvocation args Literal convertToInteger getLongValue 0	0
MethodDeclaration Modifier Annotation ReferenceType op_mod FormalParameter FormalParameter SwitchStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation SwitchStatementCase SwitchStatementCase name ElementArrayValue required Literal ThreadContext IRubyObject other MemberReference getMetaClass MemberReference MemberReference MemberReference LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement ReturnStatement Literal Literal 1 index ClassIndex FIXNUM ClassIndex BIGNUM ClassIndex FLOAT BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation "%" "modulo" double y Cast double x MemberReference double MethodInvocation < BinaryOperation Literal StatementExpression RubyFloat MethodInvocation MemberReference newFloat MemberReference Literal MemberReference coerceBin ReferenceType MemberReference value Math MemberReference MemberReference * MemberReference MemberReference 0 Assignment getRuntime context "%" other RubyNumeric other x y y MemberReference MemberReference += y	1
MethodDeclaration Modifier Annotation ReferenceType min FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement TernaryExpression name Literal frame Literal ThreadContext IRubyObject final Block final Ruby runtime MethodInvocation final IRubyObject result ArrayCreator final ThreadContext localContext MemberReference block isGiven StatementExpression StatementExpression BinaryOperation MethodInvocation MemberReference true context getRuntime ReferenceType ArrayInitializer context MethodInvocation MethodInvocation == MemberReference Literal runtime getNil ArraySelector result IRubyObject Literal MemberReference MemberReference MemberReference ClassCreator callEach MemberReference MemberReference MemberReference ClassCreator callEach ArraySelector result null Literal null runtime context self ReferenceType MethodDeclaration runtime context self ReferenceType MethodDeclaration Literal 0 BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement ReturnStatement BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SynchronizedStatement ReturnStatement 0 public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MethodInvocation public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MemberReference IfStatement MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation MemberReference MemberReference Literal checkContext || BinaryOperation BinaryOperation StatementExpression runtime getNil ThreadContext IRubyObject Block IRubyObject larg MethodInvocation result BinaryOperation BlockStatement runtime getNil MemberReference MemberReference checkArgs localContext ctx == MemberReference Literal < MethodInvocation Literal Assignment MemberReference MemberReference checkArgs || BinaryOperation BinaryOperation StatementExpression runtime largs ArraySelector result null RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 MemberReference MemberReference = runtime largs == MemberReference Literal < MethodInvocation Literal Assignment Literal ctx block MemberReference MethodInvocation yield larg ArraySelector result ArraySelector result larg ArraySelector result null RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 MemberReference MemberReference = 0 ctx runtime MemberReference MemberReference newArray Literal Literal Literal ctx larg MemberReference Literal MemberReference callMethod larg ArraySelector result ArraySelector result larg larg ArraySelector result 0 0 0 ctx "<=>" ArraySelector result Literal Literal Literal Literal 0 0 0 0	0
MethodDeclaration Modifier ReferenceType ReturnStatement public String MemberReference oldName	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement protected static String ReferenceType object MethodInvocation IRubyObject object MethodInvocation getClass getName	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter StatementExpression IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation BinaryOperation ReturnStatement MethodInvocation name Literal ThreadContext check == MemberReference Literal MethodInvocation str MethodInvocation MethodInvocation MemberReference BinaryOperation makeShared "post_match" begin - 1 context MethodInvocation getRuntime This infectBy context getRuntime end - MethodInvocation MemberReference getNil str MethodInvocation getByteList end length	1
MethodDeclaration Modifier encode FormalParameter FormalParameter FormalParameter IfStatement public ReferenceType runtime ReferenceType o ReferenceType result BinaryOperation StatementExpression StatementExpression Ruby IRubyObject ByteList == MemberReference MemberReference MethodInvocation MethodInvocation Platform BYTE_ORDER Platform BIG_ENDIAN MemberReference MethodInvocation MemberReference MethodInvocation result MemberReference MemberReference result MemberReference MemberReference runtime o runtime o	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String Block RuntimeHelpers MemberReference MemberReference Literal MemberReference invoke context self block	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement IfStatement StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement BinaryOperation BlockStatement Assignment Cast MemberReference Object Object int instanceof Cast ReferenceType ThrowStatement instanceof Cast ReferenceType ThrowStatement MemberReference Cast = ReferenceType MemberReference yyVal ReferenceType MemberReference YieldNode ClassCreator ReferenceType MemberReference BlockPassNode ClassCreator yyVal ReferenceType MemberReference Node yyVal Node ArraySelector yyVals ReferenceType MemberReference MethodInvocation MethodInvocation Literal BlockAcceptingNode ArraySelector yyVals ReferenceType MemberReference MethodInvocation MethodInvocation Literal BlockAcceptingNode ArraySelector yyVals BinaryOperation SyntaxException PID Cast getPosition lexer getCurrentLine "block given to BinaryOperation SyntaxException PID BLOCK_ARG_AND_BLOCK_GIVEN Cast getPosition lexer getCurrentLine "Both block arg and block given." BinaryOperation + Literal MemberReference ReferenceType MemberReference + Literal MemberReference ReferenceType MemberReference + Literal MemberReference - 1 yyTop Node ArraySelector yyVals - 1 yyTop Node ArraySelector yyVals - 1 yyTop BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType input MethodInvocation name Literal module Literal visibility MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject context MethodInvocation getRuntime "input=" true Visibility PRIVATE CompatVersion RUBY1_9 getNil	1
MethodDeclaration Modifier load FormalParameter FormalParameter IOException StatementExpression public ReferenceType runtime BasicType wrap MethodInvocation Ruby boolean MemberReference runtime	0
MethodDeclaration Modifier ReferenceType ReturnStatement public MemberReference scope	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg1 ReferenceType arg2 MethodInvocation name Literal required Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject IRubyObject MethodInvocation MemberReference MemberReference 2 true Visibility PRIVATE context getRuntime arg1 arg2	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby RubyClass RubyClass MethodInvocation ClassReference defineAnnotatedMethods Literal MethodInvocation MemberReference defineClassUnder ReferenceType runtime Literal getClass	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RaiseException MethodInvocation MemberReference MethodInvocation Literal getNil "no block given"	0
MethodDeclaration Modifier Annotation ReferenceType pack_sockaddr_un FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType filename MethodInvocation IRubyObject IRubyObject MethodInvocation MemberReference MemberReference pack_sockaddr_un recv MethodInvocation getRuntime recv filename getCurrentContext	1
MethodDeclaration Modifier BasicType LocalVariableDeclaration IfStatement ReturnStatement public long ReferenceType VariableDeclarator BinaryOperation BlockStatement Literal MethodInvocation != MemberReference MemberReference ReturnStatement - 1 getCache MethodInvocation	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement private static RubyString ReferenceType runtime ReferenceType str ReferenceType format ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby RubyString String RubyArray array MethodInvocation array MemberReference append MethodInvocation MemberReference MemberReference ClassCreator pack RubyArray MemberReference Literal newArray str MethodInvocation runtime array ReferenceType MethodInvocation runtime 1 runtime getCurrentContext ByteList ByteList MemberReference plain format	0
MethodDeclaration Modifier ReferenceType getInteger ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier ReferenceType getDate ReturnStatement public Date MemberReference date	0
MethodDeclaration Modifier ReferenceType ReturnStatement final public Arity MemberReference Arity	0
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public Object ReferenceType context ReferenceType rubyObject MethodInvocation BlockStatement ClassCreator ThreadContext IRubyObject rubyObject Literal respondsTo ReturnStatement ReferenceType Literal "to_f" ClassCreator Float 0.0 ReferenceType Cast Float BasicType Cast float ReferenceType MethodInvocation RubyNumeric rubyObject MemberReference Literal callMethod context "to_f"	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter java.io.IOException LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression IfStatement IfStatement IfStatement IfStatement LocalVariableDeclaration IfStatement StatementExpression IfStatement StatementExpression ReturnStatement public int ReferenceType lexer ReferenceType src BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BinaryOperation BlockStatement MethodInvocation MemberReference RubyYaccLexer LexerSource boolean spaceSeen Literal int c == MemberReference Literal StatementExpression ReturnStatement MemberReference MethodInvocation = && BinaryOperation MethodInvocation DoStatement StatementExpression && BinaryOperation BinaryOperation IfStatement IfStatement StatementExpression ReturnStatement spaceSeen StatementExpression StatementExpression ReturnStatement && BinaryOperation BinaryOperation LocalVariableDeclaration StatementExpression IfStatement StatementExpression ReturnStatement ByteList buffer ClassCreator && BinaryOperation BinaryOperation StatementExpression SwitchStatement StatementExpression src MemberReference unread == MethodInvocation MemberReference ThrowStatement lexer ClassCreator setValue Tokens tSTRING_CONTENT false flags - 1 MethodInvocation MemberReference c src read != BinaryOperation Literal Character MemberReference isWhitespace MethodInvocation BlockStatement Assignment == MemberReference MemberReference == MemberReference Literal BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation MemberReference MethodInvocation MethodInvocation Literal == MemberReference Literal == MemberReference Literal ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MethodInvocation MemberReference ReferenceType != BinaryOperation Literal == MemberReference Literal Assignment MemberReference SwitchStatementCase SwitchStatementCase MethodInvocation c MemberReference MemberReference MemberReference parseStringIntoBuffer RubyYaccLexer EOF ClassCreator ReferenceType MethodInvocation MemberReference lexer ClassCreator setValue Tokens tSTRING_END & MemberReference MemberReference 0 c Character MemberReference isWhitespace StatementExpression MemberReference Literal = c end nest 0 != BinaryOperation Literal StatementExpression StatementExpression ReturnStatement != BinaryOperation Literal StatementExpression ReturnStatement lexer ClassCreator setValue Tokens tSTRING_END src MemberReference unread lexer getPosition ' ' begin '\0' flags 0 ByteList buffer ClassCreator src MemberReference unread == MethodInvocation MemberReference ThrowStatement lexer ClassCreator setValue Tokens tSTRING_CONTENT ByteList & MemberReference MemberReference 0 c '#' MemberReference MethodInvocation = c Literal Literal StatementExpression StatementExpression ReturnStatement Literal StatementExpression ReturnStatement buffer Cast append lexer src buffer ReferenceType MemberReference MethodInvocation MethodInvocation Literal StrNode lexer getPosition buffer ReferenceType Literal MethodInvocation flags RubyYaccLexer STR_FUNC_QWORDS c Assignment spaceSeen true & MemberReference MemberReference 0 Assignment MethodInvocation Literal & MemberReference MemberReference 0 MethodInvocation MemberReference ReferenceType Literal MethodInvocation c ReferenceType c MemberReference MemberReference RubyYaccLexer EOF ClassCreator ReferenceType MethodInvocation MemberReference flags RubyYaccLexer STR_FUNC_EXPAND c src read '$' '@' MethodInvocation MethodInvocation MemberReference '{' MethodInvocation MemberReference BasicType Literal SyntaxException PID STRING_HITS_EOF src getPosition src getCurrentLine "unterminated string meets end of file" Token "\"" lexer getPosition MemberReference MethodInvocation = flags RubyYaccLexer STR_FUNC_QWORDS MemberReference Literal = lexer getPosition ' ' flags RubyYaccLexer lexer ClassCreator setValue Tokens tREGEXP_END Token "\"" lexer getPosition ByteList src buffer ReferenceType MemberReference MethodInvocation MethodInvocation Literal StrNode lexer getPosition buffer src MemberReference unread lexer ClassCreator setValue Tokens tSTRING_DVAR lexer ClassCreator setValue Tokens tSTRING_DBEG byte '#' c src read flags - 1 ReferenceType MethodInvocation MethodInvocation MethodInvocation SyntaxException PID STRING_HITS_EOF src getPosition src getCurrentLine "unterminated string meets end of file" c ReferenceType BinaryOperation MethodInvocation ReferenceType BinaryOperation MethodInvocation RegexpNode src getPosition ByteList Literal create MemberReference Token + Literal MemberReference lexer getPosition Token + Literal MemberReference lexer getPosition "" src "#" c "#" c	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement Node BodyCompiler boolean DVarNode dvarNode Cast RubyInstanceConfig PEEPHOLE_OPTZ IfStatement StatementExpression IfStatement ReferenceType MemberReference MemberReference StatementExpression MethodInvocation MemberReference StatementExpression DVarNode node expr MethodInvocation context MethodInvocation getVariableCompiler ! expr MethodInvocation context MethodInvocation getVariableCompiler MethodInvocation MethodInvocation context consumeCurrentValue MethodInvocation MethodInvocation dvarNode getIndex dvarNode dvarNode getIndex dvarNode	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ForStatement StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement IfStatement ReturnStatement static public Class ReferenceType ruby ReferenceType name ReferenceType superTypeNames ReferenceType simpleToAll ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation EnhancedForControl BlockStatement MethodInvocation MethodInvocation MethodInvocation BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation TryStatement MemberReference BlockStatement MemberReference Ruby String String Map TypeArgument TypeArgument ClassWriter cw ClassCreator String pathName MethodInvocation cw MemberReference BinaryOperation MemberReference Literal MethodInvocation MemberReference visit cw BinaryOperation Literal visitSource cw MethodInvocation BinaryOperation Literal MethodInvocation Literal Literal visitField cw MethodInvocation BinaryOperation Literal MethodInvocation Literal Literal visitField SkinnyMethodAdapter clinitMethod ClassCreator clinitMethod MethodInvocation clinitMethod dup clinitMethod MethodInvocation Literal MethodInvocation invokespecial clinitMethod MemberReference Literal MethodInvocation putstatic SkinnyMethodAdapter initMethod ClassCreator initMethod Literal aload initMethod MethodInvocation Literal MethodInvocation invokespecial initMethod Literal aload initMethod Literal aload initMethod MemberReference Literal MethodInvocation putfield initMethod voidreturn initMethod end VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration ForStatement clinitMethod voidreturn clinitMethod end cw visitEnd byte bytes MethodInvocation Class newClass ruby getJRubyClassLoader StatementExpression CatchClause DEBUG LocalVariableDeclaration TryStatement newClass ReferenceType ReferenceType ReferenceType MemberReference name Literal Literal replace V1_5 | MemberReference MemberReference pathName null ClassReference p superTypeNames + MemberReference Literal null visitEnd | BinaryOperation MemberReference "$monitor" ClassReference ci null null visitEnd | MemberReference MemberReference "$self" ClassReference ci null null ReferenceType MethodInvocation ClassReference p ClassReference p "<init>" VoidClassReference sig pathName "$monitor" ClassReference ci ReferenceType MethodInvocation 0 ClassReference p "<init>" VoidClassReference sig 0 1 pathName "$self" ClassReference ci ReferenceType VariableDeclarator simpleToAll entrySet ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator EnhancedForControl BlockStatement cw toByteArray Assignment CatchClauseParameter StatementExpression ReferenceType VariableDeclarator StatementExpression StatementExpression CatchClause TryStatement String List TypeArgument ClassWriter ClassWriter COMPUTE_MAXS '.' '/' ACC_PUBLIC ACC_SUPER ReferenceType pathName | MemberReference MemberReference ACC_PRIVATE ReferenceType ACC_PRIVATE ACC_FINAL ReferenceType SkinnyMethodAdapter cw BinaryOperation Literal MethodInvocation Literal Literal visitMethod ReferenceType ReferenceType ReferenceType SkinnyMethodAdapter cw MemberReference Literal MethodInvocation Literal Literal visitMethod ReferenceType ReferenceType Map ReferenceType entry String simpleName MethodInvocation Set TypeArgument nameSet MethodInvocation cw MethodInvocation BinaryOperation MemberReference MethodInvocation Literal Literal visitField clinitMethod MethodInvocation Literal MethodInvocation getstatic clinitMethod MemberReference MemberReference MethodInvocation putstatic Set TypeArgument implementedNames ClassCreator VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression LocalVariableDeclaration ForStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression IfStatement StatementExpression MemberReference MethodInvocation = ClassNotFoundException cnfe Assignment FileOutputStream fos Literal Assignment MethodInvocation CatchClauseParameter StatementExpression StatementExpression CatchClause ReferenceType Object ACC_STATIC ACC_FINAL Object IRubyObject | MemberReference MemberReference VoidClassReference sig null null Object Object Object ACC_PUBLIC "<init>" VoidClassReference ClassReference sig null null Object IRubyObject Entry TypeArgument TypeArgument entry getKey ReferenceType JavaUtil MemberReference MethodInvocation visitEnd | BinaryOperation MemberReference simpleName ClassReference ci null null ClassReference p ClassReference ci pathName simpleName ClassReference ci ReferenceType ReferenceType ReferenceType VariableDeclarator entry getValue ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ContinueStatement MethodInvocation BasicType VariableDeclarator EnhancedForControl BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation BinaryOperation BlockStatement IfStatement MethodInvocation newClass ruby MethodInvocation getJRubyClassLoader MemberReference MethodInvocation = null MemberReference ClassCreator = fos MemberReference write IOException ioe MethodInvocation MethodInvocation CatchClauseParameter Method ACC_PUBLIC ACC_STATIC ReferenceType ReferenceType ReferenceType String simpleName entry getValue | MemberReference MemberReference ACC_VOLATILE ReferenceType ReferenceType ReferenceType ReferenceType String HashSet TypeArgument Method method Class paramTypes MethodInvocation Class returnType MethodInvocation String fullName BinaryOperation implementedNames MemberReference contains implementedNames MemberReference add int baseIndex Literal VariableDeclaration MemberReference IfStatement int selfIndex MemberReference int rubyIndex BinaryOperation SkinnyMethodAdapter mv ClassCreator mv start mv Literal line && BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression BinaryOperation BlockStatement IfStatement mv end MemberReference loadClass newClass ruby MethodInvocation getJRubyClassLoader fos ReferenceType BinaryOperation bytes ioe printStackTrace fos close Exception e IRubyObject String List TypeArgument ACC_STATIC ACC_PUBLIC ReferenceType method getParameterTypes method getReturnType + MemberReference MethodInvocation fullName fullName 1 ReferenceType VariableDeclarator paramTypes BinaryOperation BlockStatement BlockStatement baseIndex + MemberReference Literal ReferenceType MethodInvocation 1 && BinaryOperation BinaryOperation == MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation && BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression StatementExpression BinaryOperation BlockStatement BlockStatement name MemberReference MethodInvocation defineClass FileOutputStream + MemberReference Literal ReferenceType String simpleName MemberReference prettyParams Class paramType || BinaryOperation BinaryOperation StatementExpression StatementExpression selfIndex 1 SkinnyMethodAdapter cw MemberReference MemberReference MethodInvocation Literal Literal visitMethod && MethodInvocation BinaryOperation == MemberReference ClassReference returnType Boolean TYPE mv Literal line mv Literal aload mv Literal aload mv MethodInvocation Literal MethodInvocation invokespecial mv && MethodInvocation BinaryOperation == MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation MethodInvocation && BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ForStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression name cw toByteArray name ".class" Method paramTypes == MemberReference ClassReference == MemberReference ClassReference Assignment Assignment ACC_PUBLIC simpleName MemberReference MemberReference sig null null simpleName Literal equals == MemberReference Literal ArraySelector paramTypes ReferenceType 2 0 1 ClassReference p "equals" MemberReference MethodInvocation sig simpleName Literal equals == MemberReference Literal returnType Integer TYPE mv Literal line mv Literal aload mv MethodInvocation Literal MethodInvocation invokespecial mv && MethodInvocation BinaryOperation == MemberReference ClassReference MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation EnhancedForControl BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation paramType BasicType paramType BasicType MemberReference Literal += MemberReference Literal += returnType paramTypes "equals" paramTypes length 1 Literal Object ReferenceType Boolean TYPE ClassReference params "hashCode" paramTypes length 0 3 0 ClassReference p "hashCode" MemberReference sig simpleName Literal equals == MemberReference Literal returnType ReferenceType mv Literal line mv Literal aload mv MethodInvocation Literal MethodInvocation invokespecial mv areturn mv Literal line Label dispatch ClassCreator Label end ClassCreator Label recheckMethod ClassCreator mv Literal aload mv MemberReference Literal MethodInvocation getfield mv MemberReference astore mv MemberReference aload mv MethodInvocation Literal MethodInvocation mv MemberReference astore mv MemberReference MemberReference MethodInvocation getstatic mv dup mv MemberReference aload mv MethodInvocation Literal MethodInvocation invokestatic mv MemberReference mv Literal line mv pop mv MemberReference Literal MethodInvocation getstatic mv Label ClassCreator Label tryEnd ClassCreator Label finallyStart ClassCreator Label finallyEnd ClassCreator mv Literal line mv MemberReference label mv MemberReference aload VariableDeclaration MemberReference StatementExpression mv MethodInvocation Literal MethodInvocation invokestatic mv MemberReference MemberReference MethodInvocation putstatic mv MemberReference Literal MethodInvocation getstatic mv mv MemberReference go_to mv MemberReference label mv MemberReference label mv Literal line mv MemberReference Literal MethodInvocation getstatic mv mv MemberReference label mv athrow mv MemberReference MemberReference MemberReference Literal trycatch mv MemberReference MemberReference MemberReference Literal trycatch mv MemberReference label mv Literal line mv MemberReference MemberReference MethodInvocation getstatic mv dup mv MethodInvocation Literal MethodInvocation getfield mv MethodInvocation Literal MethodInvocation invokevirtual mv MemberReference mv Literal line mv pop mv MemberReference aload mv MemberReference ldc MemberReference MemberReference MemberReference coerceArgumentsToRuby mv MethodInvocation Literal MethodInvocation invokestatic mv MemberReference go_to mv MemberReference label mv Literal MemberReference line mv MethodInvocation Literal MethodInvocation getfield mv MemberReference aload mv MethodInvocation Literal MethodInvocation invokevirtual mv MemberReference aload mv MemberReference aload mv MethodInvocation Literal MethodInvocation mv MemberReference ldc MemberReference MemberReference MemberReference coerceArgumentsToRuby mv MethodInvocation Literal MethodInvocation getstatic mv Literal line mv MethodInvocation Literal MethodInvocation invokevirtual mv MemberReference label MemberReference MemberReference double long baseIndex 2 baseIndex 1 0 Object ReferenceType ReferenceType Integer TYPE "toString" paramTypes length 0 String 4 0 ClassReference p "toString" ClassReference sig 5 ReferenceType ReferenceType ReferenceType 0 pathName "$self" ClassReference ci selfIndex selfIndex ClassReference p "getRuntime" ClassReference sig rubyIndex pathName simpleName ClassReference ci selfIndex ClassReference p ClassReference MethodInvocation sig dispatch 6 pathName "$monitor" ClassReference ci ReferenceType ReferenceType ReferenceType ReferenceType 7 selfIndex ReferenceType VariableDeclarator nameSet MethodInvocation ClassReference p ClassReference MethodInvocation sig pathName simpleName ClassReference ci pathName "$monitor" ClassReference ci recheckMethod tryEnd finallyStart 9 pathName "$monitor" ClassReference ci finallyEnd tryEnd finallyStart null finallyStart finallyEnd finallyStart null recheckMethod 10 pathName simpleName ClassReference ci ClassReference p "method" ClassReference ci ClassReference p ClassReference sig dispatch 11 selfIndex simpleName mv paramTypes rubyIndex ClassReference p ClassReference ClassReference ClassReference ClassReference sig end dispatch 12 dispatch ClassReference p "method" ClassReference ci rubyIndex ClassReference p ClassReference sig selfIndex selfIndex ClassReference p ClassReference sig simpleName mv paramTypes rubyIndex ClassReference p "NULL_BLOCK" ClassReference ci 13 ClassReference p "call" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig end mv returnType Object Object ReferenceType ReferenceType Label Label Label ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType BasicType ClassReference ClassReference params ReferenceType Label Label Label Label String mv MemberReference ldc ReferenceType ReferenceType ClassReference ClassReference MethodInvocation params ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType BasicType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType Object String IRubyObject IRubyObject Ruby boolean ReferenceType ReferenceType Object ReferenceType ReferenceType nameSet size Object Object DynamicMethod DynamicMethod boolean RuntimeHelpers IRubyObject IRubyObject String IRubyObject DynamicMethod Ruby ThreadContext IRubyObject RubyClass Block Block DynamicMethod IRubyObject ThreadContext IRubyObject RubyModule String IRubyObject Block IRubyObject IRubyObject String	1
MethodDeclaration Modifier Annotation ReferenceType to_i FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context BinaryOperation BlockStatement MethodInvocation name Literal ThreadContext || MethodInvocation MethodInvocation ThrowStatement MemberReference MemberReference f_to_i "to_i" MemberReference k_inexact_p ! MemberReference MemberReference f_zero_p MethodInvocation context real image context image context MethodInvocation getRuntime BinaryOperation newRangeError + BinaryOperation Literal + Literal MethodInvocation " into "can't convert " MethodInvocation MemberReference This f_to_s convertToString context	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement static public RubyArray ReferenceType runtime ReferenceType ReferenceType formatString ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference Ruby ByteList ByteList RubyArray result MethodInvocation ByteBuffer format MethodInvocation ByteBuffer encode MethodInvocation int type Literal int next MethodInvocation != MemberReference Literal StatementExpression StatementExpression IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement SwitchStatement result runtime newArray ByteBuffer MethodInvocation MethodInvocation MethodInvocation wrap ByteBuffer MethodInvocation MethodInvocation MethodInvocation wrap 0 MemberReference safeGet next 0 Assignment Assignment BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase formatString unsafeBytes formatString begin formatString length unsafeBytes begin length format MemberReference MemberReference = MemberReference MethodInvocation = || BinaryOperation BinaryOperation LocalVariableDeclaration IfStatement StatementExpression StatementExpression int occurrences Literal == MemberReference Literal StatementExpression IfStatement converter MemberReference != MemberReference Literal StatementExpression StatementExpression ContinueStatement type Literal TryStatement BreakStatement Literal ThrowStatement Literal BlockStatement BreakStatement Literal BlockStatement BreakStatement Literal IfStatement LocalVariableDeclaration StatementExpression StatementExpression BreakStatement Literal BlockStatement BreakStatement Literal BlockStatement BreakStatement Literal BlockStatement BreakStatement Literal BlockStatement BreakStatement Literal BlockStatement BreakStatement Literal BlockStatement BreakStatement Literal BlockStatement BreakStatement Literal BlockStatement BreakStatement Literal IfStatement TryStatement BreakStatement Literal IfStatement TryStatement BreakStatement Literal IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement TryStatement BreakStatement type next next MemberReference safeGet == MemberReference Literal == MemberReference Literal BasicType VariableDeclarator BinaryOperation BlockStatement Assignment Assignment 0 next 0 Assignment BinaryOperation BlockStatement IfStatement ArraySelector converters converter null MethodInvocation Assignment '@' IfStatement CatchClause '%' MethodInvocation 'A' IfStatement LocalVariableDeclaration StatementExpression ForStatement StatementExpression 'Z' LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration WhileStatement StatementExpression IfStatement 'a' BinaryOperation BlockStatement BasicType VariableDeclarator MethodInvocation MethodInvocation 'b' IfStatement LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression 'B' IfStatement LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression 'h' IfStatement LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression 'H' IfStatement LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression 'u' LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression WhileStatement StatementExpression 'm' LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement IfStatement StatementExpression 'M' LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression 'U' IfStatement WhileStatement 'X' BinaryOperation BlockStatement StatementExpression CatchClause 'x' BinaryOperation BlockStatement StatementExpression CatchClause 'w' BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement StatementExpression CatchClause format next '_' next '!' int index MethodInvocation == MemberReference Literal ThrowStatement MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference Literal = == MemberReference Literal StatementExpression StatementExpression MethodInvocation BlockStatement BlockStatement MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference decode MemberReference MemberReference = BinaryOperation BlockStatement BlockStatement CatchClauseParameter ThrowStatement runtime Literal newArgumentError BinaryOperation BlockStatement BasicType VariableDeclarator MethodInvocation ForControl BlockStatement MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MemberReference BlockStatement || BinaryOperation BinaryOperation StatementExpression byte potential ArrayCreator encode MemberReference get result MethodInvocation append BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator Assignment BinaryOperation BlockStatement MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator VariableDeclarator VariableDeclarator VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement BinaryOperation BlockStatement MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation BinaryOperation BlockStatement BinaryOperation BlockStatement == MemberReference MemberReference StatementExpression MethodInvocation CatchClauseParameter ThrowStatement == MemberReference MemberReference StatementExpression MethodInvocation CatchClauseParameter ThrowStatement || BinaryOperation BinaryOperation StatementExpression long ul Literal long BinaryOperation RubyBignum big128 MethodInvocation int pos MethodInvocation && BinaryOperation BinaryOperation StatementExpression StatementExpression IfStatement MethodInvocation CatchClauseParameter ThrowStatement NATIVE_CODES MemberReference indexOf index - 1 MethodInvocation type MemberReference charAt next MemberReference safeGet occurrences 1 next '*' Assignment Assignment ASCII MemberReference isDigit StatementExpression DoStatement StatementExpression type runtime encode occurrences result converter type next == MemberReference MemberReference StatementExpression StatementExpression IllegalArgumentException iae MethodInvocation "% is not supported" || BinaryOperation BinaryOperation StatementExpression byte potential ArrayCreator encode MemberReference get VariableDeclaration BinaryOperation MemberReference MemberReference LocalVariableDeclaration IfStatement result MethodInvocation append boolean isStar BinaryOperation || BinaryOperation BinaryOperation StatementExpression byte potential ArrayCreator int t Literal < MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression StatementExpression result MethodInvocation append ! isStar IfStatement WhileStatement == MemberReference MemberReference > MemberReference MethodInvocation Assignment BasicType MemberReference potential RubyString MemberReference ClassCreator newString || BinaryOperation BinaryOperation StatementExpression int bits Literal byte lElem ArrayCreator VariableDeclaration BinaryOperation MemberReference IfStatement StatementExpression result MethodInvocation append || BinaryOperation BinaryOperation StatementExpression int bits Literal byte lElem ArrayCreator VariableDeclaration BinaryOperation MemberReference IfStatement StatementExpression result MethodInvocation append || BinaryOperation BinaryOperation StatementExpression int bits Literal byte lElem ArrayCreator VariableDeclaration BinaryOperation MemberReference IfStatement StatementExpression result MethodInvocation append || BinaryOperation BinaryOperation StatementExpression int bits Literal byte lElem ArrayCreator VariableDeclaration BinaryOperation MemberReference IfStatement StatementExpression result MethodInvocation append int length BinaryOperation byte lElem ArrayCreator int index Literal int s int total Literal MemberReference MethodInvocation = && BinaryOperation BinaryOperation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression IfStatement WhileStatement IfStatement IfStatement result MethodInvocation append int length BinaryOperation byte lElem ArrayCreator int a Literal b Literal c Literal d int index Literal int s Literal encode hasRemaining StatementExpression StatementExpression WhileStatement IfStatement StatementExpression WhileStatement IfStatement StatementExpression WhileStatement IfStatement StatementExpression WhileStatement IfStatement StatementExpression StatementExpression StatementExpression && BinaryOperation BinaryOperation IfStatement result MethodInvocation append byte lElem ArrayCreator int index Literal IfStatement LocalVariableDeclaration IfStatement result MethodInvocation append || BinaryOperation BinaryOperation StatementExpression && BinaryOperation BinaryOperation TryStatement occurrences IS_STAR Assignment encode BinaryOperation position IllegalArgumentException e MethodInvocation occurrences IS_STAR Assignment encode BinaryOperation position IllegalArgumentException e MethodInvocation == MemberReference MemberReference > MemberReference MethodInvocation Assignment 0 & BinaryOperation Literal RubyBignum MemberReference Literal newBignum encode position > MemberReference Literal < MemberReference MethodInvocation Assignment Assignment BinaryOperation BlockStatement IfStatement encode MemberReference position IllegalArgumentException e MethodInvocation type runtime BinaryOperation newArgumentError index format MemberReference MemberReference = MemberReference MethodInvocation = next Assignment BinaryOperation BlockStatement Assignment occurrences IS_STAR MethodInvocation MethodInvocation runtime Literal newArgumentError == MemberReference MemberReference > MemberReference MethodInvocation Assignment BasicType MemberReference potential BasicType VariableDeclarator > MemberReference Literal -- occurrences -- t BasicType VariableDeclarator BinaryOperation BlockStatement RubyString MemberReference ClassCreator newString == MemberReference MemberReference == MemberReference MemberReference > MemberReference MethodInvocation Assignment BasicType MemberReference 0 t occurrences BasicType VariableDeclarator BinaryOperation BlockStatement Assignment MemberReference RubyString MemberReference ClassCreator newString BinaryOperation BlockStatement BinaryOperation BlockStatement occurrences IS_STAR occurrences encode remaining MemberReference MethodInvocation = byte occurrences runtime ReferenceType MemberReference Literal == MemberReference MemberReference > MemberReference BinaryOperation Assignment 0 BasicType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ lCurByte BinaryOperation BlockStatement BlockStatement Assignment RubyString MemberReference ClassCreator newString == MemberReference MemberReference > MemberReference BinaryOperation Assignment 0 BasicType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ lCurByte BinaryOperation StatementExpression StatementExpression Assignment RubyString MemberReference ClassCreator newString == MemberReference MemberReference > MemberReference BinaryOperation Assignment 0 BasicType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ lCurByte BinaryOperation BlockStatement BlockStatement Assignment RubyString MemberReference ClassCreator newString == MemberReference MemberReference > MemberReference BinaryOperation Assignment 0 BasicType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ lCurByte BinaryOperation StatementExpression StatementExpression Assignment RubyString MemberReference ClassCreator newString / BinaryOperation Literal BasicType MemberReference 0 0 s encode get && MethodInvocation BinaryOperation < MemberReference Literal BasicType VariableDeclarator VariableDeclarator VariableDeclarator VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator Assignment Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation StatementExpression BinaryOperation StatementExpression IfStatement RubyString MemberReference ClassCreator newString / BinaryOperation Literal BasicType MemberReference - 1 - 1 0 0 - 1 Assignment Assignment BinaryOperation BlockStatement BinaryOperation BreakStatement Assignment BinaryOperation BlockStatement BinaryOperation BreakStatement Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement Assignment Assignment Assignment != MemberReference Literal != MemberReference Literal BinaryOperation BlockStatement IfStatement RubyString MemberReference ClassCreator newString BasicType MethodInvocation 0 MethodInvocation BreakStatement BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement RubyString MemberReference ClassCreator newString == MemberReference MemberReference > MemberReference MethodInvocation Assignment > MemberReference Literal > MethodInvocation Literal StatementExpression CatchClause MemberReference MethodInvocation = - MethodInvocation MemberReference runtime Literal newArgumentError MemberReference MethodInvocation = + MethodInvocation MemberReference runtime Literal newArgumentError occurrences IS_STAR occurrences encode remaining MemberReference MethodInvocation = << Literal Literal runtime 128 occurrences 0 pos encode limit MemberReference Literal <<= MemberReference BinaryOperation |= == BinaryOperation Literal StatementExpression StatementExpression StatementExpression BinaryOperation BlockStatement pos runtime Literal newArgumentError + BinaryOperation MemberReference occurrences IS_STAR next MemberReference safeGet MemberReference Literal = && BinaryOperation MethodInvocation StatementExpression StatementExpression MemberReference TernaryExpression = encode MethodInvocation position encode MemberReference position outside of string" occurrences IS_STAR occurrences encode remaining MemberReference MethodInvocation = byte occurrences int t BinaryOperation occurrences 0 byte c MemberReference && BinaryOperation BinaryOperation BreakStatement runtime ReferenceType MemberReference Literal MemberReference Literal occurrences IS_STAR occurrences IS_STAR occurrences encode remaining MemberReference MethodInvocation = byte occurrences byte b MethodInvocation == MemberReference Literal BreakStatement MemberReference MemberReference = ++ t runtime ReferenceType MemberReference Literal MemberReference Literal < MemberReference MemberReference StatementExpression < MemberReference MemberReference StatementExpression StatementExpression occurrences encode remaining ByteList potential false occurrences IS_STAR occurrences * MethodInvocation Literal MemberReference BinaryOperation = byte occurrences int lCurByte Literal lCurByte occurrences != BinaryOperation Literal StatementExpression StatementExpression MemberReference TernaryExpression = runtime ReferenceType MemberReference Literal occurrences IS_STAR occurrences * MethodInvocation Literal MemberReference BinaryOperation = byte occurrences int lCurByte Literal lCurByte occurrences != BinaryOperation Literal Assignment Assignment MemberReference TernaryExpression = runtime ReferenceType MemberReference Literal occurrences IS_STAR occurrences * MethodInvocation Literal MemberReference BinaryOperation = byte occurrences int lCurByte Literal lCurByte occurrences != BinaryOperation Literal StatementExpression StatementExpression MemberReference MemberReference = runtime ReferenceType MemberReference Literal occurrences IS_STAR occurrences * MethodInvocation Literal MemberReference BinaryOperation = byte occurrences int lCurByte Literal lCurByte occurrences != BinaryOperation Literal Assignment Assignment MemberReference MemberReference = runtime ReferenceType MemberReference Literal * MethodInvocation Literal 4 byte length encode hasRemaining > MemberReference Literal s 'a' int a b c d byte hunk ArrayCreator int len BinaryOperation MemberReference MethodInvocation = MemberReference MemberReference += > MemberReference MemberReference StatementExpression StatementExpression > MemberReference Literal LocalVariableDeclaration IfStatement IfStatement IfStatement IfStatement StatementExpression StatementExpression StatementExpression ForStatement StatementExpression == MemberReference Literal Assignment == MemberReference Literal Assignment MethodInvocation BlockStatement runtime ReferenceType MemberReference Literal MemberReference Literal * MethodInvocation Literal 4 byte length MemberReference Assignment = MemberReference MethodInvocation = && BinaryOperation MethodInvocation StatementExpression == MemberReference Literal MemberReference MethodInvocation = && BinaryOperation MethodInvocation StatementExpression == MemberReference Literal MemberReference MethodInvocation = && BinaryOperation MethodInvocation IfStatement StatementExpression || BinaryOperation BinaryOperation IfStatement BreakStatement MemberReference MethodInvocation = && BinaryOperation MethodInvocation IfStatement StatementExpression || BinaryOperation BinaryOperation IfStatement BreakStatement MemberReference Cast = MemberReference Cast = MemberReference Cast = a - 1 b - 1 && BinaryOperation BinaryOperation StatementExpression BinaryOperation BlockStatement runtime ReferenceType MemberReference Literal MemberReference Literal byte Math MethodInvocation Literal max ! encode hasRemaining int c MethodInvocation != MemberReference Literal StatementExpression IfStatement StatementExpression LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement StatementExpression IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression runtime ReferenceType MemberReference Literal MemberReference Literal occurrences IS_STAR occurrences encode remaining MemberReference MethodInvocation = -- occurrences 0 encode remaining 0 MethodInvocation CatchClauseParameter ThrowStatement occurrences encode remaining encode position occurrences "in X outside of string" occurrences encode remaining encode position occurrences "in x outside of string" occurrences encode remaining 0xfe 56 ul 7 ul & MethodInvocation Literal & MethodInvocation Literal 0 MethodInvocation MemberReference Assignment == BinaryOperation Literal LocalVariableDeclaration WhileStatement "in encoded + BinaryOperation Literal NATIVE_CODES format occurrences 0 != MemberReference Literal ASCII MemberReference isDigit Assignment Assignment occurrences BinaryOperation Literal Literal encode remaining occurrences occurrences encode remaining - MemberReference Literal ArraySelector potential != MemberReference Literal != MemberReference Literal ByteList potential 0 occurrences false occurrences encode remaining encode get b 0 ArraySelector potential b ByteList potential 0 t false t occurrences MemberReference t occurrences MethodInvocation MemberReference encode remaining 8 occurrences * MethodInvocation Literal 0 & MemberReference Literal 0 Assignment Assignment ArraySelector lElem BinaryOperation Cast Cast ByteList lElem false encode remaining 8 occurrences * MethodInvocation Literal 0 & MemberReference Literal 0 MemberReference Literal <<= MemberReference MethodInvocation = ArraySelector lElem BinaryOperation Cast Cast ByteList lElem false encode remaining 2 occurrences * MethodInvocation Literal 0 & MemberReference Literal 0 Assignment Assignment ArraySelector lElem ArraySelector ByteList lElem false encode remaining 2 occurrences * MethodInvocation Literal 0 & MemberReference Literal 0 MemberReference Literal <<= MemberReference MethodInvocation = ArraySelector lElem ArraySelector ByteList lElem false encode remaining 3 s ' ' BasicType Literal & BinaryOperation Literal s MemberReference safeGet total len total length Assignment Assignment len 0 BasicType VariableDeclarator BinaryOperation BlockStatement StatementExpression BinaryOperation BlockStatement StatementExpression BinaryOperation BlockStatement StatementExpression BinaryOperation BlockStatement StatementExpression Assignment Assignment Assignment ForControl StatementExpression Assignment s '\r' MemberReference MethodInvocation = s '\n' MemberReference MethodInvocation = encode hasRemaining IfStatement ByteList lElem 0 index false encode remaining 3 a MemberReference Assignment = s MemberReference safeGet == Assignment Literal encode hasRemaining Assignment a - 1 s MemberReference safeGet == Assignment Literal encode hasRemaining Assignment b - 1 s MemberReference safeGet == Assignment Literal encode hasRemaining BinaryOperation BreakStatement Assignment == MemberReference Literal == MemberReference Literal BinaryOperation BlockStatement s MemberReference safeGet == Assignment Literal encode hasRemaining BinaryOperation BreakStatement Assignment == MemberReference Literal == MemberReference Literal BinaryOperation BlockStatement ArraySelector lElem BasicType BinaryOperation ArraySelector lElem BasicType BinaryOperation ArraySelector lElem BasicType BinaryOperation == MemberReference Literal == MemberReference Literal Assignment && BinaryOperation BinaryOperation StatementExpression StatementExpression ByteList lElem 0 index false encode remaining 0 MemberReference safeGet c '=' Assignment MethodInvocation BreakStatement MethodInvocation BasicType VariableDeclarator BinaryOperation ContinueStatement BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation BreakStatement BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator Assignment ByteList lElem 0 index false occurrences encode remaining result MethodInvocation append IllegalArgumentException e MethodInvocation encode MemberReference get encode MemberReference get 0x80 result MethodInvocation append -- occurrences MemberReference Literal = & MemberReference MemberReference 0 ReferenceType VariableDeclarator BinaryOperation BlockStatement + Literal MemberReference "' allowed only after types " next 0 next MemberReference BinaryOperation = MemberReference MethodInvocation = == MemberReference Literal 0 1 occurrences 1 MemberReference c '\0' c ' ' MemberReference ++ t encode get ++ t encode remaining 8 lCurByte 7 MemberReference Literal >>>= MemberReference MethodInvocation = MemberReference != BinaryOperation Literal BasicType Literal BasicType Literal encode remaining 8 lCurByte 7 bits 1 bits encode get MemberReference != BinaryOperation Literal BasicType Literal BasicType Literal encode remaining 2 lCurByte 1 MemberReference Literal >>>= MemberReference MethodInvocation = MemberReference BinaryOperation encode remaining 2 lCurByte 1 bits 4 bits encode get MemberReference BinaryOperation byte 3 - MemberReference Literal 077 encode MemberReference BinaryOperation -= MemberReference MemberReference = int TernaryExpression && MethodInvocation BinaryOperation StatementExpression StatementExpression Assignment && MethodInvocation BinaryOperation StatementExpression StatementExpression Assignment && MethodInvocation BinaryOperation StatementExpression StatementExpression Assignment && MethodInvocation BinaryOperation StatementExpression StatementExpression Assignment MemberReference Cast = MemberReference Cast = MemberReference Cast = VariableDeclaration BinaryOperation MemberReference Assignment MemberReference MemberReference -= s MemberReference safeGet s MemberReference safeGet BinaryOperation BlockStatement IfStatement b MemberReference Assignment = encode MemberReference MemberReference = - 1 MemberReference MethodInvocation = encode MemberReference MemberReference = - 1 MemberReference MethodInvocation = encode MemberReference MemberReference = - 1 == MemberReference Literal MemberReference MethodInvocation = s '=' c - 1 == MemberReference Literal StatementExpression encode MemberReference MemberReference = - 1 == MemberReference Literal MemberReference MethodInvocation = s '=' d - 1 == MemberReference Literal StatementExpression MemberReference byte & BinaryOperation Literal MemberReference byte & BinaryOperation Literal MemberReference byte & BinaryOperation Literal c - 1 s '=' MemberReference Cast = != MemberReference Literal == MemberReference Literal Assignment Assignment encode MemberReference Cast = ! encode hasRemaining encode mark int c1 MethodInvocation == MemberReference Literal int d1 MethodInvocation == MemberReference Literal StatementExpression BreakStatement encode mark ! encode hasRemaining int c2 MethodInvocation int d2 MethodInvocation == MemberReference Literal StatementExpression BreakStatement byte value Cast MemberReference MemberReference = runtime MethodInvocation newFixnum runtime MethodInvocation newArgumentError pos ++ pos RubyFixnum MemberReference MemberReference newFixnum ul 0 ul RubyBignum MethodInvocation && BinaryOperation BinaryOperation StatementExpression LocalVariableDeclaration IfStatement IfStatement "'" next occurrences + BinaryOperation MethodInvocation next MemberReference safeGet type '@' t t bits 1 bits encode get lCurByte & MemberReference Literal 0 byte '1' byte '0' lCurByte & MemberReference Literal 0 byte '1' byte '0' bits 4 bits encode get lCurByte & MemberReference Literal lCurByte & BinaryOperation Literal s ' ' len - MemberReference MemberReference total length BinaryOperation Literal MemberReference encode hasRemaining >= MemberReference Literal Assignment Assignment MemberReference Literal = encode hasRemaining >= MemberReference Literal Assignment Assignment MemberReference Literal = encode hasRemaining >= MemberReference Literal Assignment Assignment MemberReference Literal = encode hasRemaining >= MemberReference Literal Assignment Assignment MemberReference Literal = ArraySelector hunk BasicType BinaryOperation ArraySelector hunk BasicType BinaryOperation ArraySelector hunk BasicType BinaryOperation BasicType VariableDeclarator < MemberReference MemberReference ++ i MemberReference MemberReference = len encode encode == MethodInvocation Literal StatementExpression MethodInvocation BlockStatement c MemberReference Literal = a ArraySelector b64_xtable s MemberReference safeGet b ArraySelector b64_xtable s MemberReference safeGet c ArraySelector b64_xtable s '=' s MemberReference safeGet s '=' MethodInvocation d ArraySelector b64_xtable s '=' s MemberReference safeGet s '=' MethodInvocation ++ index | BinaryOperation BinaryOperation 255 ++ index | BinaryOperation BinaryOperation 255 ++ index | BinaryOperation MemberReference 255 ArraySelector lElem BasicType BinaryOperation c - 1 s '=' MemberReference Cast = MemberReference Cast = ArraySelector lElem BasicType MemberReference MemberReference safeGet c1 '\n' Character MemberReference Literal digit d1 - 1 MethodInvocation MemberReference safeGet Character MemberReference Literal digit d2 - 1 MethodInvocation BasicType BinaryOperation ArraySelector lElem value MemberReference e getMessage runtime ul RubyBignum MemberReference MemberReference newBignum > MemberReference Literal < MemberReference MethodInvocation Assignment ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement * MemberReference Literal Character Cast Literal digit format bits 1 bits 128 bits 15 >>> MemberReference Literal 15 total length > MemberReference Literal 3 len s ' ' MemberReference BinaryOperation = MemberReference MethodInvocation = a 0 s ' ' MemberReference BinaryOperation = MemberReference MethodInvocation = b 0 s ' ' MemberReference BinaryOperation = MemberReference MethodInvocation = c 0 s ' ' MemberReference BinaryOperation = MemberReference MethodInvocation = d 0 Literal byte & BinaryOperation Literal Literal byte & BinaryOperation Literal Literal byte & BinaryOperation Literal int i Literal i ArraySelector lElem ArraySelector hunk MemberReference safeGet '\n' MethodInvocation encode hasRemaining StatementExpression d - 1 MemberReference encode MemberReference encode MemberReference encode encode BinaryOperation position MemberReference encode encode BinaryOperation position << MemberReference Literal >> MemberReference Literal << MemberReference Literal >> MemberReference Literal << MemberReference Literal d MemberReference byte & BinaryOperation Literal ArraySelector lElem BasicType BinaryOperation ArraySelector lElem BasicType BinaryOperation MemberReference byte c encode c1 16 encode reset encode c2 16 encode reset byte | BinaryOperation MemberReference MemberReference encode runtime ul occurrences 0 pos encode limit MemberReference Cast = IRubyObject v MethodInvocation instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement == BinaryOperation Literal StatementExpression StatementExpression StatementExpression BreakStatement occurrences 10 BasicType BinaryOperation 10 bits 4 len 3 a & BinaryOperation Literal s MemberReference safeGet b & BinaryOperation Literal s MemberReference safeGet c & BinaryOperation Literal s MemberReference safeGet d & BinaryOperation Literal s MemberReference safeGet 0 | BinaryOperation BinaryOperation 255 1 | BinaryOperation BinaryOperation 255 2 | BinaryOperation MemberReference 255 0 MemberReference MemberReference encode MemberReference safeGet MethodInvocation s s s - MethodInvocation Literal s - MethodInvocation Literal a 2 b 4 b 4 c 2 c 6 ++ index | BinaryOperation BinaryOperation 255 MemberReference byte & BinaryOperation Literal MemberReference byte & BinaryOperation Literal ++ index << MemberReference Literal d2 ++ index ReferenceType MethodInvocation MethodInvocation MethodInvocation op_plus v RubyFixnum Assignment instanceof MemberReference ReferenceType StatementExpression & MethodInvocation Literal 0 MethodInvocation MemberReference Assignment char & MemberReference Literal - MemberReference Literal 077 encode - MemberReference Literal 077 encode - MemberReference Literal 077 encode - MemberReference Literal 077 encode << MemberReference Literal >> MemberReference Literal << MemberReference Literal >> MemberReference Literal << MemberReference Literal d ++ index i encode encode BinaryOperation position encode position 1 encode position 1 << MemberReference Literal >> MemberReference Literal ++ index | BinaryOperation BinaryOperation 255 ++ index | BinaryOperation BinaryOperation 255 d1 4 RubyBignum MethodInvocation MemberReference op_mul runtime getCurrentContext RubyBignum MemberReference BinaryOperation newBignum MemberReference MethodInvocation = v RubyBignum Assignment encode MemberReference get 0x80 result MemberReference add -- occurrences MemberReference Literal = next 0xFF s ' ' s ' ' s ' ' s ' ' a 2 b 4 b 4 c 2 c 6 - MethodInvocation Literal a 2 b 4 << MemberReference Literal >> MemberReference Literal << MemberReference Literal >> MemberReference Literal runtime getCurrentContext big128 runtime & MethodInvocation Literal RubyBignum MemberReference MethodInvocation newBignum MemberReference Cast = ++ pos ul 0 encode position 1 a 2 b 4 b 4 c 2 encode MemberReference get runtime RubyNumeric MemberReference fix2long ReferenceType MemberReference pos v RubyBignum v	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement protected boolean ReferenceType module BinaryOperation RubyModule == This MemberReference module	0
MethodDeclaration Modifier FormalParameter TryStatement public Modifier ReferenceType cls LocalVariableDeclaration StatementExpression CatchClause final Class Modifier ReferenceType VariableDeclarator Assignment CatchClauseParameter ThrowStatement final Constructor constructor MethodInvocation This ClassCreator = NoSuchMethodException nsme ClassCreator cls ClassReference ClassReference getConstructor MemberReference ReferenceType MethodDeclaration ReferenceType MemberReference ReferenceType ReferenceType ObjectAllocator Modifier ReferenceType FormalParameter FormalParameter TryStatement RuntimeException nsme Ruby RubyClass public IRubyObject ReferenceType runtime ReferenceType klazz ReturnStatement CatchClause CatchClause CatchClause Ruby RubyClass Cast CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement ReferenceType MethodInvocation InvocationTargetException ite MethodInvocation InstantiationException ie MethodInvocation IllegalAccessException iae MethodInvocation IRubyObject constructor MemberReference MemberReference newInstance runtime BinaryOperation newTypeError runtime BinaryOperation newTypeError runtime BinaryOperation newSecurityError runtime klazz + BinaryOperation MemberReference + BinaryOperation MemberReference + BinaryOperation MemberReference + BinaryOperation Literal ite + BinaryOperation Literal ie + BinaryOperation Literal iae + Literal MemberReference " with (Ruby, RubyClass) constructor:\n" + Literal MemberReference " with (Ruby, RubyClass) constructor:\n" + Literal MemberReference " due to (Ruby, RubyClass) constructor:\n" "could not " cls "could not " cls "could not " cls	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter IfStatement IfStatement LocalVariableDeclaration IfStatement IfStatement IfStatement ReturnStatement static public Deprecated Object ReferenceType runtime ReferenceType argument ReferenceType BinaryOperation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation BlockStatement MemberReference Ruby Object Class TypeArgument == MemberReference Literal IfStatement instanceof MemberReference ReferenceType StatementExpression IfStatement Class TypeArgument type MethodInvocation == MemberReference ClassReference ReturnStatement instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement MethodInvocation MemberReference LocalVariableDeclaration IfStatement argument ? argument null MethodInvocation BlockStatement BlockStatement argument JavaObject Assignment BinaryOperation BlockStatement ? MemberReference primitiveToWrapper type ReferenceType Literal argument Number Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement argument getClass ReferenceType VariableDeclarator MethodInvocation BlockStatement isPrimitive ThrowStatement ReturnStatement MemberReference Cast = == MemberReference Literal ReturnStatement Void null final Number number Cast == MemberReference ClassReference ReturnStatement BinaryOperation BlockStatement IfStatement RubyObject rubyObject Cast ! rubyObject Literal respondsTo ReturnStatement MethodInvocation Literal argument ReferenceType MemberReference argument null Literal ReferenceType MemberReference type ReferenceType ClassCreator == MemberReference ClassReference ReturnStatement BinaryOperation BlockStatement IfStatement ReferenceType MemberReference "java_object" MethodInvocation runtime Literal newTypeError null JavaObject argument null Number argument Long ReferenceType MethodInvocation type ReferenceType ClassCreator == MemberReference ClassReference ReturnStatement BinaryOperation BlockStatement IfStatement RubyObject argument MethodInvocation MemberReference MemberReference do not null" Long number longValue Integer ReferenceType MethodInvocation type ReferenceType ClassCreator == MemberReference ClassReference ReturnStatement BinaryOperation BlockStatement IfStatement runtime getCurrentContext rubyObject Integer number intValue Byte ReferenceType MethodInvocation type ReferenceType ClassCreator == MemberReference ClassReference ReturnStatement BinaryOperation BlockStatement IfStatement Byte number byteValue Character ReferenceType Cast type ReferenceType ClassCreator == MemberReference ClassReference ReturnStatement BinaryOperation BlockStatement Character BasicType MethodInvocation Double ReferenceType MethodInvocation type ReferenceType ClassCreator == MemberReference ClassReference ReturnStatement char number intValue Double number doubleValue Float ReferenceType MethodInvocation type ReferenceType ClassCreator Float number floatValue Short ReferenceType MethodInvocation Short number	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement protected IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType method ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType block MethodInvocation ThreadContext IRubyObject String DynamicMethod IRubyObject IRubyObject IRubyObject Block RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference context self method getVisibility name callType arg0 arg1 arg2 block	1
MethodDeclaration Modifier ReferenceType getValue ReturnStatement public Object MemberReference value	0
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration ForStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression StatementExpression ForStatement IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyClass ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Assignment MethodInvocation MethodInvocation MethodInvocation ForControl BlockStatement MethodInvocation BlockStatement MemberReference name Literal required Literal rest Literal frame Literal meta Literal IRubyObject IRubyObject Block String name Literal boolean nilName Literal Ruby runtime MethodInvocation > MemberReference Literal LocalVariableDeclaration IfStatement RubyArray member MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression RubyClass newStruct RubyClass superClass Cast || BinaryOperation MemberReference StatementExpression StatementExpression StatementExpression StatementExpression IfStatement LocalVariableDeclaration IfStatement StatementExpression MemberReference MemberReference = newStruct Literal MethodInvocation fastSetInternalVariable newStruct Literal MemberReference fastSetInternalVariable newStruct MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression block isGiven StatementExpression StatementExpression newStruct 1 true true true null false recv getRuntime args length 0 ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement runtime newArray BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation ReferenceType MemberReference == MemberReference Literal nilName Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment newStruct index ClassIndex STRUCT member length member ClassReference defineAnnotatedMethods BasicType VariableDeclarator < MemberReference MemberReference ++ i Modifier ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation IRubyObject firstArgAsString MemberReference ! firstArgAsString isNil StatementExpression MemberReference BlockStatement int i TernaryExpression i args length member MethodInvocation append RubyClass recv name null MemberReference MethodInvocation = newStruct MemberReference setAllocator newStruct MethodInvocation makeMetaClass newStruct MemberReference ! IdUtil MemberReference isConstant ThrowStatement IRubyObject type MethodInvocation != MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression MemberReference MethodInvocation = ReferenceType int i TernaryExpression i args length final String MemberReference final int index TernaryExpression newStruct MemberReference ClassCreator addMethod newStruct BinaryOperation ClassCreator addMethod block MethodInvocation getBinding block MethodInvocation Literal MemberReference MemberReference Literal yield ArraySelector MethodInvocation args Assignment ArraySelector MethodInvocation args StatementExpression BinaryOperation Literal Literal runtime MemberReference newStruct RubyClass MemberReference MemberReference newClass superClass getMetaClass superClass name MethodInvocation superClass MemberReference getConstantAt type null ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation newStruct superClass MemberReference MemberReference MemberReference defineClassUnder BinaryOperation Literal Literal ArraySelector MethodInvocation args BinaryOperation MemberReference BinaryOperation ReferenceType MemberReference MemberReference MemberReference MethodDeclaration MethodDeclaration MethodDeclaration + MemberReference Literal ReferenceType MemberReference MemberReference MemberReference MethodDeclaration MethodDeclaration MethodDeclaration MemberReference setVisibility runtime getCurrentContext null newStruct newStruct false Literal checkStringType MemberReference Cast = Literal isNil Assignment && BinaryOperation MemberReference 0 1 ArraySelector MethodInvocation args runtime superClass runtime BinaryOperation MemberReference newNameError name ThreadContext context MethodInvocation frame MethodInvocation runtime MethodInvocation getWarnings superClass MemberReference MethodInvocation name superClass && BinaryOperation MemberReference 0 1 MemberReference asJavaString && BinaryOperation MemberReference i - MemberReference Literal DynamicMethod newStruct Visibility PUBLIC CallConfiguration FrameNoneScopeNone Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement Modifier Annotation ReferenceType dup ReturnStatement "=" DynamicMethod newStruct Visibility PUBLIC CallConfiguration FrameNoneScopeNone Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement Modifier Annotation ReferenceType dup ReturnStatement Visibility PUBLIC 0 name ReferenceType MemberReference 0 MemberReference Literal = == MemberReference Literal ! nilName MemberReference asJavaString + BinaryOperation Literal name runtime getCurrentContext context MemberReference MethodInvocation MethodInvocation BinaryOperation MemberReference warn context runtime MemberReference newString == MemberReference Literal ! nilName i == MemberReference Literal ! nilName i 1 public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation Cast public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name Cast public Override DynamicMethod This public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation Cast public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg Cast public Override DynamicMethod This RubyString firstArgAsString nilName true name null i + Literal MemberReference " needs to be constant" ID frame getFile frame getLine + Literal MemberReference name name name null name null ThreadContext IRubyObject RubyModule String IRubyObject Block Arity MethodInvocation MemberReference Literal Literal checkArgumentCount ReferenceType MemberReference ThreadContext IRubyObject RubyModule String ReferenceType MemberReference ThreadContext IRubyObject RubyModule String IRubyObject Block Arity MethodInvocation MemberReference Literal Literal checkArgumentCount ReferenceType MemberReference ThreadContext IRubyObject RubyModule String IRubyObject ReferenceType MemberReference " name "redefining constant name self getRuntime args 0 0 self self self getRuntime args 1 1 self self	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference StatementExpression Node BodyCompiler boolean final EnsureNode Cast != MethodInvocation Literal StatementExpression IfStatement ! expr MethodInvocation ReferenceType MemberReference null MethodInvocation BinaryOperation BlockStatement BlockStatement context consumeCurrentValue EnsureNode node context ClassCreator ClassCreator != MethodInvocation Literal StatementExpression StatementExpression ReferenceType MethodDeclaration ReferenceType MethodDeclaration getBodyNode null MethodInvocation MethodInvocation BranchCallback Modifier branch FormalParameter IfStatement BranchCallback Modifier branch FormalParameter StatementExpression MethodInvocation MemberReference Literal compile context loadNil public ReferenceType context BinaryOperation BlockStatement BlockStatement public ReferenceType context MethodInvocation getBodyNode context true BodyCompiler != MethodInvocation Literal StatementExpression StatementExpression BodyCompiler MethodInvocation MemberReference Literal compile getBodyNode null MethodInvocation MethodInvocation context false MethodInvocation MemberReference Literal compile context loadNil getBodyNode context true	1
MethodDeclaration Modifier ReferenceType decode FormalParameter FormalParameter IfStatement public IRubyObject ReferenceType runtime ReferenceType enc BinaryOperation ReturnStatement ReturnStatement Ruby ByteBuffer == MemberReference MemberReference MethodInvocation MethodInvocation Platform BYTE_ORDER Platform BIG_ENDIAN RubyFloat MemberReference MethodInvocation newFloat RubyFloat MemberReference MethodInvocation newFloat runtime MemberReference runtime MemberReference enc enc	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Assignment Assignment MethodInvocation MemberReference Ruby RubyClass MethodInvocation runtime MemberReference MemberReference MemberReference = MemberReference ClassCreator = ClassReference defineAnnotatedMethods runtime Literal MethodInvocation MemberReference MethodInvocation defineClassUnder index ClassIndex ReferenceType MethodDeclaration ReferenceType runtime Literal getClass runtime getEncoding RubyModule ReferenceType Modifier Annotation BasicType FormalParameter FormalParameter ReturnStatement public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public ReferenceType runtime ReferenceType method MethodInvocation Ruby String runtimeCache This MemberReference Literal MemberReference runtime 9 method	0
MethodDeclaration Modifier FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression private static ReferenceType configModule ReferenceType mkmfHash ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment Assignment Assignment Assignment ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation RubyModule RubyHash Ruby ruby MethodInvocation String Literal String BinaryOperation String Literal String TernaryExpression String Literal String cflags Literal String TernaryExpression String ldflags MemberReference String Literal MemberReference MemberReference += MemberReference Literal += MemberReference Literal += MemberReference Literal += String Literal String Literal MemberReference Literal Literal setConfig MemberReference Literal MemberReference setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal MemberReference setConfig MemberReference Literal Literal setConfig MemberReference Literal MemberReference setConfig MemberReference Literal MemberReference setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal MethodInvocation setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig MemberReference Literal Literal setConfig ruby MethodInvocation getObject configModule Literal MemberReference defineConstant configModule getRuntime " " + Literal MemberReference " " Literal Literal Literal " " "" Literal Literal Literal " -arch i386 -arch ppc -arch x86_64 " cflags cflags " " cflags " -arch i386 -arch ppc -arch x86_64 " ldflags " -arch i386 -arch ppc -arch x86_64 " mkmfHash "configure_args" "" mkmfHash cflags mkmfHash "" mkmfHash "" mkmfHash ldflags mkmfHash "" mkmfHash mkmfHash mkmfHash "" mkmfHash "" mkmfHash "" mkmfHash "" mkmfHash "" mkmfHash "" mkmfHash "" mkmfHash "" mkmfHash "" mkmfHash mkmfHash mkmfHash " mkmfHash " mkmfHash " mkmfHash ":" mkmfHash " mkmfHash -f" mkmfHash " mkmfHash "mkdir " Literal MethodInvocation defineConstant mkmfHash " " true "" " " true "" " " ruby getNil	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter TryStatement public BasicType intIndex BasicType ReferenceType javaObject ForStatement CatchClause CatchClause int int Object ForControl BlockStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement BinaryOperation MemberReference StatementExpression IndexOutOfBoundsException e MethodInvocation ArrayStoreException e MethodInvocation < MemberReference MemberReference ++ intIndex MethodInvocation MethodInvocation getRuntime MethodInvocation getRuntime intIndex Array MethodInvocation MemberReference MemberReference set BinaryOperation newArgumentError BinaryOperation newArgumentError getValue intIndex javaObject + BinaryOperation Literal + BinaryOperation Literal + BinaryOperation MethodInvocation ")" + BinaryOperation MethodInvocation ")" + BinaryOperation Literal getLength + BinaryOperation Literal MethodInvocation getValue + Literal MemberReference " for length " + Literal MethodInvocation "(array is " getClass "index out of bounds for java array (" intIndex "wrong element type " javaObject getClass	1
MethodDeclaration Modifier Annotation ReferenceType slice_bang FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType arg0 ReferenceType arg1 MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation name Literal IRubyObject IRubyObject modifyCheck long pos MethodInvocation long len MethodInvocation MemberReference MemberReference MemberReference MemberReference slice_internal "slice!" RubyNumeric MemberReference num2long RubyNumeric MemberReference num2long pos len arg0 arg1 arg0 arg1	1
MethodDeclaration Modifier ReferenceType getEncodings ReturnStatement public CaseInsensitiveBytesHash TypeArgument MemberReference ReferenceType encodings Entry	0
MethodDeclaration Modifier Annotation ReferenceType op_aset FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 BinaryOperation BlockStatement IfStatement MethodInvocation name Literal reads MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement MemberReference MethodInvocation MemberReference op_aset "[]=" BACKREF CompatVersion RUBY1_8 arg0 RubyFixnum MethodInvocation instanceof MemberReference ReferenceType StatementExpression ReturnStatement BinaryOperation BlockStatement IfStatement context RubyNumeric MemberReference num2int arg1 MemberReference MethodInvocation MemberReference op_aset arg0 RubyRegexp MethodInvocation MemberReference instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement BinaryOperation BlockStatement arg0 context RubyNumeric Cast fix2int arg1 MemberReference Cast Literal MethodInvocation subpatSet arg1 arg0 RubyString ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation ThrowStatement MethodInvocation MemberReference instanceof MemberReference ReferenceType LocalVariableDeclaration StatementExpression ReturnStatement ReferenceType MemberReference context ReferenceType MemberReference 0 arg1 convertToString RubyString orig Cast int beg MethodInvocation < MemberReference Literal MethodInvocation MemberReference MemberReference MethodInvocation replaceInternal arg1 arg0 RubyRange BasicType VariableDeclarator MethodInvocation MemberReference RubyFixnum arg0 RubyRegexp arg0 ReferenceType MemberReference value MemberReference indexOf beg 0 context MethodInvocation getRuntime beg realSize arg1 convertToString int begLen Cast MemberReference MemberReference MethodInvocation replaceInternal arg1 RubyString arg0 orig value Literal newIndexError ReferenceType MemberReference ArraySelector begLen ArraySelector begLen arg1 convertToString "string not matched" RubyRange arg0 Literal Literal 0 1	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference StatementExpression MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation IRubyObject value MethodInvocation result MethodInvocation runtime getNil MemberReference MemberReference checkArgs block MemberReference MemberReference yield result MemberReference append runtime largs ctx larg value	0
MethodDeclaration Modifier ReferenceType getBlock FormalParameter IfStatement SwitchStatement private CompilerCallback ReferenceType node BinaryOperation BlockStatement MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase Node == MemberReference Literal ReturnStatement node LocalVariableDeclaration ReturnStatement LocalVariableDeclaration ReturnStatement ThrowStatement node null Literal Modifier ReferenceType VariableDeclarator ClassCreator Modifier ReferenceType VariableDeclarator ClassCreator ClassCreator null final IterNode Cast ReferenceType MethodDeclaration final BlockPassNode Cast ReferenceType MethodDeclaration ReferenceType BinaryOperation ReferenceType MemberReference CompilerCallback Modifier call FormalParameter StatementExpression ReferenceType MemberReference CompilerCallback Modifier call FormalParameter StatementExpression StatementExpression NotCompilableException + Literal MemberReference IterNode node public ReferenceType context MethodInvocation BlockPassNode node public ReferenceType context MethodInvocation MethodInvocation a method with a iter node at: " node BodyCompiler MemberReference MemberReference Literal compile BodyCompiler MethodInvocation MemberReference Literal compile context context true getBodyNode context true	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement final public byte BasicType offset MethodInvocation long FFIUtil BinaryOperation + MemberReference MemberReference address offset	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject Block MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name arg0 arg1 arg2	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType MethodInvocation Ruby ThreadContext IRubyObject Block context MethodInvocation MethodInvocation getBlock MemberReference MethodInvocation MethodInvocation context MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference runtime context self runtime context self	0
MethodDeclaration Modifier BasicType getShort FormalParameter StatementExpression ReturnStatement final public short BasicType offset MethodInvocation MethodInvocation long MemberReference Literal checkBounds MemberReference MethodInvocation offset 2 buffer MemberReference index offset	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType arg0 ReferenceType arg1 BasicType jflag ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation ThrowStatement ReferenceType VariableDeclarator MethodInvocation BasicType VariableDeclarator BinaryOperation StatementExpression MemberReference IRubyObject IRubyObject int Ruby runtime MethodInvocation RubyString padStr MethodInvocation ByteList pad MemberReference Encoding enc MethodInvocation int padCharLen MethodInvocation || BinaryOperation BinaryOperation MethodInvocation RubyString result MethodInvocation result MemberReference infectBy int cr MethodInvocation != MemberReference MemberReference MethodInvocation result getRuntime arg1 convertToString padStr value MemberReference checkEncoding padStr MemberReference strLength == MemberReference Literal == MemberReference Literal runtime Literal newArgumentError MemberReference MemberReference MemberReference MethodInvocation MemberReference MethodInvocation MemberReference justifyCommon padStr MethodInvocation MethodInvocation codeRangeAnd cr CR_BROKEN result MemberReference setCodeRange padStr enc pad realSize 0 padCharLen 0 "zero width runtime pad padCharLen padStr singleByteOptimizable enc RubyFixnum MemberReference num2int jflag getCodeRange padStr getCodeRange cr arg0	1
MethodDeclaration Modifier FormalParameter IOException LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression static public ReferenceType runtime ReferenceType VariableDeclarator Assignment Assignment ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation Ruby ConsoleHolder holder ClassCreator MemberReference ClassCreator = MemberReference Literal = RubyModule MethodInvocation MemberReference ClassReference defineAnnotatedMethods IRubyObject MethodInvocation Literal MemberReference fastSetConstant MethodInvocation MethodInvocation Literal MethodInvocation fastSetConstant ReferenceType holder history ReferenceType holder null runtime Literal holder ReferenceType runtime MethodInvocation getObject MethodInvocation includeModule ClassReference defineAnnotatedMethods "VERSION" runtime Literal newString ConsoleHolder Readline MethodInvocation Literal callMethod runtime ReferenceType runtime getCurrentContext	0
MethodDeclaration Modifier ReferenceType getProperty FormalParameter ReturnStatement static public String ReferenceType property MethodInvocation String MemberReference Literal getProperty property null	0
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier StatementExpression public MethodInvocation	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyBoolean ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext context MethodInvocation getRuntime CompatVersion RUBY1_9 MethodInvocation newBoolean isUntrusted	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject This name Literal compat MemberReference CompatVersion RUBY1_8	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation newFixnum stat	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement static public Arity ReferenceType anno BasicType actualRequired BinaryOperation BlockStatement MethodInvocation JRubyMethod int || BinaryOperation MethodInvocation ReturnStatement MemberReference createArity > MethodInvocation Literal anno rest MethodInvocation actualRequired anno optional 0 BinaryOperation createArity + MemberReference Literal actualRequired 1	0
MethodDeclaration Modifier Annotation ReferenceType listFiles FormalParameter LocalVariableDeclaration IfStatement public Override File ReferenceType filter ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement FileFilter File files SuperMethodInvocation == MemberReference Literal ReturnStatement LocalVariableDeclaration ForStatement ReturnStatement MemberReference listFiles files null Literal ReferenceType VariableDeclarator ForControl BlockStatement MemberReference filter null NormalizedFile smartFiles ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression smartFiles ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment NormalizedFile files length int i Literal i files length MemberReference ClassCreator = 0 ArraySelector smartFiles ReferenceType MemberReference MemberReference NormalizedFile ArraySelector MethodInvocation files i MemberReference getPath i	1
MethodDeclaration Modifier FormalParameter AssertStatement private ReferenceType value BinaryOperation BinaryOperation IRubyObject < Literal MemberReference + BinaryOperation This 3 length + BinaryOperation Literal + BinaryOperation MemberReference ", " + BinaryOperation Literal value + Literal Literal " to " "Setting " 3	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod IRubyObject MethodInvocation Java MethodInvocation MethodInvocation getInstance getRuntime MethodInvocation javaClass	1
MethodDeclaration Modifier LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement private ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement Entry TypeArgument table MemberReference TypeArgument queue MemberReference ref != Assignment Literal LocalVariableDeclaration ForStatement ReferenceType entryTable ReferenceType referenceQueue MemberReference Cast = null BasicType VariableDeclarator ForControl BlockStatement T Object ref ReferenceType MethodInvocation int hash VariableDeclaration BinaryOperation Assignment IfStatement queue poll ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = BinaryOperation BlockStatement Entry TypeArgument e MemberReference e null e e next && BinaryOperation BinaryOperation StatementExpression BreakStatement ReferenceType ArraySelector table == MemberReference MemberReference || BinaryOperation BinaryOperation MethodInvocation T BinaryOperation hash e hash == MemberReference MemberReference == MemberReference MemberReference MemberReference MemberReference MemberReference remove & Assignment BinaryOperation ref e ref e proxyRef table hash e MemberReference MethodInvocation = - MemberReference Literal hash ref hash table length 1	1
MethodDeclaration Modifier Annotation Annotation ReferenceType op_equal FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject ReferenceType context ReferenceType other BinaryOperation ReturnStatement SuperMethodInvocation name Literal compat MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType MethodInvocation MemberReference MemberReference "==" CompatVersion RUBY1_8 other RubyFixnum RubyBoolean MethodInvocation BinaryOperation newBoolean context other context getRuntime == MemberReference Cast value ReferenceType MemberReference RubyFixnum other	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public ReferenceType method ReferenceType scriptObject ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference LocalVariableDeclaration TryStatement String Object Class typeClass MethodInvocation String typePathString MethodInvocation String mname BinaryOperation String mnamePath BinaryOperation classLoader ReferenceType VariableDeclarator IfStatement LocalVariableDeclaration ReturnStatement CatchClause CatchClause scriptObject getClass MemberReference p + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter StatementExpression ThrowStatement typeClass + BinaryOperation MemberReference "xx1" + BinaryOperation MemberReference "xx1" MemberReference tryClass == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ic Cast ic IllegalArgumentException e MemberReference Exception e MethodInvocation ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation e e printStackTrace ReferenceType MethodInvocation typeClass getName "BlockCallback$" typePathString "BlockCallback$" ClassWriter cw MethodInvocation SkinnyMethodAdapter mv MethodInvocation mv Literal aload mv MemberReference Literal MethodInvocation getfield mv Literal aload mv Literal aload mv Literal aload mv MemberReference MemberReference MethodInvocation invokestatic mv areturn mv Literal Literal visitMaxs MemberReference MethodInvocation = c MethodInvocation ClassReference getConstructor IllegalArgumentException e getMessage MemberReference MemberReference createBlockCtor MemberReference 0 mnamePath "$scriptObject" MemberReference ci 1 2 3 typePathString method MemberReference BinaryOperation ClassReference MemberReference ClassReference sig 2 3 c MemberReference MemberReference MemberReference endCall MemberReference newInstance ReferenceType mnamePath typeClass cw typeClass RubyKernel IRUBY_OBJECT + BinaryOperation Literal ReferenceType RubyKernel IRUBY_OBJECT ReferenceType cw mv mname scriptObject Object + Literal MemberReference ";" ThreadContext IRubyObject "L" typePathString	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType arg8 ReferenceType block ReferenceType VariableDeclarator StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block Ruby runtime MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference MemberReference pre argsNode MemberReference Literal argsNode MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference prepare body MemberReference MemberReference MemberReference MemberReference rj MethodInvocation rj MethodInvocation MemberReference MemberReference MemberReference post context name self block runtime runtime 9 context runtime self arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 block runtime context self block MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression static public ReferenceType runtime Assignment ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Ruby MemberReference Cast = RubyModule mDigest MethodInvocation RubyClass cDigestBase MethodInvocation cDigestBase ClassReference defineAnnotatedMethods provider ReferenceType MethodInvocation runtime Literal mDigest Literal MethodInvocation MemberReference defineClassUnder ReferenceType Provider ClassCreator "Digest" "Base" runtime getObject Base Base ReferenceType MethodDeclaration Modifier ReferenceType run TryStatement public Object ReturnStatement CatchClause MethodInvocation CatchClauseParameter ReturnStatement Class MethodInvocation Literal forName Exception e Literal newInstance null	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType test ReferenceType context ReferenceType runtime ReferenceType self ReferenceType ReferenceType VariableDeclarator MethodInvocation BlockStatement Literal IRubyObject ThreadContext Ruby IRubyObject Block IRubyObject expression MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference call ReturnStatement null MemberReference MemberReference MemberReference MemberReference isTrue context self expression test MethodInvocation runtime context self MemberReference MemberReference MemberReference MemberReference runtime context self	0
MethodDeclaration Modifier ReferenceType ReturnStatement public MemberReference scope	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression LocalVariableDeclaration StatementExpression WhileStatement StatementExpression StatementExpression public ReferenceType BasicType MethodInvocation ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MethodInvocation MethodInvocation Object int method MethodInvocation Literal MethodInvocation getstatic Label temp ClassCreator method MemberReference > MemberReference Literal StatementExpression method Cast go_to method MemberReference label ClassReference p ClassReference ci ReferenceType temp 0 MethodInvocation ReferenceType MemberReference temp ReferenceType ReferenceType Label method pop Label Visibility Visibility	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private static JavaClass ReferenceType context ReferenceType runtime ReferenceType type ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference ThreadContext Ruby IRubyObject JavaClass targetType || BinaryOperation BinaryOperation StatementExpression IfStatement BinaryOperation BlockStatement BlockStatement targetType instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType Assignment BinaryOperation StatementExpression && BinaryOperation MethodInvocation StatementExpression ThrowStatement type RubyString type RubySymbol MemberReference MethodInvocation = == MemberReference Literal Assignment instanceof MemberReference ReferenceType type Literal respondsTo Assignment MethodInvocation targetType runtime MethodInvocation MethodInvocation getJavaSupport targetType null MemberReference MethodInvocation = type RubyModule "java_class" MemberReference Cast = runtime BinaryOperation newTypeError MethodInvocation get targetType JavaClass MemberReference MethodInvocation forNameVerbose targetType ReferenceType MethodInvocation + Literal MemberReference type asJavaString runtime type asJavaString JavaClass RuntimeHelpers MemberReference MemberReference Literal invoke "unable to convert array to type: " type context type "java_class"	1
MethodDeclaration Modifier Annotation BasicType remove FormalParameter ReturnStatement public Override boolean ReferenceType o MethodInvocation Object view This MemberReference remove RubyHash o	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair RubyBoolean ReferenceType recv ReferenceType obj MethodInvocation name Literal required Literal IRubyObject IRubyObject recv MethodInvocation getRuntime "^" 1 MethodInvocation newBoolean obj isTrue	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType arg MethodInvocation IRubyObject IRubyObject MethodInvocation MemberReference recv getRuntime arg	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType filename ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement name Literal required Literal module Literal IRubyObject IRubyObject Ruby runtime MethodInvocation ZipEntry entry MethodInvocation != MemberReference Literal LocalVariableDeclaration IfStatement JRubyFile file MethodInvocation ! file exists ReturnStatement long length MethodInvocation > MemberReference Literal ReturnStatement ReturnStatement 1 true recv getRuntime MemberReference file_in_archive entry null BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference file MethodInvocation file length length 0 MethodInvocation MethodInvocation filename long size MethodInvocation > MemberReference Literal ReturnStatement ReturnStatement filename runtime getNil runtime MemberReference newFixnum runtime getNil entry getSize size 0 MethodInvocation MethodInvocation length runtime MemberReference newFixnum runtime getNil size	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public Operand ReferenceType node ReferenceType s ClassCreator IR_Scope ReferenceType MethodInvocation Fixnum node getValue	1
MethodDeclaration Modifier addToJavaPackageModule FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement private static ReferenceType proxyClass ReferenceType javaClass ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement RubyModule JavaClass Class TypeArgument clazz MethodInvocation String fullName == Assignment Literal ReturnStatement int endPackage MethodInvocation || BinaryOperation MethodInvocation ReturnStatement Ruby runtime MethodInvocation String packageString TernaryExpression RubyModule packageModule MethodInvocation != MemberReference Literal LocalVariableDeclaration IfStatement ? javaClass javaClass MemberReference MethodInvocation = null fullName Literal lastIndexOf != MethodInvocation Literal ! Character MethodInvocation isUpperCase proxyClass getRuntime BinaryOperation Literal MethodInvocation MemberReference MemberReference getJavaPackageModule packageModule null ReferenceType VariableDeclarator BinaryOperation BlockStatement fullName clazz getName '.' fullName Literal indexOf - 1 fullName BinaryOperation charAt < MemberReference Literal "" fullName Literal MemberReference substring runtime packageString String className MethodInvocation == MethodInvocation Literal StatementExpression '$' + MemberReference Literal endPackage 0 0 endPackage fullName BinaryOperation substring packageModule MemberReference getConstantAt null MethodInvocation endPackage 1 + MemberReference Literal className packageModule MethodInvocation MemberReference endPackage 1 runtime MemberReference proxyClass className	1
MethodDeclaration Modifier Annotation ReferenceType op_aset FormalParameter FormalParameter SwitchStatement public Deprecated IRubyObject ReferenceType context ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject args length Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 2 MethodInvocation 3 MethodInvocation MethodInvocation Literal MemberReference MemberReference MemberReference op_aset MemberReference MemberReference MemberReference MemberReference op_aset Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null context ArraySelector args ArraySelector args context ArraySelector args ArraySelector args ArraySelector args context getRuntime args length 2 3 Literal Literal Literal Literal Literal 0 1 0 1 2	1
MethodDeclaration Modifier Annotation ReferenceType to_r FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation StatementExpression ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation BlockStatement BlockStatement name Literal reads MemberReference writes MemberReference compat MemberReference ThreadContext Ruby runtime MethodInvocation DynamicScope scope MethodInvocation IRubyObject backref MethodInvocation instanceof MemberReference ReferenceType Cast IRubyObject s MethodInvocation RubyArray a MethodInvocation scope MemberReference setBackRef ! a MethodInvocation Literal eltInternal ReturnStatement ReturnStatement "to_r" BACKREF BACKREF CompatVersion RUBY1_9 context getRuntime context getCurrentScope scope MemberReference backref RubyMatchData ReferenceType MemberReference RuntimeHelpers MemberReference This Literal MethodInvocation MethodInvocation invoke RubyRational MemberReference MemberReference str_to_r_internal backref isNil 0 MethodInvocation MethodInvocation runtime RubyMatchData backref context RubyRegexp MemberReference MemberReference newDummyRegexp runtime ClassCreator newString context s a Literal eltInternal RubyRational MemberReference MethodInvocation runtime Numeric.ComplexPatterns ReferenceType ArrayCreator 0 context RubyFixnum MemberReference zero ByteList BasicType ArrayInitializer runtime byte Literal '_'	1
MethodDeclaration Modifier Annotation ReferenceType toString ReturnStatement public Override String SuperMethodInvocation MethodInvocation toString MemberReference Literal replace File separatorChar '/'	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override AllocatedDirectMemoryIO ReferenceType runtime BasicType size BasicType BasicType clear MethodInvocation Ruby int int boolean runtime MemberReference newNotImplementedError msg	0
MethodDeclaration Modifier BasicType IfStatement IfStatement TryStatement static public boolean BinaryOperation BlockStatement MemberReference BlockStatement SynchronizedStatement CatchClause != MemberReference Literal ReturnStatement Platform IS_WINDOWS ReturnStatement ClassReference IfStatement LocalVariableDeclaration StatementExpression ReturnStatement CatchClauseParameter ReturnStatement INSTANCE null Literal Literal ReferenceType BinaryOperation BlockStatement ReferenceType VariableDeclarator Assignment Literal Throwable e Literal true false RubyUNIXSocket != MemberReference Literal ReturnStatement String TernaryExpression MemberReference Cast = true false INSTANCE null Literal MemberReference ArrayCreator ArrayCreator INSTANCE ReferenceType MethodInvocation true Platform ReferenceType ArrayInitializer ReferenceType ArrayInitializer ClassReference MemberReference String Literal Literal Literal String Literal ReferenceType	1
MethodDeclaration Modifier BasicType exists FormalParameter ReturnStatement public int ReferenceType name MethodInvocation String MemberReference name	0
MethodDeclaration Modifier ReferenceType getOpenFile ReturnStatement public OpenFile MemberReference openFile	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType arg ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject String IRubyObject DynamicMethod method MethodInvocation MemberReference ReturnStatement method MemberReference MemberReference This MemberReference MemberReference call MemberReference searchMethod method MethodInvocation context self name arg name RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference context self method getVisibility name CallType FUNCTIONAL arg Block	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType MethodInvocation Ruby ThreadContext IRubyObject Block context MethodInvocation MethodInvocation getBlock MemberReference MethodInvocation MethodInvocation MethodInvocation context MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference runtime context self runtime context self runtime context self	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context Modifier ReferenceType block TernaryExpression name Literal frame Literal final ThreadContext final Block MethodInvocation MethodInvocation MethodInvocation true block isGiven MemberReference MemberReference MethodInvocation This Literal enumeratorize context block context getRuntime	0
MethodDeclaration Modifier Annotation BasicType ReturnStatement synchronized public Override boolean MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType toString ReturnStatement public Override String SuperMethodInvocation MethodInvocation toString toLowerCase	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType x MethodInvocation ThreadContext IRubyObject MemberReference MemberReference MethodInvocation context x RubyFixnum MethodInvocation zero context getRuntime	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement static public RubyString ReferenceType runtime ReferenceType orig Assignment ReferenceType VariableDeclarator Assignment MemberReference Ruby RubyString MemberReference MemberReference = RubyString str ClassCreator MemberReference MemberReference = str orig ReferenceType MemberReference MethodInvocation MemberReference str RubyString runtime runtime getString orig value	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public ReferenceType context ReferenceType MethodInvocation ThreadContext String runtimeCache MemberReference MemberReference Literal context 7	0
MethodDeclaration Modifier ReferenceType uid FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime MethodInvocation Ruby runtime MethodInvocation newFixnum runtime MethodInvocation getPosix	0
MethodDeclaration Modifier BasicType isLiteral FormalParameter ReturnStatement public boolean ReferenceType node BinaryOperation Node && BinaryOperation BinaryOperation != MemberReference Literal || BinaryOperation BinaryOperation node null || BinaryOperation BinaryOperation && BinaryOperation BinaryOperation || BinaryOperation BinaryOperation instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType == BinaryOperation Literal || BinaryOperation BinaryOperation instanceof MemberReference ReferenceType node SymbolNode node RegexpNode & Cast MemberReference 0 instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType node FloatNode ReferenceType MemberReference ~ ReOptions RE_OPTION_ONCE node FixnumNode node RegexpNode node	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType receiver ReferenceType block MethodInvocation name Literal frame Literal ThreadContext IRubyObject Block receiver MethodInvocation MethodInvocation getRuntime true MemberReference Literal MemberReference callMethod context "induced_from" receiver	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast attrset ReferenceType MemberReference ReferenceType Cast Node ArraySelector yyVals String ReferenceType MemberReference BinaryOperation Token ArraySelector yyVals + Literal MemberReference BinaryOperation - 2 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override Arity MemberReference Arity	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement final public org ReferenceType ReferenceType runtime ReferenceType cbInfo ReferenceType proc TernaryExpression jruby ReferenceType Ruby CallbackInfo Object BinaryOperation MethodInvocation MethodInvocation ext ReferenceType instanceof MemberReference ReferenceType MemberReference MemberReference Cast MemberReference MemberReference MemberReference ffi ReferenceType proc RubyObject runtime cbInfo ReferenceType MemberReference runtime cbInfo proc Pointer RubyObject proc	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration ForStatement ReturnStatement final static public IRubyObject ReferenceType runtime ReferenceType io BasicType offset BasicType count BasicType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ForControl BlockStatement MemberReference Ruby MemoryIO long int byte array ArrayCreator io MemberReference MemberReference Literal MemberReference get RubyArray arr MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression arr BasicType MemberReference offset array 0 array length RubyArray MemberReference MemberReference newArray BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation byte count runtime array length int i Literal i array length arr MethodInvocation add 0 Util MemberReference MemberReference newUnsigned8 runtime ArraySelector array MemberReference i	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Literal = yyVal yyVal null	1
MethodDeclaration Modifier BasicType is_local_id FormalParameter LocalVariableDeclaration ReturnStatement public boolean ReferenceType identifier ReferenceType VariableDeclarator BinaryOperation Token String name Cast < MethodInvocation Literal ReferenceType MethodInvocation MethodInvocation MethodInvocation getCurrentScope 0 String identifier getValue getLocalScope MemberReference isDefined name	1
MethodDeclaration Modifier Annotation ReferenceType dimensions FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement AssertStatement LocalVariableDeclaration ReturnStatement static public JRubyMethod IRubyObject ReferenceType context ReferenceType ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType ReturnStatement instanceof MemberReference ReferenceType RubyArray rubyArray Cast MemberReference MemberReference Cast Literal context getRuntime RubyArray MethodInvocation RubyArray ReferenceType MemberReference context rubyArray ReferenceType MemberReference 0 runtime newEmptyArray RubyArray RubyArray	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement private static IRubyObject ReferenceType runtime ReferenceType group ReferenceType VariableDeclarator MethodInvocation Ruby Group IRubyObject args ArrayCreator MethodInvocation MemberReference MemberReference newStruct ReferenceType ArrayInitializer runtime args Block IRubyObject MethodInvocation MethodInvocation MethodInvocation MethodInvocation runtime MethodInvocation newString runtime MethodInvocation newString runtime MethodInvocation newFixnum MemberReference MethodInvocation group getName group getPassword group runtime group getMembers	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter IfStatement private static final ReferenceType runtime ReferenceType type ReferenceType buffer ReferenceType value BinaryOperation BlockStatement IfStatement Ruby Type ReferenceType IRubyObject instanceof MemberReference ReferenceType SwitchStatement BinaryOperation BlockStatement BlockStatement Buffer type Type ReferenceType MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase instanceof MemberReference ReferenceType IfStatement StatementExpression Builtin type getNativeType VOID BreakStatement CHAR StatementExpression BreakStatement UCHAR StatementExpression BreakStatement SHORT StatementExpression BreakStatement USHORT StatementExpression BreakStatement INT StatementExpression BreakStatement UINT StatementExpression BreakStatement LONG_LONG StatementExpression BreakStatement ULONG_LONG StatementExpression BreakStatement LONG IfStatement BreakStatement ULONG IfStatement BreakStatement FLOAT StatementExpression BreakStatement DOUBLE StatementExpression BreakStatement POINTER StatementExpression BreakStatement BOOL StatementExpression BreakStatement type CallbackInfo BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation || BinaryOperation MethodInvocation LocalVariableDeclaration StatementExpression StatementExpression buffer Literal setLongReturn buffer Cast buffer Cast buffer Cast buffer Cast buffer Cast setIntReturn buffer Cast setIntReturn buffer MethodInvocation setLongReturn buffer MethodInvocation setLongReturn == MemberReference Literal StatementExpression StatementExpression == MemberReference Literal StatementExpression StatementExpression buffer Cast buffer MethodInvocation buffer MethodInvocation setAddressReturn buffer TernaryExpression setIntReturn instanceof MemberReference ReferenceType value Literal respondsTo ReferenceType VariableDeclarator MethodInvocation MethodInvocation 0L BasicType MethodInvocation BasicType MethodInvocation BasicType MethodInvocation BasicType MethodInvocation BasicType MethodInvocation BasicType MethodInvocation Util MemberReference int64Value Util MemberReference uint64Value LONG_SIZE 32 MethodInvocation MethodInvocation LONG_SIZE 32 MethodInvocation MethodInvocation BasicType MethodInvocation RubyNumeric MemberReference num2dbl MemberReference MethodInvocation Literal Literal value RubyProc "call" Pointer cb MethodInvocation buffer MethodInvocation setAddressReturn buffer Literal setAddressReturn byte MemberReference longValue byte MemberReference longValue short MemberReference longValue short MemberReference longValue int MemberReference longValue int MemberReference longValue value value buffer Cast setIntReturn buffer MethodInvocation setLongReturn buffer Cast setIntReturn buffer MethodInvocation setLongReturn float RubyNumeric MemberReference num2dbl value value value isTrue 1 0 Factory MethodInvocation MethodInvocation getInstance MemberReference 0L value value value value value value BasicType MethodInvocation Util MemberReference int64Value BasicType MethodInvocation Util MemberReference uint64Value value MemberReference Cast MemberReference cb int MemberReference longValue value int MemberReference longValue value runtime ReferenceType MemberReference value value value CallbackInfo type	1
MethodDeclaration Modifier seek FormalParameter FormalParameter IOException InvalidValueException PipeException BadDescriptorException StatementExpression StatementExpression public BasicType offset BasicType whence MethodInvocation MethodInvocation long int MethodInvocation getWriteStream MemberReference MemberReference lseek offset whence	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType other BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject long x MemberReference long y Cast == MemberReference Literal ThrowStatement long BinaryOperation || BinaryOperation BinaryOperation StatementExpression context MethodInvocation getRuntime value ReferenceType MemberReference y 0 MethodInvocation % MemberReference MemberReference && BinaryOperation BinaryOperation && BinaryOperation BinaryOperation Assignment MemberReference newFixnum RubyFixnum other context MethodInvocation getRuntime x y < MemberReference Literal > MemberReference Literal > MemberReference Literal < MemberReference Literal MemberReference MemberReference += 0 y 0 0 y 0 y	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression public ReferenceType ReferenceType Assignment Assignment MethodInvocation Script CallConfiguration This ClassCreator = This Literal = MethodInvocation getImplementationClass MemberReference MemberReference ReferenceType MethodInvocation MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MemberReference This MemberReference MemberReference - 1 invalidateCacheDescendants box getImplementationClass staticScope getVisibility argsNode position box callCount	0
MethodDeclaration Modifier LocalVariableDeclaration StatementExpression StatementExpression public ReferenceType VariableDeclarator Assignment MethodInvocation DynamicScope scope MethodInvocation MemberReference MethodInvocation = result MemberReference configuration scope scope	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType end ReferenceType excl ReferenceType block TernaryExpression name Literal frame Literal compat MemberReference ThreadContext IRubyObject IRubyObject Block MethodInvocation MethodInvocation MethodInvocation true CompatVersion RUBY1_9 block isGiven MemberReference MemberReference MethodInvocation MemberReference MethodInvocation This Literal ArrayCreator enumeratorize context end excl isTrue block context getRuntime ReferenceType ArrayInitializer IRubyObject MemberReference MemberReference end excl	0
MethodDeclaration Modifier BasicType getPreCount ReturnStatement public int TernaryExpression BinaryOperation Literal MethodInvocation == MemberReference Literal 0 pre size pre null	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation name Literal module Literal ThreadContext IRubyObject context MethodInvocation getRuntime true BinaryOperation newBoolean == MemberReference MemberReference OS OS DARWIN	1
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile opAsgnNode getReceiverNode context true	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration ForStatement ReturnStatement final static public IRubyObject ReferenceType runtime ReferenceType io BasicType offset BasicType count BasicType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ForControl BlockStatement MemberReference Ruby MemoryIO long int int array ArrayCreator io MemberReference MemberReference Literal MemberReference get RubyArray arr MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression arr BasicType MemberReference offset array 0 array length RubyArray MemberReference MemberReference newArray BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation int count runtime array length int i Literal i array length arr MethodInvocation add 0 Util MemberReference MemberReference newSigned32 runtime ArraySelector array MemberReference i	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject Block ReferenceType MemberReference MethodInvocation Literal Literal Literal MemberReference MemberReference yield Type context context MethodInvocation getRuntime null null true type MemberReference MemberReference arg0 arg1	0
MethodDeclaration Modifier prefixEscapeCat FormalParameter StatementExpression StatementExpression private BasicType c MethodInvocation MethodInvocation int Literal MemberReference '\\' c	0
MethodDeclaration Modifier Annotation ReferenceType to_r FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext RubyRational MemberReference This "to_r" CompatVersion RUBY1_9 context	1
MethodDeclaration Modifier ReferenceType next StatementExpression IfStatement ReturnStatement public Object MethodInvocation BinaryOperation BlockStatement MethodInvocation Literal advance == MemberReference MemberReference StatementExpression ThrowStatement view MethodInvocation MemberReference true entry head Assignment ClassCreator getRuntime entry MemberReference Literal = ReferenceType true NoSuchElementException	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType x ReferenceType y MethodInvocation ThreadContext IRubyObject IRubyObject x MemberReference Literal MemberReference callMethod context "<<" y	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression public ReferenceType join ReferenceType args MethodInvocation Object join MemberReference Literal send Channel null	0
MethodDeclaration Modifier BasicType FormalParameter AssertStatement ReturnStatement public boolean ReferenceType internedName MethodInvocation MethodInvocation String IdUtil MemberReference isInstanceVariable MemberReference internedName internedName	1
MethodDeclaration Modifier ReferenceType ReturnStatement public Map TypeArgument TypeArgument MemberReference ReferenceType ReferenceType nameClassMap String JavaClass	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyBoolean ReferenceType context ReferenceType expected MethodInvocation name ElementArrayValue required Literal ThreadContext IRubyObject MethodInvocation getRuntime Literal Literal 1 MethodInvocation newBoolean MemberReference MemberReference context expected	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType block MethodInvocation name Literal frame Literal visibility MemberReference ThreadContext IRubyObject IRubyObject Block MemberReference MemberReference MemberReference MemberReference "initialize" true Visibility PRIVATE context arg0 arg1 block	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final static public ByteList BasicType i BasicType radix ClassCreator long int ReferenceType MethodInvocation Literal ByteList ByteList MethodInvocation plain false Long MemberReference MemberReference toString i radix	0
MethodDeclaration Modifier ReferenceType getGlobalVariables ReturnStatement public MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private static EmptyByteListHolder ReferenceType enc BasicType VariableDeclarator BinaryOperation BlockStatement Assignment Encoding int index MethodInvocation >= MemberReference MemberReference LocalVariableDeclaration StatementExpression MemberReference ClassCreator = enc getIndex index EMPTY_BYTELISTS length ReferenceType VariableDeclarator MethodInvocation ArraySelector EMPTY_BYTELISTS ReferenceType MemberReference EmptyByteListHolder tmp ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference EmptyByteListHolder enc ReferenceType BinaryOperation EMPTY_BYTELISTS 0 tmp 0 EMPTY_BYTELISTS length index EmptyByteListHolder + MemberReference Literal index 4	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType module ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby RubyModule RubyClass result MethodInvocation result ClassReference defineAnnotatedMethods result ClassReference defineAnnotatedConstants module MethodInvocation Literal fastGetClass result module MemberReference MethodInvocation MemberReference defineClassUnder ReferenceType ReferenceType Literal MemberReference fastSetConstant CLASS_NAME module Literal fastGetClass ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR CallbackInfo CallbackInfo result	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference BlockStatement MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean final CallNode callNode Cast CompilerCallback receiverCallback ClassCreator ArgumentsCallback argsCallback MethodInvocation CompilerCallback closureArg MethodInvocation String name MethodInvocation CallType callType MemberReference && BinaryOperation BinaryOperation LocalVariableDeclaration IfStatement RubyInstanceConfig LocalVariableDeclaration IfStatement context MethodInvocation getInvocationCompiler ! expr MethodInvocation ReferenceType MemberReference ReferenceType MethodDeclaration MethodInvocation getArgsCallback MethodInvocation getBlock callNode getName CallType NORMAL != MemberReference Literal == MethodInvocation Literal ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference MemberReference MemberReference MemberReference MemberReference BinaryOperation invokeDynamic context consumeCurrentValue CallNode node CompilerCallback Modifier call FormalParameter StatementExpression callNode getArgsNode callNode getIterNode argsCallback null argsCallback 1 Node argument MethodInvocation == MethodInvocation Literal SwitchStatement BinaryOperation BlockStatement String literalSend MethodInvocation != MemberReference Literal StatementExpression StatementExpression name receiverCallback argsCallback callType closureArg instanceof MethodInvocation ReferenceType public ReferenceType context MethodInvocation callNode MethodInvocation MethodInvocation getArgsNode name length 1 MethodInvocation SwitchStatementCase == MethodInvocation Literal IfStatement MemberReference literalSend null Assignment Assignment callNode getIterNode IterNode BodyCompiler MethodInvocation MemberReference Literal compile childNodes Literal get name Literal charAt Literal Literal Literal Literal Literal Literal IfStatement name length 2 BinaryOperation BlockStatement callNode MemberReference MemberReference = MemberReference MemberReference = callNode getReceiverNode context true 0 0 '+' '-' '*' '/' '<' '>' BinaryOperation BlockStatement instanceof MemberReference ReferenceType SwitchStatement name literalSend callType CallType FUNCTIONAL instanceof MemberReference ReferenceType StatementExpression IfStatement ReturnStatement argument FixnumNode MethodInvocation SwitchStatementCase argument FixnumNode MethodInvocation MemberReference StatementExpression name Literal charAt Literal Literal Literal Literal SwitchStatement context MethodInvocation getInvocationCompiler ! expr MethodInvocation 0 '<' '>' '=' '[' MethodInvocation SwitchStatementCase MemberReference MemberReference Cast context consumeCurrentValue name Literal charAt Literal Literal Literal StatementExpression IfStatement ReturnStatement name receiverCallback ReferenceType MemberReference 1 '=' '<' ']' MethodInvocation MemberReference StatementExpression FixnumNode argument context MethodInvocation getInvocationCompiler ! expr MethodInvocation MemberReference MemberReference Cast context consumeCurrentValue name receiverCallback ReferenceType MemberReference FixnumNode argument	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Cast Cast ClassVarNode ReferenceType MemberReference ReferenceType Cast Token ArraySelector yyVals String ReferenceType MemberReference BinaryOperation Token ArraySelector yyVals + Literal MemberReference BinaryOperation 0 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Deprecated List TypeArgument ClassCreator ReferenceType ReferenceType MethodInvocation String ArrayList TypeArgument MethodInvocation ReferenceType keySet String	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Operand ReferenceType localAsgnNode ReferenceType s ReferenceType VariableDeclarator MethodInvocation MemberReference LocalAsgnNode IR_Scope Operand value MethodInvocation s ClassCreator addInstr value MethodInvocation MemberReference build ReferenceType ClassCreator MemberReference localAsgnNode getValueNode s ReferenceType MethodInvocation value Variable localAsgnNode getName	0
MethodDeclaration Modifier set FormalParameter FormalParameter StatementExpression public BasicType i ReferenceType s MethodInvocation int String MemberReference MemberReference set i s	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override NodeType MemberReference NodeType	0
MethodDeclaration Modifier Annotation ReferenceType get ReturnStatement public Override IRubyObject MethodInvocation RubyRegexp MethodInvocation runtime MethodInvocation MethodInvocation getCurrentContext getCurrentScope MemberReference runtime	0
MethodDeclaration Modifier ReferenceType yield FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType value ReferenceType self ReferenceType BasicType aValue MethodInvocation ThreadContext IRubyObject IRubyObject RubyModule boolean body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference yield context value self aValue type	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter IfStatement private static ReferenceType a BasicType lo BasicType hi ReferenceType c BinaryOperation BlockStatement BlockStatement Object int int Comparator <= MethodInvocation Literal IfStatement IfStatement c MemberReference MemberReference compare 0 BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement ArraySelector a ArraySelector a > MethodInvocation Literal StatementExpression > MethodInvocation Literal StatementExpression StatementExpression MemberReference BinaryOperation c MemberReference MemberReference compare 0 MethodInvocation c MemberReference MemberReference compare 0 MethodInvocation MethodInvocation lo + MemberReference Literal ArraySelector a ArraySelector a MemberReference MemberReference BinaryOperation MemberReference ArraySelector a ArraySelector a MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference BinaryOperation MemberReference lo 1 BinaryOperation BinaryOperation a lo - MemberReference Literal c BinaryOperation BinaryOperation a lo hi c a lo - MemberReference Literal c - MemberReference Literal - MemberReference Literal hi 1 - MemberReference Literal - MemberReference Literal hi 1 hi 2 hi 1 hi 2 hi 1	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType filename ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal required Literal module Literal IRubyObject IRubyObject Ruby runtime MethodInvocation JRubyFile file MethodInvocation runtime BinaryOperation newBoolean 1 true recv getRuntime MemberReference file && MethodInvocation MethodInvocation filename file exists runtime MethodInvocation MethodInvocation getPosix MethodInvocation stat file getAbsolutePath	1
MethodDeclaration Modifier pollThreadEvents StatementExpression public MethodInvocation thread This pollThreadEvents	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType block ReferenceType VariableDeclarator Assignment ReferenceType VariableDeclarator TernaryExpression name Literal frame Literal required Literal rest Literal compat MemberReference reads MemberReference ThreadContext IRubyObject Block RubyRegexp pattern MethodInvocation MemberReference This = IRubyObject result MethodInvocation BinaryOperation MethodInvocation MemberReference "match" true 2 true CompatVersion RUBY1_9 BACKREF MemberReference ArraySelector args pattern MemberReference Literal MemberReference callMethod && MethodInvocation MethodInvocation block MemberReference MemberReference yield result ArraySelector args Literal context "match" args block isGiven ! result isNil context result Literal 0 0	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement private static ReferenceType metaClass ReferenceType method MethodInvocation BlockStatement BlockStatement RubyClass Method Modifier MethodInvocation isStatic ReturnStatement ReturnStatement method getModifiers ClassCreator ClassCreator ReferenceType MethodInvocation MemberReference ReferenceType MemberReference MemberReference metaClass getMetaClass method metaClass method	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Class MemberReference parameters	0
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType	0
MethodDeclaration Modifier Annotation ReferenceType to_s ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name ElementArrayValue Literal "to_s"	1
MethodDeclaration Modifier BasicType isIdentifierChar FormalParameter ReturnStatement protected boolean BasicType c BinaryOperation int || BinaryOperation MethodInvocation || MethodInvocation BinaryOperation MemberReference Character MemberReference isLetterOrDigit == MemberReference Literal c c c '_'	0
MethodDeclaration Modifier Annotation ReferenceType test FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement SwitchStatement SwitchStatement SwitchStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args BinaryOperation ThrowStatement BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference SwitchStatementCase SwitchStatementCase MemberReference SwitchStatementCase SwitchStatementCase MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase name Literal required Literal optional Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject == MemberReference Literal MethodInvocation int cmd instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement BlockStatement cmd Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal BreakStatement ThrowStatement cmd Literal Literal Literal Literal IfStatement BreakStatement IfStatement BreakStatement cmd Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ThrowStatement "test" 2 1 true PRIVATE args length 0 context MethodInvocation getRuntime ArraySelector args RubyFixnum Assignment && BinaryOperation BinaryOperation StatementExpression StatementExpression 'A' 'b' 'c' 'C' 'd' 'e' 'f' 'g' 'G' 'k' 'M' 'l' 'o' 'O' 'p' 'r' 'R' 's' 'S' 'u' 'w' 'W' 'x' 'X' 'z' '=' '<' '>' '-' MethodInvocation '-' '=' '<' '>' BinaryOperation ThrowStatement BinaryOperation ThrowStatement 'A' MethodInvocation 'b' MethodInvocation 'c' MethodInvocation 'C' MethodInvocation 'd' MethodInvocation 'e' MethodInvocation 'f' MethodInvocation 'g' MethodInvocation 'G' MethodInvocation 'k' MethodInvocation 'M' MethodInvocation 'l' MethodInvocation 'o' MethodInvocation 'O' MethodInvocation 'p' MethodInvocation 'r' MethodInvocation 'R' MethodInvocation 's' MethodInvocation 'S' MethodInvocation 'u' MethodInvocation 'w' MethodInvocation 'W' MethodInvocation 'x' MethodInvocation 'X' MethodInvocation 'z' MethodInvocation '=' MethodInvocation '<' MethodInvocation '>' MethodInvocation '-' MethodInvocation ClassCreator Literal newArgumentError Literal MemberReference Cast = instanceof MemberReference ReferenceType > Cast Literal Assignment Assignment context MethodInvocation getRuntime != MemberReference Literal MethodInvocation != MemberReference Literal MethodInvocation context MethodInvocation MethodInvocation getRuntime RubyFileTest MemberReference MemberReference RubyFileTest MemberReference MemberReference chardev_p context MethodInvocation MethodInvocation getRuntime RubyFileTest MemberReference MemberReference directory_p RubyFileTest MemberReference MemberReference RubyFileTest MemberReference MemberReference file_p RubyFileTest MemberReference MemberReference setgid_p RubyFileTest MemberReference MemberReference RubyFileTest MemberReference MemberReference context MethodInvocation MethodInvocation getRuntime RubyFileTest MemberReference MemberReference symlink_p RubyFileTest MemberReference MemberReference owned_p RubyFileTest MemberReference MemberReference RubyFileTest MemberReference MemberReference RubyFileTest MemberReference MemberReference readable_p RubyFileTest MemberReference MemberReference readable_p RubyFileTest MemberReference MemberReference RubyFileTest MemberReference MemberReference RubyFileTest MemberReference MemberReference setuid_p RubyFileTest MemberReference MemberReference writable_p RubyFileTest MemberReference MemberReference writable_p RubyFileTest MemberReference MemberReference executable_p RubyFileTest MemberReference MemberReference RubyFileTest MemberReference MemberReference zero_p context MethodInvocation MethodInvocation getRuntime context MethodInvocation MethodInvocation getRuntime context MethodInvocation MethodInvocation getRuntime RubyFileTest MemberReference MemberReference MemberReference ReferenceType Literal "wrong number of arguments" 0 cmd BasicType Cast ArraySelector args RubyString ReferenceType MemberReference 0 MemberReference Cast = MemberReference Cast = BinaryOperation newArgumentError args length 3 context MethodInvocation getRuntime args length 2 context MethodInvocation getRuntime MemberReference Literal recv ArraySelector args recv ArraySelector args MemberReference Literal recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args MemberReference Literal recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args recv ArraySelector args MemberReference Literal MemberReference MemberReference Literal MemberReference MemberReference Literal MemberReference recv ArraySelector args ArraySelector args InternalError code int ReferenceType MemberReference Literal RubyString ArraySelector args cmd ReferenceType MemberReference cmd BasicType MemberReference + Literal Cast MemberReference Literal newArgumentError MemberReference Literal newArgumentError ArraySelector MethodInvocation MethodInvocation args false Literal Literal ArraySelector MethodInvocation MethodInvocation args false Literal Literal Literal Literal Literal Literal ArraySelector MethodInvocation MethodInvocation args false Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal ArraySelector MethodInvocation MethodInvocation args false ArraySelector args ArraySelector MethodInvocation MethodInvocation args false ArraySelector args ArraySelector MethodInvocation MethodInvocation args false ArraySelector args Literal Literal RubyFixnum ArraySelector args 0 Literal RubyString ArraySelector args int ArraySelector MethodInvocation MethodInvocation args "unknown command ?" BasicType MemberReference args length 3 args length 2 Literal convertToString toString 1 1 Literal convertToString toString 1 1 1 1 1 1 Literal convertToString toString 1 1 1 1 1 1 1 1 1 1 1 1 1 1 Literal convertToString toString Literal Literal convertToString toString Literal Literal convertToString toString Literal 1 2 Literal 0 Literal Literal convertToInteger getLongValue char cmd 1 1 1 1 2 1 2 1 2 0 0 0	1
MethodDeclaration Modifier Annotation ReferenceType open FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference name Literal required Literal optional Literal frame Literal meta Literal ThreadContext IRubyObject IRubyObject Block Ruby runtime MethodInvocation RubyClass Cast RubyIO io Cast block isGiven TryStatement io 1 2 true true context getRuntime ReferenceType MemberReference ReferenceType MethodInvocation ReturnStatement TryStatement RubyClass recv RubyIO MemberReference MemberReference MemberReference newInstance MethodInvocation StatementExpression CatchClause context args block block MemberReference MemberReference yield MethodInvocation CatchClauseParameter LocalVariableDeclaration IfStatement context io io MethodInvocation getMetaClass RaiseException re ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MemberReference MemberReference Literal MemberReference MemberReference RubyException rubyEx MethodInvocation rubyEx MethodInvocation MemberReference MethodInvocation kind_of_p ThrowStatement context io "close" IRubyObject Block re getException isTrue context runtime MemberReference re	1
MethodDeclaration Modifier warn FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType id ReferenceType position ReferenceType message ReferenceType data MethodInvocation ID ISourcePosition String Object MemberReference MethodInvocation MethodInvocation MemberReference MemberReference warn id position getFile position getStartLine message data	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter ReturnStatement public boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubySymbol	0
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression protected ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Ruby IRubyObject empty MethodInvocation runtime Literal MethodInvocation runtime Literal MethodInvocation runtime Literal MethodInvocation runtime Literal MethodInvocation runtime Literal MemberReference runtime Literal MemberReference runtime Literal MemberReference runtime Literal MemberReference defineGlobalConstant JavaUtil MemberReference MemberReference MethodInvocation convertJavaToRuby runtime getNil runtime getNil runtime getNil runtime getNil empty empty empty empty runtime getClass	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement ReturnStatement private ReferenceType frame BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment BinaryOperation BlockStatement MemberReference int index This stack MemberReference MemberReference MemberReference = == BinaryOperation MemberReference StatementExpression frame ++ MemberReference ArraySelector stack frame + MemberReference Literal stack length MethodInvocation MemberReference index 1 index	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier Annotation ReferenceType to_f FormalParameter ReturnStatement static public JRubyMethod ElementValuePair RubyFloat ReferenceType recv MethodInvocation name Literal IRubyObject RubyFloat MethodInvocation Literal newFloat "to_f" recv getRuntime	1
MethodDeclaration Modifier Annotation ReferenceType marshal_dump FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation StatementExpression MemberReference name Literal ThreadContext RubyArray dump MethodInvocation hasVariables MethodInvocation dump context MethodInvocation getRuntime dump MethodInvocation syncVariables MemberReference MemberReference newArray getVariableList num den	1
MethodDeclaration Modifier Annotation ReferenceType op_aref FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType key ReferenceType VariableDeclarator TernaryExpression name Literal required Literal ThreadContext IRubyObject IRubyObject value BinaryOperation MethodInvocation MemberReference "[]" 1 == Assignment Literal MemberReference Literal MemberReference callMethod value MemberReference MethodInvocation = null context key value MemberReference key	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression IfStatement StatementExpression public ReferenceType method ReferenceType closureMethod MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement MemberReference String method loadThis method < MemberReference MemberReference StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ++ AbstractScript MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation method.method MemberReference ldc method.method MethodInvocation BinaryOperation MethodInvocation invokevirtual method.method MemberReference pushInt method.method MemberReference ldc method.method MethodInvocation Literal MethodInvocation invokevirtual closureMethod scriptCompiler getClassname + Literal MemberReference ClassReference ClassReference ClassReference sig closureMethod scriptCompiler getClassname ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType BasicType ReferenceType Ruby String Ruby int String	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Set TypeArgument ReferenceType MethodInvocation ReferenceType BasicBlock MemberReference CFG_Edge	0
MethodDeclaration Modifier ReferenceType set_dictionary FormalParameter UnsupportedEncodingException StatementExpression StatementExpression ReturnStatement public IRubyObject ReferenceType str MethodInvocation MethodInvocation MemberReference IRubyObject MethodInvocation run str str MethodInvocation convertToString getBytes	1
MethodDeclaration Modifier FormalParameter StatementExpression final public BasicType size Assignment int MemberReference ArrayCreator = ReferenceType MemberReference CallSite size	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation required Literal rest Literal meta Literal ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation int count Literal RubyInteger mode MemberReference VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement runtime MemberReference newFixnum 2 true true context getRuntime 0 ArraySelector MethodInvocation args BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator MethodInvocation BlockStatement BasicType VariableDeclarator MemberReference BlockStatement count Literal convertToInteger int i Literal i args length RubyString filename MethodInvocation ! RubyFileTest MethodInvocation MemberReference MemberReference ThrowStatement boolean result BinaryOperation result StatementExpression 0 1 MemberReference MemberReference get_path isTrue filename filename MethodInvocation == Literal MethodInvocation MemberReference context ArraySelector args runtime BinaryOperation newErrnoENOENTError 0 runtime MethodInvocation getPosix ++ count MemberReference + Literal MemberReference MethodInvocation Cast i "No such file or directory - " filename filename getUnicodeValue BasicType MethodInvocation int mode getLongValue	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int yyerrok yyVal	1
MethodDeclaration Modifier setName FormalParameter StatementExpression public ReferenceType name Assignment String This MemberReference = MemberReference name name	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv MethodInvocation MethodInvocation module Literal visibility MemberReference IRubyObject recv MethodInvocation MethodInvocation getRuntime recv MethodInvocation getRuntime true Visibility PRIVATE getWarnings MemberReference Literal Literal warn getNil ID will not work on	0
MethodDeclaration Modifier BasicType isDebug ReturnStatement public boolean MemberReference debug	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement Assignment Cast MemberReference Object Object int && BinaryOperation BinaryOperation ThrowStatement MemberReference Cast = ReferenceType MemberReference yyVal != Cast Literal instanceof Cast ReferenceType ClassCreator yyVal ReferenceType MemberReference Node yyVal ReferenceType MemberReference null ReferenceType MemberReference BlockPassNode ReferenceType MemberReference MethodInvocation MethodInvocation Literal BlockAcceptingNode ArraySelector yyVals Node ArraySelector yyVals BlockAcceptingNode ArraySelector yyVals SyntaxException PID BLOCK_ARG_AND_BLOCK_GIVEN Cast getPosition lexer getCurrentLine "Both block arg and block given." BinaryOperation BinaryOperation BinaryOperation ReferenceType MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference Node ArraySelector yyVals - 1 yyTop - 1 yyTop - 1 yyTop BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement final public byte BasicType offset BasicType MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation MemberReference long int MemberReference Literal checkBounds int len MethodInvocation byte bytes ArrayCreator System MemberReference MethodInvocation MemberReference Literal MemberReference arraycopy bytes offset 1 MemberReference Cast MemberReference indexOf BasicType TernaryExpression buffer MemberReference index bytes 0 bytes length offset BasicType Literal byte BinaryOperation MemberReference BinaryOperation offset byte 0 != MemberReference Literal len - MemberReference Cast len - 1 length BasicType MemberReference int offset	1
MethodDeclaration Modifier ReferenceType makeShared19 FormalParameter FormalParameter FormalParameter ReturnStatement final public RubyString ReferenceType runtime BasicType index BasicType len MethodInvocation Ruby int int MemberReference MemberReference MemberReference MemberReference makeShared19 runtime value index len	0
MethodDeclaration Modifier remove ThrowStatement public ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier Annotation ReferenceType set FormalParameter ReturnStatement public Override IRubyObject ReferenceType value MethodInvocation IRubyObject other MemberReference set value	0
MethodDeclaration Modifier ReferenceType gsub_bang FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject IRubyObject Block MethodInvocation MemberReference MethodInvocation getLastlineString MemberReference MemberReference MemberReference gsub_bang context context getRuntime context args block	1
MethodDeclaration Modifier Annotation Annotation ReferenceType initialize_copy FormalParameter IfStatement IfStatement LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject ReferenceType original BinaryOperation ReturnStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator Assignment Assignment This name Literal required Literal IRubyObject == This MemberReference This == MethodInvocation MethodInvocation ThrowStatement RubyMatchData origMatchData Cast MemberReference MemberReference = MemberReference MemberReference = "initialize_copy" 1 original getMetaClass original getMetaClass MethodInvocation ReferenceType MemberReference str origMatchData str regs origMatchData regs MethodInvocation getRuntime RubyMatchData original Literal newTypeError "wrong argument class"	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement IfStatement ReturnStatement private IRubyObject ReferenceType context BasicType i BasicType MethodInvocation ReferenceType VariableDeclarator BinaryOperation ThrowStatement BasicType VariableDeclarator VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation ReturnStatement BinaryOperation BlockStatement MethodInvocation ThreadContext int boolean check Ruby runtime MethodInvocation || BinaryOperation BinaryOperation MethodInvocation int b e == MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression < MemberReference Literal MethodInvocation && MemberReference MethodInvocation StatementExpression StatementExpression StatementExpression runtime MethodInvocation MethodInvocation newArray context getRuntime < MemberReference Literal <= TernaryExpression MemberReference runtime BinaryOperation newIndexError regs null Assignment Assignment Assignment Assignment b 0 runtime MethodInvocation MethodInvocation newArray ! str singleByteOptimizable MethodInvocation Assignment Assignment RubyFixnum MemberReference MemberReference newFixnum RubyFixnum MemberReference MemberReference newFixnum i 0 BinaryOperation Literal MemberReference i + BinaryOperation Literal MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = runtime getNil runtime getNil updateCharOffset MemberReference MemberReference = MemberReference MemberReference = runtime b runtime e == MemberReference Literal 1 regs numRegs + Literal MemberReference " out of matches" b begin e end b regs ArraySelector beg e regs ArraySelector end b charOffsets ArraySelector beg e charOffsets ArraySelector end regs null "index " i MemberReference MemberReference MemberReference MemberReference i i i i	1
MethodDeclaration Modifier ReferenceType defineClassUnder FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement public RubyClass ReferenceType name ReferenceType superClass ReferenceType ReferenceType parent ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation String RubyClass ObjectAllocator RubyModule CallSite IRubyObject classObj MethodInvocation != MemberReference Literal IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement boolean parentIsObject BinaryOperation == MemberReference Literal LocalVariableDeclaration StatementExpression StatementExpression RubyClass This MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference newClass parent MemberReference getConstantAt classObj null BinaryOperation ThrowStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference == MemberReference MemberReference superClass null ReferenceType VariableDeclarator MethodInvocation Assignment superClass name parent ! parentIsObject name instanceof MemberReference ReferenceType MethodInvocation RubyClass klazz Cast != MethodInvocation MemberReference ThrowStatement != MethodInvocation MemberReference StatementExpression klazz parent objectClass String className TernaryExpression warnings MemberReference BinaryOperation MemberReference warn MemberReference MemberReference = classObj RubyClass BinaryOperation newTypeError ReferenceType MemberReference klazz MethodInvocation getSuperClass superClass MethodInvocation klazz getAllocator MethodInvocation MemberReference MemberReference BinaryOperation ID + BinaryOperation Literal className superClass objectClass + MemberReference Literal RubyClass classObj getRealClass BinaryOperation MemberReference newNameError klazz MemberReference setAllocator parentIsObject name + BinaryOperation MemberReference + Literal MemberReference "', Object name " is not a class" + MemberReference Literal name + MethodInvocation Literal name "no class for `" className name " is already parent getName "::"	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public Operand ReferenceType BasicType VariableDeclarator EnhancedForControl BlockStatement This Map TypeArgument TypeArgument int i Literal VariableDeclaration MemberReference StatementExpression StatementExpression ReferenceType ReferenceType 0 ReferenceType VariableDeclarator MethodInvocation MemberReference Operand Operand Operand p MemberReference MethodInvocation set ++ i i p MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType op_equal FormalParameter IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType other BinaryOperation ReturnStatement BinaryOperation BlockStatement MethodInvocation name Literal required Literal IRubyObject instanceof MemberReference ReferenceType MethodInvocation || BinaryOperation This ReturnStatement MethodInvocation getRuntime "==" 1 other RubyProc MethodInvocation getRuntime == This MemberReference MemberReference MethodInvocation MethodInvocation getFalse getFalse other block Cast equals MethodInvocation getRuntime ReferenceType MemberReference getTrue RubyProc other	1
MethodDeclaration ReferenceType ReturnStatement Object SuperMethodInvocation get	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType Modifier ReferenceType block TernaryExpression name Literal frame Literal ThreadContext IRubyObject IRubyObject final Block MethodInvocation MethodInvocation MethodInvocation true block isGiven MemberReference MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal MemberReference enumeratorize context self block context getRuntime self	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ThrowStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType self ReferenceType arg MethodInvocation name Literal module Literal IRubyObject IRubyObject self MethodInvocation getRuntime true Literal newNotImplementedError not implemented yet"	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair RubyArray ReferenceType args MethodInvocation name Literal optional Literal compat MemberReference IRubyObject MemberReference MemberReference Literal Literal instance_methods 1 CompatVersion RUBY1_9 args PUBLIC false true	1
MethodDeclaration Modifier encode FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression public ReferenceType runtime ReferenceType o ReferenceType result BasicType VariableDeclarator MethodInvocation Ruby IRubyObject ByteList int s TernaryExpression MemberReference MemberReference BinaryOperation Literal Cast result s == MemberReference MethodInvocation 0 BasicType MethodInvocation o runtime getNil int RubyNumeric MemberReference num2long o	0
MethodDeclaration Modifier ReferenceType toString IfStatement public String BinaryOperation ReturnStatement IfStatement instanceof MemberReference ReferenceType BinaryOperation BinaryOperation ReturnStatement IfStatement _scope IR_Class + Literal Cast instanceof MemberReference ReferenceType BinaryOperation BinaryOperation ReturnStatement IfStatement "Class " ReferenceType MemberReference _scope IR_Module + Literal Cast instanceof MemberReference ReferenceType BinaryOperation BinaryOperation ReturnStatement ReturnStatement IR_Class _scope " ReferenceType MemberReference _scope IR_Method + Literal Cast instanceof MemberReference ReferenceType BinaryOperation Cast IR_Module _scope " ReferenceType MemberReference _scope + Literal Cast ReferenceType MemberReference IR_Method _scope " ReferenceType MemberReference IR_Closure _scope _scope	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement public boolean ReferenceType name Literal String true	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType block ReferenceType VariableDeclarator StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block Ruby runtime MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference MemberReference pre argsNode MemberReference Literal argsNode MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference prepare body MemberReference MemberReference MemberReference MemberReference rj MethodInvocation rj MethodInvocation MemberReference MemberReference MemberReference post context name self block runtime runtime 6 context runtime self arg0 arg1 arg2 arg3 arg4 arg5 block runtime context self block MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier invoke FormalParameter StatementExpression public ReferenceType buffer MethodInvocation ReferenceType MemberReference MemberReference invoke Buffer buffer proc	0
MethodDeclaration Modifier Annotation FormalParameter FormalParameter FormalParameter AssertStatement SwitchStatement public Override ReferenceType values BasicType index BasicType size BinaryOperation BinaryOperation MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase IRubyObject int int <= MemberReference Literal + Literal MemberReference size Literal StatementExpression Literal StatementExpression Literal StatementExpression size 2 only scopes with not " size 3 Assignment 2 Assignment 1 Assignment MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = variableValueZero ArraySelector values variableValueOne ArraySelector values variableValueTwo ArraySelector values BinaryOperation BinaryOperation BinaryOperation - MemberReference Literal - MemberReference Literal - MemberReference Literal values length 3 values length 2 values length 1	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType Modifier ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator BinaryOperation BlockStatement ClassCreator name ElementArrayValue ThreadContext IRubyObject final String MethodInvocation final long address MethodInvocation == MemberReference Literal ReturnStatement ReferenceType MethodInvocation This MemberReference ClassCreator Literal toString library MemberReference address 0L MethodInvocation context getRuntime ReferenceType MethodInvocation This MemberReference context MethodInvocation getRuntime context getRuntime address getNil	0
MethodDeclaration Modifier FormalParameter StatementExpression public BasicType arg0 MethodInvocation int MethodInvocation getMethodVisitor MemberReference MemberReference arg0	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType node ReferenceType context ReferenceType inspector MethodInvocation Node ASTInspector MemberReference MemberReference MemberReference Literal Literal node context inspector true true	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier escape StatementExpression public Assignment This Literal = MemberReference ArraySelector true escaped Literal 0	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator ForControl BlockStatement Node BodyCompiler boolean BlockNode blockNode Cast VariableDeclaration MethodInvocation LocalVariableDeclaration StatementExpression ReferenceType MemberReference ReferenceType VariableDeclarator iter hasNext ReferenceType VariableDeclarator MethodInvocation BlockNode node Iterator TypeArgument iter MethodInvocation Node n MethodInvocation MemberReference MemberReference TernaryExpression compile ReferenceType blockNode MethodInvocation childNodes iter next n context MethodInvocation Literal MemberReference Node iterator iter hasNext false expr	1
MethodDeclaration Modifier FormalParameter StatementExpression SwitchStatement public BasicType type MethodInvocation MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase char type Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement ThrowStatement '~' MethodInvocation '&' MethodInvocation '`' MethodInvocation '\'' MethodInvocation '+' MethodInvocation ClassCreator Literal MethodInvocation invokeUtilityMethod Literal MethodInvocation invokeUtilityMethod Literal MethodInvocation invokeUtilityMethod Literal MethodInvocation invokeUtilityMethod Literal MethodInvocation invokeUtilityMethod ReferenceType Literal ClassReference MethodInvocation sig ClassReference MethodInvocation sig ClassReference MethodInvocation sig ClassReference MethodInvocation sig ClassReference MethodInvocation sig NotCompilableException backref with invalid type" ReferenceType ClassReference params ReferenceType ClassReference params ReferenceType ClassReference params ReferenceType ClassReference params ReferenceType ClassReference params IRubyObject ReferenceType IRubyObject ReferenceType IRubyObject ReferenceType IRubyObject ReferenceType IRubyObject ReferenceType ThreadContext ThreadContext ThreadContext ThreadContext ThreadContext	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context ReferenceType name MethodInvocation ThreadContext String runtimeCache MemberReference MemberReference Literal context name 3	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyModule ReferenceType runtime ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BlockStatement MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby ThreadContext context MethodInvocation RubyModule javaModule MethodInvocation javaModule ClassReference defineAnnotatedMethods JavaObject MemberReference MemberReference JavaArray MemberReference MemberReference JavaClass MemberReference MemberReference JavaMethod MemberReference MemberReference JavaConstructor MemberReference MemberReference JavaField MemberReference MemberReference MemberReference MemberReference MemberReference ArrayJavaProxy MemberReference JavaProxyClass MemberReference MemberReference RubyModule MethodInvocation ClassReference defineAnnotatedMethods runtime MethodInvocation getJavaSupport MemberReference runtime MethodInvocation getArray runtime MethodInvocation runtime MethodInvocation getString runtime MethodInvocation runtime MethodInvocation getObject StatementExpression MemberReference MethodInvocation runtime MethodInvocation getJavaSupport runtime MethodInvocation getJavaSupport javaModule runtime getCurrentContext runtime Literal ReferenceType runtime javaModule runtime javaModule runtime javaModule runtime javaModule runtime javaModule runtime javaModule context context context context runtime context runtime Literal ReferenceType ClassCreator runtime ClassReference defineAnnotatedMethods ClassReference defineAnnotatedMethods ClassReference defineAnnotatedMethods ClassReference defineAnnotatedMethods Literal Cast runtime runtime MethodInvocation getJavaSupport MethodInvocation Literal Java ReferenceType MethodDeclaration MethodDeclaration ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType MethodInvocation JavaClass MemberReference ClassReference get true Callback Modifier ReferenceType execute FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement Modifier ReferenceType ReturnStatement RubyClass runtime getObject runtime ReferenceType public IRubyObject ReferenceType recv ReferenceType args ReferenceType block MethodInvocation MethodInvocation public Arity MemberReference Object IRubyObject IRubyObject Block Arity MethodInvocation MemberReference Literal Literal checkArgumentCount Java MemberReference MemberReference Arity recv getRuntime args 1 1 recv ArraySelector args Literal 0	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression private static ReferenceType rubyMod ReferenceType rubySing Modifier ReferenceType cls Modifier ReferenceType VariableDeclarator MethodInvocation RubyModule RubyModule final Class final Ruby ruby MethodInvocation rubySing Literal ClassCreator addMethod rubyMod getRuntime "java_class" ReferenceType MemberReference MemberReference MethodDeclaration JavaMethod ReferenceType rubySing Visibility PUBLIC Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement JavaMethodZero public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name MethodInvocation ThreadContext IRubyObject RubyModule String MemberReference MemberReference javaToRuby ruby cls	1
MethodDeclaration Modifier run ForStatement public ForControl BlockStatement TryStatement LocalVariableDeclaration IfStatement CatchClause CatchClause ReferenceType VariableDeclarator BinaryOperation BlockStatement CatchClauseParameter BreakStatement CatchClauseParameter ContinueStatement r MethodInvocation instanceof MemberReference ReferenceType StatementExpression InterruptedException ex Throwable t referenceQueue remove r Runnable Cast ReferenceType MemberReference Runnable r	1
MethodDeclaration Modifier fastASet FormalParameter FormalParameter StatementExpression final public ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject MemberReference MemberReference key value	0
MethodDeclaration Modifier ReferenceType next ReturnStatement public Object MethodInvocation MemberReference value	0
MethodDeclaration Modifier ReferenceType callMethod FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context ReferenceType name ReferenceType arg MethodInvocation ThreadContext String IRubyObject RuntimeHelpers MemberReference This MemberReference MemberReference invoke context name arg	0
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier BasicType read IOException ReturnStatement public int MethodInvocation reader read	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement BlockStatement MemberReference Object Object int instanceof Cast ReferenceType StatementExpression StatementExpression yyVal ReferenceType MemberReference SelfNode Assignment Assignment Node ArraySelector yyVals MemberReference MethodInvocation = MemberReference MethodInvocation = BinaryOperation yyVal support ClassCreator Cast Literal new_fcall yyVal support Cast ClassCreator Cast + Literal MemberReference ReferenceType Literal MethodInvocation ReferenceType MemberReference null ReferenceType MemberReference ReferenceType Literal MethodInvocation ReferenceType MemberReference - 3 yyTop Token "[]" Cast getPosition Node ArraySelector yyVals Node ArraySelector yyVals Token "[]" Cast getPosition Node ArraySelector yyVals ReferenceType MemberReference BinaryOperation BinaryOperation ReferenceType MemberReference BinaryOperation Node ArraySelector yyVals + Literal MemberReference + Literal MemberReference Node ArraySelector yyVals + Literal MemberReference BinaryOperation - 1 yyTop - 3 yyTop BinaryOperation - 1 yyTop + Literal MemberReference + Literal MemberReference - 3 yyTop - 3 yyTop	1
MethodDeclaration Modifier Annotation Annotation ReferenceType dup LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject ReferenceType VariableDeclarator Assignment Assignment Assignment MemberReference name Literal RubyProc newProc ClassCreator MemberReference MethodInvocation = MemberReference MemberReference = MemberReference MemberReference = newProc ReferenceType MethodInvocation MethodInvocation MemberReference newProc block getBlock newProc file file newProc line line RubyProc getRuntime MethodInvocation getRuntime type	0
MethodDeclaration Modifier nextValue FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression public ReferenceType context ReferenceType BasicType index ReferenceType VariableDeclarator MethodInvocation BodyCompiler Object int Node node Cast MemberReference MemberReference Literal compile ReferenceType Cast node context true Node ReferenceType MemberReference Object	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation MemberReference MethodInvocation CompatVersion RUBY1_9 context getRuntime runtime MethodInvocation MethodInvocation MemberReference MemberReference toString runtime context	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override Class TypeArgument ClassReference ? BasicType boolean	0
MethodDeclaration Modifier Annotation ReferenceType LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference name Literal IRubyObject obj MethodInvocation == MemberReference Literal ThrowStatement obj ref get obj null MethodInvocation Literal - probably	1
MethodDeclaration pre FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReferenceType context ReferenceType self ReferenceType ReferenceType name ReferenceType block ReferenceType scope ReferenceType MethodInvocation ThreadContext IRubyObject RubyModule String Block context MemberReference name	0
MethodDeclaration Modifier Annotation ReferenceType concat FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair RubyArray ReferenceType obj ReferenceType VariableDeclarator BinaryOperation StatementExpression This name Literal required Literal compat MemberReference IRubyObject RubyArray ary MethodInvocation > MemberReference Literal MethodInvocation 1 CompatVersion RUBY1_8 obj convertToArray ary realLength 0 MemberReference Literal MemberReference realLength 0 ary	1
MethodDeclaration * Output methods */ Modifier append FormalParameter FormalParameter TryStatement protected ReferenceType toAppend ReferenceType style StatementExpression CatchClause String AttributeSet MethodInvocation CatchClauseParameter area MethodInvocation getDocument BadLocationException e MethodInvocation MemberReference MemberReference insertString area MethodInvocation getDocument toAppend style getLength	1
MethodDeclaration Modifier Annotation setUp Exception StatementExpression StatementExpression StatementExpression protected Override SuperMethodInvocation Assignment MethodInvocation setUp MemberReference MethodInvocation = runtime MethodInvocation runtime Ruby newInstance ClassCreator init ReferenceType ArrayList	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression SwitchStatement public ReferenceType name ReferenceType argsCallback MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase String ArgumentsCallback methodCompiler MethodInvocation MethodInvocation getScriptCompiler methodCompiler methodCompiler loadSelf method dup method MethodInvocation Literal MethodInvocation method MemberReference ldc argsCallback MemberReference call argsCallback Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement MemberReference MemberReference ClassReference p ClassReference sig name methodCompiler 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation methodCompiler name ReferenceType ReferenceType method MethodInvocation Literal MethodInvocation invokevirtual method MethodInvocation Literal MethodInvocation invokevirtual method MethodInvocation Literal MethodInvocation invokevirtual IRubyObject RubyClass ClassReference p "call" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig ClassReference p "call" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig ClassReference p "call" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType DynamicMethod IRubyObject ThreadContext IRubyObject RubyModule String IRubyObject DynamicMethod IRubyObject ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject DynamicMethod IRubyObject ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject	1
MethodDeclaration Modifier IfStatement final MemberReference BlockStatement ! StatementExpression StatementExpression Assignment MethodInvocation MemberReference Literal = MemberReference freeMemory true storage	1
MethodDeclaration Modifier ReferenceType getArray ReturnStatement public RubyClass MemberReference arrayClass	0
MethodDeclaration Modifier BasicType isConstant ReturnStatement public boolean MethodInvocation isConstant	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement Ruby ThreadContext IRubyObject Block IRubyObject result MethodInvocation == MemberReference Literal ReturnStatement BinaryOperation BlockStatement BlockStatement MethodInvocation getValueNode constNode null MethodInvocation == Cast MemberReference LocalVariableDeclaration AssertStatement LocalVariableDeclaration ReturnStatement ReturnStatement MemberReference MemberReference MemberReference MemberReference context MemberReference MemberReference ReferenceType MemberReference NodeType COLON2NODE ReferenceType VariableDeclarator BinaryOperation Literal ReferenceType VariableDeclarator MethodInvocation MethodInvocation runtime context self name result Node constNode Node leftNode Cast != MemberReference Literal is not null" IRubyObject obj MethodInvocation context MethodInvocation MemberReference MemberReference context MethodInvocation MemberReference ReferenceType MemberReference leftNode null leftNode MemberReference MemberReference MemberReference MemberReference constNode getName obj result constNode getName result Colon2Node constNode runtime context self	0
MethodDeclaration Modifier Annotation ReferenceType first ReturnStatement public JRubyMethod ElementValuePair IRubyObject MemberReference name ElementArrayValue begin Literal Literal "first"	0
MethodDeclaration Modifier Annotation ReferenceType getValue FormalParameter FormalParameter IfStatement AssertStatement SwitchStatement public Override IRubyObject BasicType offset BasicType depth BinaryOperation BlockStatement BinaryOperation MemberReference MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase int int > MemberReference Literal ReturnStatement < MemberReference MemberReference SIZE_ERROR offset Literal ReturnStatement Literal ReturnStatement ThrowStatement depth 0 MethodInvocation offset SIZE 0 MemberReference 1 MemberReference ClassCreator parent MemberReference BinaryOperation getValue variableValueZero variableValueOne ReferenceType MemberReference offset - MemberReference Literal RuntimeException SIZE_ERROR depth 1	1
MethodDeclaration Modifier ReferenceType setValue FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Object ReferenceType value ReferenceType VariableDeclarator Assignment MemberReference Object Object result This This MemberReference = result MemberReference MemberReference value value value	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject RubyFixnum MethodInvocation MethodInvocation newFixnum CompatVersion RUBY1_8 context getRuntime value MethodInvocation other MemberReference convertToString value	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference Object Object int ISourcePosition position MethodInvocation == Cast Literal StatementExpression StatementExpression StatementExpression yyVal Cast getPosition ReferenceType MemberReference null Assignment Assignment Cast ReferenceType MemberReference Node ArraySelector yyVals MemberReference ClassCreator = MemberReference Cast = ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation yyVal ReferenceType MemberReference yyVal ReferenceType MemberReference ISourcePositionHolder yyVal BinaryOperation + Literal MemberReference ZArrayNode position Node ArraySelector yyVals + Literal MemberReference - 1 yyTop BinaryOperation - 2 yyTop + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier load FormalParameter FormalParameter StatementExpression public ReferenceType runtime BasicType wrap MethodInvocation Ruby boolean runtime MemberReference script	0
MethodDeclaration Modifier StatementExpression final public Assignment MemberReference MemberReference &= flags ~	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean Cast MethodInvocation MemberReference Literal compile context aryToAry ! expr MethodInvocation ReferenceType MemberReference getValue context true context consumeCurrentValue node	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType args MethodInvocation name Literal rest Literal module Literal visibility MemberReference IRubyObject IRubyObject RubyBigDecimal MemberReference MemberReference MemberReference "BigDecimal" true true Visibility PRIVATE recv args Block	0
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration IfStatement ReturnStatement public DynamicMethod ReferenceType VariableDeclarator BinaryOperation BlockStatement This DynamicMethod method MemberReference instanceof MemberReference ReferenceType ReturnStatement box method MemberReference method	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier FormalParameter FormalParameter IfStatement ForStatement public ReferenceType methods ReferenceType visibility BinaryOperation BlockStatement ForControl BlockStatement IRubyObject Visibility && BinaryOperation MethodInvocation ThrowStatement VariableDeclaration BinaryOperation MemberReference StatementExpression >= MethodInvocation Literal ! isTaint MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation MethodInvocation getRuntime 4 MethodInvocation getRuntime int i Literal i methods length MemberReference MemberReference getSafeLevel Literal newSecurityError 0 ArraySelector MethodInvocation methods visibility "Insecure: can't change method MemberReference asJavaString i	1
MethodDeclaration Modifier ReferenceType ReturnStatement public DynamicScope MemberReference ArraySelector BinaryOperation - MemberReference Literal 1	0
MethodDeclaration * versions for Not to * @deprecated Use the versions with zero or one */ Modifier Annotation ReferenceType FormalParameter FormalParameter SwitchStatement public Deprecated IRubyObject ReferenceType args ReferenceType unusedBlock MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase IRubyObject Block args length Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 0 This 1 MethodInvocation MethodInvocation Literal MemberReference Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null ArraySelector args getRuntime args length 0 1 Literal 0	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public ReferenceType runtime ReferenceType filename BasicType ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby String boolean stat ClassCreator stat MemberReference MemberReference setup stat ReferenceType MemberReference MethodInvocation filename runtime runtime	0
MethodDeclaration Modifier Annotation ReferenceType orig_name IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject MemberReference BlockStatement TernaryExpression name Literal closed LocalVariableDeclaration ThrowStatement BinaryOperation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ClassCreator == MemberReference Literal MethodInvocation getRuntime MethodInvocation getRuntime RubyClass errorClass MethodInvocation ReferenceType MethodInvocation orig_name null getNil MemberReference newString MethodInvocation MethodInvocation MethodInvocation getRuntime RaiseException RubyException MethodInvocation MemberReference Literal newException orig_name Literal fastGetModule Literal fastGetClass Literal fastGetClass getRuntime errorClass stream" "Zlib"	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement MethodInvocation name Literal required Literal compat MemberReference ThreadContext IRubyObject && BinaryOperation BinaryOperation ThrowStatement MemberReference MemberReference 1 CompatVersion RUBY1_9 instanceof MemberReference ReferenceType == Cast Literal MethodInvocation context other other RubyInteger ReferenceType MemberReference 0 context MethodInvocation getRuntime RubyInteger other	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement Assignment MemberReference Object Object int instanceof Cast ReferenceType StatementExpression MemberReference Cast = yyVal ReferenceType MemberReference SelfNode MethodInvocation yyVal ReferenceType MemberReference Node ArraySelector yyVals support Cast checkExpression Node ArraySelector yyVals BinaryOperation ReferenceType MemberReference BinaryOperation + Literal MemberReference Node ArraySelector yyVals + Literal MemberReference 0 yyTop BinaryOperation 0 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType block MethodInvocation ThreadContext Block body MemberReference MemberReference MemberReference MemberReference call context type block	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType internedName ReferenceType object BinaryOperation ReturnStatement MethodInvocation Ruby String RubyModule == MethodInvocation Literal Literal MemberReference MemberReference MemberReference getConstantInner MemberReference MemberReference null null runtime internedName object runtime internedName	1
MethodDeclaration Modifier BasicType getNewFileno ReturnStatement static public int MethodInvocation incrementAndGet	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType arg1 ReferenceType arg2 ReferenceType unusedBlock ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator StatementExpression StatementExpression IfStatement IfStatement CatchClause CatchClause CatchClause This name Literal required Literal frame Literal IRubyObject IRubyObject Block Ruby runtime MethodInvocation ! arg1 Literal respondsTo ThrowStatement ! arg2 Literal respondsTo ThrowStatement String to MethodInvocation String from MethodInvocation Assignment Assignment MethodInvocation StatementExpression MethodInvocation StatementExpression CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement "initialize" 2 true getRuntime "to_str" MethodInvocation "to_str" MethodInvocation arg1 MethodInvocation convertToString arg2 MethodInvocation convertToString MemberReference MethodInvocation = MemberReference MethodInvocation = ! MemberReference MethodInvocation ! MemberReference MethodInvocation e MethodInvocation UnsupportedCharsetException e MethodInvocation Exception e MethodInvocation runtime BinaryOperation newTypeError runtime BinaryOperation newTypeError toString toString Charset MethodInvocation MethodInvocation forName Charset MethodInvocation MethodInvocation forName from MemberReference to MemberReference runtime Literal runtime Literal runtime MethodInvocation newSystemCallError + BinaryOperation Literal + BinaryOperation Literal newDecoder MemberReference MemberReference "invalid encoding" "invalid encoding" e toString + Literal MethodInvocation " into String" + Literal MethodInvocation " into String" from to "can't convert " arg1 getMetaClass "can't convert " arg2 getMetaClass	1
MethodDeclaration Modifier BasicType ReturnStatement public int MemberReference min	0
MethodDeclaration Modifier Annotation ReferenceType getFastSingletonMethod FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType arg1 ReferenceType arg2 ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String Class Class String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference + BinaryOperation MemberReference MemberReference tryClass Class descriptor ArrayCreator == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression FastInvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setArgumentTypes ic MemberReference setJavaName ic Literal setSingleton ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname ReferenceType ArrayInitializer c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity descriptor method true e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class MemberReference MemberReference Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation MemberReference MemberReference Literal MemberReference loadArguments mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference mv Literal Literal visitMaxs MemberReference MethodInvocation = FastInvocationCallback c newInstance IllegalArgumentException e getMessage arg1 arg2 ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtorFast MemberReference startCallSFast mv METHOD_ARGS_INDEX 2 descriptor INVOKESTATIC typePath method MemberReference MemberReference sig ARETURN 4 4 c MemberReference MemberReference MemberReference endCall Class MemberReference MemberReference MemberReference method signature mnamePath cw ret signature cw mv mname RubyKernel IRUBY_OBJECT arg1 arg2	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression public ReferenceType condition ReferenceType body BasicType ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BranchCallback BranchCallback boolean String mname MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference condition body mname	0
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler context	0
MethodDeclaration Modifier BasicType ReturnStatement final public boolean Literal true	0
MethodDeclaration * Check the syntax of a Ruby variable, that * than zero and starts with either an @ or a * */ Modifier BasicType isRubyVariable FormalParameter LocalVariableDeclaration ReturnStatement final static public boolean ReferenceType name BasicType VariableDeclarator BinaryOperation String char c && BinaryOperation BinaryOperation > MethodInvocation Literal || BinaryOperation BinaryOperation name length 0 == Assignment Literal && BinaryOperation BinaryOperation MemberReference MethodInvocation = '@' <= MemberReference Literal >= MemberReference Literal c name Literal charAt c 'Z' c 'A' 0	1
MethodDeclaration Modifier Annotation ReferenceType set FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType newValue MethodInvocation BlockStatement BlockStatement MemberReference IRubyObject newValue isNil StatementExpression StatementExpression newValue MethodInvocation MethodInvocation runtime MemberReference runtime MethodInvocation newValue runtime MethodInvocation newBoolean newValue isTrue	0
MethodDeclaration Modifier Annotation ReferenceType op_mul FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement IfStatement MethodInvocation name Literal ThreadContext IRubyObject || BinaryOperation BinaryOperation ReturnStatement BinaryOperation BlockStatement IfStatement MemberReference Literal MemberReference coerceBin "*" instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement context "*" other other RubyFixnum other RubyBignum MemberReference MemberReference MemberReference MemberReference MethodInvocation Literal f_muldiv other RubyFloat MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement context num den other RubyFixnum MethodInvocation one true MemberReference MethodInvocation MemberReference f_mul other RubyRational ReferenceType VariableDeclarator MethodInvocation context getRuntime context MemberReference This f_to_f other RubyRational otherRational Cast MemberReference MemberReference MemberReference MemberReference MemberReference Literal f_muldiv context ReferenceType MemberReference context num den otherRational num otherRational den true RubyRational other	1
MethodDeclaration Modifier ReferenceType f_real_p FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType x MethodInvocation ThreadContext IRubyObject x MemberReference Literal callMethod context "real?"	1
MethodDeclaration Modifier Annotation ReferenceType rindex FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType obj ReferenceType MethodInvocation StatementExpression MethodInvocation name Literal frame Literal ThreadContext IRubyObject Block isGiven MethodInvocation MemberReference MemberReference rindex true context MethodInvocation MethodInvocation getRuntime context obj getWarnings MemberReference Literal warn ID BLOCK_UNUSED "given block not used"	1
MethodDeclaration Modifier call FormalParameter IfStatement public ReferenceType context BinaryOperation BlockStatement BlockStatement BodyCompiler == MethodInvocation MemberReference LocalVariableDeclaration IfStatement StatementExpression node NodeType ARRAYNODE ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation ArrayNode arrayNode Cast arrayNode ForStatement StatementExpression MemberReference MemberReference Literal compile ReferenceType MemberReference EnhancedForControl BlockStatement MethodInvocation node context true ArrayNode node VariableDeclaration MethodInvocation StatementExpression MemberReference MemberReference Literal compile ReferenceType VariableDeclarator arrayNode childNodes MethodInvocation arrayNode context true Node n MemberReference MemberReference Literal compile n context true	0
MethodDeclaration Modifier BasicType IOException BadDescriptorException IfStatement StatementExpression LocalVariableDeclaration IfStatement ReturnStatement synchronized public int MemberReference BlockStatement MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation eof ReturnStatement checkReadable int c MethodInvocation == MemberReference Literal StatementExpression ReturnStatement & MemberReference Literal Literal read c - 1 Assignment MemberReference c 0xff - 1 MemberReference Literal = c eof true	0
MethodDeclaration Modifier ReferenceType ReturnStatement public IR_Method MethodInvocation MethodInvocation	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile getValueNode context true	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Cast MemberReference BreakNode ReferenceType MemberReference NilImplicitNode NIL Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType IfStatement public DynamicScope BinaryOperation BlockStatement BlockStatement == MethodInvocation MemberReference ReturnStatement ReturnStatement staticScope getLocalScope staticScope This MethodInvocation parent	0
MethodDeclaration Modifier ReferenceType new_colon3 FormalParameter FormalParameter ReturnStatement public Colon3Node ReferenceType position ReferenceType name ClassCreator ISourcePosition String ReferenceType MemberReference MemberReference Colon3Node position name	1
MethodDeclaration Modifier Annotation Annotation ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType ReturnStatement MemberReference Literal MemberReference coerceBin CompatVersion RUBY1_8 other RubyFixnum MethodInvocation context other RubyFloat MethodInvocation BinaryOperation newFloat context getRuntime / Cast Cast BasicType MemberReference BasicType Cast double value double ReferenceType MemberReference RubyFixnum other	0
MethodDeclaration Modifier FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression private static ReferenceType selfType ReferenceType cw ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation Type ClassCreator loadThis MemberReference MemberReference MemberReference getField returnValue ReferenceType MemberReference ClassCreator Literal MemberReference MemberReference selfType ACC_PUBLIC ReferenceType Literal MemberReference MemberReference null cw org ReferenceType ReferenceType ReferenceType ReferenceType Method	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject receiver MethodInvocation IRubyObject value MethodInvocation == MethodInvocation Literal IfStatement StatementExpression BinaryOperation BlockStatement BlockStatement MemberReference MemberReference MemberReference MemberReference call ASTInterpreter MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call "||" MethodInvocation BlockStatement Assignment == MethodInvocation Literal IfStatement StatementExpression StatementExpression context self receiver value context value runtime context self context self receiver value isTrue ReturnStatement MemberReference MethodInvocation = "&&" MethodInvocation BlockStatement Assignment Assignment MethodInvocation value MemberReference MemberReference MemberReference MemberReference ! value isTrue ReturnStatement MemberReference MethodInvocation = MemberReference MethodInvocation = ASTInterpreter MemberReference MemberReference runtime context self MethodInvocation value MemberReference MemberReference MemberReference MemberReference value MemberReference MemberReference MemberReference MethodInvocation call context value ASTInterpreter MemberReference MemberReference runtime context self context self value MemberReference MemberReference MemberReference MemberReference context value runtime context self	0
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement private ReferenceType method MethodInvocation BlockStatement BlockStatement Method Modifier MethodInvocation isStatic ReturnStatement ReturnStatement method getModifiers ClassCreator ClassCreator ReferenceType MethodInvocation MemberReference ReferenceType MemberReference MemberReference metaClass getMetaClass method metaClass method	0
MethodDeclaration Modifier Annotation ReferenceType id IfStatement public Override RubyFixnum BinaryOperation BlockStatement BlockStatement == BinaryOperation Literal ReturnStatement ReturnStatement & MemberReference MemberReference 0 MethodInvocation MethodInvocation flags RubyFixnum MethodInvocation Literal newFixnum RubyFixnum MethodInvocation zero getRuntime 2 getRuntime	0
MethodDeclaration Modifier setVisibility FormalParameter StatementExpression public ReferenceType visibility Assignment Visibility This MemberReference = MemberReference visibility visibility	0
MethodDeclaration Modifier Annotation Annotation ReferenceType to_a ReturnStatement public JRubyMethod ElementValuePair Override RubyArray MethodInvocation name Literal MethodInvocation Literal "to_a" getRuntime 0	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement ReturnStatement static public IRubyObject ReferenceType self ReferenceType runtime ReferenceType internedName ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation StatementExpression MethodInvocation IRubyObject Ruby String IRubyObject result MethodInvocation != MemberReference Literal MemberReference runtime isVerbose MethodInvocation runtime getNil self MethodInvocation getInstanceVariables result null result MemberReference MemberReference MemberReference fastGetInstanceVariable runtime internedName internedName	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value ReferenceType block BasicType checkArity ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block boolean IRubyObject receiver MethodInvocation == MemberReference Literal StatementExpression LocalVariableDeclaration StatementExpression StatementExpression runtime getNil MemberReference MemberReference MemberReference MemberReference argsNode null MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation runtime context self block RuntimeHelpers MemberReference MemberReference MemberReference MemberReference invoke RubyArray args Cast args MemberReference append RuntimeHelpers MemberReference MemberReference MemberReference MethodInvocation invoke context receiver name value ReferenceType MethodInvocation value context receiver name args toJavaArray RubyArray argsNode MemberReference MemberReference MemberReference MemberReference runtime context self block	1
MethodDeclaration Modifier ReferenceType eltInternal FormalParameter ReturnStatement final public IRubyObject BasicType offset MemberReference int ArraySelector values BinaryOperation + MemberReference MemberReference begin offset	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType MethodInvocation Object method Cast ReferenceType MemberReference Label	0
MethodDeclaration Modifier Annotation ReferenceType reset StatementExpression StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation Assignment MethodInvocation This name Literal check MemberReference Literal = pos 0	0
MethodDeclaration Modifier ReferenceType getFile ReturnStatement public String MemberReference file	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SwitchStatement ReturnStatement protected Library ReferenceType state ReferenceType baseName ReferenceType suffixType ReferenceType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase MemberReference String SuffixType Library library Literal suffixType Both StatementExpression IfStatement IfStatement IfStatement IfStatement IfStatement BreakStatement Source Extension StatementExpression IfStatement IfStatement BreakStatement Neither StatementExpression IfStatement BreakStatement library null Assignment BinaryOperation StatementExpression BinaryOperation StatementExpression BinaryOperation StatementExpression BinaryOperation StatementExpression BinaryOperation StatementExpression Assignment BinaryOperation StatementExpression BinaryOperation StatementExpression Assignment BinaryOperation StatementExpression MemberReference MethodInvocation = == MemberReference Literal Assignment == MemberReference Literal Assignment == MemberReference Literal Assignment == MemberReference Literal Assignment == MemberReference Literal Assignment MemberReference MethodInvocation = == MemberReference Literal Assignment == MemberReference Literal Assignment MemberReference MethodInvocation = == MemberReference Literal Assignment library MemberReference MemberReference MemberReference library null MemberReference MethodInvocation = library null MemberReference MethodInvocation = library null MemberReference MethodInvocation = library null MemberReference MethodInvocation = library null MemberReference MethodInvocation = library MemberReference MemberReference MemberReference library null MemberReference MethodInvocation = library null MemberReference MethodInvocation = library MemberReference MethodInvocation createLibrary library null MemberReference MethodInvocation = state baseName SuffixType Source library MemberReference MethodInvocation createLibrary library MemberReference MethodInvocation createLibrary library MemberReference MemberReference MemberReference library MemberReference MethodInvocation createLibrary library MemberReference MethodInvocation createLibrary state baseName suffixType library MemberReference MethodInvocation createLibrary library MemberReference MethodInvocation createLibrary state MemberReference MemberReference MemberReference tryResourceFromJarURL library MemberReference MethodInvocation createLibrary state MemberReference MemberReference MemberReference tryResourceFromJarURL state MemberReference MemberReference MemberReference tryResourceFromLoadPathOrURL state baseName SuffixType Extension state MemberReference MemberReference MemberReference tryResourceFromJarURL state MemberReference MemberReference MemberReference tryResourceFromLoadPathOrURL state MemberReference MemberReference MemberReference tryResourceFromJarURL state MemberReference MemberReference MemberReference tryResourceFromLoadPathOrURL state baseName SuffixType Neither state MemberReference MemberReference MemberReference tryResourceFromLoadPathOrURL state baseName SuffixType Source state baseName SuffixType Source state baseName SuffixType Extension state baseName SuffixType Extension state baseName suffixType state baseName suffixType state baseName SuffixType Neither	1
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType runtime ReferenceType object BinaryOperation ReturnStatement MethodInvocation Ruby Object == MemberReference Literal MethodInvocation RubyBignum MemberReference Cast newBignum object null runtime getNil runtime ReferenceType MemberReference BigInteger object	1
MethodDeclaration Modifier BasicType raisePreprocessError FormalParameter FormalParameter FormalParameter FormalParameter SwitchStatement ReturnStatement private static int ReferenceType runtime ReferenceType str ReferenceType err ReferenceType mode MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase Literal Ruby ByteList String ErrorMode mode StatementExpression ThrowStatement 0 MethodInvocation MethodInvocation MemberReference MemberReference MemberReference Literal MemberReference raiseRegexpError19 runtime BinaryOperation newArgumentError runtime str str encoding 0 err + Literal MemberReference "regexp preprocess failed: " err	1
MethodDeclaration Modifier BasicType length ReturnStatement final public int MemberReference length	1
MethodDeclaration Modifier visit FormalParameter FormalParameter StatementExpression public ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject block MemberReference MemberReference yield context value	0
MethodDeclaration Modifier LocalVariableDeclaration StatementExpression StatementExpression IfStatement private ReferenceType VariableDeclarator Assignment MethodInvocation BinaryOperation BlockStatement cv MethodInvocation MemberReference ClassCreator = clinitMethod start != MemberReference Literal TryStatement getClassVisitor clinitMethod ReferenceType MethodInvocation null StatementExpression CatchClause CatchClause CatchClause SkinnyMethodAdapter cv BinaryOperation Literal MethodInvocation Literal Literal visitMethod MethodInvocation CatchClauseParameter StatementExpression CatchClauseParameter StatementExpression CatchClauseParameter StatementExpression | MemberReference MemberReference MemberReference sig null null Literal MemberReference MethodInvocation invoke IllegalAccessException ex MethodInvocation IllegalArgumentException ex MethodInvocation InvocationTargetException ex MethodInvocation ACC_PUBLIC ACC_STATIC Void TYPE null clinitMethod getClassname ex printStackTrace ex printStackTrace ex printStackTrace	1
MethodDeclaration Modifier call FormalParameter IfStatement public ReferenceType context BinaryOperation BlockStatement BlockStatement BodyCompiler != MethodInvocation Literal StatementExpression StatementExpression preExeNode getBodyNode null MethodInvocation MethodInvocation MethodInvocation MemberReference Literal compile context loadNil preExeNode getBodyNode context true	0
MethodDeclaration Modifier ReferenceType setValue FormalParameter ReturnStatement public Object ReferenceType o MethodInvocation Object entry MethodInvocation setValue JavaUtil MemberReference MemberReference convertJavaToUsableRubyObject runtime o	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod IRubyObject ReferenceType context MethodInvocation ThreadContext context MethodInvocation MethodInvocation getRuntime MemberReference Literal path false	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement final static public Encoding ReferenceType obj1 ReferenceType obj2 BinaryOperation BlockStatement Literal IRubyObject IRubyObject && BinaryOperation BinaryOperation LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement IfStatement IfStatement IfStatement IfStatement IfStatement null instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation BlockStatement BinaryOperation BlockStatement obj1 EncodingCapable obj2 EncodingCapable Encoding enc1 Cast Encoding enc2 Cast == MemberReference MemberReference MemberReference && BinaryOperation BinaryOperation MemberReference && BinaryOperation BinaryOperation MemberReference || MethodInvocation MethodInvocation Literal && BinaryOperation BinaryOperation MemberReference && BinaryOperation BinaryOperation MemberReference instanceof MemberReference ReferenceType LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement IfStatement ReferenceType MemberReference ReferenceType MemberReference enc1 enc2 enc1 instanceof MemberReference ReferenceType == Cast Literal enc1 instanceof MemberReference ReferenceType == Cast Literal enc2 ! enc1 isAsciiCompatible ! enc2 isAsciiCompatible null instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType enc1 instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType enc2 obj1 RubyString ReferenceType VariableDeclarator Assignment Assignment ReferenceType VariableDeclarator Assignment Assignment obj1 RubyString BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation ReturnStatement EncodingCapable obj1 EncodingCapable obj2 obj2 RubyString ReferenceType MemberReference 0 obj1 RubyString ReferenceType MemberReference 0 obj2 RubyString enc2 USASCIIEncoding obj1 RubyString enc1 USASCIIEncoding IRubyObject MemberReference MemberReference MemberReference = MemberReference MemberReference = Encoding MemberReference MemberReference MemberReference = MemberReference MemberReference = int cr1 Cast instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement == MemberReference MemberReference MemberReference RubyString obj2 RubyString obj1 obj1 obj1 obj2 obj1 enc1 enc1 enc2 enc2 ReferenceType MemberReference obj2 RubyString BasicType VariableDeclarator MethodInvocation cr1 StringSupport CR_7BIT enc2 RubyString obj1 int cr2 Cast MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference enc1 cr1 enc2 cr2 RubyString obj2	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator IfStatement CatchClause MethodInvocation name Literal frame Literal ThreadContext IRubyObject final Block final Ruby runtime MethodInvocation final ThreadContext localContext MemberReference MethodInvocation BlockStatement BlockStatement CatchClauseParameter ReturnStatement runtime getTrue "none?" true context getRuntime context block isGiven StatementExpression StatementExpression JumpException.SpecialJump sj MethodInvocation MethodInvocation MethodInvocation runtime getFalse MemberReference MemberReference MemberReference ClassCreator callEach MemberReference MemberReference MemberReference ClassCreator callEach runtime context self ReferenceType MethodDeclaration runtime context self ReferenceType MethodDeclaration BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation ReferenceType VariableDeclarator MethodInvocation ThrowStatement MethodInvocation public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation ReferenceType VariableDeclarator MethodInvocation ThrowStatement MethodInvocation ThreadContext IRubyObject Block MemberReference MemberReference Literal checkContext IRubyObject larg MethodInvocation block MethodInvocation MemberReference MemberReference yield MemberReference runtime getNil ThreadContext IRubyObject Block MemberReference MemberReference Literal checkContext IRubyObject larg MethodInvocation larg isTrue MemberReference runtime getNil localContext ctx "none?" MemberReference MemberReference checkArgs isTrue ctx larg JumpException SPECIAL_JUMP localContext ctx "none?" MemberReference MemberReference checkArgs JumpException SPECIAL_JUMP runtime largs runtime largs	1
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression ReturnStatement public Block ReferenceType Assignment ClassCreator MemberReference MethodInvocation = ReferenceType This MemberReference clone Block	0
MethodDeclaration Modifier BasicType isBlank ReturnStatement public boolean BinaryOperation == MemberReference Literal length 0	0
MethodDeclaration Modifier invoke FormalParameter FormalParameter LocalVariableDeclaration ForStatement LocalVariableDeclaration IfStatement StatementExpression protected final ReferenceType buffer ReferenceType recv ReferenceType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation ReferenceType Object IRubyObject params ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression IRubyObject retVal instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement BlockStatement MemberReference MemberReference MemberReference MemberReference Buffer ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment recv RubyProc Assignment instanceof MemberReference ReferenceType StatementExpression StatementExpression runtime returnType buffer retVal IRubyObject length int i Literal i params length MemberReference MethodInvocation = MemberReference Cast = recv Block Assignment Assignment 0 ArraySelector params MemberReference MemberReference MemberReference MemberReference fromNative retVal ReferenceType MemberReference MemberReference Cast = MemberReference Cast = MemberReference runtime ArraySelector parameterTypes buffer i RubyProc recv retVal ReferenceType MemberReference retVal ReferenceType MemberReference i MemberReference Block recv IRubyObject recv i	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal getOperatorCallNode ReferenceType MemberReference "~" Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration finish IfStatement BinaryOperation BlockStatement != MemberReference Literal ForStatement null EnhancedForControl BlockStatement VariableDeclaration MemberReference StatementExpression ReferenceType VariableDeclarator MethodInvocation Runnable r r run	0
MethodDeclaration Modifier ReferenceType ReturnStatement public MemberReference scope	0
MethodDeclaration Modifier Annotation ReferenceType arity ReturnStatement public JRubyMethod ElementValuePair RubyFixnum MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation newFixnum block MethodInvocation arity getValue	0
MethodDeclaration Modifier ReferenceType callBlock FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject IRubyObject Block RubyClass selfType MethodInvocation MemberReference MemberReference ReturnStatement MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference cache selfType MethodInvocation caller selfType block context self context self MemberReference MemberReference MemberReference MemberReference MemberReference call context self selfType methodName block	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement private IRubyObject ReferenceType context ReferenceType pattern ReferenceType matcher ReferenceType enc ReferenceType block BasicType begin BasicType BasicType tuFlags ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation This ThreadContext Regex Matcher Encoding Block int int int Ruby runtime MethodInvocation byte bytes MemberReference int size MemberReference RubyMatchData match Literal DynamicScope scope MethodInvocation int end Literal == MethodInvocation Literal WhileStatement WhileStatement scope TernaryExpression setBackRef context getRuntime value bytes value realSize null context getCurrentScope 0 pattern 0 BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation MethodInvocation MemberReference >= MethodInvocation Literal StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression >= MethodInvocation Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression == MemberReference Literal runtime getNil match matcher BinaryOperation MemberReference MemberReference search 0 Assignment Assignment ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation matcher BinaryOperation MemberReference MemberReference search 0 Assignment Assignment MethodInvocation MethodInvocation MethodInvocation match null + MemberReference MemberReference Option NONE MemberReference MethodInvocation = MemberReference MethodInvocation = RubyString substr MethodInvocation substr MemberReference infectBy match MemberReference infectBy block MemberReference MemberReference yield MemberReference MemberReference modifyCheck + MemberReference MemberReference Option NONE MemberReference MethodInvocation = MemberReference MethodInvocation = match MemberReference infectBy block MemberReference MethodInvocation yield MemberReference MemberReference modifyCheck begin end end MemberReference MemberReference MemberReference MemberReference match RubyRegexp MemberReference This MemberReference MemberReference MemberReference MemberReference MethodInvocation BinaryOperation makeShared tuFlags tuFlags context substr bytes size begin end end MemberReference MemberReference MemberReference MemberReference match RubyRegexp MemberReference This MemberReference MemberReference MemberReference tuFlags context MemberReference MemberReference MemberReference MemberReference Literal bytes size matcher enc begin context scope matcher pattern runtime matcher getBegin - MethodInvocation MethodInvocation matcher enc begin context scope matcher pattern runtime matcher tuFlags false matcher getEnd matcher getBegin	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String Object result Cast MemberReference MemberReference javaToRuby ReferenceType MethodInvocation ruby result Object handle TernaryExpression invoke MemberReference Literal Cast isStatic null ReferenceType MemberReference JavaObjectWrapper self	0
MethodDeclaration Modifier Annotation ReferenceType getAbsolutePath ReturnStatement public Override String MethodInvocation ClassCreator MethodInvocation ReferenceType SuperMethodInvocation getAbsolutePath File getPath	0
MethodDeclaration Modifier ReferenceType skipOverNewlines FormalParameter WhileStatement ReturnStatement static public Node ReferenceType n BinaryOperation StatementExpression MemberReference Node == MethodInvocation MemberReference Assignment n n NodeType NEWLINENODE MemberReference Cast = n ReferenceType MemberReference NewlineNode n	1
MethodDeclaration * on Function we * value of function of * @param recv Math * @param x a real * @return for real number * @see * expansion for the */ Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation name Literal required Literal module Literal visibility MemberReference compat MemberReference IRubyObject IRubyObject double value Cast double result MethodInvocation && MethodInvocation BinaryOperation StatementExpression MemberReference MemberReference Literal RubyFloat MethodInvocation MemberReference newFloat 1 true Visibility PRIVATE CompatVersion RUBY1_9 ReferenceType MethodInvocation MemberReference Double MemberReference isInfinite < MemberReference Literal Assignment recv result recv getRuntime result RubyFloat RubyKernel MemberReference MemberReference value result value 0 MemberReference MemberReference = recv x result Double NaN	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Type context MethodInvocation getRuntime MemberReference MethodInvocation Literal context MethodInvocation getRuntime out of getNil	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 MethodInvocation IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject ArrayCreator Literal ReferenceType ArrayInitializer 7 IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference arg0 arg1 arg2 arg3 arg4 arg5 arg6	0
MethodDeclaration Modifier ReferenceType getCurrentLine ReturnStatement public String MethodInvocation src getCurrentLine	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair RubyHash This name Literal "to_hash"	1
MethodDeclaration Modifier ReferenceType canonicalize FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement private static String ReferenceType canonicalPath ReferenceType remaining BinaryOperation BlockStatement ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation BlockStatement IfStatement MethodInvocation String String == MemberReference Literal IfStatement ReturnStatement String child int slash MethodInvocation == MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression child Literal equals IfStatement MethodInvocation BlockStatement IfStatement MemberReference MemberReference canonicalize remaining null Literal BlockStatement BlockStatement MemberReference remaining Literal indexOf slash - 1 Assignment Assignment Assignment Assignment "." BinaryOperation BlockStatement BlockStatement child Literal equals IfStatement LocalVariableDeclaration IfStatement BinaryOperation BlockStatement BlockStatement canonicalPath remaining MethodInvocation "" ReturnStatement IfStatement canonicalPath '/' MemberReference MemberReference = MemberReference Literal = MemberReference MethodInvocation = MemberReference MethodInvocation = == MemberReference Literal IfStatement ".." BinaryOperation ThrowStatement BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement == MemberReference Literal StatementExpression StatementExpression MemberReference equals Literal BinaryOperation BlockStatement child remaining remaining null child remaining Literal MemberReference substring remaining remaining BinaryOperation substring slash - 1 BinaryOperation StatementExpression == MemberReference Literal ClassCreator int lastDir MethodInvocation == MemberReference Literal IfStatement StatementExpression canonicalPath null Assignment Assignment canonicalPath "/" && MethodInvocation BinaryOperation StatementExpression 0 slash + MemberReference Literal && BinaryOperation BinaryOperation Assignment canonicalPath null ReferenceType Literal canonicalPath Literal lastIndexOf lastDir - 1 MethodInvocation BlockStatement BlockStatement Assignment MemberReference MemberReference = MemberReference BinaryOperation += MemberReference startsWithDriveLetterOnWindows == MethodInvocation Literal Assignment slash 1 && BinaryOperation BinaryOperation == MemberReference Literal MemberReference Literal += IllegalArgumentException "Cannot have at the start of an absolute path" '/' MemberReference startsWithDriveLetterOnWindows StatementExpression MemberReference MethodInvocation = canonicalPath child canonicalPath + Literal MemberReference canonicalPath canonicalPath length 2 MemberReference Literal += != MemberReference Literal == MethodInvocation Literal slash - 1 canonicalPath "/" canonicalPath Assignment canonicalPath canonicalPath Literal MemberReference substring "/" child canonicalPath "/" canonicalPath null canonicalPath length 0 MemberReference Literal = 0 lastDir canonicalPath ""	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType block ReferenceType VariableDeclarator MethodInvocation MethodInvocation StatementExpression MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation MemberReference MemberReference Literal checkContext larg MemberReference equals MemberReference runtime getNil MemberReference MemberReference checkArgs localContext ctx "count" arg ++ ArraySelector result runtime largs Literal 0	1
MethodDeclaration Modifier ReferenceType name StatementExpression ReturnStatement public String MethodInvocation MemberReference compile name	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType MethodInvocation BlockStatement Literal Ruby ThreadContext IRubyObject Block self MethodInvocation getMetaClass ReturnStatement null MethodInvocation Literal isMethodBound MethodInvocation getName false ASTInterpreter MemberReference MemberReference MethodInvocation Literal MemberReference MemberReference runtime context getArgsNode "method" self	0
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter FormalParameter FormalParameter SwitchStatement private static final IRubyObject ReferenceType runtime ReferenceType type ReferenceType buffer BasicType index MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Ruby Type ReferenceType int type getNativeType VOID ReturnStatement CHAR ReturnStatement UCHAR ReturnStatement SHORT ReturnStatement USHORT ReturnStatement INT ReturnStatement UINT ReturnStatement LONG_LONG ReturnStatement ULONG_LONG ReturnStatement LONG ReturnStatement ULONG ReturnStatement FLOAT ReturnStatement DOUBLE ReturnStatement POINTER BlockStatement STRING ReturnStatement BOOL ReturnStatement ThrowStatement Buffer MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation TernaryExpression TernaryExpression MethodInvocation MethodInvocation LocalVariableDeclaration IfStatement MethodInvocation MethodInvocation ClassCreator runtime getNil Util MemberReference MethodInvocation newSigned8 Util MemberReference MethodInvocation newUnsigned8 Util MemberReference MethodInvocation newSigned16 Util MemberReference MethodInvocation newUnsigned16 Util MemberReference MethodInvocation newSigned32 Util MemberReference MethodInvocation newUnsigned32 Util MemberReference MethodInvocation newSigned64 Util MemberReference MethodInvocation newUnsigned64 BinaryOperation MethodInvocation MethodInvocation BinaryOperation MethodInvocation MethodInvocation runtime MethodInvocation newFloat runtime MethodInvocation newFloat Modifier BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference MemberReference MemberReference runtime BinaryOperation newBoolean ReferenceType BinaryOperation runtime buffer MemberReference runtime buffer MemberReference runtime buffer MemberReference getShort runtime buffer MemberReference getShort runtime buffer MemberReference getInt runtime buffer MemberReference getInt runtime buffer MemberReference getLong runtime buffer MemberReference getLong == MemberReference Literal Util MemberReference MethodInvocation newSigned32 Util MemberReference MethodInvocation newSigned64 == MemberReference Literal Util MemberReference MethodInvocation newUnsigned32 Util MemberReference MethodInvocation newUnsigned64 buffer MemberReference buffer MemberReference final long address MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement ReturnStatement runtime buffer index != MethodInvocation Literal IllegalArgumentException + Literal MemberReference index index index index index index index index LONG_SIZE 32 runtime buffer MemberReference getInt runtime buffer MemberReference getLong LONG_SIZE 32 runtime buffer MemberReference getInt runtime buffer MemberReference getLong index index buffer MemberReference getAddress type CallbackInfo ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ClassCreator buffer MemberReference getInt 0 "Invalid type " type index index index index index CallbackInfo cbInfo Cast != MemberReference Literal ReturnStatement ReturnStatement ReferenceType MemberReference MethodInvocation index ReferenceType MemberReference address 0 ClassCreator MethodInvocation Pointer runtime MemberReference MemberReference wrap CallbackInfo type ReferenceType MemberReference MemberReference MethodInvocation MethodInvocation runtime getNil runtime address JFFIInvoker runtime address cbInfo getReturnType cbInfo getParameterTypes	1
MethodDeclaration Modifier StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation method MemberReference aload method Literal MethodInvocation THREADCONTEXT_INDEX VoidClassReference MethodInvocation sig ClassReference params BasicType boolean	0
MethodDeclaration Modifier BasicType ReturnStatement private static final short ArrayCreator BasicType ArrayInitializer short Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 - 1 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 340 - 1 342 343 - 1 345 - 1 - 1 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 340 - 1 342 343 - 1 345 - 1 - 1 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 - 1 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 - 1 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 - 1 - 1 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 333 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 - 1 - 1 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 - 1 - 1 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 - 1 - 1 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 - 1 - 1 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 - 1 - 1 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 260 261 262 263 264 - 1 - 1 267 268 269 270 271 - 1 - 1 274 275 276 277 278 279 280 - 1 - 1 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 - 1 - 1 306 307 308 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 - 1 - 1 363 364 257 258 259 260 261 262 263 264 - 1 - 1 267 268 269 270 271 - 1 - 1 274 275 276 277 278 279 280 - 1 - 1 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 - 1 - 1 306 307 - 1 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 - 1 - 1 363 364 257 258 259 260 261 262 263 264 - 1 - 1 267 268 269 270 271 - 1 - 1 274 275 276 277 278 279 280 - 1 - 1 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 340 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 - 1 - 1 363 257 258 259 260 261 262 263 264 - 1 - 1 267 268 269 270 271 - 1 - 1 274 275 276 277 278 279 280 - 1 - 1 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 - 1 - 1 363 257 258 259 260 261 262 263 264 - 1 - 1 267 268 269 270 271 - 1 - 1 274 275 276 277 278 279 280 - 1 - 1 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 - 1 - 1 306 307 - 1 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 306 307 363 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 306 307 363 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 306 307 363 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 306 307 363 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 306 307 363 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 306 307 363 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 306 307 363 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 306 307 363 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 306 307 363 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 306 307 363 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 306 307 363 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 306 307 363 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 - 1 322 323 - 1 - 1 326 - 1 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 - 1 360 - 1 - 1 363	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType index BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation BlockStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject int i MethodInvocation Ruby runtime MethodInvocation int e MethodInvocation < MemberReference Literal MethodInvocation ! str singleByteOptimizable StatementExpression StatementExpression RubyFixnum MemberReference MemberReference newFixnum CompatVersion RUBY1_9 MemberReference context getRuntime MemberReference MemberReference e 0 runtime getNil MethodInvocation Assignment runtime e index runtime i updateCharOffset MemberReference MemberReference = e charOffsets ArraySelector end MemberReference i	1
MethodDeclaration Modifier ReferenceType op_plus FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType other MethodInvocation ThreadContext IRubyObject MemberReference MethodInvocation op_plus context other convertToString	1
MethodDeclaration Modifier Annotation ReferenceType pop FormalParameter StatementExpression IfStatement TryStatement public JRubyMethod IRubyObject ReferenceType context MethodInvocation BinaryOperation ReturnStatement IfStatement CatchClause ThreadContext modifyCheck == MemberReference Literal MethodInvocation MemberReference BlockStatement BlockStatement CatchClauseParameter StatementExpression ReturnStatement realLength 0 context MethodInvocation getRuntime isShared ReturnStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement ArrayIndexOutOfBoundsException e MethodInvocation MethodInvocation getNil MemberReference BasicType VariableDeclarator Modifier ReferenceType VariableDeclarator Assignment MemberReference concurrentModification context MethodInvocation getRuntime ArraySelector values int index BinaryOperation final IRubyObject obj MemberReference MemberReference MethodInvocation = obj getNil BinaryOperation + MemberReference MemberReference ArraySelector values ArraySelector values context MethodInvocation getRuntime + MemberReference MemberReference begin -- realLength MemberReference MemberReference getNil begin -- realLength index index	1
MethodDeclaration Modifier Annotation BasicType hashCode ReturnStatement public Override int MethodInvocation MethodInvocation getRuntime	0
MethodDeclaration Modifier ReferenceType getCPath ReturnStatement public Colon3Node MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType javaInvokee ReferenceType arg0 MethodInvocation MethodInvocation MethodInvocation BlockStatement MethodInvocation Object Object Literal checkArity MemberReference MemberReference ReturnStatement MemberReference MemberReference MemberReference 1 javaInvokee javaInvokee MethodInvocation method javaInvokee arg0 MemberReference MemberReference javaInvokee arg0	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int Literal yyerror yyVal "formal argument cannot be a global variable"	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement IfStatement MethodInvocation Assignment MemberReference Object Object int == Cast Literal StatementExpression BinaryOperation BlockStatement support Cast checkExpression MemberReference Cast = yyVal ReferenceType MemberReference null MethodInvocation instanceof Cast ReferenceType StatementExpression ReferenceType MemberReference yyVal ReferenceType MemberReference Node ArraySelector yyVals Literal yyerror ReferenceType MemberReference ILiteralNode MethodInvocation Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation "can't define single method for Node ArraySelector yyVals Literal yyerror BinaryOperation BinaryOperation + Literal MemberReference BinaryOperation "can't define single method for + Literal MemberReference + Literal MemberReference - 1 yyTop + Literal MemberReference - 1 yyTop - 1 yyTop - 1 yyTop	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType name ReferenceType MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation String Object method dup method MethodInvocation Label ClassCreator Label ClassCreator method MemberReference method MemberReference MethodInvocation method MemberReference ldc method MethodInvocation Literal MethodInvocation invokevirtual method Cast method MemberReference go_to method MemberReference label method pop method Cast go_to method MemberReference label ClassReference p ReferenceType ReferenceType ClassReference p name ClassReference p ClassReference MethodInvocation sig ReferenceType MemberReference ReferenceType MemberReference ReferenceType Label Label ReferenceType ReferenceType BasicType ClassReference params Label Label RubyModule RubyModule RubyModule boolean ReferenceType String	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration WhileStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType args ReferenceType block ReferenceType VariableDeclarator MethodInvocation BlockStatement This ThreadContext IRubyObject Block IRubyObject line MethodInvocation ! line isNil StatementExpression StatementExpression MemberReference MemberReference MethodInvocation Assignment context args block MemberReference MemberReference yield MemberReference MethodInvocation = context line line MemberReference MemberReference context args	0
MethodDeclaration Modifier Annotation FormalParameter StatementExpression public Override ReferenceType arg0 Assignment IRubyObject MemberReference MemberReference = variableValueZero arg0	0
MethodDeclaration Modifier Annotation ReferenceType same FormalParameter IfStatement IfStatement LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType other BinaryOperation BlockStatement BinaryOperation BlockStatement BasicType VariableDeclarator TernaryExpression name Literal required Literal IRubyObject instanceof MemberReference ReferenceType StatementExpression IfStatement && BinaryOperation BinaryOperation ReturnStatement boolean BinaryOperation MemberReference MethodInvocation MethodInvocation 1 other JavaObject Assignment BinaryOperation BlockStatement == MethodInvocation Literal == Cast Literal MethodInvocation == MethodInvocation Cast MethodInvocation getRuntime MethodInvocation getRuntime MemberReference Cast = instanceof MemberReference ReferenceType ReturnStatement getValue null ReferenceType MemberReference null MethodInvocation getRuntime getValue ReferenceType MemberReference getTrue getFalse other ReferenceType MethodInvocation other JavaObject MethodInvocation JavaObject other getTrue JavaObject other JavaObject other dataGetStruct MethodInvocation getRuntime getFalse	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement final static public DynamicMethod ReferenceType runtime ReferenceType module ReferenceType function ReferenceType returnType ReferenceType parameterTypes ReferenceType convention ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference Ruby RubyModule com ReferenceType Type Type DynamicMethod dm && BinaryOperation MethodInvocation StatementExpression BinaryOperation BlockStatement BlockStatement dm kenai ReferenceType == MemberReference MemberReference MethodInvocation getFactory Assignment && BinaryOperation MethodInvocation StatementExpression StatementExpression jffi ReferenceType convention DEFAULT MemberReference MemberReference MemberReference MethodInvocation = == MemberReference MemberReference MethodInvocation getFactory Assignment Assignment Function returnType parameterTypes dm MethodInvocation getFactory convention DEFAULT MemberReference MemberReference MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MemberReference MemberReference MemberReference returnType parameterTypes dm MethodInvocation getFactory dm MethodInvocation getFactory module function returnType parameterTypes MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MethodInvocation module function returnType parameterTypes module function returnType parameterTypes convention runtime getNil	0
MethodDeclaration Modifier ReferenceType determineModule IfStatement ReturnStatement public RubyModule BinaryOperation BlockStatement MemberReference == MemberReference Literal StatementExpression AssertStatement StatementExpression null Assignment BinaryOperation Literal Assignment MemberReference MethodInvocation = != MemberReference Literal is created before determine MemberReference MethodInvocation = MethodInvocation null MemberReference determineModule	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType block ReferenceType VariableDeclarator StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject Block Ruby runtime MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference MemberReference pre argsNode MemberReference Literal argsNode MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference prepare body MemberReference MemberReference MemberReference MemberReference rj MethodInvocation rj MethodInvocation MemberReference MemberReference MemberReference post context name self block runtime runtime 2 context runtime self arg0 arg1 block runtime context self block MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier BasicType FormalParameter IfStatement ReturnStatement private boolean ReferenceType node BinaryOperation BlockStatement IfStatement Literal Node instanceof MemberReference ReferenceType ThrowStatement BinaryOperation BlockStatement false node MultipleAsgnNode ClassCreator || BinaryOperation BinaryOperation LocalVariableDeclaration IfStatement ReturnStatement ReferenceType MemberReference MethodInvocation MethodInvocation Literal || BinaryOperation BinaryOperation instanceof MemberReference ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement Literal SyntaxException PID node getPosition lexer getCurrentLine assignment in || BinaryOperation BinaryOperation instanceof MemberReference ReferenceType node InstAsgnNode Node Cast || BinaryOperation BinaryOperation StatementExpression true instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType node GlobalAsgnNode ReferenceType MemberReference || BinaryOperation BinaryOperation instanceof MemberReference ReferenceType MethodInvocation node LocalAsgnNode node AssignableNode node || BinaryOperation BinaryOperation instanceof MemberReference ReferenceType warnings MemberReference MethodInvocation Literal warn instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType TrueNode ID node getPosition "Found '=' in should be ILiteralNode NilNode	1
MethodDeclaration Modifier Annotation ReferenceType convertRubyToJava FormalParameter ReturnStatement static public Deprecated Object ReferenceType rubyObject MethodInvocation IRubyObject MemberReference ClassReference convertRubyToJava rubyObject ReferenceType Object	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private ByteList ReferenceType original BasicType VariableDeclarator BasicType VariableDeclarator Assignment BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference BlockStatement MethodInvocation Assignment MethodInvocation MethodInvocation Assignment MemberReference ByteList byte carry ArrayCreator int carryP Literal MemberReference Literal = int carryLen Literal ByteList value ClassCreator MemberReference MemberReference = Encoding enc MemberReference int p MemberReference int end BinaryOperation int s MemberReference byte bytes MemberReference NeighborChar neighbor MemberReference int lastAlnum Literal boolean alnumSeen Literal != Assignment Literal IfStatement LocalVariableDeclaration IfStatement SwitchStatement StatementExpression StatementExpression StatementExpression ! alnumSeen StatementExpression WhileStatement value BinaryOperation MemberReference BinaryOperation = System MemberReference MemberReference MemberReference BinaryOperation BinaryOperation arraycopy System MemberReference Literal MemberReference MemberReference MemberReference arraycopy MemberReference MemberReference += value BasicType MemberReference 0 ArraySelector carry 1 1 ReferenceType MemberReference value encoding original encoding original encoding value begin + MemberReference MemberReference end value bytes NeighborChar FOUND - 1 false MemberReference MethodInvocation = - 1 BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation ContinueStatement Assignment SwitchStatementCase SwitchStatementCase SwitchStatementCase Assignment Assignment Assignment Assignment BinaryOperation BlockStatement + BinaryOperation MemberReference s + MemberReference MemberReference value bytes s value bytes + MemberReference MemberReference - MemberReference MemberReference carry 0 value bytes s carryLen value realSize carryLen byte Literal ByteList original p value realSize s enc MemberReference MemberReference MemberReference MemberReference prevCharHead && BinaryOperation BinaryOperation IfStatement int cl MethodInvocation <= MemberReference Literal MemberReference MethodInvocation = NOT_CHAR ContinueStatement FOUND ReturnStatement WRAPPED StatementExpression MemberReference Literal = MemberReference BinaryOperation = MemberReference MemberReference = MemberReference MemberReference = != Assignment Literal LocalVariableDeclaration IfStatement StatementExpression IfStatement IfStatement IfStatement StatementExpression + MemberReference MemberReference carryLen value begin carryP s carryLen value realSize carryP 0 bytes p s end == MemberReference MemberReference != MemberReference Literal TernaryExpression BlockStatement StringSupport MemberReference MemberReference MemberReference MemberReference preciseLength cl 0 neighbor MemberReference MemberReference MemberReference MemberReference MemberReference Literal MemberReference Assignment alnumSeen true carryP - MemberReference MemberReference carryLen cl s end MemberReference MethodInvocation = - 1 BasicType VariableDeclarator BinaryOperation ContinueStatement Assignment BinaryOperation ReturnStatement BinaryOperation StatementExpression MethodInvocation BlockStatement Assignment value begin value realSize neighbor NeighborChar NOT_CHAR lastAlnum - 1 MethodInvocation MethodInvocation TernaryExpression StatementExpression BreakStatement enc bytes s end enc bytes s cl carry 0 value MemberReference MemberReference = s p s enc MemberReference MemberReference MemberReference MemberReference prevCharHead int cl MethodInvocation <= MemberReference Literal MemberReference MethodInvocation = == MemberReference MemberReference MemberReference != MethodInvocation MemberReference MethodInvocation ! enc isAsciiCompatible StatementExpression StatementExpression MemberReference BinaryOperation = ASCII BinaryOperation isAlpha ASCII BinaryOperation isDigit MethodInvocation MethodInvocation Literal Assignment lastAlnum s bytes p s end StringSupport MemberReference MemberReference MemberReference MemberReference preciseLength cl 0 neighbor MemberReference MemberReference MemberReference MemberReference succChar neighbor NeighborChar FOUND value StringSupport MemberReference MemberReference MemberReference BinaryOperation preciseLength cl MemberReference MemberReference MemberReference MemberReference succChar MethodInvocation Assignment carryP - MemberReference MemberReference & MemberReference Literal & MemberReference Literal ASCII BinaryOperation isDigit ASCII BinaryOperation isAlpha false MemberReference MemberReference = enc bytes s end enc bytes s cl enc bytes s + MemberReference Literal enc bytes s cl System MemberReference MemberReference MemberReference Literal MemberReference arraycopy MemberReference MemberReference = s p ArraySelector bytes 0xff ArraySelector bytes 0xff & MemberReference Literal & MemberReference Literal s lastAlnum s 1 bytes s carry 0 cl carryLen cl MemberReference MemberReference ArraySelector bytes 0xff ArraySelector bytes 0xff lastAlnum s MemberReference MemberReference lastAlnum s	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ThrowStatement public Object ReferenceType numeric ReferenceType target BasicType VariableDeclarator MethodInvocation BlockStatement MethodInvocation RubyNumeric Class long value MethodInvocation MemberReference ReturnStatement numeric MethodInvocation getRuntime numeric getLongValue value MethodInvocation BinaryOperation newRangeError Character Cast valueOf + Literal MemberReference BasicType MemberReference "too for " numeric char value	0
MethodDeclaration Modifier ReferenceType aryToAry FormalParameter IfStatement IfStatement ReturnStatement static public IRubyObject ReferenceType value BinaryOperation ReturnStatement MethodInvocation BlockStatement MethodInvocation IRubyObject instanceof MemberReference ReferenceType MemberReference value Literal respondsTo ReturnStatement value MethodInvocation getRuntime value RubyArray value "to_ary" MethodInvocation MemberReference newArray TypeConverter MemberReference MethodInvocation Literal Literal convertToType value value value MethodInvocation getRuntime "to_ary" false getArray	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast HashNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop - 2 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType getSingletonMethod FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Deprecated Callback ReferenceType method ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ClassCreator String Class Class Class ReferenceType MemberReference MemberReference ArrayCreator Literal Literal MethodInvocation Literal ReflectionCallback type method ReferenceType ArrayInitializer false true Arity Literal fixed false Class MemberReference MemberReference MemberReference 3 arg1 arg2 arg3	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation ReferenceType VariableDeclarator MethodInvocation ThrowStatement MethodInvocation ThreadContext IRubyObject Block MemberReference MemberReference Literal checkContext IRubyObject larg MethodInvocation larg isTrue MemberReference runtime getNil localContext ctx "none?" MemberReference MemberReference checkArgs JumpException SPECIAL_JUMP runtime largs	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + BinaryOperation MemberReference + BinaryOperation Literal + Literal MemberReference " = " "	0
MethodDeclaration Modifier invokespecial FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 MethodInvocation String String String MethodInvocation getMethodVisitor MemberReference MemberReference MemberReference MemberReference visitMethodInsn INVOKESPECIAL arg1 arg2 arg3	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Map TypeArgument TypeArgument MemberReference ReferenceType ReferenceType annotatedMethods1_8 String List TypeArgument ReferenceType JavaMethodDescriptor	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType BinaryOperation BlockStatement Literal Ruby ThreadContext IRubyObject Block != MethodInvocation Literal TryStatement null MemberReference MemberReference MemberReference MemberReference null LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement CatchClause runtime context self ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement CatchClauseParameter IRubyObject receiver MethodInvocation RubyClass metaClass MethodInvocation DynamicMethod method MethodInvocation Visibility visibility MethodInvocation && BinaryOperation BinaryOperation IfStatement JumpException e MemberReference MemberReference MemberReference MemberReference receiver getMetaClass metaClass MemberReference searchMethod method getVisibility != MemberReference MemberReference || BinaryOperation MethodInvocation MethodInvocation BlockStatement runtime context self name visibility Visibility PRIVATE != MemberReference MemberReference metaClass MethodInvocation getRealClass metaClass MemberReference Literal isMethodBound ReturnStatement visibility Visibility PROTECTED MemberReference isInstance name false MethodInvocation self ASTInterpreter MemberReference MemberReference MemberReference Literal MemberReference MemberReference runtime context argsNode self	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator MethodInvocation MethodInvocation name Literal required Literal optional Literal frame Literal module Literal ThreadContext IRubyObject IRubyObject Block Ruby runtime MethodInvocation runtime MethodInvocation RuntimeHelpers MemberReference MethodInvocation Literal MemberReference MemberReference invoke 1 1 true true recv getRuntime Literal require context runtime args block	0
MethodDeclaration Modifier BasicType ReturnStatement static public boolean Literal true	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter IfStatement final public ReferenceType runtime ReferenceType key ReferenceType value BinaryOperation BlockStatement BlockStatement Ruby IRubyObject IRubyObject == MethodInvocation MethodInvocation StatementExpression StatementExpression key MethodInvocation getMetaClass runtime getString MethodInvocation MethodInvocation getRealClass MemberReference Cast MemberReference MemberReference MemberReference runtime ReferenceType MemberReference value key value RubyString key	0
MethodDeclaration Modifier Annotation ReferenceType getFastMethod FormalParameter FormalParameter FormalParameter ReturnStatement public Deprecated Callback ReferenceType rubyName ReferenceType method ReferenceType arg1 ClassCreator String String Class ReferenceType MemberReference MemberReference ArrayCreator Literal Literal MethodInvocation Literal ReflectionCallback type method ReferenceType ArrayInitializer false false Arity singleArgument true Class MemberReference arg1	1
MethodDeclaration Modifier BasicType allowClass FormalParameter ReturnStatement public boolean ReferenceType name MethodInvocation String ! name Literal equals "File"	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public IRubyObject ReferenceType runtime ReferenceType internedName ReferenceType object ReferenceType VariableDeclarator TernaryExpression Ruby String RubyModule IRubyObject result MethodInvocation BinaryOperation MethodInvocation MemberReference MemberReference MemberReference MemberReference getConstantInner == MemberReference Literal MemberReference fastGetConstant result runtime internedName object result null internedName	0
MethodDeclaration Modifier setUp Exception StatementExpression StatementExpression StatementExpression public SuperMethodInvocation Assignment Assignment setUp MemberReference MethodInvocation = MemberReference ClassCreator = runtime Ruby newInstance target ReferenceType	0
MethodDeclaration Modifier BasicType write FormalParameter IOException BadDescriptorException StatementExpression ReturnStatement public int ReferenceType buf MethodInvocation MethodInvocation ByteList MethodInvocation ByteBuffer MethodInvocation MethodInvocation MethodInvocation wrap buf unsafeBytes buf begin buf length	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType arg ReferenceType b ReferenceType VariableDeclarator MethodInvocation MethodInvocation name Literal required Literal frame Literal module Literal IRubyObject IRubyObject Block Ruby runtime MethodInvocation runtime MethodInvocation runtime getNil 1 true true recv getRuntime arg isTrue	0
MethodDeclaration Modifier BasicType IfStatement LocalVariableDeclaration ReturnStatement private int MethodInvocation BlockStatement ReferenceType VariableDeclarator BinaryOperation isZero ReturnStatement BigDecimal val MethodInvocation - MethodInvocation MethodInvocation Literal value MethodInvocation abs val precision val scale 0 stripTrailingZeros	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement private ReferenceType node ReferenceType context Modifier BasicType Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference BlockStatement BlockStatement Node BodyCompiler final boolean final RescueNode rescueNode Cast BranchCallback body ClassCreator BranchCallback ClassCreator ASTInspector ClassCreator MethodInvocation inspect StatementExpression StatementExpression ReferenceType MemberReference ReferenceType MethodDeclaration ReferenceType MethodDeclaration ReferenceType rescueNode MethodInvocation MethodInvocation RescueNode node BranchCallback Modifier branch FormalParameter IfStatement IfStatement BranchCallback Modifier branch FormalParameter StatementExpression ASTInspector context MemberReference MemberReference MethodInvocation context MemberReference MemberReference MethodInvocation public ReferenceType context BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement public ReferenceType context MethodInvocation body MemberReference getFlag body MemberReference getFlag BodyCompiler != MethodInvocation Literal StatementExpression StatementExpression != MethodInvocation Literal StatementExpression StatementExpression BodyCompiler MethodInvocation MemberReference MemberReference ASTInspector ASTInspector rescueNode getBodyNode null MethodInvocation MethodInvocation rescueNode null MethodInvocation MethodInvocation rescueNode context MethodInvocation MemberReference Literal compile context loadNil context consumeCurrentValue MethodInvocation MemberReference Literal compile rescueNode getBodyNode context true rescueNode context true	0
MethodDeclaration Modifier ReferenceType create FormalParameter FormalParameter ReturnStatement static public JRubyFile ReferenceType cwd ReferenceType pathname MethodInvocation String String MemberReference MemberReference cwd pathname	0
MethodDeclaration Modifier Annotation Annotation ReferenceType abs FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject ReferenceType context BinaryOperation BlockStatement This name Literal ThreadContext < MethodInvocation Literal ReturnStatement Double MemberReference doubleToLongBits 0 MethodInvocation value RubyFloat MethodInvocation MethodInvocation newFloat context getRuntime Math MemberReference abs value	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile getValueNode context true	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block TernaryExpression name Literal frame Literal ThreadContext IRubyObject final Block MethodInvocation MethodInvocation MethodInvocation true block isGiven MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal enumeratorize context self block context getRuntime self	1
MethodDeclaration Modifier TryStatement public StatementExpression CatchClause MethodInvocation CatchClauseParameter StatementExpression StatementExpression runtime Literal RaiseException e MethodInvocation MethodInvocation Literal ClassReference MethodInvocation assertEquals Literal MethodInvocation of non-existent library should ReferenceType e getClass of non-existent library should exception should only be RaiseException with no root cause" e getCause RaiseException	0
MethodDeclaration Modifier ReferenceType isExceptionHandled FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType currentException ReferenceType exception0 ReferenceType exception1 ReferenceType ReferenceType context ReferenceType VariableDeclarator MethodInvocation ReturnStatement MethodInvocation RubyException IRubyObject IRubyObject IRubyObject ThreadContext IRubyObject result MethodInvocation result isTrue MemberReference MemberReference MemberReference MemberReference MemberReference isExceptionHandled MemberReference MemberReference MemberReference isExceptionHandled result currentException exception1 context currentException exception0 context	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement final public JRubyMethod IRubyObject ReferenceType context MethodInvocation ThreadContext RubyArray MethodInvocation MemberReference newArray context getRuntime parameterTypes	1
MethodDeclaration Modifier BasicType getAddress ReturnStatement final public long Cast ReferenceType MethodInvocation getMemoryIO	0
MethodDeclaration Modifier BasicType star FormalParameter IOException LocalVariableDeclaration SwitchStatement StatementExpression ReturnStatement private int BasicType spaceSeen BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase MethodInvocation MemberReference boolean int c MethodInvocation c Literal IfStatement StatementExpression StatementExpression StatementExpression BreakStatement Literal StatementExpression StatementExpression ReturnStatement StatementExpression IfStatement StatementExpression determineExpressionState c src read '*' BinaryOperation BlockStatement MethodInvocation Assignment Assignment '=' Assignment Assignment MemberReference MethodInvocation BinaryOperation BlockStatement IfStatement Assignment == Assignment Literal StatementExpression StatementExpression ReturnStatement src MemberReference unread MemberReference ClassCreator = MemberReference MemberReference = MemberReference MemberReference = MemberReference ClassCreator = Tokens tOP_ASGN src MemberReference unread && BinaryOperation MethodInvocation IfStatement StatementExpression MethodInvocation BlockStatement BlockStatement MemberReference ClassCreator = MemberReference MethodInvocation = '=' Assignment Assignment MemberReference c yaccValue ReferenceType Literal MethodInvocation c Tokens lex_state LexState EXPR_BEG yaccValue ReferenceType Literal MethodInvocation c && MethodInvocation MemberReference ! Character MemberReference isWhitespace MethodInvocation StatementExpression Assignment isBEG StatementExpression StatementExpression yaccValue ReferenceType Literal MethodInvocation c src read MemberReference MemberReference = MemberReference ClassCreator = Tokens tOP_ASGN Token "**" getPosition Token "*" getPosition isARG spaceSeen c warnings isVerbose MethodInvocation MemberReference MemberReference = Assignment Assignment Token "*" getPosition lex_state LexState EXPR_BEG yaccValue ReferenceType Literal MethodInvocation warnings MemberReference MethodInvocation Literal Literal warning c Tokens tSTAR MemberReference MemberReference = MemberReference MemberReference = Token "**" getPosition ID getPosition interpreted as argument "*" c Tokens tSTAR c Tokens	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement private static ReferenceType methods ReferenceType ReferenceType names ReferenceType VariableDeclarator ForControl BlockStatement Map Class Set Method mths MethodInvocation VariableDeclaration BinaryOperation MemberReference IfStatement getDeclaredMethods BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement int i Literal i mths length || BinaryOperation MethodInvocation StatementExpression 0 == MemberReference Literal names MemberReference contains MethodInvocation names null ArraySelector MethodInvocation mths MemberReference MemberReference addMethod MemberReference getName methods ArraySelector mths i MemberReference i	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter FormalParameter IfStatement static public long ReferenceType enc BasicType bytes BasicType p BasicType end MethodInvocation BlockStatement IfStatement Encoding byte int int enc ReturnStatement MethodInvocation BlockStatement BlockStatement BinaryOperation enc isAsciiCompatible ReturnStatement ReturnStatement / BinaryOperation MethodInvocation MethodInvocation MethodInvocation - BinaryOperation Literal enc minLength MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference + BinaryOperation MethodInvocation 1 enc bytes p end enc bytes p end - MemberReference MemberReference enc minLength end p	0
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public String BasicType i ReferenceType o ReferenceType o2 ReferenceType Literal long String String String	0
MethodDeclaration Modifier BasicType FormalParameter ThrowStatement final public float BasicType offset MethodInvocation long ex	0
MethodDeclaration Modifier BasicType ReturnStatement private static final short ArrayCreator BasicType ArrayInitializer short Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal 354 355 356 357 358 359 360 361 362 - 1 364 365 366 367 368 369 63 - 1 - 1 373 - 1 375 376 - 1 378 379 257 258 259 - 1 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 - 1 - 1 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 - 1 299 - 1 - 1 302 303 304 - 1 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 336 - 1 338 339 - 1 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 0 362 - 1 364 365 366 367 368 369 - 1 10 - 1 373 - 1 375 376 - 1 378 379 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 44 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 59 - 1 61 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 91 - 1 - 1 - 1 - 1 - 1 - 1 341 - 1 - 1 344 348 346 350 - 1 352 353 354 355 356 357 358 - 1 360 - 1 - 1 - 1 - 1 362 297 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 - 1 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 59 360 61 - 1 63 - 1 - 1 - 1 306 307 - 1 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 321 322 323 - 1 - 1 326 327 - 1 - 1 91 331 332 333 334 - 1 - 1 - 1 - 1 - 1 340 - 1 - 1 - 1 - 1 - 1 10 347 348 - 1 350 351 352 353 354 355 356 357 358 359 360 - 1 0 363 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 257 258 259 - 1 261 262 263 264 265 266 - 1 268 269 270 271 272 273 274 275 276 277 278 59 280 - 1 - 1 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 - 1 299 - 1 - 1 302 303 304 59 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 336 - 1 - 1 339 340 341 342 343 - 1 345 - 1 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 - 1 364 365 366 367 368 369 - 1 - 1 - 1 373 - 1 375 376 63 378 379 257 258 259 - 1 261 262 263 264 265 266 - 1 268 269 270 271 272 273 274 275 276 277 278 - 1 280 - 1 - 1 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 - 1 299 - 1 - 1 302 303 304 - 1 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 336 - 1 - 1 339 340 341 342 343 - 1 345 - 1 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 - 1 364 365 366 367 368 369 0 - 1 - 1 373 - 1 375 376 - 1 378 379 10 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 306 281 308 309 310 311 - 1 - 1 - 1 - 1 - 1 44 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 328 - 1 - 1 - 1 59 - 1 61 335 63 - 1 - 1 339 340 - 1 - 1 - 1 - 1 - 1 - 1 347 348 349 350 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 91 - 1 - 1 341 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 297 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 59 - 1 61 - 1 63 - 1 - 1 - 1 306 307 - 1 - 1 310 - 1 - 1 - 1 314 315 - 1 317 318 319 320 321 322 323 - 1 - 1 326 327 - 1 - 1 91 331 332 333 334 - 1 - 1 - 1 - 1 - 1 340 - 1 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 359 360 - 1 0 363 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 257 258 259 - 1 261 262 263 264 265 266 - 1 268 269 270 271 272 273 274 275 276 277 278 - 1 280 - 1 - 1 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 - 1 299 - 1 - 1 302 303 304 59 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 336 - 1 - 1 339 340 341 342 343 - 1 345 - 1 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 - 1 364 365 366 367 368 369 - 1 - 1 - 1 373 - 1 375 376 - 1 378 379 257 258 259 - 1 261 262 263 264 265 266 - 1 268 269 270 271 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 - 1 299 - 1 - 1 302 303 304 44 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 336 - 1 - 1 339 340 341 342 343 - 1 345 - 1 347 348 349 350 351 352 353 354 355 356 357 358 359 360 - 1 362 - 1 364 365 366 367 368 369 - 1 - 1 - 1 373 - 1 375 376 - 1 378 379 257 258 259 - 1 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 - 1 - 1 281 - 1 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 - 1 299 - 1 - 1 302 303 304 - 1 306 307 308 309 310 311 312 313 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 0 328 - 1 - 1 - 1 - 1 - 1 - 1 335 336 10 - 1 339 - 1 341 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 362 - 1 364 365 366 367 368 369 - 1 44 - 1 373 - 1 375 376 - 1 378 379 - 1 - 1 - 1 - 1 - 1 58 59 - 1 61 - 1 63 - 1 - 1 - 1 - 1 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 91 - 1 - 1 283 284 285 286 287 288 289 0 - 1 292 - 1 - 1 - 1 - 1 - 1 - 1 299 10 - 1 302 303 304 - 1 306 307 308 309 310 311 - 1 313 - 1 - 1 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 - 1 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 373 - 1 375 376 - 1 378 379 - 1 91 - 1 - 1 - 1 - 1 667 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 677 - 1 - 1 680 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 58 59 - 1 61 - 1 63 - 1 280 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 91 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 0 350 - 1 352 353 354 355 356 357 358 10 360 361 362 262 263 264 - 1 - 1 267 268 269 841 271 843 374 - 1 - 1 - 1 849 - 1 280 281 282 854 - 1 - 1 - 1 - 1 - 1 - 1 290 291 44 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 - 1 - 1 338 91 341 - 1 - 1 344 - 1 346 348 920 350 352 353 354 355 356 357 358 - 1 360 361 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 0 333 334 335 - 1 337 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 44 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 - 1 61 - 1 63 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 280 281 282 - 1 - 1 - 1 - 1 - 1 - 1 91 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 0 333 334 335 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 361 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 44 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 306 307 58 59 310 61 - 1 63 314 315 - 1 317 318 319 320 321 322 323 - 1 - 1 326 327 - 1 - 1 - 1 331 332 333 334 - 1 - 1 - 1 - 1 - 1 340 91 - 1 - 1 - 1 - 1 - 1 347 348 - 1 350 351 352 353 354 355 356 357 358 359 360 - 1 - 1 363 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 44 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 - 1 - 1 338 91 - 1 341 - 1 - 1 344 - 1 346 - 1 348 0 350 - 1 352 353 354 355 356 357 358 10 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 58 59 - 1 - 1 - 1 63 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 91 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 0 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 374 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 44 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 58 59 305 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 91 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 0 350 - 1 352 353 354 355 356 357 358 10 360 - 1 362 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 44 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 - 1 - 1 338 91 - 1 341 - 1 - 1 344 - 1 346 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 0 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 91 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 0 350 - 1 352 353 354 355 356 357 358 10 360 - 1 362 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 374 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 44 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 58 59 305 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 91 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 0 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 374 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 44 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 0 350 - 1 352 353 354 355 356 357 358 10 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 0 333 334 335 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 44 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 58 59 - 1 - 1 - 1 63 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 0 350 - 1 352 353 354 355 356 357 358 10 360 - 1 362 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 44 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 - 1 362 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 374 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 44 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 0 350 - 1 352 353 354 355 356 357 358 10 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 58 59 - 1 - 1 - 1 63 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 0 333 334 - 1 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 44 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 0 350 - 1 352 353 354 355 356 357 358 10 360 - 1 362 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 44 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 0 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 374 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 44 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 58 59 305 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 0 350 - 1 352 353 354 355 356 357 358 10 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 338 0 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 10 350 - 1 - 1 - 1 354 355 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 262 263 264 - 1 - 1 267 268 269 44 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 58 59 - 1 - 1 - 1 63 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 0 350 - 1 - 1 - 1 354 355 356 357 358 10 360 - 1 362 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 374 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 44 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 58 59 305 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 350 - 1 - 1 - 1 - 1 - 1 356 357 358 - 1 360 - 1 362 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 44 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 58 59 - 1 - 1 - 1 63 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 0 350 - 1 - 1 - 1 - 1 - 1 356 357 358 10 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 44 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 58 59 - 1 - 1 - 1 63 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 - 1 - 1 0 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 10 346 - 1 - 1 - 1 350 - 1 - 1 - 1 - 1 - 1 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 44 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 - 1 - 1 - 1 - 1 0 338 - 1 - 1 341 - 1 - 1 344 - 1 346 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 374 267 268 269 - 1 271 - 1 44 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 58 59 - 1 290 291 63 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 356 357 358 10 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 374 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 44 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 58 59 - 1 - 1 - 1 63 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 - 1 - 1 - 1 - 1 0 338 - 1 - 1 341 - 1 - 1 344 - 1 346 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 356 357 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 44 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295	1
MethodDeclaration Modifier ReferenceType callBlock FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType arg1 ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject Block RubyModule klazz MethodInvocation String name MethodInvocation RubyClass selfType MethodInvocation MemberReference && BinaryOperation MethodInvocation ReturnStatement MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference context context MemberReference MemberReference MemberReference MemberReference cache && BinaryOperation BinaryOperation MemberReference MethodInvocation caller selfType block context self name arg1 context self klazz name == MemberReference MemberReference != MemberReference Literal selfType MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call name lastName selfType null context self selfType name arg1 block	1
MethodDeclaration Modifier ReferenceType convertJavaToRuby FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType object MethodInvocation Ruby Object MemberReference MemberReference convertJavaToUsableRubyObject runtime object	0
MethodDeclaration Modifier BasicType getRestArg ReturnStatement public int MemberReference restArg	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression LocalVariableDeclaration ForStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType block MethodInvocation ReferenceType VariableDeclarator ForControl BlockStatement This ThreadContext Block String contents MemberReference Assignment BinaryOperation MemberReference StatementExpression MemberReference Literal = < MemberReference MemberReference ++ pos MethodInvocation pos 0 pos contents length block MemberReference MethodInvocation yield context MethodInvocation getRuntime MemberReference newString ArraySelector contents MemberReference pos	0
MethodDeclaration Modifier StatementExpression public Assignment MemberReference MemberReference &= flags ~	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject Block ReferenceType MemberReference ArrayCreator MemberReference call Type context ReferenceType ArrayInitializer Block IRubyObject MethodInvocation RubyArray MethodInvocation MemberReference MemberReference context getRuntime arg0 arg1	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation This name Literal required Literal optional Literal ThreadContext IRubyObject long off MethodInvocation ByteList bl MemberReference int idx TernaryExpression || BinaryOperation BinaryOperation ThrowStatement int len TernaryExpression || BinaryOperation BinaryOperation ThrowStatement MethodInvocation getMemoryIO 2 2 MemberReference getOffset ArraySelector MethodInvocation MethodInvocation args BinaryOperation MethodInvocation Literal < MemberReference Literal > MemberReference MethodInvocation MethodInvocation BinaryOperation MethodInvocation BinaryOperation < MemberReference Literal > MemberReference BinaryOperation MethodInvocation MemberReference MethodInvocation BinaryOperation MemberReference put ArraySelector args Literal convertToString getByteList > MemberReference Literal Util MemberReference int32Value 0 idx 0 idx bl length context MethodInvocation getRuntime > MemberReference Literal Util MemberReference int32Value - MethodInvocation MemberReference len 0 len - MethodInvocation MemberReference context MethodInvocation getRuntime off bl unsafeBytes + MethodInvocation MemberReference len Literal 1 args length 2 ArraySelector args Literal newRangeError args length 3 ArraySelector args bl length idx bl length idx Literal newRangeError bl begin idx 0 Literal "Invalid string index" Literal "Invalid 2 3	1
MethodDeclaration Modifier Annotation ReferenceType start_with_p FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType arg TernaryExpression name Literal ThreadContext IRubyObject MethodInvocation MethodInvocation MethodInvocation MemberReference context MethodInvocation getRuntime context MethodInvocation getRuntime arg getTrue getFalse	1
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile globalAsgnNode getValueNode context true	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement static public RubyString ReferenceType runtime BasicType size ClassCreator Ruby int ReferenceType MemberReference MethodInvocation ClassCreator Literal RubyString runtime runtime getString ReferenceType MemberReference false ByteList size	0
MethodDeclaration Modifier BasicType getline FormalParameter FormalParameter IOException BadDescriptorException StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement WhileStatement ReturnStatement synchronized public int ReferenceType dst BasicType terminator MethodInvocation MethodInvocation MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference BlockStatement MemberReference ByteList byte checkReadable ensureRead descriptor int totalRead Literal boolean found Literal != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression ! found LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement IfStatement IfStatement totalRead 0 false ungotc - 1 MethodInvocation Assignment Assignment MemberReference Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement MemberReference BlockStatement dst Cast append MemberReference BinaryOperation = MemberReference Literal = ++ totalRead final byte bytes MethodInvocation final int begin BinaryOperation final int end BinaryOperation int len Literal VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression > MemberReference Literal StatementExpression StatementExpression ! found LocalVariableDeclaration IfStatement BasicType MemberReference found == MemberReference MemberReference ungotc - 1 buffer array + MethodInvocation MethodInvocation + MemberReference MethodInvocation 0 BasicType VariableDeclarator && BinaryOperation MemberReference ++ i Assignment MemberReference len 0 MethodInvocation Assignment BasicType VariableDeclarator BinaryOperation BlockStatement byte ungotc ungotc terminator buffer arrayOffset buffer position begin buffer remaining int i MemberReference < MemberReference MemberReference ! found MemberReference BinaryOperation = ++ len dst MemberReference MemberReference append MemberReference MemberReference += int n MethodInvocation <= MemberReference Literal IfStatement BreakStatement begin i end found == MemberReference MemberReference buffer len totalRead len refillBuffer n 0 BinaryOperation BlockStatement ArraySelector bytes terminator && BinaryOperation BinaryOperation ReturnStatement MemberReference < MemberReference Literal < MemberReference Literal Literal i n 0 totalRead 1 - 1	1
MethodDeclaration Modifier ReferenceType getResult ReturnStatement public MemberReference result	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression static public ReferenceType runtime ReferenceType error MethodInvocation Ruby IRubyObject runtime MethodInvocation getGlobalVariables Literal MemberReference set "$!" error	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType to_i FormalParameter ReturnStatement public IRubyObject ReferenceType runtime MethodInvocation Ruby runtime MethodInvocation newFixnum	1
MethodDeclaration Modifier FormalParameter FormalParameter IfStatement public ReferenceType method BasicType value BinaryOperation BlockStatement BlockStatement long && BinaryOperation BinaryOperation StatementExpression SwitchStatement LocalVariableDeclaration IfStatement StatementExpression StatementExpression IfStatement <= MemberReference Literal >= MemberReference Literal MethodInvocation Cast SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement value 5 value - 1 method BasicType MemberReference Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement ThrowStatement Integer index MethodInvocation == MemberReference Literal StatementExpression StatementExpression method loadThis method && BinaryOperation BinaryOperation IfStatement StatementExpression StatementExpression StatementExpression int value - 1 MethodInvocation 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation 4 MethodInvocation 5 MethodInvocation ClassCreator MemberReference get index null Assignment MethodInvocation <= MemberReference MemberReference >= MemberReference MemberReference BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation MethodInvocation method.method MethodInvocation Literal MethodInvocation invokestatic method.method MethodInvocation Literal MethodInvocation invokestatic method.method MethodInvocation Literal MethodInvocation invokestatic method.method MethodInvocation Literal MethodInvocation invokestatic method.method MethodInvocation Literal MethodInvocation invokestatic method.method MethodInvocation Literal MethodInvocation invokestatic method.method MethodInvocation Literal MethodInvocation invokestatic ReferenceType Literal value MemberReference ClassCreator = MemberReference MemberReference put value Integer MAX_VALUE value Integer MIN_VALUE < MemberReference MemberReference StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression method.method MethodInvocation pushInt method.method MemberReference ldc method.method MethodInvocation Literal MethodInvocation invokevirtual ClassReference p ClassReference ClassReference sig ClassReference p "zero" ClassReference ClassReference sig ClassReference p "one" ClassReference ClassReference sig ClassReference p "two" ClassReference ClassReference sig ClassReference p "three" ClassReference ClassReference sig ClassReference p "four" ClassReference ClassReference sig ClassReference p "five" ClassReference ClassReference sig RuntimeException index ReferenceType MemberReference value index index AbstractScript MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation index intValue value scriptCompiler getClassname "getFixnum" ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType Integer ++ method.method Cast pushInt method.method MethodInvocation BinaryOperation MethodInvocation invokevirtual method.method MethodInvocation pushInt method.method Cast pushInt method.method MethodInvocation Literal MethodInvocation invokevirtual ReferenceType ReferenceType BasicType BasicType RubyFixnum RubyFixnum Ruby RubyFixnum RubyFixnum Ruby RubyFixnum RubyFixnum Ruby RubyFixnum RubyFixnum Ruby RubyFixnum RubyFixnum Ruby RubyFixnum RubyFixnum Ruby RubyFixnum RubyFixnum Ruby BasicType MemberReference scriptCompiler getClassname + Literal MemberReference ClassReference ClassReference ClassReference sig index intValue BasicType MemberReference scriptCompiler getClassname "getFixnum" ClassReference ClassReference ClassReference ClassReference sig RubyFixnum Ruby int long int value "getFixnum" index ReferenceType ReferenceType BasicType int value ReferenceType ReferenceType BasicType BasicType RubyFixnum Ruby int RubyFixnum Ruby int int	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast Cast Cast MultipleAsgn19Node Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals Node ArraySelector yyVals ListNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 4 yyTop - 2 yyTop 0 yyTop - 4 yyTop	1
MethodDeclaration Modifier BasicType getInt FormalParameter StatementExpression ReturnStatement final public int BasicType offset MethodInvocation MethodInvocation long MemberReference Literal checkBounds BinaryOperation getInt offset 4 + MemberReference MemberReference address offset	0
MethodDeclaration Modifier ReferenceType ReturnStatement public String MethodInvocation ruby MethodInvocation MethodInvocation MethodInvocation get getInstanceConfig toString	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context Assignment This name Literal ThreadContext MemberReference MethodInvocation = "initialize" memory MemoryPointer MethodInvocation MethodInvocation Literal Literal context getRuntime layout getSize 1 true	0
MethodDeclaration Modifier ReferenceType getBodyNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier Annotation BasicType ReturnStatement public Override int MemberReference ClassIndex OBJECT	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext Literal Literal CompatVersion RUBY1_8 - 8 false	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public Operand Modifier ReferenceType whileNode ReferenceType s MethodInvocation final WhileNode IR_Scope MemberReference MethodInvocation MethodInvocation Literal MethodInvocation s whileNode getConditionNode whileNode getBodyNode true ! whileNode	0
MethodDeclaration Modifier ReferenceType f_sub FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType x ReferenceType y BinaryOperation ReturnStatement MethodInvocation ThreadContext IRubyObject IRubyObject && BinaryOperation BinaryOperation MemberReference x MemberReference Literal MemberReference callMethod instanceof MemberReference ReferenceType == Cast Literal x context "-" y y RubyFixnum ReferenceType MemberReference 0 RubyFixnum y	1
MethodDeclaration Modifier StatementExpression public MemberReference --	0
MethodDeclaration Modifier Annotation ReferenceType wrap FormalParameter FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType io ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation name Literal required Literal frame Literal meta Literal ThreadContext IRubyObject IRubyObject Block Ruby runtime MethodInvocation instance == MemberReference MethodInvocation StatementExpression StatementExpression MemberReference MemberReference MemberReference "wrap" 1 true true recv getRuntime recv runtime MethodInvocation Literal getModule Assignment Assignment context instance block Literal getClass "Zlib" MemberReference MethodInvocation = MemberReference MethodInvocation = instance MemberReference ArrayCreator MemberReference instance MemberReference ArrayCreator MemberReference newInstance recv ReferenceType ArrayInitializer block recv ReferenceType ArrayInitializer block IRubyObject MemberReference IRubyObject MemberReference io io	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override IRubyObject ArrayCreator ReferenceType ArrayInitializer IRubyObject MemberReference MemberReference MemberReference MemberReference variableValueZero variableValueOne variableValueTwo variableValueThree	0
MethodDeclaration Modifier BasicType op_cmp FormalParameter ReturnStatement final public int ReferenceType other MethodInvocation RubyString value MemberReference cmp other value	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement public Override DynamicMethod ReferenceType klazz ReferenceType method ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement RubyModule Method Class parameters MethodInvocation > MemberReference Literal ReturnStatement ReturnStatement method getParameterTypes parameters length 0 ClassCreator ClassCreator ReferenceType MemberReference MemberReference ReferenceType MemberReference MemberReference klazz method klazz method	0
MethodDeclaration Modifier ReferenceType getIterNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject args Cast callAdapter MemberReference MemberReference MemberReference MemberReference MethodInvocation call ReferenceType MethodInvocation context self self args RuntimeHelpers MemberReference MemberReference MemberReference MemberReference MemberReference getBlock ArrayNode getArgsNode runtime context self	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation name Literal rest Literal visibility MemberReference reads MemberReference ThreadContext IRubyObject Visibility visibility MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression context MethodInvocation getRuntime true PRIVATE context getCurrentVisibility BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation getNil int i Literal i args length MemberReference MemberReference MemberReference Literal Literal addAccessor 0 context ArraySelector MethodInvocation MethodInvocation args visibility true false MemberReference asJavaString intern i	1
MethodDeclaration Modifier Annotation ReferenceType pop FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement IfStatement StatementExpression TryStatement ReturnStatement synchronized public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference WhileStatement StatementExpression Cast name ElementArrayValue optional Literal ThreadContext IRubyObject MemberReference boolean should_block Literal == MethodInvocation Literal StatementExpression && MemberReference BinaryOperation ThrowStatement ++ numWaiting BinaryOperation BlockStatement MemberReference ReferenceType MethodInvocation Literal Literal Literal 1 context true Arity MethodInvocation MemberReference Literal Literal checkArgumentCount 1 Assignment ! should_block == MethodInvocation Literal ClassCreator == MethodInvocation Literal TryStatement StatementExpression -- numWaiting IRubyObject entries removeFirst context getRuntime args 0 1 MemberReference MemberReference = entries size 0 ReferenceType MethodInvocation MethodInvocation Literal Literal java_length 0 StatementExpression CatchClause MethodInvocation should_block ! ArraySelector MethodInvocation args RaiseException context getRuntime context MethodInvocation getRuntime empty" false MethodInvocation CatchClauseParameter MemberReference Literal isTrue context MethodInvocation getThread InterruptedException e context 0 This Literal wait_timeout null	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name Literal required Literal compat MemberReference ThreadContext IRubyObject MemberReference MethodInvocation op_and "&" 1 CompatVersion RUBY1_9 context MemberReference MemberReference convertToInteger context other	1
MethodDeclaration Modifier ReferenceType getFirstNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Object ReferenceType self ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation IRubyObject RubyFixnum Cast > MemberReference MemberReference ThrowStatement Integer Cast valueOf ReferenceType MemberReference value Integer MAX_VALUE MethodInvocation BasicType MemberReference RubyFixnum self self MethodInvocation getRuntime int value BinaryOperation newRangeError + BinaryOperation Literal + Literal MemberReference " is too large for Java " value	0
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler context BinaryOperation pushString + Literal Cast "$" ReferenceType MemberReference BackRefNode node	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ForStatement ReturnStatement private static int ReferenceType head ReferenceType Modifier BasicType VariableDeclarator Assignment ForControl BlockStatement MemberReference Enum TypeArgument Enum TypeArgument final int ArrayCreator MemberReference MethodInvocation = VariableDeclaration BinaryOperation MemberReference StatementExpression ? ? BasicType BinaryOperation ArraySelector head BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment int + MemberReference Literal Literal int i Literal i length MemberReference MemberReference = length 1 0 0 ArraySelector ArraySelector MethodInvocation BinaryOperation MemberReference + MemberReference Literal i i 1	0
MethodDeclaration Modifier BasicType longValue FormalParameter FormalParameter ReturnStatement final public long ReferenceType context ReferenceType obj BinaryOperation ThreadContext IRubyObject & MethodInvocation Literal Float Cast BasicType MethodInvocation float RubyNumeric MemberReference num2dbl obj	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement final static public byte BasicType i MethodInvocation int ByteList MethodInvocation plain Integer MethodInvocation MemberReference toHexString toLowerCase i	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression private static ReferenceType context ReferenceType runtime ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ThreadContext Ruby RubyException MethodInvocation String msg MethodInvocation runtime MethodInvocation context String Literal MethodInvocation MethodInvocation MethodInvocation BinaryOperation MethodInvocation format MemberReference print "Exception at - getMetaClass MethodInvocation convertToString getFile + MethodInvocation Literal to_s msg toString getLine 1	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context Modifier ReferenceType block TernaryExpression name Literal frame Literal final ThreadContext final Block MethodInvocation MethodInvocation MethodInvocation "each_pair" true block isGiven MemberReference MemberReference each_pair MethodInvocation This Literal enumeratorize context block context getRuntime "each_pair"	1
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression StatementExpression static public ReferenceType runtime MethodInvocation MethodInvocation MethodInvocation Ruby runtime MethodInvocation getClassClass runtime MethodInvocation getThread runtime MethodInvocation getString ClassReference defineAnnotatedMethods ClassReference defineAnnotatedMethods ClassReference defineAnnotatedMethods ReferenceType ReferenceType ReferenceType	0
MethodDeclaration Modifier Annotation ReferenceType get ReturnStatement public Override IRubyObject MethodInvocation runtime MethodInvocation newFixnum runtime getSafeLevel	0
MethodDeclaration Modifier ReferenceType getConstantAt FormalParameter LocalVariableDeclaration ReturnStatement public IRubyObject ReferenceType name ReferenceType VariableDeclarator TernaryExpression String IRubyObject value MethodInvocation BinaryOperation MethodInvocation MemberReference MemberReference == MemberReference MemberReference MethodInvocation MemberReference value name value UNDEF getRuntime name	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement protected IRubyObject ReferenceType caller ReferenceType selfType ReferenceType args ReferenceType context ReferenceType self ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement Assignment MethodInvocation IRubyObject RubyClass IRubyObject ThreadContext IRubyObject entry MethodInvocation DynamicMethod method MemberReference MemberReference MemberReference ReturnStatement MemberReference MemberReference = method MemberReference MemberReference MemberReference MemberReference MemberReference call selfType MemberReference entry method method caller MethodInvocation cache entry context self selfType methodName args methodName MemberReference MemberReference MemberReference MemberReference context self method args	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter ReturnStatement final public short BasicType array BasicType offset Cast byte int BasicType BinaryOperation short | BinaryOperation BinaryOperation & MemberReference Literal << BinaryOperation Literal ArraySelector array 0xff & MemberReference Literal 8 MemberReference ArraySelector array 0xff offset BinaryOperation + MemberReference Literal offset 1	0
MethodDeclaration Modifier ReferenceType getClassLoader ReturnStatement public ClassLoader MemberReference classLoader	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator MethodInvocation Node BodyCompiler boolean LocalAsgnNode localAsgnNode Cast context MethodInvocation getVariableCompiler ReferenceType MemberReference MethodInvocation MethodInvocation MemberReference assignLocalVariable LocalAsgnNode node localAsgnNode getIndex localAsgnNode expr	0
MethodDeclaration Modifier Annotation FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression private Deprecated ReferenceType mv ReferenceType afterCall MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation SkinnyMethodAdapter Label mv MemberReference aload mv MemberReference aload mv MethodInvocation Literal MethodInvocation invokevirtual Label okCall ClassCreator MemberReference MemberReference MemberReference mv MemberReference label mv MemberReference aload mv MemberReference aload mv MemberReference aload mv MemberReference aload mv MemberReference aload mv MemberReference aload mv MethodInvocation Literal MethodInvocation invokevirtual DISPATCHER_NAME_INDEX ClassReference p ClassReference MethodInvocation sig ReferenceType mv afterCall okCall okCall DISPATCHER_THREADCONTEXT_INDEX DISPATCHER_NAME_INDEX ClassReference p "call" ClassReference MethodInvocation sig ReferenceType ReferenceType ClassReference params Label ReferenceType ReferenceType ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference params RubyModule DynamicMethod ReferenceType DynamicMethod IRubyObject ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType String ThreadContext IRubyObject RubyModule String IRubyObject Block	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ThrowStatement public IRubyObject ReferenceType internedName ReferenceType result ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation String IRubyObject RubyModule module != Assignment Literal StatementExpression ReturnStatement runtime Literal newTypeError MemberReference MethodInvocation = null MethodInvocation MemberReference "no class/module to define constant" module MethodInvocation MethodInvocation getCurrentScope module MemberReference MemberReference fastSetConstant result getModule internedName result	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter WhileStatement private IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType Literal BlockStatement Ruby ThreadContext IRubyObject Block true LocalVariableDeclaration LocalVariableDeclaration TryStatement ReferenceType VariableDeclarator BasicType VariableDeclarator ReturnStatement CatchClause CatchClause CatchClause IfStatement IRubyObject globalExceptionState MethodInvocation boolean anotherExceptionRaised Literal MethodInvocation CatchClauseParameter TryStatement CatchClauseParameter ThrowStatement CatchClauseParameter TryStatement MemberReference StatementExpression runtime MethodInvocation getGlobalVariables false MemberReference MemberReference MemberReference MemberReference RaiseException raiseJump ReturnStatement CatchClause CatchClause MemberReference Throwable t ReturnStatement CatchClause CatchClause ! anotherExceptionRaised MethodInvocation Literal get runtime context self MethodInvocation CatchClauseParameter CatchClauseParameter StatementExpression ThrowStatement MethodInvocation CatchClauseParameter CatchClauseParameter StatementExpression ThrowStatement runtime MethodInvocation getGlobalVariables "$!" MemberReference MemberReference MemberReference MemberReference MemberReference handleException JumpException.RetryJump rj RaiseException je Assignment MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference JumpException.RetryJump rj RaiseException je Assignment MemberReference Literal MemberReference set runtime context self raiseJump MemberReference Literal = je runtime context self t MemberReference Literal = je "$!" globalExceptionState anotherExceptionRaised true anotherExceptionRaised true	1
MethodDeclaration Modifier ReferenceType getFile ThrowStatement public String ClassCreator ReferenceType Literal UnsupportedOperationException "Not supported	0
MethodDeclaration Modifier check IfStatement private BinaryOperation ThrowStatement == MemberReference Literal MethodInvocation str null MethodInvocation getRuntime Literal newArgumentError "uninitialized object"	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name Literal required Literal compat MemberReference ThreadContext IRubyObject MemberReference MethodInvocation op_or "|" 1 CompatVersion RUBY1_9 context MemberReference MemberReference convertToInteger context other	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override IRubyObject MethodInvocation MethodInvocation MethodInvocation javaToRuby getRuntime Long MemberReference valueOf value	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name args	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement static public int BasicType bytes BasicType p BasicType len ReferenceType enc BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation StatementExpression MemberReference byte int int Encoding int olen Literal int c && BinaryOperation BinaryOperation MemberReference olen 0 && BinaryOperation MethodInvocation < MemberReference Literal ++ olen > MemberReference Literal enc Assignment isDigit c '8' -- len 0 MemberReference BinaryOperation = c & MemberReference Literal ArraySelector bytes 0xff MemberReference ++ p	1
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression ReturnStatement public Operand ReferenceType Assignment This Map TypeArgument TypeArgument MemberReference Cast = ReferenceType ReferenceType ReferenceType MethodInvocation Operand Operand MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter IfStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType unusedBlock BinaryOperation BlockStatement MethodInvocation MethodInvocation name Literal required Literal optional Literal frame Literal visibility MemberReference ThreadContext IRubyObject Block || MethodInvocation MethodInvocation ThrowStatement MemberReference MemberReference MemberReference BinaryOperation init MethodInvocation getRuntime "initialize" 2 1 true Visibility PRIVATE ! begin isNil ! end isNil MethodInvocation context ArraySelector args ArraySelector args && BinaryOperation MemberReference getNil MethodInvocation getRuntime Literal Literal > MemberReference Literal ArraySelector MethodInvocation args Literal Literal newNameError 0 1 args length 2 Literal isTrue "initialize" 2	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal getOperatorCallNode support Cast Literal Cast MethodInvocation getOperatorCallNode "-@" ReferenceType MemberReference "**" ReferenceType MemberReference getPosition Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier warn FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression public ReferenceType id ReferenceType message ReferenceType data ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation String Object ID == MemberReference MemberReference StatementExpression StatementExpression runtime MethodInvocation getWarnings id Assignment Assignment MemberReference MemberReference MemberReference warn MemberReference MemberReference = MemberReference MemberReference = message data ID ID	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration WhileStatement StatementExpression ThrowStatement private IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ClassCreator Ruby ThreadContext IRubyObject Block Throwable RescueBodyNode cRescueNode MemberReference != MemberReference Literal LocalVariableDeclaration IfStatement StatementExpression MethodInvocation ReferenceType Literal rescueNode cRescueNode null ReferenceType VariableDeclarator MethodInvocation BlockStatement Assignment MemberReference RuntimeException failed" IRubyObject exceptions MethodInvocation RuntimeHelpers MethodInvocation MemberReference MemberReference MemberReference StatementExpression ReturnStatement MemberReference MethodInvocation = MemberReference MemberReference MemberReference MemberReference MemberReference isTrue exceptions context MethodInvocation MethodInvocation cRescueNode cRescueNode cRescueNode runtime context self runtime MethodInvocation getGlobalVariables cRescueNode MemberReference MemberReference MemberReference MemberReference Literal MethodInvocation set runtime context self "$!" JavaUtil MemberReference MemberReference convertJavaToUsableRubyObject runtime	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType runtime ReferenceType ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby RubyClass RubyException instance ClassCreator instance MemberReference instance ReferenceType MemberReference MemberReference runtime	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject receiver MethodInvocation IRubyObject arg MethodInvocation Block block MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration SwitchStatement callAdapter MemberReference MemberReference MemberReference MemberReference MemberReference call MethodInvocation getReceiverNode MethodInvocation getArgsNode RuntimeHelpers MemberReference MemberReference MemberReference getBlock arg RubyArray ReferenceType VariableDeclarator MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase context self receiver arg block MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference context self RubyArray nodes Cast nodes size Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ReturnStatement runtime context self runtime context self ReferenceType MemberReference 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation RubyArray arg callAdapter MemberReference MemberReference MemberReference MemberReference call callAdapter MemberReference MemberReference MemberReference MethodInvocation MemberReference call callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MemberReference call callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation MemberReference call callAdapter MemberReference MemberReference MemberReference MethodInvocation MemberReference call context self receiver block context self receiver nodes Literal eltInternal block context self receiver nodes Literal eltInternal nodes Literal eltInternal block context self receiver nodes Literal eltInternal nodes Literal eltInternal nodes Literal eltInternal block context self receiver nodes block 0 0 1 0 1 2	0
MethodDeclaration Modifier flushWrite IOException BadDescriptorException IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement StatementExpression private BinaryOperation ReturnStatement BasicType VariableDeclarator MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation || BinaryOperation BinaryOperation int len MethodInvocation buffer flip int n MethodInvocation != MemberReference MemberReference buffer clear || MemberReference MethodInvocation == MethodInvocation Literal buffer position descriptor MemberReference write n len reading ! modes isWritable buffer position 0 buffer	1
MethodDeclaration Modifier Annotation ReferenceType rand FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair RubyNumeric ReferenceType context ReferenceType recv ReferenceType VariableDeclarator MethodInvocation name Literal module Literal visibility MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation RubyFloat MemberReference MethodInvocation newFloat true PRIVATE context getRuntime runtime runtime MethodInvocation	0
MethodDeclaration Modifier if_icmplt FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation Label MethodInvocation getMethodVisitor MemberReference MemberReference arg0	1
MethodDeclaration Modifier Annotation ReferenceType newInstanceBang FormalParameter FormalParameter FormalParameter FormalParameter IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType num ReferenceType den BinaryOperation StatementExpression BinaryOperation StatementExpression ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement ClassCreator name Literal meta Literal visibility MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject IRubyObject instanceof MemberReference ReferenceType Assignment instanceof MemberReference ReferenceType Assignment Ruby runtime MethodInvocation IRubyObject res MethodInvocation == MemberReference MethodInvocation StatementExpression StatementExpression BinaryOperation BlockStatement ReferenceType MemberReference MemberReference MemberReference MemberReference true Visibility PRIVATE CompatVersion RUBY1_8 num RubyInteger MemberReference MethodInvocation = den RubyInteger MemberReference MethodInvocation = context getRuntime MemberReference MemberReference MethodInvocation f_cmp res RubyFixnum MemberReference minus_one Assignment Assignment == MemberReference MethodInvocation ThrowStatement RubyRational runtime recv num den num MemberReference MemberReference f_to_i den MemberReference MemberReference f_to_i context den RubyFixnum MemberReference zero runtime MemberReference MethodInvocation = MemberReference MethodInvocation = res RubyFixnum MemberReference zero MethodInvocation context num context den runtime num MemberReference MemberReference f_negate den MemberReference MemberReference f_negate runtime runtime context num context den	1
MethodDeclaration Modifier Annotation Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject This frame Literal visibility MemberReference true Visibility PRIVATE	0
MethodDeclaration Modifier FormalParameter FormalParameter SwitchStatement protected BasicType depth BasicType index MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase int int index Literal StatementExpression StatementExpression StatementExpression BreakStatement Literal StatementExpression StatementExpression StatementExpression BreakStatement Literal StatementExpression StatementExpression StatementExpression BreakStatement Literal StatementExpression StatementExpression StatementExpression BreakStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression 0 MethodInvocation MethodInvocation MethodInvocation 1 MethodInvocation MethodInvocation MethodInvocation 2 MethodInvocation MethodInvocation MethodInvocation 3 MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference unwrapParentScopes methodCompiler loadNil method MethodInvocation Literal MethodInvocation invokevirtual MemberReference unwrapParentScopes methodCompiler loadNil method MethodInvocation Literal MethodInvocation invokevirtual MemberReference unwrapParentScopes methodCompiler loadNil method MethodInvocation Literal MethodInvocation invokevirtual MemberReference unwrapParentScopes methodCompiler loadNil method MethodInvocation Literal MethodInvocation invokevirtual method MethodInvocation aload method MemberReference pushInt method MemberReference pushInt methodCompiler loadNil method MethodInvocation Literal MethodInvocation invokevirtual depth ClassReference p ClassReference ClassReference sig depth ClassReference p ClassReference ClassReference sig depth ClassReference p ClassReference ClassReference sig depth ClassReference p ClassReference ClassReference sig methodCompiler getDynamicScopeIndex index depth ClassReference p ClassReference MethodInvocation sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType MemberReference MemberReference ClassReference params DynamicScope IRubyObject IRubyObject DynamicScope IRubyObject IRubyObject DynamicScope IRubyObject IRubyObject DynamicScope IRubyObject IRubyObject DynamicScope IRubyObject Integer TYPE Integer TYPE ReferenceType IRubyObject	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal Literal Cast Literal Cast new_args Cast getPosition null null ReferenceType MemberReference null ReferenceType MemberReference ReferenceType MemberReference RestArgNode ArraySelector yyVals BlockArgNode ArraySelector yyVals RestArgNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType chardev_p FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType filename ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal required Literal module Literal IRubyObject IRubyObject Ruby runtime MethodInvocation JRubyFile file MethodInvocation runtime BinaryOperation newBoolean 1 true recv getRuntime MemberReference file && MethodInvocation MethodInvocation filename file exists runtime MethodInvocation MethodInvocation getPosix MethodInvocation stat file getAbsolutePath	1
MethodDeclaration Modifier BasicType isExpression FormalParameter DoStatement private boolean ReferenceType node Literal BlockStatement Node true IfStatement SwitchStatement BinaryOperation ReturnStatement MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase == MemberReference Literal Literal node BEGINNODE StatementExpression BreakStatement BLOCKNODE StatementExpression BreakStatement BREAKNODE StatementExpression BreakStatement CLASSNODE DEFNNODE DEFSNODE MODULENODE NEXTNODE REDONODE RETRYNODE RETURNNODE UNTILNODE WHILENODE ReturnStatement IFNODE ReturnStatement NEWLINENODE StatementExpression BreakStatement ReturnStatement node null true Assignment Assignment Assignment Literal BinaryOperation Assignment Literal MemberReference Cast = MemberReference Cast = MemberReference Cast = false && MethodInvocation MethodInvocation MemberReference Cast = true node ReferenceType MemberReference node ReferenceType MemberReference node ReferenceType MemberReference Cast isExpression Cast isExpression node ReferenceType MemberReference BeginNode node BlockNode node BreakNode node ReferenceType MemberReference ReferenceType MemberReference NewlineNode node IfNode node IfNode node	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int support pushBlockScope yyVal	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression public ReferenceType objectClass ReferenceType MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation RubyClass IRubyObject MemberReference MemberReference frame MethodInvocation frame MemberReference MethodInvocation MethodInvocation getCurrentScope Visibility PRIVATE objectClass MemberReference objectClass	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 MethodInvocation MemberReference ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject handle TernaryExpression MethodInvocation MethodInvocation invoke self MemberReference Literal Cast MemberReference MemberReference isStatic null ReferenceType MemberReference arg0 arg1 JavaObjectWrapper self	0
MethodDeclaration Modifier ReferenceType getName ReturnStatement public String MemberReference identifier	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation ReturnStatement ForControl BlockStatement MemberReference name Literal compat MemberReference ThreadContext RubyHash hash MethodInvocation == MethodInvocation Literal MemberReference VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression hash CompatVersion RUBY1_9 RubyHash MethodInvocation pattern numberOfNames 0 hash ReferenceType VariableDeclarator i hasNext ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator EnhancedForControl StatementExpression MethodInvocation getRuntime Iterator TypeArgument i MethodInvocation NameEntry e MethodInvocation int backrefs MethodInvocation RubyArray ary MethodInvocation VariableDeclaration MemberReference MethodInvocation hash MethodInvocation MemberReference fastASet ReferenceType pattern namedBackrefIterator i next e MethodInvocation getRuntime BasicType VariableDeclarator backrefs ary MethodInvocation append RubyString MethodInvocation MethodInvocation MemberReference MemberReference BinaryOperation ary NameEntry MemberReference newArray int backref RubyFixnum MethodInvocation MemberReference newFixnum MemberReference freeze getRuntime e name e nameP - MemberReference MemberReference backrefs length getRuntime backref context e nameEnd e nameP	1
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType block MethodInvocation ThreadContext IRubyObject String Block self MethodInvocation getMetaClass MemberReference MemberReference MemberReference MemberReference context self name block	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType scope ReferenceType start ReferenceType end MethodInvocation Label Label method Literal MethodInvocation Literal MemberReference MemberReference MethodInvocation ClassReference ci null start end methodCompiler getDynamicScopeIndex ReferenceType DynamicScope	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair RubyBoolean MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation newBoolean Modifier MethodInvocation isProtected MethodInvocation javaClass getModifiers	1
MethodDeclaration Modifier Annotation ReferenceType StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject MethodInvocation This name Literal compat MemberReference modifyCheck CompatVersion RUBY1_9	0
MethodDeclaration Modifier Annotation ReferenceType group IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject BinaryOperation BlockStatement MemberReference name Literal == MemberReference Literal ReturnStatement null MethodInvocation MethodInvocation getRuntime getNil	0
MethodDeclaration Modifier Annotation ReferenceType toString LocalVariableDeclaration StatementExpression ForStatement StatementExpression ReturnStatement final public Override String ReferenceType VariableDeclarator MethodInvocation ForControl BlockStatement MethodInvocation MethodInvocation StringBuilder sb ClassCreator sb Literal append VariableDeclaration BinaryOperation MemberReference StatementExpression IfStatement sb BinaryOperation append sb toString ReferenceType BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation BinaryOperation BlockStatement + BinaryOperation Literal StringBuilder int i Literal i parameterTypes length sb MemberReference append < MemberReference BinaryOperation StatementExpression + Literal MethodInvocation "]" 0 ArraySelector MethodInvocation MethodInvocation parameterTypes i - MemberReference Literal MethodInvocation "] returnType MethodInvocation toString MemberReference toString toLowerCase parameterTypes length 1 sb Literal append toLowerCase i ", "	0
MethodDeclaration Modifier Annotation ReferenceType module_eval FormalParameter FormalParameter FormalParameter ReturnStatement public Deprecated IRubyObject ReferenceType context ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject Block MemberReference This MemberReference MemberReference specificEval context args block	1
MethodDeclaration Modifier define FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement public ReferenceType module ReferenceType desc ReferenceType ReferenceType VariableDeclarator MethodInvocation BlockStatement BinaryOperation BlockStatement RubyModule JavaMethodDescriptor DynamicMethod JRubyMethod jrubyMethod MemberReference jrubyMethod frame ForStatement || BinaryOperation BinaryOperation LocalVariableDeclaration IfStatement desc anno EnhancedForControl BlockStatement == MethodInvocation MemberReference == MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement VariableDeclaration MethodInvocation StatementExpression jrubyMethod compat CompatVersion module MethodInvocation MethodInvocation getRuntime jrubyMethod compat RubyModule jrubyMethod meta StatementExpression StatementExpression LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration IfStatement IfStatement IfStatement ReferenceType VariableDeclarator jrubyMethod name MethodInvocation getInstanceConfig Assignment MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement MethodInvocation BlockStatement String name MemberReference add MemberReference MethodInvocation = MemberReference String baseName == MethodInvocation Literal StatementExpression StatementExpression StatementExpression ForStatement > MethodInvocation Literal ForStatement String baseName == MethodInvocation Literal StatementExpression StatementExpression StatementExpression ForStatement > MethodInvocation Literal ForStatement jrubyMethod module StatementExpression LocalVariableDeclaration StatementExpression IfStatement IfStatement name module jrubyMethod MemberReference name 0 Assignment MethodInvocation Assignment EnhancedForControl BlockStatement jrubyMethod MemberReference alias 0 EnhancedForControl BlockStatement jrubyMethod MemberReference name 0 Assignment MethodInvocation Assignment EnhancedForControl BlockStatement jrubyMethod MemberReference alias 0 EnhancedForControl BlockStatement Assignment ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement length MemberReference MemberReference = MemberReference MemberReference addMethod MemberReference MethodInvocation = VariableDeclaration MethodInvocation StatementExpression length VariableDeclaration MethodInvocation StatementExpression length MemberReference MemberReference = module MemberReference MemberReference addMethod MemberReference MethodInvocation = VariableDeclaration MethodInvocation StatementExpression length VariableDeclaration MethodInvocation StatementExpression MemberReference MethodInvocation = DynamicMethod MethodInvocation MemberReference setVisibility == MethodInvocation Literal StatementExpression StatementExpression StatementExpression ForStatement > MethodInvocation Literal ForStatement baseName desc name baseName baseName jrubyMethod ArraySelector name ReferenceType VariableDeclarator jrubyMethod name MethodInvocation ReferenceType VariableDeclarator jrubyMethod alias MethodInvocation baseName desc name baseName baseName jrubyMethod ArraySelector name ReferenceType VariableDeclarator jrubyMethod name MethodInvocation ReferenceType VariableDeclarator jrubyMethod alias MethodInvocation module dup PUBLIC jrubyMethod MemberReference name 0 Assignment MethodInvocation Assignment EnhancedForControl BlockStatement jrubyMethod MemberReference alias 0 EnhancedForControl BlockStatement Literal String name MemberReference MemberReference addMethod String alias MemberReference MemberReference Literal String name module MemberReference MemberReference addMethod String alias module MemberReference MemberReference length MemberReference MemberReference = MemberReference MemberReference addMethod MemberReference MethodInvocation = VariableDeclaration MethodInvocation StatementExpression length VariableDeclaration MethodInvocation StatementExpression 0 name alias baseName 0 name alias baseName baseName desc name desc name baseName jrubyMethod ArraySelector name ReferenceType VariableDeclarator jrubyMethod name MethodInvocation ReferenceType VariableDeclarator jrubyMethod alias MethodInvocation Literal String name MemberReference MemberReference addMethod String alias MemberReference MemberReference 0 name alias baseName	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType recv ReferenceType real ReferenceType image MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject MemberReference MemberReference MemberReference MemberReference newInstance context recv real image	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException MethodInvocation message Literal fastGetClass	0
MethodDeclaration Modifier ReferenceType last_match_s FormalParameter FormalParameter FormalParameter SwitchStatement static public IRubyObject ReferenceType context ReferenceType recv ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject IRubyObject args length Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 0 MethodInvocation 1 MethodInvocation MethodInvocation Literal MemberReference MemberReference last_match_s MemberReference MemberReference MemberReference last_match_s Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null context recv context recv ArraySelector args context getRuntime args length 0 1 Literal 0	1
MethodDeclaration Modifier visit FormalParameter FormalParameter StatementExpression public ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject self MemberReference MemberReference MemberReference op_aset context key value	0
MethodDeclaration Modifier ReferenceType getValue FormalParameter LocalVariableDeclaration ReturnStatement public IRubyObject ReferenceType context ReferenceType VariableDeclarator TernaryExpression ThreadContext IRubyObject value MemberReference MethodInvocation MemberReference MethodInvocation MemberReference MemberReference value MemberReference MemberReference context value context name	0
MethodDeclaration Modifier Annotation write FormalParameter IOException StatementExpression public Override Modifier BasicType b MethodInvocation final byte MemberReference Literal MemberReference write b 0 b length	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args BinaryOperation StatementExpression MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject == MemberReference Literal MethodInvocation compiledMethod MemberReference MemberReference MemberReference MemberReference MemberReference call compiledMethod null initializeMethod context self clazz name args	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext MemberReference This This f_mul CompatVersion RUBY1_9 context	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType block ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject String IRubyObject IRubyObject IRubyObject Block DynamicMethod method MethodInvocation MemberReference ReturnStatement method MemberReference MemberReference This MemberReference MemberReference MemberReference MemberReference MemberReference call MemberReference searchMethod method MethodInvocation context self name arg0 arg1 arg2 block name RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference context self method getVisibility name CallType FUNCTIONAL arg0 arg1 arg2 block	0
MethodDeclaration Modifier TryStatement public StatementExpression CatchClause MethodInvocation CatchClauseParameter StatementExpression StatementExpression runtime Literal RaiseException e MethodInvocation MethodInvocation ''" Literal ClassReference MethodInvocation assertEquals Literal MethodInvocation "Empty library is not exception should have been ReferenceType e getClass "Empty library is not exception should only be RaiseException with no root cause" e getCause RaiseException	0
MethodDeclaration Modifier Annotation BasicType ReturnStatement public Override boolean Literal true	0
MethodDeclaration Modifier ReferenceType yield FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement public IRubyObject ReferenceType context ReferenceType value ReferenceType self ReferenceType BasicType ReferenceType ReferenceType type BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator IfStatement ReturnStatement CatchClause StatementExpression ThreadContext IRubyObject IRubyObject RubyModule boolean Block ReferenceType == MemberReference Literal StatementExpression Visibility oldVis MethodInvocation MethodInvocation Ruby runtime MethodInvocation MemberReference BlockStatement MethodInvocation CatchClauseParameter ReturnStatement MethodInvocation Type null Assignment MethodInvocation getFrame MemberReference MemberReference MemberReference pre context getRuntime ! noargblock StatementExpression StatementExpression MemberReference MemberReference JumpException.NextJump nj MethodInvocation MemberReference MemberReference MemberReference MemberReference post MemberReference MethodInvocation = getVisibility context Assignment MethodInvocation context self MemberReference MemberReference MemberReference handleNextJump context oldVis self MemberReference MemberReference TernaryExpression = assigner MemberReference MemberReference MemberReference MemberReference MemberReference context nj type value MemberReference MethodInvocation MethodInvocation runtime context self value Block assigner MemberReference MemberReference assigner MemberReference MemberReference convertToArray runtime value runtime value	0
MethodDeclaration Modifier Annotation ReferenceType op_or FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair RubyBoolean ReferenceType recv ReferenceType obj MethodInvocation name Literal required Literal IRubyObject IRubyObject recv MethodInvocation getRuntime "|" 1 MethodInvocation newBoolean obj isTrue	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement final public RubyRegexp ReferenceType runtime ReferenceType name BasicType options MethodInvocation Ruby String int runtimeCache MemberReference Literal MemberReference MemberReference runtime 8 name options	0
MethodDeclaration Modifier Annotation Annotation ReferenceType FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject ReferenceType context BinaryOperation ReturnStatement SuperMethodInvocation name Literal compat MemberReference ThreadContext || MethodInvocation MethodInvocation MethodInvocation MemberReference CompatVersion RUBY1_9 Double MemberReference isInfinite Double MemberReference isNaN RubyFixnum MethodInvocation one context value value context getRuntime	1
MethodDeclaration Modifier FormalParameter IfStatement public BasicType BinaryOperation BlockStatement IfStatement boolean && MemberReference MethodInvocation StatementExpression BinaryOperation BlockStatement ! MethodInvocation && MemberReference MethodInvocation StatementExpression lock ! MethodInvocation unlock	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType defaultValue MethodInvocation Assignment Assignment MemberReference name Literal required Literal final IRubyObject modify MemberReference MemberReference = MemberReference MemberReference &= ifNone 1 ifNone defaultValue flags ~ PROCDEFAULT_HASH_F	1
MethodDeclaration Modifier StatementExpression private MethodInvocation	0
MethodDeclaration Modifier FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ForStatement ForStatement ForStatement ForStatement ForStatement ForStatement public ReferenceType ReferenceType clazz ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation EnhancedForControl BlockStatement EnhancedForControl BlockStatement EnhancedForControl BlockStatement EnhancedForControl BlockStatement EnhancedForControl BlockStatement EnhancedForControl BlockStatement RubyModule Class MethodFactory MethodInvocation RubyModule ReferenceType ClassCreator MemberReference VariableDeclaration MethodInvocation StatementExpression VariableDeclaration MethodInvocation StatementExpression VariableDeclaration MethodInvocation StatementExpression VariableDeclaration MethodInvocation StatementExpression VariableDeclaration MethodInvocation StatementExpression VariableDeclaration MethodInvocation StatementExpression MethodFactory MethodInvocation ReferenceType clazz ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getRuntime RubyModule ReferenceType Map ReferenceType entry entrySet MethodInvocation MethodInvocation MemberReference Map ReferenceType entry entrySet MethodInvocation MethodInvocation MemberReference Map ReferenceType entry entrySet MethodInvocation MethodInvocation MemberReference Map ReferenceType entry entrySet MethodInvocation MethodInvocation MemberReference Map ReferenceType entry entrySet MethodInvocation MethodInvocation MemberReference Map ReferenceType entry entrySet MethodInvocation MethodInvocation MemberReference getJRubyClassLoader Entry TypeArgument TypeArgument entry getKey entry getValue Entry TypeArgument TypeArgument entry getKey entry getValue Entry TypeArgument TypeArgument entry getKey entry getValue Entry TypeArgument TypeArgument entry getKey entry getValue Entry TypeArgument TypeArgument entry getKey entry getValue Entry TypeArgument TypeArgument entry getKey entry getValue ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType String List TypeArgument String List TypeArgument String List TypeArgument String List TypeArgument String List TypeArgument String List TypeArgument ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType JavaMethodDescriptor JavaMethodDescriptor JavaMethodDescriptor JavaMethodDescriptor JavaMethodDescriptor JavaMethodDescriptor	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType block MethodInvocation name Literal frame Literal reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject Block MemberReference MemberReference MemberReference Literal true BACKREF BACKREF CompatVersion RUBY1_8 context arg0 block false	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block MethodInvocation name ElementArrayValue frame Literal compat MemberReference ThreadContext IRubyObject final Block MemberReference MemberReference MemberReference Literal Literal true CompatVersion RUBY1_9 context self block "map" "map"	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast new_colon3 Cast getPosition ReferenceType Cast ReferenceType MemberReference String ReferenceType MemberReference Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation && BinaryOperation MethodInvocation MethodInvocation runtime getFalse "eql?" CompatVersion RUBY1_8 context getRuntime instanceof MemberReference ReferenceType value Cast equal runtime getTrue other RubyString ReferenceType MemberReference RubyString other	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal required Literal optional Literal ThreadContext IRubyObject final Ruby runtime MethodInvocation final IRubyObject fieldName MemberReference MemberReference MemberReference checkFieldName instanceof MemberReference ReferenceType ThrowStatement int strlen MethodInvocation int offset MethodInvocation Type type Cast MemberReference MemberReference ClassCreator Literal MemberReference storeField 2 1 context getRuntime ArraySelector args runtime fieldName ArraySelector args RubyInteger MethodInvocation Util MemberReference int32Value MemberReference Literal Literal calculateOffset ReferenceType MethodInvocation runtime ArraySelector args ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference 1 strlen Literal Literal runtime BinaryOperation newTypeError ArraySelector args args 2 1 Type context MethodInvocation MethodInvocation MethodInvocation getRuntime Literal fieldName type ++ fieldCount offset strlen 0 1 + BinaryOperation Literal Literal Literal fastGetModule Literal fastGetClass Literal fastFetchConstant 0 + Literal MemberReference " (expected 1 "wrong argument type " ArraySelector MethodInvocation MethodInvocation args Literal getMetaClass getName 1	1
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement ReturnStatement public IRubyObject BasicType intIndex BinaryOperation BlockStatement MethodInvocation int || BinaryOperation BinaryOperation ThrowStatement JavaUtil MethodInvocation MemberReference MethodInvocation MemberReference < MemberReference Literal >= MemberReference MethodInvocation MethodInvocation getRuntime getValue intIndex intIndex 0 intIndex getLength MethodInvocation getRuntime BinaryOperation newArgumentError + BinaryOperation Literal + BinaryOperation MethodInvocation ")" + BinaryOperation Literal getLength + Literal MemberReference " for length " "index out of bounds for java array (" intIndex	0
MethodDeclaration Modifier ReferenceType ReturnStatement private static final ArrayIO ClassCreator ReferenceType	1
MethodDeclaration Modifier Annotation ReferenceType s_readline FormalParameter IOException ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv MethodInvocation name Literal module Literal visibility MemberReference IRubyObject MemberReference MethodInvocation MethodInvocation s_readline "readline" true Visibility PRIVATE recv RubyString MethodInvocation newEmptyString recv MethodInvocation getRuntime recv getRuntime getFalse	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType rbLength TernaryExpression name Literal ThreadContext IRubyObject MethodInvocation MethodInvocation MethodInvocation ! rbLength isNil MemoryUtil MethodInvocation MethodInvocation Literal MethodInvocation getTaintedByteString MemoryUtil MethodInvocation MethodInvocation Literal getTaintedString context getRuntime getMemoryIO 0 Util MemberReference int32Value context getRuntime getMemoryIO 0 rbLength	1
MethodDeclaration Modifier ReferenceType unmarshalFrom FormalParameter java.io.IOException LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement LocalVariableDeclaration StatementExpression ForStatement ReturnStatement static public ReferenceType input ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator MethodInvocation ForControl BlockStatement MemberReference Ruby runtime MethodInvocation RubySymbol className Cast RubyClass MethodInvocation == MemberReference Literal ThrowStatement RubyArray MethodInvocation int len MethodInvocation IRubyObject values ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression result MethodInvocation input MemberReference VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement StatementExpression result input getRuntime ReferenceType MethodInvocation MemberReference MethodInvocation null MethodInvocation MemberReference MemberReference members input ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment MemberReference MemberReference MemberReference newStruct result BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation RubySymbol input runtime className asJavaString runtime BinaryOperation MethodInvocation newNameError Block IRubyObject len int i Literal i len MemberReference MethodInvocation = values Block int i Literal i len IRubyObject slot MethodInvocation ! MethodInvocation MethodInvocation MemberReference eltInternal ThrowStatement result MethodInvocation MethodInvocation + Literal MemberReference className asJavaString 0 ArraySelector values runtime getNil 0 input toString MethodInvocation equals i MethodInvocation runtime MemberReference newFixnum input "uninitialized constant " className MemberReference slot toString runtime BinaryOperation newTypeError i i + BinaryOperation Literal + BinaryOperation MethodInvocation ")" + BinaryOperation Literal MemberReference eltInternal + BinaryOperation MemberReference " for :" i + BinaryOperation Literal slot + Literal MethodInvocation " not compatible " getName	0
MethodDeclaration Modifier Annotation ReferenceType seek FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator Cast name Literal required Literal optional Literal ThreadContext IRubyObject IRubyObject ArgsFileData data MethodInvocation ReferenceType MemberReference 1 1 MemberReference MemberReference Literal getData RubyIO data currentFile context recv "no stream to	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Deprecated IncludedModuleWrapper ReferenceType superClazz ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference RubyClass IncludedModuleWrapper includedModule ClassCreator != MethodInvocation Literal StatementExpression includedModule ReferenceType MethodInvocation MemberReference This getSuperClass null MethodInvocation IncludedModuleWrapper getRuntime superClazz includedModule MethodInvocation includeModule getSuperClass	1
MethodDeclaration Modifier Annotation ReferenceType LocalVariableDeclaration ReturnStatement public Override Class TypeArgument ReferenceType VariableDeclarator TernaryExpression ? Object MethodInvocation BinaryOperation MethodInvocation MemberReference dataGetStruct != MemberReference Literal getClass Void TYPE null	0
MethodDeclaration Modifier ReferenceType op_aset FormalParameter FormalParameter FormalParameter StatementExpression IfStatement ReturnStatement private IRubyObject ReferenceType context BasicType idx ReferenceType arg1 Assignment BinaryOperation BlockStatement BlockStatement MemberReference ThreadContext int IRubyObject MemberReference MethodInvocation = instanceof MemberReference ReferenceType StatementExpression StatementExpression StatementExpression arg1 idx MemberReference MemberReference arg1 RubyFixnum MethodInvocation MethodInvocation MethodInvocation idx value realSize modify value MemberReference MethodInvocation set MemberReference Literal MethodInvocation replaceInternal idx RubyNumeric Cast fix2int idx 1 arg1 convertToString ReferenceType MemberReference RubyFixnum arg1	1
MethodDeclaration Modifier post FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression protected ReferenceType context ReferenceType ReferenceType ReferenceType MethodInvocation MethodInvocation ThreadContext Visibility MethodInvocation getFrame context MemberReference MemberReference MemberReference setVisibility	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement private ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean final AttrAssignNode attrAssignNode Cast CompilerCallback receiverCallback ClassCreator ArgumentsCallback argsCallback MethodInvocation context MethodInvocation getInvocationCompiler ! expr MethodInvocation ReferenceType MemberReference ReferenceType MethodDeclaration MethodInvocation getArgsCallback MethodInvocation MemberReference MemberReference context consumeCurrentValue AttrAssignNode node CompilerCallback Modifier call FormalParameter StatementExpression attrAssignNode getArgsNode attrAssignNode getName receiverCallback argsCallback public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile attrAssignNode getReceiverNode context true	1
MethodDeclaration Modifier ReferenceType ReturnStatement public RaiseException MethodInvocation Literal a directory"	0
MethodDeclaration Modifier Annotation ReferenceType chmod FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType arg BasicType VariableDeclarator ClassCreator BlockStatement MethodInvocation required Literal ThreadContext IRubyObject int mode Cast ! MethodInvocation ReferenceType MemberReference ThrowStatement context MethodInvocation getRuntime 1 BasicType MethodInvocation exists File path MethodInvocation MethodInvocation newFixnum int arg MethodInvocation convertToInteger context MethodInvocation getRuntime context MethodInvocation MethodInvocation getRuntime getLongValue BinaryOperation newErrnoENOENTError getPosix MemberReference MemberReference chmod + Literal MemberReference path mode "No such file or directory - " path	1
MethodDeclaration Modifier Annotation FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression private Deprecated ReferenceType mv BasicType argsIndex BasicType argIndex ReferenceType MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodVisitor int int Class mv MemberReference MemberReference visitVarInsn mv ClassCreator mv MemberReference MemberReference MemberReference checkCast ALOAD argsIndex ReferenceType MemberReference mv Integer argIndex	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block TernaryExpression name Literal frame Literal ThreadContext IRubyObject final Block MethodInvocation MethodInvocation MethodInvocation true block isGiven MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal enumeratorize context self block context getRuntime self	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MethodInvocation MemberReference Object Object int MemberReference ClassCreator = support Literal setInDef yyVal yyVal ReferenceType MethodInvocation false Boolean support isInDef	1
MethodDeclaration Modifier BasicType calculateActualRequired FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private int BasicType paramsLength BasicType optional BasicType rest BasicType isStatic BasicType hasContext BasicType hasBlock BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference int int boolean boolean boolean boolean int actualRequired && BinaryOperation MemberReference LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement actualRequired == MemberReference Literal ! rest BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement optional 0 int args MemberReference == MemberReference Literal StatementExpression IfStatement IfStatement IfStatement StatementExpression int args MemberReference == MemberReference Literal StatementExpression IfStatement IfStatement IfStatement StatementExpression StatementExpression != MemberReference Literal ThrowStatement paramsLength args 0 Assignment MemberReference BlockStatement MemberReference BlockStatement MemberReference BlockStatement Assignment paramsLength args 0 Assignment MemberReference BlockStatement MemberReference BlockStatement MemberReference BlockStatement MemberReference Assignment actualRequired 0 ClassCreator MemberReference Literal = isStatic StatementExpression hasContext StatementExpression hasBlock StatementExpression MemberReference MemberReference = MemberReference Literal = isStatic StatementExpression hasContext StatementExpression hasBlock StatementExpression -- args MemberReference MemberReference = ReferenceType Literal actualRequired 0 MemberReference MemberReference MemberReference actualRequired args actualRequired 0 MemberReference MemberReference MemberReference actualRequired args RuntimeException specific args with is not supported" -- args -- args -- args -- args -- args -- args	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self BasicType BinaryOperation BlockStatement SuperMethodInvocation ThreadContext IRubyObject IRubyObject long instanceof MemberReference ReferenceType ReturnStatement MemberReference MemberReference MemberReference MemberReference call self RubyFixnum Cast context caller self ReferenceType MemberReference RubyFixnum self	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Cast Assignment Cast MemberReference Object Object int ReferenceType MemberReference MemberReference Cast = ReferenceType MemberReference yyVal AssignableNode ArraySelector yyVals yyVal ReferenceType MemberReference MultipleAsgn19Node ArraySelector yyVals BinaryOperation MultipleAsgn19Node ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference - 2 yyTop + Literal MemberReference - 2 yyTop - 2 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public IRubyObject ReferenceType name MethodInvocation String MethodInvocation name intern	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType ReturnStatement MemberReference Literal MemberReference coerceBin context getRuntime other RubyFloat MethodInvocation context "**" other RubyFloat MemberReference MethodInvocation newFloat runtime Math MemberReference Cast pow value ReferenceType MemberReference RubyFloat other	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFixnum ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation name Literal required Literal rest Literal module Literal visibility MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation long MethodInvocation RubyFixnum MemberReference MemberReference newFixnum 1 true true PRIVATE CompatVersion RUBY1_9 context getRuntime MemberReference MemberReference runtime runtime args	0
MethodDeclaration Modifier Annotation ReferenceType getMethod FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String Class Class Class String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference + BinaryOperation MemberReference MemberReference tryClass Class descriptor ArrayCreator == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression InvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setArgumentTypes ic MemberReference setJavaName ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname ReferenceType ArrayInitializer c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity Literal fixed descriptor method e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class MemberReference MemberReference MemberReference Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation MemberReference MemberReference Literal MemberReference loadArguments mv MemberReference Literal visitVarInsn mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference mv Literal Literal visitMaxs MemberReference MethodInvocation = InvocationCallback c newInstance 3 IllegalArgumentException e getMessage arg1 arg2 arg3 ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtor MemberReference startCall mv METHOD_ARGS_INDEX 3 descriptor ALOAD 3 INVOKEVIRTUAL typePath method MemberReference MemberReference sig ARETURN 5 3 c MemberReference MemberReference MemberReference endCall Class MemberReference MemberReference MemberReference ClassReference method descriptor mnamePath cw ret signature cw mv mname arg1 arg2 arg3 ReferenceType Block	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast gettable ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal Cast newCaseNode Cast getPosition null ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop - 3 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType invoke FormalParameter StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType args MethodInvocation ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement BinaryOperation BlockStatement MethodInvocation rest Literal IRubyObject BinaryOperation checkArity Object arguments ArrayCreator MemberReference MemberReference Literal IRubyObject invokee MemberReference invokee isNil ReturnStatement Object javaInvokee MethodInvocation ! method MethodInvocation getDeclaringClass ThrowStatement && BinaryOperation MethodInvocation LocalVariableDeclaration LocalVariableDeclaration IfStatement MemberReference MemberReference MemberReference invokeWithExceptionHandling true - MemberReference Literal ReferenceType BinaryOperation args arguments 1 ArraySelector args MethodInvocation JavaUtil MethodInvocation MethodInvocation MemberReference Literal MemberReference isInstance MethodInvocation instanceof MemberReference ReferenceType ! Modifier MethodInvocation isFinal ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement method javaInvokee arguments args length 1 Object - MemberReference Literal Literal MemberReference Literal MemberReference invokeWithExceptionHandling getValue getRuntime invokee not a java object" javaInvokee MethodInvocation getRuntime javaInvokee InternalJavaProxy method getModifiers JavaProxyClass jpc Cast JavaProxyMethod jpm && BinaryOperation MethodInvocation ReturnStatement args length 1 0 method null arguments BinaryOperation newTypeError ReferenceType MemberReference != Assignment Literal jpm hasSuperImplementation MethodInvocation + BinaryOperation Literal InternalJavaProxy javaInvokee MemberReference MethodInvocation = null MethodInvocation MemberReference MemberReference invokeWithExceptionHandling + BinaryOperation MethodInvocation ")" jpm jpc MethodInvocation MemberReference getMethod jpm getSuperMethod javaInvokee arguments + BinaryOperation Literal method MethodInvocation getDeclaringClass method getName parameterTypes + BinaryOperation MethodInvocation " " getName + Literal Literal javaInvokee MethodInvocation getClass not instance of class (" getName	1
MethodDeclaration Modifier Annotation Annotation ReferenceType ruby_to_java FormalParameter FormalParameter FormalParameter ReturnStatement static public Deprecated JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType recv ReferenceType object ReferenceType unusedBlock MethodInvocation frame Literal module Literal visibility MemberReference final IRubyObject IRubyObject Block JavaUtil MemberReference MemberReference MemberReference ruby_to_java true true Visibility PRIVATE recv object unusedBlock	1
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration StatementExpression StatementExpression static ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MethodInvocation Ruby RubyClass rb_cUNIXSocket MethodInvocation runtime MethodInvocation getObject rb_cUNIXSocket ClassReference defineAnnotatedMethods runtime Literal MethodInvocation MemberReference defineClass Literal MemberReference fastSetConstant ReferenceType "UNIXSocket" runtime Literal fastGetClass rb_cUNIXSocket RubyUNIXSocket "BasicSocket"	1
MethodDeclaration Modifier FormalParameter FormalParameter IfStatement public ReferenceType receivers ReferenceType argument BinaryOperation BlockStatement BlockStatement ArgumentsCallback CompilerCallback == MemberReference Literal StatementExpression SwitchStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression SwitchStatement argument null MethodInvocation MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase receivers MemberReference call receivers Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression methodCompiler MethodInvocation MethodInvocation getScriptCompiler methodCompiler methodCompiler loadSelf argument MemberReference call receivers MemberReference call receivers Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression methodCompiler 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation MemberReference Literal MemberReference cacheCallSite methodCompiler methodCompiler 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation methodCompiler Literal MethodInvocation invokeUtilityMethod methodCompiler Literal MethodInvocation invokeUtilityMethod methodCompiler Literal MethodInvocation invokeUtilityMethod methodCompiler Literal MethodInvocation invokeUtilityMethod methodCompiler "===" CallType NORMAL methodCompiler Literal MethodInvocation invokeUtilityMethod methodCompiler Literal MethodInvocation invokeUtilityMethod methodCompiler Literal MethodInvocation invokeUtilityMethod methodCompiler Literal MethodInvocation invokeUtilityMethod "invokeEqqForCaselessWhen" ClassReference ClassReference sig "invokeEqqForCaselessWhen" ClassReference ClassReference ClassReference sig "invokeEqqForCaselessWhen" ClassReference ClassReference ClassReference ClassReference sig "invokeEqqForCaselessWhen" ClassReference ClassReference sig "invokeEqqForCaseWhen" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig "invokeEqqForCaseWhen" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig "invokeEqqForCaseWhen" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig "invokeEqqForCaseWhen" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig BasicType ReferenceType BasicType ReferenceType ReferenceType BasicType ReferenceType ReferenceType ReferenceType BasicType ReferenceType BasicType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType BasicType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType BasicType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType BasicType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType boolean IRubyObject boolean IRubyObject IRubyObject boolean IRubyObject IRubyObject IRubyObject boolean IRubyObject boolean CallSite ThreadContext IRubyObject IRubyObject IRubyObject boolean CallSite ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject boolean CallSite ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject boolean CallSite ThreadContext IRubyObject IRubyObject IRubyObject	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType MethodInvocation NodeVisitor This	0
MethodDeclaration Modifier forEachInValueArray FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement public BasicType start BasicType preCount ReferenceType BasicType ReferenceType ReferenceType ReferenceType argsCallback BinaryOperation BlockStatement int int Object int Object ArrayCallback CompilerCallback || BinaryOperation BinaryOperation LocalVariableDeclaration StatementExpression ForStatement IfStatement IfStatement StatementExpression StatementExpression < MemberReference MemberReference != MemberReference Literal BasicType VariableDeclarator MethodInvocation ForControl BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation MethodInvocation start preCount argsCallback null int MethodInvocation MethodInvocation getVariableCompiler BinaryOperation MemberReference StatementExpression SwitchStatement StatementExpression != MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression > MemberReference Literal ThrowStatement MethodInvocation getVariableCompiler MethodInvocation getVariableCompiler MethodInvocation getVariableCompiler MemberReference < MemberReference MemberReference ++ start MethodInvocation MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase MethodInvocation argsCallback null MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation 0 ClassCreator MemberReference releaseTempLocal start preCount MethodInvocation getVariableCompiler start Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression StatementExpression BreakStatement This MemberReference MemberReference nextValue MethodInvocation getVariableCompiler method MemberReference pushInt Literal MethodInvocation invokeUtilityMethod argsCallback This call ReferenceType Literal MemberReference 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation MethodInvocation MethodInvocation start MemberReference start ClassReference ClassReference ClassReference ClassReference sig NotCompilableException mode can't handle post variables in masgn yet" Literal MethodInvocation invokeUtilityMethod Literal MethodInvocation invokeUtilityMethod Literal MethodInvocation invokeUtilityMethod method MemberReference pushInt Literal MethodInvocation invokeUtilityMethod ReferenceType ReferenceType ReferenceType BasicType ClassReference ClassReference sig ClassReference ClassReference sig ClassReference ClassReference sig start ClassReference ClassReference ClassReference sig RubyArray RubyArray Ruby int ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType BasicType IRubyObject RubyArray IRubyObject RubyArray IRubyObject RubyArray IRubyObject RubyArray int	0
MethodDeclaration Modifier BasicType ReturnStatement public long MethodInvocation get	0
MethodDeclaration Modifier ReferenceType ReturnStatement public DynamicScope ClassCreator ReferenceType MemberReference MemberReference staticScope parent	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType self ReferenceType arg MethodInvocation IRubyObject IRubyObject MethodInvocation MemberReference self getRuntime arg	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Assignment Assignment MethodInvocation MethodInvocation StatementExpression MethodInvocation MemberReference Ruby RubyClass MethodInvocation runtime MemberReference setString MemberReference MemberReference = MemberReference ClassCreator = MethodInvocation includeModule ! runtime is1_9 MethodInvocation ClassReference defineAnnotatedMethods runtime Literal MethodInvocation MemberReference defineClass index ClassIndex STRING ReferenceType MethodDeclaration runtime MethodInvocation includeModule ReferenceType runtime getObject RubyModule ReferenceType Modifier Annotation BasicType FormalParameter FormalParameter ReturnStatement runtime RubyString public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyString	1
MethodDeclaration Modifier ReferenceType IfStatement ReturnStatement private synchronized Map TypeArgument TypeArgument BinaryOperation BlockStatement MemberReference ReferenceType ReferenceType == MemberReference Literal StatementExpression IRubyObject IRubyObject null Assignment MemberReference ClassCreator = ReferenceType HashMap TypeArgument TypeArgument ReferenceType ReferenceType IRubyObject IRubyObject	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile iVisited context true	0
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType block MethodInvocation MethodInvocation MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block parameter1 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign rest MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign runtime context self block false runtime context self runtime getNil block false runtime context self runtime getNil block false runtime context self runtime MemberReference block true IRubyObject	0
MethodDeclaration Modifier Annotation ReferenceType count FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType arg Modifier ReferenceType block Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator MethodInvocation StatementExpression MethodInvocation MethodInvocation name Literal frame Literal ThreadContext IRubyObject final IRubyObject final Block final Ruby runtime MethodInvocation final ThreadContext localContext MemberReference final int result ArrayCreator block isGiven MethodInvocation MemberReference MemberReference MemberReference ClassCreator callEach RubyFixnum MemberReference MemberReference newFixnum "count" true context getRuntime context BasicType ArrayInitializer runtime MethodInvocation getWarnings runtime context self ReferenceType MethodDeclaration runtime ArraySelector result int Literal MemberReference Literal warn BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement ReturnStatement Literal 0 ID BLOCK_UNUSED "given block not used" public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType block ReferenceType VariableDeclarator MethodInvocation MethodInvocation StatementExpression MethodInvocation 0 ThreadContext IRubyObject Block IRubyObject larg MethodInvocation MemberReference MemberReference Literal checkContext larg MemberReference equals MemberReference runtime getNil MemberReference MemberReference checkArgs localContext ctx "count" arg ++ ArraySelector result runtime largs Literal 0	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter AssertStatement StatementExpression ReturnStatement public IRubyObject ReferenceType internedName ReferenceType value BinaryOperation MethodInvocation MethodInvocation String IRubyObject && MethodInvocation BinaryOperation ensureConstantsSettable MemberReference MemberReference IdUtil MemberReference isConstant != MemberReference Literal internedName value internedName value null	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MethodInvocation MemberReference Object Object int MemberReference ClassCreator = support popCurrentScope yyVal yyVal ReferenceType MethodInvocation Cast MethodInvocation Cast IterNode Cast getPosition ReferenceType MemberReference support getCurrentScope ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop - 1 yyTop - 4 yyTop	1
MethodDeclaration Modifier ReferenceType new_instance FormalParameter StatementExpression TryStatement public IRubyObject ReferenceType arguments MethodInvocation LocalVariableDeclaration ReturnStatement CatchClause CatchClause CatchClause CatchClause Object MemberReference checkArity ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter StatementExpression AssertStatement ReturnStatement CatchClauseParameter ThrowStatement arguments length Object result MethodInvocation JavaObject MethodInvocation MemberReference wrap IllegalArgumentException iae MethodInvocation IllegalAccessException iae MethodInvocation InvocationTargetException ite MethodInvocation Literal Literal InstantiationException ie MethodInvocation constructor MemberReference newInstance getRuntime result MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation MethodInvocation getRuntime false null MethodInvocation getRuntime arguments BinaryOperation newTypeError Literal newTypeError getJavaSupport MethodInvocation MemberReference handleNativeException BinaryOperation newTypeError + BinaryOperation Literal "illegal access" ite getTargetException constructor + Literal MethodInvocation + BinaryOperation MemberReference ", "can't make instance of " constructor MethodInvocation getDeclaringClass + BinaryOperation Literal ArraySelector MethodInvocation MethodInvocation arguments getName + Literal MethodInvocation ", got [" Literal getClass getName "expected " MethodInvocation argument_types 0 inspect	1
MethodDeclaration Modifier FormalParameter AssertStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType frame BinaryOperation Literal Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment != MemberReference Literal null object It should NEVER be null" This MemberReference = This MemberReference = This MemberReference = This MemberReference = This MemberReference = This MemberReference = This MemberReference = This MemberReference = frame block null MemberReference frame self MemberReference frame name MemberReference frame klazz MemberReference frame fileName MemberReference frame line MemberReference frame block MemberReference frame visibility MemberReference frame self name klazz fileName line block visibility	1
MethodDeclaration Modifier Annotation ReferenceType toString ReturnStatement public Override String BinaryOperation + BinaryOperation MethodInvocation + MethodInvocation Literal getStartLine getFile ":"	0
MethodDeclaration Modifier Annotation write FormalParameter IOException StatementExpression public Override BasicType b MethodInvocation int BinaryOperation + Literal MemberReference "" b	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Node ReferenceType receiver ReferenceType name ReferenceType argsNode BinaryOperation BlockStatement MethodInvocation Node Token Node instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement MemberReference MemberReference MemberReference Literal new_call argsNode ArrayNode ReferenceType VariableDeclarator BinaryOperation BlockStatement receiver name argsNode null ArrayNode args Cast && BinaryOperation BinaryOperation ReturnStatement ReferenceType MemberReference == MethodInvocation Literal instanceof MethodInvocation ReferenceType ClassCreator ArrayNode argsNode args size 1 args Literal get FixnumNode ReferenceType MethodInvocation MemberReference Literal MemberReference 0 MemberReference MemberReference position receiver "[]" args receiver args	1
MethodDeclaration Modifier Annotation ReferenceType list FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType VariableDeclarator MethodInvocation name Literal meta Literal ThreadContext IRubyObject Ruby runtime MethodInvocation RubyArray MemberReference MethodInvocation Literal true context getRuntime runtime runtime MethodInvocation 0	0
MethodDeclaration Modifier Annotation ReferenceType encoding FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext context MethodInvocation MethodInvocation getRuntime CompatVersion RUBY1_9 MethodInvocation getEncoding pattern getEncoding	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType obj MethodInvocation ThreadContext IRubyObject context MethodInvocation getRuntime BinaryOperation newBoolean || BinaryOperation MethodInvocation == This MemberReference MemberReference obj obj	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block Modifier ReferenceType VariableDeclarator MethodInvocation ReturnStatement Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator MethodInvocation MethodInvocation name Literal frame Literal ThreadContext IRubyObject final Block final Ruby runtime MethodInvocation ! block isGiven MethodInvocation final IRubyObject result ArrayCreator final ThreadContext localContext MemberReference MemberReference MemberReference MemberReference ClassCreator callEach runtime MemberReference true context getRuntime MemberReference MemberReference Literal enumeratorize ReferenceType ArrayInitializer context runtime context self ReferenceType FieldDeclaration MethodDeclaration result runtime self IRubyObject MethodInvocation MethodInvocation BlockCallback ReferenceType VariableDeclarator VariableDeclarator Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement runtime getNil runtime getNil IRubyObject Literal Literal public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation null null ThreadContext IRubyObject Block MemberReference MemberReference Literal checkContext IRubyObject arg MethodInvocation IRubyObject v MethodInvocation == MemberReference Literal StatementExpression StatementExpression IfStatement IfStatement runtime getNil localContext ctx MemberReference MemberReference checkArgs block MemberReference MemberReference yield null Assignment Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement runtime largs ctx arg MemberReference Assignment = MemberReference Assignment = < MethodInvocation Literal StatementExpression StatementExpression > MethodInvocation Literal StatementExpression StatementExpression MemberReference MemberReference = ArraySelector result MemberReference MemberReference = RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 Assignment Assignment RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 Assignment Assignment v Literal ArraySelector result arg ctx v MemberReference Literal MemberReference callMethod v MemberReference MemberReference = MemberReference MemberReference = ctx v MemberReference Literal MemberReference callMethod v MemberReference MemberReference = MemberReference MemberReference = 0 Literal ctx "<=>" v ArraySelector result arg ctx "<=>" v ArraySelector result arg 1 Literal Literal 0 1	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 MethodInvocation IRubyObject IRubyObject IRubyObject ArrayCreator Literal ReferenceType ArrayInitializer 3 IRubyObject MemberReference MemberReference MemberReference arg0 arg1 arg2	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation name Literal module Literal visibility MemberReference ThreadContext IRubyObject MethodInvocation true Visibility PRIVATE context getRuntime	0
MethodDeclaration Modifier ReferenceType convertToType FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement final static public IRubyObject ReferenceType obj ReferenceType target ReferenceType convertMethod BasicType MethodInvocation BlockStatement MethodInvocation IRubyObject RubyClass String boolean ! obj MemberReference respondsTo ReturnStatement obj MethodInvocation MemberReference callMethod convertMethod MethodInvocation obj MethodInvocation getRuntime convertMethod MemberReference MemberReference MemberReference getCurrentContext obj target	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset MethodInvocation name Literal required Literal ThreadContext IRubyObject MethodInvocation MethodInvocation 1 context getRuntime MemberReference getOffset offset	1
MethodDeclaration Modifier ReferenceType to_int FormalParameter IfStatement ReturnStatement private final RubyFixnum ReferenceType runtime MethodInvocation BlockStatement MethodInvocation Ruby runtime isVerbose StatementExpression MemberReference to_i MethodInvocation runtime runtime MethodInvocation getWarnings MemberReference Literal warn ID as an integer"	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SynchronizedStatement StatementExpression ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MemberReference StatementExpression MethodInvocation MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation result MethodInvocation block MemberReference MemberReference yield runtime getNil MemberReference MemberReference checkArgs result MemberReference append ctx larg runtime largs larg	0
MethodDeclaration Modifier BasicType ReturnStatement public int MethodInvocation get	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String TernaryExpression MethodInvocation Literal Literal isTrue "true" "false"	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile whenNode getExpressionNodes context true	0
MethodDeclaration Modifier Annotation ReferenceType getFastMethod FormalParameter ReturnStatement public Deprecated Callback ReferenceType method ClassCreator String ReferenceType MemberReference MemberReference MemberReference Literal Literal MethodInvocation Literal ReflectionCallback type method NULL_CLASS_ARRAY false false Arity noArguments true	1
MethodDeclaration Modifier ReferenceType ReturnStatement public IRubyObject MemberReference	0
MethodDeclaration Modifier advance FormalParameter IfStatement StatementExpression private BasicType consume MemberReference BlockStatement Assignment boolean ! DoStatement MemberReference MemberReference = BinaryOperation BlockStatement ! consume && BinaryOperation MethodInvocation IfStatement StatementExpression != MemberReference MemberReference ! entry BinaryOperation BlockStatement Assignment entry head != MemberReference MemberReference StatementExpression StatementExpression MemberReference MemberReference = generation Assignment Assignment entry entry MemberReference MemberReference = MemberReference MemberReference = generation entry head	0
MethodDeclaration Modifier consumeCurrentValue StatementExpression public MethodInvocation method pop	0
MethodDeclaration Modifier Annotation ReferenceType StatementExpression ReturnStatement public JRubyMethod ElementValuePair RubyClass MethodInvocation MethodInvocation name Literal MethodInvocation MethodInvocation getRuntime type "type" getWarnings MemberReference Literal Literal Literal warn ID is use	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject javaInterfaces MethodInvocation && BinaryOperation Cast ReturnStatement context MethodInvocation getRuntime self MethodInvocation getInstanceVariables != MemberReference Literal ReferenceType MemberReference MethodInvocation getNil Literal fastGetInstanceVariable javaInterfaces null RubyArray javaInterfaces RuntimeHelpers MemberReference MemberReference Literal MemberReference invoke "@java_interfaces" context arg self	0
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType hash FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal ThreadContext MemberReference MethodInvocation MethodInvocation context real MemberReference Literal callMethod image MemberReference Literal callMethod context context	0
MethodDeclaration Modifier Annotation ReferenceType load FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyTime ReferenceType recv ReferenceType from ReferenceType block MethodInvocation name Literal required Literal frame Literal meta Literal IRubyObject IRubyObject Block MemberReference Cast MemberReference 1 true true recv ReferenceType Cast from RubyTime ReferenceType MemberReference RubyClass recv	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ThrowStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType self MethodInvocation name Literal module Literal IRubyObject self MethodInvocation getRuntime true Literal newNotImplementedError not implemented yet"	1
MethodDeclaration Modifier BasicType IOException StatementExpression StatementExpression ReturnStatement private int Assignment Assignment MemberReference MemberReference ClassCreator = MemberReference ClassCreator = Tokens lex_strterm ReferenceType MemberReference Literal Literal yaccValue ReferenceType Literal MethodInvocation StringTerm '\0' '"' Token "\"" getPosition	0
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration TryStatement TryStatement IfStatement ReturnStatement private static Unsafe ReferenceType VariableDeclarator LocalVariableDeclaration StatementExpression CatchClause LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression CatchClause BinaryOperation StatementExpression MemberReference Unsafe Literal ReferenceType VariableDeclarator Assignment CatchClauseParameter IfStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Assignment CatchClauseParameter IfStatement && MemberReference BinaryOperation MethodInvocation null Class unsafeClass MethodInvocation MemberReference Cast = Throwable ignore MemberReference StatementExpression Class unsafeClass MethodInvocation Field field MethodInvocation field Literal setAccessible MemberReference Cast = Throwable ignore MemberReference StatementExpression DEBUG == MemberReference Literal System.err Literal println Class Literal forName ReferenceType MethodInvocation DEBUG MethodInvocation Class Literal forName unsafeClass Literal getDeclaredField true ReferenceType MethodInvocation DEBUG MethodInvocation null "No Unsafe implementation Unsafe unsafeClass newInstance ignore printStackTrace Unsafe Class MethodInvocation Literal forName ignore printStackTrace newInstance	1
MethodDeclaration Modifier ReferenceType newString FormalParameter FormalParameter ReturnStatement static public RubyString ReferenceType runtime ReferenceType str ClassCreator Ruby CharSequence ReferenceType MemberReference MethodInvocation MemberReference RubyString runtime runtime getString str	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression BlockStatement StatementExpression StatementExpression StatementExpression BlockStatement StatementExpression BlockStatement IfStatement StatementExpression StatementExpression BlockStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType ReferenceType BasicType ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation StatementExpression MethodInvocation MethodInvocation MethodInvocation StatementExpression MethodInvocation StatementExpression StatementExpression StatementExpression StatementExpression MemberReference BlockStatement MethodInvocation MethodInvocation StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BranchCallback BranchCallback boolean Label afterRubyCatchBody ClassCreator Label catchRetry ClassCreator Label catchJumps ClassCreator Label exitRescue ClassCreator Literal MethodInvocation method MethodInvocation astore Label beforeBody ClassCreator Label afterBody ClassCreator Label rubyCatchBlock ClassCreator Label flowCatchBlock ClassCreator method MemberReference MemberReference MemberReference MethodInvocation visitTryCatchBlock method MemberReference MemberReference MemberReference MethodInvocation visitTryCatchBlock method MemberReference MethodInvocation method MemberReference label method MemberReference go_to method MemberReference label MethodInvocation method MemberReference label MethodInvocation MethodInvocation MethodInvocation MethodInvocation StatementExpression StatementExpression BlockStatement StatementExpression method MemberReference MemberReference MemberReference MethodInvocation trycatch method MemberReference label MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation method MemberReference label method MethodInvocation aload Literal MethodInvocation method pop ReferenceType ReferenceType ReferenceType ReferenceType ClassReference sig getPreviousExceptionIndex ReferenceType ReferenceType ReferenceType ReferenceType beforeBody afterBody flowCatchBlock ClassReference p beforeBody afterBody rubyCatchBlock ClassReference p beforeBody This branch afterBody exitRescue flowCatchBlock method athrow rubyCatchBlock method MethodInvocation astore This branch method MemberReference label method MemberReference go_to MethodInvocation MethodInvocation StatementExpression MethodInvocation beforeBody afterRubyCatchBody catchJumps ClassReference p catchJumps method MethodInvocation aload Literal MethodInvocation method pop method athrow exitRescue getPreviousExceptionIndex "setErrorInfo" ClassReference ClassReference sig Label Label Label Label ReferenceType Label Label Label Label JumpException ReferenceType ReferenceType afterRubyCatchBody exitRescue method MemberReference MemberReference MemberReference MethodInvocation trycatch method MemberReference label MethodInvocation method MemberReference go_to JumpException ReferenceType getPreviousExceptionIndex "setErrorInfo" ClassReference ClassReference sig ReferenceType ReferenceType IRubyObject Throwable rubyCatchBlock afterRubyCatchBody catchRetry ClassReference p catchRetry method pop beforeBody ReferenceType ReferenceType IRubyObject IRubyObject JumpException ReferenceType IRubyObject IRubyObject	1
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter ReturnStatement public Object ReferenceType context ReferenceType rubyObject MethodInvocation ThreadContext IRubyObject rubyObject ClassReference toJava ReferenceType BigDecimal	0
MethodDeclaration Modifier Annotation ReferenceType obj_to_enum FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType args ReferenceType block ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation name ElementArrayValue optional Literal rest Literal frame Literal ThreadContext IRubyObject IRubyObject Block IRubyObject newArgs ArrayCreator MemberReference MemberReference = System MemberReference Literal MemberReference Literal MemberReference arraycopy context MethodInvocation MethodInvocation getRuntime Literal Literal 1 true true ReferenceType BinaryOperation ArraySelector newArgs self args 0 newArgs 1 args length MemberReference Literal MemberReference callMethod "to_enum" "enum_for" IRubyObject + MemberReference Literal Literal context newArgs args length 1 0	1
MethodDeclaration Modifier Annotation ReferenceType op_aset19 FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 BinaryOperation BlockStatement BlockStatement MemberReference name Literal reads MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject IRubyObject instanceof MemberReference ReferenceType StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression arg2 "[]=" BACKREF CompatVersion RUBY1_9 arg0 RubyRegexp MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MemberReference Cast MemberReference MemberReference subpatSet19 int beg MethodInvocation int len MethodInvocation MemberReference checkLength RubyString repl MethodInvocation MethodInvocation MemberReference MemberReference replaceInternal19 context ReferenceType MemberReference arg1 arg2 RubyNumeric MemberReference num2int RubyNumeric MemberReference num2int len arg2 convertToString MemberReference MethodInvocation checkIndex len repl RubyRegexp arg0 arg0 arg1 beg strLength	1
MethodDeclaration Modifier Annotation ReferenceType op_equal FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation BlockStatement IfStatement MethodInvocation name Literal required Literal compat MemberReference ThreadContext IRubyObject other isNil ReturnStatement BinaryOperation BlockStatement RubyComparable MemberReference This MemberReference op_equal "==" 1 CompatVersion RUBY1_9 MethodInvocation instanceof MemberReference ReferenceType ReturnStatement context other RubyBoolean MethodInvocation Literal newBoolean other RubyTime MethodInvocation getRuntime false MethodInvocation getRuntime BinaryOperation newBoolean == MethodInvocation Literal Cast cmp 0 ReferenceType MemberReference RubyTime other	1
MethodDeclaration Modifier ReferenceType ReturnStatement public CallSite MemberReference	0
MethodDeclaration Modifier ReferenceType yield FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement public IRubyObject ReferenceType context ReferenceType args ReferenceType self ReferenceType BasicType aValue ReferenceType ReferenceType type ReferenceType block BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReturnStatement CatchClause StatementExpression ThreadContext IRubyObject IRubyObject RubyModule boolean Block ReferenceType Block == MemberReference Literal StatementExpression IRubyObject realArgs MethodInvocation Visibility oldVis MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement MethodInvocation Type null Assignment MemberReference MethodInvocation getFrame MemberReference MemberReference MemberReference pre MemberReference MemberReference MemberReference MemberReference call JumpException.NextJump nj MethodInvocation MemberReference MemberReference MemberReference MemberReference post MemberReference MethodInvocation = args getVisibility context context self realArgs block MemberReference MemberReference MemberReference handleNextJump context oldVis self MemberReference context nj type	1
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter ReturnStatement public String BasicType l Literal long "long"	0
MethodDeclaration Modifier ReferenceType FormalParameter SwitchStatement final ReferenceType type Cast SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase ReferenceType MemberReference BOOL ReturnStatement CHAR ReturnStatement UCHAR ReturnStatement SHORT ReturnStatement USHORT ReturnStatement INT ReturnStatement UINT ReturnStatement FLOAT ReturnStatement LONG IfStatement ThrowStatement ULONG IfStatement ThrowStatement POINTER BUFFER_IN BUFFER_OUT BUFFER_INOUT IfStatement ThrowStatement ThrowStatement NativeType type MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference BinaryOperation BlockStatement ClassCreator BinaryOperation BlockStatement ClassCreator BinaryOperation BlockStatement ClassCreator ClassCreator INSTANCE INSTANCE INSTANCE INSTANCE INSTANCE INSTANCE INSTANCE INSTANCE == MethodInvocation Literal ReturnStatement ReferenceType Literal == MethodInvocation Literal ReturnStatement ReferenceType Literal == MethodInvocation Literal ReturnStatement ReferenceType Literal ReferenceType BinaryOperation Platform MethodInvocation getPlatform 32 MemberReference IllegalArgumentException is too for int parameter" Platform MethodInvocation getPlatform 32 MemberReference IllegalArgumentException is too for int parameter" Platform MethodInvocation getPlatform 32 MemberReference IllegalArgumentException is too for int parameter" IllegalArgumentException + Literal MemberReference INSTANCE INSTANCE addressSize INSTANCE "Unknown type " type	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter IfStatement LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyBoolean ReferenceType other BinaryOperation BlockStatement ReferenceType VariableDeclarator TernaryExpression name Literal required Literal IRubyObject instanceof MemberReference ReferenceType ThrowStatement Class TypeArgument otherClass Cast MethodInvocation MethodInvocation MethodInvocation 1 other JavaClass MethodInvocation ? ReferenceType MemberReference MethodInvocation MemberReference assignable MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation getRuntime JavaClass other javaClass otherClass getTrue getFalse BinaryOperation newTypeError + BinaryOperation Literal + Literal MethodInvocation " requires JavaClass (" other getType	1
MethodDeclaration Modifier ReferenceType getRuntime ReturnStatement public org ReferenceType MemberReference jruby ReferenceType runtime Ruby	0
MethodDeclaration Modifier Annotation setUp Exception StatementExpression StatementExpression StatementExpression protected Override SuperMethodInvocation Assignment Assignment setUp MemberReference MethodInvocation = MemberReference Cast = runtime Ruby newInstance ReferenceType MethodInvocation runtime getNil	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression private ReferenceType node ReferenceType context Modifier BasicType Modifier ReferenceType VariableDeclarator MethodInvocation Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation StatementExpression MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Node BodyCompiler final boolean final RescueBodyNode rescueBodyNode Cast context final Node exceptionList MethodInvocation ArgumentsCallback rescueArgs MethodInvocation == MemberReference Literal Assignment context MemberReference BranchCallback ClassCreator BranchCallback ClassCreator context MemberReference MemberReference performBooleanBranch ReferenceType MemberReference rescueBodyNode MemberReference getArgsCallback rescueArgs null MemberReference ClassCreator = rescueArgs ReferenceType MethodDeclaration ReferenceType MethodDeclaration RescueBodyNode node exceptionList rescueArgs ReferenceType MethodDeclaration MethodDeclaration BranchCallback Modifier branch FormalParameter LocalVariableDeclaration IfStatement IfStatement BranchCallback Modifier branch FormalParameter IfStatement ArgumentsCallback Modifier BasicType ReturnStatement Modifier call FormalParameter StatementExpression public ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BlockStatement BlockStatement public ReferenceType context BinaryOperation BlockStatement BlockStatement public int Literal public ReferenceType context MethodInvocation BodyCompiler Node realBody MethodInvocation instanceof MemberReference ReferenceType StatementExpression WhileStatement realBody MethodInvocation StatementExpression StatementExpression StatementExpression IfStatement StatementExpression BodyCompiler != MethodInvocation Literal StatementExpression StatementExpression 1 BodyCompiler context rescueBodyNode getBodyNode realBody NewlineNode MethodInvocation BinaryOperation BlockStatement MethodInvocation MethodInvocation MethodInvocation MemberReference BlockStatement BlockStatement MethodInvocation rescueBodyNode null MethodInvocation MethodInvocation context MethodInvocation setLinePosition instanceof MemberReference ReferenceType StatementExpression MemberReference MemberReference Literal compile context context StatementExpression LocalVariableDeclaration StatementExpression StatementExpression context MethodInvocation MemberReference MemberReference context realBody getPosition realBody NewlineNode Assignment realBody context true MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation rescueBodyNode context MemberReference Cast = MethodInvocation MemberReference Literal compile BodyCompiler nestedBody MethodInvocation MethodInvocation MemberReference Literal compile nestedBody realBody ReferenceType MemberReference rescueBodyNode getBodyNode context true context BinaryOperation rescueBodyNode getBodyNode nestedBody true NewlineNode realBody + Literal MethodInvocation rescueBodyNode MethodInvocation getPosition getStartLine	1
MethodDeclaration Modifier Annotation BasicType equals FormalParameter IfStatement IfStatement ReturnStatement public Override boolean ReferenceType other BinaryOperation BlockStatement BinaryOperation BlockStatement Literal Object == MemberReference This ReturnStatement instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement false other Literal other RubyFixnum ReferenceType VariableDeclarator BinaryOperation BlockStatement true RubyFixnum num Cast == MemberReference MemberReference ReturnStatement ReferenceType MemberReference num value value Literal RubyFixnum other true	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject Block ReferenceType MemberReference MethodInvocation Literal Literal Literal MemberReference MemberReference yield Type context context MethodInvocation getRuntime null null true type MemberReference MemberReference arg0 arg1	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public Deprecated Callback ReferenceType method ClassCreator String ReferenceType MemberReference MemberReference ArrayCreator Literal Literal MethodInvocation Literal ReflectionCallback type method ReferenceType ArrayInitializer true true Arity optional false Class ClassReference ReferenceType IRubyObject	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation MethodInvocation Cast Cast IfNode Cast getPosition support Cast getConditionNode ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop - 4 yyTop - 3 yyTop	1
MethodDeclaration Modifier ReferenceType getBeanManager ReturnStatement public MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference runtime	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject IRubyObject Block Ruby runtime MethodInvocation int count MemberReference IRubyObject filename MemberReference runtime MemberReference checkSafeString ByteList separator MethodInvocation RubyIO io Cast ! io isNil TryStatement runtime getNil context getRuntime args length ArraySelector MethodInvocation args filename MemberReference MemberReference Literal ReferenceType MethodInvocation LocalVariableDeclaration WhileStatement StatementExpression Literal convertToString runtime args 1 RubyIO RubyFile MemberReference MethodInvocation ArrayCreator MemberReference open ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation 0 context runtime getFile ReferenceType ArrayInitializer Block IRubyObject str MethodInvocation ! str isNil StatementExpression StatementExpression io close IRubyObject MemberReference io MemberReference MemberReference getline MethodInvocation Assignment filename runtime separator block MemberReference MemberReference yield MemberReference MethodInvocation = context str str io MemberReference MemberReference getline runtime separator	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter TryStatement ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType IfStatement CatchClause Literal Ruby ThreadContext IRubyObject Block MethodInvocation ReturnStatement CatchClauseParameter null MethodInvocation Literal JumpException e leftNode MemberReference MemberReference MemberReference MemberReference "method" runtime context self	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement private static RubyModule ReferenceType context Modifier ReferenceType runtime ReferenceType parentPackage ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement ThreadContext final Ruby RubyModule String IRubyObject MethodInvocation == MemberReference Literal ThrowStatement String packageName MethodInvocation final String name MethodInvocation == MethodInvocation Literal ThrowStatement String fullName BinaryOperation ! Character MethodInvocation isUpperCase IfStatement TryStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement ReturnStatement parentPackage Literal fastGetInstanceVariable null MethodInvocation asJavaString MethodInvocation trim name length 0 MethodInvocation + MemberReference MemberReference name Literal charAt MethodInvocation BlockStatement ReturnStatement CatchClause CatchClause ReferenceType VariableDeclarator BinaryOperation BlockStatement Modifier ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MemberReference MethodInvocation runtime Literal newArgumentError intern runtime Literal newArgumentError packageName name 0 MemberReference containsKey ThrowStatement MethodInvocation CatchClauseParameter LocalVariableDeclaration IfStatement CatchClauseParameter RubyModule packageModule == Assignment Literal ReturnStatement final String ivarName BinaryOperation parentPackage MemberReference MemberReference fastSetInstanceVariable RubyClass singleton MethodInvocation singleton MemberReference ClassCreator addMethod packageModule MemberReference MethodInvocation getProxyClass "invalid package module" "empty class or package name" name MethodInvocation MemberReference MethodInvocation getProxyClass RaiseException re ReferenceType VariableDeclarator MethodInvocation BlockStatement Exception e MemberReference MethodInvocation = null Literal + Literal MemberReference ivarName packageModule parentPackage name ReferenceType MemberReference MemberReference MethodDeclaration MethodDeclaration runtime JavaClass MemberReference MemberReference forNameVerbose runtime BinaryOperation newArgumentError runtime JavaClass MemberReference MemberReference RubyException rubyEx MethodInvocation rubyEx MethodInvocation MemberReference MethodInvocation kind_of_p StatementExpression packageModule MemberReference MemberReference getJavaPackageModule null name org ReferenceType singleton Visibility PUBLIC Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement ReturnStatement Modifier Annotation ReferenceType ReturnStatement runtime fullName + Literal MemberReference runtime fullName re getException isTrue context runtime MethodInvocation runtime fullName jruby ReferenceType public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation public Override Arity MethodInvocation "illegal package name " name RuntimeHelpers MemberReference MethodInvocation internal ReferenceType ThreadContext IRubyObject RubyModule String IRubyObject Block != MemberReference Literal StatementExpression IRubyObject variable != Assignment Literal ReturnStatement runtime getNil Arity noArguments runtime runtime getNil runtime ReferenceType args length 0 MethodInvocation MemberReference Cast = null MemberReference methods ReferenceType Arity MemberReference MemberReference Literal Literal raiseArgumentError variable ReferenceType MemberReference variable JavaMethod runtime args length 0 0 RubyModule self	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference ListNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier ReferenceType defineClassIfAllowed FormalParameter FormalParameter IfStatement ReturnStatement private RubyClass ReferenceType name ReferenceType superClass BinaryOperation BlockStatement Literal String RubyClass && BinaryOperation MethodInvocation ReturnStatement null != MemberReference Literal profile MemberReference allowClass MethodInvocation superClass null name MemberReference MemberReference MethodInvocation defineClass name superClass superClass getAllocator	1
MethodDeclaration Modifier ReferenceType ReturnStatement public String MethodInvocation	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject TernaryExpression name Literal frame Literal BinaryOperation MemberReference MethodInvocation true != BinaryOperation Literal ifNone MethodInvocation getRuntime & MemberReference MemberReference 0 getNil flags PROCDEFAULT_HASH_F	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement static public byte ReferenceType string MethodInvocation String ByteList MemberReference plain string	0
MethodDeclaration Modifier ReferenceType getNativeType ReturnStatement final public NativeType MemberReference nativeType	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast Cast Cast Cast OpAsgnNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType Cast ReferenceType Cast ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals String ReferenceType MemberReference String ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation BinaryOperation Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation + Literal MemberReference + Literal MemberReference BinaryOperation BinaryOperation + Literal MemberReference - 4 yyTop 0 yyTop + Literal MemberReference + Literal MemberReference - 4 yyTop - 2 yyTop - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType empty_p FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair RubyBoolean ReferenceType context ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation name Literal ThreadContext Ruby runtime MethodInvocation runtime isVerbose StatementExpression MemberReference "empty?" context getRuntime MethodInvocation context runtime MethodInvocation getWarnings MemberReference Literal Literal Literal warning ID is use	1
MethodDeclaration Modifier ReferenceType method ReturnStatement public MethodInvocation MethodInvocation method	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType objectClass Assignment MethodInvocation MemberReference Ruby RubyClass MemberReference MemberReference = objectClass ClassReference defineAnnotatedMethods objectClass objectClass index ClassIndex OBJECT ReferenceType	1
MethodDeclaration Modifier ReferenceType ReturnStatement private IRubyObject MethodInvocation RubyString MethodInvocation MethodInvocation getRuntime	0
MethodDeclaration Modifier BasicType getLongValue ReturnStatement public long Literal 0	0
MethodDeclaration Modifier IfStatement protected final MethodInvocation BlockStatement isFrozen ThrowStatement MethodInvocation MethodInvocation getRuntime Literal	0
MethodDeclaration Modifier BasicType StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private int MemberReference MethodInvocation MethodInvocation Assignment Assignment MemberReference -- MemberReference TernaryExpression = MemberReference ClassCreator = Tokens lex_state MemberReference MemberReference MemberReference yaccValue ReferenceType Literal MethodInvocation isOneEight LexState EXPR_END LexState EXPR_ENDARG Token ")" getPosition	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair IRubyObject TernaryExpression name Literal MethodInvocation MethodInvocation MethodInvocation MethodInvocation getRuntime MethodInvocation getRuntime getTrue getFalse	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter AssertStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType klazz ReferenceType self ReferenceType name ReferenceType block ReferenceType fileName BasicType line BinaryOperation Literal Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment RubyModule IRubyObject String Block String int != MemberReference Literal null object It should NEVER be null" This MemberReference = This MemberReference = This MemberReference = This MemberReference = This MemberReference = This MemberReference = This MemberReference = This Literal = block null MemberReference self MemberReference name MemberReference klazz MemberReference fileName MemberReference line MemberReference block MemberReference Visibility PUBLIC MemberReference false self name klazz fileName line block visibility	1
MethodDeclaration Modifier ReferenceType getSimpleName FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement private static String ReferenceType clazz MethodInvocation BlockStatement ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Class TypeArgument clazz isArray ReturnStatement String className MethodInvocation int len MethodInvocation int i MethodInvocation != MemberReference Literal DoStatement ReturnStatement className BinaryOperation substring ? BinaryOperation clazz getName className length className Literal lastIndexOf i - 1 BinaryOperation BlockStatement MethodInvocation + MethodInvocation Literal + MethodInvocation Literal '$' && BinaryOperation MethodInvocation StatementExpression className MemberReference substring className Literal lastIndexOf 1 MethodInvocation getSimpleName "[]" < MemberReference MemberReference Character MethodInvocation isDigit MemberReference i '.' clazz getComponentType i len className MemberReference charAt ++ i i	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType self MethodInvocation IRubyObject MethodInvocation uid self getRuntime	1
MethodDeclaration Modifier BasicType isConstant ForStatement ReturnStatement public boolean EnhancedForControl IfStatement Literal VariableDeclaration MemberReference BinaryOperation ReturnStatement true ReferenceType VariableDeclarator || MethodInvocation MethodInvocation Literal KeyValuePair ! isConstant ! isConstant false	1
MethodDeclaration Modifier ReferenceType getVariables ReturnStatement public String MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType cos FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x BasicType VariableDeclarator MethodInvocation name Literal required Literal module Literal visibility MemberReference IRubyObject IRubyObject double value Cast RubyFloat MethodInvocation MethodInvocation newFloat 1 true Visibility PRIVATE ReferenceType MethodInvocation recv getRuntime Math MemberReference cos RubyFloat RubyKernel MemberReference MemberReference value recv x	0
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression TryStatement public Object ReferenceType arg0 MethodInvocation ReturnStatement CatchClause CatchClause CatchClause CatchClause Object Literal checkArity MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement 1 constructor MemberReference newInstance IllegalArgumentException iae MethodInvocation IllegalAccessException iae MethodInvocation InvocationTargetException ite MethodInvocation Throwable t MethodInvocation arg0 MemberReference MemberReference handlelIllegalArgumentEx MemberReference handleIllegalAccessEx MemberReference MemberReference handleInvocationTargetEx MemberReference MemberReference handleThrowable iae arg0 iae ite constructor t constructor	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter IOException ThrowStatement public ReferenceType runtime ReferenceType obj ReferenceType type ReferenceType MethodInvocation Ruby Object RubyClass runtime BinaryOperation newTypeError + Literal MethodInvocation "no marshal_dump is defined for class " type getName	0
MethodDeclaration Modifier ReferenceType gettable FormalParameter SwitchStatement StatementExpression ReturnStatement public Node ReferenceType token MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase MethodInvocation Literal Token token getType MemberReference ReturnStatement MemberReference ReturnStatement MemberReference ReturnStatement MemberReference ReturnStatement MemberReference ReturnStatement MemberReference ReturnStatement MemberReference ReturnStatement MemberReference ReturnStatement MemberReference ReturnStatement MemberReference ReturnStatement MemberReference ReturnStatement MemberReference ReturnStatement MethodInvocation Cast null Tokens kSELF ClassCreator Tokens kNIL ClassCreator Tokens kTRUE ClassCreator Tokens kFALSE ClassCreator Tokens k__FILE__ ClassCreator Tokens k__LINE__ ClassCreator Tokens k__ENCODING__ ClassCreator Tokens tIDENTIFIER MethodInvocation Tokens tCONSTANT ClassCreator Tokens tIVAR ClassCreator Tokens tCVAR ClassCreator Tokens tGVAR ClassCreator token getPosition ReferenceType MethodInvocation ReferenceType MethodInvocation ReferenceType MethodInvocation ReferenceType MethodInvocation ReferenceType MethodInvocation ReferenceType MethodInvocation MethodInvocation ReferenceType MethodInvocation BinaryOperation ReferenceType MethodInvocation MethodInvocation Cast declare ReferenceType MethodInvocation Cast ReferenceType MethodInvocation Cast ReferenceType MethodInvocation Cast ReferenceType MethodInvocation Cast String token getValue SelfNode token getPosition NilNode token getPosition TrueNode token getPosition token getPosition token getPosition ByteList MethodInvocation create FixnumNode token getPosition + MethodInvocation Literal token getPosition token getPosition ReferenceType MethodInvocation ConstNode token getPosition ReferenceType MethodInvocation InstVarNode token getPosition ReferenceType MethodInvocation ClassVarNode token getPosition ReferenceType MethodInvocation GlobalVarNode token getPosition ReferenceType MethodInvocation token MethodInvocation getPosition token MethodInvocation getPosition 1 String token getValue String token getValue String token getValue String token getValue String token getValue getFile getStartLine	1
MethodDeclaration Modifier Annotation ReferenceType to_s ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal anyToString "to_s"	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration IfStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement private static boolean ReferenceType context ReferenceType selector ReferenceType obj ReferenceType ioObj BasicType ops ReferenceType VariableDeclarator BinaryOperation BlockStatement Cast BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Literal ThreadContext Selector IRubyObject RubyIO int Channel channel MethodInvocation || BinaryOperation BinaryOperation ReturnStatement ReferenceType MemberReference int real_ops BinaryOperation SelectionKey key Cast == MemberReference Literal StatementExpression StatementExpression true ioObj getChannel == MemberReference Literal instanceof MemberReference ReferenceType Literal SelectableChannel channel & Cast MemberReference ReferenceType MemberReference key null Cast MethodInvocation channel null channel SelectableChannel false ReferenceType MemberReference ops SelectableChannel channel ReferenceType MemberReference key BinaryOperation interestOps SelectableChannel channel SelectableChannel channel | MethodInvocation MemberReference key interestOps real_ops	1
MethodDeclaration Modifier ReferenceType isCompatibleWith FormalParameter IfStatement LocalVariableDeclaration Statement LocalVariableDeclaration IfStatement IfStatement IfStatement IfStatement IfStatement ReturnStatement final Encoding ReferenceType other BinaryOperation ReturnStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation ReturnStatement Literal EncodingCapable instanceof MemberReference ReferenceType MethodInvocation Encoding enc1 MemberReference Encoding enc2 MethodInvocation == MemberReference MemberReference MemberReference == MemberReference Literal MemberReference || MethodInvocation MethodInvocation Literal instanceof MemberReference ReferenceType MemberReference == MethodInvocation MemberReference MemberReference null other RubyString Cast checkEncoding value encoding other getEncoding enc1 enc2 enc1 value realSize 0 enc2 ! enc1 isAsciiCompatible ! enc2 isAsciiCompatible null enc2 USASCIIEncoding enc1 scanForCodeRange CR_7BIT enc2 ReferenceType MemberReference RubyString other	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement static public String ReferenceType clazz ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference RubyModule String path MethodInvocation == MethodInvocation Literal LocalVariableDeclaration ThrowStatement RubyModule real TernaryExpression != MethodInvocation MemberReference ThrowStatement path clazz getName path Literal charAt '#' ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference Cast clazz MethodInvocation getRuntime real MethodInvocation 0 String TernaryExpression clazz MethodInvocation getRuntime clazz isModule clazz ReferenceType MemberReference MemberReference getClassFromPath clazz MethodInvocation getRuntime MethodInvocation Literal Literal BinaryOperation newTypeError RubyClass clazz path BinaryOperation newTypeError clazz isClass "class" "module" + BinaryOperation MemberReference + MemberReference Literal + BinaryOperation Literal path path " can't be + Literal MemberReference " " "can't dump "	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ReturnStatement Assignment MethodInvocation MemberReference Ruby ThreadContext IRubyObject Block IRubyObject receiver MethodInvocation IRubyObject MethodInvocation IRubyObject firstValue MethodInvocation ! firstValue isTrue MemberReference MemberReference MethodInvocation = MemberReference MemberReference MemberReference MemberReference MemberReference call firstValue MethodInvocation getReceiverNode arg1 MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call firstValue firstValue MethodInvocation getValueNode context self receiver firstValue MemberReference MemberReference MemberReference MemberReference runtime context self context self receiver MemberReference MemberReference MemberReference MemberReference runtime context self runtime context self	1
MethodDeclaration FormalParameter StatementExpression ReferenceType Assignment RubyClass This MemberReference = MemberReference	0
MethodDeclaration Modifier ReferenceType IfStatement ReturnStatement synchronized public Map TypeArgument TypeArgument BinaryOperation StatementExpression MemberReference ReferenceType ReferenceType == MemberReference MemberReference Assignment String VariableAccessor Collections EMPTY_MAP MemberReference ClassCreator = ReferenceType Literal Hashtable TypeArgument TypeArgument 1 ReferenceType ReferenceType String VariableAccessor	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression public ReferenceType methodName ReferenceType signature MethodInvocation String String method MemberReference MemberReference MemberReference invokevirtual methodName signature	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter ReturnStatement static final byte BasicType address BasicType MethodInvocation long int MemberReference MemberReference address	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression public ReferenceType arg0 ReferenceType arg1 MethodInvocation IRubyObject IRubyObject ArrayCreator Literal ReferenceType ArrayInitializer 2 IRubyObject MemberReference MemberReference arg0 arg1	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement final static public ByteList BasicType i ClassCreator long ReferenceType MethodInvocation ByteList MemberReference i	0
MethodDeclaration Modifier Annotation ReferenceType op_mul FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg MethodInvocation name Literal required Literal ThreadContext IRubyObject MemberReference MemberReference MethodInvocation "*" 1 context arg MethodInvocation MethodInvocation getRuntime Literal fastGetClass Literal searchInternalModuleVariable "BigDecimal" "vpPrecLimit"	1
MethodDeclaration Modifier Annotation ReferenceType join FormalParameter LocalVariableDeclaration IfStatement IfStatement TryStatement IfStatement IfStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType args BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BlockStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement CatchClause CatchClause BinaryOperation BlockStatement MethodInvocation BlockStatement BlockStatement name Literal optional Literal backtrace Literal IRubyObject long timeoutMillis MemberReference > MemberReference Literal IfStatement StatementExpression IfStatement ThrowStatement MethodInvocation BlockStatement ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator BasicType VariableDeclarator Literal BlockStatement CatchClauseParameter StatementExpression AssertStatement CatchClauseParameter StatementExpression AssertStatement != MemberReference Literal ThrowStatement threadImpl isAlive ReturnStatement ReturnStatement "join" 1 true Long MAX_VALUE args length 0 BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement MethodInvocation SynchronizedStatement RubyThread currentThread MethodInvocation final long MethodInvocation long start MethodInvocation true StatementExpression StatementExpression IfStatement IfStatement InterruptedException ie MethodInvocation Literal MemberReference ie MethodInvocation Literal MemberReference null MemberReference MethodInvocation This > MemberReference Literal ThrowStatement MemberReference Cast = <= MemberReference Literal IfStatement MethodInvocation getRuntime This StatementExpression MethodInvocation MethodInvocation getRuntime Math MemberReference Literal min System currentTimeMillis MethodInvocation MethodInvocation MethodInvocation BlockStatement BinaryOperation BlockStatement ie printStackTrace false ie ie printStackTrace false ie MethodInvocation getRuntime args length 1 MethodInvocation timeoutMillis BasicType BinaryOperation timeoutMillis 0 MethodInvocation BlockStatement BlockStatement Literal newThreadError MethodInvocation getCurrentContext getThread timeoutMillis 200 currentThread pollThreadEvents threadImpl MemberReference join ! threadImpl isAlive BreakStatement > BinaryOperation MemberReference BreakStatement getNil MethodInvocation getRuntime long * Literal MemberReference threadImpl isAlive ReturnStatement ReturnStatement "thread tried to join - MethodInvocation MemberReference timeoutMillis MemberReference Literal newArgumentError ArraySelector MethodInvocation MethodInvocation args MethodInvocation This System currentTimeMillis start args length 1 Literal getValue MethodInvocation getRuntime 0 getNil	1
MethodDeclaration Modifier Annotation ReferenceType fileno FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType recv Cast name ElementArrayValue ThreadContext IRubyObject ReferenceType MethodInvocation Literal Literal RubyIO MemberReference MemberReference MemberReference Literal getData "to_i" currentFile context recv "no stream"	1
MethodDeclaration Modifier ReferenceType concurrentModification ReturnStatement private final RaiseException MethodInvocation MethodInvocation getRuntime Literal "Detected invalid hash contents due to with	1
MethodDeclaration Modifier ReferenceType ReturnStatement protected String BinaryOperation + BinaryOperation MethodInvocation + MethodInvocation Literal getName MethodInvocation getDeclaringClass "/"	0
MethodDeclaration Modifier Annotation ReferenceType define_method FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation StatementExpression ReferenceType VariableDeclarator Assignment Assignment MethodInvocation MemberReference name Literal frame Literal visibility MemberReference reads MemberReference ThreadContext IRubyObject Block Ruby runtime MethodInvocation String name MethodInvocation DynamicMethod Literal Visibility visibility MethodInvocation == MemberReference MemberReference Assignment RubyProc proc MethodInvocation MethodInvocation MemberReference = MemberReference MethodInvocation = RuntimeHelpers This MemberReference MemberReference MethodInvocation MemberReference MemberReference proc true PRIVATE context getRuntime arg0 MethodInvocation asJavaString null context getCurrentVisibility visibility MODULE_FUNCTION MemberReference MemberReference = runtime MemberReference MemberReference newProc proc MemberReference getBlock Block.Type MemberReference MemberReference MemberReference name context context runtime intern visibility PRIVATE Block.Type block type name visibility proc	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement final public long BasicType offset TernaryExpression long BinaryOperation MethodInvocation MethodInvocation == MemberReference Literal MemberReference getInt MemberReference getLong LONG_SIZE 32 offset offset	0
MethodDeclaration Modifier Annotation ReferenceType kill FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType args MethodInvocation IRubyObject IRubyObject MethodInvocation MemberReference kill recv getRuntime args	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public String ReferenceType one ReferenceType two ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType seven ReferenceType eight ArrayCreator String String String String String String String String ReferenceType ArrayInitializer String MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference one two seven eight	1
MethodDeclaration Modifier ReferenceType fastGetInstanceVariable FormalParameter AssertStatement ReturnStatement public IRubyObject ReferenceType internedName MethodInvocation Cast String IdUtil MemberReference isInstanceVariable ReferenceType MethodInvocation internedName IRubyObject MemberReference internedName	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType recv ReferenceType block ReferenceType sig MethodInvocation IRubyObject IRubyObject IRubyObject recv MethodInvocation getRuntime getNil	0
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType io BasicType offset MethodInvocation Ruby MemoryIO long Util MemberReference MethodInvocation newUnsigned16 runtime io MemberReference getShort offset	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType block MethodInvocation BlockStatement BlockStatement ThreadContext IRubyObject RubyModule String IRubyObject Block block isGiven StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement ReturnStatement MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation RubyProc proc MethodInvocation JavaMethod method Cast Object cArg0 MethodInvocation Object cArg1 MethodInvocation method MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call self getRuntime RubyProc MethodInvocation MemberReference MemberReference newProc ReferenceType MethodInvocation MemberReference MemberReference MemberReference Literal convertArg MemberReference MemberReference MemberReference Literal convertArg cArg0 cArg1 context self clazz name arg0 self getRuntime block Block.Type JavaMethod MemberReference MemberReference MemberReference MemberReference context arg0 method 0 context proc method 1 self name arg0 proc	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter IfStatement public Object BasicType channel ReferenceType message MethodInvocation BlockStatement BlockStatement int Object MemberReference StatementExpression ReturnStatement LocalVariableDeclaration StatementExpression ReturnStatement channel MethodInvocation Literal ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference MemberReference null request ClassCreator MemberReference MemberReference request call channel message ReferenceType MemberReference channel request message	0
MethodDeclaration Modifier write FormalParameter IOException StatementExpression public Modifier BasicType MethodInvocation final int MethodInvocation MemberReference MemberReference MethodInvocation call io MethodInvocation getRuntime io io RubyString MethodInvocation ClassCreator getCurrentContext io getRuntime ReferenceType ArrayCreator Literal ByteList BasicType ArrayInitializer false byte Cast BasicType MemberReference byte	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation MemberReference Object Object int Node body Cast MemberReference ClassCreator = support popCurrentScope support Literal setInDef yyVal ReferenceType MemberReference yyVal ReferenceType MethodInvocation ClassCreator Cast MethodInvocation MemberReference false Node ArraySelector yyVals DefnNode Cast getPosition ReferenceType Cast Cast ReferenceType MemberReference support getCurrentScope body BinaryOperation ReferenceType MemberReference ArgumentNode ReferenceType MemberReference ReferenceType Cast ArgsNode ArraySelector yyVals + Literal MemberReference Token ArraySelector yyVals Token ArraySelector yyVals String ReferenceType MemberReference BinaryOperation - 1 yyTop BinaryOperation BinaryOperation Token ArraySelector yyVals + Literal MemberReference + Literal MemberReference + Literal MemberReference BinaryOperation - 2 yyTop - 5 yyTop - 4 yyTop + Literal MemberReference - 4 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject MethodInvocation name Literal compat MemberReference MethodInvocation getRuntime "real?" CompatVersion RUBY1_9 getTrue	1
MethodDeclaration Modifier Annotation ReferenceType rewind FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType VariableDeclarator ReferenceType VariableDeclarator Cast Assignment Assignment MemberReference name Literal ThreadContext IRubyObject ArgsFileData data MethodInvocation RubyFixnum retVal Cast ReferenceType MemberReference MemberReference Literal = MemberReference Literal = retVal MemberReference MemberReference Literal getData ReferenceType MemberReference RubyIO data currentFile data 0 data 0 context recv "no stream to RubyIO data currentFile	0
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression ReturnStatement private IRubyObject ReferenceType ruby MethodInvocation MethodInvocation Ruby ruby MethodInvocation getWarnings ruby getNil MemberReference Literal warn ID values for a block parameter for	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name MethodInvocation ThreadContext IRubyObject RubyModule String MemberReference MemberReference MemberReference MemberReference call context self klazz oldName	0
MethodDeclaration Modifier ReferenceType defineClassUnder FormalParameter FormalParameter FormalParameter ReturnStatement public RubyClass ReferenceType name ReferenceType superClass ReferenceType MethodInvocation String RubyClass ObjectAllocator MethodInvocation getRuntime MemberReference MemberReference MemberReference This defineClassUnder name superClass	0
MethodDeclaration Modifier Annotation ReferenceType endCall FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression LocalVariableDeclaration ReturnStatement protected Deprecated Class ReferenceType cw ReferenceType mv ReferenceType name MethodInvocation MethodInvocation BasicType VariableDeclarator MethodInvocation ClassWriter MethodVisitor String mv visitEnd cw visitEnd byte code MethodInvocation classLoader MemberReference MemberReference MemberReference defineClass cw toByteArray name code	1
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType java_method FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType proxyClass ReferenceType rubyName ReferenceType argTypes ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation backtrace Literal meta Literal ThreadContext IRubyObject IRubyObject IRubyObject String name MethodInvocation RubyArray argTypesAry MethodInvocation Class argTypesClasses Cast MemberReference MemberReference MemberReference MemberReference getRubyMethod true true rubyName asJavaString argTypes convertToArray ReferenceType MethodInvocation context proxyClass name argTypesClasses Class argTypesAry ArrayCreator toArray ReferenceType MethodInvocation Class argTypesAry size	1
MethodDeclaration Modifier ReferenceType optional ReturnStatement static public Arity MemberReference	1
MethodDeclaration Modifier Annotation ReferenceType getc TryStatement public JRubyMethod ElementValuePair IRubyObject LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration IfStatement ReturnStatement CatchClause CatchClause CatchClause CatchClause CatchClause name ElementArrayValue ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement Literal Literal OpenFile myOpenFile MethodInvocation myOpenFile MethodInvocation checkReadable myOpenFile setReadBuffered Stream stream MethodInvocation MemberReference stream clearerr int c MethodInvocation == MemberReference Literal ReturnStatement MethodInvocation getRuntime PipeException ex MethodInvocation InvalidValueException ex MethodInvocation BadDescriptorException e MethodInvocation EOFException e MethodInvocation IOException e MethodInvocation getOpenFileChecked getRuntime myOpenFile getMainStream stream myOpenFile MethodInvocation getMainStream c - 1 MethodInvocation MemberReference newFixnum MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation getRuntime MethodInvocation getRuntime c newErrnoEPIPEError newErrnoEINVALError newErrnoEBADFError newEOFError MethodInvocation newIOError getNil e getMessage	1
MethodDeclaration Modifier ReferenceType getPosition FormalParameter ReturnStatement public ISourcePosition ReferenceType MethodInvocation ISourcePosition MemberReference getPosition	0
MethodDeclaration Modifier BasicType remove FormalParameter FormalParameter IfStatement ReturnStatement public boolean ReferenceType hash ReferenceType o BinaryOperation ReturnStatement BinaryOperation RubyHash Object instanceof MemberReference ReferenceType Literal != MethodInvocation MemberReference o IRubyObject false hash Cast internalDelete NO_ENTRY ReferenceType MemberReference IRubyObject o	1
MethodDeclaration Modifier load FormalParameter FormalParameter IOException StatementExpression StatementExpression StatementExpression IfStatement StatementExpression StatementExpression StatementExpression StatementExpression public Modifier ReferenceType runtime BasicType wrap MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation final Ruby boolean runtime Literal MethodInvocation MethodInvocation defineClass MemberReference MemberReference && MethodInvocation MethodInvocation StatementExpression StatementExpression MemberReference RubyTCPSocket MemberReference MemberReference MemberReference runtime runtime MethodInvocation runtime runtime runtime MemberReference getInstanceConfig RubyUNIXSocket MethodInvocation MethodInvocation runtime runtime runtime runtime getAllocator RubyUNIXSocket MemberReference MemberReference runtime runtime	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast new_colon3 Cast getPosition ReferenceType Cast ReferenceType MemberReference String ReferenceType MemberReference Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType ThrowStatement public Override RubyClass MethodInvocation MethodInvocation getRuntime Literal newTypeError "can't define	0
MethodDeclaration Modifier BasicType isExclusive ReturnStatement public boolean MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement static public IRubyObject ReferenceType array BinaryOperation BlockStatement BlockStatement RubyArray < Literal MethodInvocation ReturnStatement ReturnStatement 1 array getLength MethodInvocation MethodInvocation array Literal eltInternal array MethodInvocation getRuntime 1 getNil	0
MethodDeclaration Modifier ReferenceType splatValue FormalParameter IfStatement ReturnStatement static public RubyArray ReferenceType value MethodInvocation BlockStatement MethodInvocation IRubyObject value isNil ReturnStatement MemberReference MethodInvocation value value MethodInvocation getRuntime MemberReference newArray value	0
MethodDeclaration Modifier ReferenceType getBodyNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier ReferenceType concatArrays FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType original ReferenceType additional BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext JavaArray JavaArray int oldLength Cast int addLength Cast Object newArray MethodInvocation JavaArray javaArray ClassCreator System MethodInvocation Literal MemberReference Literal MemberReference arraycopy System MethodInvocation Literal MemberReference MemberReference MemberReference arraycopy RubyClass proxyClass Cast ArrayJavaProxy proxy ClassCreator proxy MemberReference proxy BasicType MethodInvocation BasicType MethodInvocation Array MethodInvocation BinaryOperation newInstance ReferenceType MethodInvocation MemberReference original getValue 0 newArray 0 oldLength additional getValue 0 newArray oldLength addLength ReferenceType MethodInvocation ReferenceType MethodInvocation MemberReference javaArray int original MethodInvocation length int additional MethodInvocation length javaClass + MemberReference MemberReference JavaArray getRuntime newArray RubyClass Java MemberReference MethodInvocation get_proxy_class ArrayJavaProxy context getRuntime proxyClass getLongValue getLongValue oldLength addLength javaArray array_class	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MemberReference Object Object int yyVal	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType block TernaryExpression name Literal frame Literal reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject Block MethodInvocation MethodInvocation MethodInvocation true BACKREF BACKREF CompatVersion RUBY1_9 block isGiven MemberReference MemberReference Literal Literal MemberReference Literal Literal MethodInvocation This Literal MemberReference enumeratorize context block null null arg0 false 0 context getRuntime arg0	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement StatementExpression final static public ReferenceType runtime ReferenceType io BasicType offset ReferenceType ary BasicType VariableDeclarator ForControl BlockStatement MethodInvocation Ruby MemoryIO long RubyArray int array ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression io MemberReference MemberReference Literal MemberReference put BasicType MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment offset array 0 array length int ary size int i Literal i array length MemberReference Cast = 0 ArraySelector array BasicType MethodInvocation MemberReference int Util MethodInvocation uint32Value i ary MemberReference entry i	1
MethodDeclaration Modifier ReferenceType ReturnStatement public Type MethodInvocation method	0
MethodDeclaration Modifier ReferenceType newInstance FormalParameter FormalParameter FormalParameter ReturnStatement static public ReferenceType runtime ReferenceType ReferenceType msg ClassCreator Ruby RubyClass String ReferenceType MemberReference MemberReference MemberReference runtime msg	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement final public RubyFixnum ReferenceType runtime BasicType i BasicType value MethodInvocation Ruby int long runtimeCache MemberReference MemberReference MemberReference runtime i value	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType Assignment Label This MemberReference = MemberReference	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference ArraySelector escaped Literal 0	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement LocalVariableDeclaration ReturnStatement public T ReferenceType javaObject ReferenceType BinaryOperation ReturnStatement BasicType VariableDeclarator MethodInvocation Object A || BinaryOperation BinaryOperation Literal int hash MethodInvocation MethodInvocation MemberReference == MemberReference Literal == MemberReference Literal null MemberReference hash MemberReference MemberReference MemberReference hash javaObject null null javaObject javaObject hash	1
MethodDeclaration Modifier ReferenceType ReturnStatement public String MemberReference argv	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal Cast Literal Literal Cast new_args Cast getPosition null ReferenceType MemberReference null null ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals BlockArgNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier Annotation setVisibility FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression public Override ReferenceType visibility ReferenceType VariableDeclarator Assignment Assignment Assignment SuperMethodInvocation Visibility ClassCreator MemberReference MethodInvocation = MemberReference MemberReference = MemberReference MemberReference = MemberReference setVisibility ReferenceType box.actualMethod dup callCount box callCount box visibility	0
MethodDeclaration Modifier BasicType getAddress FormalParameter ReturnStatement private static final long ReferenceType Cast Pointer ReferenceType MethodInvocation getMemoryIO	1
MethodDeclaration Modifier defineVariable FormalParameter StatementExpression public Modifier ReferenceType variable MethodInvocation final GlobalVariable MethodInvocation ClassCreator define variable name ReferenceType MethodDeclaration MethodDeclaration Modifier ReferenceType getValue ReturnStatement Modifier ReferenceType setValue FormalParameter ReturnStatement public IRubyObject MethodInvocation public IRubyObject ReferenceType newValue MethodInvocation variable get IRubyObject variable MemberReference set newValue	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation MethodInvocation NotNode Cast getPosition support Cast getConditionNode ReferenceType MemberReference ReferenceType MemberReference Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement StatementExpression StatementExpression IfStatement StatementExpression ReturnStatement public Operand Modifier ReferenceType ifNode ReferenceType s ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BinaryOperation StatementExpression StatementExpression MethodInvocation MethodInvocation BinaryOperation StatementExpression StatementExpression MethodInvocation MemberReference final IfNode IR_Scope Node actualCondition MethodInvocation Variable result MethodInvocation Label MethodInvocation Label MethodInvocation s ClassCreator addInstr != MethodInvocation Literal MethodInvocation MethodInvocation s ClassCreator addInstr s ClassCreator addInstr != MethodInvocation Literal MethodInvocation MethodInvocation s ClassCreator addInstr result MethodInvocation skipOverNewlines s getNewVariable s s ReferenceType MethodInvocation MemberReference MemberReference ifNode getThenBody null s ClassCreator addInstr s ClassCreator addInstr ReferenceType MemberReference ReferenceType MemberReference ifNode getElseBody null s ClassCreator addInstr s ClassCreator addInstr ReferenceType MemberReference ifNode MemberReference MemberReference build BooleanLiteral FALSE ReferenceType MemberReference MethodInvocation ReferenceType MemberReference MemberReference JUMP_Instr LABEL_Instr ReferenceType MemberReference MethodInvocation ReferenceType MemberReference MemberReference LABEL_Instr actualCondition s result MethodInvocation MemberReference build result Nil NIL result MethodInvocation MemberReference build result Nil NIL ifNode getThenBody s ifNode getElseBody s	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal ThreadContext IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement runtime getFalse context getRuntime other BasicType VariableDeclarator MethodInvocation boolean equal BinaryOperation runtime MemberReference newBoolean == MethodInvocation Cast equal getObject ReferenceType MemberReference other	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MethodInvocation BasicType VariableDeclarator Assignment MemberReference Object Object int support Cast checkExpression support Cast checkExpression boolean isLiteral BinaryOperation MemberReference ClassCreator = yyVal ReferenceType MemberReference ReferenceType MemberReference && BinaryOperation BinaryOperation yyVal ReferenceType MethodInvocation Cast Cast Literal MemberReference Node ArraySelector yyVals Node ArraySelector yyVals instanceof Cast ReferenceType instanceof Cast ReferenceType DotNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference true isLiteral BinaryOperation BinaryOperation ReferenceType MemberReference FixnumNode ReferenceType MemberReference FixnumNode ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals + Literal MemberReference + Literal MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation - 2 yyTop 0 yyTop BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop - 2 yyTop 0 yyTop - 2 yyTop	1
MethodDeclaration Modifier Annotation BasicType FormalParameter ReturnStatement static public Deprecated boolean ReferenceType rubyObject Cast IRubyObject ReferenceType MethodInvocation Boolean MemberReference ClassReference convertRubyToJava rubyObject BasicType boolean	1
MethodDeclaration Modifier Annotation ReferenceType build FormalParameter ReturnStatement public JRubyMethod ElementValuePair StructLayout ReferenceType context ClassCreator name Literal ThreadContext ReferenceType MethodInvocation MemberReference MemberReference BinaryOperation MemberReference StructLayout context getRuntime fields + MemberReference BinaryOperation & BinaryOperation BinaryOperation - MemberReference Literal - MemberReference Literal size 1 1	0
MethodDeclaration Modifier Annotation ReferenceType gets19 FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation StatementExpression MemberReference name Literal writes MemberReference compat MemberReference ThreadContext Ruby runtime MethodInvocation IRubyObject result MethodInvocation ! result isNil MethodInvocation result "gets" RUBY1_9 context getRuntime MemberReference MethodInvocation getline context MethodInvocation getCurrentScope runtime MemberReference separator MemberReference setLastLine runtime result	1
MethodDeclaration Modifier ReferenceType ReturnStatement public IRubyObject MethodInvocation MethodInvocation MethodInvocation newString getRuntime value dup	0
MethodDeclaration Modifier ReferenceType ReturnStatement public This	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType block MethodInvocation ThreadContext IRubyObject IRubyObject Block body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context arg0 arg1 type block	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context ReferenceType name MethodInvocation ThreadContext String runtimeCache MemberReference MemberReference Literal context name 5	0
MethodDeclaration Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile andNode context true	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression ReturnStatement protected IRubyObject ReferenceType caller ReferenceType selfType ReferenceType block ReferenceType context ReferenceType self ReferenceType name ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement Assignment Assignment MethodInvocation IRubyObject RubyClass Block ThreadContext IRubyObject String IRubyObject IRubyObject IRubyObject entry TernaryExpression DynamicMethod method MemberReference MemberReference MemberReference ReturnStatement MemberReference MemberReference = MemberReference MemberReference = method MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call BinaryOperation MethodInvocation MemberReference entry method method caller MethodInvocation lastName name cache entry context self selfType name arg1 arg2 arg3 block != MemberReference Literal selfType MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference selfType null name context self name method arg1 arg2 arg3 block	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod IRubyObject MethodInvocation Java MethodInvocation MethodInvocation getInstance getRuntime constructor	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement public Operand Modifier ReferenceType iVisited ReferenceType s ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement final Colon2Node IR_Scope Node leftNode MethodInvocation final String name MethodInvocation == MemberReference Literal ReturnStatement BinaryOperation BlockStatement IfStatement iVisited iVisited getName leftNode null MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement BinaryOperation BlockStatement BlockStatement MemberReference MemberReference MemberReference iVisited Colon2ConstNode ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement ThrowStatement s s name Operand module MethodInvocation instanceof MemberReference ReferenceType ReturnStatement LocalVariableDeclaration StatementExpression ReturnStatement iVisited Colon2MethodNode ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference ClassCreator MethodInvocation MemberReference build module MetaObject MethodInvocation ReferenceType VariableDeclarator MethodInvocation MemberReference Colon2MethodNode Cast List TypeArgument args MethodInvocation Operand block MethodInvocation Variable callResult MethodInvocation IR_Instr callInstr ClassCreator s MemberReference addInstr callResult ReferenceType BinaryOperation iVisited s Cast MemberReference MemberReference Variable constVal MethodInvocation s ClassCreator addInstr constVal ReferenceType MemberReference ReferenceType Literal MemberReference setupCallArgs Literal MemberReference setupCallClosure s getNewVariable ReferenceType MemberReference ClassCreator MethodInvocation MemberReference callInstr NotCompilableException + Literal MemberReference ReferenceType MemberReference s name s getNewVariable ReferenceType MemberReference MemberReference MemberReference Colon2MethodNode iVisited Operand null s null s CALL_Instr callResult ReferenceType MethodInvocation args ArrayCreator toArray block "Not " iVisited MetaObject module constVal module name MethAddr getName ReferenceType MethodInvocation Operand args size	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int Literal yyerror yyVal "constant re-assignment"	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyString ReferenceType context ReferenceType other BinaryOperation BlockStatement MethodInvocation name ElementArrayValue compat MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement MemberReference Literal Literal CompatVersion RUBY1_9 other RubyFixnum ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation MethodInvocation Assignment This other "<<" Encoding enc MemberReference int c MethodInvocation int cl MethodInvocation BinaryOperation enc MemberReference MemberReference BinaryOperation codeToMbc MemberReference MemberReference += value encoding RubyNumeric MemberReference num2int MethodInvocation MemberReference MemberReference codeLength + MemberReference MemberReference c value bytes + MemberReference MemberReference value realSize cl other context getRuntime enc c value realSize cl value begin value realSize	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext JavaArray javaArray ClassCreator RubyClass proxyClass Cast ArrayJavaProxy proxy ClassCreator proxy MemberReference proxy ReferenceType MethodInvocation MethodInvocation ReferenceType MethodInvocation ReferenceType MethodInvocation MemberReference javaArray JavaArray getRuntime Array MethodInvocation Literal newInstance RubyClass Java MemberReference MethodInvocation get_proxy_class ArrayJavaProxy context getRuntime proxyClass javaClass 0 javaArray array_class	1
MethodDeclaration Modifier ReferenceType iterator ReturnStatement public Iterator ClassCreator ReferenceType MemberReference view	0
MethodDeclaration Modifier ReferenceType getValue ReturnStatement public BigInteger MemberReference value	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MethodInvocation MethodInvocation MemberReference Object Object int support BinaryOperation setInSingle support pushLocalScope lexer MemberReference setState yyVal + MethodInvocation Literal LexState EXPR_END support getInSingle 1	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public RubyArray ReferenceType context BasicType ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement MemberReference ThreadContext boolean Ruby runtime MethodInvocation RubyArray array MethodInvocation RubyModule objectClass MethodInvocation IfStatement IfStatement array context getRuntime runtime newArray runtime getObject BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement BlockStatement || BinaryOperation BinaryOperation StatementExpression LocalVariableDeclaration ForStatement StatementExpression || BinaryOperation BinaryOperation StatementExpression StatementExpression == MethodInvocation This == MemberReference This MethodInvocation ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation == MethodInvocation This == MemberReference This MethodInvocation MethodInvocation MethodInvocation getRuntime objectClass array MethodInvocation addAll Set TypeArgument names ClassCreator VariableDeclaration BinaryOperation Assignment StatementExpression array MemberReference addAll MethodInvocation getRuntime objectClass array MethodInvocation addAll array MethodInvocation addAll getModule objectClass ReferenceType ReferenceType ReferenceType VariableDeclarator && BinaryOperation BinaryOperation MemberReference MethodInvocation = MethodInvocation names getModule objectClass String HashSet TypeArgument RubyModule module This != MemberReference Literal != MemberReference MemberReference module module getSuperClass names MethodInvocation addAll ReferenceType module null module objectClass module String	1
MethodDeclaration Modifier ReferenceType getNewConstant FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement ReturnStatement public String ReferenceType type ReferenceType name_prefix ReferenceType init ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MemberReference String String Object cv MethodInvocation String realName MethodInvocation cv MethodInvocation MemberReference MemberReference MemberReference Literal Literal visitField != MemberReference Literal StatementExpression StatementExpression StatementExpression realName getClassVisitor visitEnd ACC_PRIVATE realName type null null init null MethodInvocation MethodInvocation MethodInvocation initMethod MemberReference aload initMethod MemberReference ldc initMethod MethodInvocation MemberReference MemberReference putfield init getClassname realName type	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType block TernaryExpression name Literal frame Literal compat MemberReference ThreadContext IRubyObject Block MethodInvocation MethodInvocation MethodInvocation true CompatVersion RUBY1_9 block isGiven MemberReference MemberReference MemberReference MethodInvocation This Literal MemberReference enumeratorize context arg block context getRuntime arg	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyModule ReferenceType args MethodInvocation This name Literal rest Literal IRubyObject MethodInvocation getMetaClass true MemberReference MemberReference args PRIVATE	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier Annotation ReferenceType quote FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyString ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference name ElementArrayValue required Literal optional Literal meta Literal compat MemberReference ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation final KCode code || BinaryOperation MemberReference StatementExpression StatementExpression RubyString src MemberReference RubyString dst MethodInvocation dst MemberReference infectBy dst Literal Literal 1 1 true CompatVersion RUBY1_8 context getRuntime == MemberReference Literal ArraySelector MethodInvocation args Assignment Assignment ArraySelector MethodInvocation args RubyString MemberReference MethodInvocation src args length 1 Literal isNil MemberReference MethodInvocation = MemberReference MethodInvocation = Literal convertToString runtime MethodInvocation MethodInvocation quote 1 code runtime getKCode code KCode MemberReference MemberReference create 0 src getByteList code getEncoding runtime ArraySelector MethodInvocation args Literal toString 1	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override Arity MethodInvocation Arity noArguments	0
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement IfStatement ReturnStatement synchronized static public CallSite ReferenceType name MethodInvocation ReturnStatement MemberReference ReturnStatement ClassCreator String name Literal equals ClassCreator RubyInstanceConfig MethodInvocation ReferenceType MemberReference ReferenceType MemberReference name name	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject String IRubyObject IRubyObject IRubyObject DynamicMethod method MethodInvocation MemberReference ReturnStatement method MemberReference MemberReference This MemberReference MemberReference MemberReference MemberReference call MemberReference searchMethod method MethodInvocation context self name arg0 arg1 arg2 name RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference context self method getVisibility name CallType FUNCTIONAL arg0 arg1 arg2 Block	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime MethodInvocation Ruby MemberReference MethodInvocation runtime runtime	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier warning FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter AssertStatement StatementExpression public ReferenceType id ReferenceType fileName BasicType lineNumber ReferenceType message ReferenceType data MethodInvocation MethodInvocation ID String int String Object isVerbose MemberReference MemberReference MemberReference MemberReference MemberReference warn id fileName lineNumber message data	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement public boolean ReferenceType other BinaryOperation AssignedName && BinaryOperation BinaryOperation != MemberReference Literal == MemberReference MemberReference other null value value	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference Struct runtime	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement static public RubyFixnum ReferenceType runtime MemberReference Ruby runtime ArraySelector BinaryOperation + MemberReference Literal 3	0
MethodDeclaration Modifier ReferenceType fixed FormalParameter AssertStatement ReturnStatement static public Arity BasicType arity BinaryOperation MethodInvocation int >= MemberReference Literal MemberReference createArity arity 0 arity	1
MethodDeclaration Modifier Annotation ReferenceType LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod IRubyObject ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Method meth MethodInvocation != MemberReference Literal ReturnStatement MethodInvocation getRuntime MethodInvocation javaClass meth null ClassCreator getNil ReferenceType MethodInvocation MemberReference JavaMethod getRuntime meth	1
MethodDeclaration Modifier BasicType ReturnStatement public long MethodInvocation get	0
MethodDeclaration Modifier Annotation FormalParameter FormalParameter FormalParameter StatementExpression public Override ReferenceType node ReferenceType context BasicType expr MethodInvocation Node BodyCompiler boolean Cast MemberReference MemberReference ReferenceType MemberReference context expr Hash19Node node	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression IfStatement IfStatement StatementExpression LocalVariableDeclaration AssertStatement ForStatement ForStatement ReturnStatement static public BigDecimal ReferenceType squarD ReferenceType rootMC BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator VariableDeclarator ReferenceType VariableDeclarator VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator Assignment BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement Assignment Assignment Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement Assignment ReferenceType VariableDeclarator BinaryOperation Literal ForControl BlockStatement ForControl BlockStatement MemberReference BigDecimal MathContext int sign MethodInvocation == MemberReference Literal ThrowStatement BinaryOperation BlockStatement int prec MethodInvocation == MemberReference Literal ThrowStatement int Literal int nInit Literal MathContext nMC ClassCreator BigDecimal x Literal e Literal BigDecimal v Literal g Literal BigInteger bi MethodInvocation int biLen MethodInvocation int shift MethodInvocation MemberReference MethodInvocation = double root MethodInvocation BigDecimal ClassCreator int scale MethodInvocation == BinaryOperation Literal StatementExpression MemberReference Cast = MemberReference ClassCreator = MemberReference MethodInvocation = != MemberReference Literal StatementExpression < MemberReference MemberReference ReturnStatement MemberReference MethodInvocation = List TypeArgument nPrecs ClassCreator > MemberReference Literal ending VariableDeclaration BinaryOperation Assignment StatementExpression VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression IfStatement StatementExpression StatementExpression x squarD signum sign - 1 ClassCreator == MemberReference Literal ReturnStatement rootMC prec 0 ClassCreator 62 16 ReferenceType Literal MemberReference null null null null squarD unscaledValue bi Math Literal BinaryOperation max bi bi MemberReference Math MethodInvocation sqrt ReferenceType MethodInvocation squarD scale % MemberReference Literal 1 Assignment scale BasicType MethodInvocation x ReferenceType MemberReference MemberReference x x MemberReference MemberReference multiply scale 0 Assignment prec nInit MethodInvocation v MethodInvocation MemberReference ReferenceType ReferenceType nInit 3 BasicType VariableDeclarator > MemberReference MemberReference MemberReference BinaryOperation = MethodInvocation BasicType VariableDeclarator > MemberReference Literal -- i Assignment Assignment BinaryOperation BlockStatement BlockStatement Assignment Assignment ReferenceType BinaryOperation sign 0 MethodInvocation ReferenceType Literal MathContext 18 RoundingMode 0 + BinaryOperation TernaryExpression shift bi doubleValue BigDecimal BinaryOperation shiftLeft scale 2 MemberReference MemberReference *= int Math BinaryOperation floor BigDecimal root nMC nMC MemberReference MethodInvocation = x MemberReference round MemberReference multiply nMC Integer ArrayList TypeArgument int m BinaryOperation m nInit m + BinaryOperation TernaryExpression nPrecs MemberReference add int i BinaryOperation i - 1 MemberReference ClassCreator = MemberReference MethodInvocation = != MemberReference Literal StatementExpression StatementExpression BreakStatement MemberReference MethodInvocation = MemberReference MethodInvocation = ArithmeticException + Literal MemberReference squarD MemberReference round IllegalArgumentException roots won't have precision = 0" - MemberReference MemberReference BinaryOperation Literal Literal / MemberReference Literal root / MemberReference Literal x x MemberReference rootMC x ReferenceType + MemberReference Literal / MemberReference Literal BinaryOperation Literal Literal m - MethodInvocation Literal nMC ReferenceType MethodInvocation TernaryExpression e squarD MethodInvocation MemberReference subtract i 0 Assignment Assignment g MethodInvocation subtract v v MethodInvocation add root of a negative number: " squarD rootMC biLen == BinaryOperation Literal 0 1 shift 2 scale scale Integer prec 1 m 2 > MemberReference Literal 1 2 nPrecs size 1 MathContext nPrecs MemberReference get BinaryOperation MemberReference MemberReference x MemberReference MemberReference multiply nMC MemberReference MethodInvocation = MemberReference MethodInvocation = MethodInvocation MemberReference multiply g MemberReference MemberReference multiply % MemberReference Literal 0 m 100 i == BinaryOperation Literal RoundingMode HALF_UP RoundingMode x nMC x x MethodInvocation add x x MethodInvocation MemberReference add MemberReference MemberReference multiply x v nMC biLen 2 % MemberReference Literal 1 e MemberReference MemberReference multiply e MemberReference MemberReference multiply rootMC v nMC i 2 v nMC v rootMC	1
MethodDeclaration Modifier Annotation ReferenceType rewind IfStatement StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject BinaryOperation ThrowStatement MethodInvocation Assignment This name Literal && MethodInvocation BinaryOperation MethodInvocation MemberReference Literal = ! isTaint >= MethodInvocation Literal MethodInvocation getRuntime pos 0 MethodInvocation getRuntime 4 Literal newSecurityError getSafeLevel "Insecure: can't	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public ReferenceType context ReferenceType descriptor MethodInvocation ThreadContext String runtimeCache This MemberReference Literal MemberReference context 9 descriptor	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public RubyArray ReferenceType value ReferenceType VariableDeclarator MethodInvocation BlockStatement Cast IRubyObject IRubyObject tmp MethodInvocation tmp isNil LocalVariableDeclaration IfStatement ReferenceType MemberReference value checkArrayType ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement RubyArray tmp Ruby runtime MethodInvocation != MethodInvocation MethodInvocation StatementExpression IfStatement ReturnStatement ReturnStatement value getRuntime value MethodInvocation MethodInvocation getMetaClass runtime Assignment BinaryOperation ThrowStatement Cast MethodInvocation Literal searchMethod getImplementationClass MemberReference MethodInvocation = instanceof MemberReference ReferenceType MethodInvocation ReferenceType MemberReference runtime MemberReference newArray "to_a" value value MethodInvocation Literal callMethod value RubyArray runtime Literal newTypeError RubyArray value value runtime getCurrentContext "to_a" did not return	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement private static List TypeArgument ReferenceType runtime ReferenceType path Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference ReferenceType Ruby String final JRubyFile directory MethodInvocation List TypeArgument MethodInvocation Literal Literal add Literal Literal add String JRubyFile MethodInvocation MemberReference create ReferenceType MemberReference getContents 0 "." 1 ".." runtime getCurrentDirectory path String directory	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType arg BinaryOperation ReturnStatement MethodInvocation name Literal visibility MemberReference compat MemberReference IRubyObject instanceof MemberReference ReferenceType MethodInvocation MethodInvocation Literal initializeCommon19 "initialize" Visibility PRIVATE CompatVersion RUBY1_9 arg RubyRegexp Cast arg convertToString 0 ReferenceType MemberReference RubyRegexp arg	1
MethodDeclaration Modifier StatementExpression StatementExpression ForStatement ForStatement public MethodInvocation MethodInvocation ForControl BlockStatement ForControl BlockStatement MemberReference Literal eval MemberReference Literal eval VariableDeclaration BinaryOperation MemberReference StatementExpression VariableDeclaration BinaryOperation MemberReference StatementExpression end" end" BasicType VariableDeclarator < MemberReference Literal ++ i MethodInvocation BasicType VariableDeclarator < MemberReference Literal ++ i MethodInvocation int i Literal i 2 MemberReference Literal eval int i Literal i 2 MemberReference Literal eval 0 "foo" 0 "foo"	0
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyRegexp ReferenceType recv ReferenceType args ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference name ElementArrayValue required Literal optional Literal meta Literal IRubyObject IRubyObject RubyClass Cast RubyRegexp re Cast re MemberReference MemberReference re Literal Literal 1 2 true ReferenceType MemberReference ReferenceType MethodInvocation args Block RubyClass recv RubyRegexp	0
MethodDeclaration Modifier start StatementExpression public MethodInvocation MethodInvocation getMethodVisitor visitCode	0
MethodDeclaration Modifier Annotation ReferenceType LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject BasicType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation name Literal long size MethodInvocation == MemberReference Literal MethodInvocation MethodInvocation getRuntime size 0 MethodInvocation getRuntime MemberReference newFixnum getNil size	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + Literal TernaryExpression MethodInvocation Literal MethodInvocation isBlank "" MemberReference toString	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType value MethodInvocation MethodInvocation long double MemberReference Literal checkBounds BinaryOperation MemberReference offset 8 + MemberReference MemberReference value address offset	0
MethodDeclaration Modifier ReferenceType ReturnStatement public List TypeArgument ClassCreator ReferenceType ReferenceType MethodInvocation String ArrayList TypeArgument MethodInvocation ReferenceType keySet String	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 MethodInvocation IRubyObject IRubyObject IRubyObject IRubyObject MethodInvocation MemberReference MemberReference MemberReference recv getRuntime arg1 arg2 arg3	1
MethodDeclaration Modifier Annotation ReferenceType offset FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType index MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject MemberReference MethodInvocation Literal CompatVersion RUBY1_8 context RubyNumeric MemberReference num2int false index	0
MethodDeclaration Modifier Annotation ReferenceType first FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MemberReference name Literal compat MemberReference ThreadContext begin "first" CompatVersion RUBY1_9	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast literal_concat Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier BasicType FormalParameter IfStatement ReturnStatement private boolean ReferenceType arg BinaryOperation BlockStatement Literal String != Literal MemberReference ReturnStatement true null arg MethodInvocation ! MemberReference arg	0
MethodDeclaration Modifier Annotation ReferenceType getAbsoluteFile ReturnStatement public Override File This	0
MethodDeclaration Modifier FormalParameter FormalParameter IfStatement final public BasicType offset BasicType value BinaryOperation BlockStatement BlockStatement long long == MemberReference Literal StatementExpression StatementExpression LONG_SIZE 32 MethodInvocation MethodInvocation MemberReference Cast MemberReference MemberReference putLong offset BasicType MemberReference offset value int value	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType MethodInvocation NodeVisitor This	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context Modifier ReferenceType recv ReferenceType symbol ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation name Literal required Literal module Literal visibility MemberReference ThreadContext final IRubyObject IRubyObject Ruby runtime MethodInvocation RubyModule module TernaryExpression String name BinaryOperation MethodInvocation == MemberReference Literal MethodInvocation runtime MethodInvocation newString 1 true PRIVATE context getRuntime BinaryOperation Cast MethodInvocation + BinaryOperation MethodInvocation runtime MethodInvocation null runtime getNil file instanceof MemberReference ReferenceType ReferenceType MemberReference runtime getObject + MethodInvocation Literal symbol asJavaString MemberReference recv RubyModule RubyModule recv module getName "::" name	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement public boolean ReferenceType other BinaryOperation < MemberReference MemberReference value other value	0
MethodDeclaration Modifier Annotation printStackTrace FormalParameter LocalVariableDeclaration StatementExpression StatementExpression public Override ReferenceType pw ReferenceType VariableDeclarator MethodInvocation MethodInvocation PrintWriter ByteArrayOutputStream baos ClassCreator ClassCreator printStackTrace pw MethodInvocation print ReferenceType ReferenceType MemberReference baos toString ByteArrayOutputStream PrintStream baos	0
MethodDeclaration Modifier ReferenceType findClass FormalParameter ClassNotFoundException IfStatement ReturnStatement protected Class ReferenceType name MethodInvocation BlockStatement SuperMethodInvocation String name Literal equals LocalVariableDeclaration ReturnStatement MemberReference findClass BasicType VariableDeclarator MethodInvocation name byte classBytes MethodInvocation MemberReference MemberReference Literal MemberReference defineClass MemberReference name classBytes 0 classBytes length message	1
MethodDeclaration Modifier Annotation ReferenceType push FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement synchronized public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType value MethodInvocation MethodInvocation MethodInvocation MethodInvocation name ElementArrayValue ThreadContext IRubyObject MemberReference entries MemberReference addLast context MethodInvocation getRuntime Literal Literal Literal context value getNil "push" "<<"	1
MethodDeclaration Modifier ReferenceType getOptArgs ReturnStatement public ListNode MemberReference optArgs	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType t MethodInvocation name Literal IRubyObject t MethodInvocation getRuntime "to_s" Literal newString "true"	1
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter ReturnStatement public String BasicType d Literal double "double"	0
MethodDeclaration Modifier FormalParameter FormalParameter IfStatement public BasicType index BasicType depth BinaryOperation BlockStatement BlockStatement int int == MemberReference Literal StatementExpression StatementExpression depth 0 MethodInvocation MethodInvocation MemberReference MemberReference MemberReference index depth index	0
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter ReturnStatement public String ReferenceType b Literal BigInteger	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType ReferenceType type MethodInvocation ThreadContext Block ReferenceType MemberReference Literal MemberReference MemberReference yield Type context null type	0
MethodDeclaration Modifier ReferenceType FormalParameter TryStatement private final IRubyObject BasicType offset ReturnStatement CatchClause long MemberReference CatchClauseParameter StatementExpression ReturnStatement ArraySelector values ArrayIndexOutOfBoundsException e MethodInvocation MethodInvocation BinaryOperation concurrentModification MethodInvocation getRuntime + MemberReference Cast getNil begin BasicType MemberReference int offset	1
MethodDeclaration Modifier BasicType ReturnStatement public long MethodInvocation get	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Assignment MemberReference Object Object int MemberReference MethodInvocation = MemberReference MethodInvocation = yyVal yyVal support MethodInvocation MethodInvocation Cast arg_concat yyVal support Cast Cast arg_blk_pass Cast getPosition support MethodInvocation ClassCreator newArrayNode ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Cast getPosition ReferenceType MethodInvocation Cast Node ArraySelector yyVals Node yyVal BlockPassNode ArraySelector yyVals ListNode ArraySelector yyVals ReferenceType MemberReference HashNode getPosition ReferenceType MemberReference BinaryOperation BinaryOperation BinaryOperation ListNode ArraySelector yyVals ListNode ArraySelector yyVals + Literal MemberReference + Literal MemberReference + Literal MemberReference BinaryOperation BinaryOperation - 1 yyTop 0 yyTop - 4 yyTop + Literal MemberReference + Literal MemberReference - 4 yyTop - 4 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType convertToArray ReturnStatement public Override RubyArray This	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression final public BasicType buffer BasicType offset BasicType value MethodInvocation byte int float MemberReference MemberReference MethodInvocation buffer offset Float MemberReference value	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter IfStatement ReturnStatement private static double ReferenceType runtime ReferenceType o BinaryOperation BlockStatement MethodInvocation Ruby IRubyObject instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement RubyKernel MethodInvocation MemberReference MemberReference o RubyString ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement BlockStatement o o String str MethodInvocation double d MethodInvocation str Literal matches ReturnStatement ThrowStatement o asJavaString RubyNumeric MethodInvocation num2dbl MemberReference MethodInvocation o d runtime Literal newTypeError item not a	0
MethodDeclaration addMethod FormalParameter FormalParameter IfStatement IfStatement StatementExpression StatementExpression ReferenceType method ReferenceType javaClass BinaryOperation BlockStatement MethodInvocation BlockStatement MethodInvocation Assignment Method Class TypeArgument == MemberReference Literal StatementExpression ! Ruby isSecurityRestricted TryStatement methods MemberReference add MemberReference BinaryOperation |= ? methods null Assignment StatementExpression CatchClause method == MemberReference MethodInvocation MemberReference ClassCreator = MethodInvocation CatchClauseParameter javaClass method getDeclaringClass methods ReferenceType Literal method Literal setAccessible SecurityException e ArrayList TypeArgument 4 true ReferenceType Method	1
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement TryStatement ReturnStatement private InputStream ReferenceType name BinaryOperation BlockStatement LocalVariableDeclaration ReturnStatement CatchClause ClassReference String == MemberReference Literal ReturnStatement Modifier ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter MethodInvocation MethodInvocation ReferenceType name null Literal final URL ClassCreator openStream IOException e getClassLoader MemberReference getResourceAsStream JRubyApplet null ReferenceType MethodInvocation MemberReference name URL name	1
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement private final IRubyObject ReferenceType context ReferenceType arg1 ReferenceType arg2 BasicType VariableDeclarator MethodInvocation ThreadContext IRubyObject IRubyObject long retval MethodInvocation resultConverter MemberReference MemberReference fromNative invoker MemberReference MethodInvocation MethodInvocation context retval function c1 MemberReference MemberReference longValue c2 MemberReference MemberReference longValue context arg1 context arg2	1
MethodDeclaration Modifier Annotation Annotation ReferenceType dup ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject SuperMethodInvocation name Literal dup	0
MethodDeclaration Modifier Annotation Annotation ReferenceType hash LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair Override RubyFixnum ReferenceType VariableDeclarator MethodInvocation name Literal Ruby runtime MethodInvocation RubyFixnum MemberReference MethodInvocation newFixnum getRuntime runtime MemberReference runtime	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime getNil	0
MethodDeclaration Modifier StatementExpression private MethodInvocation config MethodInvocation getOutput MethodInvocation println config	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime BinaryOperation * MethodInvocation Literal stat 1000	0
MethodDeclaration Modifier Annotation ReferenceType setValue FormalParameter FormalParameter FormalParameter IfStatement public Override IRubyObject BasicType offset ReferenceType value BasicType depth BinaryOperation BlockStatement BlockStatement int IRubyObject int > MemberReference Literal AssertStatement ReturnStatement AssertStatement SwitchStatement depth 0 BinaryOperation Literal MethodInvocation BinaryOperation MemberReference MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase != MemberReference Literal "If depth > 0, then parent should not be null" parent MemberReference MemberReference BinaryOperation setValue < MemberReference MemberReference SIZE_ERROR offset Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ThrowStatement parent null offset value - MemberReference Literal offset SIZE 0 Assignment 1 Assignment 2 Assignment 3 Assignment ClassCreator depth 1 MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = ReferenceType MemberReference variableValueZero value variableValueOne value variableValueTwo value variableValueThree value RuntimeException SIZE_ERROR	1
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation MethodInvocation assertEquals RubyFixnum MemberReference zero MemberReference to_i runtime	0
MethodDeclaration Modifier ReferenceType getThenBody ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier Annotation FormalParameter ForStatement public Override ReferenceType l EnhancedForControl StatementExpression List TypeArgument VariableDeclaration MemberReference MethodInvocation ReferenceType ReferenceType VariableDeclarator o MemberReference Variable Operand o l	1
MethodDeclaration Modifier FormalParameter StatementExpression public BasicType Assignment int This MemberReference = MemberReference	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement static public int BasicType cr Cast long BasicType BinaryOperation int >>> MemberReference Literal cr 31	0
MethodDeclaration Modifier Annotation ReferenceType prec FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType receiver ReferenceType type ReferenceType block MethodInvocation name Literal required Literal frame Literal ThreadContext IRubyObject IRubyObject Block type MemberReference Literal MemberReference callMethod 1 true context "induced_from" receiver	0
MethodDeclaration Modifier BasicType parseNumber FormalParameter IOException StatementExpression StatementExpression IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration ForStatement private int BasicType c Assignment MethodInvocation BinaryOperation BlockStatement IfStatement BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement int MemberReference MemberReference = tokenBuffer Literal setLength == MemberReference Literal StatementExpression StatementExpression BinaryOperation BlockStatement int nondigit Literal == MemberReference Literal LocalVariableDeclaration SwitchStatement boolean seen_point Literal boolean seen_e Literal Assignment SwitchStatement lex_state LexState EXPR_END 0 c '-' MethodInvocation Assignment == MemberReference Literal StatementExpression 0 c '0' BasicType VariableDeclarator Assignment SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase false false MemberReference MethodInvocation = MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase tokenBuffer Cast append MemberReference MethodInvocation = c '+' Assignment int startLen MethodInvocation MemberReference MethodInvocation = Literal Literal StatementExpression IfStatement StatementExpression IfStatement StatementExpression ReturnStatement Literal Literal StatementExpression IfStatement StatementExpression IfStatement StatementExpression ReturnStatement Literal Literal StatementExpression IfStatement StatementExpression IfStatement StatementExpression ReturnStatement Literal Literal StatementExpression Literal Literal Literal Literal Literal Literal Literal Literal Literal ForStatement IfStatement Literal Literal ThrowStatement Literal Literal Literal StatementExpression BreakStatement StatementExpression StatementExpression ReturnStatement c src read c Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal StatementExpression StatementExpression BreakStatement Literal IfStatement BreakStatement Literal Literal IfStatement BreakStatement Literal IfStatement StatementExpression BreakStatement StatementExpression ReturnStatement BasicType MemberReference c src read MemberReference MethodInvocation = tokenBuffer length c src read 'x' 'X' Assignment MethodInvocation BlockStatement MethodInvocation BinaryOperation BlockStatement IfStatement Assignment MemberReference 'b' 'B' Assignment BinaryOperation BlockStatement MethodInvocation BinaryOperation BlockStatement IfStatement Assignment MemberReference 'd' 'D' Assignment MethodInvocation BlockStatement MethodInvocation BinaryOperation BlockStatement IfStatement Assignment MemberReference 'o' 'O' Assignment '0' '1' '2' '3' '4' '5' '6' '7' '_' ForControl BlockStatement BinaryOperation BlockStatement '8' '9' ClassCreator '.' 'e' 'E' MethodInvocation MethodInvocation Assignment MemberReference '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' Assignment MethodInvocation '.' BinaryOperation BlockStatement IfStatement 'e' 'E' BinaryOperation BlockStatement IfStatement '_' BinaryOperation BlockStatement Assignment MethodInvocation MethodInvocation char c c src read MemberReference MethodInvocation = MemberReference isHexChar ForStatement src MemberReference unread == MethodInvocation MemberReference ThrowStatement BinaryOperation BlockStatement MemberReference MethodInvocation = Tokens tINTEGER MemberReference MethodInvocation = || BinaryOperation BinaryOperation ForStatement src MemberReference unread == MethodInvocation MemberReference ThrowStatement BinaryOperation BlockStatement MemberReference MethodInvocation = Tokens tINTEGER MemberReference MethodInvocation = Character MemberReference isDigit ForStatement src MemberReference unread == MethodInvocation MemberReference ThrowStatement BinaryOperation BlockStatement MemberReference MethodInvocation = Tokens tINTEGER MemberReference MethodInvocation = Assignment IfStatement > MethodInvocation MemberReference StatementExpression IfStatement StatementExpression ReturnStatement ReferenceType MemberReference MethodInvocation MethodInvocation Literal tokenBuffer Literal append src MemberReference unread MemberReference ClassCreator = Tokens tINTEGER MemberReference Literal = tokenBuffer Cast append != MemberReference Literal StatementExpression ThrowStatement BinaryOperation BlockStatement BlockStatement != MemberReference Literal ThrowStatement MemberReference BlockStatement BlockStatement != MemberReference Literal ThrowStatement MemberReference MemberReference = src MemberReference unread MethodInvocation BinaryOperation MemberReference c src read c ForControl BlockStatement c tokenBuffer length startLen ClassCreator != MemberReference Literal ThrowStatement yaccValue MethodInvocation Literal getInteger c src read == MemberReference Literal == MemberReference Literal ForControl BlockStatement c tokenBuffer length startLen ClassCreator != MemberReference Literal ThrowStatement yaccValue MethodInvocation Literal getInteger c src read c ForControl BlockStatement c tokenBuffer length startLen ClassCreator != MemberReference Literal ThrowStatement yaccValue MethodInvocation Literal getInteger c src read MemberReference MethodInvocation = BinaryOperation BlockStatement IfStatement tokenBuffer length startLen MethodInvocation BinaryOperation BlockStatement Assignment MemberReference SyntaxException PID getPosition getCurrentLine '0' c yaccValue ReferenceType MethodInvocation Literal nondigit '\0' BasicType MemberReference nondigit '\0' MethodInvocation ClassCreator || MemberReference MemberReference StatementExpression ReturnStatement LocalVariableDeclaration IfStatement nondigit '\0' ClassCreator seen_e StatementExpression ReturnStatement StatementExpression StatementExpression StatementExpression StatementExpression IfStatement nondigit '\0' ClassCreator nondigit c c tokenBuffer toString || MemberReference MemberReference nondigit Assignment IfStatement ReferenceType MemberReference MethodInvocation MethodInvocation Literal nondigit '\0' ClassCreator tokenBuffer toString 16 c '0' c '1' Assignment IfStatement ReferenceType MemberReference MethodInvocation MethodInvocation Literal nondigit '\0' ClassCreator tokenBuffer toString 2 Assignment IfStatement ReferenceType MemberReference MethodInvocation MethodInvocation Literal nondigit '\0' ClassCreator tokenBuffer toString 10 c src read == MemberReference Literal IfStatement StatementExpression BinaryOperation BlockStatement BlockStatement src MemberReference unread != MemberReference Literal ThrowStatement MemberReference MethodInvocation = Tokens tINTEGER FixnumNode getPosition 0 char c src MemberReference unread ReferenceType MemberReference MethodInvocation MethodInvocation Literal seen_point seen_e MethodInvocation MethodInvocation BasicType VariableDeclarator MethodInvocation BlockStatement BlockStatement ReferenceType MemberReference MethodInvocation MethodInvocation Literal MethodInvocation MethodInvocation MethodInvocation Assignment Assignment Assignment BinaryOperation BlockStatement BlockStatement ReferenceType MemberReference MethodInvocation MethodInvocation Literal seen_e seen_point MemberReference MethodInvocation = BinaryOperation BlockStatement IfStatement SyntaxException PID getPosition getCurrentLine number without ReferenceType MemberReference MethodInvocation MethodInvocation Literal MemberReference MethodInvocation = BinaryOperation BlockStatement IfStatement SyntaxException PID getPosition getCurrentLine "Binary number without ReferenceType MemberReference MethodInvocation MethodInvocation Literal MemberReference MethodInvocation = BinaryOperation BlockStatement IfStatement SyntaxException PID getPosition getCurrentLine "Binary number without ReferenceType MemberReference MethodInvocation MethodInvocation Literal c '_' BinaryOperation BreakStatement Assignment && BinaryOperation BinaryOperation StatementExpression StatementExpression BreakStatement c nondigit '\0' ClassCreator yaccValue MethodInvocation Literal getInteger c SyntaxException PID TRAILING_UNDERSCORE_IN_NUMBER getPosition getCurrentLine "Trailing '_' in number." src MemberReference unread MethodInvocation Literal MemberReference int c2 ! Character Assignment isDigit StatementExpression StatementExpression IfStatement StatementExpression StatementExpression StatementExpression StatementExpression SyntaxException PID TRAILING_UNDERSCORE_IN_NUMBER getPosition getCurrentLine "Trailing '_' in number." src MemberReference unread MethodInvocation Literal MemberReference tokenBuffer Cast append MemberReference Literal = MemberReference MemberReference = MemberReference MethodInvocation = || BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression SyntaxException PID TRAILING_UNDERSCORE_IN_NUMBER getPosition getCurrentLine "Trailing '_' in number." c src read == MemberReference Literal IfStatement StatementExpression MethodInvocation BlockStatement BlockStatement SyntaxException PID TRAILING_UNDERSCORE_IN_NUMBER getPosition getCurrentLine "Trailing '_' in number." c src read == MemberReference Literal IfStatement StatementExpression BinaryOperation BlockStatement BlockStatement SyntaxException PID TRAILING_UNDERSCORE_IN_NUMBER getPosition getCurrentLine "Trailing '_' in number." c src read == MemberReference Literal IfStatement StatementExpression MethodInvocation BlockStatement BlockStatement SyntaxException PID TRAILING_UNDERSCORE_IN_NUMBER getPosition getCurrentLine "Trailing '_' in number." != MemberReference Literal MemberReference MemberReference = >= MemberReference Literal <= MemberReference Literal Assignment MethodInvocation ReferenceType MemberReference MethodInvocation MethodInvocation Literal tokenBuffer toString 8 c tokenBuffer toString true nondigit MemberReference MethodInvocation = MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation Assignment Assignment c tokenBuffer toString true nondigit BasicType MemberReference seen_e true nondigit c c src read == MemberReference Literal == MemberReference Literal MethodInvocation Assignment MethodInvocation c '_' BinaryOperation BreakStatement Assignment MemberReference isHexChar StatementExpression StatementExpression BreakStatement c '_' BinaryOperation BreakStatement Assignment || BinaryOperation BinaryOperation StatementExpression StatementExpression BreakStatement c '_' BinaryOperation BreakStatement Assignment Character MemberReference isDigit StatementExpression StatementExpression BreakStatement nondigit '\0' nondigit c c '0' c '7' MemberReference Literal = tokenBuffer Cast append SyntaxException PID TRAILING_UNDERSCORE_IN_NUMBER getPosition getCurrentLine "Trailing '_' in number." c2 src read src MemberReference unread src Literal unread == MemberReference Literal StatementExpression ReturnStatement tokenBuffer Literal append tokenBuffer Cast append MemberReference Literal = MemberReference Literal = char c c '-' c '+' tokenBuffer Cast append MemberReference MemberReference = src MemberReference unread != MemberReference Literal MemberReference MemberReference = c Assignment MethodInvocation != MemberReference Literal MemberReference MemberReference = == MemberReference Literal == MemberReference Literal Assignment MethodInvocation != MemberReference Literal MemberReference MemberReference = c Assignment MethodInvocation nondigit '\0' BasicType MemberReference c2 '.' c '_' Assignment MemberReference '.' BasicType MemberReference seen_point true nondigit '\0' BasicType MemberReference nondigit c c nondigit '\0' nondigit c MemberReference Literal = tokenBuffer Cast append nondigit '\0' nondigit c c '0' c '1' MemberReference Literal = tokenBuffer Cast append nondigit '\0' nondigit c MemberReference Literal = tokenBuffer Cast append char c MemberReference MethodInvocation = Tokens tINTEGER char c2 char c nondigit '\0' BasicType MemberReference nondigit '\0' BasicType MemberReference nondigit '\0' BasicType MemberReference yaccValue MethodInvocation Literal getInteger char c char c char c tokenBuffer toString 10	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation MemberReference Object Object int Node body Cast MemberReference ClassCreator = support popCurrentScope support BinaryOperation setInSingle yyVal ReferenceType MemberReference yyVal ReferenceType MethodInvocation Cast ClassCreator Cast MethodInvocation MemberReference - MethodInvocation Literal Node ArraySelector yyVals DefsNode Cast getPosition ReferenceType MemberReference ReferenceType Cast Cast ReferenceType MemberReference support getCurrentScope body support getInSingle 1 BinaryOperation ReferenceType MemberReference Node ArraySelector yyVals ArgumentNode ReferenceType MemberReference ReferenceType Cast ArgsNode ArraySelector yyVals + Literal MemberReference Token ArraySelector yyVals BinaryOperation Token ArraySelector yyVals String ReferenceType MemberReference BinaryOperation - 1 yyTop BinaryOperation + Literal MemberReference BinaryOperation Token ArraySelector yyVals + Literal MemberReference + Literal MemberReference - 7 yyTop + Literal MemberReference BinaryOperation - 2 yyTop - 8 yyTop - 4 yyTop + Literal MemberReference - 4 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType convert FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType a1 MethodInvocation name Literal meta Literal visibility MemberReference ThreadContext IRubyObject IRubyObject MemberReference MemberReference MemberReference MethodInvocation "convert" true Visibility PRIVATE context recv a1 context MethodInvocation getRuntime getNil	0
MethodDeclaration Modifier ReferenceType newInstance FormalParameter FormalParameter IllegalArgumentException InstantiationException IllegalAccessException InvocationTargetException IfStatement LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public Object ReferenceType args ReferenceType handler BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation Assignment MethodInvocation Object JavaProxyInvocationHandler != MemberReference MemberReference ThrowStatement Object realArgs ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference MemberReference = MemberReference newInstance args length length ClassCreator ReferenceType BinaryOperation args 0 realArgs 0 args length ArraySelector realArgs handler realArgs ReferenceType Literal Object + MemberReference Literal MemberReference IllegalArgumentException "wrong number of args length 1 args length	1
MethodDeclaration Modifier ReferenceType iconv FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType str BasicType start BasicType end MethodInvocation BlockStatement MethodInvocation IRubyObject int int str isNil StatementExpression StatementExpression ReturnStatement MethodInvocation MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation str convertToString start end reset reset RubyString MethodInvocation newEmptyString getRuntime	0
MethodDeclaration Modifier BadDescriptorException IOException IfStatement private BinaryOperation BlockStatement != BinaryOperation Literal StatementExpression & MemberReference MemberReference 0 MethodInvocation mode MethodInvocation fflush getWriteStream	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Literal Literal Literal Cast new_args Cast getPosition ReferenceType MemberReference null null null ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals BlockArgNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 1 yyTop 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair IRubyObject This name Literal "to_ary"	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Assignment MethodInvocation MethodInvocation MemberReference Ruby RubyClass numeric MethodInvocation runtime MemberReference MemberReference ClassCreator = numeric MethodInvocation includeModule numeric ClassReference defineAnnotatedMethods numeric runtime Literal MethodInvocation MemberReference defineClass numeric numeric ReferenceType MethodDeclaration runtime ReferenceType runtime getObject RubyModule ReferenceType Modifier Annotation BasicType FormalParameter FormalParameter ReturnStatement RubyNumeric public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyNumeric	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override Arity MemberReference Arity	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv MethodInvocation name Literal meta Literal IRubyObject recv MethodInvocation getRuntime true Literal newFixnum 20	1
MethodDeclaration Modifier ReferenceType getJavaSupport ReturnStatement public MemberReference	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference	0
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType function ReferenceType args MethodInvocation Ruby Function HeapInvocationBuffer FFIUtil MemberReference MethodInvocation getString runtime invoker MemberReference MemberReference function args	1
MethodDeclaration Modifier StatementExpression synchronized public MethodInvocation Literal null	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType name BasicType index BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment BinaryOperation StatementExpression MemberReference ThreadContext String int int MethodInvocation IRubyObject value MethodInvocation MemberReference MemberReference = != MemberReference Literal Assignment value context MethodInvocation getRuntime context MemberReference ArraySelector constants value value null MemberReference MemberReference = name MemberReference ArraySelector index MemberReference index	1
MethodDeclaration Modifier FormalParameter FormalParameter InterruptedException IOException StatementExpression static public ReferenceType channel BasicType op MethodInvocation Channel int MethodInvocation MemberReference MemberReference MemberReference await channel channel op	0
MethodDeclaration Modifier Annotation ReferenceType include_p FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyBoolean ReferenceType context ReferenceType item MethodInvocation name Literal required Literal ThreadContext IRubyObject context MethodInvocation getRuntime "include?" 1 MethodInvocation newBoolean MemberReference MemberReference includes context item	1
MethodDeclaration Modifier ReferenceType ReturnStatement public Collection TypeArgument MemberReference ReferenceType String	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement IfStatement private static ReferenceType runtime ReferenceType to BasicType bytes BasicType start BasicType len ReferenceType enc BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference BlockStatement BlockStatement Ruby ByteList byte int int Encoding int p MemberReference int end BinaryOperation boolean needEscape Literal < MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression ! needEscape StatementExpression StatementExpression WhileStatement start + MemberReference MemberReference false p end BasicType VariableDeclarator BinaryOperation BlockStatement Assignment MethodInvocation Assignment BinaryOperation BlockStatement p len int c BinaryOperation || BinaryOperation BinaryOperation StatementExpression BreakStatement MemberReference MethodInvocation += to MemberReference MemberReference MemberReference append MemberReference MemberReference = < MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression & MemberReference Literal == MemberReference Literal && MethodInvocation BinaryOperation Assignment p enc MemberReference MemberReference MemberReference length bytes start len p start p end BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference ArraySelector bytes 0xff c '/' ! enc MemberReference isPrint == MethodInvocation Literal MemberReference Literal = bytes p end int c BinaryOperation == MemberReference Literal LocalVariableDeclaration StatementExpression StatementExpression ContinueStatement BinaryOperation BlockStatement IfStatement ++ p MemberReference c enc MemberReference MemberReference MemberReference length 1 needEscape true & MemberReference Literal c '\\' BasicType VariableDeclarator MethodInvocation Assignment == MemberReference Literal StatementExpression StatementExpression BinaryOperation BlockStatement IfStatement p bytes p end ArraySelector bytes 0xff int n BinaryOperation to MemberReference MemberReference MemberReference append MemberReference MemberReference += c '/' MethodInvocation MethodInvocation != MethodInvocation Literal StatementExpression StatementExpression ContinueStatement MethodInvocation BlockStatement IfStatement MemberReference + MethodInvocation Literal bytes p n p n to Cast append to MemberReference MemberReference Literal append enc MemberReference MemberReference MemberReference length 1 MethodInvocation Assignment enc MemberReference isPrint StatementExpression MethodInvocation BlockStatement BlockStatement p enc MemberReference BinaryOperation MemberReference length 1 BasicType Literal bytes p 1 bytes p end to MemberReference MemberReference MethodInvocation append MemberReference MethodInvocation += c MethodInvocation ! enc MemberReference isSpace StatementExpression StatementExpression bytes + MemberReference Literal end byte '\\' bytes p enc MemberReference MemberReference MemberReference length p enc MemberReference MemberReference MemberReference length to MemberReference MemberReference Literal append c MethodInvocation MethodInvocation p 1 bytes p end bytes p end bytes p 1 Sprintf MemberReference MemberReference Literal BinaryOperation sprintf to MemberReference MemberReference Literal append runtime to & MemberReference Literal bytes p 1 ArraySelector bytes MemberReference p	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression IfStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation MemberReference BlockStatement BlockStatement name Literal rest Literal compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation == MemberReference Literal StatementExpression ReturnStatement RubyString otherStr MemberReference Encoding enc MethodInvocation final boolean squeeze ArrayCreator TrTables tables MethodInvocation boolean singlebyte BinaryOperation VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression StatementExpression StatementExpression modifyAndKeepCodeRange singlebyte ReturnStatement ReturnStatement "squeeze!" true CompatVersion RUBY1_9 context getRuntime value realSize 0 MethodInvocation MethodInvocation ArraySelector MethodInvocation args MemberReference checkEncoding BasicType MemberReference otherStr MemberReference MemberReference Literal Literal MemberReference trSetupTable && MethodInvocation MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment Assignment Assignment Assignment MethodInvocation MethodInvocation modifyCheck runtime getNil Literal convertToString otherStr boolean TRANS_SIZE runtime squeeze null true enc singleByteOptimizable otherStr singleByteOptimizable int i Literal i args length MemberReference MemberReference = MemberReference MethodInvocation = MemberReference BinaryOperation = MemberReference MethodInvocation = MemberReference MemberReference squeezeCommon MemberReference MemberReference MemberReference MemberReference Literal squeezeCommon19 0 1 otherStr ArraySelector MethodInvocation args enc MemberReference checkEncoding singlebyte && MemberReference MethodInvocation tables otherStr MemberReference MemberReference MemberReference Literal MemberReference trSetupTable runtime squeeze runtime squeeze tables enc true MemberReference convertToString otherStr singlebyte otherStr singleByteOptimizable runtime squeeze tables false enc i	1
MethodDeclaration Modifier BasicType FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement final public byte BasicType offset MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation MemberReference long MemberReference Literal checkBounds int len MethodInvocation byte bytes ArrayCreator System MemberReference MethodInvocation MemberReference Literal MemberReference arraycopy bytes offset 1 MemberReference Cast indexOf BasicType TernaryExpression buffer MemberReference index bytes 0 bytes length offset BasicType Literal byte BinaryOperation MemberReference BinaryOperation offset byte 0 != MemberReference Literal len - MemberReference Cast len - 1 length BasicType MemberReference int offset	1
MethodDeclaration Modifier ReferenceType FormalParameter SynchronizedStatement public IRubyObject BasicType id MemberReference StatementExpression LocalVariableDeclaration IfStatement ReturnStatement long MethodInvocation ReferenceType VariableDeclarator BinaryOperation ReturnStatement Cast IdReference reference Cast == MemberReference Literal Literal ReferenceType MethodInvocation ReferenceType MethodInvocation reference null null IRubyObject reference get IdReference ClassCreator get ReferenceType MemberReference Long id	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation ZArrayNode Cast getPosition ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier ReferenceType getValue FormalParameter LocalVariableDeclaration ReturnStatement public IRubyObject ReferenceType context ReferenceType VariableDeclarator TernaryExpression ThreadContext IRubyObject value MemberReference MethodInvocation MemberReference MethodInvocation MemberReference MemberReference value MemberReference MemberReference context value context name	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MemberReference BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject Block ArraySelector MethodInvocation result == MemberReference MemberReference StatementExpression StatementExpression runtime getNil Literal MemberReference append ArraySelector MethodInvocation result size MethodInvocation Assignment 0 ArraySelector largs Literal size block MemberReference MemberReference yield MemberReference MethodInvocation = Literal 0 ctx ArraySelector result ArraySelector result runtime MemberReference newArray 0 Literal Literal size 0 0	0
MethodDeclaration Modifier Annotation ReferenceType size FormalParameter ReturnStatement public JRubyMethod IRubyObject ReferenceType context MethodInvocation ThreadContext context MethodInvocation getRuntime MethodInvocation newFixnum type getNativeSize	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x BasicType VariableDeclarator MethodInvocation name Literal required Literal module Literal visibility MemberReference IRubyObject IRubyObject double value Cast RubyFloat MethodInvocation MethodInvocation newFloat 1 true Visibility PRIVATE ReferenceType MethodInvocation recv getRuntime Math MemberReference RubyFloat RubyKernel MemberReference MemberReference value recv x	0
MethodDeclaration Modifier LocalVariableDeclaration LocalVariableDeclaration TryStatement public Modifier ReferenceType VariableDeclarator BasicType VariableDeclarator StatementExpression CatchClause StatementExpression final IRubyObject MethodInvocation boolean Literal MethodInvocation CatchClauseParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression MethodInvocation MemberReference ClassCreator javaToRuby false MemberReference MemberReference Literal ArrayCreator ClassReference RaiseException e Assignment Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator MethodInvocation Literal MemberReference assertTrue runtime ReferenceType runtime ReferenceType ArrayInitializer ReferenceType MemberReference Literal = final ne Cast final ee Cast Literal MemberReference MemberReference assertEquals Exception should have been thrown and as a Object Object true ReferenceType MethodInvocation ReferenceType MethodInvocation "The exception we should be the one we expectedException ee e getException ne getCause	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression public ReferenceType callType ReferenceType visibility Assignment Assignment CallType Visibility MemberReference MemberReference = MemberReference MemberReference = lastCallType callType visibility	0
MethodDeclaration Modifier Annotation ReferenceType StatementExpression LocalVariableDeclaration IfStatement StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement Assignment MethodInvocation This name Literal check Ruby runtime MethodInvocation ! isMatched LocalVariableDeclaration ThrowStatement MemberReference MemberReference = getRuntime ReferenceType VariableDeclarator ClassCreator pos lastPos RubyClass errorClass MethodInvocation ReferenceType MethodInvocation runtime MethodInvocation Literal fastGetClass RaiseException RubyException MemberReference MemberReference Literal newException Literal fastGetClass runtime errorClass failed: previous match failed"	0
MethodDeclaration Modifier Annotation ReferenceType to_io ReturnStatement public JRubyMethod ElementValuePair IRubyObject MemberReference name Literal "to_io"	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType rbOffset ReferenceType Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator ForControl BlockStatement MemberReference name ElementArrayValue required Literal ThreadContext IRubyObject IRubyObject final int POINTER_SIZE BinaryOperation final long off MethodInvocation final int count MethodInvocation final Ruby runtime MethodInvocation final RubyArray arr MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression arr Literal 2 / MethodInvocation Literal MemberReference getOffset Util MemberReference int32Value context getRuntime RubyArray MemberReference MemberReference newArray BasicType VariableDeclarator < MemberReference MemberReference ++ i Modifier ReferenceType VariableDeclarator MethodInvocation Platform MethodInvocation getPlatform 8 rbOffset runtime count int i Literal i count final MemoryIO MethodInvocation arr TernaryExpression add addressSize 0 MethodInvocation getMemoryIO BinaryOperation MethodInvocation MethodInvocation BinaryOperation getMemoryIO && BinaryOperation MethodInvocation MemoryUtil MemberReference MemberReference Literal getTaintedString runtime getNil + MemberReference BinaryOperation != MemberReference Literal ! runtime 0 off * MemberReference MemberReference null i POINTER_SIZE	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement LocalVariableDeclaration IfStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation ThrowStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject receiver MethodInvocation String name MethodInvocation && BinaryOperation MethodInvocation ThrowStatement || BinaryOperation BinaryOperation ThrowStatement receiver isFrozen MethodInvocation RubyClass rubyClass MethodInvocation && BinaryOperation BinaryOperation ThrowStatement scope determineModule Node body TernaryExpression DynamicMethod MethodInvocation rubyClass MemberReference MemberReference addMethod receiver MemberReference Literal MethodInvocation callMethod runtime getNil MemberReference MemberReference MemberReference MemberReference getName >= MethodInvocation Literal ! receiver isTaint MethodInvocation instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation runtime Literal receiver >= MethodInvocation Literal != MethodInvocation Literal MethodInvocation BinaryOperation ClassCreator MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MethodInvocation name context runtime MemberReference runtime context self runtime getSafeLevel 4 runtime Literal newSecurityError receiver RubyFixnum receiver RubySymbol runtime BinaryOperation newTypeError runtime getSafeLevel 4 rubyClass MethodInvocation getMethods null runtime Literal newSecurityError == MemberReference Literal ReferenceType MethodInvocation runtime rubyClass name scope body argsNode Visibility PUBLIC getPosition name can't define singleton + BinaryOperation MethodInvocation MemberReference get "redefining method null NilNode getPosition + BinaryOperation Literal receiver MethodInvocation getMetaClass name + Literal MemberReference "\" for " "can't define singleton method \"" name	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name arg0 arg1 arg2 Block	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement static public IRubyObject ReferenceType receiver ReferenceType ReferenceType value ReferenceType context ReferenceType caller MethodInvocation MemberReference IRubyObject CallSite IRubyObject ThreadContext IRubyObject MemberReference MemberReference MemberReference MemberReference call value context caller receiver value	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal rest Literal visibility MemberReference reads MemberReference compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation && BinaryOperation BinaryOperation StatementExpression StatementExpression ReturnStatement MemberReference MemberReference true PRIVATE CompatVersion RUBY1_9 context getRuntime == MemberReference Literal || BinaryOperation BinaryOperation MethodInvocation MethodInvocation MethodInvocation context args args length 2 == MemberReference MethodInvocation == MemberReference MethodInvocation runtime MethodInvocation getWarnings MemberReference MemberReference MethodInvocation MemberReference Literal addAccessor runtime getNil ArraySelector args runtime getTrue ArraySelector args runtime getFalse MemberReference Literal warn context ArraySelector MethodInvocation MethodInvocation args context getCurrentVisibility ArraySelector MethodInvocation args true Literal Literal ID boolean argument is Literal asJavaString intern Literal isTrue 1 1 0 0	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean Literal false	0
MethodDeclaration Modifier ReferenceType getLabel FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private org ReferenceType ReferenceType label ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ReferenceType Label org ReferenceType MethodInvocation == MemberReference Literal StatementExpression StatementExpression ReferenceType ReferenceType MethodInvocation MemberReference MethodInvocation null Assignment MethodInvocation Label ReferenceType MemberReference get MemberReference MethodInvocation = MethodInvocation MemberReference MethodInvocation Label label MethodInvocation method MemberReference MemberReference put newLabel label	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType object BinaryOperation BlockStatement IfStatement ReferenceType VariableDeclarator MethodInvocation ReturnStatement MemberReference name Literal required Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement BinaryOperation BlockStatement IfStatement IRubyObject tmp MethodInvocation tmp isNil MethodInvocation tmp "Integer" 1 true PRIVATE object RubyFloat BasicType VariableDeclarator BinaryOperation BlockStatement || BinaryOperation BinaryOperation ReturnStatement BinaryOperation BlockStatement TypeConverter MemberReference MethodInvocation Literal Literal convertToType object Literal convertToInteger double val Cast && BinaryOperation BinaryOperation ReturnStatement instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MemberReference instanceof MemberReference ReferenceType ReturnStatement object context MethodInvocation getRuntime "to_int" false "to_i" ReferenceType MemberReference > MemberReference Cast < MemberReference Cast MethodInvocation object RubyFixnum object RubyBignum object object RubyString MethodInvocation getInteger RubyFloat object val BasicType MemberReference val BasicType MemberReference RubyNumeric MethodInvocation Cast RubyNumeric MethodInvocation Cast Literal Literal double RubyFixnum double RubyFixnum context getRuntime ReferenceType MemberReference context getRuntime ReferenceType MemberReference 0 true RubyFloat object RubyString object	1
MethodDeclaration Modifier addLazyBuiltin FormalParameter FormalParameter FormalParameter StatementExpression private ReferenceType name ReferenceType shortName ReferenceType className MethodInvocation String String String MemberReference ClassCreator name ReferenceType MemberReference MemberReference MethodInvocation shortName className getJRubyClassLoader	0
MethodDeclaration Modifier setName FormalParameter StatementExpression public ReferenceType name Assignment String This MemberReference = MemberReference name name	0
MethodDeclaration Modifier FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement IfStatement private BasicType index ReferenceType message ReferenceType VariableDeclarator ReferenceType VariableDeclarator This LocalVariableDeclaration IfStatement StatementExpression StatementExpression LocalVariableDeclaration ForStatement BinaryOperation BlockStatement int Object Literal Object args Literal Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Assignment Modifier ReferenceType VariableDeclarator EnhancedForControl BlockStatement != MemberReference Literal StatementExpression null null final LinkedList MemberReference == MemberReference Literal ThrowStatement MemberReference addLast MemberReference BinaryOperation |= final MemberReference VariableDeclaration MemberReference IfStatement null MethodInvocation ArraySelector writes null ClassCreator message mask << Literal MemberReference ArraySelector ReferenceType VariableDeclarator BinaryOperation BlockStatement This MemberReference dispatch MemberReference ReferenceType 1L index MemberReference == BinaryOperation MemberReference LocalVariableDeclaration StatementExpression ForStatement StatementExpression BreakStatement args index IndexOutOfBoundsException index & MemberReference MemberReference mask Modifier BasicType VariableDeclarator Assignment ForControl BlockStatement Assignment mask mask final int MemberReference MemberReference ArrayCreator = VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement MemberReference MemberReference = args ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i Modifier BasicType VariableDeclarator Modifier ReferenceType VariableDeclarator Assignment MethodInvocation BlockStatement Object length int i Literal i length final int MemberReference final LinkedList reading MemberReference MemberReference MethodInvocation = reading isEmpty StatementExpression 0 ArraySelector ArraySelector writes ArraySelector args reading removeFirst Assignment MemberReference MemberReference MemberReference MemberReference BinaryOperation &= i i mask << Literal MemberReference 1L	0
MethodDeclaration Modifier BasicType LocalVariableDeclaration IfStatement ReturnStatement public boolean ReferenceType VariableDeclarator BinaryOperation StatementExpression Literal Thread thread This != MemberReference Literal MethodInvocation false MemberReference MethodInvocation thread null thread nativeThread get	1
MethodDeclaration Modifier ReferenceType arity ReturnStatement public Arity MemberReference arity	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration IfStatement private static ReferenceType context ReferenceType self ReferenceType clazz ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ThreadContext IRubyObject RubyClass Ruby runtime MethodInvocation IRubyObject javaClassObj MethodInvocation == MemberReference Literal StatementExpression StatementExpression IRubyObject javaClass MethodInvocation == MemberReference Literal StatementExpression StatementExpression IRubyObject javaProxyClass MethodInvocation == MemberReference Literal StatementExpression StatementExpression || BinaryOperation MethodInvocation ThrowStatement IRubyObject javaInterfaces MethodInvocation == MemberReference Literal StatementExpression StatementExpression IfStatement IfStatement IfStatement context getRuntime self MethodInvocation getInstanceVariables javaClassObj null Assignment MethodInvocation clazz MethodInvocation getInstanceVariables javaClass null Assignment MethodInvocation clazz MethodInvocation getInstanceVariables javaProxyClass null Assignment MethodInvocation && MethodInvocation MethodInvocation javaProxyClass isTrue MethodInvocation clazz MethodInvocation getInstanceVariables javaInterfaces null Assignment MethodInvocation MethodInvocation BlockStatement MethodInvocation BlockStatement BinaryOperation BlockStatement Literal fastGetInstanceVariable MemberReference MethodInvocation = self MethodInvocation getInstanceVariables Literal fastGetInstanceVariable MemberReference MethodInvocation = clazz MethodInvocation getInstanceVariables Literal fastGetInstanceVariable MemberReference MethodInvocation = clazz MethodInvocation getInstanceVariables javaClass isTrue ! clazz MethodInvocation runtime Literal newArgumentError Literal fastGetInstanceVariable MemberReference MethodInvocation = clazz MethodInvocation getInstanceVariables ! clazz Literal Literal isMethodBound LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ! clazz Literal Literal isMethodBound LocalVariableDeclaration StatementExpression StatementExpression || MethodInvocation Cast StatementExpression "@java_class" javaClassObj runtime getNil Literal MemberReference "@java_class" javaClass runtime getNil Literal MemberReference fastSetInstanceVariable "@java_proxy_class" javaProxyClass runtime getNil Literal MemberReference fastSetInstanceVariable Literal Literal isMethodBound not add Java interface to existing Java class" "@java_interfaces" javaInterfaces RubyArray MemberReference MemberReference newArray Literal MemberReference fastSetInstanceVariable false ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation false ReferenceType VariableDeclarator MethodInvocation MethodInvocation javaInterfaces isFrozen ReferenceType MemberReference Cast "@java_class" javaClassObj "@java_class" javaClass "@java_proxy_class" javaProxyClass false runtime javaClassObj "@java_interfaces" javaInterfaces RubyClass singleton MethodInvocation singleton MemberReference Literal DynamicMethod MethodInvocation singleton Literal MemberReference addMethod MemberReference setVisibility singleton Literal ClassCreator addMethod clazz Literal ClassCreator addMethod clazz Literal ClassCreator addMethod clazz MethodInvocation includeModule clazz Literal ClassCreator addMethod clazz Literal Literal clazz Literal ClassCreator addMethod RubyClass singleton MethodInvocation singleton Literal ClassCreator addMethod singleton Literal ClassCreator addMethod RubyArray javaInterfaces ReferenceType MemberReference clazz context singleton MethodInvocation Literal searchMethod Visibility PRIVATE ReferenceType MemberReference MemberReference MethodDeclaration ReferenceType MemberReference MemberReference MethodDeclaration ReferenceType MemberReference MemberReference MethodDeclaration runtime Literal getModule "java_class" ReferenceType MemberReference MemberReference MethodDeclaration "===" "===" ReferenceType MemberReference MemberReference MethodDeclaration clazz ReferenceType MemberReference MemberReference MethodDeclaration ReferenceType MemberReference MemberReference MethodDeclaration RubyArray javaInterfaces dup org ReferenceType singleton Visibility PUBLIC Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter AssertStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement JavaMethodN clazz Visibility PRIVATE Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement JavaMethodN clazz Visibility PRIVATE Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement JavaMethodZero clazz Visibility PUBLIC Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement JavaMethodOne clazz Visibility PUBLIC Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement JavaMethodOne clazz Visibility PRIVATE Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement JavaMethodOne clazz Visibility PRIVATE Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement jruby ReferenceType public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block BinaryOperation Literal ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args MethodInvocation public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType VariableDeclarator MemberReference public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name Cast public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg MethodInvocation BlockStatement BlockStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg ReferenceType VariableDeclarator ForControl BlockStatement MemberReference internal ReferenceType ThreadContext IRubyObject RubyModule String IRubyObject Block instanceof MemberReference ReferenceType "new defined on RubyClass clazzSelf Cast IRubyObject newObj MethodInvocation RuntimeHelpers MemberReference MemberReference Literal MemberReference MemberReference invoke RuntimeHelpers MemberReference MemberReference Literal MemberReference MemberReference invoke newObj ThreadContext IRubyObject RubyModule String IRubyObject MemberReference MemberReference ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject result MethodInvocation result ThreadContext IRubyObject RubyModule String ReferenceType MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject arg Literal respondsTo LocalVariableDeclaration AssertStatement ReturnStatement ReturnStatement ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject javaInterfaces MethodInvocation && BinaryOperation Cast ReturnStatement context MethodInvocation getRuntime ThreadContext IRubyObject RubyModule String IRubyObject RubyArray javaInterfaces Cast VariableDeclaration BinaryOperation MemberReference StatementExpression javaInterfaces runtime ReferenceType self RubyClass ReferenceType MemberReference clazzSelf context newObj args block context newObj "initialize" args block self args MemberReference MemberReference JavaObject self dataGetStruct "java_object" ReferenceType VariableDeclarator BinaryOperation Literal MethodInvocation MethodInvocation self MethodInvocation getInstanceVariables != MemberReference Literal ReferenceType MemberReference MethodInvocation getNil ReferenceType MethodInvocation BasicType VariableDeclarator < MemberReference MethodInvocation ++ i MethodInvocation methods ReferenceType RubyClass self self args IRubyObject interfaces MethodInvocation instanceof MemberReference ReferenceType list was not an array" context MethodInvocation getRuntime RuntimeHelpers MemberReference MemberReference Literal MemberReference invoke Literal fastGetInstanceVariable javaInterfaces null RubyArray javaInterfaces RuntimeHelpers MemberReference MemberReference Literal MemberReference invoke RubyArray self MethodInvocation getInstanceVariables int i Literal i javaInterfaces size RuntimeHelpers MemberReference MethodInvocation Literal MemberReference invoke JavaMethod self MethodInvocation MethodInvocation getMetaClass interfaces RubyArray Cast newBoolean context self arg "@java_interfaces" context arg self Literal fastGetInstanceVariable 0 context MemberReference MethodInvocation self getInstanceVariables Literal fastGetInstanceVariable ReferenceType MemberReference "@java_interfaces" self javaInterfaces MemberReference eltInternal "@java_interfaces" RubyArray interfaces i	1
MethodDeclaration Modifier pushString FormalParameter StatementExpression public ReferenceType str MethodInvocation String method MemberReference ldc str	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement public boolean BasicType c BinaryOperation int || BinaryOperation BinaryOperation == MemberReference Literal == MemberReference Literal c ';' c '@'	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ThrowStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType self ReferenceType arg MethodInvocation name Literal module Literal IRubyObject IRubyObject self MethodInvocation getRuntime true Literal newNotImplementedError not implemented yet"	1
MethodDeclaration Modifier Annotation ReferenceType toString ReturnStatement public Override String MethodInvocation ClassCreator Literal toString ReferenceType "" StringBuffer	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter SwitchStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject RubyModule String IRubyObject args length Literal ReturnStatement Literal ReturnStatement ReturnStatement 0 MethodInvocation 1 MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference call MemberReference MemberReference MemberReference MemberReference MemberReference call This MemberReference MemberReference MemberReference Literal Literal raiseArgumentError context self clazz name context self clazz name ArraySelector args context name args length 0 1 Literal 0	0
MethodDeclaration Modifier ReferenceType getBodyNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter SwitchStatement public IRubyObject ReferenceType context ReferenceType args ReferenceType block MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject Block args length Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation MethodInvocation Literal MemberReference MemberReference MemberReference MemberReference Literal MemberReference MemberReference MemberReference MemberReference MemberReference Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null context block context ArraySelector args null block context ArraySelector args ArraySelector args block getRuntime args length 0 2 Literal Literal Literal 0 0 1	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement static public boolean ReferenceType id MethodInvocation String id Literal endsWith "="	0
MethodDeclaration Modifier Annotation ReferenceType getMethod FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator IfStatement LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference "_0" + BinaryOperation MemberReference "_0" MemberReference tryClass == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression InvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setJavaName ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity noArguments method e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation mv MemberReference Literal visitVarInsn mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference mv Literal Literal visitMaxs MemberReference MethodInvocation = InvocationCallback c newInstance IllegalArgumentException e getMessage ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtor MemberReference startCall ALOAD 3 INVOKEVIRTUAL typePath method MemberReference MemberReference sig ARETURN 1 3 c MemberReference MemberReference MemberReference endCall Class ClassReference method signature mnamePath cw ret signature cw mv mname ReferenceType Block	1
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyModule MemberReference klazz	0
MethodDeclaration ReferenceType ReturnStatement IRubyObject MemberReference image	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression protected ReferenceType context ReferenceType hashNode ReferenceType MethodInvocation BodyCompiler HashNode ArrayCallback context MethodInvocation MemberReference BinaryOperation hashNode / MethodInvocation Literal hashNode MethodInvocation 2 size	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement static public IRubyObject ReferenceType context ReferenceType runtime ReferenceType args ReferenceType VariableDeclarator LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression StatementExpression StatementExpression StatementExpression ForStatement IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause IfStatement ThreadContext Ruby IRubyObject Selector selector Literal ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment MemberReference BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement Modifier BasicType VariableDeclarator BasicType VariableDeclarator MemberReference BlockStatement BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation EnhancedForControl BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement BinaryOperation BlockStatement null Set ClassCreator Set unselectable_reads ClassCreator Set unselectable_writes ClassCreator Map TypeArgument TypeArgument blocking ClassCreator MemberReference MethodInvocation = ! ArraySelector MethodInvocation args StatementExpression ForStatement && BinaryOperation MemberReference StatementExpression ForStatement && BinaryOperation MemberReference StatementExpression final boolean has_timeout BinaryOperation long timeout Literal has_timeout LocalVariableDeclaration IfStatement IfStatement && BinaryOperation MethodInvocation IfStatement StatementExpression List r ClassCreator List w ClassCreator List e ClassCreator VariableDeclaration MethodInvocation LocalVariableDeclaration TryStatement r MemberReference addAll r MemberReference addAll w MemberReference addAll selector close VariableDeclaration MethodInvocation LocalVariableDeclaration SynchronizedStatement && BinaryOperation BinaryOperation ReturnStatement List ret ClassCreator ret MethodInvocation add ret MethodInvocation add ret MethodInvocation add RubyArray MemberReference MemberReference newArray IOException e MethodInvocation != MemberReference Literal TryStatement ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType selector Selector open Literal isNil MethodInvocation ForControl BlockStatement > MemberReference Literal ! ArraySelector MethodInvocation args MethodInvocation ForControl BlockStatement > MemberReference Literal ! ArraySelector MethodInvocation args MethodInvocation && BinaryOperation MemberReference 0 ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement && MethodInvocation MethodInvocation unselectable_writes isEmpty MemberReference BlockStatement BlockStatement MethodInvocation ReferenceType ReferenceType ReferenceType ReferenceType VariableDeclarator i hasNext ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement IfStatement CatchClause unselectable_reads unselectable_writes ReferenceType VariableDeclarator blocking entrySet ReferenceType VariableDeclarator MethodInvocation StatementExpression && BinaryOperation BinaryOperation == MethodInvocation Literal MethodInvocation ReferenceType RubyArray MemberReference MemberReference newArray RubyArray MemberReference MemberReference newArray RubyArray MemberReference MemberReference newArray runtime ret runtime MethodInvocation newIOError selector null StatementExpression CatchClause HashSet HashSet HashSet RubyIO Boolean HashMap 0 MemberReference MemberReference checkArrayType VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement args length 1 Literal isNil MemberReference MemberReference checkArrayType VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement args length 2 Literal isNil MemberReference MemberReference checkArrayType > MemberReference Literal ! ArraySelector MethodInvocation args IRubyObject timeArg MemberReference instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement BlockStatement < MemberReference Literal ThrowStatement isEmpty unselectable_reads isEmpty has_timeout IfStatement StatementExpression selector selectNow ArrayList ArrayList ArrayList Iterator i MethodInvocation SelectionKey key Cast BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement CatchClauseParameter StatementExpression StatementExpression Map ReferenceType blockingEntry SelectableChannel channel Cast channel blockingLock MethodInvocation == MethodInvocation Literal == MethodInvocation Literal e size 0 runtime getNil ArrayList runtime r runtime w runtime e e getMessage MethodInvocation CatchClauseParameter runtime ArraySelector args ReferenceType VariableDeclarator i hasNext ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation StatementExpression MethodInvocation BlockStatement BlockStatement 1 runtime ArraySelector args ReferenceType VariableDeclarator i hasNext ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation StatementExpression MethodInvocation BlockStatement 2 runtime ArraySelector args args length 3 Literal isNil ArraySelector args timeArg RubyFloat Assignment instanceof MemberReference ReferenceType StatementExpression ThrowStatement timeout 0 MethodInvocation BinaryOperation BlockStatement BlockStatement MethodInvocation selector MethodInvocation selectedKeys ReferenceType MethodInvocation int interestAndReady BinaryOperation != BinaryOperation Literal StatementExpression StatementExpression != BinaryOperation Literal StatementExpression MethodInvocation MethodInvocation Entry ReferenceType Cast channel Cast configureBlocking r size 0 w size 0 selector close Exception e Literal Iterator i Cast IRubyObject obj Cast RubyIO ioObj MethodInvocation instanceof MethodInvocation ReferenceType MethodInvocation MemberReference MemberReference MemberReference MemberReference BinaryOperation IfStatement IfStatement Literal Iterator i Cast IRubyObject obj Cast RubyIO ioObj MethodInvocation && MethodInvocation BinaryOperation MethodInvocation ! MemberReference MemberReference MemberReference MemberReference MemberReference IfStatement Literal 3 Literal MemberReference MethodInvocation = timeArg RubyFixnum Assignment MethodInvocation runtime Literal newArgumentError == MemberReference Literal StatementExpression StatementExpression selector select iterator SelectionKey i next & MethodInvocation MethodInvocation & MemberReference BinaryOperation 0 MethodInvocation MethodInvocation & MemberReference MemberReference 0 MethodInvocation MethodInvocation remove e MethodInvocation add SelectableChannel ReferenceType MethodInvocation ReferenceType MethodInvocation 0 ReferenceType MemberReference ReferenceType MethodInvocation MemberReference MemberReference ioObj getChannel SelectableChannel blocking MemberReference Cast put context selector obj ioObj | MemberReference MemberReference MethodInvocation BlockStatement BinaryOperation BlockStatement 1 ReferenceType MemberReference ReferenceType MethodInvocation MemberReference MemberReference ! blocking MemberReference containsKey instanceof MethodInvocation ReferenceType blocking MemberReference Cast put context selector obj ioObj SelectionKey BinaryOperation BlockStatement 2 3 timeout Math BinaryOperation round MemberReference MethodInvocation = runtime BinaryOperation newTypeError "negative timeout given" timeout 0 MethodInvocation MethodInvocation key interestOps key readyOps interestAndReady | BinaryOperation MemberReference r MethodInvocation add MethodInvocation remove interestAndReady SelectionKey w MethodInvocation add key attachment key attachment RubyIO blockingEntry getKey Boolean blockingEntry getValue RubyArray ArraySelector args IRubyObject i next context obj ioObj ReferenceType MethodInvocation SelectionKey OP_READ SelectionKey OP_ACCEPT ioObj StatementExpression != BinaryOperation Literal StatementExpression RubyArray ArraySelector args IRubyObject i next context obj ioObj ioObj getChannel SelectableChannel ioObj ReferenceType MethodInvocation != BinaryOperation Literal StatementExpression * Cast Literal timeout Math BinaryOperation round + BinaryOperation Literal selector selectNow selector MemberReference select | MemberReference MemberReference SelectionKey key attachment key attachment key attachment Literal SelectableChannel ioObj getChannel MethodInvocation & MethodInvocation MemberReference 0 MethodInvocation Literal SelectableChannel ioObj getChannel & MethodInvocation MemberReference 0 MethodInvocation ReferenceType MemberReference 1000 * Cast Literal + Literal MethodInvocation " into time timeout SelectionKey OP_READ SelectionKey OP_ACCEPT 0 MemberReference add getMode OpenFile unselectable_reads MemberReference add 1 getMode OpenFile unselectable_writes MemberReference add RubyFloat timeArg ReferenceType MemberReference 1000 "can't convert " timeArg MethodInvocation getMetaClass obj obj obj RubyFixnum timeArg getName	1
MethodDeclaration Modifier BasicType ReturnStatement public int Literal - 1	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Cast MethodInvocation MemberReference Object Object int MemberReference ClassCreator = ReferenceType MemberReference support popCurrentScope yyVal yyVal ReferenceType MethodInvocation Cast Cast MethodInvocation ISourcePositionHolder ArraySelector yyVals IterNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference support getCurrentScope BinaryOperation ReferenceType MemberReference ArgsNode ArraySelector yyVals Node ArraySelector yyVals + Literal MemberReference Token ArraySelector yyVals BinaryOperation BinaryOperation - 5 yyTop BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop - 1 yyTop - 4 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration AssertStatement LocalVariableDeclaration StatementExpression ReturnStatement private static IRubyObject ReferenceType context ReferenceType ReferenceType VariableDeclarator BinaryOperation ReferenceType VariableDeclarator MethodInvocation MethodInvocation ThreadContext IRubyObject Ruby runtime MethodInvocation instanceof MethodInvocation ReferenceType RubyString separator Cast MemberReference MemberReference MethodInvocation write runtime getNil context getRuntime runtime MethodInvocation getGlobalVariables RubyString ReferenceType MethodInvocation context separator getByteList RubyString runtime MethodInvocation getGlobalVariables	0
MethodDeclaration Modifier Annotation ReferenceType get_package_module_dot_format FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType arg0 MethodInvocation module Literal visibility MemberReference IRubyObject IRubyObject Java MemberReference MemberReference get_package_module_dot_format true Visibility PRIVATE recv arg0	1
MethodDeclaration Modifier ReferenceType getFirstNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private RubyArray ReferenceType fields ReferenceType VariableDeclarator ForControl BlockStatement MemberReference Field RubyArray result MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression result MethodInvocation getRuntime BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation MemberReference newArray int i Literal i fields length result ClassCreator append fields length 0 ReferenceType MethodInvocation MemberReference JavaField getRuntime ArraySelector fields MemberReference i	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType other BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation name Literal required Literal IRubyObject long shift boolean neg Literal IfStatement StatementExpression MethodInvocation TernaryExpression bignorm "<<" 1 false BinaryOperation BlockStatement IfStatement Assignment getRuntime MemberReference MethodInvocation MethodInvocation instanceof MemberReference ReferenceType StatementExpression IfStatement BreakStatement BinaryOperation BlockStatement MemberReference MethodInvocation = neg value Cast value Cast shiftLeft other RubyFixnum Assignment BinaryOperation BlockStatement instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement StatementExpression BreakStatement other other convertToInteger BasicType MemberReference BasicType MemberReference MemberReference Cast = < MemberReference Literal StatementExpression StatementExpression other RubyBignum ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment int shift int shift shift ReferenceType MemberReference shift 0 Assignment Assignment RubyBignum otherBignum Cast < MethodInvocation Literal LocalVariableDeclaration IfStatement StatementExpression MemberReference MethodInvocation = RubyFixnum other MemberReference Literal = MemberReference MemberReference = ReferenceType MemberReference signum 0 ReferenceType VariableDeclarator MethodInvocation ReturnStatement Assignment shift MemberReference neg true shift - shift RubyBignum other IRubyObject tmp MethodInvocation ! tmp isNil MemberReference MemberReference Literal = otherBignum otherBignum This checkShiftDown tmp neg true	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType value MethodInvocation MethodInvocation long long MemberReference BinaryOperation checkBounds MemberReference MethodInvocation MemberReference offset >> MemberReference Literal buffer MemberReference index value 3 offset	1
MethodDeclaration Modifier Annotation BasicType ReturnStatement public Override boolean Literal false	0
MethodDeclaration Modifier FormalParameter StatementExpression public BasicType Assignment boolean This MemberReference = MemberReference	0
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration ForStatement ReturnStatement private static final String ReferenceType VariableDeclarator EnhancedForControl BlockStatement MemberReference String MethodInvocation VariableDeclaration MethodInvocation IfStatement MethodInvocation Literal Literal getProperty ReferenceType VariableDeclarator keySet MethodInvocation BlockStatement toLowerCase "os.arch" "unknown" String s s MemberReference equalsIgnoreCase ReturnStatement MethodInvocation MemberReference get s	1
MethodDeclaration Modifier encode FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement public ReferenceType runtime ReferenceType o ReferenceType result BasicType VariableDeclarator BinaryOperation StatementExpression StatementExpression Ruby IRubyObject ByteList long l MethodInvocation == MemberReference MemberReference MethodInvocation MethodInvocation MemberReference Platform BYTE_ORDER Platform BIG_ENDIAN MemberReference MemberReference MemberReference MemberReference o result l result l	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter IfStatement public ReferenceType node ReferenceType context BasicType expr MemberReference BlockStatement BlockStatement Node BodyCompiler boolean RubyInstanceConfig PEEPHOLE_OPTZ IfStatement StatementExpression StatementExpression IfStatement MemberReference BlockStatement MethodInvocation MethodInvocation MemberReference StatementExpression expr StatementExpression StatementExpression context loadNil context pollThreadEvents ! expr MethodInvocation MethodInvocation MethodInvocation context consumeCurrentValue context loadNil context pollThreadEvents	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static IRubyObject ReferenceType context ReferenceType x ReferenceType y MethodInvocation ThreadContext IRubyObject IRubyObject MemberReference MethodInvocation MemberReference MemberReference context context MethodInvocation getRuntime x y	0
MethodDeclaration Modifier clear StatementExpression public MethodInvocation	0
MethodDeclaration Modifier FormalParameter StatementExpression public BasicType Assignment int This MemberReference = MemberReference	0
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression final public BasicType size Assignment MethodInvocation int MemberReference ArrayCreator = Arrays MemberReference MemberReference fill ReferenceType MemberReference size	0
MethodDeclaration Modifier ReferenceType getValue ReturnStatement public Object This	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation name Literal ThreadContext Ruby runtime MethodInvocation runtime isVerbose StatementExpression context getRuntime MethodInvocation runtime MethodInvocation getWarnings MemberReference Literal Literal Literal warning ID is use	0
MethodDeclaration Modifier BasicType checkFieldName FormalParameter FormalParameter IfStatement ReturnStatement private static final boolean ReferenceType runtime ReferenceType fieldName BinaryOperation BlockStatement Literal Ruby IRubyObject || BinaryOperation BinaryOperation ThrowStatement true instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation fieldName RubyString fieldName RubySymbol runtime BinaryOperation newTypeError + BinaryOperation Literal + Literal MethodInvocation " (expected String or "wrong argument type " fieldName MethodInvocation getMetaClass getName	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name Literal ThreadContext IRubyObject MemberReference MethodInvocation f_floor "div" context MemberReference This MemberReference f_div context other	1
MethodDeclaration Modifier LocalVariableDeclaration StatementExpression public ReferenceType VariableDeclarator MethodInvocation RubyHash ClassCreator Literal MethodInvocation assertEquals ReferenceType MethodInvocation null Literal get RubyHash Ruby "Non matching	0
MethodDeclaration Modifier visit FormalParameter FormalParameter StatementExpression public ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject block MemberReference MethodInvocation Literal Literal Literal yield context RubyArray MemberReference MemberReference MemberReference newArray null null true runtime key value	0
MethodDeclaration Modifier checkWritable IOException IfStatement public MethodInvocation ThrowStatement ! modes isWritable ClassCreator ReferenceType Literal IOException "not for writing"	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean BinaryOperation != BinaryOperation Literal & MemberReference Literal 0 stack 1	0
MethodDeclaration Modifier sort FormalParameter FormalParameter IfStatement StatementExpression static public ReferenceType a ReferenceType c BinaryOperation BlockStatement MethodInvocation Object Comparator < MemberReference MemberReference StatementExpression ReturnStatement MemberReference Literal MemberReference MemberReference a length MethodInvocation a 0 a length c MemberReference Literal MemberReference MemberReference a 0 a length c	0
MethodDeclaration Modifier LocalVariableDeclaration StatementExpression public ReferenceType VariableDeclarator MethodInvocation formatter MethodInvocation Literal MethodInvocation assertEquals Literal " formatter Literal format	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType block ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement This ThreadContext Block Ruby runtime MethodInvocation long lvalue This == MethodInvocation MemberReference LocalVariableDeclaration ForStatement ForStatement context getRuntime MemberReference block MethodInvocation getBody ReferenceType VariableDeclarator ForControl BlockStatement ForControl BlockStatement value IRubyObject nil MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression VariableDeclaration BinaryOperation MemberReference StatementExpression runtime getNil BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation long i Literal i lvalue block MemberReference MemberReference yield long i Literal i lvalue block MemberReference MethodInvocation yield 0 context nil 0 context RubyFixnum MemberReference MemberReference newFixnum runtime i	0
MethodDeclaration * public Operand IR_Scope * final FlipNode flipNode = * * if * m.performBooleanBranch(new * public * * m.performBooleanBranch(new * public * * m.getVariableCompiler().assignLocalVariable(flipNode.getIndex(), flipNode.getDepth(), * * new * public * * * * * new * public * * * m.getVariableCompiler().assignLocalVariable(flipNode.getIndex(), flipNode.getDepth(), * * * } * m.performBooleanBranch(new * public * * m.performBooleanBranch(new * public * * m.getVariableCompiler().assignLocalVariable(flipNode.getIndex(), flipNode.getDepth(), * * new * public * * * * * new * public * * m.performBooleanBranch(new * public * * * m.getVariableCompiler().assignLocalVariable(flipNode.getIndex(), flipNode.getDepth(), * * * new * public * * * * * * * don't require * if * * private * m.performBooleanBranch(new * public * * * new * public * * * * * private * m.performBooleanBranch(new * public * * * new * public * * * * */ Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public Operand ReferenceType node ReferenceType m ClassCreator FloatNode IR_Scope ReferenceType MethodInvocation Float node getValue	1
MethodDeclaration Modifier FormalParameter FormalParameter SynchronizedStatement public ReferenceType name ReferenceType method MethodInvocation StatementExpression StatementExpression String DynamicMethod getMethods MethodInvocation MethodInvocation MemberReference MemberReference invalidateCacheDescendants name method	0
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression ReturnStatement public IRubyObject ReferenceType proc MethodInvocation MemberReference RubyProc MemberReference push proc proc	0
MethodDeclaration Modifier ReferenceType getPosition ReturnStatement public ISourcePosition MemberReference position	0
MethodDeclaration Modifier attrAssignNode FormalParameter StatementExpression private ReferenceType node MethodInvocation AttrAssignNode sb MethodInvocation Literal append MethodInvocation append " " node getName	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter AssertStatement SwitchStatement public Override IRubyObject BasicType offset ReferenceType nil BinaryOperation MemberReference MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase int IRubyObject < MemberReference MemberReference SIZE_ERROR offset Literal IfStatement ReturnStatement Literal IfStatement ReturnStatement Literal IfStatement ReturnStatement ThrowStatement offset SIZE 0 BinaryOperation ReturnStatement MemberReference 1 BinaryOperation ReturnStatement MemberReference 2 BinaryOperation ReturnStatement MemberReference ClassCreator == MemberReference Literal Assignment variableValueZero == MemberReference Literal Assignment variableValueOne == MemberReference Literal Assignment variableValueTwo ReferenceType MemberReference variableValueZero null MemberReference MemberReference = variableValueOne null MemberReference MemberReference = variableValueTwo null MemberReference MemberReference = RuntimeException SIZE_ERROR variableValueZero nil variableValueOne nil variableValueTwo nil	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation ReturnStatement ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation == MemberReference Literal MethodInvocation IRubyObject rsObj MethodInvocation == MemberReference MethodInvocation MethodInvocation MemberReference MemberReference chompBangCommon19 "chomp!" CompatVersion RUBY1_9 context getRuntime value realSize 0 runtime getNil runtime MethodInvocation getGlobalVariables rsObj runtime MethodInvocation getGlobalVariables MemberReference smartChopBangCommon19 runtime rsObj Literal get runtime "$/"	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration SwitchStatement protected Node ReferenceType argsNode BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase ArrayNode int size MethodInvocation size Literal IfStatement Literal IfStatement Literal IfStatement ReturnStatement argsNode size 1 BinaryOperation BlockStatement BlockStatement 2 BinaryOperation BlockStatement BlockStatement 3 BinaryOperation BlockStatement BlockStatement ClassCreator instanceof This ReferenceType ReturnStatement ReturnStatement instanceof This ReferenceType ReturnStatement ReturnStatement instanceof This ReferenceType ReturnStatement ReturnStatement ReferenceType MethodInvocation MemberReference MemberReference MemberReference ClassCreator This ClassCreator This ClassCreator This AttrAssignNode getPosition name argsNode ReferenceType MethodInvocation MemberReference MemberReference MemberReference ReferenceType MethodInvocation MemberReference MemberReference MemberReference ReferenceType MethodInvocation MemberReference MemberReference MemberReference getPosition name argsNode getPosition name argsNode getPosition name argsNode	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType Literal Ruby ThreadContext IRubyObject Block "false"	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public Deprecated Object ReferenceType context ReferenceType arg ReferenceType target MethodInvocation ThreadContext IRubyObject Class arg MemberReference toJava target	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "reverse_each" true block isGiven MemberReference MemberReference MethodInvocation This Literal enumeratorize context block context getRuntime "reverse_each"	1
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression final public BasicType offset BasicType src BasicType off BasicType len MethodInvocation long short int int BinaryOperation MemberReference MemberReference MemberReference + MemberReference MemberReference src off len address offset	0
MethodDeclaration Modifier visit FormalParameter FormalParameter IfStatement public ReferenceType key ReferenceType value MethodInvocation BlockStatement IRubyObject IRubyObject MemberReference MemberReference MemberReference equalInternal ThrowStatement context obj value ClassCreator ReferenceType MemberReference MemberReference key value	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression final public BasicType buffer BasicType offset BasicType value MethodInvocation byte int long MemberReference MemberReference MemberReference buffer offset value	1
MethodDeclaration Modifier Annotation ReferenceType module_eval FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block MethodInvocation name ElementArrayValue frame Literal ThreadContext Block MemberReference This MemberReference specificEval Literal Literal true context block "module_eval" "class_eval"	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean MethodInvocation constructor	0
MethodDeclaration Modifier ReferenceType bignorm FormalParameter FormalParameter IfStatement ReturnStatement static public RubyInteger ReferenceType runtime ReferenceType bi BinaryOperation BlockStatement MethodInvocation Ruby BigInteger || BinaryOperation BinaryOperation ReturnStatement runtime MethodInvocation newFixnum < MethodInvocation Literal > MethodInvocation Literal MethodInvocation bi longValue bi MemberReference compareTo 0 bi MemberReference compareTo 0 MemberReference MemberReference newBignum runtime bi	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject Block ReferenceType MemberReference ArrayCreator MemberReference call Type context ReferenceType ArrayInitializer Block IRubyObject MethodInvocation RubyArray MethodInvocation MemberReference MemberReference MemberReference context getRuntime arg0 arg1 arg2	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block ReferenceType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block Object newArgs ArrayCreator VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression Object result Cast MemberReference MemberReference javaToRuby ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator Assignment ReferenceType MethodInvocation ruby result Object args length int i Literal i args length IRubyObject arg MemberReference MemberReference MethodInvocation = Object handle TernaryExpression MemberReference invoke 0 ArraySelector args ArraySelector newArgs MemberReference MemberReference Literal Cast newArgs MemberReference MemberReference arg isStatic null ReferenceType MemberReference i i JavaObjectWrapper self	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType arg1 ReferenceType arg2 ReferenceType block ReturnStatement CatchClause CatchClause ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject Block MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ThrowStatement MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference callBlock JumpException.BreakJump bj MethodInvocation JumpException.RetryJump rj MethodInvocation context caller self arg1 arg2 block MemberReference MemberReference handleBreakJump MemberReference retryJumpError context bj context	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offArg MethodInvocation name Literal required Literal ThreadContext IRubyObject MemoryUtil MethodInvocation MethodInvocation MethodInvocation getTaintedString 1 context getRuntime getMemoryIO MemberReference getOffset offArg	1
MethodDeclaration Modifier ReferenceType ReturnStatement public ArgsNode MemberReference args	0
MethodDeclaration Modifier FormalParameter TryStatement private Modifier BasicType val StatementExpression CatchClause final int MethodInvocation CatchClauseParameter ThrowStatement MemberReference MemberReference setInt IllegalAccessException e ClassCreator intern val ReferenceType MethodInvocation IllegalStateException e toString	1
MethodDeclaration Modifier visit FormalParameter FormalParameter StatementExpression public ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject self MemberReference MemberReference MemberReference op_aset19 context key value	0
MethodDeclaration Modifier empty StatementExpression StatementExpression public Assignment Assignment MemberReference MemberReference = MemberReference MemberReference = value ByteList	0
MethodDeclaration Modifier ReferenceType newZero FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private static RubyBigDecimal ReferenceType runtime BasicType sign ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference Ruby int RubyBigDecimal ClassCreator < MemberReference Literal StatementExpression StatementExpression ReferenceType MemberReference MemberReference sign 0 Assignment Assignment RubyBigDecimal runtime BigDecimal MemberReference Literal = MemberReference Literal = - 1 1	0
MethodDeclaration Modifier ReferenceType name ReturnStatement public String TernaryExpression BinaryOperation MethodInvocation Literal != MemberReference Literal kcode toLowerCase null kcode null	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ThrowStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation Assignment MemberReference ThreadContext IRubyObject Block IRubyObject larg MethodInvocation MemberReference MemberReference Literal checkContext MemberReference MemberReference = JumpException SPECIAL_JUMP MemberReference MemberReference checkArgs localContext ctx "first" ArraySelector holder larg runtime largs Literal 0	0
MethodDeclaration Modifier BasicType isClass ReturnStatement public boolean Literal false	0
MethodDeclaration Modifier Annotation ReferenceType each_line FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration WhileStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator MethodInvocation ReturnStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator Assignment BlockStatement MemberReference name ElementArrayValue optional Literal frame Literal ThreadContext IRubyObject IRubyObject Block ArgsFileData data MethodInvocation ! data MemberReference next_argv MethodInvocation instanceof MemberReference ReferenceType IfStatement StatementExpression StatementExpression IRubyObject str MemberReference MethodInvocation = StatementExpression recv Literal Literal 1 true ArgsFileData MemberReference getDataFrom context context MethodInvocation getRuntime data currentFile RubyIO MethodInvocation ReturnStatement MethodInvocation Assignment str MemberReference MemberReference MemberReference MethodInvocation "each_line" recv getNil ! data MemberReference next_argv MemberReference data.currentFile MemberReference Literal ArrayCreator MemberReference callMethod MemberReference Literal = context recv args block MemberReference MemberReference yield context recv context ReferenceType Literal block data next_p 1 context str IRubyObject 0	1
MethodDeclaration Modifier Annotation ReferenceType toString TryStatement public Override String LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ForStatement StatementExpression ReturnStatement CatchClause ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ForControl BlockStatement MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement ByteList buffer ClassCreator buffer MemberReference append buffer MemberReference append buffer ArrayCreator append VariableDeclaration BinaryOperation MemberReference IfStatement StatementExpression buffer ArrayCreator append buffer toString Exception e Literal ReferenceType Literal ArraySelector bytes ArraySelector bytes BasicType ArrayInitializer BasicType VariableDeclarator < MemberReference BinaryOperation ++ i BinaryOperation BreakStatement MethodInvocation BasicType ArrayInitializer null ByteList 20 BinaryOperation MemberReference byte Literal Literal int i BinaryOperation i + MemberReference Literal > MemberReference MemberReference buffer MemberReference append byte Literal Literal Literal Literal - MemberReference Literal index '-' '>' + MemberReference Literal index 20 index realSize ArraySelector bytes ' ' '.' '.' '.' index 1 index 1 MemberReference i	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Cast Cast AliasNode Cast getPosition ReferenceType Cast ReferenceType Cast ReferenceType MemberReference String ReferenceType MemberReference String ReferenceType MemberReference Token ArraySelector yyVals Token ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType callType ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject String IRubyObject IRubyObject IRubyObject CallType Block DynamicMethod method MethodInvocation IRubyObject caller MethodInvocation MemberReference MemberReference MemberReference MemberReference ReturnStatement method MemberReference MemberReference This MemberReference MemberReference MemberReference MemberReference MemberReference call MemberReference searchMethod context method name caller callType MethodInvocation context self name arg0 arg1 arg2 block name RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference context self method getVisibility name callType arg0 arg1 arg2 block	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression ReturnStatement public IRubyObject ReferenceType args MethodInvocation MethodInvocation Object MemberReference checkArity MemberReference Literal MemberReference args length method null args	0
MethodDeclaration Modifier Annotation ReferenceType start FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv MethodInvocation module Literal visibility MemberReference IRubyObject recv MethodInvocation getRuntime true Visibility PRIVATE getNil	0
MethodDeclaration Modifier setLine FormalParameter StatementExpression public BasicType line Assignment int This MemberReference = MemberReference line line	0
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression private ReferenceType name ReferenceType VariableDeclarator MethodInvocation Assignment Assignment BasicType VariableDeclarator MethodInvocation Assignment String String ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference MemberReference = MemberReference MemberReference = boolean ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference MemberReference = ReferenceType BinaryOperation 0 0 length ArraySelector name BasicType BinaryOperation 0 0 length String + MemberReference Literal BinaryOperation boolean + MemberReference Literal length 1 - MemberReference Literal length 1 length 1	0
MethodDeclaration Modifier ReferenceType ReturnStatement public MemberReference reason	0
MethodDeclaration Modifier ReferenceType getPosition IfStatement StatementExpression ReturnStatement public ISourcePosition BinaryOperation ReturnStatement Assignment MemberReference == MethodInvocation MethodInvocation MemberReference MemberReference ClassCreator = lastPosition lastPosition getStartLine source getLine lastPosition lastPosition ReferenceType MethodInvocation MethodInvocation source getFilename source getLine	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public RubyRange ReferenceType runtime ReferenceType context ReferenceType begin ReferenceType end ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby ThreadContext IRubyObject IRubyObject RubyRange ClassCreator MemberReference MemberReference MemberReference Literal init ReferenceType MemberReference MethodInvocation context begin end false RubyRange runtime runtime getRange	0
MethodDeclaration Modifier ReferenceType f_rshift FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType x ReferenceType y MethodInvocation ThreadContext IRubyObject IRubyObject x MemberReference Literal MemberReference callMethod context ">>" y	1
MethodDeclaration Modifier visit FormalParameter FormalParameter StatementExpression public ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject block MemberReference MemberReference yield context key	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement final public int BasicType bytes BasicType p BasicType len ReferenceType enc MethodInvocation byte int int Encoding MemberReference MemberReference MemberReference MemberReference MemberReference Literal bytes p len enc CR_UNKNOWN 0	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation block getBinding	0
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression static public BasicType n BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation long long start MethodInvocation long result MethodInvocation System.out BinaryOperation println System currentTimeMillis MemberReference + BinaryOperation MemberReference n + BinaryOperation Literal result + BinaryOperation MemberReference ") = " + BinaryOperation Literal n + Literal BinaryOperation "ms for " - MethodInvocation MemberReference System currentTimeMillis start	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType join ReferenceType args MethodInvocation Literal Object join MemberReference Literal send - 1 Channel null	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression private static ReferenceType receiver ReferenceType context ReferenceType name MethodInvocation IRubyObject ThreadContext RubySymbol receiver MemberReference Literal MemberReference callMethod context name	0
MethodDeclaration Modifier FormalParameter InvalidValueException IfStatement public ReferenceType MethodInvocation BlockStatement ModeFlags ! MemberReference ThrowStatement ClassCreator ReferenceType InvalidValueException	0
MethodDeclaration Modifier ReferenceType ReturnStatement final public Object MemberReference generation token	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter AssertStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg0 ReferenceType arg1 MethodInvocation BinaryOperation BlockStatement IfStatement MemberReference name Literal compat MemberReference IRubyObject IRubyObject ! MethodInvocation getRuntime instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement IfStatement arg1 "[]=" CompatVersion RUBY1_8 is1_9 arg0 RubyFixnum MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration StatementExpression BinaryOperation BlockStatement BlockStatement Cast MemberReference store arg0 RubyRange BasicType VariableDeclarator MethodInvocation instanceof MemberReference ReferenceType ThrowStatement StatementExpression ReferenceType MemberReference arg1 long beglen Cast MemberReference MemberReference MemberReference arg0 RubySymbol MethodInvocation MethodInvocation RubyFixnum arg0 ReferenceType MemberReference ArraySelector beglen ArraySelector beglen arg1 MethodInvocation getRuntime MethodInvocation MemberReference store RubyRange arg0 Literal Literal Literal newTypeError RubyNumeric MemberReference num2long arg1 0 1 as array index" arg0	0
MethodDeclaration Modifier prepare FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement public ReferenceType context ReferenceType runtime ReferenceType self ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType block ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement BinaryOperation StatementExpression ThreadContext Ruby IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block DynamicScope scope MethodInvocation isSimple StatementExpression StatementExpression != MethodInvocation Literal MethodInvocation context getCurrentScope MethodInvocation MethodInvocation getBlock null MemberReference MemberReference MemberReference processBlockArg scope MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference ArrayCreator MemberReference prepare scope runtime block arg0 arg1 arg2 arg3 arg4 context runtime self ReferenceType ArrayInitializer block IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference arg0 arg1 arg2 arg3 arg4	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference BlockArgNode ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod RubyModule MethodInvocation Java MethodInvocation This getProxyClass getRuntime	1
MethodDeclaration Modifier Annotation BasicType ReturnStatement public Override double MemberReference value	0
MethodDeclaration Modifier ReferenceType TryStatement private static Object LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement CatchClause ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ClassReference CatchClauseParameter ReturnStatement Class MethodInvocation java ReferenceType f MethodInvocation f Literal setAccessible MethodInvocation ReferenceType Exception ex Literal Class Literal forName lang ReferenceType Literal getDeclaredField true MethodInvocation cast Unsafe null reflect ReferenceType f MemberReference get Field	0
MethodDeclaration Modifier Annotation ReferenceType end FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType index BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator TernaryExpression name Literal compat MemberReference ThreadContext IRubyObject int i MethodInvocation Ruby runtime MethodInvocation int e MethodInvocation BinaryOperation MethodInvocation MethodInvocation CompatVersion RUBY1_8 RubyNumeric MemberReference num2int context getRuntime MemberReference MemberReference < MemberReference Literal runtime getNil RubyFixnum MemberReference MemberReference newFixnum index runtime i e 0 runtime e	0
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType IFNODE	0
MethodDeclaration Modifier ReferenceType getValue FormalParameter FormalParameter AssertStatement ReturnStatement public IRubyObject BasicType offset BasicType depth BinaryOperation MemberReference MethodInvocation int int != MemberReference Literal SIZE_ERROR parent MemberReference BinaryOperation getValue depth 0 offset - MemberReference Literal depth 1	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean BinaryOperation == MemberReference MemberReference	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement public ReferenceType node ReferenceType context BasicType expr BasicType VariableDeclarator BasicType VariableDeclarator MemberReference BlockStatement MemberReference StatementExpression Node BodyCompiler boolean boolean doit BinaryOperation boolean popit BinaryOperation doit StatementExpression popit MethodInvocation || MemberReference MemberReference && MemberReference MemberReference MethodInvocation context consumeCurrentValue expr ! RubyInstanceConfig PEEPHOLE_OPTZ ! RubyInstanceConfig PEEPHOLE_OPTZ ! expr context	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name MethodInvocation ThreadContext IRubyObject RubyModule String MemberReference MemberReference MemberReference MemberReference MemberReference call context self klazz name Block	0
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType runtime ReferenceType object BinaryOperation ReturnStatement MethodInvocation Ruby Object == MemberReference Literal MethodInvocation RubyFixnum MemberReference Cast newFixnum object null runtime getNil runtime ReferenceType MemberReference Short object	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public Ruby ReferenceType ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation List RubyInstanceConfig config ClassCreator != MemberReference Literal StatementExpression MemberReference MemberReference ReferenceType null MethodInvocation config RubyInstanceConfig config MemberReference	0
MethodDeclaration Modifier FormalParameter IfStatement IfStatement StatementExpression LocalVariableDeclaration ForStatement StatementExpression StatementExpression public ReferenceType BinaryOperation BlockStatement BinaryOperation BlockStatement Assignment Modifier BasicType VariableDeclarator ForControl BlockStatement Assignment Assignment != BinaryOperation Literal ThrowStatement != BinaryOperation Literal ThrowStatement MemberReference Literal = final int MemberReference VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement StatementExpression MemberReference MemberReference |= MemberReference MemberReference |= & BinaryOperation MemberReference 0 ClassCreator & BinaryOperation MemberReference 0 ClassCreator null BasicType VariableDeclarator < MemberReference MemberReference ++ i Modifier BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation asyncMask asyncMask mask mask & MemberReference MemberReference asyncMask ReferenceType Literal & MemberReference MemberReference asyncMask ReferenceType Literal int i Literal i length final int index MemberReference <= MethodInvocation MemberReference StatementExpression WhileStatement ArrayList TypeArgument MethodInvocation == MemberReference Literal StatementExpression StatementExpression MemberReference add mask ~ asyncMask IllegalArgumentException "Cannot use a channel in a mask ~ asyncMask IllegalArgumentException "Cannot use an channel in the head position of a 0 ArraySelector size index MethodInvocation BinaryOperation BlockStatement ReferenceType MemberReference get null Assignment MethodInvocation MemberReference BinaryOperation <= MethodInvocation MemberReference StatementExpression index MemberReference ClassCreator = MemberReference MemberReference set i + MemberReference Literal size index MethodInvocation ReferenceType index index 1 Literal add ArrayList TypeArgument null ReferenceType	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment MemberReference Object Object int ISourcePosition position MethodInvocation Node body TernaryExpression MemberReference MethodInvocation = yyVal Cast getPosition BinaryOperation MemberReference Cast yyVal support Cast ClassCreator node_assign ReferenceType MemberReference == Cast Literal NilImplicitNode NIL ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Cast ClassCreator Literal Token ArraySelector yyVals ReferenceType MemberReference null Node ArraySelector yyVals Node ArraySelector yyVals RescueNode position ReferenceType MemberReference ReferenceType MemberReference Literal MemberReference Literal null BinaryOperation Node ArraySelector yyVals BinaryOperation BinaryOperation Node ArraySelector yyVals RescueBodyNode position null body null + Literal MemberReference BinaryOperation + Literal MemberReference + Literal MemberReference BinaryOperation - 1 yyTop + Literal MemberReference 0 yyTop - 4 yyTop + Literal MemberReference 0 yyTop - 2 yyTop	1
MethodDeclaration Modifier BasicType isConstant ForStatement ReturnStatement public boolean EnhancedForControl IfStatement Literal VariableDeclaration MemberReference MethodInvocation ReturnStatement true ReferenceType VariableDeclarator ! o isConstant Literal Operand o false	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean MethodInvocation MemberReference getFlag	0
MethodDeclaration Modifier Annotation ReferenceType read StatementExpression IfStatement LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation BinaryOperation ReturnStatement ReferenceType VariableDeclarator MemberReference MemberReference name Literal >= MemberReference MemberReference MethodInvocation RubyString result MethodInvocation ++ pos result "read" pos length MethodInvocation getRuntime MethodInvocation getRuntime getNil MemberReference newString ArraySelector MemberReference pos	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement final int ReferenceType member MemberReference Member ArraySelector MemberReference member index	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair RubyArray ReferenceType obj MethodInvocation MethodInvocation name Literal required Literal compat MemberReference IRubyObject modifyCheck MemberReference concat 1 CompatVersion RUBY1_9 obj	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal ThreadContext MemberReference MethodInvocation f_negate context MemberReference MethodInvocation MemberReference f_idiv context MemberReference MemberReference f_negate den context num	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private static int BasicType b BasicType offset BasicType VariableDeclarator Assignment Assignment Assignment Assignment MemberReference byte int int value MemberReference MethodInvocation = MemberReference BinaryOperation |= MemberReference BinaryOperation |= MemberReference BinaryOperation |= value value MemberReference byteToUnsigned value << MethodInvocation Literal value << MethodInvocation Literal value << MethodInvocation Literal ArraySelector b MemberReference byteToUnsigned 8 MemberReference byteToUnsigned 16 MemberReference byteToUnsigned 24 MemberReference ArraySelector b ArraySelector b ArraySelector b ++ offset MemberReference MemberReference MemberReference ++ offset ++ offset ++ offset	1
MethodDeclaration Modifier BasicType FormalParameter ForStatement ReturnStatement private int ReferenceType name ForControl BlockStatement Literal String VariableDeclaration BinaryOperation MemberReference IfStatement - 1 BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation ReturnStatement int i Literal i length == MemberReference MemberReference MemberReference 0 name ArraySelector i MemberReference i	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Assignment MemberReference Object Object int MemberReference MethodInvocation = MemberReference MethodInvocation = yyVal yyVal support MethodInvocation MethodInvocation Cast arg_concat yyVal support Cast Cast arg_blk_pass Cast getPosition support MethodInvocation Cast newArrayNode ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Cast getPosition ReferenceType MemberReference Node ArraySelector yyVals Node yyVal BlockPassNode ArraySelector yyVals Node ArraySelector yyVals ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation Node ArraySelector yyVals BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference BinaryOperation + Literal MemberReference - 1 yyTop 0 yyTop - 4 yyTop + Literal MemberReference - 4 yyTop - 4 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement private static DynamicMethod ReferenceType runtime ReferenceType visibility ReferenceType callType BinaryOperation BlockStatement IfStatement Ruby Visibility CallType == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement visibility Visibility PRIVATE MethodInvocation == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement runtime visibility Visibility PROTECTED MethodInvocation == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement BlockStatement runtime callType CallType VARIABLE MethodInvocation == MemberReference MemberReference ReturnStatement ReturnStatement runtime callType CallType MethodInvocation MethodInvocation runtime runtime	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context ReferenceType to Modifier ReferenceType block TernaryExpression name Literal frame Literal final ThreadContext IRubyObject final Block MethodInvocation MethodInvocation MethodInvocation true block isGiven MemberReference MemberReference MemberReference MethodInvocation This Literal MemberReference enumeratorize context to block context getRuntime to	0
MethodDeclaration Modifier BasicType FormalParameter TryStatement ReturnStatement public long ReferenceType process IfStatement CatchClause MethodInvocation Process MethodInvocation BlockStatement CatchClauseParameter process hashCode MemberReference isInstance ReturnStatement Exception e process Cast ReferenceType MethodInvocation Long MemberReference get process	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression final public BasicType offset BasicType value MethodInvocation long int BinaryOperation MemberReference + MemberReference MemberReference value address offset	0
MethodDeclaration Modifier ReferenceType newRuntimeError FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException getRuntimeError message	0
MethodDeclaration Modifier ReferenceType createRawBacktrace FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType stackTrace BasicType filter ReferenceType VariableDeclarator ForControl BlockStatement MemberReference Ruby boolean RubyArray traceArray MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression traceArray RubyArray MemberReference newArray BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator MemberReference BlockStatement ReferenceType VariableDeclarator MethodInvocation runtime int i Literal i stackTrace length element MemberReference filter IfStatement RubyString str MethodInvocation traceArray MemberReference append 0 ArraySelector stackTrace BinaryOperation BlockStatement RubyString MemberReference MethodInvocation newString str MemberReference || MethodInvocation BinaryOperation ContinueStatement runtime MemberReference i element MethodInvocation getClassName < MethodInvocation Literal element Literal startsWith element getLineNumber 0	1
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression final public BasicType offset BasicType src BasicType off BasicType len MethodInvocation long int int int BinaryOperation MemberReference MemberReference MemberReference + MemberReference MemberReference src off len address offset	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast newCaseNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop - 4 yyTop	1
MethodDeclaration Modifier BasicType FormalParameter IOException ReturnStatement protected int BasicType c MethodInvocation int src Literal '\n'	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair RubyArray ReferenceType args MethodInvocation name Literal optional Literal compat MemberReference IRubyObject MemberReference MemberReference Literal Literal instance_methods 1 CompatVersion RUBY1_9 args PRIVATE true true	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration ForStatement ReturnStatement static public Set TypeArgument ReferenceType javaName ReferenceType methods ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator EnhancedForControl BlockStatement MemberReference ReferenceType String List TypeArgument String javaPropertyName MethodInvocation String rubyName MethodInvocation Set TypeArgument nameSet ClassCreator nameSet MemberReference add nameSet MemberReference add String rubyPropertyName Literal VariableDeclaration MemberReference LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement nameSet String ReferenceType JavaUtil MemberReference JavaUtil MemberReference getRubyCasedName ReferenceType ReferenceType javaName rubyName null ReferenceType VariableDeclarator methods ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement Method javaName javaName String TypeArgument Method method Class TypeArgument argTypes MethodInvocation Class TypeArgument resultType MethodInvocation int argCount MemberReference != MemberReference Literal IfStatement IfStatement ReferenceType ? method getParameterTypes ? method getReturnType argTypes length javaPropertyName null MethodInvocation BlockStatement IfStatement BinaryOperation BlockStatement String rubyName Literal startsWith StatementExpression IfStatement MethodInvocation BlockStatement IfStatement == MemberReference ClassReference StatementExpression StatementExpression Assignment BinaryOperation BlockStatement rubyName Literal startsWith StatementExpression IfStatement MethodInvocation BlockStatement resultType BasicType MethodInvocation MethodInvocation MemberReference MethodInvocation = || BinaryOperation BinaryOperation StatementExpression StatementExpression IfStatement Assignment BinaryOperation BlockStatement rubyName Literal startsWith StatementExpression IfStatement boolean nameSet BinaryOperation add nameSet BinaryOperation add rubyPropertyName rubyName Literal substring == MemberReference Literal && BinaryOperation BinaryOperation MethodInvocation MethodInvocation BinaryOperation BlockStatement MemberReference MethodInvocation = && BinaryOperation BinaryOperation StatementExpression StatementExpression Assignment BinaryOperation BlockStatement + MemberReference Literal + MemberReference Literal 4 argCount 0 == MemberReference Literal == MemberReference ClassReference nameSet MemberReference add nameSet MemberReference add == MemberReference ClassReference StatementExpression StatementExpression rubyPropertyName rubyName Literal substring == MemberReference Literal == MemberReference VoidClassReference MethodInvocation MethodInvocation MemberReference MethodInvocation = == MemberReference ClassReference StatementExpression StatementExpression StatementExpression StatementExpression javaName '?' rubyName '?' argCount 1 ArraySelector argTypes BasicType javaPropertyName rubyPropertyName resultType BasicType MethodInvocation MethodInvocation 4 argCount 1 resultType nameSet BinaryOperation add nameSet BinaryOperation add rubyPropertyName rubyName Literal substring resultType BasicType MethodInvocation MethodInvocation MethodInvocation MethodInvocation Literal int boolean nameSet BinaryOperation add nameSet BinaryOperation add + MemberReference Literal + MemberReference Literal 3 boolean nameSet MemberReference add nameSet MemberReference add nameSet BinaryOperation add nameSet BinaryOperation add 0 + MemberReference Literal + MemberReference Literal javaPropertyName '=' rubyPropertyName '=' javaPropertyName rubyPropertyName + MemberReference Literal + MemberReference Literal javaPropertyName '?' rubyPropertyName '?' javaPropertyName '?' rubyPropertyName '?'	1
MethodDeclaration Modifier BasicType getSize ReturnStatement public int MemberReference vTableSize	0
MethodDeclaration Modifier BasicType getLine ReturnStatement public int MemberReference line	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement private static final IRubyObject ReferenceType context ReferenceType recv ReferenceType BasicType count BasicType BasicType clear ReferenceType block BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement ThreadContext IRubyObject IRubyObject int int boolean Block int MethodInvocation int total BinaryOperation < MemberReference Literal ThrowStatement AllocatedDirectMemoryIO io MethodInvocation == MemberReference Literal LocalVariableDeclaration ThrowStatement MemoryPointer ClassCreator block isGiven TryStatement ReturnStatement MemberReference MemberReference * MemberReference MemberReference total 0 MethodInvocation Factory MethodInvocation getInstance io null ReferenceType VariableDeclarator ClassCreator ReferenceType MethodInvocation MemberReference MemberReference MemberReference MemberReference ReturnStatement StatementExpression MemberReference context count context MethodInvocation getRuntime MethodInvocation TernaryExpression MemberReference MemberReference Ruby runtime MethodInvocation ReferenceType MemberReference MethodInvocation MethodInvocation Literal MemoryPointer context getRuntime recv io total MethodInvocation MethodInvocation MethodInvocation newArgumentError context getRuntime BinaryOperation MemberReference Literal clear context getRuntime RaiseException runtime runtime String Literal MemberReference MemberReference format true block MemberReference MemberReference yield io String Literal MemberReference MemberReference format > MemberReference Literal total 1 "Failed to %d objects of %d count context size objects of %d count total 0	1
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter ReturnStatement public Object ReferenceType context ReferenceType rubyObject MethodInvocation ThreadContext IRubyObject rubyObject ClassReference toJava ReferenceType Double	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod IRubyObject MethodInvocation Java MethodInvocation MethodInvocation getInstance getRuntime MethodInvocation javaClass getClassLoader	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation ArrayNode getPosition	1
MethodDeclaration Modifier Annotation ReferenceType getReturnClass FormalParameter FormalParameter Exception ReturnStatement private Deprecated Class ReferenceType method ReferenceType args MethodInvocation String Class type MethodInvocation MemberReference MemberReference getMethod getReturnType method args	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement final public RubyRegexp ReferenceType runtime BasicType i ReferenceType name BasicType options MethodInvocation Ruby int String int runtimeCache MemberReference MemberReference MemberReference MemberReference runtime i name options	0
MethodDeclaration Modifier Annotation ReferenceType convertToArray FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType value MethodInvocation Ruby IRubyObject MemberReference MemberReference Literal runtime value false	0
MethodDeclaration Modifier Annotation ReferenceType euid_set FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg MethodInvocation name Literal required Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject MethodInvocation MemberReference euid_set 1 true Visibility PRIVATE context getRuntime arg	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ThrowStatement static public IRubyObject ReferenceType runtime ReferenceType value MethodInvocation Ruby IRubyObject runtime MemberReference MemberReference Literal BREAK value "unexpected	0
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration ReturnStatement private String ReferenceType VariableDeclarator MethodInvocation BigDecimal val MethodInvocation val MethodInvocation unscaledValue value abs toString	1
MethodDeclaration Modifier BasicType getBoolean FormalParameter FormalParameter TryStatement static public boolean ReferenceType property BasicType IfStatement CatchClause String boolean BinaryOperation BlockStatement BlockStatement CatchClauseParameter ReturnStatement != MethodInvocation Literal ReturnStatement ReturnStatement SecurityException se MemberReference System MemberReference getProperty null MethodInvocation MemberReference property Boolean MemberReference getBoolean property	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement private IRubyObject ReferenceType runtime ReferenceType context ReferenceType pattern ReferenceType prepared ReferenceType hash ReferenceType block ReferenceType regexp BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Ruby ThreadContext Regex Regex RubyHash Block RubyRegexp int begin MemberReference int len MemberReference int BinaryOperation byte bytes MemberReference Encoding enc MemberReference final Matcher matcher MethodInvocation DynamicScope scope MethodInvocation >= MethodInvocation Literal LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression ReturnStatement ReturnStatement value begin value realSize + MemberReference MemberReference value bytes value encoding prepared MemberReference MemberReference MemberReference matcher context getCurrentScope matcher MemberReference MemberReference MemberReference search 0 ReferenceType VariableDeclarator Assignment Modifier ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation begin len bytes begin begin Option NONE RubyMatchData match MethodInvocation MemberReference MemberReference = final RubyString repl final int tuFlags IRubyObject MethodInvocation == MemberReference Literal StatementExpression StatementExpression StatementExpression StatementExpression MemberReference MemberReference MemberReference modifyCheck scope MemberReference setBackRef MemberReference MemberReference MemberReference MemberReference BinaryOperation scope MethodInvocation setBackRef RubyRegexp MemberReference This MemberReference MemberReference MemberReference match regexp regexp MemberReference MethodInvocation BinaryOperation makeShared19 hash null Assignment Assignment Assignment Assignment bytes len enc match context pattern matcher repl | MemberReference MemberReference runtime getNil context scope matcher pattern runtime matcher getBegin - MethodInvocation MethodInvocation MemberReference Literal = MemberReference MethodInvocation = MemberReference MemberReference = MemberReference MethodInvocation = tuFlags repl flags matcher getEnd matcher getBegin tuFlags 0 repl MemberReference MethodInvocation tuFlags hash flags repl MemberReference MethodInvocation context block MemberReference MemberReference yield context hash MemberReference MemberReference op_aref context context	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public Object ReferenceType a ReferenceType b ReferenceType c ReferenceType obj MethodInvocation Object Object Object obj	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String MethodInvocation String MemberReference valueOf value	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement private int ReferenceType arg MethodInvocation IRubyObject MemberReference num2int arg	0
MethodDeclaration Modifier BasicType compare FormalParameter FormalParameter ReturnStatement public int ReferenceType o1 ReferenceType o2 MethodInvocation IRubyObject IRubyObject RubyFixnum MemberReference fix2int ArraySelector MethodInvocation o1 Literal MemberReference Literal MemberReference callMethod 1 localContext "<=>" ArraySelector o2 Literal 1	0
MethodDeclaration Modifier replace FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter BadLocationException IfStatement public ReferenceType fb BasicType offset BasicType length ReferenceType text ReferenceType attrs BinaryOperation StatementExpression DocumentFilter ReferenceType int int String AttributeSet >= MemberReference MemberReference SuperMethodInvocation FilterBypass offset startPos MemberReference MemberReference MemberReference MemberReference MemberReference replace fb offset length text attrs	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType sep ReferenceType block ReferenceType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement This ThreadContext IRubyObject Block Ruby runtime MethodInvocation sep isNil StatementExpression ReturnStatement ByteList val MethodInvocation int p MemberReference int s MemberReference int len MemberReference int end BinaryOperation byte bytes MemberReference final Encoding enc RubyString sepStr MethodInvocation == MemberReference MethodInvocation StatementExpression WhileStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement WhileStatement != MemberReference MemberReference StatementExpression context getRuntime MethodInvocation This value shallowDup val begin p val realSize + MemberReference MemberReference val bytes sep convertToString sepStr runtime MethodInvocation getGlobalVariables Assignment BinaryOperation BlockStatement Assignment ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement s end MethodInvocation block MemberReference This yield p len MemberReference MemberReference = < MemberReference MemberReference IfStatement StatementExpression MemberReference MethodInvocation = ByteList sepValue MemberReference final int newLine int rslen MemberReference == MemberReference Literal StatementExpression StatementExpression < MemberReference MemberReference LocalVariableDeclaration DoStatement block MemberReference MethodInvocation yield context enc val encoding p end BinaryOperation BlockStatement MemberReference enc MemberReference checkEncoding sepStr value sepValue realSize rslen 0 Assignment Assignment p end BasicType VariableDeclarator again Literal BlockStatement context MethodInvocation MemberReference MemberReference MemberReference BinaryOperation makeShared19 == MemberReference Cast LocalVariableDeclaration IfStatement ++ p sepStr MemberReference Literal = MemberReference MethodInvocation = int c MethodInvocation false LocalVariableDeclaration IfStatement IfStatement StatementExpression This infectBy runtime val s - MemberReference MemberReference ArraySelector bytes BasicType Literal BasicType VariableDeclarator MethodInvocation BlockStatement newLine '\n' newLine MemberReference MemberReference MemberReference MemberReference BinaryOperation codePoint MemberReference MemberReference MemberReference MemberReference MemberReference codePoint BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement Assignment end s MemberReference byte '\n' int MethodInvocation enc MemberReference MemberReference MemberReference StatementExpression StatementExpression StatementExpression runtime enc sepValue bytes sepValue begin + MemberReference MemberReference runtime enc bytes p end int n MethodInvocation && BinaryOperation BinaryOperation StatementExpression IfStatement WhileStatement StatementExpression && BinaryOperation BinaryOperation StatementExpression StatementExpression MemberReference MemberReference += p enc MemberReference MemberReference MemberReference MemberReference leftAdjustCharHead bytes end Assignment MethodInvocation Assignment sepValue begin sepValue realSize MemberReference MemberReference MemberReference codeLength == MemberReference Literal == MemberReference MemberReference Assignment BinaryOperation ContinueStatement BinaryOperation StatementExpression Assignment == MemberReference MemberReference || BinaryOperation BinaryOperation MethodInvocation Assignment p n bytes s p end MemberReference BinaryOperation = block MemberReference MethodInvocation yield MemberReference MemberReference = runtime enc c rslen 0 c newLine MemberReference MemberReference += && BinaryOperation BinaryOperation again && BinaryOperation BinaryOperation Assignment MemberReference MemberReference -= c newLine <= MemberReference Literal == MethodInvocation Literal block MemberReference MethodInvocation yield MemberReference BinaryOperation = p + MemberReference MethodInvocation context MethodInvocation MemberReference MemberReference MemberReference BinaryOperation makeShared19 s ++ p p n < MemberReference MemberReference != Assignment MemberReference < MemberReference MemberReference == MethodInvocation MemberReference MemberReference MemberReference += p n rslen 1 ByteList MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference memcmp 0 context MethodInvocation MemberReference MemberReference MemberReference BinaryOperation makeShared19 s + MemberReference TernaryExpression StringSupport MemberReference MemberReference MemberReference MemberReference length This infectBy runtime val s - MemberReference MemberReference p end MemberReference MethodInvocation = newLine p end MemberReference MemberReference MemberReference MemberReference MemberReference codePoint newLine p n sepValue bytes sepValue begin rslen bytes p rslen This infectBy runtime val s + BinaryOperation TernaryExpression p BinaryOperation MemberReference MemberReference enc bytes end p s c MemberReference MemberReference MemberReference MemberReference MemberReference codePoint runtime enc bytes p end - MemberReference MemberReference BinaryOperation MemberReference MemberReference != MemberReference Literal rslen n runtime enc bytes p end p s != MemberReference Literal rslen n rslen 0 rslen 0	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast attrset ReferenceType MemberReference ReferenceType Cast Node ArraySelector yyVals String ReferenceType MemberReference BinaryOperation Token ArraySelector yyVals + Literal MemberReference BinaryOperation - 2 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation BasicType isClass ReturnStatement public Override boolean Literal false	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation Literal ClassCreator MultipleAsgnNode Cast getPosition null ReferenceType MethodInvocation ReferenceType MemberReference StarNode getPosition Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter Throwable LocalVariableDeclaration StatementExpression ForStatement ReturnStatement public Object ReferenceType proxy ReferenceType method ReferenceType args ReferenceType VariableDeclarator Assignment ForControl BlockStatement MethodInvocation Object Method Object IRubyObject rubyArgs ArrayCreator MemberReference MethodInvocation = VariableDeclaration BinaryOperation MemberReference StatementExpression MethodInvocation ReferenceType BinaryOperation ArraySelector rubyArgs RubySymbol MemberReference MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment MethodInvocation MemberReference call IRubyObject + MemberReference Literal Literal ruby method getName int i Literal i rubyArgs length MemberReference MethodInvocation = ruby getCurrentContext rubyArgs args length 1 0 1 ArraySelector rubyArgs MemberReference MemberReference javaToRuby MemberReference ruby ArraySelector args i BinaryOperation - MemberReference Literal i 1	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public Ruby ReferenceType ReferenceType config ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference List RubyInstanceConfig Ruby runtime MethodInvocation runtime MethodInvocation runtime MethodInvocation runtime Ruby MemberReference newInstance MemberReference init Literal require config "java"	0
MethodDeclaration Modifier ReferenceType endCall FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement protected Class ReferenceType cw ReferenceType mv ReferenceType name MethodInvocation MethodInvocation ClassWriter MethodVisitor String MemberReference MemberReference MemberReference mv cw name	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType name ReferenceType object MethodInvocation Ruby String IRubyObject runtimeCache MemberReference Literal MemberReference MemberReference getVariable runtime 4 name object	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType context ReferenceType value BinaryOperation ThrowStatement MethodInvocation Ruby ThreadContext IRubyObject && MethodInvocation BinaryOperation MethodInvocation context MethodInvocation getCurrentScope ! value isNil instanceof MemberReference ReferenceType runtime MemberReference MethodInvocation newTypeError MemberReference setBackRef value RubyMatchData value runtime value	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType arg MethodInvocation Ruby IRubyObject MemberReference MemberReference euid_set runtime arg	0
MethodDeclaration Modifier FormalParameter ThrowStatement private ReferenceType src ClassCreator LexerSource ReferenceType MemberReference MethodInvocation MethodInvocation BinaryOperation MemberReference SyntaxException PID src getPosition src getCurrentLine + BinaryOperation Literal marker + Literal MemberReference "\" before EOF" "can't find string \"" marker	0
MethodDeclaration Modifier BasicType FormalParameter IOException IfStatement ReturnStatement private int BasicType c BinaryOperation BlockStatement BlockStatement MemberReference int != Assignment Literal StatementExpression StatementExpression StatementExpression c MemberReference MethodInvocation = '\n' MethodInvocation Assignment MemberReference c in read Cast unread MemberReference Literal = ++ offset BasicType MemberReference c '\n' char c	1
MethodDeclaration Modifier Annotation ReferenceType kill FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType receiver ReferenceType rubyThread ReferenceType block BinaryOperation ThrowStatement Cast name Literal required Literal frame Literal meta Literal IRubyObject IRubyObject Block instanceof MemberReference ReferenceType MethodInvocation ReferenceType MemberReference 1 true true rubyThread RubyThread receiver MethodInvocation getRuntime RubyThread rubyThread MemberReference MethodInvocation newTypeError rubyThread receiver MethodInvocation getRuntime getThread	1
MethodDeclaration Modifier ReferenceType parse FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Node ReferenceType content ReferenceType file ReferenceType scope BasicType lineNumber BasicType extraPositionInformation BinaryOperation StatementExpression MethodInvocation ByteList String DynamicScope int boolean != MemberReference Literal MethodInvocation parser MemberReference MemberReference MemberReference ClassCreator parse parserStats null parserStats file content scope ReferenceType MethodInvocation MemberReference MemberReference Literal Literal MemberReference getKCode lineNumber extraPositionInformation false true config	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement protected JavaCallable ReferenceType self ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference IRubyObject String IRubyObject IRubyObject IRubyObject JavaCallable callable == Assignment Literal LocalVariableDeclaration IfStatement StatementExpression IfStatement callable MemberReference MemberReference = null ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement callable javaCallable JavaCallable callablesForArity Literal || BinaryOperation BinaryOperation ThrowStatement MemberReference MethodInvocation = != MethodInvocation Literal ThrowStatement null <= MemberReference Literal == Assignment Literal MethodInvocation callable CallableSelector MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference callable MemberReference getParameterTypes 3 MethodInvocation javaCallables length 3 MemberReference MemberReference = null self MethodInvocation getRuntime self cache callablesForArity arg0 arg1 arg2 length self MethodInvocation getRuntime callablesForArity ArraySelector javaCallables Literal BinaryOperation newArgumentError Literal MethodInvocation newArgumentError Literal 3 - MemberReference Literal 3 callable MemberReference getParameterTypes 3 javaCallables length 1 length	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement protected DynamicMethod ReferenceType context ReferenceType self ReferenceType methodName MethodInvocation ThreadContext IRubyObject String runtimeCache MemberReference MemberReference Literal MemberReference getMethod context self 4 methodName	0
MethodDeclaration Modifier load FormalParameter FormalParameter IOException StatementExpression StatementExpression StatementExpression StatementExpression public Modifier ReferenceType runtime BasicType wrap MethodInvocation MethodInvocation MethodInvocation MethodInvocation final Ruby boolean runtime MethodInvocation runtime MethodInvocation runtime MethodInvocation MemberReference create Literal Literal Literal require runtime	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public RubyHash ReferenceType runtime ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference Ruby IRubyObject IRubyObject IRubyObject IRubyObject RubyHash hash MethodInvocation hash MemberReference MemberReference MemberReference hash MemberReference MemberReference MemberReference hash RubyHash MemberReference runtime runtime runtime	0
MethodDeclaration Modifier StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation method Literal ldc method MethodInvocation Literal MethodInvocation invokevirtual method swap method MethodInvocation Literal MethodInvocation invokevirtual method Label ClassCreator method MemberReference method athrow method MemberReference label ClassReference p ClassReference ClassReference sig ClassReference p ClassReference MethodInvocation sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType BasicType ClassReference params Label Ruby RubyClass String RubyModule boolean ReferenceType IRubyObject	0
MethodDeclaration Modifier ReferenceType FormalParameter IOException LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType args ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation IRubyObject ByteList sep Cast > MemberReference Literal StatementExpression MemberReference ReferenceType MethodInvocation args length 0 Assignment sep RubyString MethodInvocation MethodInvocation getRuntime MemberReference MemberReference = getGlobalVariables Literal get sep ArraySelector MethodInvocation MethodInvocation args "$/" Literal convertToString getByteList 0	0
MethodDeclaration Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression public ReferenceType context MethodInvocation MethodInvocation MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile context ClassCreator ClassCreator performBooleanBranch context flipNode context true ReferenceType MethodDeclaration ReferenceType MethodDeclaration BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter public ReferenceType context MethodInvocation MethodInvocation public ReferenceType context BodyCompiler context context MethodInvocation getVariableCompiler BodyCompiler MethodInvocation MethodInvocation Literal assignLocalVariable flipNode getIndex flipNode false	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType runtime ReferenceType cmd ReferenceType arg BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation Ruby IRubyObject IRubyObject long realCmd MethodInvocation long nArg Literal || BinaryOperation BinaryOperation StatementExpression BinaryOperation BlockStatement IfStatement OpenFile myOpenFile MethodInvocation == MemberReference MemberReference BinaryOperation BlockStatement IfStatement runtime Literal newFixnum cmd MethodInvocation convertToInteger 0 || BinaryOperation MethodInvocation == MemberReference MethodInvocation Assignment instanceof MemberReference ReferenceType StatementExpression BinaryOperation BlockStatement BlockStatement getOpenFileChecked realCmd FcntlLibrary || BinaryOperation BinaryOperation IfStatement BinaryOperation BlockStatement BlockStatement 0 getLongValue == MemberReference Literal arg isNil arg runtime getFalse MemberReference Literal = arg RubyFixnum Assignment == MemberReference MethodInvocation StatementExpression ThrowStatement == MemberReference MethodInvocation == MemberReference MethodInvocation BinaryOperation BlockStatement BlockStatement == MemberReference MethodInvocation ReturnStatement ThrowStatement arg null nArg 0 MemberReference MethodInvocation = arg runtime getTrue Assignment MethodInvocation realCmd value realCmd value == BinaryOperation MemberReference TryStatement realCmd value TernaryExpression MethodInvocation nArg RubyFixnum MemberReference fix2long MemberReference Literal = runtime Literal newNotImplementedError & MemberReference MemberReference FcntlLibrary LocalVariableDeclaration StatementExpression CatchClause MethodInvocation MethodInvocation MethodInvocation runtime Literal newNotImplementedError arg nArg 1 does not support string for second argument yet" nArg FcntlLibrary BasicType VariableDeclarator MethodInvocation CatchClauseParameter ThrowStatement myOpenFile MethodInvocation getMainStream RubyFixnum MemberReference zero RubyFixnum MemberReference MemberReference newFixnum only and with NONBLOCK for boolean block BinaryOperation myOpenFile MethodInvocation getMainStream IOException e MethodInvocation isBlocking runtime runtime ModeFlags NONBLOCK != BinaryOperation MemberReference MemberReference runtime MethodInvocation newIOError & MemberReference MemberReference ModeFlags NONBLOCK block e getMessage nArg ModeFlags NONBLOCK	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement private ReferenceType javaClass ReferenceType constantFields ReferenceType staticNames ReferenceType staticCallbacks ReferenceType instanceNames ReferenceType instanceCallbacks ReferenceType VariableDeclarator ForControl BlockStatement Class TypeArgument List TypeArgument Map TypeArgument TypeArgument Map TypeArgument TypeArgument Map TypeArgument TypeArgument Map TypeArgument TypeArgument Field fields MethodInvocation VariableDeclaration BinaryOperation LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration IfStatement ? ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType MemberReference BasicType VariableDeclarator >= MemberReference Literal ReferenceType VariableDeclarator BinaryOperation ContinueStatement MethodInvocation BlockStatement BasicType VariableDeclarator MethodInvocation BlockStatement BlockStatement ConstantField String AssignedName String NamedInstaller String AssignedName String NamedInstaller javaClass int i MemberReference -- i 0 Field field MemberReference != MemberReference MethodInvocation ConstantField MemberReference isConstant StatementExpression ContinueStatement int modifiers MethodInvocation Modifier MemberReference isStatic StatementExpression StatementExpression fields length ArraySelector fields javaClass field getDeclaringClass field MethodInvocation field getModifiers modifiers MethodInvocation MethodInvocation MemberReference constantFields ClassCreator add MemberReference MemberReference MemberReference MethodInvocation Literal MemberReference MemberReference MemberReference MethodInvocation Literal i ReferenceType MemberReference staticCallbacks staticNames field Modifier MemberReference isFinal true instanceCallbacks instanceNames field Modifier MemberReference isFinal false ConstantField field modifiers modifiers	1
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement ReturnStatement public RubyFixnum ReferenceType runtime BinaryOperation BlockStatement MemberReference Ruby == MemberReference Literal ReturnStatement null Assignment MemberReference MethodInvocation = RubyFixnum MemberReference MemberReference newFixnum runtime value	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference context arg0 arg1 arg2 type	0
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement WhileStatement IfStatement ReturnStatement protected static RubyModule ReferenceType cls MethodInvocation StatementExpression MethodInvocation StatementExpression BinaryOperation StatementExpression MemberReference RubyModule cls isSingleton Assignment cls isIncluded Assignment instanceof MemberReference ReferenceType Assignment cls MemberReference MethodInvocation = MemberReference MethodInvocation = cls MetaClass MemberReference Cast = cls cls getSuperClass cls cls getMetaClass cls ReferenceType MemberReference MetaClass cls	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Double ReferenceType d MethodInvocation Double vri MemberReference d	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject Class javaClass MethodInvocation int x MethodInvocation int y MethodInvocation int z MethodInvocation MethodInvocation MethodInvocation javaToRuby MemberReference RubyFixnum MethodInvocation fix2int RubyFixnum MethodInvocation fix2int RubyFixnum MethodInvocation fix2int context getRuntime Array MemberReference ArrayCreator newInstance self arg0 convertToInteger arg1 convertToInteger arg2 convertToInteger javaClass BasicType ArrayInitializer int MemberReference MemberReference MemberReference x y z	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter Exception StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType args Assignment BasicType VariableDeclarator ReferenceType VariableDeclarator MemberReference StatementExpression MemberReference StatementExpression ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal optional Literal module Literal visibility MemberReference IRubyObject IRubyObject MemberReference MethodInvocation = int Literal ByteList bytes Literal ! ArraySelector MethodInvocation args Assignment ! ArraySelector MethodInvocation args Assignment ext ClassCreator != MemberReference Literal StatementExpression recv MethodInvocation getRuntime 2 true Visibility PRIVATE args Arity MethodInvocation MemberReference Literal Literal scanArgs 1 null Literal isNil MemberReference MemberReference = Literal isNil MemberReference MethodInvocation = ReferenceType MemberReference bytes null MethodInvocation MethodInvocation newFixnum recv getRuntime args 0 2 0 bytes ArraySelector MethodInvocation MethodInvocation args 1 RubyNumeric MemberReference fix2int ext MethodInvocation MethodInvocation MethodInvocation update ext getValue Literal convertToString getByteList ArraySelector args bytes unsafeBytes bytes begin bytes length 0 Literal 1	1
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType Node MemberReference MemberReference MethodInvocation createList Node pre rest getValueNode	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType name MethodInvocation required Literal IRubyObject Java MethodInvocation MethodInvocation getInstance 1 getRuntime MethodInvocation javaClass MethodInvocation getResourceAsStream name asJavaString	1
MethodDeclaration Modifier Annotation ReferenceType toString IfStatement LocalVariableDeclaration StatementExpression IfStatement StatementExpression ForStatement StatementExpression ReturnStatement public Override String BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MethodInvocation EnhancedForControl BlockStatement MethodInvocation MethodInvocation instanceof This ReferenceType Literal StringBuilder builder ClassCreator builder MethodInvocation Literal append instanceof This ReferenceType StatementExpression builder MethodInvocation Literal append VariableDeclaration MethodInvocation StatementExpression builder Literal append builder toString "" ReferenceType Literal MethodInvocation append "(" INameNode MethodInvocation MethodInvocation append " " ReferenceType VariableDeclarator childNodes MethodInvocation ")" StringBuilder 60 getNodeName builder MethodInvocation Literal append MethodInvocation getPosition Node child builder MethodInvocation Literal append Cast append ":" getStartLine MemberReference append ", " ReferenceType This child INameNode	1
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference int index MemberReference stack MemberReference == BinaryOperation MemberReference StatementExpression ArraySelector stack + MemberReference Literal stack length MethodInvocation BinaryOperation index 1 + MemberReference Literal index 1	0
MethodDeclaration Modifier Annotation ReferenceType inspect ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal RubyString MethodInvocation MethodInvocation "inspect" getRuntime ByteList BinaryOperation plain + BinaryOperation Literal + BinaryOperation MethodInvocation ">" + BinaryOperation Literal + Literal MethodInvocation ": " MethodInvocation MethodInvocation getMetaClass getRealClass getName	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Operand ReferenceType node ReferenceType m ReferenceType VariableDeclarator MethodInvocation MemberReference GlobalVarNode IR_Scope Variable rv MethodInvocation m ClassCreator addInstr rv m getNewVariable ReferenceType MemberReference MethodInvocation rv node getName	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement static public IRubyObject ReferenceType ReferenceType throwables ReferenceType context BinaryOperation BlockStatement BlockStatement Throwable IRubyObject ThreadContext instanceof MemberReference ReferenceType ReturnStatement ForStatement ReturnStatement RaiseException MethodInvocation ForControl BlockStatement MethodInvocation Cast MemberReference MemberReference isExceptionHandled VariableDeclaration BinaryOperation MemberReference IfStatement context MethodInvocation getRuntime ReferenceType MemberReference throwables context BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation BlockStatement getFalse RaiseException int i Literal i throwables length MemberReference MemberReference ReturnStatement 0 ArraySelector throwables MethodInvocation Literal context MethodInvocation getRuntime 0 getTrue	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int support Cast backrefAssignError yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier BasicType getIdentifier FormalParameter IOException DoStatement ReturnStatement private int BasicType c MethodInvocation BlockStatement MemberReference int MemberReference isIdentifierChar StatementExpression StatementExpression c c MethodInvocation Assignment tokenBuffer Cast append MemberReference MethodInvocation = BasicType MemberReference c src read char c	0
MethodDeclaration Modifier Annotation Annotation ReferenceType eql_p FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair Override IRubyObject ReferenceType other BinaryOperation BlockStatement MethodInvocation name Literal required Literal IRubyObject instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement MethodInvocation getRuntime "eql?" 1 other RubyTime ReferenceType VariableDeclarator TernaryExpression getFalse RubyTime otherTime Cast BinaryOperation MethodInvocation MethodInvocation ReferenceType MemberReference && BinaryOperation BinaryOperation MethodInvocation getRuntime MethodInvocation getRuntime RubyTime other == MemberReference MemberReference == MethodInvocation MethodInvocation getTrue getFalse usec otherTime usec otherTime	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression protected ReferenceType context ReferenceType runtime ReferenceType scope ReferenceType self ReferenceType args MethodInvocation ThreadContext Ruby DynamicScope IRubyObject IRubyObject MemberReference MemberReference MemberReference MemberReference MethodInvocation context runtime scope args MemberReference MemberReference MemberReference MemberReference context runtime self args	0
MethodDeclaration Modifier ReferenceType getTopSelf ReturnStatement public IRubyObject MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement protected IRubyObject ReferenceType caller ReferenceType selfType ReferenceType block ReferenceType context ReferenceType self ReferenceType arg ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement Assignment MethodInvocation IRubyObject RubyClass Block ThreadContext IRubyObject IRubyObject entry MethodInvocation DynamicMethod method MemberReference MemberReference MemberReference ReturnStatement MemberReference MemberReference = method MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call selfType MemberReference entry method method caller MethodInvocation cache entry context self selfType methodName arg block methodName MemberReference MemberReference MemberReference MemberReference MemberReference context self method arg block	0
MethodDeclaration Modifier FormalParameter StatementExpression final public BasicType size Assignment int MemberReference ArrayCreator = ReferenceType MemberReference RubyRegexp size	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter ForStatement ReturnStatement private static boolean ReferenceType types ReferenceType args ForControl BlockStatement Literal Class IRubyObject VariableDeclaration BinaryOperation MemberReference IfStatement true BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement int i Literal i types length || MethodInvocation MethodInvocation ReturnStatement 0 MemberReference MemberReference assignable MemberReference MemberReference Literal ArraySelector types ArraySelector args ArraySelector types ArraySelector args false MemberReference MemberReference MemberReference MemberReference i i i i	1
MethodDeclaration Modifier ReferenceType getName ReturnStatement public String Literal "true"	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement static final byte BasicType address MethodInvocation long MemberReference address	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block context MethodInvocation getRuntime BinaryOperation newTypeError + Literal MemberReference "no public constructors for " clazz	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset ReferenceType arrParam MethodInvocation This name ElementArrayValue required Literal ThreadContext IRubyObject IRubyObject MemoryUtil MethodInvocation MethodInvocation MethodInvocation MethodInvocation Literal Literal 2 context getRuntime getMemoryIO MemberReference getOffset MemberReference checkArray offset arrParam	1
MethodDeclaration Modifier ReferenceType ReturnStatement public Node MemberReference superNode	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter IfStatement private static ReferenceType runtime ReferenceType currentThread ReferenceType exception MethodInvocation BlockStatement Ruby RubyThread IRubyObject currentThread MethodInvocation StatementExpression isTrue MethodInvocation currentThread ArrayCreator ReferenceType ArrayInitializer IRubyObject MemberReference MethodInvocation exception runtime Literal newString	0
MethodDeclaration Modifier BasicType getNativeSize ReturnStatement final public int MemberReference size	0
MethodDeclaration Modifier copyDataToJavaArray FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement static public ReferenceType context ReferenceType rubyArray BasicType src ReferenceType javaArray BasicType dest BasicType length ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement ThreadContext RubyArray int JavaArray int int Class targetType MethodInvocation int Cast int srcLength MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression javaArray getComponentType BasicType MethodInvocation rubyArray getLength BasicType VariableDeclarator && BinaryOperation BinaryOperation ++ i MethodInvocation int javaArray MethodInvocation length int i Literal && BinaryOperation BinaryOperation < MemberReference MemberReference javaArray BinaryOperation MethodInvocation setWithExceptionHandling getLongValue 0 < BinaryOperation MemberReference < BinaryOperation MemberReference i length + MemberReference MemberReference rubyArray MethodInvocation BinaryOperation entry + MemberReference MemberReference srcLength + MemberReference MemberReference dest i MemberReference toJava + MemberReference MemberReference src i dest i targetType src i	1
MethodDeclaration post FormalParameter StatementExpression ReferenceType context MethodInvocation ThreadContext context	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SwitchStatement private Node ReferenceType operation ReferenceType args ReferenceType iter ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Token ArrayNode Node String name Cast ISourcePosition position MethodInvocation args size Literal IfStatement ReturnStatement Literal IfStatement ReturnStatement Literal IfStatement ReturnStatement Literal IfStatement ReturnStatement IfStatement ReturnStatement ReferenceType MethodInvocation MemberReference MemberReference position 0 BinaryOperation ReturnStatement ClassCreator 1 BinaryOperation ReturnStatement ClassCreator 2 BinaryOperation ReturnStatement ClassCreator 3 BinaryOperation ReturnStatement ClassCreator BinaryOperation ReturnStatement ClassCreator String operation getValue operation args != MemberReference Literal ClassCreator ReferenceType MemberReference MemberReference MemberReference != MemberReference Literal ClassCreator ReferenceType MemberReference MemberReference MemberReference != MemberReference Literal ClassCreator ReferenceType MemberReference MemberReference MemberReference != MemberReference Literal ClassCreator ReferenceType MemberReference MemberReference MemberReference != MemberReference Literal ClassCreator ReferenceType MemberReference MemberReference MemberReference iter null ReferenceType MemberReference MemberReference MemberReference Cast FCallNoArgNode position args name iter null ReferenceType MemberReference MemberReference MemberReference Cast position name args iter null ReferenceType MemberReference MemberReference MemberReference Cast position name args iter null ReferenceType MemberReference MemberReference MemberReference Cast position name args iter null ReferenceType MemberReference MemberReference MemberReference Cast position name args position name args ReferenceType MemberReference position name args ReferenceType MemberReference position name args ReferenceType MemberReference position name args ReferenceType MemberReference position name args ReferenceType MemberReference IterNode iter IterNode iter IterNode iter IterNode iter IterNode iter	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override RubyFloat This	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression private static ReferenceType result BasicType s MethodInvocation MethodInvocation ByteList int result MethodInvocation Cast append result MethodInvocation Cast append Cast append BasicType BinaryOperation Cast append BasicType BinaryOperation BasicType BinaryOperation byte & MemberReference Literal BasicType BinaryOperation byte & BinaryOperation Literal byte & BinaryOperation Literal s 0xff byte & BinaryOperation Literal >> MemberReference Literal 0xff >> MemberReference Literal 0xff >> MemberReference Literal 0xff s 16 s 8 s 24	0
MethodDeclaration Modifier ReferenceType setInt FormalParameter ReturnStatement static public String BasicType i MethodInvocation int String MemberReference valueOf i	0
MethodDeclaration Modifier ReferenceType getReceiverNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement protected Object ReferenceType first MemberReference Object first	0
MethodDeclaration Modifier Annotation ReferenceType name ReturnStatement public JRubyMethod RubyString MethodInvocation MethodInvocation getRuntime MethodInvocation newString field getName	0
MethodDeclaration Modifier BasicType FormalParameter IfStatement ReturnStatement private static long ReferenceType arg BinaryOperation BlockStatement IfStatement MethodInvocation IRubyObject == MemberReference MethodInvocation ReturnStatement BinaryOperation BlockStatement RubyNumeric MemberReference num2long arg arg MethodInvocation getRuntime Literal instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement ReturnStatement arg getNil 0L arg RubyBignum ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BigInteger Cast || BinaryOperation BinaryOperation ThrowStatement longValue ReferenceType MemberReference < MethodInvocation Literal > MethodInvocation Literal MethodInvocation RubyBignum arg MemberReference compareTo 0 MemberReference compareTo 0 arg MethodInvocation getRuntime Literal newRangeError too to convert into	0
MethodDeclaration Modifier ReferenceType getObject IfStatement ReturnStatement public Object BinaryOperation StatementExpression MemberReference == MemberReference Literal Assignment object object null MemberReference Cast = object ReferenceType MethodInvocation JavaObject dataGetStruct	1
MethodDeclaration Modifier FormalParameter StatementExpression private ReferenceType node MethodInvocation AliasNode sb MethodInvocation MethodInvocation Literal append MethodInvocation append MethodInvocation append " " node node	0
MethodDeclaration Modifier FormalParameter FormalParameter LocalVariableDeclaration ForStatement StatementExpression static public ReferenceType o BasicType BasicType VariableDeclarator ForControl BlockStatement MethodInvocation int long time MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression System.out BinaryOperation println System currentTimeMillis BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation + Literal BinaryOperation int i Literal i o Literal getName " - MethodInvocation MemberReference 0 "Charlie" System currentTimeMillis time	0
MethodDeclaration Modifier Annotation ReferenceType include_p FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType arg Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator StatementExpression CatchClause MethodInvocation name ElementArrayValue required Literal frame Literal ThreadContext IRubyObject final IRubyObject final Ruby runtime MethodInvocation final ThreadContext localContext MemberReference MethodInvocation CatchClauseParameter ReturnStatement runtime getFalse Literal Literal 1 true context getRuntime context MemberReference MemberReference MemberReference ClassCreator callEach JumpException.SpecialJump sj MethodInvocation "include?" "member?" runtime context self ReferenceType MethodDeclaration runtime getTrue BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation MemberReference MemberReference Literal checkContext RubyObject MemberReference MemberReference MemberReference equalInternal ThrowStatement runtime getNil MemberReference MemberReference checkArgs localContext ctx ctx larg arg MemberReference runtime largs JumpException SPECIAL_JUMP	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset ReferenceType value MethodInvocation This name ElementArrayValue required Literal ThreadContext IRubyObject IRubyObject MethodInvocation getMemoryIO Literal Literal 2 MethodInvocation MethodInvocation putLong MemberReference getOffset Util MemberReference int64Value offset value	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter AssertStatement ReturnStatement private static IRubyObject ReferenceType context ReferenceType clazz ReferenceType x BinaryOperation MethodInvocation ThreadContext IRubyObject IRubyObject instanceof MemberReference ReferenceType MemberReference MemberReference MemberReference MethodInvocation x RubyRational context clazz x RubyFixnum MethodInvocation one context getRuntime	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Assignment MethodInvocation MethodInvocation MemberReference Ruby RubyClass MethodInvocation runtime MemberReference MemberReference MemberReference = ClassReference defineAnnotatedMethods MethodInvocation getMetaClass runtime Literal MethodInvocation MemberReference defineClass index ClassIndex NIL ReferenceType Literal runtime getObject	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement static public JRubyMethod IRubyObject ReferenceType recv MethodInvocation IRubyObject recv MethodInvocation getRuntime getNil	1
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation Label MethodInvocation getMethodVisitor MemberReference MemberReference arg0	1
MethodDeclaration Modifier init FormalParameter FormalParameter FormalParameter FormalParameter IfStatement StatementExpression StatementExpression StatementExpression private ReferenceType context ReferenceType begin ReferenceType end BasicType isExclusive BinaryOperation BlockStatement Assignment Assignment Assignment ThreadContext IRubyObject IRubyObject boolean && BinaryOperation BinaryOperation TryStatement This MemberReference = This MemberReference = This MemberReference = instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement CatchClause MemberReference begin MemberReference end MemberReference isExclusive begin RubyFixnum end RubyFixnum ReferenceType VariableDeclarator MethodInvocation ThrowStatement CatchClauseParameter ThrowStatement begin end isExclusive IRubyObject result MethodInvocation result isNil MethodInvocation RaiseException re MethodInvocation begin MemberReference Literal MemberReference callMethod MethodInvocation getRuntime MethodInvocation getRuntime context "<=>" end Literal newArgumentError Literal newArgumentError "bad value for range" "bad value for range"	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public Override Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject Ruby runtime MethodInvocation MemberReference proxy MethodInvocation JavaConstructor constructor Cast Object cArg0 MethodInvocation Object cArg1 MethodInvocation proxy MethodInvocation self context getRuntime runtime MemberReference ReferenceType MethodInvocation MemberReference MemberReference MemberReference Literal convertArg MemberReference MemberReference MemberReference Literal convertArg JavaObject MemberReference MethodInvocation wrap self JavaConstructor MemberReference MemberReference MemberReference MemberReference context arg0 constructor 0 context arg1 constructor 1 runtime constructor MemberReference MemberReference self name arg0 arg1 cArg0 cArg1	0
MethodDeclaration Modifier ReferenceType setValue FormalParameter StatementExpression ReturnStatement public IRubyObject ReferenceType newValue Assignment MemberReference IRubyObject MemberReference MemberReference = newValue value newValue	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ThreadContext IRubyObject RubyModule String IRubyObject Block IRubyObject proxy MethodInvocation instanceof MethodInvocation ReferenceType StatementExpression proxy MemberReference MemberReference MemberReference Literal MemberReference MemberReference call proxy dataGetStruct JavaObject MethodInvocation context self clazz args block RuntimeHelpers MemberReference MemberReference Literal MemberReference MemberReference invoke context proxy args block	1
MethodDeclaration Modifier BasicType LocalVariableDeclaration IfStatement ReturnStatement public int ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference MethodInvocation != MemberReference MemberReference ReturnStatement ClassIndex getCache MethodInvocation MemberReference getImplementationClass index	0
MethodDeclaration Modifier encode FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType runtime ReferenceType o ReferenceType result MethodInvocation Ruby IRubyObject ByteList MemberReference MethodInvocation result MemberReference MemberReference runtime o	0
MethodDeclaration Modifier StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression static public Assignment ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference ClassCreator = IR_Class obj MethodInvocation Literal MethodInvocation Literal addCoreClass Literal MemberReference ArrayCreator addCoreClass Literal MemberReference ArrayCreator addCoreClass Literal MemberReference ArrayCreator addCoreClass Literal MemberReference Literal addCoreClass Literal MemberReference Literal addCoreClass Literal MemberReference Literal addCoreClass ReferenceType Literal Literal Literal addCoreClass "Class" Literal MemberReference Literal addCoreClass null obj ReferenceType ArrayInitializer obj ReferenceType ArrayInitializer obj ReferenceType ArrayInitializer obj null obj null obj null HashMap TypeArgument TypeArgument null null "Module" obj null String Literal Literal Literal Literal String Literal Literal Literal Literal String Literal ReferenceType ReferenceType "+" "-" "/" "*" "+" "-" "/" "*" "[]" String IR_Class	1
MethodDeclaration Modifier ReferenceType get_package_module_dot_format FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public IRubyObject ReferenceType recv ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator TernaryExpression IRubyObject IRubyObject Ruby runtime MethodInvocation RubyModule module MethodInvocation BinaryOperation MethodInvocation MemberReference recv getRuntime MemberReference MethodInvocation getJavaPackageModule == MemberReference Literal runtime getNil module runtime asJavaString module null	1
MethodDeclaration Modifier BasicType FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement private static boolean ReferenceType runtime ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation Ruby RubyFixnum currentExceptionMode Cast RubyFixnum EXCEPTION_NaN Cast != BinaryOperation Literal ReferenceType MethodInvocation ReferenceType MethodInvocation & MethodInvocation MethodInvocation 0 RubyFixnum runtime MethodInvocation Literal fastGetClass RubyFixnum runtime MethodInvocation Literal fastGetClass currentExceptionMode getLongValue EXCEPTION_NaN getLongValue Literal searchInternalModuleVariable "BigDecimal" Literal fastGetConstant "BigDecimal" "vpExceptionMode"	1
MethodDeclaration Modifier ReferenceType values ReturnStatement public Collection ClassCreator ReferenceType MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override Class TypeArgument ClassReference ? BasicType double	0
MethodDeclaration Modifier run StatementExpression StatementExpression public MethodInvocation MethodInvocation console Literal setVisible runtime Literal true require	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement protected IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType method ReferenceType args MethodInvocation ThreadContext IRubyObject String DynamicMethod IRubyObject RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference context self method getVisibility name callType args Block	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement final public RubyString ReferenceType runtime MethodInvocation Ruby runtimeCache MemberReference Literal getString runtime 9	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration TryStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType VariableDeclarator StatementExpression CatchClause MethodInvocation name Literal module Literal IRubyObject Ruby runtime MethodInvocation MethodInvocation CatchClauseParameter IfStatement runtime getNil true recv getRuntime runtime MethodInvocation getPosix Exception e MethodInvocation BlockStatement runtime MethodInvocation getDebug StatementExpression isTrue MethodInvocation runtime MethodInvocation getWarnings MemberReference Literal MemberReference warn ID is not supported by on this e	0
MethodDeclaration Modifier BasicType startsWithDriveLetterOnWindows FormalParameter ReturnStatement private static boolean ReferenceType path BinaryOperation String && BinaryOperation TernaryExpression && BinaryOperation MemberReference BinaryOperation BinaryOperation BinaryOperation != MemberReference Literal Platform IS_WINDOWS && BinaryOperation BinaryOperation && BinaryOperation BinaryOperation && BinaryOperation BinaryOperation path null > MethodInvocation Literal == MethodInvocation Literal && BinaryOperation MethodInvocation == MethodInvocation Literal && BinaryOperation MethodInvocation == MethodInvocation Literal path length 1 path Literal charAt '/' > MethodInvocation Literal MethodInvocation isWindowsDriveLetter path Literal charAt ':' > MethodInvocation Literal MethodInvocation isWindowsDriveLetter path Literal charAt ':' 0 path length 2 path Literal charAt 2 path length 1 path Literal charAt 1 1 0	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement ReferenceType VariableDeclarator Assignment MemberReference Object Object int || MethodInvocation MethodInvocation StatementExpression ISourcePosition position MethodInvocation MemberReference ClassCreator = yyVal support isInDef support isInSingle MethodInvocation Cast getPosition yyVal ReferenceType MemberReference Literal MethodInvocation MemberReference Literal yyerror ReferenceType MemberReference ConstDeclNode position null support MemberReference Cast Cast new_colon2 NilImplicitNode NIL "dynamic constant assignment" Node ArraySelector yyVals position ReferenceType MemberReference ReferenceType Cast BinaryOperation Node ArraySelector yyVals String ReferenceType MemberReference + Literal MemberReference BinaryOperation Token ArraySelector yyVals - 2 yyTop + Literal MemberReference BinaryOperation - 2 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement static public String ReferenceType f MethodInvocation Float String MemberReference valueOf f	0
MethodDeclaration Modifier Annotation ReferenceType address FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation name ElementArrayValue ThreadContext context MethodInvocation getRuntime Literal Literal MethodInvocation newFixnum "address" "to_i" getAddress	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression TryStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType block MethodInvocation LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement StatementExpression ThreadContext IRubyObject RubyModule String Block MemberReference MemberReference ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference MemberReference MethodInvocation context name RubyClass cls Cast IRubyObject obj MethodInvocation cls ArraySelector MethodInvocation obj MemberReference ReferenceType MemberReference cls MemberReference MemberReference MemberReference MemberReference MemberReference call context RubyClass self context self obj block	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter IOException ReturnStatement static public int ReferenceType channel ReferenceType buf MethodInvocation ByteBuffer MemberReference MemberReference Literal write channel buf true	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean MethodInvocation ruby MethodInvocation MethodInvocation get getInstanceConfig	0
MethodDeclaration Modifier Annotation ReferenceType newArray FormalParameter ReturnStatement static final SuppressWarnings Literal T A Segment TypeArgument TypeArgument BasicType size ArrayCreator "unchecked" ReferenceType ReferenceType int ReferenceType MemberReference T A Segment size	0
MethodDeclaration Modifier BasicType IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration TryStatement IfStatement IfStatement ReturnStatement public double BinaryOperation BlockStatement BasicType VariableDeclarator MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator StatementExpression CatchClause BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference == MemberReference Literal ReturnStatement int q MemberReference int endPlace ArrayCreator double d Literal Assignment CatchClauseParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement TryStatement == MemberReference MemberReference IfStatement ReturnStatement < MemberReference MemberReference LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression WhileStatement StatementExpression StatementExpression StatementExpression TryStatement IfStatement d _str null Literal str BasicType ArrayInitializer 0.0 MemberReference MethodInvocation = ERange e Assignment BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement StatementExpression CatchClause str ArraySelector endPlace MemberReference BlockStatement MemberReference ArraySelector endPlace end BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation Assignment Assignment BinaryOperation BlockStatement Assignment Assignment Assignment StatementExpression CatchClause MemberReference BlockStatement 0.0 int MemberReference d MemberReference MemberReference MemberReference TernaryExpression = int w BinaryOperation String ellipsis Literal > MemberReference Literal StatementExpression StatementExpression StatementExpression MethodInvocation CatchClauseParameter Literal StatementExpression d Literal byte buf ArrayCreator int n Literal System MemberReference MemberReference MemberReference Literal BinaryOperation arraycopy MemberReference BinaryOperation = MemberReference MemberReference = < MemberReference MemberReference IfStatement StatementExpression MemberReference MemberReference = MemberReference Literal = MemberReference MemberReference = Assignment CatchClauseParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement TryStatement IfStatement WhileStatement IfStatement str str endPlace d BinaryOperation MemberReference MemberReference - MemberReference MemberReference "" w 20 Assignment Assignment Assignment runtime MethodInvocation getWarnings java.io.UnsupportedEncodingException ex 0 MethodInvocation 0 BasicType BinaryOperation 0 data str buf 0 - MemberReference MemberReference n - MemberReference MemberReference str ArraySelector endPlace str end BinaryOperation BlockStatement Assignment data buf str 0 end buf length MemberReference MethodInvocation = ERange e Assignment BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement StatementExpression CatchClause BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement == MethodInvocation MemberReference Double MAX_VALUE Double MIN_VALUE ArraySelector endPlace str MemberReference Literal = MemberReference Literal = MemberReference Literal = BinaryOperation warn Literal invalidString byte - MemberReference MemberReference ArraySelector endPlace str ArraySelector endPlace str Literal == MemberReference Literal IfStatement MemberReference MemberReference = d MemberReference MemberReference MemberReference TernaryExpression = int w BinaryOperation String ellipsis Literal > MemberReference Literal StatementExpression StatementExpression StatementExpression MethodInvocation CatchClauseParameter == MemberReference MemberReference StatementExpression && BinaryOperation MethodInvocation StatementExpression < MemberReference MemberReference StatementExpression e getKind ERange.Kind Overflow Literal w 20 ellipsis ellipsis "" + BinaryOperation Literal "Float()" end str Literal Literal 0 ArraySelector data '_' MemberReference BlockStatement BlockStatement ArraySelector buf ArraySelector data str endPlace d BinaryOperation MemberReference MemberReference - MemberReference MemberReference "" w 20 Assignment Assignment Assignment runtime MethodInvocation getWarnings java.io.UnsupportedEncodingException ex str ArraySelector endPlace MethodInvocation < MemberReference MemberReference MemberReference isSpace MemberReference ArraySelector endPlace end MethodInvocation 0 + BinaryOperation MemberReference " out of range" 0 0 MemberReference IfStatement StatementExpression IfStatement StatementExpression WhileStatement ContinueStatement MemberReference MemberReference == MethodInvocation MemberReference Double MAX_VALUE Double MIN_VALUE ArraySelector endPlace str MemberReference Literal = MemberReference Literal = MemberReference Literal = BinaryOperation warn Literal Literal invalidString ArraySelector endPlace end ArraySelector endPlace ++ ArraySelector endPlace Literal Literal invalidString + Literal ClassCreator ellipsis str BinaryOperation BlockStatement MemberReference MethodInvocation BlockStatement MemberReference BinaryOperation BlockStatement ++ n ++ str e getKind ERange.Kind Overflow Literal w 20 ellipsis ellipsis "" + BinaryOperation Literal 0 "Float()" Literal Literal Literal 0 "Float()" " ReferenceType MemberReference MemberReference MemberReference Literal || BinaryOperation MethodInvocation StatementExpression ++ str ! MemberReference MemberReference isDigit StatementExpression ++ str && BinaryOperation BinaryOperation StatementExpression 0 + BinaryOperation MemberReference " out of range" 0 0 0 String data str w "ISO-8859-1" == MemberReference Literal ! MemberReference BinaryOperation isDigit MethodInvocation data str MethodInvocation < MemberReference MemberReference == MemberReference Literal MemberReference + Literal ClassCreator ellipsis n 0 buf - MemberReference Literal Literal invalidString Literal invalidString str end ArraySelector data '_' ++ str " ReferenceType MemberReference MemberReference MemberReference Literal n 1 "Float()" "Float()" MemberReference String data str w "ISO-8859-1" str	1
MethodDeclaration Modifier execute FormalParameter FormalParameter ForStatement public BasicType count ReferenceType r ForControl BlockStatement int Runnable VariableDeclaration BinaryOperation MemberReference StatementExpression BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation int i Literal i count r run 0	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter TryStatement private IRubyObject ReferenceType context ReferenceType array StatementExpression ReturnStatement StatementExpression ThreadContext RubyArray MethodInvocation MethodInvocation MethodInvocation MethodInvocation getRuntime MemberReference MethodInvocation MethodInvocation getRuntime MemberReference registerInspecting context array toJavaArray MemberReference unregisterInspecting array array	0
MethodDeclaration Modifier call FormalParameter IfStatement public ReferenceType context BinaryOperation BlockStatement BlockStatement BodyCompiler != MethodInvocation Literal StatementExpression StatementExpression getBodyNode null MethodInvocation MethodInvocation MethodInvocation MemberReference Literal compile context loadNil getBodyNode context true	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression final public BasicType offset BasicType value MethodInvocation long long BinaryOperation MemberReference + MemberReference MemberReference value address offset	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter TryStatement static public long ReferenceType runtime ReferenceType ReferenceType output LocalVariableDeclaration ReturnStatement CatchClause Ruby IRubyObject OutputStream ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ThrowStatement aProcess ClassCreator MemberReference IOException e MethodInvocation ReferenceType MethodInvocation MemberReference aProcess runtime MemberReference newIOErrorFromException MemberReference MemberReference runtime e runtime	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name ElementArrayValue ThreadContext sock MethodInvocation == Literal MemberReference ThrowStatement context MethodInvocation getRuntime Literal Literal null sock MethodInvocation MethodInvocation newString context MethodInvocation getRuntime sock toString Literal newIOError "Not	0
MethodDeclaration Modifier ReferenceType newErrnoENOENTError ReturnStatement public RaiseException MethodInvocation MethodInvocation Literal newRaiseException MethodInvocation "File not found" Literal fastGetClass	0
MethodDeclaration Modifier FormalParameter StatementExpression public BasicType Assignment boolean This MemberReference = MemberReference	0
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType cache ReferenceType MethodInvocation Ruby StructLayout ReferenceType IRubyObject Factory MethodInvocation getInstance MemberReference Cast MemberReference runtime ReferenceType MemberReference cbInfo Pointer	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter IfStatement ThrowStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement MethodInvocation name Literal ThreadContext IRubyObject && BinaryOperation MethodInvocation ReturnStatement context MethodInvocation getRuntime instanceof MemberReference ReferenceType MethodInvocation MemberReference MemberReference f_real_p MethodInvocation BinaryOperation newTypeError other RubyNumeric isTrue context other context MethodInvocation getRuntime + BinaryOperation MethodInvocation MethodInvocation This newArray + MethodInvocation Literal MethodInvocation getMetaClass MemberReference MethodInvocation MemberReference newComplexBang other MethodInvocation getMetaClass " can't be into " getName context getMetaClass other getName	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement static public DynamicMethod ReferenceType context ReferenceType selfClass ReferenceType visibility ReferenceType name ReferenceType callType ReferenceType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement ClassCreator ThreadContext RubyClass Visibility String CallType Ruby runtime MethodInvocation name Literal equals ReturnStatement DynamicMethod MethodInvocation || MethodInvocation BinaryOperation ReturnStatement ReferenceType MemberReference context getRuntime "method_missing" MethodInvocation selfClass Literal searchMethod isUndefined == MemberReference MethodInvocation MethodInvocation MemberReference MemberReference MemberReference "method_missing" runtime MemberReference MemberReference MemberReference runtime visibility callType runtime visibility callType	1
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression static public BasicType n BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation int long start MethodInvocation int result MethodInvocation System.out BinaryOperation println System currentTimeMillis MemberReference + BinaryOperation MemberReference n + BinaryOperation Literal result + BinaryOperation MemberReference ") = " + BinaryOperation Literal n + Literal BinaryOperation "ms for " - MethodInvocation MemberReference System currentTimeMillis start	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType block MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject Block body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context arg0 arg1 arg2 arg3 type block	0
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType runtime ReferenceType object BinaryOperation ReturnStatement MethodInvocation Ruby Object == MemberReference Literal MethodInvocation RubyFloat MemberReference Cast newFloat object null runtime getNil runtime ReferenceType MemberReference Double object	1
MethodDeclaration Modifier ReferenceType to_sym LocalVariableDeclaration IfStatement ReturnStatement private RubySymbol ReferenceType VariableDeclarator BinaryOperation StatementExpression MemberReference RubySymbol symbol MethodInvocation == MethodInvocation MemberReference Assignment symbol MethodInvocation MethodInvocation getRuntime symbol getBytes value MemberReference MemberReference = MemberReference value	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration ForStatement StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Assignment Assignment MethodInvocation MethodInvocation MethodInvocation ReferenceType VariableDeclarator EnhancedForControl BlockStatement MethodInvocation MemberReference Ruby RubyClass MethodInvocation runtime MemberReference MemberReference MemberReference = MemberReference ClassCreator = ClassReference defineAnnotatedMethods MethodInvocation MethodInvocation String ArrayInitializer VariableDeclaration MemberReference StatementExpression Literal MethodInvocation defineConstant runtime Literal MethodInvocation MemberReference defineClass index ClassIndex ReferenceType MethodDeclaration ReferenceType Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal ReferenceType VariableDeclarator MethodInvocation "I" RubyComplex MethodInvocation MethodInvocation MethodInvocation runtime RubyModule ReferenceType Modifier Annotation BasicType FormalParameter FormalParameter ReturnStatement RubyComplex "<" "<=" "<=>" ">" ">=" "floor" "modulo" "truncate" String MemberReference runtime getCurrentContext RubyFixnum MemberReference zero RubyFixnum MemberReference one public Override boolean ReferenceType obj ReferenceType type BinaryOperation runtime runtime IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyComplex	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name Literal ThreadContext IRubyObject MemberReference Literal MemberReference callMethod context "/" other	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType name ReferenceType object ReferenceType value MethodInvocation Ruby String IRubyObject IRubyObject runtimeCache MemberReference Literal MemberReference MemberReference MemberReference setVariable runtime 2 name object value	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ThrowStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType name ReferenceType block MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal required Literal frame Literal visibility MemberReference ThreadContext IRubyObject Block ensureInstanceVariablesSettable IRubyObject value != Assignment Literal ReturnStatement context MethodInvocation getRuntime 1 true Visibility PRIVATE MemberReference Cast = null MemberReference BinaryOperation MethodInvocation newNameError value ReferenceType MethodInvocation value + BinaryOperation Literal name asJavaString IRubyObject MethodInvocation + Literal MethodInvocation " not MethodInvocation validateInstanceVariable variable " name asJavaString name asJavaString	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference ListNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier LocalVariableDeclaration ForStatement ForStatement TryStatement ForStatement public ReferenceType VariableDeclarator ForControl StatementExpression ForControl StatementExpression ForStatement CatchClause ForControl BlockStatement Runner runners ArrayCreator VariableDeclaration BinaryOperation MemberReference Assignment VariableDeclaration BinaryOperation MemberReference MemberReference ForControl StatementExpression CatchClauseParameter VariableDeclaration BinaryOperation MemberReference IfStatement ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i MemberReference ClassCreator = BasicType VariableDeclarator < MemberReference MemberReference ++ i ArraySelector MethodInvocation runners VariableDeclaration BinaryOperation MemberReference MemberReference InterruptedException ie BasicType VariableDeclarator < MemberReference MemberReference ++ i MemberReference BlockStatement Runner RUNNER_COUNT int i Literal i RUNNER_COUNT ArraySelector runners ReferenceType BinaryOperation MemberReference int i Literal i RUNNER_COUNT MemberReference start BasicType VariableDeclarator < MemberReference MemberReference ++ i ArraySelector MethodInvocation runners int i Literal i RUNNER_COUNT ArraySelector MethodInvocation runners IfStatement 0 MemberReference Runner + Literal MemberReference 0 i int i Literal i RUNNER_COUNT MemberReference join 0 MemberReference BinaryOperation BlockStatement i "R" i 0 i i != MemberReference Literal ThrowStatement ArraySelector MethodInvocation runners null MemberReference MemberReference ArraySelector MethodInvocation runners i MemberReference i	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression public BasicType arg0 ReferenceType arg1 MethodInvocation int String MethodInvocation getMethodVisitor MemberReference MemberReference arg0 arg1	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter ReturnStatement static public double ReferenceType runtime ReferenceType str BasicType ClassCreator Ruby ByteList boolean MethodInvocation ReferenceType MemberReference MemberReference Literal MemberReference Convert2 runtime str - 1	0
MethodDeclaration Modifier BasicType invokeEqqForCaseWhen FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public boolean ReferenceType ReferenceType context ReferenceType caller ReferenceType arg ReferenceType ReferenceType ReferenceType ReferenceType VariableDeclarator MethodInvocation ReturnStatement MethodInvocation CallSite ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject result MethodInvocation result isTrue Literal MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference invokeEqqForCaseWhen MemberReference MemberReference MemberReference MemberReference call true context caller arg context caller arg	1
MethodDeclaration Modifier branch FormalParameter StatementExpression StatementExpression public ReferenceType context MethodInvocation MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile context ClassCreator ClassCreator performBooleanBranch flipNode context true ReferenceType MethodDeclaration ReferenceType MethodDeclaration BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation MethodInvocation MethodInvocation MethodInvocation public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile MemberReference context MethodInvocation getVariableCompiler context BodyCompiler context flipNode context true context MethodInvocation MethodInvocation Literal assignLocalVariable flipNode getIndex flipNode false	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public boolean ReferenceType otherValue ReferenceType context ReferenceType runtime ReferenceType self ReferenceType BinaryOperation IRubyObject ThreadContext Ruby IRubyObject Block == MemberReference MethodInvocation otherValue MemberReference MemberReference MemberReference MemberReference runtime context self	0
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement public ReferenceType errorStream ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement PrintStream IRubyObject backtrace MethodInvocation boolean debug MethodInvocation && MethodInvocation BinaryOperation LocalVariableDeclaration ForStatement MethodInvocation Literal callMethod MethodInvocation MethodInvocation getRuntime ! backtrace isNil instanceof MemberReference ReferenceType ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation getRuntime getDebug isTrue backtrace RubyArray IRubyObject elements MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement IfStatement getCurrentContext backtrace MethodInvocation convertToArray BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement toJavaArray int i Literal i elements length IRubyObject MemberReference instanceof MemberReference ReferenceType StatementExpression && BinaryOperation BinaryOperation LocalVariableDeclaration StatementExpression StatementExpression 1 ArraySelector elements RubyString MethodInvocation && BinaryOperation BinaryOperation > MemberReference MemberReference BasicType VariableDeclarator MethodInvocation Assignment MemberReference MemberReference MemberReference && MemberReference BinaryOperation == MemberReference MemberReference elements length RubyException int BinaryOperation errorStream BinaryOperation print MemberReference BinaryOperation = i errorStream ! debug != MemberReference MemberReference i RubyException - BinaryOperation MemberReference + BinaryOperation Literal i - MemberReference MemberReference - MemberReference MemberReference RubyException + Literal MemberReference " elements length RubyException elements length RubyException "	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression static public ReferenceType runtime ReferenceType context ReferenceType event ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Ruby ThreadContext RubyEvent String name MethodInvocation RubyModule type MethodInvocation runtime MemberReference MemberReference MethodInvocation MethodInvocation MemberReference MemberReference callEventHooks context context context event context getFile context getLine name type	0
MethodDeclaration Modifier Annotation ReferenceType resume FormalParameter FormalParameter InterruptedException SynchronizedStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args MemberReference IfStatement IfStatement MemberReference rest Literal compat MemberReference ThreadContext IRubyObject yieldLock BinaryOperation BlockStatement IfStatement MemberReference BlockStatement BlockStatement result true CompatVersion RUBY1_9 == MemberReference Literal StatementExpression BinaryOperation BlockStatement BlockStatement ! StatementExpression StatementExpression StatementExpression StatementExpression args length 0 Assignment == MemberReference Literal StatementExpression StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference MethodInvocation = args length 1 Assignment Assignment MemberReference execute yieldLock wait yieldLock yieldLock wait result context MethodInvocation getRuntime MemberReference MemberReference = MemberReference MethodInvocation = getNil result ArraySelector args result context MethodInvocation getRuntime Literal MemberReference 0 args	1
MethodDeclaration Modifier ReferenceType each_pair FormalParameter FormalParameter LocalVariableDeclaration AssertStatement ForStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType block ReferenceType VariableDeclarator MethodInvocation Literal ForControl BlockStatement This ThreadContext Block RubyArray member Cast ! member isNil "uninitialized VariableDeclaration BinaryOperation MemberReference StatementExpression ReferenceType MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation RubyArray MethodInvocation Literal getInternalVariable int i Literal i values length block MemberReference MethodInvocation yield 0 context MethodInvocation getRuntime ArrayCreator ReferenceType ArrayInitializer IRubyObject MethodInvocation MemberReference member MemberReference eltInternal ArraySelector values i MemberReference i	1
MethodDeclaration Modifier ReferenceType ReturnStatement protected String MethodInvocation MethodInvocation getType toString	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter ReturnStatement static public double BasicType f BasicType e BinaryOperation double long * MemberReference MethodInvocation f Math Literal MemberReference pow 2.0 e	0
MethodDeclaration Modifier ReferenceType getRuntime ReturnStatement public Ruby MemberReference runtime	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair IRubyObject TernaryExpression name Literal MethodInvocation MethodInvocation MethodInvocation hasSuperImplementation MethodInvocation getRuntime MethodInvocation getRuntime getTrue getFalse	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator Modifier ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation MemberReference name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation == MemberReference Literal StatementExpression ReturnStatement Encoding enc MemberReference int s MemberReference int end BinaryOperation byte bytes MemberReference final IRubyObject result MemberReference singleByteOptimizable StatementExpression StatementExpression keepCodeRange result CompatVersion RUBY1_9 context getRuntime value realSize 0 MethodInvocation MethodInvocation value encoding value begin + MemberReference MemberReference value bytes enc Assignment Assignment modifyCheck runtime getNil s value realSize MemberReference MethodInvocation = MemberReference MethodInvocation = result MemberReference MemberReference MemberReference MemberReference MemberReference result MemberReference MemberReference MemberReference MemberReference MemberReference runtime enc bytes s end runtime enc bytes s end	1
MethodDeclaration Modifier ReferenceType each_codepointCommon FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType block ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement This ThreadContext Block Ruby runtime MethodInvocation byte bytes MemberReference int p MemberReference int end BinaryOperation Encoding enc MemberReference < MemberReference MemberReference LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression context getRuntime value bytes value begin + MemberReference MemberReference value encoding p end BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation Assignment p value realSize int c MethodInvocation int n MethodInvocation block MemberReference MethodInvocation yield MemberReference MemberReference += MemberReference MemberReference MemberReference MemberReference MemberReference codePoint MemberReference MemberReference MemberReference codeLength context runtime MemberReference newFixnum p n runtime enc bytes p end runtime enc c c	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression ReturnStatement public Operand Modifier ReferenceType orNode ReferenceType s ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation MethodInvocation MethodInvocation MemberReference final OpAsgnOrNode IR_Scope Label l1 MethodInvocation Variable f MethodInvocation Operand v1 MethodInvocation ThrowStatement StatementExpression StatementExpression StatementExpression MethodInvocation MemberReference build s ClassCreator addInstr s ClassCreator addInstr v1 s s getNewVariable orNode getFirstNode ClassCreator Assignment MethodInvocation MethodInvocation orNode s ReferenceType MemberReference ReferenceType ReferenceType BinaryOperation MemberReference MethodInvocation = s ClassCreator addInstr s ClassCreator addInstr LABEL_Instr l1 NotCompilableException + MemberReference Literal v1 MethodInvocation MemberReference build ReferenceType MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference orNode not since the first node of the OR requires to be implemented" orNode getFirstNode s f v1 f BooleanLiteral TRUE l1	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyBoolean BinaryOperation BlockStatement MethodInvocation name ElementArrayValue compat MemberReference != BinaryOperation Literal ReturnStatement MethodInvocation getRuntime Literal CompatVersion RUBY1_9 % MemberReference Literal 0 MethodInvocation getFalse value 2 MethodInvocation getRuntime getTrue	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement final public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block arity MethodInvocation MemberReference checkArity MemberReference MemberReference MemberReference invoke context getRuntime args context ArraySelector args ArraySelector args Literal Literal 0 1	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter IfStatement private final IRubyObject ReferenceType context ReferenceType arg0 ReferenceType block Modifier BasicType bang MethodInvocation BlockStatement BlockStatement ThreadContext IRubyObject Block final boolean block isGiven ReturnStatement ThrowStatement MethodInvocation MethodInvocation MemberReference MemberReference MethodInvocation MemberReference Literal Literal gsubCommon context MethodInvocation getRuntime context bang MemberReference getQuotedPattern block null 0 Literal newArgumentError arg0 "wrong number of arguments for 2)"	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ThrowStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType MethodInvocation ClassCreator Ruby ThreadContext IRubyObject Block context pollThreadEvents ReferenceType MethodInvocation JumpException ReferenceType MemberReference MemberReference MemberReference MemberReference NextJump runtime context self	0
MethodDeclaration ReferenceType LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement StatementExpression StatementExpression ReturnStatement Entry ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement Assignment Assignment Assignment Entry e MemberReference == MemberReference Literal ThrowStatement Entry n MemberReference Entry t MemberReference int i MemberReference && BinaryOperation BinaryOperation StatementExpression MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = next e null ClassCreator e next table index == MemberReference Literal > MemberReference Literal Assignment index i next n current e ReferenceType n null i 0 MemberReference MemberReference = NoSuchElementException n ArraySelector t MemberReference -- i	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter Exception StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType args Assignment BasicType VariableDeclarator ReferenceType VariableDeclarator MemberReference StatementExpression MemberReference StatementExpression ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal optional Literal module Literal visibility MemberReference IRubyObject IRubyObject MemberReference MethodInvocation = long crc Literal ByteList bytes Literal ! ArraySelector MethodInvocation args Assignment ! ArraySelector MethodInvocation args Assignment ext ClassCreator != MemberReference Literal StatementExpression recv MethodInvocation getRuntime 2 true Visibility PRIVATE args Arity MethodInvocation MemberReference Literal Literal scanArgs 0 null Literal isNil MemberReference MemberReference = Literal isNil MemberReference MethodInvocation = ReferenceType Cast bytes null MethodInvocation MethodInvocation newFixnum recv getRuntime args 0 2 0 bytes ArraySelector MethodInvocation MethodInvocation args 1 crc RubyNumeric MemberReference num2long BasicType MemberReference ext MethodInvocation MethodInvocation MethodInvocation update ext getValue Literal convertToString getByteList ArraySelector args int crc bytes unsafeBytes bytes begin bytes length 0 Literal 1	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Cast Assignment MemberReference Object Object int ReferenceType MemberReference MemberReference Cast = yyVal ListNode ArraySelector yyVals yyVal ReferenceType MemberReference BinaryOperation ListNode ArraySelector yyVals + Literal MemberReference BinaryOperation - 2 yyTop + Literal MemberReference - 2 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyHash ReferenceType runtime ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject RubyHash hash MethodInvocation hash MemberReference MemberReference MemberReference hash MemberReference MemberReference MemberReference hash MemberReference MemberReference MemberReference hash RubyHash MemberReference runtime runtime runtime runtime	0
MethodDeclaration Modifier BasicType isRubyVariable LocalVariableDeclaration ReturnStatement public boolean BasicType VariableDeclarator BinaryOperation char c && BinaryOperation BinaryOperation > MethodInvocation Literal || BinaryOperation BinaryOperation name length 0 == Assignment Literal && BinaryOperation BinaryOperation MemberReference MethodInvocation = '@' <= MemberReference Literal >= MemberReference Literal c name Literal charAt c 'Z' c 'A' 0	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType extend FormalParameter LocalVariableDeclaration ForStatement LocalVariableDeclaration ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType args ReferenceType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator ForControl BlockStatement This name Literal required Literal rest Literal IRubyObject Ruby runtime MethodInvocation VariableDeclaration BinaryOperation MemberReference IfStatement ThreadContext context MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression 1 true getRuntime BasicType VariableDeclarator < MemberReference MemberReference ++ i MemberReference ThrowStatement runtime getCurrentContext BasicType VariableDeclarator >= MemberReference Literal -- i MemberReference MemberReference int i Literal i args length ! ArraySelector MethodInvocation args MethodInvocation int i BinaryOperation i 0 ArraySelector MethodInvocation args ArraySelector MethodInvocation args 0 MemberReference isModule runtime MemberReference MethodInvocation newTypeError - MemberReference Literal MemberReference MemberReference Literal This callMethod MemberReference MemberReference Literal This callMethod i ArraySelector args runtime getModule args length 1 i context "extend_object" i context MemberReference i	1
MethodDeclaration Modifier setValue FormalParameter StatementExpression public ReferenceType value Assignment Object This MemberReference = MemberReference value value	0
MethodDeclaration Modifier ReferenceType med3 FormalParameter FormalParameter FormalParameter FormalParameter IfStatement private static Object ReferenceType lo ReferenceType mid ReferenceType hi ReferenceType c BinaryOperation BlockStatement BlockStatement Object Object Object Comparator < MethodInvocation Literal IfStatement IfStatement c MemberReference MemberReference compare 0 BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement BlockStatement mid lo < MethodInvocation Literal ReturnStatement IfStatement < MethodInvocation Literal IfStatement ReturnStatement c MemberReference MemberReference compare 0 MemberReference BinaryOperation BlockStatement BlockStatement c MemberReference MemberReference compare 0 BinaryOperation BlockStatement BlockStatement MemberReference hi mid mid < MethodInvocation Literal ReturnStatement ReturnStatement hi mid < MethodInvocation Literal ReturnStatement ReturnStatement mid c MemberReference MemberReference compare 0 MemberReference MemberReference c MemberReference MemberReference compare 0 MemberReference MemberReference hi lo hi lo hi lo lo hi	1
MethodDeclaration FormalParameter StatementExpression ReferenceType Assignment RubyModule This MemberReference = MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public Deprecated RubyArray ReferenceType runtime ReferenceType value ReferenceType VariableDeclarator MethodInvocation BlockStatement Cast Ruby IRubyObject IRubyObject tmp MethodInvocation tmp isNil IfStatement ReferenceType MemberReference value checkArrayType BinaryOperation BlockStatement BlockStatement RubyArray tmp != MethodInvocation MethodInvocation StatementExpression IfStatement ReturnStatement ReturnStatement value MethodInvocation MethodInvocation getMetaClass runtime Assignment BinaryOperation ThrowStatement Cast MethodInvocation Literal searchMethod getImplementationClass MemberReference MethodInvocation = instanceof MemberReference ReferenceType MethodInvocation ReferenceType MemberReference runtime MemberReference newArray "to_a" value value MethodInvocation Literal callMethod value RubyArray runtime Literal newTypeError RubyArray value value runtime getCurrentContext "to_a" did not return	1
MethodDeclaration Modifier ReferenceType getKCode ReturnStatement public KCode MemberReference kcode	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType size MethodInvocation name Literal meta Literal ThreadContext IRubyObject IRubyObject RubyString MethodInvocation Cast true context getRuntime BasicType MethodInvocation int size MethodInvocation convertToInteger getLongValue	0
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression ForStatement StatementExpression StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement public ReferenceType methodName MethodInvocation ForControl BlockStatement Assignment MethodInvocation ReferenceType VariableDeclarator MethodInvocation MemberReference String method MemberReference aload VariableDeclaration BinaryOperation MemberReference StatementExpression MemberReference BinaryOperation = method MethodInvocation MemberReference MethodInvocation invokestatic methodCompiler ClassCreator methodCompiler methodCompiler BasicType VariableDeclarator <= MemberReference MethodInvocation ++ i MethodInvocation methodName + BinaryOperation MethodInvocation script getClassname methodName ReferenceType MemberReference MemberReference MemberReference MemberReference This int i Literal i method MemberReference aload + MemberReference Literal script script methodName inspector scope 1 i methodName "_"	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation ThreadContext IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement MemberReference Literal MemberReference coerceBin context getRuntime other RubyBignum Cast instanceof MemberReference ReferenceType ReturnStatement context "*" other ReferenceType MemberReference other RubyFloat MethodInvocation RubyBignum other runtime BinaryOperation newFloat * Cast Cast BasicType MemberReference ReferenceType MemberReference double value RubyFloat other	0
MethodDeclaration Modifier post FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression protected ReferenceType context ReferenceType ReferenceType ReferenceType MethodInvocation MethodInvocation ThreadContext Visibility MethodInvocation getFrame context MemberReference MemberReference MemberReference setVisibility	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType args ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject Ruby runtime MethodInvocation && BinaryOperation MemberReference LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement runtime getNil context getRuntime < MemberReference MethodInvocation ! eof BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator MemberReference BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation Assignment MemberReference MethodInvocation pos internal MemberReference getByteList boolean isParagraph Literal ByteList sep > MemberReference Literal IfStatement StatementExpression IfStatement StatementExpression ByteList ss MethodInvocation isParagraph StatementExpression IfStatement int ix MethodInvocation ByteList add == Literal MemberReference StatementExpression StatementExpression StatementExpression ByteList line ClassCreator line MethodInvocation Cast BinaryOperation append line MemberReference append MemberReference BinaryOperation = ++ RubyString MemberReference MemberReference newString realSize false args length 0 MemberReference BlockStatement Assignment BinaryOperation BlockStatement Assignment internal getByteList MethodInvocation BinaryOperation BlockStatement ss MemberReference Cast indexOf - 1 ix Assignment Assignment Assignment ReferenceType BinaryOperation internal getByteList BasicType MemberReference - MemberReference Cast add pos + MemberReference MemberReference runtime line ArraySelector MethodInvocation args LocalVariableDeclaration StatementExpression ReturnStatement MemberReference MemberReference = == MemberReference Literal StatementExpression StatementExpression MemberReference Cast = MemberReference == MemberReference MemberReference ReturnStatement sep BasicType MemberReference MemberReference MethodInvocation = MemberReference MemberReference = MemberReference TernaryExpression = ByteList + BinaryOperation MethodInvocation int pos ix BasicType MemberReference ix add realSize Literal isNil ReferenceType VariableDeclarator Assignment MethodInvocation sep ArraySelector MethodInvocation MethodInvocation args sep realSize 0 Assignment Assignment sep ReferenceType MethodInvocation ss pos ss realSize MethodInvocation int pos ix internal MemberReference getByteList add ByteList add MemberReference MemberReference MemberReference - MemberReference Cast add length int pos 0 ByteList buf MethodInvocation MemberReference MemberReference += RubyString MemberReference MemberReference newString Literal convertToString getByteList MemberReference Literal = MemberReference MemberReference = RubyString runtime MethodInvocation getGlobalVariables runtime getNil realSize isParagraph NEWLINE sep ix BasicType MemberReference internal MethodInvocation getByteList pos buf realSize runtime buf 0 isParagraph true sep Stream Literal get int pos Cast BinaryOperation makeShared "$/" BasicType MemberReference - MethodInvocation Cast int pos internal MemberReference getByteList BasicType MemberReference realSize int pos	1
MethodDeclaration Modifier FormalParameter StatementExpression IfStatement public ReferenceType backtraceFrames Assignment BinaryOperation BlockStatement ThreadContext ReferenceType This MemberReference = || BinaryOperation BinaryOperation StatementExpression RubyStackTraceElement MemberReference backtraceFrames || BinaryOperation BinaryOperation == MemberReference MemberReference Assignment backtraceFrames || BinaryOperation BinaryOperation == MemberReference MemberReference MemberReference MethodInvocation = == MemberReference MemberReference == MemberReference MemberReference javaStackTrace Thread MethodInvocation currentThread	0
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context BasicType value MethodInvocation ThreadContext long context MethodInvocation getRuntime BinaryOperation newBoolean != MemberReference Literal value 0	1
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType Assignment This MemberReference = MemberReference scope	0
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier ReferenceType getOutput ReturnStatement public PrintStream MemberReference output	0
MethodDeclaration Modifier Annotation ReferenceType assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement StatementExpression ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType value ReferenceType block BasicType checkArity BinaryOperation BlockStatement MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block boolean && MethodInvocation MethodInvocation StatementExpression ASTInterpreter MethodInvocation MemberReference MemberReference getClassVariableBase runtime getNil runtime isVerbose context MethodInvocation MethodInvocation MemberReference MemberReference context runtime isSingleton runtime MethodInvocation getWarnings name value MemberReference MethodInvocation Literal warn ID getPosition singleton class	0
MethodDeclaration Modifier setValue FormalParameter StatementExpression public ReferenceType value MethodInvocation CharSequence MethodInvocation view ByteList MemberReference plain value	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean Literal true	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement private RaiseException ReferenceType exception ReferenceType target ReferenceType VariableDeclarator MemberReference Throwable Member RaiseException re MethodInvocation re RaiseException MemberReference MemberReference MemberReference createNativeRaiseException runtime exception target	1
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType other ReferenceType method BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject String instanceof MemberReference ReferenceType ReturnStatement MemberReference MemberReference MemberReference coerceBin other RubyFixnum MethodInvocation context method other MemberReference MemberReference Cast context value ReferenceType MemberReference RubyFixnum other	0
MethodDeclaration Modifier Annotation ReferenceType default_value_get FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg BinaryOperation BlockStatement MemberReference name Literal frame Literal ThreadContext IRubyObject != BinaryOperation Literal ReturnStatement ifNone true & MemberReference MemberReference 0 MethodInvocation flags PROCDEFAULT_HASH_F RuntimeHelpers MemberReference MemberReference Literal This MemberReference invoke context ifNone "call" arg	1
MethodDeclaration Modifier BasicType run IfStatement IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration TryStatement IfStatement ReturnStatement public int MethodInvocation BlockStatement MethodInvocation BlockStatement MethodInvocation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator StatementExpression CatchClause BinaryOperation BlockStatement IfStatement Literal config StatementExpression config StatementExpression ! config IfStatement IfStatement ReturnStatement InputStream in MethodInvocation String filename MethodInvocation String args MethodInvocation > MemberReference Literal StatementExpression Ruby runtime MethodInvocation MethodInvocation CatchClauseParameter IfStatement == MemberReference Literal MethodInvocation BlockStatement BlockStatement 0 MethodInvocation MethodInvocation MethodInvocation BlockStatement MethodInvocation BlockStatement Literal config config MemberReference args length 0 MethodInvocation Ruby MemberReference newInstance Thread MethodInvocation currentThread SecurityException se MethodInvocation BlockStatement in null config LocalVariableDeclaration TryStatement IfStatement ReturnStatement LocalVariableDeclaration TryStatement config StatementExpression config StatementExpression 0 in config MemberReference config MethodInvocation runtime MethodInvocation getInstanceConfig StatementExpression BasicType VariableDeclarator StatementExpression StatementExpression CatchClause BinaryOperation BlockStatement MemberReference BasicType VariableDeclarator IfStatement IfStatement TryStatement CatchClause MethodInvocation MethodInvocation args runtime getJRubyClassLoader isVerbose MethodInvocation int status Literal MethodInvocation MethodInvocation CatchClauseParameter StatementExpression IfStatement > MethodInvocation Literal ForStatement status long now Literal MethodInvocation BlockStatement MethodInvocation BlockStatement StatementExpression StatementExpression IfStatement IfStatement CatchClauseParameter LocalVariableDeclaration IfStatement printUsage config MethodInvocation getError 0 runtime MemberReference MemberReference config MethodInvocation getOutput RaiseException re Assignment MethodInvocation BlockStatement BlockStatement config MemberReference 0 EnhancedForControl BlockStatement - 1 config StatementExpression config StatementExpression MethodInvocation MethodInvocation MethodInvocation BlockStatement MethodInvocation BlockStatement RaiseException rj ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement Literal println in filename BinaryOperation println MemberReference Literal = re MethodInvocation MethodInvocation MethodInvocation getException StatementExpression ThrowStatement length VariableDeclaration MethodInvocation LocalVariableDeclaration IfStatement Assignment MethodInvocation runtime MemberReference MemberReference runtime tearDown config StatementExpression config StatementExpression RubyException raisedException MethodInvocation runtime MethodInvocation LocalVariableDeclaration IfStatement StatementExpression ReturnStatement "WARNING: disallowed setting context classloader for main + Literal MemberReference status - 1 getMetaClass Literal equals MethodInvocation MemberReference ReferenceType VariableDeclarator config ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MemberReference MethodInvocation = in filename MethodInvocation MethodInvocation rj getException MemberReference isInstance ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Literal OK for " filename config MethodInvocation getOutput re String arg File argFile ClassCreator argFile exists TryStatement StatementExpression StatementExpression now System currentTimeMillis config MethodInvocation getOutput report raisedException IRubyObject status MethodInvocation && BinaryOperation MethodInvocation ReturnStatement runtime MemberReference 1 BinaryOperation println ReferenceType MemberReference StatementExpression StatementExpression CatchClause CatchClause Assignment MethodInvocation BinaryOperation println raisedException MethodInvocation Literal callMethod != MemberReference Literal ! status isNil MethodInvocation raisedException + Literal MethodInvocation File arg MethodInvocation MethodInvocation CatchClauseParameter StatementExpression StatementExpression CatchClauseParameter StatementExpression IfStatement MemberReference Literal = config MethodInvocation getOutput + BinaryOperation Literal runtime getCurrentContext status null RubyNumeric MemberReference fix2int in " re MethodInvocation getException runtime ClassCreator MemberReference config MethodInvocation getOutput FileNotFoundException fnfe Assignment MethodInvocation RaiseException re Assignment MethodInvocation BlockStatement BlockStatement status - 1 BinaryOperation println + Literal BinaryOperation " ms" status MethodInvocation message ReferenceType MemberReference arg BinaryOperation println MemberReference Literal = config MethodInvocation getOutput MemberReference Literal = re MethodInvocation MethodInvocation MethodInvocation getException StatementExpression ThrowStatement + Literal MemberReference " - MethodInvocation MemberReference runtime getCurrentContext FileInputStream argFile + Literal MemberReference status - 1 BinaryOperation println status - 1 getMetaClass Literal equals MethodInvocation MemberReference "File not found: " arg System currentTimeMillis now OK for " arg + Literal MemberReference config MethodInvocation getOutput re "File not found: " arg BinaryOperation println + Literal MethodInvocation in " re MethodInvocation getException MethodInvocation message runtime getCurrentContext	1
MethodDeclaration Modifier ReferenceType unwrapJavaValue FormalParameter FormalParameter FormalParameter IfStatement static public Object ReferenceType runtime ReferenceType obj ReferenceType errorMessage BinaryOperation BlockStatement IfStatement Ruby IRubyObject String instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement obj JavaMethod Cast instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement ReferenceType MemberReference obj JavaConstructor Cast instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement JavaMethod obj ReferenceType MemberReference obj JavaField Cast instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement BlockStatement JavaConstructor obj ReferenceType MemberReference obj JavaObject Cast && BinaryOperation BinaryOperation ReturnStatement ThrowStatement JavaField obj ReferenceType MemberReference != MethodInvocation Literal instanceof MethodInvocation ReferenceType MethodInvocation MethodInvocation JavaObject obj obj dataGetStruct null obj dataGetStruct IRubyObject MemberReference Cast MemberReference unwrapJavaValue runtime MemberReference newTypeError runtime ReferenceType MethodInvocation errorMessage errorMessage IRubyObject obj dataGetStruct	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private RubyArray ReferenceType context ReferenceType num BasicType last BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation ThreadContext IRubyObject boolean int n MethodInvocation > MemberReference MemberReference StatementExpression BinaryOperation BlockStatement TernaryExpression MemberReference MethodInvocation makeShared RubyNumeric MemberReference num2int n realLength Assignment < MemberReference Literal ThrowStatement MemberReference BinaryOperation Literal n getMetaClass num MemberReference MemberReference = n 0 MethodInvocation last - MemberReference MemberReference 0 n realLength context MethodInvocation getRuntime realLength n Literal newArgumentError "negative array size"	1
MethodDeclaration Modifier Annotation ReferenceType sub_bang FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg0 ReferenceType block MethodInvocation name Literal frame Literal module Literal visibility MemberReference reads MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject Block MethodInvocation MemberReference MethodInvocation getLastlineString "sub!" true true PRIVATE CompatVersion RUBY1_8 MemberReference MemberReference MemberReference sub_bang context context getRuntime context arg0 block	1
MethodDeclaration ReferenceType add FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement ReferenceType channel BasicType ops ReferenceType monitor ReferenceType VariableDeclarator MethodInvocation MethodInvocation ClassCreator Channel int Object IOChannel io ClassCreator MemberReference add selector ReferenceType MemberReference ReferenceType Cast MemberReference MemberReference io io IOChannel ReferenceType MemberReference ops monitor SelectableChannel channel	0
MethodDeclaration Modifier Annotation ReferenceType gets FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType ReferenceType VariableDeclarator MethodInvocation StatementExpression MemberReference name Literal writes MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject result MethodInvocation ! result isNil MethodInvocation result "gets" RUBY1_8 MethodInvocation MethodInvocation getline context MethodInvocation getCurrentScope context getRuntime MemberReference separator MemberReference setLastLine result	1
MethodDeclaration Modifier ReferenceType handleRedo FormalParameter RaiseException ThrowStatement protected IRubyObject ReferenceType runtime MethodInvocation Ruby runtime MemberReference MethodInvocation Literal runtime getNil "unexpected	0
MethodDeclaration Modifier Annotation ReferenceType readpartial FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType VariableDeclarator MethodInvocation ThrowStatement MemberReference name Literal required Literal optional Literal ThreadContext IRubyObject IRubyObject value MethodInvocation value isNil MethodInvocation value 1 1 MemberReference MemberReference Literal context MethodInvocation getRuntime context args false newEOFError	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation MemberReference MethodInvocation CompatVersion RUBY1_9 context getRuntime runtime MethodInvocation MethodInvocation MemberReference MemberReference toString runtime context	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair RubyBoolean MethodInvocation name Literal MethodInvocation getRuntime BinaryOperation newBoolean > MethodInvocation Literal MethodInvocation MemberReference 0 length	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration WhileStatement ReturnStatement private static int BasicType bytes BasicType start BasicType end BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference byte int int int idx MemberReference && BinaryOperation BinaryOperation StatementExpression idx start && BinaryOperation BinaryOperation != MemberReference Literal MemberReference < MemberReference MemberReference < MemberReference MemberReference ArraySelector bytes '/' ++ idx idx end idx bytes length MemberReference idx	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal ThreadContext Block MethodInvocation MethodInvocation MethodInvocation "reject!" true block isGiven MemberReference MemberReference MethodInvocation This Literal enumeratorize context block context getRuntime "reject!"	1
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType MemberReference createList Node	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public Override DynamicMethod ReferenceType module TernaryExpression RubyModule BinaryOperation MethodInvocation MethodInvocation || BinaryOperation MethodInvocation MethodFactory MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MethodInvocation getFactory == MemberReference Literal enums isNil getRuntime module function returnType parameterTypes convention MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference enums null module function returnType parameterTypes convention enums	1
MethodDeclaration Modifier ReferenceType IOException LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement private IRubyObject ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MemberReference String className MethodInvocation RubyClass MethodInvocation IRubyObject result MethodInvocation MemberReference IRubyObject MethodInvocation result MethodInvocation Literal MemberReference callMethod result MethodInvocation MemberReference findClass result MethodInvocation getRuntime asJavaString className getCurrentContext	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement private static ReferenceType context ReferenceType from ReferenceType to ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Literal BlockStatement ThreadContext IRubyObject IRubyObject Block Ruby runtime MethodInvocation IRubyObject i MemberReference RubyFixnum one MethodInvocation true IfStatement StatementExpression StatementExpression context getRuntime from RubyFixnum MemberReference one MethodInvocation BlockStatement MethodInvocation Assignment runtime i MethodInvocation MemberReference Literal MemberReference callMethod BreakStatement block MemberReference MemberReference yield MemberReference MethodInvocation = isTrue context ">" to context i i i MemberReference Literal MemberReference callMethod context "+" one	0
MethodDeclaration Modifier ReferenceType handlelIllegalArgumentEx FormalParameter FormalParameter ThrowStatement private IRubyObject ReferenceType iae ReferenceType arguments MethodInvocation IllegalArgumentException Object MethodInvocation getRuntime BinaryOperation newTypeError + BinaryOperation MethodInvocation + BinaryOperation Literal iae getMessage + BinaryOperation MethodInvocation "; error: " + BinaryOperation Literal MemberReference + BinaryOperation MethodInvocation "; " arguments + BinaryOperation Literal MethodInvocation argument_types + Literal MethodInvocation " expected " inspect "for constructor of type" constructor MethodInvocation getDeclaringClass getSimpleName	0
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement final public BasicType offset BasicType src BasicType off BasicType len MethodInvocation long double int int ex	0
MethodDeclaration Modifier BasicType ReturnStatement private boolean MethodInvocation threadImpl	0
MethodDeclaration Modifier ReferenceType specificEval FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public IRubyObject ReferenceType context ReferenceType ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType block MethodInvocation ThrowStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation ThreadContext RubyModule IRubyObject IRubyObject IRubyObject Block block isGiven MethodInvocation RubyString evalStr instanceof MemberReference ReferenceType StatementExpression StatementExpression String file MethodInvocation int line Cast MemberReference MemberReference MemberReference MemberReference MemberReference evalUnder context MethodInvocation getRuntime arg0 RubyString Assignment Assignment arg1 MethodInvocation convertToString BasicType BinaryOperation context evalStr file line Literal Literal newArgumentError MemberReference Cast = MemberReference MethodInvocation = asJavaString int - MethodInvocation Literal 2 0 evalStr ReferenceType MemberReference evalStr arg0 convertToString arg2 MethodInvocation convertToInteger 1 RubyString arg0 getLongValue	1
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter IfStatement StatementExpression final public ReferenceType context ReferenceType buffer ReferenceType parameter BinaryOperation BlockStatement MethodInvocation ThreadContext InvocationBuffer IRubyObject instanceof MemberReference ReferenceType StatementExpression IfStatement marshaller MemberReference MemberReference MemberReference marshal parameter RubySymbol Assignment MethodInvocation BlockStatement context buffer parameter MemberReference MethodInvocation = parameter isNil ThrowStatement parameter enums MemberReference fastARef MethodInvocation parameter context MethodInvocation getRuntime BinaryOperation newArgumentError + Literal MemberReference "wrong argument. Could not locate enum value for " parameter	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType one ReferenceType two ReferenceType ReferenceType ReferenceType ArrayCreator IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject ReferenceType ArrayInitializer IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference one two	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter IfStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context BinaryOperation BlockStatement BlockStatement name ElementArrayValue ThreadContext instanceof This ReferenceType ReturnStatement ReturnStatement Literal Literal RubyFixnum MethodInvocation MethodInvocation "succ" RubyFixnum MethodInvocation BinaryOperation newFixnum MemberReference Literal MethodInvocation callMethod context getRuntime + MethodInvocation Literal context "+" RubyFixnum MethodInvocation one getLongValue 1L context getRuntime	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject >= MemberReference Literal ReturnStatement box.actualMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call box callCount 0 MethodInvocation context self clazz name arg0 arg1 arg2 MethodInvocation MemberReference MemberReference tryJitReturnMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context name context self clazz name arg0 arg1 arg2	0
MethodDeclaration Modifier Annotation ReferenceType yield FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args MethodInvocation MethodInvocation This name ElementArrayValue rest Literal ThreadContext IRubyObject proc MemberReference MemberReference call Literal Literal true context args "<<"	0
MethodDeclaration Modifier run StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation Assignment MethodInvocation MethodInvocation MemberReference append Literal MemberReference append area MethodInvocation MemberReference MethodInvocation = Readline MethodInvocation MethodInvocation getHistory prompt trim " " inputStyle area MethodInvocation getDocument startPos area MethodInvocation getDocument Readline MemberReference getHolder getLength getLength runtime	1
MethodDeclaration Modifier Annotation ReferenceType op_equal FormalParameter IfStatement IfStatement LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType other BinaryOperation BlockStatement BinaryOperation BlockStatement BasicType VariableDeclarator TernaryExpression name ElementArrayValue required Literal IRubyObject instanceof MemberReference ReferenceType StatementExpression IfStatement && BinaryOperation BinaryOperation ReturnStatement boolean isEqual MethodInvocation MemberReference MethodInvocation MethodInvocation Literal Literal 1 other JavaObject Assignment BinaryOperation BlockStatement == MethodInvocation Literal == Cast Literal MethodInvocation MethodInvocation getValue isEqual MethodInvocation getRuntime MethodInvocation getRuntime "==" "eql?" MemberReference Cast = instanceof MemberReference ReferenceType ReturnStatement getValue null ReferenceType MemberReference null MethodInvocation getRuntime Cast equals getTrue getFalse other ReferenceType MethodInvocation other JavaObject MethodInvocation JavaObject other getTrue ReferenceType MemberReference JavaObject other dataGetStruct MethodInvocation getRuntime JavaObject other getFalse	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType value MethodInvocation MethodInvocation long int MemberReference Literal checkBounds BinaryOperation MemberReference offset 4 + MemberReference MemberReference value address offset	0
MethodDeclaration Modifier Annotation ReferenceType name ReturnStatement public JRubyMethod IRubyObject MethodInvocation MethodInvocation getRuntime Cast newString ReferenceType MethodInvocation Member	0
MethodDeclaration Modifier nextValue FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression public ReferenceType context ReferenceType object BasicType index ReferenceType VariableDeclarator MethodInvocation BodyCompiler Object int Cast MethodInvocation MemberReference Literal ReferenceType Cast getValue context false ReferenceType MemberReference ListNode object	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement private static String ReferenceType name MethodInvocation String name Literal Literal replace '.' '/'	0
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement IfStatement static public RubyModule ReferenceType context ReferenceType BinaryOperation BlockStatement BinaryOperation BlockStatement BlockStatement ThreadContext IRubyObject || BinaryOperation MethodInvocation StatementExpression IfStatement instanceof MemberReference ReferenceType ReturnStatement ThrowStatement == MemberReference Literal isNil Assignment BinaryOperation BlockStatement RubyModule Cast MethodInvocation null MemberReference MethodInvocation = == MemberReference Literal ThrowStatement ReferenceType MemberReference context MethodInvocation getRuntime context MethodInvocation MethodInvocation getCurrentScope null MethodInvocation RubyModule BinaryOperation newTypeError getModule context MethodInvocation getRuntime + MemberReference Literal Literal newTypeError " is not a class/module" "no outer class/module"	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block MethodInvocation name ElementArrayValue meta Literal required Literal optional Literal ThreadContext IRubyObject IRubyObject Block MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MemberReference MemberReference Literal true 3 1 context recv ArraySelector args RubyNumeric MemberReference fix2int RubyNumeric MemberReference num2int ArraySelector MethodInvocation args block Literal ArraySelector args ArraySelector args Literal isTrue 0 Literal Literal 3 1 2	0
MethodDeclaration Modifier ReferenceType ReturnStatement public OutputStream MethodInvocation Cast ReferenceType MethodInvocation descriptor getChannel	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement MemberReference Object Object int support Cast checkExpression String asgnOp Cast asgnOp Literal equals StatementExpression StatementExpression MethodInvocation BlockStatement BlockStatement yyVal ReferenceType MemberReference ReferenceType Cast "||" Cast Assignment asgnOp Literal equals StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression Node ArraySelector yyVals String ReferenceType MemberReference ReferenceType MemberReference MemberReference ClassCreator = "&&" Cast Assignment Cast Cast Assignment BinaryOperation Token ArraySelector yyVals AssignableNode ArraySelector yyVals yyVal ReferenceType MethodInvocation MethodInvocation Cast ReferenceType MemberReference MemberReference ClassCreator = ReferenceType MemberReference ReferenceType MemberReference MemberReference Cast = + Literal MemberReference BinaryOperation BinaryOperation OpAsgnOrNode Cast getPosition support Cast gettable2 ReferenceType MemberReference AssignableNode ArraySelector yyVals yyVal ReferenceType MethodInvocation MethodInvocation Cast AssignableNode ArraySelector yyVals AssignableNode ArraySelector yyVals yyVal ReferenceType MemberReference 0 yyTop + Literal MemberReference + Literal MemberReference ReferenceType MemberReference ReferenceType MemberReference AssignableNode ArraySelector yyVals BinaryOperation OpAsgnAndNode Cast getPosition support Cast gettable2 ReferenceType MemberReference BinaryOperation BinaryOperation AssignableNode ArraySelector yyVals - 1 yyTop - 2 yyTop AssignableNode ArraySelector yyVals AssignableNode ArraySelector yyVals BinaryOperation + Literal MemberReference ReferenceType MemberReference ReferenceType MemberReference AssignableNode ArraySelector yyVals + Literal MemberReference + Literal MemberReference BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference - 2 yyTop AssignableNode ArraySelector yyVals AssignableNode ArraySelector yyVals BinaryOperation - 2 yyTop - 2 yyTop + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop BinaryOperation BinaryOperation + Literal MemberReference - 2 yyTop - 2 yyTop - 2 yyTop + Literal MemberReference + Literal MemberReference - 2 yyTop - 2 yyTop - 2 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod IRubyObject ReferenceType context MethodInvocation ThreadContext context MethodInvocation getRuntime MemberReference Literal path true	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression IfStatement StatementExpression public ReferenceType method ReferenceType methodName BasicType receiverLocal MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement MemberReference String int method loadThis method method.method MemberReference aload < MemberReference MemberReference StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ++ receiverLocal AbstractScript MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation method.method MemberReference ldc method.method MethodInvocation BinaryOperation MethodInvocation invokevirtual method.method MemberReference pushInt method.method MemberReference ldc method.method MethodInvocation Literal MethodInvocation invokevirtual methodName scriptCompiler getClassname + Literal MemberReference ClassReference ClassReference ClassReference ClassReference sig methodName scriptCompiler getClassname ClassReference ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType BasicType ReferenceType DynamicMethod ThreadContext IRubyObject String DynamicMethod ThreadContext IRubyObject int String	0
MethodDeclaration Modifier ReferenceType ReturnStatement public String MemberReference	0
MethodDeclaration Modifier StatementExpression public MethodInvocation method MethodInvocation Literal MethodInvocation invokevirtual ClassReference p ClassReference MethodInvocation sig ReferenceType ReferenceType ClassReference params RubyArray RubyArray ReferenceType IRubyObject	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement public Override String ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement Literal Ruby ThreadContext IRubyObject Block RubyModule module MethodInvocation && BinaryOperation MethodInvocation ReturnStatement MethodInvocation BlockStatement IRubyObject attached TernaryExpression && BinaryOperation Cast ReturnStatement null context MethodInvocation MethodInvocation getCurrentScope == MemberReference Literal self MethodInvocation getMetaClass Literal module MemberReference fastIsClassVarDefined ReturnStatement MethodInvocation Cast Literal instanceof MemberReference ReferenceType ReferenceType MemberReference Literal getModule module null MemberReference fastIsClassVarDefined "class variable" name Literal module isSingleton ReferenceType MemberReference null attached RubyModule RubyModule attached "class variable" name "class variable" MetaClass module	1
MethodDeclaration Modifier StatementExpression StatementExpression StatementExpression public Assignment MethodInvocation MethodInvocation MemberReference Literal = runtime Literal Literal MemberReference Literal assertEquals counter 0 "The library have been loaded" counter 1	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement static public IRubyObject ReferenceType context ReferenceType x ReferenceType y BinaryOperation ReturnStatement MethodInvocation ThreadContext IRubyObject IRubyObject || MethodInvocation MethodInvocation MethodInvocation MemberReference MethodInvocation MemberReference MemberReference f_zero_p MemberReference MemberReference f_zero_p RubyFixnum MethodInvocation zero context MemberReference MethodInvocation MemberReference f_mul context x context y context getRuntime context MemberReference MemberReference MethodInvocation f_div y context x MemberReference MemberReference MemberReference f_gcd context x y	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType buffer BasicType offset BasicType value Assignment Assignment byte int int MemberReference Cast = MemberReference Cast = ArraySelector buffer BasicType BinaryOperation ArraySelector buffer BasicType BinaryOperation BinaryOperation byte >> MemberReference Literal BinaryOperation byte >> MemberReference Literal + MemberReference Literal value 0 + MemberReference Literal value 8 offset 0 offset 1	0
MethodDeclaration Modifier Annotation ReferenceType getParent ReturnStatement public Override String SuperMethodInvocation MethodInvocation getParent MemberReference Literal replace File separatorChar '/'	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation Label MethodInvocation getMethodVisitor MemberReference MemberReference arg0	1
MethodDeclaration Modifier ReferenceType ReturnStatement public Operand MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType fill FormalParameter FormalParameter FormalParameter IfStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType block MethodInvocation BlockStatement BlockStatement name Literal frame Literal ThreadContext IRubyObject Block block isGiven IfStatement LocalVariableDeclaration ReturnStatement ReturnStatement true BinaryOperation BlockStatement BasicType VariableDeclarator MethodInvocation MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement int beg MemberReference Assignment MethodInvocation MemberReference fillCommon MemberReference Literal MemberReference MemberReference fillCommon arg RubyRange BasicType VariableDeclarator MethodInvocation context MemberReference MethodInvocation = MemberReference Literal fillLen block context 0 realLength arg int beglen Cast MemberReference MemberReference MemberReference MemberReference fillCommon beg MemberReference fillBegin beg null ReferenceType MemberReference context ArraySelector beglen ArraySelector beglen block arg RubyRange arg Literal Literal 0 1	1
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression LocalVariableDeclaration ReturnStatement public Operand ReferenceType MethodInvocation ReferenceType VariableDeclarator MethodInvocation Map TypeArgument TypeArgument MemberReference Operand val MethodInvocation val MemberReference MemberReference ReferenceType ReferenceType MemberReference getValue Operand Operand	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator MethodInvocation Ruby ThreadContext IRubyObject Block RubyArray args Cast args MethodInvocation append ReferenceType MethodInvocation MemberReference MemberReference MemberReference MemberReference RubyArray MethodInvocation MemberReference MemberReference MemberReference MemberReference runtime context self dup runtime context self	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression ReturnStatement public Operand ReferenceType node ReferenceType m MethodInvocation MemberReference Node IR_Scope m ClassCreator addInstr Nil NIL ReferenceType	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation MethodInvocation name Literal required Literal module Literal visibility MemberReference IRubyObject IRubyObject double value Cast double result || MethodInvocation BinaryOperation StatementExpression BinaryOperation BlockStatement BlockStatement MemberReference MemberReference Literal RubyFloat MethodInvocation MemberReference newFloat 1 true Visibility PRIVATE ReferenceType MethodInvocation Double MemberReference isNaN < MemberReference Literal Assignment < MemberReference Literal StatementExpression StatementExpression recv result recv getRuntime result RubyFloat RubyKernel MemberReference MemberReference value value 1 MemberReference MemberReference = value Assignment Assignment recv x result Double NaN MemberReference MethodInvocation = MemberReference BinaryOperation = result Math BinaryOperation log result + Literal MethodInvocation + MemberReference MethodInvocation Math MemberReference log value Math BinaryOperation sqrt value - BinaryOperation Literal * MemberReference MemberReference 1.0 value value	0
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType runtime BinaryOperation BlockStatement MethodInvocation Ruby > MemberReference Literal LocalVariableDeclaration StatementExpression ReturnStatement RubyString MemberReference newEmptyString realSize 0 ReferenceType VariableDeclarator MethodInvocation MemberReference runtime IRubyObject res MethodInvocation MemberReference res RubyString MemberReference MemberReference MemberReference MemberReference newString runtime bytes begin realSize	0
MethodDeclaration Modifier ReferenceType isExceptionHandled FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType currentException ReferenceType exception0 ReferenceType exception1 ReferenceType context ReferenceType VariableDeclarator MethodInvocation ReturnStatement MethodInvocation RubyException IRubyObject IRubyObject ThreadContext IRubyObject result MethodInvocation result isTrue MemberReference MemberReference MemberReference MemberReference isExceptionHandled MemberReference MemberReference MemberReference isExceptionHandled result currentException exception1 context currentException exception0 context	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier StatementExpression StatementExpression public MethodInvocation MethodInvocation Literal MethodInvocation ClassReference sig ReferenceType RubyBoolean	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement private IRubyObject ReferenceType arg0 BasicType jflag ReferenceType VariableDeclarator MethodInvocation IRubyObject int Ruby runtime MethodInvocation MemberReference MemberReference MethodInvocation MemberReference justifyCommon getRuntime runtime RubyFixnum MemberReference num2int jflag arg0	0
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType ReferenceType count ReferenceType block MethodInvocation name ElementArrayValue meta Literal ThreadContext IRubyObject IRubyObject IRubyObject Block MemberReference MemberReference MemberReference MethodInvocation Literal Literal MemberReference Literal true context recv RubyNumeric MemberReference fix2int 1 true block count	0
MethodDeclaration Modifier ReferenceType put FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public Object ReferenceType key ReferenceType value ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation Object Object Object masked_key MethodInvocation int hash MethodInvocation MemberReference MemberReference MemberReference put MemberReference MemberReference hash masked_key value key masked_key	1
MethodDeclaration Modifier ReferenceType unmarshalFrom FormalParameter java.io.IOException LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public RubyClass ReferenceType input ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference String name MethodInvocation RubyClass result MethodInvocation input MemberReference result RubyString MethodInvocation MethodInvocation MemberReference getClassFromPath result input input getRuntime name	1
MethodDeclaration Modifier addAccessor FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter AssertStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement private ReferenceType context ReferenceType internedName ReferenceType visibility BasicType readable BasicType writeable BinaryOperation BinaryOperation Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement Modifier ReferenceType VariableDeclarator MemberReference BlockStatement MemberReference BlockStatement ThreadContext String Visibility boolean boolean == MemberReference MethodInvocation + MemberReference Literal final Ruby runtime MethodInvocation == MemberReference MemberReference BinaryOperation BlockStatement final String variableName BinaryOperation readable StatementExpression StatementExpression writeable StatementExpression StatementExpression StatementExpression internedName internedName intern internedName " is not interned" context getRuntime visibility PRIVATE == MemberReference MemberReference StatementExpression + Literal MemberReference MethodInvocation MethodInvocation Assignment MethodInvocation MethodInvocation visibility MODULE_FUNCTION Assignment "@" internedName MemberReference ClassCreator addMethod MemberReference Literal MethodInvocation callMethod MemberReference BinaryOperation = MemberReference ClassCreator addMethod MemberReference Literal MethodInvocation callMethod MemberReference MemberReference = internedName ReferenceType This MemberReference MemberReference FieldDeclaration MethodDeclaration MethodDeclaration context "method_added" runtime MemberReference internedName + MemberReference Literal internedName ReferenceType This MemberReference MemberReference FieldDeclaration MethodDeclaration MethodDeclaration context "method_added" runtime MemberReference visibility PRIVATE JavaMethodZero visibility CallConfiguration FrameNoneScopeNone Modifier ReferenceType VariableDeclarator Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement internedName internedName "=" JavaMethodOne visibility CallConfiguration FrameNoneScopeNone Modifier ReferenceType VariableDeclarator Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement internedName private RubyClass ReferenceType accessor MemberReference public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType VariableDeclarator TernaryExpression private RubyClass ReferenceType ReferenceType cls ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference private RubyClass ReferenceType accessor MemberReference public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg1 MethodInvocation MemberReference private RubyClass ReferenceType ReferenceType cls ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference VariableAccessor ThreadContext IRubyObject RubyModule String IRubyObject variable Cast BinaryOperation MethodInvocation MemberReference VariableAccessor RubyClass RubyClass ReferenceType localAccessor MemberReference != MethodInvocation MethodInvocation StatementExpression StatementExpression localAccessor VariableAccessor ThreadContext IRubyObject RubyModule String IRubyObject MethodInvocation MethodInvocation arg1 VariableAccessor RubyClass RubyClass ReferenceType localAccessor MemberReference != MethodInvocation MethodInvocation StatementExpression StatementExpression localAccessor ReferenceType MethodInvocation == MemberReference Literal runtime getNil variable VariableAccessor accessor localAccessor cls hashCode Assignment Assignment MemberReference MemberReference set self MethodInvocation getMetaClass VariableAccessor accessor localAccessor cls hashCode Assignment Assignment IRubyObject MethodInvocation MethodInvocation variable null MemberReference MethodInvocation = MemberReference MemberReference = self arg1 getRealClass MemberReference MethodInvocation = MemberReference MemberReference = MemberReference get self MethodInvocation getMetaClass localAccessor cls MemberReference accessor localAccessor localAccessor cls MemberReference accessor localAccessor self getRealClass variableName variableName	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement static public boolean ReferenceType id BinaryOperation String && BinaryOperation BinaryOperation > MethodInvocation Literal == MethodInvocation Literal id length 0 id Literal charAt '$' 0	0
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation assertTrue ! isTrue	1
MethodDeclaration Modifier BasicType singleByteOptimizable ReturnStatement final boolean BinaryOperation || BinaryOperation MethodInvocation == MethodInvocation MemberReference getCodeRange CR_7BIT	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType arg1 ReferenceType arg2 BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation Ruby IRubyObject IRubyObject int Cast int gid Cast runtime MethodInvocation newFixnum BasicType MethodInvocation BasicType MethodInvocation runtime MethodInvocation getPosix int arg1 MethodInvocation convertToInteger int arg2 MethodInvocation convertToInteger MemberReference MemberReference getLongValue getLongValue gid	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType Assignment This MemberReference = MemberReference	0
MethodDeclaration Modifier Annotation BasicType FormalParameter ReturnStatement static public Deprecated char ReferenceType rubyObject Cast IRubyObject ReferenceType MethodInvocation Character MemberReference ClassReference convertRubyToJava rubyObject BasicType char	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation == MemberReference Literal StatementExpression ReturnStatement modify MemberReference MemberReference MemberReference BinaryOperation CompatVersion RUBY1_8 context getRuntime value realSize 0 MethodInvocation MethodInvocation runtime value bytes value begin + MemberReference MemberReference modifyCheck runtime getNil value begin value realSize	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args MethodInvocation name Literal optional Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject MemberReference MethodInvocation MemberReference 1 true PRIVATE context context MethodInvocation MethodInvocation getRuntime args getGlobalVariables Literal get	0
MethodDeclaration Modifier ReferenceType getName ReturnStatement public String MemberReference name	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public ReferenceType context ReferenceType descriptor MethodInvocation ThreadContext String runtimeCache This MemberReference Literal MemberReference context 0 descriptor	0
MethodDeclaration Modifier ReferenceType ReturnStatement final public CallSite MemberReference runtimeCache ArraySelector Literal 4	0
MethodDeclaration Modifier BasicType isConstant ReturnStatement public boolean BinaryOperation && MethodInvocation MethodInvocation _begin isConstant isConstant	0
MethodDeclaration Modifier FormalParameter AssertStatement StatementExpression private ReferenceType runtime MethodInvocation MethodInvocation Ruby runtime runtime MethodInvocation This add	0
MethodDeclaration Modifier Annotation BasicType ReturnStatement public Override boolean Literal false	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public ReferenceType obj ReferenceType name1 ReferenceType name2 MethodInvocation IRubyObject String String MethodInvocation MemberReference MemberReference obj getMetaClass name1 name2	0
MethodDeclaration Modifier get FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression final public BasicType offset BasicType dst BasicType off BasicType len MethodInvocation long double int int BinaryOperation MemberReference MemberReference MemberReference + MemberReference MemberReference dst off len address offset	0
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter IfStatement final public ReferenceType context ReferenceType buffer ReferenceType parameter BinaryOperation BlockStatement IfStatement ThreadContext InvocationBuffer IRubyObject instanceof MemberReference ReferenceType StatementExpression LocalVariableDeclaration StatementExpression MethodInvocation BlockStatement BlockStatement parameter RubyString MethodInvocation ReferenceType VariableDeclarator MethodInvocation parameter isNil StatementExpression ThrowStatement Util MethodInvocation MemberReference ByteList bl Cast buffer MethodInvocation MethodInvocation MethodInvocation BinaryOperation MethodInvocation MethodInvocation context getRuntime parameter ReferenceType MemberReference bl unsafeBytes bl begin bl length | MemberReference MemberReference buffer Literal context MethodInvocation getRuntime RubyString parameter ArrayFlags IN ArrayFlags 0 Literal newArgumentError "Invalid string parameter"	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration ForStatement LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block ReferenceType VariableDeclarator MethodInvocation ReturnStatement BasicType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator TernaryExpression name Literal compat MemberReference ThreadContext Block Ruby runtime MethodInvocation ! block isGiven MethodInvocation int i MemberReference BinaryOperation MemberReference IfStatement IRubyObject result MethodInvocation MethodInvocation MethodInvocation MemberReference "drop_while" CompatVersion RUBY1_9 context getRuntime MemberReference This Literal enumeratorize begin < MemberReference BinaryOperation ++ i MethodInvocation BreakStatement BinaryOperation MemberReference subseq result isNil runtime newEmptyArray result runtime "drop_while" i + MemberReference MemberReference ! block MethodInvocation MemberReference MemberReference yield - MemberReference MemberReference realLength begin realLength isTrue context ArraySelector values i begin MemberReference i	1
MethodDeclaration Modifier FormalParameter StatementExpression IfStatement StatementExpression private ReferenceType child Assignment BinaryOperation BlockStatement BlockStatement Assignment Process MemberReference MethodInvocation = instanceof MemberReference ReferenceType StatementExpression StatementExpression MemberReference Literal = MethodInvocation FileInputStream Assignment Assignment inerrPumper null child getErrorStream MemberReference Cast = MemberReference Literal = ReferenceType MemberReference null FileInputStream	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType MethodInvocation Ruby ThreadContext IRubyObject Block callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation call context self self arg1 MemberReference MemberReference MemberReference MemberReference arg2 MemberReference MemberReference MemberReference MemberReference arg3 MemberReference MemberReference MemberReference MemberReference runtime context self runtime context self runtime context self	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement final public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block arity MethodInvocation MemberReference checkArity MemberReference MemberReference MemberReference invoke context getRuntime args context ArraySelector args ArraySelector args Literal Literal 0 1	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType value ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation name Literal required Literal ThreadContext IRubyObject Ruby runtime MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement runtime getNil 1 context getRuntime BasicType VariableDeclarator < MemberReference BinaryOperation ++ i ReferenceType VariableDeclarator BinaryOperation BlockStatement int i MemberReference i + MemberReference MemberReference IRubyObject v MemberReference instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement begin begin realLength ArraySelector values v RubyArray ReferenceType VariableDeclarator BinaryOperation ReturnStatement MemberReference RubyArray arr Cast && BinaryOperation MethodInvocation MemberReference i ReferenceType MemberReference > MemberReference Literal MemberReference MemberReference MemberReference equalInternal arr RubyArray v arr realLength 1 context arr ArraySelector values value BinaryOperation + MemberReference Literal arr begin 1	1
MethodDeclaration FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ThrowStatement ReferenceType name ReferenceType proxy ReferenceType args BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation String IRubyObject Object int len MemberReference Class argTypes ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression proxy MethodInvocation getRuntime args length ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment BinaryOperation Literal newNameError Class args length int i Literal i len MemberReference MemberReference = + BinaryOperation MethodInvocation null 0 ArraySelector argTypes ArraySelector MethodInvocation args + BinaryOperation Literal proxy getMetaClass MemberReference MemberReference getClass + BinaryOperation MethodInvocation " on object " i i + BinaryOperation Literal Arrays MemberReference toString + Literal MemberReference " with arguments matching " argTypes "no " name	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement private static boolean BasicType value BinaryOperation long && BinaryOperation BinaryOperation >= MemberReference MemberReference <= MemberReference Literal value Integer MIN_VALUE value	1
MethodDeclaration Modifier ReferenceType ReturnStatement public Member MemberReference target	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType arg1 ReferenceType arg2 BasicType VariableDeclarator MethodInvocation BlockStatement BasicType VariableDeclarator MethodInvocation BlockStatement ClassCreator BlockStatement MethodInvocation required Literal ThreadContext IRubyObject IRubyObject int owner Literal ! arg1 isNil StatementExpression int group Literal ! arg2 isNil StatementExpression ! MethodInvocation ReferenceType MemberReference ThrowStatement context MethodInvocation getRuntime 2 - 1 Assignment - 1 Assignment exists File path MethodInvocation MethodInvocation newFixnum MemberReference MethodInvocation = MemberReference MethodInvocation = context MethodInvocation getRuntime context MethodInvocation MethodInvocation getRuntime owner RubyNumeric MemberReference num2int group RubyNumeric MemberReference num2int BinaryOperation newErrnoENOENTError getPosix MemberReference MemberReference MemberReference arg1 arg2 + Literal MemberReference path owner group "No such file or directory - " path	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public ReferenceType clazz ReferenceType name1 ReferenceType name2 ReferenceType name3 ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference RubyClass String String String entry MethodInvocation == MemberReference MemberReference ReturnStatement entry clazz MemberReference entry method INSTANCE MethodInvocation name1 MemberReference MemberReference MemberReference clazz name2 name3	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Arity MemberReference Arity	0
MethodDeclaration Modifier ReferenceType ReturnStatement public DynamicMethod MemberReference	0
MethodDeclaration Modifier ReferenceType IfStatement public String MethodInvocation BlockStatement BlockStatement MemberReference StatementExpression ReturnStatement StatementExpression ReturnStatement scope Assignment MethodInvocation Assignment MethodInvocation MemberReference Literal = MethodInvocation Literal MemberReference Literal = MethodInvocation MethodInvocation specificArity false script getClassname 4 specificArity true script getClassname scope getRequiredArgs	0
MethodDeclaration Modifier applyProxyExtenders LocalVariableDeclaration IfStatement private ReferenceType VariableDeclarator BinaryOperation BlockStatement ArrayList TypeArgument extenders != Assignment Literal ForStatement StatementExpression ReferenceType MemberReference MemberReference = null EnhancedForControl BlockStatement Assignment IRubyObject extenders proxyExtenders VariableDeclaration MemberReference StatementExpression MemberReference Literal = ReferenceType VariableDeclarator extenders MethodInvocation proxyExtenders null IRubyObject extender MemberReference extender	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter AssertStatement LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement static public RubyArray ReferenceType context ReferenceType recv ReferenceType args ReferenceType function BinaryOperation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForStatement StatementExpression MemberReference ThreadContext IRubyObject IRubyObject String >= MemberReference Literal RubyArray array MethodInvocation iconv MethodInvocation ForControl BlockStatement MethodInvocation array args length 2 context MethodInvocation getRuntime MemberReference MemberReference MemberReference MemberReference VariableDeclaration BinaryOperation MemberReference StatementExpression iconv close BinaryOperation newArray context recv ArraySelector args ArraySelector args BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation - MemberReference Literal Literal Literal int i Literal i args length array MethodInvocation append args length 2 0 1 2 iconv MemberReference iconv ArraySelector args MemberReference i	1
MethodDeclaration Modifier Annotation BasicType FormalParameter FormalParameter ReturnStatement public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyModule	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier BasicType isSingleton ReturnStatement public boolean Literal false	0
MethodDeclaration Modifier ReferenceType isExceptionHandled FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement static public IRubyObject ReferenceType currentException ReferenceType exception ReferenceType context ReferenceType VariableDeclarator MethodInvocation BlockStatement ReferenceType VariableDeclarator MethodInvocation ReturnStatement MethodInvocation RubyException IRubyObject ThreadContext Ruby runtime MethodInvocation ! runtime MethodInvocation getModule ThrowStatement IRubyObject result MethodInvocation result isTrue MemberReference runtime getFalse context getRuntime MemberReference isInstance MethodInvocation MemberReference MemberReference Literal MemberReference invoke result exception runtime Literal newTypeError context exception "===" currentException "class or module required for rescue clause"	1
MethodDeclaration Modifier ReferenceType noArguments ReturnStatement static public Arity MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement private RubyClass ReferenceType name ReferenceType superClazz BinaryOperation BlockStatement Literal String RubyClass != MemberReference Literal SynchronizedStatement null null MemberReference LocalVariableDeclaration ForStatement ReferenceType VariableDeclarator EnhancedForControl BlockStatement RubyClass clazz VariableDeclaration MemberReference IfStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement classProvider != Assignment Literal ReturnStatement MemberReference MethodInvocation = null MemberReference clazz classProvider This MemberReference MemberReference defineClassUnder clazz name superClazz	1
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression StatementExpression public BasicType MethodInvocation MethodInvocation MethodInvocation boolean method MemberReference Literal MethodInvocation invokeUtilityMethod ClassReference MethodInvocation sig ReferenceType ClassReference ClassReference ClassReference params RubyArray ReferenceType ReferenceType BasicType IRubyObject Ruby boolean	0
MethodDeclaration Modifier ReferenceType getPosition ReturnStatement public ISourcePosition MemberReference position	0
MethodDeclaration Modifier StatementExpression public MethodInvocation	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter ReturnStatement private boolean ReferenceType context ReferenceType value BinaryOperation ThreadContext IRubyObject && BinaryOperation BinaryOperation != MemberReference Literal == MemberReference MethodInvocation value null generation context MethodInvocation getRuntime	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject Block body MemberReference MemberReference MemberReference MemberReference MemberReference call context args type block	0
MethodDeclaration Modifier ReferenceType IOException LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement public ByteList BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement ClassCreator int length MethodInvocation byte buffer ArrayCreator int Literal < MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression ReferenceType MemberReference Literal BasicType MemberReference 0 length BasicType VariableDeclarator BinaryOperation BlockStatement Assignment ByteList buffer false byte length int read MethodInvocation == MemberReference Literal ThrowStatement MemberReference MemberReference += inputStream MemberReference MemberReference BinaryOperation read read - 1 MethodInvocation read buffer - MemberReference MemberReference MethodInvocation getRuntime length Literal newArgumentError data too	0
MethodDeclaration Modifier ReferenceType getType FormalParameter ReturnStatement static public String ReferenceType s Literal String	0
MethodDeclaration Modifier Annotation ReferenceType splatValue FormalParameter FormalParameter IfStatement ReturnStatement static public Deprecated RubyArray ReferenceType runtime ReferenceType value MethodInvocation BlockStatement MethodInvocation Ruby IRubyObject value isNil ReturnStatement MemberReference MemberReference MethodInvocation runtime value runtime MemberReference newArray value	1
MethodDeclaration Modifier IOException LocalVariableDeclaration StatementExpression private Modifier BasicType VariableDeclarator MethodInvocation final byte header ArrayInitializer out MemberReference write MemberReference MemberReference MemberReference Literal Cast Cast Cast Cast Literal MemberReference header 0 BasicType MemberReference BasicType BinaryOperation BasicType BinaryOperation BasicType BinaryOperation 0 byte byte >> MemberReference Literal byte >> MemberReference Literal byte >> MemberReference Literal 8 16 24	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement Node BodyCompiler boolean RegexpNode reNode Cast RubyInstanceConfig PEEPHOLE_OPTZ IfStatement StatementExpression IfStatement ReferenceType MemberReference MemberReference StatementExpression MethodInvocation MemberReference StatementExpression RegexpNode node expr MethodInvocation context MethodInvocation MethodInvocation ! expr MethodInvocation context MethodInvocation MethodInvocation reNode getValue reNode context consumeCurrentValue reNode getValue reNode	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator Assignment MemberReference Object Object int Node node != Cast Literal StatementExpression IfStatement StatementExpression Node body TernaryExpression MemberReference ClassCreator = yyVal ReferenceType MemberReference null Assignment BinaryOperation BlockStatement Assignment BinaryOperation MemberReference MemberReference yyVal ReferenceType MethodInvocation Cast MemberReference Cast Node ArraySelector yyVals MemberReference MethodInvocation = != Cast Literal StatementExpression MemberReference Cast = == MemberReference Literal NilImplicitNode NIL node RescueBodyNode Cast getPosition ReferenceType MemberReference body ReferenceType MemberReference BinaryOperation node support MethodInvocation Cast appendToBlock ReferenceType MemberReference null MethodInvocation node ReferenceType MemberReference node null ReferenceType MemberReference Node ArraySelector yyVals RescueBodyNode ArraySelector yyVals + Literal MemberReference support Cast ClassCreator node_assign ReferenceType MemberReference Node ArraySelector yyVals node MethodInvocation Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation - 3 yyTop ReferenceType MemberReference ReferenceType MethodInvocation Literal Node ArraySelector yyVals BinaryOperation support MethodInvocation Cast BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference Node ArraySelector yyVals GlobalVarNode Cast getPosition "$!" BinaryOperation + Literal MemberReference getPosition ReferenceType MemberReference + Literal MemberReference + Literal MemberReference - 4 yyTop 0 yyTop BinaryOperation ReferenceType MemberReference + Literal MemberReference - 1 yyTop Node ArraySelector yyVals - 1 yyTop - 5 yyTop + Literal MemberReference Token ArraySelector yyVals - 1 yyTop BinaryOperation - 3 yyTop BinaryOperation + Literal MemberReference + Literal MemberReference - 1 yyTop - 5 yyTop	1
MethodDeclaration Modifier addUnassignedAlias FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement private static ReferenceType name ReferenceType assignedNames ReferenceType installer BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement String Map TypeArgument TypeArgument MethodInstaller == MemberReference Literal AssignedName assignedName MethodInvocation MemberReference StatementExpression StatementExpression MethodInvocation BlockStatement ReferenceType ReferenceType name null assignedNames MemberReference get assignedName MethodInvocation MethodInvocation MemberReference StatementExpression String AssignedName name installer MemberReference assignedNames MemberReference ClassCreator put assignedName MethodInvocation name name ReferenceType MemberReference MemberReference installer MemberReference AssignedName name Priority name	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject Block RuntimeHelpers MemberReference MemberReference Literal MemberReference MemberReference MemberReference invoke context self arg0 arg1 block	0
MethodDeclaration Modifier ReferenceType pair FormalParameter ReturnStatement static public Pair ReferenceType ClassCreator N ReferenceType MemberReference Pair	0
MethodDeclaration Modifier ReferenceType fillCommon FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression IfStatement IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement private IRubyObject ReferenceType context BasicType beg BasicType len ReferenceType item MethodInvocation BinaryOperation ReturnStatement BinaryOperation ThrowStatement BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement This ThreadContext int long IRubyObject modify < MemberReference Literal This > MemberReference BinaryOperation MethodInvocation int end Cast > MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression > MemberReference Literal TryStatement len 0 len - MemberReference MemberReference context MethodInvocation getRuntime BasicType BinaryOperation end realLength BasicType VariableDeclarator BinaryOperation StatementExpression Assignment len 0 StatementExpression CatchClause Integer MAX_VALUE beg Literal newArgumentError int + MemberReference MemberReference int valuesLength BinaryOperation >= MemberReference MemberReference MethodInvocation MemberReference MemberReference = MethodInvocation CatchClauseParameter StatementExpression "argument too big" beg len - MemberReference MemberReference end valuesLength MemberReference MemberReference realloc realLength end MemberReference BinaryOperation BinaryOperation MemberReference fill ArrayIndexOutOfBoundsException e MethodInvocation values length begin end valuesLength values + MemberReference MemberReference + MemberReference MemberReference item concurrentModification begin beg begin end	1
MethodDeclaration Modifier BasicType nth FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement static public int ReferenceType enc BasicType bytes BasicType p BasicType end BasicType n MethodInvocation BlockStatement IfStatement TernaryExpression Encoding byte int int int enc StatementExpression MethodInvocation BlockStatement IfStatement BinaryOperation MemberReference MemberReference Assignment enc StatementExpression MethodInvocation BlockStatement BlockStatement > MemberReference MemberReference end p MemberReference MemberReference += Assignment enc isAsciiCompatible StatementExpression StatementExpression p end p n MemberReference BinaryOperation += Assignment Assignment p * MemberReference MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = n enc maxLength p MemberReference MemberReference MemberReference MemberReference MemberReference p MemberReference MemberReference MemberReference MemberReference MemberReference enc bytes p end n enc bytes p end n	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public RubyString ReferenceType runtime ReferenceType clazz ReferenceType bytes ReferenceType VariableDeclarator Assignment MemberReference Ruby RubyClass ByteList RubyString str ClassCreator MemberReference MemberReference = str ReferenceType MemberReference MemberReference MemberReference str RubyString runtime clazz bytes	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType MethodInvocation createList Node getValueNode	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType symbol MethodInvocation name Literal required Literal IRubyObject Literal MethodInvocation Literal 1 null symbol asJavaString false	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement protected static RubyModule ReferenceType ruby ReferenceType cls MethodInvocation BlockStatement BlockStatement Ruby Class cls isInterface LocalVariableDeclaration ReturnStatement LocalVariableDeclaration ReturnStatement ReferenceType VariableDeclarator MemberReference ReferenceType VariableDeclarator MemberReference RubyModule rubyMod MethodInvocation rubyMod RubyClass MethodInvocation RubyModule MemberReference newModule RubyClass MemberReference Cast newClass ruby ruby ReferenceType MethodInvocation RubyClass MemberReference MethodInvocation ruby cls	1
MethodDeclaration Modifier label FormalParameter StatementExpression public ReferenceType label MethodInvocation Label MethodInvocation getMethodVisitor MemberReference label	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement IfStatement MethodInvocation name Literal ThreadContext IRubyObject || BinaryOperation BinaryOperation ReturnStatement BinaryOperation BlockStatement IfStatement MemberReference Literal MemberReference coerceBin "+" instanceof MemberReference ReferenceType instanceof MemberReference ReferenceType MethodInvocation instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement context "+" other other RubyFixnum other RubyBignum MemberReference MemberReference MemberReference MemberReference MethodInvocation Literal f_addsub other RubyFloat MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement context num den other RubyFixnum MethodInvocation one true MemberReference MethodInvocation MemberReference f_add other RubyRational ReferenceType VariableDeclarator MethodInvocation context getRuntime context MemberReference This f_to_f other RubyRational otherRational Cast MemberReference MemberReference MemberReference MemberReference MemberReference Literal f_addsub context ReferenceType MemberReference context num den otherRational num otherRational den true RubyRational other	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + BinaryOperation Literal + BinaryOperation MemberReference "}" + BinaryOperation Literal position + Literal MemberReference ", { value	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation Assignment MemberReference Object Object int support Cast checkExpression MemberReference ClassCreator = yyVal ReferenceType MemberReference yyVal ReferenceType MethodInvocation MethodInvocation Node ArraySelector yyVals NewlineNode Cast getPosition support MethodInvocation Cast newSplatNode BinaryOperation ReferenceType MemberReference Cast getPosition ReferenceType MemberReference + Literal MemberReference Token ArraySelector yyVals ReferenceType MemberReference Node ArraySelector yyVals - 1 yyTop BinaryOperation Token ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference - 2 yyTop + Literal MemberReference - 1 yyTop - 2 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ThrowStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType arg1 ReferenceType arg2 MethodInvocation name Literal required Literal module Literal visibility MemberReference IRubyObject IRubyObject IRubyObject recv MethodInvocation getRuntime 2 true Visibility PRIVATE Literal newNotImplementedError not implemented"	0
MethodDeclaration Modifier ReferenceType cmperr FormalParameter FormalParameter LocalVariableDeclaration IfStatement ThrowStatement static public IRubyObject ReferenceType recv ReferenceType other ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation IRubyObject IRubyObject IRubyObject target || MethodInvocation BinaryOperation StatementExpression StatementExpression recv MethodInvocation getRuntime other || BinaryOperation BinaryOperation Assignment Assignment BinaryOperation newArgumentError || MethodInvocation MethodInvocation == MemberReference MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = + BinaryOperation Literal other isNil other isTrue other recv MethodInvocation getRuntime target other inspect target other getType + BinaryOperation MemberReference " failed" getFalse + BinaryOperation Literal target + Literal MethodInvocation " with " of " recv getType	0
MethodDeclaration Modifier BasicType isAbsolute ReturnStatement public boolean MemberReference absolute	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop ReferenceType VariableDeclarator Assignment MemberReference Object Object int RestArgNode rest ClassCreator MemberReference MethodInvocation = yyVal ReferenceType Cast MethodInvocation yyVal support Cast Cast Literal MemberReference Literal Literal new_args UnnamedRestArgNode ReferenceType MemberReference support MethodInvocation getCurrentScope ReferenceType MemberReference ReferenceType MemberReference null rest null null ListNode ArraySelector yyVals Literal addVariable ListNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation "*" BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 1 yyTop - 1 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType getBodyNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression private ReferenceType ruby BasicType length MethodInvocation Ruby int ruby MethodInvocation getWarnings MemberReference BinaryOperation warn ID + BinaryOperation Literal + Literal MemberReference " for values for a block parameter (" length	0
MethodDeclaration Modifier BasicType isDefined FormalParameter AssertStatement AssertStatement LocalVariableDeclaration ReturnStatement public boolean ReferenceType name BinaryOperation MethodInvocation ReferenceType VariableDeclarator BinaryOperation String != MemberReference Literal name Literal startsWith GlobalVariable variable Cast && BinaryOperation BinaryOperation name null "$" ReferenceType MethodInvocation != MemberReference Literal instanceof MethodInvocation ReferenceType GlobalVariable MemberReference get variable null variable name	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block TernaryExpression name Literal frame Literal ThreadContext Block MethodInvocation MethodInvocation MethodInvocation true block isGiven MemberReference MemberReference MethodInvocation This Literal enumeratorize context block context getRuntime	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name arg0	0
MethodDeclaration Modifier Annotation BasicType available IOException IfStatement public Override int BinaryOperation BlockStatement BlockStatement != MemberReference Literal ReturnStatement ReturnStatement in null MethodInvocation Literal in available 0	0
MethodDeclaration Modifier ReferenceType FormalParameter AssertStatement ReturnStatement public IRubyObject ReferenceType name MethodInvocation MethodInvocation String IdUtil MemberReference MethodInvocation name MemberReference get name	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public Operand ReferenceType node ReferenceType s MethodInvocation Node IR_Scope s	1
MethodDeclaration Modifier update FormalParameter FormalParameter FormalParameter StatementExpression public Modifier BasicType b Modifier BasicType off Modifier BasicType len This final byte final int final int MemberReference MethodInvocation intern MemberReference MemberReference MemberReference update b off len	0
MethodDeclaration Modifier ReferenceType getClassFromPath FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration ForStatement ReturnStatement public RubyModule ReferenceType path ReferenceType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator VariableDeclarator ForControl BlockStatement MemberReference String RubyModule c MethodInvocation || BinaryOperation BinaryOperation ThrowStatement int pbeg Literal p Literal VariableDeclaration BinaryOperation WhileStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement StatementExpression c getObject == MethodInvocation Literal == MethodInvocation Literal MethodInvocation 0 0 BasicType VariableDeclarator < MemberReference MemberReference BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment path length 0 path Literal charAt '#' BinaryOperation newTypeError int l MethodInvocation p l && BinaryOperation BinaryOperation StatementExpression String str MethodInvocation && BinaryOperation BinaryOperation IfStatement StatementExpression StatementExpression IRubyObject MethodInvocation instanceof MemberReference ReferenceType ThrowStatement MemberReference Cast = 0 + Literal MemberReference path length < MemberReference MemberReference != MethodInvocation Literal MemberReference path MemberReference MemberReference substring < MemberReference MemberReference == MethodInvocation Literal BinaryOperation BlockStatement Assignment Assignment c MemberReference RubyModule MethodInvocation c ReferenceType MemberReference "can't retrieve class " path p l path MemberReference charAt ':' ++ p pbeg p p l path MemberReference charAt ':' && BinaryOperation BinaryOperation ThrowStatement MemberReference Literal += MemberReference MemberReference = str BinaryOperation newTypeError RubyModule p p < BinaryOperation MemberReference != MethodInvocation Literal MethodInvocation p 2 pbeg p + BinaryOperation Literal + MemberReference Literal l path BinaryOperation charAt ':' BinaryOperation newTypeError + Literal MemberReference " does not refer to class/module" p 1 + MemberReference Literal + Literal MethodInvocation "" path p 1 "undefined class/module " path MemberReference MemberReference substring pbeg p	1
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType l MethodInvocation pop	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement public IRubyObject ReferenceType runtime BasicType level BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MemberReference Ruby int int traceSize BinaryOperation RubyArray backtrace MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression backtrace + BinaryOperation Literal runtime MemberReference newArray BasicType VariableDeclarator > MemberReference Literal -- i MethodInvocation - MemberReference MemberReference 1 traceSize int i BinaryOperation i 0 MemberReference MemberReference MemberReference MemberReference addBackTraceElement level - MemberReference Literal runtime backtrace ArraySelector ArraySelector traceSize 1 MemberReference BinaryOperation i - MemberReference Literal i 1	0
MethodDeclaration Modifier Annotation ReferenceType iconv FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod IRubyObject ReferenceType str ReferenceType startArg BasicType VariableDeclarator MethodInvocation StatementExpression MethodInvocation IRubyObject IRubyObject int start Literal ! startArg isNil Assignment MemberReference MemberReference Literal iconv 0 MemberReference MethodInvocation = str start - 1 start RubyNumeric MemberReference fix2int startArg	1
MethodDeclaration Modifier ensureConstantsSettable LocalVariableDeclaration IfStatement IfStatement protected final BasicType VariableDeclarator MemberReference ThrowStatement MethodInvocation ThrowStatement boolean isSecure BinaryOperation isSecure MethodInvocation isFrozen MethodInvocation && BinaryOperation MethodInvocation MethodInvocation getRuntime MethodInvocation getRuntime >= MethodInvocation Literal ! isTaint MemberReference newSecurityError MemberReference MethodInvocation getRuntime 4 getSafeLevel	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject Object array MethodInvocation int x MethodInvocation int y MethodInvocation Object obj MethodInvocation Array MethodInvocation MemberReference MemberReference set arg2 MemberReference RubyFixnum MethodInvocation fix2int RubyFixnum MethodInvocation fix2int MemberReference Array MemberReference MemberReference get y obj self arg0 convertToInteger arg1 convertToInteger arg2 array x	0
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression final public BasicType offset BasicType src BasicType off BasicType len MethodInvocation long long int int BinaryOperation MemberReference MemberReference MemberReference + MemberReference MemberReference src off len address offset	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Literal Cast Cast Literal Cast new_args Cast getPosition null ReferenceType MemberReference ReferenceType MemberReference null ReferenceType MemberReference ReferenceType MemberReference ListNode ArraySelector yyVals RestArgNode ArraySelector yyVals BlockArgNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop 0 yyTop - 3 yyTop	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self klazz name arg0 arg1 arg2 arg3 Block	1
MethodDeclaration Modifier ReferenceType getInput ReturnStatement public FileChannel MemberReference	0
MethodDeclaration Modifier ReferenceType getNewVariable FormalParameter IfStatement IfStatement LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public Variable ReferenceType prefix BinaryOperation StatementExpression MethodInvocation StatementExpression ReferenceType VariableDeclarator BinaryOperation StatementExpression MethodInvocation ClassCreator String == MemberReference Literal Assignment ! prefix Literal startsWith Assignment Integer idx MethodInvocation == MemberReference Literal Assignment _nextVarIndex MemberReference BinaryOperation put ReferenceType BinaryOperation prefix null MemberReference Literal = "%" MemberReference Literal += _nextVarIndex MemberReference get idx null MemberReference Literal = prefix + MemberReference Literal Variable + MemberReference MemberReference prefix prefix "%" prefix idx 0 idx 1 prefix idx	1
MethodDeclaration Modifier ReferenceType getValue FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public IRubyObject ReferenceType context ReferenceType target ReferenceType VariableDeclarator TernaryExpression ThreadContext RubyModule IRubyObject value MemberReference MethodInvocation MemberReference MethodInvocation MemberReference MemberReference MemberReference value MemberReference MemberReference context target value context target	0
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType array BasicType i MethodInvocation Ruby Object int MemberReference Cast convert runtime ReferenceType MemberReference Object array	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public ReferenceType pattern ReferenceType VariableDeclarator BinaryOperation BlockStatement Literal String Matcher matcher MethodInvocation && MethodInvocation BinaryOperation LocalVariableDeclaration LocalVariableDeclaration ReturnStatement null regexp MemberReference matcher matcher matches || BinaryOperation BinaryOperation ReferenceType VariableDeclarator BasicType VariableDeclarator ClassCreator pattern != MethodInvocation Literal != MethodInvocation Literal String formatter MethodInvocation int TernaryExpression ReferenceType MemberReference MemberReference matcher Literal group null matcher Literal group null matcher Literal group BinaryOperation MethodInvocation Literal formatter 1 2 1 != MethodInvocation Literal Integer MethodInvocation valueOf 0 matcher Literal group null matcher Literal group 2 2	0
MethodDeclaration Modifier ReferenceType fetch FormalParameter FormalParameter FormalParameter SwitchStatement public IRubyObject ReferenceType context ReferenceType args ReferenceType block MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject Block args length Literal ReturnStatement Literal ReturnStatement StatementExpression ReturnStatement 1 MethodInvocation 2 MethodInvocation MethodInvocation Literal MemberReference MemberReference MemberReference fetch MemberReference MemberReference MemberReference MemberReference fetch Arity MethodInvocation MemberReference Literal Literal raiseArgumentError null context ArraySelector args block context ArraySelector args ArraySelector args block getRuntime args length 1 2 Literal Literal Literal 0 0 1	1
MethodDeclaration Modifier Annotation Annotation ReferenceType to_s LocalVariableDeclaration IfStatement LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator MethodInvocation name ElementArrayValue == MethodInvocation MemberReference StatementExpression StatementExpression String result MethodInvocation MethodInvocation getRuntime Literal Literal dt getZone DateTimeZone Assignment Assignment MemberReference print MemberReference newString "to_s" "inspect" MemberReference MemberReference = MemberReference MemberReference = dt result	0
MethodDeclaration Modifier BasicType getIndex ReturnStatement public int BinaryOperation & MemberReference Literal location	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name ElementArrayValue ThreadContext sock MethodInvocation == Literal MemberReference ThrowStatement context MethodInvocation getRuntime Literal Literal null sock MethodInvocation MethodInvocation newString context MethodInvocation getRuntime sock toString Literal newIOError "Not	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression ReturnStatement public Node ReferenceType receiver ReferenceType index MethodInvocation MethodInvocation Node Node MemberReference checkExpression MethodInvocation MemberReference Literal MemberReference receiver receiver getPosition receiver "[]=" index	0
MethodDeclaration Modifier Annotation ReferenceType StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation MethodInvocation name Literal MethodInvocation getRuntime MemberReference newBoolean	1
MethodDeclaration Modifier ReferenceType createBootstrapClass FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType name ReferenceType superClass ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation MemberReference Ruby String RubyClass ObjectAllocator RubyClass obj == MemberReference Literal StatementExpression StatementExpression StatementExpression obj MemberReference setAllocator obj MemberReference obj superClass null Assignment Assignment Assignment name MemberReference ClassCreator = MemberReference MemberReference = MemberReference ClassCreator = obj ReferenceType MemberReference obj marshal obj ReferenceType MemberReference MemberReference RubyClass runtime RubyClass runtime superClass	0
MethodDeclaration Modifier astore FormalParameter StatementExpression public BasicType arg0 MethodInvocation int MethodInvocation getMethodVisitor MemberReference MemberReference visitVarInsn arg0	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Map TypeArgument TypeArgument MemberReference ReferenceType ReferenceType contextVariables Object IRubyObject	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod IRubyObject MethodInvocation Java MethodInvocation MethodInvocation getInstance getRuntime MethodInvocation javaClass	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation name Literal module Literal ThreadContext IRubyObject context MethodInvocation getRuntime true BinaryOperation newBoolean == MemberReference MemberReference OS OS LINUX	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement private final IRubyObject ReferenceType runtime ReferenceType enc BasicType len BasicType beg BasicType length BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement IfStatement MethodInvocation Ruby Encoding int int int int p int s MemberReference int end BinaryOperation byte bytes MemberReference < MemberReference Literal IfStatement IfStatement BinaryOperation BlockStatement == MemberReference Literal StatementExpression BinaryOperation BlockStatement IfStatement MemberReference BinaryOperation MemberReference makeShared19 value begin + MemberReference MemberReference value bytes beg 0 BinaryOperation StatementExpression BinaryOperation BlockStatement BlockStatement && BinaryOperation BinaryOperation ReturnStatement len 0 Assignment && MethodInvocation BinaryOperation StatementExpression StatementExpression MethodInvocation BlockStatement IfStatement runtime - MemberReference MemberReference len s length > MemberReference MemberReference Assignment < BinaryOperation BinaryOperation StatementExpression LocalVariableDeclaration WhileStatement StatementExpression IfStatement WhileStatement IfStatement ReturnStatement StatementExpression IfStatement > MemberReference Literal > MemberReference MethodInvocation MethodInvocation MemberReference Literal = instanceof MemberReference ReferenceType Assignment Assignment enc LocalVariableDeclaration StatementExpression IfStatement BinaryOperation BlockStatement BlockStatement p s len - beg MemberReference MemberReference = * MemberReference MethodInvocation >>> MemberReference Literal Assignment BasicType VariableDeclarator BinaryOperation Statement Assignment BinaryOperation ReturnStatement BinaryOperation Statement BinaryOperation ReturnStatement MethodInvocation Assignment BinaryOperation ReturnStatement beg 0 beg MemberReference strLength runtime getNil p 0 enc MemberReference MethodInvocation = MemberReference MethodInvocation = BasicType VariableDeclarator Assignment BinaryOperation BlockStatement IfStatement == Assignment MemberReference StatementExpression StatementExpression len - beg - beg enc maxLength length 3 MemberReference MemberReference = int e MemberReference && BinaryOperation BinaryOperation MemberReference MemberReference = == MemberReference Literal MethodInvocation && BinaryOperation BinaryOperation == MemberReference Literal MethodInvocation MemberReference BinaryOperation BinaryOperation makeShared19 MemberReference MethodInvocation += < MemberReference Literal MethodInvocation enc p StringSupport MemberReference MemberReference MemberReference MemberReference len StringSupport MemberReference MemberReference MemberReference MemberReference int w MethodInvocation MemberReference BinaryOperation = > MemberReference MemberReference StatementExpression StatementExpression BinaryOperation BlockStatement BlockStatement MemberReference MethodInvocation = end Assignment Assignment beg - beg end > MemberReference MemberReference != Assignment Literal p e p - 1 runtime getNil > MemberReference Literal != Assignment Literal p - 1 runtime getNil runtime - MemberReference MemberReference - MemberReference MemberReference beg MemberReference strLength beg 0 runtime getNil bytes s end beg bytes p end len enc maxLength p + MemberReference BinaryOperation p end Assignment Assignment > BinaryOperation BinaryOperation StatementExpression StatementExpression p StringSupport MemberReference MemberReference MemberReference MemberReference MemberReference nth MemberReference Literal = MemberReference MethodInvocation = -- beg len MemberReference MethodInvocation = - 1 -- len 0 MemberReference MethodInvocation = - 1 p s e p enc s * MemberReference MemberReference MemberReference MemberReference = MemberReference Literal = * MemberReference MemberReference - MemberReference MemberReference Assignment Assignment enc bytes s end beg len 0 len StringSupport MemberReference MemberReference MemberReference MemberReference MemberReference offset e enc MemberReference MemberReference MemberReference MemberReference prevCharHead p enc MemberReference MemberReference MemberReference MemberReference prevCharHead beg w p end len 0 len w end p MemberReference BinaryOperation = MemberReference MemberReference *= enc bytes p end len bytes s e e bytes s p e len - MemberReference MemberReference len w end p	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement final public RubyString ReferenceType runtime MethodInvocation Ruby runtimeCache MemberReference Literal getString runtime 5	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression public ReferenceType method ReferenceType MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement MemberReference String method loadThis method.method swap method method.method MemberReference ldc < MemberReference MemberReference StatementExpression StatementExpression StatementExpression ++ AbstractScript MethodInvocation MethodInvocation MethodInvocation method.method MethodInvocation BinaryOperation MethodInvocation invokevirtual method.method MemberReference pushInt method.method MethodInvocation Literal MethodInvocation invokevirtual scriptCompiler getClassname + Literal MemberReference ClassReference ClassReference ClassReference ClassReference sig scriptCompiler getClassname ClassReference ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType BasicType IRubyObject RubyModule ThreadContext String IRubyObject RubyModule ThreadContext String int	0
MethodDeclaration Modifier Annotation ReferenceType op_lt FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair RubyBoolean ReferenceType context ReferenceType recv ReferenceType other ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation name Literal required Literal ThreadContext IRubyObject IRubyObject IRubyObject result MethodInvocation result isNil MethodInvocation RubyBoolean MethodInvocation BinaryOperation newBoolean "<" 1 recv MemberReference Literal MemberReference callMethod MemberReference MemberReference cmperr context getRuntime < MethodInvocation Literal context "<=>" other recv other MemberReference MemberReference MemberReference MemberReference cmpint 0 context result recv other	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MethodInvocation MemberReference Object Object int MemberReference ClassCreator = support popCurrentScope yyVal yyVal ReferenceType MethodInvocation Cast Cast MethodInvocation IterNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference support getCurrentScope ReferenceType MemberReference ArgsNode ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop - 1 yyTop - 4 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType getFastSingletonMethod FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String Class Class Class String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference + BinaryOperation MemberReference MemberReference tryClass Class descriptor ArrayCreator == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression FastInvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setArgumentTypes ic MemberReference setJavaName ic Literal setSingleton ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname ReferenceType ArrayInitializer c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity Literal fixed descriptor method true e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class MemberReference MemberReference MemberReference Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation MemberReference MemberReference Literal MemberReference loadArguments mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference mv Literal Literal visitMaxs MemberReference MethodInvocation = FastInvocationCallback c newInstance 3 IllegalArgumentException e getMessage arg1 arg2 arg3 ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtorFast MemberReference startCallSFast mv METHOD_ARGS_INDEX 3 descriptor INVOKESTATIC typePath method MemberReference MemberReference sig ARETURN 5 3 c MemberReference MemberReference MemberReference endCall Class MemberReference MemberReference MemberReference MemberReference method signature mnamePath cw ret signature cw mv mname RubyKernel IRUBY_OBJECT arg1 arg2 arg3	1
MethodDeclaration Modifier IfStatement public MemberReference StatementExpression managementEnabled MethodInvocation BinaryOperation unregister + MemberReference Literal base	1
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter Throwable LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement IfStatement public Object ReferenceType proxy ReferenceType m ReferenceType nargs ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement BinaryOperation BlockStatement BlockStatement Object JavaProxyMethod Object String name MethodInvocation DynamicMethod method MethodInvocation int v MethodInvocation IRubyObject newArgs ArrayCreator VariableDeclaration BinaryOperation StatementExpression || BinaryOperation BinaryOperation ReturnStatement LocalVariableDeclaration ReturnStatement m getName self MethodInvocation getMetaClass method MethodInvocation ReferenceType MemberReference BasicType VariableDeclarator >= MemberReference Literal Assignment < MemberReference Literal == MemberReference MemberReference MethodInvocation ReferenceType VariableDeclarator MethodInvocation MemberReference searchMethod getValue IRubyObject nargs length int i MemberReference -- i 0 MemberReference MethodInvocation = v 0 v newArgs length RuntimeHelpers MethodInvocation MethodInvocation MemberReference MemberReference MemberReference invoke RubyClass superClass MethodInvocation RuntimeHelpers MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference name nargs length ArraySelector newArgs JavaUtil MemberReference MemberReference convertJavaToUsableRubyObject MethodInvocation toJava runtime getCurrentContext self name newArgs self MethodInvocation getMetaClass MethodInvocation toJava runtime getCurrentContext superClass self name newArgs Block MemberReference runtime ArraySelector nargs m getReturnType getSuperClass m getReturnType i MemberReference i	1
MethodDeclaration Modifier ReferenceType ReturnStatement public Type MethodInvocation method	0
MethodDeclaration Modifier Annotation ReferenceType LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType VariableDeclarator MethodInvocation MemberReference name ElementArrayValue IRubyObject digest MethodInvocation reset digest Literal	1
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject RuntimeHelpers MemberReference MemberReference Literal MemberReference invoke context self args	0
MethodDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment Assignment Assignment VariableTableEntry table ArrayCreator MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference Literal = MemberReference Cast = MemberReference MemberReference = ReferenceType MemberReference table name1 table name2 table name3 table name4 value4 table name5 value5 packedVFields null vTableThreshold BasicType BinaryOperation vTable table VariableTableEntry int * MemberReference MemberReference	0
MethodDeclaration Modifier call FormalParameter IfStatement public ReferenceType context BinaryOperation BlockStatement BodyCompiler != MethodInvocation Literal StatementExpression null MethodInvocation MethodInvocation MemberReference Literal context false	0
MethodDeclaration Modifier registerRubyMethods FormalParameter FormalParameter StatementExpression static public ReferenceType runtime ReferenceType result MethodInvocation Ruby RubyClass result ClassReference defineAnnotatedMethods ReferenceType JavaAccessibleObject	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement static public IRubyObject ReferenceType ReferenceType context ReferenceType caller ReferenceType self ReferenceType name ReferenceType arg0 ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation MethodInvocation ThreadContext IRubyObject IRubyObject String IRubyObject RubyClass selfClass MethodInvocation entry MethodInvocation MemberReference MethodInvocation MemberReference MemberReference ReturnStatement MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference call MemberReference MemberReference selfClass MemberReference entry callType name caller MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference context self selfClass name arg0 context self name MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference entry entry callType context self name arg0	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference ThreadContext IRubyObject RubyModule String IRubyObject proxy MethodInvocation instanceof MethodInvocation ReferenceType StatementExpression proxy MemberReference MemberReference MemberReference Literal call proxy dataGetStruct JavaObject MethodInvocation context self clazz RuntimeHelpers MemberReference MemberReference Literal invoke context proxy	0
MethodDeclaration Modifier visit FormalParameter FormalParameter StatementExpression public ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject block MemberReference MemberReference MemberReference context key value	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ForStatement ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator MethodInvocation EnhancedForControl BlockStatement TernaryExpression Ruby ThreadContext IRubyObject Block IRubyObject expression TernaryExpression context pollThreadEvents VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression IfStatement LocalVariableDeclaration IfStatement StatementExpression BinaryOperation MethodInvocation MethodInvocation BinaryOperation Literal MethodInvocation ReferenceType VariableDeclarator cases childNodes ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation StatementExpression ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation != MemberReference Literal MemberReference MemberReference MemberReference MemberReference runtime getNil == MemberReference Literal null caseNode MemberReference MemberReference MemberReference MemberReference Node child WhenNode when Cast ISourcePosition position MethodInvocation context MethodInvocation context MethodInvocation setLine runtime hasEventHooks MethodInvocation IRubyObject result MethodInvocation != MemberReference Literal MemberReference context pollThreadEvents null runtime context self caseNode null runtime context self ReferenceType MemberReference child getPosition position getFile position getStartLine ASTInterpreter MemberReference MemberReference MemberReference when MemberReference MemberReference MemberReference MemberReference MemberReference when result null result WhenNode child runtime context RubyEvent expression context runtime self	1
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType ORNODE	0
MethodDeclaration Modifier FormalParameter StatementExpression protected static final ReferenceType context MethodInvocation ThreadContext context	1
MethodDeclaration Modifier addPath FormalParameter IfStatement SynchronizedStatement protected ReferenceType path BinaryOperation ReturnStatement MemberReference StatementExpression String || BinaryOperation BinaryOperation MethodInvocation == MemberReference Literal == MethodInvocation Literal MethodInvocation append path null path length 0 runtime MethodInvocation newString path Literal Literal replace '\\' '/'	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter IOException LocalVariableDeclaration ReturnStatement private IRubyObject ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Ruby Channel socketChannel MethodInvocation MemberReference TernaryExpression openFile MethodInvocation MethodInvocation getMainStream runtime BinaryOperation MethodInvocation Literal getDescriptor getChannel instanceof MemberReference ReferenceType MethodInvocation asSocket false socketChannel SocketChannel	1
MethodDeclaration Modifier BasicType hashCode ReturnStatement public int MethodInvocation hashCode	0
MethodDeclaration Modifier IfStatement private BinaryOperation BlockStatement <= MemberReference Literal IfStatement base 0 BinaryOperation BlockStatement IfStatement && BinaryOperation BinaryOperation IfStatement BinaryOperation BlockStatement BlockStatement < MemberReference MemberReference == MemberReference Literal BinaryOperation BlockStatement BlockStatement < MemberReference Literal StatementExpression StatementExpression str end ArraySelector data '0' < BinaryOperation MemberReference SwitchStatement StatementExpression base - 1 Assignment Assignment MemberReference + MemberReference Literal end MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Assignment MemberReference MemberReference = MemberReference Literal = str str 1 ArraySelector data Literal Literal StatementExpression BreakStatement Literal Literal StatementExpression BreakStatement Literal Literal StatementExpression BreakStatement Literal Literal StatementExpression BreakStatement StatementExpression MemberReference Literal = base - base base 10 BinaryOperation 'x' 'X' Assignment 'b' 'B' Assignment 'o' 'O' Assignment 'd' 'D' Assignment Assignment base 8 + MemberReference Literal MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal = str 1 base 16 base 2 base 8 base 10 base 8	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression public ReferenceType name ReferenceType clazz ReferenceType staticScope MethodInvocation MethodInvocation String RubyModule MemberReference MemberReference MemberReference clazz staticScope name	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public Object ReferenceType numeric ReferenceType target MethodInvocation RubyNumeric Class numeric	0
MethodDeclaration Modifier ReferenceType getValueNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public double ReferenceType runtime ReferenceType number ReferenceType VariableDeclarator ClassCreator Ruby String ByteList s ClassCreator MethodInvocation ReferenceType MemberReference MemberReference Literal Literal ReferenceType MethodInvocation Literal Literal Literal Convert2 runtime s - 1 false ByteList ByteList MemberReference plain false 0 null number	0
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType function ReferenceType args MethodInvocation Ruby Function HeapInvocationBuffer runtime MethodInvocation newFloat invoker MemberReference MemberReference function args	1
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType array BasicType i MethodInvocation Ruby Object int MemberReference Cast convert runtime ReferenceType MemberReference Long array	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType type ReferenceType staticScope MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation RubyModule MemberReference MethodInvocation MethodInvocation staticScope MemberReference MethodInvocation type MemberReference MemberReference setVisibility type staticScope type Visibility PUBLIC	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal compat MemberReference ThreadContext context MethodInvocation getRuntime CompatVersion RUBY1_9 MemberReference newBoolean	1
MethodDeclaration Modifier Annotation ReferenceType to_io ReturnStatement public JRubyMethod ElementValuePair RubyIO This name Literal "to_io"	1
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration IfStatement IfStatement TryStatement private BasicType fast ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement MemberReference BlockStatement StatementExpression CatchClause CatchClause boolean Class args LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ! fast LocalVariableDeclaration StatementExpression StatementExpression StatementExpression Assignment CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement ReferenceType VariableDeclarator MethodInvocation Assignment Assignment Assignment ReferenceType VariableDeclarator MethodInvocation Assignment Assignment MemberReference MethodInvocation = NoSuchMethodException e ClassCreator SecurityException e ClassCreator Class types ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference ClassReference = MemberReference MemberReference = MemberReference MemberReference = Class types ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference ClassReference = MemberReference MemberReference = method type MemberReference MemberReference getMethod ReferenceType BinaryOperation ReferenceType BinaryOperation ReferenceType BinaryOperation argumentTypes 0 types 1 argumentTypes length ArraySelector types ReferenceType args types args argumentTypes ReferenceType BinaryOperation args 0 types 0 args length ArraySelector types ReferenceType args types methodName args RuntimeException + BinaryOperation Literal RuntimeException + BinaryOperation Literal Class + MemberReference Literal Literal IRubyObject Class + MemberReference Literal MemberReference Block + BinaryOperation MethodInvocation "\" by + BinaryOperation MethodInvocation "\" by argumentTypes length 1 0 args length 1 args length + BinaryOperation Literal type getName + BinaryOperation Literal type getName + Literal MemberReference "\" in class \"" + Literal MemberReference "\" in class \"" Cannot get method \"" methodName Cannot get method \"" methodName	1
MethodDeclaration Modifier replace FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement private BasicType classBytes ReferenceType find ReferenceType replaceWith BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement byte String String byte findBytes MethodInvocation byte MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration ForStatement IfStatement find getBytes replaceWith getBytes BasicType VariableDeclarator < MemberReference MemberReference ++ i BasicType VariableDeclarator ForControl BlockStatement MemberReference BlockStatement int i Literal i classBytes length boolean match Literal VariableDeclaration BinaryOperation MemberReference IfStatement match ForStatement ReturnStatement 0 true BasicType VariableDeclarator < MemberReference MemberReference ++ j BinaryOperation BlockStatement ForControl StatementExpression int j Literal j findBytes length != MemberReference MemberReference StatementExpression BreakStatement VariableDeclaration BinaryOperation MemberReference Assignment 0 ArraySelector classBytes ArraySelector findBytes Assignment BasicType VariableDeclarator < MemberReference MemberReference ++ j MemberReference MemberReference = BinaryOperation MemberReference MemberReference Literal = int j Literal j findBytes length ArraySelector classBytes ArraySelector + MemberReference MemberReference j match false 0 BinaryOperation MemberReference i j + MemberReference MemberReference j i j	1
MethodDeclaration Modifier ReferenceType ReturnStatement public Arity MethodInvocation Arity optional	0
MethodDeclaration Modifier Annotation ReferenceType open FormalParameter FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType args ReferenceType block MethodInvocation IRubyObject IRubyObject Block MethodInvocation MemberReference MemberReference MemberReference open recv MethodInvocation getRuntime recv args block getCurrentContext	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement LocalVariableDeclaration StatementExpression ReturnStatement public RubyProc ReferenceType type ReferenceType block BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation MemberReference Block ReferenceType Block && BinaryOperation BinaryOperation MethodInvocation RubyProc proc MethodInvocation proc MethodInvocation MemberReference proc Type != MemberReference MemberReference != MethodInvocation Literal block RubyProc This MemberReference newProc getCurrentContext block type Block.Type block null type	1
MethodDeclaration Modifier ReferenceType call LocalVariableDeclaration TryStatement ReturnStatement synchronized public Object BasicType VariableDeclarator WhileStatement IfStatement MethodInvocation boolean interrupted Literal BinaryOperation BlockStatement MemberReference BlockStatement MemberReference MemberReference false == MemberReference Literal TryStatement interrupted StatementExpression join args null StatementExpression CatchClause MethodInvocation MethodInvocation CatchClauseParameter StatementExpression Thread MethodInvocation currentThread wait InterruptedException e Assignment MemberReference Literal = interrupted true	0
MethodDeclaration Modifier FormalParameter StatementExpression public BasicType MethodInvocation int MethodInvocation getRuntime MemberReference	0
MethodDeclaration Modifier BasicType FormalParameter java.io.IOException LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression IfStatement ReturnStatement private int Modifier ReferenceType src BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation BinaryOperation BlockStatement BinaryOperation final LexerSource char kcode Literal int options Literal int c StringBuilder ClassCreator Assignment BinaryOperation Assignment SwitchStatement src MemberReference unread != MethodInvocation Literal ThrowStatement | MemberReference MemberReference 0 0 ReferenceType Literal MemberReference MethodInvocation = && BinaryOperation MethodInvocation MemberReference MethodInvocation = MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase c length 0 ClassCreator options kcode StringBuilder 10 c src read != MemberReference MemberReference Character MemberReference isLetter c src read c Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression BreakStatement ReferenceType MemberReference MethodInvocation BinaryOperation MethodInvocation c RubyYaccLexer EOF c 'i' Assignment 'x' Assignment 'm' Assignment 'o' Assignment 'n' Assignment 'e' Assignment 's' Assignment 'u' Assignment 'j' Assignment MethodInvocation SyntaxException PID src getPosition + BinaryOperation MethodInvocation toString MemberReference MemberReference |= MemberReference MemberReference |= MemberReference MemberReference |= MemberReference MemberReference |= MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal |= Cast append + BinaryOperation Literal toString options ReOptions RE_OPTION_IGNORECASE options ReOptions RE_OPTION_EXTENDED options ReOptions RE_OPTION_MULTILINE options ReOptions RE_OPTION_ONCE kcode 16 kcode 32 kcode 48 kcode 64 options 256 BasicType MemberReference + Literal TernaryExpression " - " char c "unknown regexp BinaryOperation Literal Literal > MethodInvocation Literal "s" "" length 1	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Object result Cast MemberReference MemberReference javaToRuby ReferenceType MethodInvocation ruby result Object handle TernaryExpression MethodInvocation invoke MemberReference Literal Cast MemberReference isStatic null ReferenceType MemberReference arg0 JavaObjectWrapper self	0
MethodDeclaration Modifier Annotation ReferenceType get_proxy_or_package_under_package FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg0 ReferenceType arg1 MethodInvocation module Literal backtrace Literal visibility MemberReference ThreadContext IRubyObject IRubyObject IRubyObject Java MemberReference MemberReference MemberReference MemberReference get_proxy_or_package_under_package true true Visibility PRIVATE context recv arg0 arg1	1
MethodDeclaration Modifier ReferenceType newErrnoEPIPEError ReturnStatement public RaiseException MethodInvocation MethodInvocation Literal newRaiseException MethodInvocation Literal fastGetClass	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType process Assignment Process This MemberReference = MemberReference process process	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter ReturnStatement private static int Modifier BasicType h Modifier BasicType length BinaryOperation final int final int & MemberReference BinaryOperation h - MemberReference Literal length 1	1
MethodDeclaration Modifier ReferenceType FormalParameter IOException BadDescriptorException StatementExpression StatementExpression IfStatement LocalVariableDeclaration StatementExpression IfStatement LocalVariableDeclaration IfStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration WhileStatement IfStatement ReturnStatement synchronized public ByteList ReferenceType separatorString MethodInvocation MethodInvocation BinaryOperation BlockStatement Modifier ReferenceType VariableDeclarator MethodInvocation MethodInvocation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ReferenceType VariableDeclarator BasicType VariableDeclarator LineLoop Literal BlockStatement BinaryOperation BlockStatement MemberReference ByteList checkReadable ensureRead == MemberReference Literal ReturnStatement final ByteList separator TernaryExpression descriptor feof ReturnStatement int c MethodInvocation == MemberReference Literal ReturnStatement buffer BinaryOperation position ByteList buf ClassCreator byte first MemberReference true WhileStatement ForStatement BreakStatement == MemberReference MemberReference WhileStatement StatementExpression buf separatorString null MethodInvocation BinaryOperation MemberReference MemberReference Literal read c - 1 Literal - MethodInvocation Literal ReferenceType Literal separator ArraySelector bytes Literal BlockStatement ForControl BlockStatement separatorString PARAGRAPH_DELIMETER BinaryOperation BlockStatement MethodInvocation readall == MemberReference MemberReference separatorString null null buffer position 1 ByteList 40 MemberReference true LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression LocalVariableDeclaration IfStatement VariableDeclaration BinaryOperation MemberReference IfStatement StatementExpression IfStatement == MemberReference MemberReference StatementExpression MemberReference separatorString PARAGRAPH_DELIMETER separator begin BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation BasicType VariableDeclarator BinaryOperation BreakStatement BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement IfStatement MethodInvocation BinaryOperation BlockStatement c separator ArraySelector bytes Assignment c byte bytes MethodInvocation int offset MethodInvocation int max MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression IfStatement buf MemberReference MemberReference MethodInvocation append int read MethodInvocation == MemberReference Literal LineLoop int i Literal i separator realSize == MemberReference Literal BreakStatement BinaryOperation BlockStatement buf MemberReference append < MemberReference BinaryOperation StatementExpression MemberReference MemberReference MethodInvocation = buffer array buffer position buffer limit BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment BinaryOperation BlockStatement bytes offset buffer remaining refillBuffer read - 1 0 c - 1 LineLoop != MemberReference MemberReference StatementExpression ContinueStatement c i - MemberReference Literal Assignment separator begin c read int i MemberReference i max MemberReference MemberReference = == MemberReference MemberReference StatementExpression IfStatement BreakStatement c separator ArraySelector bytes MethodInvocation LineLoop separator realSize 1 MemberReference MethodInvocation = offset c ArraySelector bytes c first MethodInvocation BinaryOperation BlockStatement BlockStatement BinaryOperation buf MemberReference append c read MemberReference buf MemberReference MemberReference BinaryOperation append >= MemberReference MemberReference StatementExpression StatementExpression + MemberReference MemberReference c i bytes offset - MemberReference MemberReference i max MethodInvocation MethodInvocation separator begin i i offset buffer clear buffer BinaryOperation position + MemberReference Literal i 1	1
MethodDeclaration Modifier BasicType StatementExpression ReturnStatement public int MethodInvocation MethodInvocation cleanup cache size	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter Exception LocalVariableDeclaration IfStatement StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType achar ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation MemberReference name Literal module Literal visibility MemberReference IRubyObject IRubyObject Ruby runtime MethodInvocation ! achar Literal respondsTo ThrowStatement MethodInvocation achar true Visibility PRIVATE recv getRuntime "to_str" MethodInvocation achar MethodInvocation convertToString runtime BinaryOperation newTypeError toString + BinaryOperation Literal + Literal MethodInvocation " into String" "can't convert " achar getMetaClass	1
MethodDeclaration Modifier Annotation ReferenceType type ReturnStatement public JRubyMethod ElementValuePair RubyClass MethodInvocation name Literal MethodInvocation getMetaClass "class" getRealClass	0
MethodDeclaration Modifier BasicType ReturnStatement public int MemberReference	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Operand ArrayCreator ReferenceType ArrayInitializer Operand	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public Deprecated IRubyObject ReferenceType log MethodInvocation IRubyObject MethodInvocation MemberReference MethodInvocation getRuntime log getCurrentContext	1
MethodDeclaration Modifier Annotation ReferenceType length ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name ElementArrayValue RubyFixnum MethodInvocation MethodInvocation newFixnum Literal Literal Literal getRuntime	0
MethodDeclaration Modifier Annotation setUp Exception StatementExpression StatementExpression protected Override SuperMethodInvocation Assignment setUp MemberReference MethodInvocation = runtime Ruby newInstance	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyFloat ReferenceType recv ReferenceType x BasicType VariableDeclarator MethodInvocation name Literal required Literal module Literal visibility MemberReference IRubyObject IRubyObject double value Cast RubyFloat MethodInvocation BinaryOperation newFloat 1 true Visibility PRIVATE ReferenceType MethodInvocation recv getRuntime / BinaryOperation Literal RubyFloat RubyKernel MemberReference MemberReference - MethodInvocation MethodInvocation 2.0 recv x Math MemberReference exp Math MemberReference exp value - value	0
MethodDeclaration Modifier Annotation ReferenceType first FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement TryStatement ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType num Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement StatementExpression CatchClause MemberReference name Literal ThreadContext IRubyObject final IRubyObject final Ruby runtime MethodInvocation final RubyArray result MethodInvocation final ThreadContext localContext MemberReference final int firstCount MethodInvocation < MemberReference Literal ThrowStatement BinaryOperation BlockStatement MethodInvocation CatchClauseParameter result "first" context getRuntime runtime newArray context RubyNumeric MemberReference fix2int firstCount 0 MethodInvocation == MemberReference Literal ReturnStatement MemberReference MemberReference MemberReference ClassCreator callEach JumpException.SpecialJump sj num runtime Literal newArgumentError firstCount 0 MemberReference runtime context self ReferenceType FieldDeclaration MethodDeclaration "negative index" result BlockCallback Modifier BasicType VariableDeclarator Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression IfStatement ReturnStatement private int iter MethodInvocation public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation MethodInvocation BinaryOperation BlockStatement MethodInvocation RubyNumeric MemberReference fix2int ThreadContext IRubyObject Block IRubyObject larg MethodInvocation MemberReference MemberReference Literal checkContext result MemberReference append == MemberReference Literal ThrowStatement runtime getNil num MemberReference MemberReference checkArgs localContext ctx "first" larg -- iter 1 MemberReference runtime largs JumpException SPECIAL_JUMP	1
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter ReturnStatement public String ReferenceType s Literal String	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType name ReferenceType object ReferenceType value MethodInvocation Ruby String IRubyObject IRubyObject runtimeCache MemberReference Literal MemberReference MemberReference MemberReference setVariable runtime 5 name object value	0
MethodDeclaration Modifier Annotation ReferenceType blocks ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation newFixnum stat blocks	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement private static ReferenceType context ReferenceType from ReferenceType to ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Literal BlockStatement ThreadContext IRubyObject IRubyObject Block Ruby runtime MethodInvocation IRubyObject i MemberReference RubyFixnum one MethodInvocation true IfStatement StatementExpression StatementExpression context getRuntime from RubyFixnum MemberReference one MethodInvocation BlockStatement MethodInvocation Assignment runtime i MethodInvocation MemberReference Literal MemberReference callMethod BreakStatement block MemberReference MemberReference yield MemberReference MethodInvocation = isTrue context "<" to context i i i MemberReference Literal MemberReference callMethod context "-" one	0
MethodDeclaration Modifier BasicType isExclusive ReturnStatement public boolean MemberReference	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean BinaryOperation || BinaryOperation BinaryOperation != MemberReference Literal != MemberReference Literal output null null	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType arg8 ReferenceType arg9 ReferenceType block MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9 type block	1
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType block MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block parameter1 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign runtime context self block false	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject BasicType offset BasicType depth ReferenceType nil MethodInvocation int int IRubyObject parent MemberReference BinaryOperation MemberReference offset - MemberReference Literal nil depth 1	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType newName ReferenceType oldName MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation String String Literal MethodInvocation method MemberReference ldc method MemberReference ldc method MethodInvocation Literal MethodInvocation invokevirtual loadNil ClassReference sig newName oldName ClassReference p MemberReference MethodInvocation sig ReferenceType ReferenceType Void TYPE ClassReference ClassReference params ReferenceType ReferenceType String String	0
MethodDeclaration Modifier Annotation ReferenceType rindex FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation StatementExpression MethodInvocation name Literal reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject int pos MethodInvocation Ruby runtime MethodInvocation < MemberReference Literal StatementExpression IfStatement > MemberReference MemberReference Assignment MemberReference MemberReference MemberReference MemberReference BACKREF BACKREF CompatVersion RUBY1_8 RubyNumeric MemberReference num2int context getRuntime pos 0 Assignment BinaryOperation BlockStatement pos value realSize MemberReference MemberReference = runtime context arg0 pos arg1 MemberReference MemberReference += < MemberReference Literal IfStatement ReturnStatement pos value realSize pos value realSize pos 0 BinaryOperation StatementExpression MethodInvocation instanceof MemberReference ReferenceType MethodInvocation runtime getNil arg0 RubyRegexp context MethodInvocation getCurrentScope MethodInvocation setBackRef runtime getNil	1
MethodDeclaration Modifier Annotation ReferenceType to_a19 FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference name ElementArrayValue ThreadContext IRubyObject Ruby runtime MethodInvocation RubyArray result MethodInvocation MemberReference MemberReference MemberReference ClassCreator callEach result Literal Literal context getRuntime runtime newArray runtime context self ReferenceType MemberReference MemberReference "to_a" runtime result	1
MethodDeclaration Modifier Annotation FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public Deprecated ReferenceType mv ReferenceType afterCall ReferenceType okCall ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation SkinnyMethodAdapter Label Label Label ClassCreator mv dup mv MethodInvocation Literal MethodInvocation invokevirtual mv MemberReference mv MemberReference aload mv Literal ldc mv MethodInvocation Literal MethodInvocation invokevirtual mv MemberReference mv dup mv MemberReference aload mv MethodInvocation Literal MethodInvocation invokevirtual mv MemberReference aload mv MethodInvocation Literal MethodInvocation invokevirtual mv MemberReference mv MemberReference label mv MemberReference aload mv swap mv MemberReference aload mv swap mv MemberReference aload mv MemberReference aload mv MemberReference aload mv MethodInvocation Literal MethodInvocation invokevirtual mv MemberReference aload mv MemberReference aload mv MethodInvocation Literal MethodInvocation invokestatic mv MemberReference go_to ReferenceType ClassReference p ClassReference sig DISPATCHER_NAME_INDEX "method_missing" ClassReference p "equals" ClassReference MethodInvocation sig okCall DISPATCHER_THREADCONTEXT_INDEX ClassReference p ClassReference sig ClassReference p ClassReference MethodInvocation sig okCall DISPATCHER_THREADCONTEXT_INDEX DISPATCHER_NAME_INDEX DISPATCHER_THREADCONTEXT_INDEX ClassReference p ClassReference sig ClassReference p ClassReference MethodInvocation sig afterCall Label ReferenceType BasicType ReferenceType BasicType ClassReference params ReferenceType ReferenceType ReferenceType BasicType ClassReference ClassReference params ReferenceType ReferenceType ReferenceType ReferenceType ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference params DynamicMethod boolean String boolean ReferenceType ThreadContext IRubyObject DynamicMethod boolean ReferenceType ReferenceType ThreadContext IRubyObject RuntimeHelpers IRubyObject ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType Object IRubyObject CallType ThreadContext IRubyObject DynamicMethod String IRubyObject IRubyObject CallType Block	1
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression StatementExpression public ReferenceType warnings Assignment MethodInvocation MethodInvocation This MemberReference = support MemberReference lexer MemberReference MemberReference warnings warnings warnings warnings	0
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier FormalParameter StatementExpression private ReferenceType node MethodInvocation RegexpNode sb MethodInvocation MethodInvocation MethodInvocation Literal append MethodInvocation append Literal append MethodInvocation append " " node getValue " " node	0
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType	0
MethodDeclaration Modifier Annotation ReferenceType pred FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal ThreadContext MemberReference Literal MethodInvocation callMethod context "-" RubyFixnum MethodInvocation one context getRuntime	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Assignment MemberReference Object Object int MemberReference MethodInvocation = MemberReference MethodInvocation = yyVal yyVal support MethodInvocation ClassCreator newArrayNode yyVal support Cast Cast arg_blk_pass Cast getPosition ReferenceType MethodInvocation Cast ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference HashNode getPosition ReferenceType MemberReference Node yyVal BlockPassNode ArraySelector yyVals ListNode ArraySelector yyVals ListNode ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType SynchronizedStatement synchronized public RubyThread MemberReference LocalVariableDeclaration ForStatement LocalVariableDeclaration StatementExpression ReturnStatement ReferenceType VariableDeclarator EnhancedForControl BlockStatement ReferenceType VariableDeclarator MethodInvocation MemberReference List TypeArgument rtList ClassCreator VariableDeclaration MethodInvocation LocalVariableDeclaration IfStatement StatementExpression RubyThread ArrayCreator rtList MemberReference toArray ReferenceType ReferenceType MethodInvocation ReferenceType VariableDeclarator entrySet ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation ReferenceType MethodInvocation RubyThread ArrayList TypeArgument size Map ReferenceType entry Object key MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement BinaryOperation BlockStatement rtList MethodInvocation add RubyThread rtList size ReferenceType Entry TypeArgument TypeArgument entry getKey key Thread ReferenceType VariableDeclarator MethodInvocation ContinueStatement instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement entry getValue RubyThread ReferenceType ReferenceType Thread t Cast ! t isAlive key Future ReferenceType VariableDeclarator BinaryOperation ContinueStatement Object RubyThread ReferenceType MemberReference Future f Cast || MethodInvocation MethodInvocation Thread key ReferenceType MemberReference f f Future key	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter ThrowStatement public ReferenceType node ReferenceType context BasicType expr ClassCreator Node BodyCompiler boolean ReferenceType Literal NotCompilableException should never be encountered in	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression ReturnStatement protected IRubyObject ReferenceType caller ReferenceType selfType ReferenceType context ReferenceType self ReferenceType name ReferenceType arg ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement Assignment Assignment MethodInvocation IRubyObject RubyClass ThreadContext IRubyObject String IRubyObject entry TernaryExpression DynamicMethod method MemberReference MemberReference MemberReference ReturnStatement MemberReference MemberReference = MemberReference MemberReference = method MemberReference MemberReference MemberReference MemberReference MemberReference call BinaryOperation MethodInvocation MemberReference entry method method caller MethodInvocation lastName name cache entry context self selfType name arg != MemberReference Literal selfType MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference selfType null name context self name method arg	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile opAsgnNode getValueNode context true	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType MethodInvocation	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean Literal true	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block MethodInvocation ThreadContext IRubyObject final Block MemberReference MemberReference Literal MemberReference context self null block	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Cast MemberReference ReturnNode ReferenceType MemberReference NilImplicitNode NIL Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType f ReferenceType oth TernaryExpression name Literal IRubyObject IRubyObject MethodInvocation MethodInvocation MemberReference "|" oth isTrue f MethodInvocation getRuntime f getTrue	1
MethodDeclaration Modifier StatementExpression StatementExpression private MethodInvocation MethodInvocation initMethod voidreturn initMethod end	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType module ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby RubyModule RubyClass result MethodInvocation result ClassReference defineAnnotatedMethods result ClassReference defineAnnotatedMethods result ClassReference defineAnnotatedConstants result module Literal MethodInvocation MemberReference defineClassUnder ReferenceType ReferenceType ReferenceType module Literal fastGetClass ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR AbstractInvoker Function Function	1
MethodDeclaration FormalParameter StatementExpression ReferenceType Assignment RubyModule This MemberReference = MemberReference	0
MethodDeclaration Modifier BasicType isPrintable LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement private boolean ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement Literal Ruby runtime MethodInvocation int p MemberReference int end BinaryOperation byte bytes MemberReference Encoding enc MemberReference < MemberReference MemberReference LocalVariableDeclaration IfStatement StatementExpression true getRuntime symbolBytes begin + MemberReference MemberReference symbolBytes bytes symbolBytes encoding p end BasicType VariableDeclarator MethodInvocation ReturnStatement Assignment p symbolBytes realSize int c MethodInvocation ! enc MemberReference isPrint Literal MemberReference MethodInvocation += MemberReference MemberReference MemberReference MemberReference MemberReference codePoint c false p MemberReference MemberReference MemberReference codeLength runtime enc bytes p end runtime enc c	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int lexer MethodInvocation getConditionState yyVal end	1
MethodDeclaration FormalParameter StatementExpression ReferenceType Assignment RubyModule This MemberReference = MemberReference	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter SwitchStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ThreadContext IRubyObject RubyModule String IRubyObject Block args length Literal ReturnStatement Literal ReturnStatement ReturnStatement 1 MethodInvocation 2 MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call This MemberReference MemberReference MemberReference Literal Literal raiseArgumentError context self clazz name ArraySelector args block context self clazz name ArraySelector args ArraySelector args block context name args length 1 2 Literal Literal Literal 0 0 1	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public GlobalVariable ReferenceType runtime ReferenceType name ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby String GlobalVariable variable ClassCreator variable ClassCreator variable ReferenceType Literal ReferenceType MemberReference MemberReference MemberReference GlobalVariable null runtime variable name	0
MethodDeclaration Modifier Exception AssertStatement AssertStatement public MethodInvocation MethodInvocation runtime getObject runtime getGlobalVariables	1
MethodDeclaration Modifier voidreturn StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference RETURN	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context Modifier ReferenceType block TernaryExpression name Literal frame Literal final ThreadContext final Block MethodInvocation MethodInvocation MethodInvocation true block isGiven MemberReference MemberReference MethodInvocation This Literal enumeratorize context block context getRuntime	0
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context BasicType value MethodInvocation ThreadContext int Util MethodInvocation MemberReference newUnsigned8 context getRuntime value	1
MethodDeclaration Modifier Annotation ReferenceType toJava FormalParameter ReturnStatement public Override Object ReferenceType target MethodInvocation Class JavaUtil MethodInvocation MemberReference This MemberReference target target	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression TryStatement public Object ReferenceType arg0 ReferenceType arg1 MethodInvocation ReturnStatement CatchClause CatchClause CatchClause CatchClause Object Object Literal checkArity MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement 2 constructor MemberReference MemberReference newInstance IllegalArgumentException iae MethodInvocation IllegalAccessException iae MethodInvocation InvocationTargetException ite MethodInvocation Throwable t MethodInvocation arg0 arg1 MemberReference MemberReference MemberReference handlelIllegalArgumentEx MemberReference handleIllegalAccessEx MemberReference MemberReference handleInvocationTargetEx MemberReference MemberReference handleThrowable iae arg0 arg1 iae ite constructor t constructor	1
MethodDeclaration Modifier backrefAssignError FormalParameter IfStatement public ReferenceType node BinaryOperation BlockStatement IfStatement Node instanceof MemberReference ReferenceType LocalVariableDeclaration ThrowStatement BinaryOperation BlockStatement node NthRefNode ReferenceType VariableDeclarator ClassCreator instanceof MemberReference ReferenceType LocalVariableDeclaration ThrowStatement String varName BinaryOperation ReferenceType MemberReference MethodInvocation BinaryOperation MemberReference node BackRefNode ReferenceType VariableDeclarator ClassCreator + Literal Cast SyntaxException PID INVALID_ASSIGNMENT node getPosition + BinaryOperation Literal varName String varName BinaryOperation ReferenceType MemberReference MethodInvocation BinaryOperation MemberReference "$" ReferenceType MemberReference + Literal MemberReference '.' + Literal Cast SyntaxException PID INVALID_ASSIGNMENT node getPosition + BinaryOperation Literal varName NthRefNode node "Can't set variable " varName "$" ReferenceType MemberReference + Literal MemberReference '.' BackRefNode node "Can't set variable " varName	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference	0
MethodDeclaration Modifier ReferenceType newProxyClass FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter InvocationTargetException IfStatement IfStatement IfStatement LocalVariableDeclaration StatementExpression ForStatement IfStatement LocalVariableDeclaration IfStatement ReturnStatement static JavaProxyClass ReferenceType runtime ReferenceType loader ReferenceType targetClassName ReferenceType superClass ReferenceType interfaces ReferenceType names BinaryOperation BlockStatement BinaryOperation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation ForControl BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference Ruby ClassLoader String Class Class Set == MemberReference Literal StatementExpression == MemberReference Literal StatementExpression == MemberReference Literal StatementExpression Set key ClassCreator key MemberReference add VariableDeclaration BinaryOperation MemberReference StatementExpression != MemberReference Literal StatementExpression JavaProxyClass proxyClass Cast == MemberReference Literal IfStatement StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression StatementExpression proxyClass loader null Assignment superClass null Assignment interfaces null Assignment ReferenceType superClass BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation names null MethodInvocation ReferenceType MethodInvocation proxyClass null BinaryOperation BlockStatement MethodInvocation ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator Assignment MethodInvocation MemberReference ClassReference = MemberReference ClassReference = MemberReference MemberReference = HashSet int i Literal i interfaces length key MemberReference add key MemberReference addAll JavaProxyClass proxies MemberReference get == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression MemberReference MemberReference MemberReference Map methods ClassCreator MemberReference MemberReference MemberReference MemberReference Type selfType MethodInvocation MemberReference MethodInvocation = proxies MemberReference MemberReference put loader MethodInvocation ReferenceType superClass ReferenceType interfaces 0 ArraySelector interfaces names key targetClassName null ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment runtime targetClassName superClass ReferenceType superClass interfaces methods names Type BinaryOperation getType proxyClass MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference generate key proxyClass getClassLoader Object MemberReference String pkg MethodInvocation String fullName MethodInvocation int ix MethodInvocation String MemberReference != MemberReference Literal StatementExpression MemberReference BinaryOperation = HashMap + BinaryOperation Literal loader targetClassName superClass interfaces methods selfType i MemberReference superClass getName fullName Literal lastIndexOf fullName ix - 1 Assignment targetClassName + BinaryOperation MethodInvocation + Literal MethodInvocation ";" superClass '.' MemberReference MethodInvocation = + BinaryOperation Literal "L" MemberReference fullName BinaryOperation substring + BinaryOperation MemberReference targetClassName + MemberReference Literal + MemberReference Literal ix 1 pkg "."	1
MethodDeclaration Modifier Annotation ReferenceType instance_eval FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block MethodInvocation name Literal frame Literal ThreadContext Block MemberReference MethodInvocation MemberReference specificEval "instance_eval" true context block	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement private static IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block ReferenceType methodName Modifier ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement ThreadContext IRubyObject final Block String final Ruby runtime MethodInvocation block isGiven LocalVariableDeclaration StatementExpression ReturnStatement ReturnStatement context getRuntime Modifier ReferenceType VariableDeclarator MethodInvocation MemberReference MethodInvocation final RubyArray result MethodInvocation MemberReference MemberReference MemberReference ClassCreator callEach result MemberReference MemberReference MemberReference enumeratorize runtime newArray runtime context self ReferenceType MethodDeclaration runtime self methodName BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference StatementExpression MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation IRubyObject value MethodInvocation result MethodInvocation runtime getNil MemberReference MemberReference checkArgs block MemberReference MemberReference yield result MemberReference append runtime largs ctx larg value	0
MethodDeclaration Modifier ReferenceType FormalParameter SwitchStatement final ReferenceType type MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase NativeType type VOID ReturnStatement BOOL ReturnStatement CHAR ReturnStatement UCHAR ReturnStatement SHORT ReturnStatement USHORT ReturnStatement INT ReturnStatement UINT ReturnStatement FLOAT ReturnStatement LONG IfStatement ThrowStatement ULONG IfStatement ThrowStatement POINTER IfStatement ThrowStatement STRING IfStatement ThrowStatement ThrowStatement MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference BinaryOperation BlockStatement ClassCreator BinaryOperation BlockStatement ClassCreator BinaryOperation BlockStatement ClassCreator BinaryOperation BlockStatement ClassCreator ClassCreator INSTANCE INSTANCE INSTANCE INSTANCE INSTANCE INSTANCE INSTANCE INSTANCE INSTANCE == MethodInvocation Literal ReturnStatement ReferenceType Literal == MethodInvocation Literal ReturnStatement ReferenceType Literal == MethodInvocation Literal ReturnStatement ReferenceType Literal == MethodInvocation Literal ReturnStatement ReferenceType Literal ReferenceType BinaryOperation Platform MethodInvocation getPlatform 32 MemberReference IllegalArgumentException is too for int parameter" Platform MethodInvocation getPlatform 32 MemberReference IllegalArgumentException is too for int parameter" Platform MethodInvocation getPlatform 32 MemberReference IllegalArgumentException is too for int parameter" Platform MethodInvocation getPlatform 32 MemberReference IllegalArgumentException is too for int parameter" IllegalArgumentException + Literal MemberReference INSTANCE INSTANCE addressSize INSTANCE addressSize INSTANCE "Unknown type " type	0
MethodDeclaration Modifier Annotation BasicType FormalParameter FormalParameter ReturnStatement public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyNumeric	0
MethodDeclaration Modifier Annotation ReferenceType yield FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override IRubyObject ReferenceType context ReferenceType value ReferenceType ReferenceType type MethodInvocation ThreadContext IRubyObject Type context MethodInvocation getRuntime MemberReference MemberReference Literal value out of	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast attrset ReferenceType MemberReference ReferenceType Cast Node ArraySelector yyVals String ReferenceType MemberReference BinaryOperation Token ArraySelector yyVals + Literal MemberReference BinaryOperation - 2 yyTop + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg0 ReferenceType block ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference name Literal frame Literal module Literal visibility MemberReference reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject Block RubyString str Cast ! str MethodInvocation MemberReference MemberReference MemberReference gsub_bang StatementExpression str true true PRIVATE CompatVersion RUBY1_8 ReferenceType MethodInvocation isNil context arg0 block MethodInvocation RubyString MethodInvocation MemberReference MethodInvocation getLastlineString context MethodInvocation getCurrentScope dup context context getRuntime MemberReference setLastLine str	0
MethodDeclaration Modifier ReferenceType getMemoryIO FormalParameter ThrowStatement final public BasicType offset MethodInvocation long ex	0
MethodDeclaration Modifier Annotation setVisibility FormalParameter IfStatement StatementExpression public Override ReferenceType visibility BinaryOperation StatementExpression MethodInvocation Visibility == MemberReference Literal MethodInvocation compiledMethod MemberReference setVisibility compiledMethod null initializeMethod visibility	1
MethodDeclaration Modifier Annotation ReferenceType pos FormalParameter TryStatement public JRubyMethod ElementValuePair RubyFixnum ReferenceType context ReturnStatement CatchClause CatchClause CatchClause CatchClause name ElementArrayValue ThreadContext MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement Literal Literal context MethodInvocation getRuntime InvalidValueException ex MethodInvocation BadDescriptorException bde MethodInvocation PipeException e MethodInvocation IOException e MethodInvocation MethodInvocation newFixnum context MethodInvocation getRuntime context MethodInvocation getRuntime context MethodInvocation getRuntime context MethodInvocation getRuntime MethodInvocation MethodInvocation getOpenFileChecked newErrnoEINVALError newErrnoEBADFError newErrnoESPIPEError MethodInvocation newIOError getMainStream e getMessage	1
MethodDeclaration Modifier ReferenceType getBlock ReturnStatement public Block MemberReference block	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby RubyClass MethodInvocation runtime MemberReference MethodInvocation includeModule ClassReference defineAnnotatedMethods runtime Literal MethodInvocation MemberReference defineClass runtime ReferenceType runtime getObject RubyDir	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression final public BasicType buffer BasicType offset BasicType value Assignment Assignment Assignment Assignment byte int int MemberReference Cast = MemberReference Cast = MemberReference Cast = MemberReference Cast = ArraySelector buffer BasicType BinaryOperation ArraySelector buffer BasicType BinaryOperation ArraySelector buffer BasicType BinaryOperation ArraySelector buffer BasicType BinaryOperation BinaryOperation byte >> MemberReference Literal BinaryOperation byte >> MemberReference Literal BinaryOperation byte >> MemberReference Literal BinaryOperation byte >> MemberReference Literal + MemberReference Literal value 24 + MemberReference Literal value 16 + MemberReference Literal value 8 + MemberReference Literal value 0 offset 0 offset 1 offset 2 offset 3	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name arg0 Block	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement BlockStatement MemberReference Object Object int instanceof Cast ReferenceType StatementExpression StatementExpression yyVal ReferenceType MemberReference SelfNode Assignment Assignment Node ArraySelector yyVals MemberReference MethodInvocation = MemberReference MethodInvocation = BinaryOperation yyVal support ClassCreator Cast Literal new_fcall yyVal support Cast ClassCreator Cast Literal new_call + Literal MemberReference ReferenceType Literal MethodInvocation ReferenceType MemberReference null ReferenceType MemberReference ReferenceType Literal MethodInvocation ReferenceType MemberReference null - 3 yyTop Token "[]" Cast getPosition Node ArraySelector yyVals Node ArraySelector yyVals Token "[]" Cast getPosition Node ArraySelector yyVals ReferenceType MemberReference BinaryOperation BinaryOperation ReferenceType MemberReference BinaryOperation Node ArraySelector yyVals + Literal MemberReference + Literal MemberReference Node ArraySelector yyVals + Literal MemberReference BinaryOperation - 1 yyTop - 3 yyTop BinaryOperation - 1 yyTop + Literal MemberReference + Literal MemberReference - 3 yyTop - 3 yyTop	1
MethodDeclaration Modifier ReferenceType setBackRef FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType backref MethodInvocation BlockStatement Assignment IRubyObject ! staticScope ReturnStatement This MemberReference = MethodInvocation MemberReference backref parent MemberReference setBackRef backref backref	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType block MethodInvocation This ThreadContext Block MemberReference MemberReference context block	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ForStatement IfStatement StatementExpression LocalVariableDeclaration IfStatement ReturnStatement protected LoadServiceResource ReferenceType name ReferenceType VariableDeclarator BinaryOperation BlockStatement ForControl BlockStatement BinaryOperation ReturnStatement MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement Literal String ClassLoader classLoader MethodInvocation && MethodInvocation BinaryOperation StatementExpression VariableDeclaration MethodInvocation LocalVariableDeclaration IfStatement IfStatement StatementExpression LocalVariableDeclaration IfStatement || BinaryOperation BinaryOperation Literal Literal MemberReference debugLogTry URL loc MethodInvocation MemberReference isRequireable LocalVariableDeclaration StatementExpression ReturnStatement null runtime getJRubyClassLoader Ruby isSecurityRestricted == MemberReference Literal Assignment ReferenceType VariableDeclarator pathIter hasNext ReferenceType VariableDeclarator BinaryOperation ContinueStatement BinaryOperation ContinueStatement MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement == MethodInvocation Literal && BinaryOperation BinaryOperation null name classLoader MemberReference getResource loc ReferenceType VariableDeclarator MethodInvocation MemberReference classLoader null MemberReference MethodInvocation = Iterator pathIter MethodInvocation String entry MethodInvocation == MethodInvocation Literal || BinaryOperation BinaryOperation Literal BinaryOperation debugLogTry URL loc MethodInvocation MemberReference isRequireable LocalVariableDeclaration StatementExpression ReturnStatement name Literal charAt '/' > MethodInvocation Literal == MethodInvocation Literal name LoadServiceResource foundResource ClassCreator MemberReference debugLogFound foundResource classLoader runtime MethodInvocation getInstanceConfig MethodInvocation pathIter MethodInvocation next entry length 0 == MethodInvocation Literal && BinaryOperation BinaryOperation + BinaryOperation MemberReference classLoader BinaryOperation getResource loc ReferenceType VariableDeclarator MethodInvocation MemberReference 0 name length 1 name Literal charAt ':' ReferenceType MemberReference MethodInvocation foundResource getLoader iterator toString entry Literal charAt '/' > MethodInvocation Literal == MethodInvocation Literal + MemberReference Literal name + BinaryOperation MemberReference LoadServiceResource foundResource ClassCreator MemberReference debugLogFound foundResource 1 LoadServiceResource loc loc getPath 0 entry length 1 entry Literal charAt ':' entry "/" + MemberReference Literal name ReferenceType MemberReference MethodInvocation foundResource 1 entry "/" LoadServiceResource loc loc getPath	1
MethodDeclaration Modifier Annotation Annotation ReferenceType hash ReturnStatement public JRubyMethod ElementValuePair Override RubyFixnum MethodInvocation name Literal MethodInvocation getRuntime MemberReference newFixnum id	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context Modifier ReferenceType block TernaryExpression name Literal frame Literal final ThreadContext final Block MethodInvocation MethodInvocation MethodInvocation "reject!" true block isGiven MemberReference MemberReference MethodInvocation This Literal enumeratorize context block context getRuntime "reject!"	1
MethodDeclaration Modifier ReferenceType checkEncoding FormalParameter FormalParameter IfStatement StatementExpression LocalVariableDeclaration IfStatement IfStatement ReturnStatement private Encoding ReferenceType str BasicType warn BinaryOperation BlockStatement MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement BinaryOperation BlockStatement MemberReference RubyString boolean == MethodInvocation MemberReference ThrowStatement check Encoding enc MethodInvocation ! enc isAsciiCompatible IfStatement MethodInvocation BlockStatement && BinaryOperation BinaryOperation StatementExpression enc str scanForCodeRange StringSupport CR_BROKEN MethodInvocation str getEncoding BinaryOperation StatementExpression ! IfStatement StatementExpression && BinaryOperation BinaryOperation != MethodInvocation MemberReference MethodInvocation MethodInvocation getRuntime != MemberReference MethodInvocation MethodInvocation BinaryOperation StatementExpression Assignment && MemberReference MethodInvocation != MemberReference MemberReference str scanForCodeRange StringSupport CR_7BIT MethodInvocation MethodInvocation getRuntime BinaryOperation newArgumentError enc pattern getEncoding MethodInvocation MemberReference MemberReference && BinaryOperation BinaryOperation MethodInvocation MemberReference MethodInvocation = warn enc ASCIIEncoding INSTANCE getWarnings MemberReference BinaryOperation warn + Literal MethodInvocation getRuntime pattern enc != MemberReference MethodInvocation || MethodInvocation BinaryOperation MethodInvocation MemberReference MemberReference enc pattern getEncoding ID + BinaryOperation Literal "invalid byte in " str getEncoding enc pattern getEncoding ! pattern MethodInvocation getEncoding != MethodInvocation MemberReference getRuntime pattern enc + Literal MemberReference " string" isAsciiCompatible str scanForCodeRange StringSupport CR_7BIT "regexp match against to " enc	1
MethodDeclaration Modifier Annotation ReferenceType _close FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context TernaryExpression frame Literal visibility MemberReference ThreadContext MethodInvocation SuperMethodInvocation MethodInvocation true Visibility PROTECTED ! close context MethodInvocation getRuntime getNil	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType name ReferenceType value MethodInvocation Cast name Literal required Literal IRubyObject IRubyObject ensureInstanceVariablesSettable ReferenceType MethodInvocation 2 IRubyObject MethodInvocation MemberReference MethodInvocation validateInstanceVariable value name asJavaString	1
MethodDeclaration Modifier ReferenceType newStruct FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement static final com ReferenceType ReferenceType runtime ReferenceType structMembers ReferenceType VariableDeclarator BasicType VariableDeclarator EnhancedForControl BlockStatement ClassCreator kenai ReferenceType Ruby Collection TypeArgument com ReferenceType fields ArrayCreator int i Literal VariableDeclaration MemberReference LocalVariableDeclaration IfStatement IfStatement StatementExpression ReferenceType MemberReference jffi ReferenceType ReferenceType kenai ReferenceType ReferenceType MethodInvocation 0 ReferenceType VariableDeclarator structMembers ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement Assignment com ReferenceType fields Struct StructLayout ReferenceType jffi ReferenceType com ReferenceType structMembers size StructLayout ReferenceType m com ReferenceType instanceof MemberReference ReferenceType StatementExpression StatementExpression == MemberReference Literal ThrowStatement MemberReference MemberReference = kenai ReferenceType Member Type kenai ReferenceType Member kenai ReferenceType m StructLayout ReferenceType Assignment Assignment null MethodInvocation ArraySelector fields jffi ReferenceType jffi ReferenceType jffi ReferenceType MemberReference MethodInvocation = MemberReference MethodInvocation = runtime BinaryOperation newTypeError MemberReference Struct Type Type MemberReference Cast newStruct FFIUtil MethodInvocation getFFIType + Literal MemberReference ++ i runtime ReferenceType MemberReference m getNativeType "Unsupported Struct field type " m StructLayout ReferenceType m	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType block ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement BlockStatement name Literal module Literal visibility MemberReference ThreadContext IRubyObject Block Ruby runtime MethodInvocation int gid MethodInvocation int MethodInvocation block isGiven TryStatement StatementExpression StatementExpression ReturnStatement "switch" true Visibility PRIVATE context getRuntime runtime MethodInvocation getPosix runtime MethodInvocation getPosix StatementExpression StatementExpression ReturnStatement StatementExpression StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation runtime MethodInvocation getPosix runtime MethodInvocation getPosix RubyFixnum MemberReference zero runtime MethodInvocation getPosix runtime MethodInvocation getPosix block MemberReference MethodInvocation yield runtime MethodInvocation getPosix runtime MethodInvocation getPosix MemberReference setegid MemberReference setgid runtime MemberReference setegid MemberReference setgid context runtime getNil MemberReference setegid MemberReference setgid gid gid gid	1
MethodDeclaration Modifier ReferenceType convertToString ReturnStatement public RubyString Cast ReferenceType MethodInvocation RubyString TypeConverter This MethodInvocation Literal convertToType MethodInvocation getRuntime "to_str" getString	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType arg Modifier ReferenceType block TernaryExpression name Literal ThreadContext IRubyObject IRubyObject final Block MethodInvocation MethodInvocation MethodInvocation block isGiven MemberReference MemberReference MemberReference MemberReference each_slice MethodInvocation MemberReference Literal MemberReference enumeratorize context self arg block context getRuntime self arg	1
MethodDeclaration Modifier ReferenceType toJava FormalParameter ReturnStatement public Object ReferenceType cls MethodInvocation Class JavaUtil MethodInvocation MethodInvocation MemberReference MethodInvocation getRuntime getValue cls getCurrentContext	0
MethodDeclaration Modifier BasicType isWritable ReturnStatement public boolean BinaryOperation || BinaryOperation BinaryOperation != BinaryOperation Literal != BinaryOperation Literal & MemberReference MemberReference 0 & MemberReference MemberReference 0 flags RDWR flags	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement final public RubyString ReferenceType runtime MethodInvocation Ruby runtimeCache MemberReference Literal getString runtime 2	0
MethodDeclaration Modifier ReferenceType iterator ReturnStatement public Iterator TypeArgument MethodInvocation ReferenceType iterator String	0
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType ReferenceType block MethodInvocation MethodInvocation MethodInvocation Ruby ThreadContext IRubyObject IRubyObject IRubyObject Block pre MethodInvocation Literal get pre MethodInvocation Literal get MemberReference MemberReference MemberReference MemberReference Literal MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign 0 MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign 1 runtime context self block 2 runtime context self block false runtime context self block false	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement MethodInvocation MemberReference Object Object int != Cast Literal IfStatement support MethodInvocation getResult yyVal ReferenceType MemberReference null BinaryOperation BlockStatement BlockStatement MethodInvocation Node ArraySelector yyVals instanceof Cast ReferenceType StatementExpression StatementExpression support Cast MethodInvocation BinaryOperation ReferenceType MemberReference BlockNode MethodInvocation MethodInvocation ReferenceType MemberReference Cast getPosition + Literal MemberReference Node ArraySelector yyVals support Cast checkUselessStatement support Cast checkUselessStatement Node ArraySelector yyVals ReferenceType MemberReference 0 yyTop BinaryOperation ReferenceType MemberReference ReferenceType MemberReference BinaryOperation Node ArraySelector yyVals + Literal MemberReference BlockNode ArraySelector yyVals Node ArraySelector yyVals + Literal MemberReference BinaryOperation 0 yyTop BinaryOperation BinaryOperation 0 yyTop + Literal MemberReference + Literal MemberReference + Literal MemberReference 0 yyTop 0 yyTop 0 yyTop	1
MethodDeclaration Modifier BasicType IOException LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression IfStatement StatementExpression StatementExpression ReturnStatement private int BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator MethodInvocation Assignment BinaryOperation BlockStatement Assignment MethodInvocation MemberReference int c MethodInvocation int int func Literal == MemberReference Literal StatementExpression StatementExpression ByteList markerValue || BinaryOperation BinaryOperation IfStatement StatementExpression StatementExpression WhileStatement IfStatement IfStatement StatementExpression StatementExpression StatementExpression DoStatement StatementExpression ByteList lastLine MethodInvocation lastLine Literal append MemberReference ClassCreator = == MemberReference Literal StatementExpression ReturnStatement MemberReference ClassCreator = getPosition Tokens src read 0 c '-' Assignment Assignment || BinaryOperation BinaryOperation == MemberReference Literal BinaryOperation BlockStatement IfStatement Assignment Assignment BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation BlockStatement Assignment Assignment Assignment BinaryOperation BlockStatement MethodInvocation src '\n' lex_strterm ReferenceType MemberReference MemberReference MemberReference '`' Assignment MemberReference yaccValue ReferenceType Literal MethodInvocation MemberReference MethodInvocation = MemberReference MemberReference = == MemberReference Literal == MemberReference Literal c '`' == MemberReference Literal StatementExpression BinaryOperation BlockStatement BlockStatement MemberReference ClassCreator = MemberReference MemberReference = && BinaryOperation BinaryOperation StatementExpression == MemberReference MemberReference ThrowStatement ! MemberReference isIdentifierChar StatementExpression IfStatement ReturnStatement MemberReference ClassCreator = MemberReference Literal = MemberReference MemberReference |= && BinaryOperation MethodInvocation StatementExpression src MemberReference unread markerValue func lastLine MemberReference ClassCreator = Tokens Token "\"" getPosition c src read func STR_FUNC_INDENT c '\'' c '"' c '\'' Assignment == MemberReference Literal StatementExpression StatementExpression markerValue ReferenceType c != Assignment MemberReference != MemberReference MemberReference MethodInvocation c EOF ClassCreator c MethodInvocation BinaryOperation BlockStatement Literal markerValue ReferenceType '"' func != Assignment MemberReference MemberReference isIdentifierChar MethodInvocation c yaccValue ReferenceType Literal MethodInvocation MemberReference MemberReference |= c '"' Assignment Assignment ByteList MemberReference MethodInvocation = EOF c markerValue MemberReference append ReferenceType MemberReference MethodInvocation MethodInvocation Literal src MemberReference unread != BinaryOperation Literal StatementExpression 0 ByteList MemberReference MethodInvocation = EOF c markerValue MemberReference append Token getPosition func MemberReference MemberReference |= MemberReference MemberReference |= c src read c SyntaxException PID getPosition getCurrentLine "unterminated document c & MemberReference MemberReference 0 MethodInvocation c src read c func func func STR_FUNC_INDENT src Literal unread '-'	1
MethodDeclaration Modifier ReferenceType number FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement private IRubyObject ReferenceType runtime BasicType s ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Ruby long StringBuilder result ClassCreator result MethodInvocation Cast append result MethodInvocation Cast append runtime MethodInvocation newString ReferenceType Cast append BasicType BinaryOperation Cast append BasicType BinaryOperation result toString StringBuilder BasicType BinaryOperation char & BinaryOperation Literal BasicType BinaryOperation char & BinaryOperation Literal char & BinaryOperation Literal >> MemberReference Literal 0xff char & MemberReference Literal >> MemberReference Literal 0xff >> MemberReference Literal 0xff s 24 s 0xff s 8 s 16	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject MemberReference This MethodInvocation CompatVersion RUBY1_9 context RubyRational MemberReference MemberReference intValue context other	0
MethodDeclaration Modifier FormalParameter StatementExpression private ReferenceType node MethodInvocation ClassVarDeclNode sb MethodInvocation Literal append MethodInvocation append " " node getName	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public ReferenceType context ReferenceType MethodInvocation ThreadContext String runtimeCache MemberReference MemberReference Literal context 9	0
MethodDeclaration Modifier ReferenceType getOutput ReturnStatement public FileChannel MemberReference	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyModule MemberReference	0
MethodDeclaration Modifier BasicType peek FormalParameter IOException LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public boolean BasicType to BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation Assignment BinaryOperation int int MemberReference int c MethodInvocation MemberReference unread MemberReference MemberReference = == MemberReference MemberReference read c c to	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement public ReferenceType context ReferenceType ReferenceType file BasicType line ReferenceType name ReferenceType type MethodInvocation BlockStatement ThreadContext String String int String IRubyObject ! context IfStatement IfStatement LocalVariableDeclaration StatementExpression TryStatement BinaryOperation StatementExpression BinaryOperation StatementExpression ReferenceType VariableDeclarator MethodInvocation StatementExpression StatementExpression == MemberReference Literal Assignment == MemberReference Literal Assignment MethodInvocation context MethodInvocation MethodInvocation file null MemberReference Literal = type null MemberReference MethodInvocation = This MethodInvocation MemberReference ArrayCreator call context file type getFalse Ruby context context ReferenceType ArrayInitializer IRubyObject MethodInvocation MethodInvocation MethodInvocation TernaryExpression MemberReference MemberReference MemberReference newString MemberReference newString MemberReference newFixnum BinaryOperation MethodInvocation MethodInvocation type file line != MemberReference Literal MemberReference getNil name null name	1
MethodDeclaration Modifier LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression public Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation final ByteArrayOutputStream err ClassCreator RubyInstanceConfig config ClassCreator Ruby ruby MethodInvocation RubyException exception Cast ruby MemberReference ReferenceType ReferenceType StatementExpression StatementExpression StatementExpression StatementExpression Ruby MemberReference newInstance ReferenceType MethodInvocation exception ByteArrayOutputStream RubyInstanceConfig MethodInvocation MethodInvocation MethodInvocation MethodInvocation config RubyException runtime MethodInvocation Literal getClass MemberReference MemberReference ClassCreator setError Literal MethodInvocation ArrayCreator MemberReference newInstance "NameError" System in System out ReferenceType MemberReference false ruby getCurrentContext ReferenceType ArrayInitializer Block PrintStream err IRubyObject MethodInvocation ruby Literal newString "A	1
MethodDeclaration Modifier ReferenceType createTempFile FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration ReturnStatement static public File ReferenceType prefix ReferenceType suffix ReferenceType directory ReferenceType VariableDeclarator ClassCreator String String File File file MethodInvocation ReferenceType MethodInvocation File MemberReference MemberReference MemberReference createTempFile NormalizedFile file getPath prefix suffix directory	0
MethodDeclaration Modifier ReferenceType getPosition ReturnStatement public ISourcePosition MethodInvocation src getPosition	0
MethodDeclaration Modifier ReferenceType newLoadError FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException message	0
MethodDeclaration Modifier Annotation FormalParameter StatementExpression public Override ReferenceType l MethodInvocation List TypeArgument MemberReference ReferenceType l Variable	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement final public Override IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType arg1 ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement ThreadContext IRubyObject RubyModule String IRubyObject HeapInvocationBuffer buffer ClassCreator LocalVariableDeclaration TryStatement StatementExpression ReturnStatement ReferenceType MemberReference ReferenceType VariableDeclarator StatementExpression ReturnStatement StatementExpression MethodInvocation MethodInvocation HeapInvocationBuffer function invocation ClassCreator MethodInvocation MethodInvocation MethodInvocation m1 MemberReference MemberReference MemberReference marshal functionInvoker MethodInvocation MemberReference MemberReference invoke ReferenceType MemberReference m1 MemberReference MemberReference MemberReference marshal functionInvoker MethodInvocation MemberReference MemberReference invoke invocation finish context buffer arg1 context getRuntime function buffer context invocation buffer arg1 context getRuntime function buffer	1
MethodDeclaration Modifier Annotation BasicType FormalParameter ReturnStatement final public Override boolean ReferenceType other This IRubyObject MethodInvocation MemberReference equals other	0
MethodDeclaration Modifier ReferenceType ReturnStatement public DynamicMethod MemberReference	0
MethodDeclaration Modifier ReferenceType yield FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType value ReferenceType self ReferenceType BasicType aValue ReferenceType ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject RubyModule boolean Block ReferenceType MemberReference ArrayCreator MemberReference call Type context ReferenceType ArrayInitializer Block IRubyObject MemberReference value	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public ChannelDescriptor BasicType MethodInvocation int MethodInvocation getRuntime MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType str MethodInvocation name Literal required Literal module Literal ThreadContext IRubyObject IRubyObject MemberReference MemberReference MemberReference 1 true context recv str	0
MethodDeclaration Modifier Annotation ReferenceType open FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement TryStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator MethodInvocation ReturnStatement ReturnStatement IfStatement frame Literal rest Literal meta Literal ThreadContext IRubyObject IRubyObject Block RubyTCPSocket sock Cast ! block isGiven MemberReference MethodInvocation MethodInvocation StatementExpression true true true ReferenceType MethodInvocation sock block MemberReference MemberReference yield isOpen MethodInvocation RubyTCPSocket recv MemberReference Literal MemberReference callMethod context sock sock close context args	1
MethodDeclaration Modifier BasicType compare FormalParameter FormalParameter ReturnStatement public int ReferenceType o1 ReferenceType o2 MethodInvocation IRubyObject IRubyObject RubyFixnum MemberReference fix2int ArraySelector MethodInvocation o1 Literal MemberReference Literal MemberReference callMethod 1 localContext "<=>" ArraySelector o2 Literal 1	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block MethodInvocation MethodInvocation name Literal required Literal frame Literal optional Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject Block context MethodInvocation MethodInvocation getRuntime RuntimeHelpers MemberReference MemberReference Literal MemberReference MemberReference invoke 1 true 1 true PRIVATE Literal require context recv args block	0
MethodDeclaration Modifier FormalParameter FormalParameter ThrowStatement final public BasicType offset BasicType value MethodInvocation long double ex	0
MethodDeclaration Modifier Annotation ReferenceType uid_set FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg MethodInvocation name Literal required Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject MethodInvocation MemberReference uid_set 1 true Visibility PRIVATE context getRuntime arg	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Cast MemberReference Object Object int MemberReference Cast = ReferenceType MemberReference yyVal yyVal ReferenceType MemberReference ISourcePositionHolder yyVal ListNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier LocalVariableDeclaration StatementExpression public ReferenceType VariableDeclarator MethodInvocation formatter MethodInvocation Literal MethodInvocation assertEquals Literal " formatter Literal format	0
MethodDeclaration Modifier ReferenceType sig FormalParameter FormalParameter FormalParameter ReturnStatement static public String ReferenceType retval ReferenceType descriptor ReferenceType params BinaryOperation Class String Class + MethodInvocation MethodInvocation MemberReference MemberReference MemberReference ci descriptor params retval	0
MethodDeclaration Modifier StatementExpression protected MethodInvocation close	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType javaModule ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference Ruby RubyModule RubyClass result MethodInvocation MemberReference MemberReference registerRubyMethods result ClassReference defineAnnotatedMethods result javaModule Literal MethodInvocation MemberReference defineClassUnder runtime result ReferenceType runtime getObject ObjectAllocator NOT_ALLOCATABLE_ALLOCATOR JavaProxyClass	0
MethodDeclaration Modifier Annotation ReferenceType get_proxy_class FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType arg0 MethodInvocation module Literal visibility MemberReference IRubyObject IRubyObject Java MemberReference MemberReference get_proxy_class true Visibility PRIVATE recv arg0	1
MethodDeclaration Modifier IOException IfStatement StatementExpression StatementExpression private MethodInvocation BlockStatement MethodInvocation Assignment descriptor isSeekable LocalVariableDeclaration IfStatement buffer clear MemberReference Literal = ReferenceType VariableDeclarator MethodInvocation BlockStatement reading false FileChannel fileChannel Cast buffer hasRemaining StatementExpression ReferenceType MethodInvocation MethodInvocation FileChannel descriptor getChannel fileChannel BinaryOperation position - MethodInvocation MethodInvocation fileChannel position buffer remaining	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation MemberReference MethodInvocation ThreadContext IRubyObject Block MemberReference MemberReference Literal checkContext ++ ArraySelector result runtime getNil localContext ctx "count" Literal 0	0
MethodDeclaration Modifier FormalParameter StatementExpression IfStatement public ReferenceType module Assignment BinaryOperation BlockStatement RubyModule This MemberReference = == MemberReference Literal ForStatement MemberReference module null ForControl BlockStatement VariableDeclaration BinaryOperation Assignment IfStatement ReferenceType VariableDeclarator != MemberReference Literal MemberReference MethodInvocation = BinaryOperation BlockStatement scope MethodInvocation scope null scope scope != MemberReference Literal StatementExpression ReturnStatement scope null Assignment MemberReference MemberReference = scope	0
MethodDeclaration Modifier Annotation ReferenceType pointer FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MemberReference name Literal ThreadContext memory	0
MethodDeclaration Modifier ReferenceType dataGetStruct ReturnStatement synchronized public Object MethodInvocation Literal	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference runtime	0
MethodDeclaration Modifier isNil FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType ReferenceType MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BranchCallback BranchCallback method MethodInvocation Literal MethodInvocation Label ClassCreator Label ClassCreator method MemberReference This branch method MemberReference go_to method MemberReference label This branch method MemberReference label ClassReference p ClassReference sig ReferenceType ReferenceType ReferenceType BasicType Label Label IRubyObject boolean	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement private RubyString ReferenceType runtime MethodInvocation Ruby RubyString MemberReference MemberReference runtime symbolBytes	0
MethodDeclaration Modifier ReferenceType dup LocalVariableDeclaration StatementExpression ReturnStatement public DynamicMethod ReferenceType VariableDeclarator Assignment MemberReference ClassCreator MemberReference This = ReferenceType MethodInvocation MemberReference MemberReference MemberReference MethodInvocation MemberReference box MemberReference getImplementationClass staticScope body argsNode getVisibility position box	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType arg0 ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block MemberReference MemberReference MemberReference MemberReference ArrayCreator MemberReference call context self klazz name ReferenceType ArrayInitializer block IRubyObject MemberReference arg0	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public ReferenceType context ReferenceType descriptor MethodInvocation ThreadContext String runtimeCache This MemberReference Literal MemberReference context 3 descriptor	0
MethodDeclaration Modifier Annotation ReferenceType getFastSingletonMethod FormalParameter FormalParameter ReturnStatement public Deprecated Callback ReferenceType method ReferenceType arg1 ClassCreator String Class ReferenceType MemberReference MemberReference ArrayCreator Literal Literal MethodInvocation Literal ReflectionCallback type method ReferenceType ArrayInitializer false true Arity singleArgument true Class MemberReference arg1	1
MethodDeclaration Modifier Annotation ReferenceType createBlockCtor19 FormalParameter FormalParameter Exception LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private Deprecated ClassWriter ReferenceType namePath ReferenceType fieldClass ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference String Class ClassWriter cw ClassCreator cw MemberReference BinaryOperation MemberReference Literal MethodInvocation ArrayCreator visit cw BinaryOperation Literal MethodInvocation Literal Literal visitField SkinnyMethodAdapter mv ClassCreator mv start mv Literal aload mv MethodInvocation Literal MethodInvocation invokespecial mv Literal aload mv Literal aload mv MethodInvocation checkcast mv MemberReference Literal MethodInvocation putfield mv voidreturn mv end cw ReferenceType BinaryOperation RubyInstanceConfig JAVA_VERSION + MemberReference MemberReference namePath null ClassReference p ReferenceType ArrayInitializer | MemberReference MemberReference "$scriptObject" MemberReference ci null null ReferenceType MethodInvocation 0 ClassReference p "<init>" VoidClassReference sig 0 1 MemberReference p namePath "$scriptObject" MemberReference ci ClassWriter | MemberReference MemberReference ACC_PUBLIC ACC_SUPER ReferenceType String MethodInvocation ACC_PRIVATE ACC_FINAL fieldClass SkinnyMethodAdapter cw MemberReference Literal MethodInvocation Literal Literal visitMethod ReferenceType fieldClass fieldClass ClassWriter COMPUTE_MAXS ClassWriter COMPUTE_FRAMES Object ClassReference p ACC_PUBLIC "<init>" MemberReference MethodInvocation sig null null Object ReferenceType Void TYPE ClassReference params CompiledBlockCallback19 ReferenceType Object	1
MethodDeclaration Modifier StatementExpression public MethodInvocation	0
MethodDeclaration Modifier ReferenceType newSecurityError FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException message	0
MethodDeclaration Modifier ReferenceType op_roundCommonPre FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType n ReferenceType VariableDeclarator BinaryOperation ThrowStatement MethodInvocation ThreadContext IRubyObject Ruby runtime MethodInvocation instanceof MemberReference ReferenceType MethodInvocation MemberReference MethodInvocation MemberReference f_expt context getRuntime n RubyInteger runtime Literal newTypeError context RubyFixnum MemberReference Literal newFixnum n "not an integer" runtime 10	1
MethodDeclaration Modifier ReferenceType value ReturnStatement public Object MemberReference yaccValue	0
MethodDeclaration Modifier Annotation Annotation ReferenceType stat FormalParameter StatementExpression ReturnStatement public JRubyMethod Override IRubyObject ReferenceType context MethodInvocation MethodInvocation ThreadContext openFile MethodInvocation context MethodInvocation getRuntime context getRuntime MemberReference Literal path false	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block StatementExpression ReturnStatement StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject Block MethodInvocation MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference context self name block context self clazz name args block context	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType subclass ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation frame Literal meta Literal ThreadContext IRubyObject IRubyObject IRubyObject MethodInvocation isNil StatementExpression StatementExpression RuntimeHelpers MemberReference MemberReference MemberReference MemberReference true true RuntimeHelpers MemberReference MemberReference Literal invoke Assignment MethodInvocation context recv subclass Block context subclass "java_class" MemberReference MethodInvocation = RuntimeHelpers MemberReference MemberReference Literal MemberReference invoke RuntimeHelpers MemberReference MemberReference Literal invoke context subclass context recv "java_class"	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType ruby ReferenceType value BinaryOperation BlockStatement IfStatement ArrayCreator Ruby IRubyObject == MemberReference Literal ReturnStatement BinaryOperation BlockStatement ReferenceType ArrayInitializer value null ArrayCreator instanceof MemberReference ReferenceType ReturnStatement IRubyObject MemberReference ReferenceType ArrayInitializer value RubyArray Cast value IRubyObject MethodInvocation ReferenceType MemberReference ruby getNil RubyArray value	0
MethodDeclaration Modifier Annotation ReferenceType kill LocalVariableDeclaration IfStatement IfStatement StatementExpression StatementExpression IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType VariableDeclarator BinaryOperation StatementExpression MemberReference StatementExpression MethodInvocation MethodInvocation MemberReference StatementExpression This name ElementArrayValue RubyThread currentThread MethodInvocation == MemberReference This MethodInvocation DEBUG MethodInvocation currentThread pollThreadEvents MethodInvocation MethodInvocation getRuntime DEBUG MethodInvocation Literal Literal Literal MethodInvocation MethodInvocation getRuntime currentThread System.out BinaryOperation println getThreadService ClassCreator System.out BinaryOperation println getCurrentContext getThread + BinaryOperation Literal ReferenceType MemberReference This MemberReference + BinaryOperation Literal + Literal MethodInvocation " trying to kill" ReferenceType currentThread + Literal MethodInvocation " with kill" "thread " Thread currentThread Event "thread " Thread currentThread	1
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType runtime ReferenceType cache ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference Ruby StructLayout ReferenceType IRubyObject IRubyObject s MethodInvocation == MemberReference Literal StatementExpression StatementExpression s cache This s null Assignment MethodInvocation MemberReference ClassCreator = cache This MemberReference s ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference s StructLayout ReferenceType runtime offset arrayType op Array	0
MethodDeclaration Modifier Annotation ReferenceType min ReturnStatement public JRubyMethod ElementValuePair RubyInteger MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation newFixnum dt	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv MethodInvocation IRubyObject MethodInvocation recv getRuntime	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation == MemberReference Literal StatementExpression ReturnStatement modify MemberReference MemberReference MemberReference BinaryOperation CompatVersion RUBY1_8 context getRuntime value realSize 0 MethodInvocation MethodInvocation runtime value bytes value begin + MemberReference MemberReference modifyCheck runtime getNil value begin value realSize	1
MethodDeclaration post FormalParameter StatementExpression ReferenceType context MethodInvocation ThreadContext context	0
MethodDeclaration Modifier Annotation FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SwitchStatement public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType arg ReferenceType block ReferenceType VariableDeclarator BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Ruby ThreadContext IRubyObject IRubyObject Block RubyArray values Cast int length MethodInvocation length Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression StatementExpression StatementExpression BreakStatement ReferenceType MemberReference values getLength 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation MethodInvocation MethodInvocation RubyArray arg MemberReference MemberReference MemberReference MemberReference assign MemberReference MemberReference MemberReference MethodInvocation MemberReference assign MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MemberReference assign MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation MemberReference assign parameter1 MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign rest MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal assign runtime context self block runtime context self values Literal eltInternal block runtime context self values Literal eltInternal values Literal eltInternal block runtime context self values Literal eltInternal values Literal eltInternal values Literal eltInternal block runtime context self values Literal eltInternal block false runtime context self values Literal eltInternal block false runtime context self values Literal BinaryOperation block true 0 0 1 0 1 2 0 1 2 - MemberReference Literal length 2	0
MethodDeclaration Modifier ReferenceType ReturnStatement public IRubyObject MethodInvocation thread	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement final public Override Arity MemberReference arity	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement static public RubyArray ReferenceType runtime ReferenceType classes ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation Ruby Class TypeArgument IRubyObject javaClasses ArrayCreator VariableDeclaration BinaryOperation StatementExpression runtime MemberReference ? ReferenceType MemberReference BasicType VariableDeclarator >= MemberReference Literal Assignment javaClasses IRubyObject classes length int i MemberReference -- i 0 MemberReference MethodInvocation = classes length ArraySelector javaClasses MemberReference MemberReference get MemberReference runtime ArraySelector classes i MemberReference i	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public Override Block ReferenceType Literal null	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public ReferenceType clazz ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference Class converter MethodInvocation == MemberReference Literal StatementExpression converter MemberReference get converter null Assignment clazz MemberReference MemberReference = converter	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression TryStatement IfStatement LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression IfStatement StatementExpression IfStatement IfStatement IfStatement StatementExpression IfStatement protected ReferenceType runtime ReferenceType BasicType server BasicType VariableDeclarator Assignment StatementExpression CatchClause BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator Assignment BinaryOperation BlockStatement MethodInvocation MemberReference BlockStatement BlockStatement BinaryOperation BlockStatement MemberReference BlockStatement MethodInvocation MemberReference BlockStatement Ruby IRubyObject boolean int status MemberReference Literal = Assignment CatchClauseParameter < MemberReference Literal StatementExpression ReferenceType sockaddr MethodInvocation sockaddr MethodInvocation ByteList path MethodInvocation MemberReference MethodInvocation = <= MethodInvocation MemberReference ThrowStatement sockaddr MethodInvocation path server StatementExpression TryStatement < MemberReference Literal StatementExpression StatementExpression server StatementExpression MemberReference init_sock server StatementExpression fd - 1 MemberReference MethodInvocation = UnsatisfiedLinkError ule fd 0 MethodInvocation newInstance value MethodInvocation convertToString fpath path toString sockaddr MethodInvocation path path realSize MethodInvocation MemberReference set Assignment StatementExpression CatchClause status 0 MethodInvocation MethodInvocation MethodInvocation runtime MethodInvocation fd INSTANCE MethodInvocation MethodInvocation Literal socket MemberReference Literal getByteList length runtime BinaryOperation newArgumentError fpath MemberReference MethodInvocation = Assignment CatchClauseParameter StatementExpression ThrowStatement INSTANCE MemberReference close MemberReference MemberReference INSTANCE MemberReference Literal openFile MemberReference setPath value value 0 runtime + BinaryOperation Literal status INSTANCE MemberReference MemberReference MemberReference MemberReference MethodInvocation = RuntimeException e MethodInvocation MemberReference fd runtime fpath fd 5 fpath + Literal BinaryOperation fd sockaddr status INSTANCE MemberReference MemberReference MemberReference connect INSTANCE MemberReference close e "too long socket path " - MethodInvocation Literal fd sockaddr fd sockaddr MethodInvocation path 1 length	1
MethodDeclaration Modifier ReferenceType pre FormalParameter FormalParameter FormalParameter ReturnStatement protected ReferenceType context ReferenceType ReferenceType MethodInvocation ThreadContext RubyModule context MemberReference MemberReference	0
MethodDeclaration Modifier ReferenceType create FormalParameter FormalParameter ReturnStatement static public JavaConstructor ReferenceType runtime ReferenceType constructor ClassCreator Ruby Constructor TypeArgument ReferenceType MemberReference MemberReference ? JavaConstructor runtime constructor	0
MethodDeclaration Modifier BasicType read FormalParameter IOException ReturnStatement public int ReferenceType dst MethodInvocation ByteBuffer MemberReference MemberReference read read dst	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType block MethodInvocation name ElementArrayValue ThreadContext Block method MemberReference MemberReference MemberReference MemberReference MemberReference call Literal Literal context receiver methodName block "call" "[]"	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration WhileStatement IfStatement StatementExpression ReturnStatement private static boolean ReferenceType a BasicType lo BasicType hi ReferenceType c BasicType VariableDeclarator VariableDeclarator BinaryOperation StatementExpression BinaryOperation BlockStatement MethodInvocation Literal Object int int Comparator int i BinaryOperation j BinaryOperation && BinaryOperation BinaryOperation MemberReference != MemberReference MemberReference ReturnStatement MemberReference MemberReference MemberReference MemberReference true + MemberReference Literal - MemberReference Literal < MemberReference MemberReference <= MethodInvocation Literal ++ i i j Literal a lo hi c lo 1 hi 2 i j c MemberReference MemberReference compare 0 false ArraySelector a ArraySelector a MemberReference BinaryOperation i + MemberReference Literal i 1	1
MethodDeclaration Modifier Annotation ReferenceType LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType VariableDeclarator MethodInvocation ThrowStatement MemberReference name ElementArrayValue IRubyObject c MethodInvocation c isNil MethodInvocation c Literal Literal getc MethodInvocation getRuntime newEOFError	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType ReferenceType type ReferenceType unusedBlock MethodInvocation ThreadContext IRubyObject IRubyObject Block ReferenceType Block MemberReference MemberReference MemberReference MemberReference MemberReference call Type context arg0 arg1 type	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement static public RubyString ReferenceType runtime ReferenceType bytes ClassCreator Ruby ByteList ReferenceType MemberReference MethodInvocation MemberReference Literal RubyString runtime runtime getString bytes false	0
MethodDeclaration Modifier BasicType ReturnStatement public int Literal 1	0
MethodDeclaration Modifier ReferenceType getCurrentDirectory ReturnStatement public String MemberReference	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement public float BasicType f MethodInvocation float vri MemberReference f	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference runtime	0
MethodDeclaration Modifier ReferenceType getDir ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier activate FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression synchronized public ReferenceType join ReferenceType ReferenceType args Assignment Assignment Assignment MethodInvocation Object This MemberReference = This MemberReference = This MemberReference = MemberReference join MemberReference MemberReference args join args	0
MethodDeclaration Modifier StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement IfStatement IfStatement IfStatement IfStatement IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression private Assignment Assignment Assignment Assignment Assignment Assignment MethodInvocation BlockStatement MethodInvocation BlockStatement MethodInvocation BlockStatement MethodInvocation BlockStatement MethodInvocation BlockStatement MethodInvocation BlockStatement Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment MethodInvocation BlockStatement MethodInvocation MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = profile Literal allowClass StatementExpression StatementExpression profile Literal allowClass StatementExpression profile Literal allowClass StatementExpression profile Literal allowClass StatementExpression profile Literal allowClass StatementExpression profile Literal allowClass StatementExpression MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = is1_9 IfStatement standardError Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed scriptError Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed "NameError" Assignment Assignment Assignment Assignment Assignment Assignment Assignment fatal Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed argumentError Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed Literal MemberReference defineClassIfAllowed MethodInvocation BlockStatement standardError standardError standardError MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = standardError standardError standardError scriptError scriptError scriptError standardError standardError standardError standardError standardError profile Literal allowClass StatementExpression StatementExpression This MemberReference This MemberReference This MemberReference This MemberReference This MemberReference This MemberReference This MemberReference Assignment Assignment standardError standardError standardError MemberReference MethodInvocation = MemberReference MethodInvocation = encodingError Literal MemberReference MethodInvocation defineClass Literal MemberReference MethodInvocation MemberReference defineClassUnder standardError standardError getAllocator encodingError encodingError getAllocator	1
MethodDeclaration Modifier Annotation ReferenceType op_plus FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression IfStatement LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType other BasicType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator Assignment Assignment BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator Assignment MethodInvocation MemberReference name Literal required Literal IRubyObject long time MethodInvocation instanceof MemberReference ReferenceType ThrowStatement long MethodInvocation long micro BinaryOperation MemberReference BinaryOperation = MemberReference MemberReference += >= BinaryOperation Literal StatementExpression StatementExpression StatementExpression RubyTime ClassCreator MemberReference ClassCreator = MemberReference setUSec "+" 1 other RubyTime MethodInvocation Math BinaryOperation round % MemberReference Literal / MemberReference Literal time + MethodInvocation MemberReference 1000 MemberReference Assignment Assignment ReferenceType MethodInvocation MethodInvocation dt MethodInvocation ReferenceType MemberReference micro MethodInvocation getRuntime * MethodInvocation Literal 1000 1000 micro ++ time MemberReference BinaryOperation = MemberReference BinaryOperation = RubyTime getRuntime getMetaClass MethodInvocation DateTime time Literal newTypeError RubyNumeric MemberReference num2dbl 1000000 micro - BinaryOperation Literal micro + MethodInvocation MemberReference dt getZone + time ?" other + MethodInvocation MemberReference 1000 micro micro	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement protected static boolean ReferenceType object BinaryOperation IRubyObject != MethodInvocation Literal object getMetaClass null	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public Override Node ReferenceType ClassCreator Node ReferenceType MethodInvocation MethodInvocation MethodInvocation Cast getPosition getName getArgsNode ReferenceType MemberReference IterNode	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair RubyBoolean MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation newBoolean MethodInvocation javaClass	1
MethodDeclaration Modifier Annotation FormalParameter StatementExpression LocalVariableDeclaration StatementExpression public Override ReferenceType clone SuperMethodInvocation ReferenceType VariableDeclarator Assignment IRubyObject MemberReference exception Cast MemberReference MemberReference = clone ReferenceType MemberReference exception name name clone	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration ForStatement ReturnStatement public DynamicScope BasicType n ReferenceType VariableDeclarator ForControl BlockStatement MemberReference int DynamicScope scope This VariableDeclaration BinaryOperation MemberReference IfStatement scope BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement BlockStatement int i Literal i n != MemberReference Literal StatementExpression BreakStatement 0 scope null Assignment MemberReference MethodInvocation = scope scope	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MemberReference ReferenceType EMPTY_LIST Node	0
MethodDeclaration Modifier Annotation ReferenceType real FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context This name Literal compat MemberReference ThreadContext CompatVersion RUBY1_9	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean MethodInvocation ruby MethodInvocation MethodInvocation get getInstanceConfig	0
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType runtime ReferenceType object BinaryOperation ReturnStatement MethodInvocation Ruby Object == MemberReference Literal MethodInvocation RubyFixnum MemberReference Cast newFixnum object null runtime getNil runtime ReferenceType MemberReference Integer object	1
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType DSTRNODE	0
MethodDeclaration Modifier ReferenceType step FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType block MethodInvocation ThreadContext IRubyObject Block MemberReference MemberReference MethodInvocation MemberReference step context arg0 RubyFixnum MethodInvocation one block context getRuntime	0
MethodDeclaration Modifier ReferenceType getPosition FormalParameter IfStatement ReturnStatement public ISourcePosition ReferenceType BinaryOperation BlockStatement MethodInvocation ISourcePosition != MemberReference Literal StatementExpression ReturnStatement getPosition null Assignment MemberReference MemberReference MemberReference = lastPosition lastPosition	0
MethodDeclaration Modifier Annotation IfStatement public Override BinaryOperation BlockStatement IfStatement != MemberReference Literal StatementExpression MemberReference BlockStatement BlockStatement currentLoopLabels null MethodInvocation StatementExpression StatementExpression StatementExpression MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation invokeUtilityMethod Literal MethodInvocation invokeUtilityMethod ClassReference sig ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType IRubyObject IRubyObject Ruby	0
MethodDeclaration * public Operand IR_Scope * final SClassNode sclassNode = * CompilerCallback receiverCallback = new * public * * * * CompilerCallback bodyCallback = new * public * if != * * } * * * * * null, null, * */ Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Operand ReferenceType node ReferenceType s ReferenceType VariableDeclarator MethodInvocation MemberReference ClassVarNode IR_Scope Variable ret MethodInvocation s ClassCreator addInstr ret s getNewVariable ReferenceType MemberReference ClassCreator MethodInvocation ret ReferenceType MemberReference node getName MetaObject s	0
MethodDeclaration Modifier FormalParameter IfStatement public ReferenceType blockNode MethodInvocation BlockStatement BlockNode warnings isVerbose LocalVariableDeclaration ForStatement ReferenceType VariableDeclarator ForControl BlockStatement Node MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement blockNode getLast BasicType VariableDeclarator < MemberReference MethodInvocation ++ i ReferenceType VariableDeclarator BinaryOperation BlockStatement int i Literal i blockNode size Node currentNode MethodInvocation != MemberReference MemberReference StatementExpression 0 blockNode MemberReference get currentNode MethodInvocation i MemberReference checkUselessStatement currentNode	0
MethodDeclaration Modifier ReferenceType decode FormalParameter FormalParameter IfStatement public IRubyObject ReferenceType runtime ReferenceType enc BinaryOperation ReturnStatement ReturnStatement Ruby ByteBuffer == MemberReference MemberReference MethodInvocation MethodInvocation Platform BYTE_ORDER Platform BIG_ENDIAN runtime MethodInvocation newFixnum runtime MethodInvocation newFixnum MemberReference MemberReference enc enc	1
MethodDeclaration pre FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReferenceType context ReferenceType self ReferenceType ReferenceType name ReferenceType block ReferenceType scope ReferenceType MethodInvocation ThreadContext IRubyObject RubyModule String Block context MemberReference MemberReference scope	0
MethodDeclaration Modifier FormalParameter StatementExpression private ReferenceType node MethodInvocation Colon2Node sb MethodInvocation Literal append MethodInvocation append " " node getName	0
MethodDeclaration Modifier Annotation ReferenceType exit_bang FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType args MethodInvocation name Literal optional Literal module Literal visibility MemberReference IRubyObject IRubyObject RubyKernel MemberReference MemberReference exit_bang "exit!" 1 true Visibility PRIVATE recv args	1
MethodDeclaration Modifier get FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression final public BasicType offset BasicType dst BasicType off BasicType len MethodInvocation long byte int int BinaryOperation MemberReference MemberReference MemberReference + MemberReference MemberReference dst off len address offset	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair Buffer ReferenceType context ReferenceType recv ReferenceType MethodInvocation name ElementArrayValue meta Literal ThreadContext IRubyObject IRubyObject MemberReference MemberReference MemberReference Literal MemberReference Literal Literal Literal true context recv 1	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression LocalVariableDeclaration IfStatement IfStatement private final BasicType beg BasicType len ReferenceType rpl BinaryOperation ThrowStatement BinaryOperation ThrowStatement Modifier ReferenceType VariableDeclarator Modifier BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement BinaryOperation BlockStatement long long IRubyObject < MemberReference Literal MethodInvocation && BinaryOperation BinaryOperation MethodInvocation final RubyArray rplArr final int rlen || BinaryOperation MethodInvocation StatementExpression StatementExpression StatementExpression StatementExpression modify int valuesLength BinaryOperation >= MemberReference MemberReference StatementExpression IfStatement TryStatement StatementExpression IfStatement LocalVariableDeclaration IfStatement IfStatement > MemberReference Literal TryStatement len 0 MethodInvocation getRuntime < MemberReference Literal < Assignment Literal MethodInvocation getRuntime == MemberReference Literal rpl isNil Assignment Assignment Assignment Assignment - MemberReference MemberReference beg realLength Assignment BinaryOperation StatementExpression StatementExpression CatchClause Assignment BinaryOperation StatementExpression BasicType VariableDeclarator BinaryOperation StatementExpression BinaryOperation BlockStatement rlen 0 StatementExpression CatchClause BinaryOperation newIndexError beg 0 MemberReference MemberReference += 0 BinaryOperation newIndexError rpl null MemberReference Literal = MemberReference Literal = MemberReference MethodInvocation = MemberReference MemberReference = values length begin MemberReference BinaryOperation = >= MemberReference MemberReference MethodInvocation MethodInvocation CatchClauseParameter StatementExpression MemberReference Cast = > BinaryOperation MemberReference Assignment int alen BinaryOperation >= MemberReference MemberReference MethodInvocation != MemberReference MemberReference TryStatement StatementExpression MethodInvocation CatchClauseParameter StatementExpression + BinaryOperation Literal beg realLength + BinaryOperation Literal rplArr null rlen 0 rplArr MemberReference aryToAry rlen rplArr realLength len + MemberReference MemberReference len valuesLength Cast MemberReference spliceRealloc RuntimeHelpers MemberReference BinaryOperation BinaryOperation MethodInvocation fillNil ArrayIndexOutOfBoundsException e MethodInvocation realLength BasicType MemberReference + MemberReference MemberReference realLength MemberReference BinaryOperation = - BinaryOperation Cast alen valuesLength MemberReference MemberReference spliceRealloc len rlen StatementExpression CatchClause Assignment System MemberReference MemberReference MemberReference BinaryOperation MemberReference arraycopy ArrayIndexOutOfBoundsException e MethodInvocation + Literal MemberReference ")" + Literal BinaryOperation " out of array" rpl beg rlen BasicType MemberReference valuesLength values + MemberReference MemberReference + MemberReference Cast getRuntime concurrentModification int len beg len len - MemberReference MemberReference + MemberReference MemberReference BasicType MemberReference alen valuesLength MethodInvocation CatchClauseParameter StatementExpression MemberReference MemberReference = rplArr values rplArr begin values + MemberReference Cast rlen concurrentModification "negative length (" len "index " - MemberReference MemberReference int len begin realLength begin BasicType MemberReference realLength beg realLength rlen int len System MemberReference BinaryOperation MemberReference BinaryOperation BinaryOperation arraycopy ArrayIndexOutOfBoundsException e MethodInvocation realLength alen begin BasicType MemberReference beg realLength int beg values + MemberReference Cast values + BinaryOperation MemberReference - MemberReference Cast concurrentModification int beg begin BasicType BinaryOperation + MemberReference Cast rlen realLength BasicType BinaryOperation int + MemberReference MemberReference begin BasicType MemberReference int + MemberReference MemberReference beg len int beg beg len	1
MethodDeclaration Modifier BasicType equals FormalParameter IfStatement ReturnStatement public boolean ReferenceType obj BinaryOperation BlockStatement Literal Object instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement false obj ReferenceType VariableDeclarator BinaryOperation key Cast && MethodInvocation MethodInvocation ReferenceType MemberReference name MemberReference equals Arrays MemberReference MemberReference equals obj key name arguments key arguments	0
MethodDeclaration Modifier BasicType int64Value FormalParameter ReturnStatement final static public long ReferenceType parameter MethodInvocation IRubyObject MemberReference longValue parameter	1
MethodDeclaration Modifier Exception StatementExpression LocalVariableDeclaration StatementExpression public MethodInvocation ReferenceType VariableDeclarator MethodInvocation exception MethodInvocation String lines MethodInvocation Literal MemberReference assertEquals interpreter getNil 0 lines length	0
MethodDeclaration Modifier ReferenceType iterator ReturnStatement public Iterator MethodInvocation	0
MethodDeclaration Modifier BasicType isEmpty ReturnStatement public boolean BinaryOperation == MemberReference Literal count 0	0
MethodDeclaration install FormalParameter IfStatement ReferenceType proxy MethodInvocation BlockStatement RubyModule LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement RubyClass singleton MethodInvocation DynamicMethod method ClassCreator singleton MemberReference MemberReference addMethod && BinaryOperation MethodInvocation StatementExpression StatementExpression proxy ReferenceType MemberReference MemberReference name method != MemberReference Literal isPublic MethodInvocation Assignment singleton methods aliases null singleton MemberReference This MemberReference Literal = aliases MemberReference aliases null name	0
MethodDeclaration Modifier FormalParameter FormalParameter java.io.IOException StatementExpression StatementExpression LocalVariableDeclaration StatementExpression ForStatement static public ReferenceType ReferenceType output MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation ForControl BlockStatement output MemberReference output Literal MethodInvocation List members Cast output MethodInvocation writeInt VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression StatementExpression 'S' getMetaClass ReferenceType MethodInvocation members size BasicType VariableDeclarator < MemberReference MethodInvocation ++ i ReferenceType VariableDeclarator MethodInvocation MethodInvocation RubyArray MethodInvocation Literal getInternalVariable int i Literal i members size RubySymbol name Cast output MemberReference output MemberReference 0 ReferenceType MethodInvocation name ArraySelector values RubySymbol members MemberReference get MemberReference i i	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression public ReferenceType thread ReferenceType rubyThread MethodInvocation MethodInvocation MethodInvocation Thread RubyThread MemberReference MemberReference MemberReference put MemberReference MemberReference put rubyThread rubyThread thread rubyThread	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public RubyClass BasicType n MethodInvocation int MemberReference get n	0
MethodDeclaration Modifier Annotation ReferenceType op_pow FormalParameter FormalParameter SwitchStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other MethodInvocation SwitchStatementCase SwitchStatementCase name Literal required Literal ThreadContext IRubyObject other MemberReference getMetaClass MemberReference MemberReference MemberReference ReturnStatement ReturnStatement "**" 1 index ClassIndex FIXNUM ClassIndex BIGNUM ClassIndex FLOAT MethodInvocation MethodInvocation RubyFloat MethodInvocation MethodInvocation newFloat MemberReference Literal MemberReference coerceBin getRuntime Math MemberReference Cast pow context "**" other value ReferenceType MemberReference RubyNumeric other	1
MethodDeclaration Modifier BasicType ReturnStatement protected boolean Literal false	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType debug Assignment IRubyObject This MemberReference = MemberReference debug debug	0
MethodDeclaration Modifier BasicType exitValue ReturnStatement public int MemberReference result	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType receiver ReferenceType value MethodInvocation MemberReference name Literal required Literal meta Literal compat MemberReference IRubyObject IRubyObject receiver MethodInvocation MethodInvocation getRuntime value 1 true CompatVersion RUBY1_8 getThreadService MethodInvocation value isTrue	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block TernaryExpression name Literal frame Literal ThreadContext IRubyObject final Block MethodInvocation MethodInvocation MethodInvocation true block isGiven MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal enumeratorize context self block context getRuntime self	0
MethodDeclaration Modifier Annotation ReferenceType index FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject int pos MethodInvocation Ruby runtime MethodInvocation < MemberReference Literal StatementExpression IfStatement MemberReference MemberReference MemberReference MemberReference "index" BACKREF BACKREF CompatVersion RUBY1_8 RubyNumeric MemberReference num2int context getRuntime pos 0 Assignment BinaryOperation BlockStatement runtime context arg0 pos arg1 MemberReference MemberReference += < MemberReference Literal IfStatement ReturnStatement pos value realSize pos 0 BinaryOperation BlockStatement MethodInvocation instanceof MemberReference ReferenceType StatementExpression runtime getNil arg0 RubyRegexp MethodInvocation context MethodInvocation getCurrentScope MethodInvocation setBackRef runtime getNil	0
MethodDeclaration Modifier FormalParameter StatementExpression protected BasicType Assignment boolean This MemberReference = MemberReference	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean final ForNode Cast CompilerCallback receiverCallback ClassCreator final CompilerCallback closureArg ClassCreator context MethodInvocation getInvocationCompiler ! expr MethodInvocation ReferenceType MemberReference ReferenceType MethodDeclaration ReferenceType MethodDeclaration Literal MemberReference Literal MemberReference MemberReference Literal invokeDynamic context consumeCurrentValue ForNode node CompilerCallback Modifier call FormalParameter StatementExpression CompilerCallback Modifier call FormalParameter StatementExpression receiverCallback null CallType NORMAL closureArg true public ReferenceType context MethodInvocation public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile BodyCompiler MemberReference MemberReference getIterNode context true context	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration TryStatement ReturnStatement private Script ReferenceType node ReferenceType classLoader ReferenceType VariableDeclarator LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression IfStatement CatchClause CatchClause CatchClause CatchClause CatchClause MemberReference Node JRubyClassLoader Script script Literal ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement Assignment MethodInvocation BlockStatement CatchClauseParameter IfStatement CatchClauseParameter IfStatement CatchClauseParameter IfStatement CatchClauseParameter IfStatement CatchClauseParameter IfStatement script null String filename MethodInvocation String classname MethodInvocation ASTInspector inspector ClassCreator inspector MemberReference inspect asmCompiler ClassCreator compiler MethodInvocation config StatementExpression StatementExpression StatementExpression MemberReference Cast = config StatementExpression NotCompilableException BinaryOperation BlockStatement BlockStatement ClassNotFoundException e BinaryOperation BlockStatement BlockStatement InstantiationException e BinaryOperation BlockStatement BlockStatement IllegalAccessException e BinaryOperation BlockStatement BlockStatement Throwable t BinaryOperation BlockStatement BlockStatement node MethodInvocation getPosition MemberReference ReferenceType node ReferenceType MemberReference MemberReference config MethodInvocation MethodInvocation MethodInvocation script ReferenceType MethodInvocation MethodInvocation || MethodInvocation MethodInvocation StatementExpression StatementExpression StatementExpression || MethodInvocation MethodInvocation StatementExpression StatementExpression StatementExpression || MethodInvocation MethodInvocation StatementExpression StatementExpression StatementExpression || MethodInvocation MethodInvocation StatementExpression StatementExpression StatementExpression || MethodInvocation MethodInvocation StatementExpression StatementExpression StatementExpression getFile filename ASTInspector classname filename compiler MemberReference MemberReference MemberReference Literal Literal asmCompiler MemberReference compiler MemberReference MemberReference MemberReference Literal Literal Script asmCompiler MethodInvocation MemberReference loadClass System.err BinaryOperation println config config isDebug MethodInvocation MethodInvocation MethodInvocation config config isDebug MethodInvocation MethodInvocation MethodInvocation config config isDebug MethodInvocation MethodInvocation MethodInvocation config config isDebug MethodInvocation MethodInvocation MethodInvocation config config isDebug MethodInvocation MethodInvocation MethodInvocation node asmCompiler inspector false false System out node asmCompiler inspector true false newInstance classLoader + Literal MethodInvocation System.err BinaryOperation println printStackTrace System.err Literal println System.err BinaryOperation println e printStackTrace System.err Literal println System.err BinaryOperation println e printStackTrace System.err Literal println System.err BinaryOperation println e printStackTrace System.err Literal println System.err BinaryOperation println t printStackTrace System.err Literal println " node MethodInvocation getPosition + Literal MethodInvocation "Error, could not compile; pass -d or -J-Djruby.jit.logging.verbose=true for more details" + Literal MethodInvocation "Error, could not compile; pass -d or -J-Djruby.jit.logging.verbose=true for more details" + Literal MethodInvocation "Error, could not compile; pass -d or -J-Djruby.jit.logging.verbose=true for more details" + Literal MethodInvocation "Error, could not compile; pass -d or -J-Djruby.jit.logging.verbose=true for more details" + BinaryOperation Literal "Error, could not compile; pass -d or -J-Djruby.jit.logging.verbose=true for more details" getFile "Error -- Not compileable: " getMessage "Error -- Not compileable: " e getMessage "Error -- Not compileable: " e getMessage "Error -- Not compileable: " e getMessage + BinaryOperation MethodInvocation "\"" + BinaryOperation Literal t getMessage + Literal MethodInvocation " because of: \"" "could not " node MethodInvocation getPosition getFile	1
MethodDeclaration Modifier ReferenceType ReturnStatement public IRubyObject MethodInvocation MethodInvocation to_s getRuntime	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override RubyClass MemberReference metaClass	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter IfStatement ThrowStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args BinaryOperation BlockStatement ClassCreator name Literal optional Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject == MemberReference Literal StatementExpression ReferenceType Literal Literal 1 true PRIVATE args length 1 MethodInvocation MainExitException 1 true context MethodInvocation MethodInvocation MethodInvocation getRuntime getGlobalVariables Literal get MemberReference Literal MemberReference callMethod context ArraySelector args Literal 0	0
MethodDeclaration Modifier ReferenceType rid FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime MethodInvocation Ruby MemberReference gid runtime	0
MethodDeclaration Modifier ReferenceType int_pow FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement StatementExpression LocalVariableDeclaration DoStatement IfStatement ReturnStatement static public IRubyObject ReferenceType context BasicType x BasicType y BasicType VariableDeclarator BasicType VariableDeclarator MemberReference StatementExpression BinaryOperation BlockStatement BlockStatement Assignment ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference StatementExpression MethodInvocation ThreadContext long long boolean neg BinaryOperation long z Literal neg Assignment != BinaryOperation Literal StatementExpression StatementExpression MemberReference Literal &= Ruby runtime MethodInvocation != MemberReference Literal WhileStatement LocalVariableDeclaration IfStatement StatementExpression neg Assignment RubyFixnum MemberReference MemberReference newFixnum < MemberReference Literal 1 MemberReference MemberReference = & MemberReference Literal 0 Assignment Assignment y ~ 1 context getRuntime -- y 0 BinaryOperation BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement Assignment MemberReference MemberReference = runtime z x 0 x - x y 1 MemberReference MemberReference = MemberReference Literal = == BinaryOperation Literal IfStatement StatementExpression StatementExpression long xz BinaryOperation != BinaryOperation MemberReference LocalVariableDeclaration IfStatement ReturnStatement MemberReference MemberReference = z - z z x neg false % MemberReference Literal 0 MethodInvocation BlockStatement Assignment Assignment * MemberReference MemberReference / MemberReference MemberReference z ReferenceType VariableDeclarator BinaryOperation StatementExpression MemberReference z xz y 2 ! MemberReference LocalVariableDeclaration IfStatement ReturnStatement MemberReference MemberReference *= MemberReference Literal >>= x x xz x IRubyObject v MethodInvocation != MemberReference Literal Assignment v x ReferenceType VariableDeclarator BinaryOperation StatementExpression MemberReference x x y 1 RubyBignum MethodInvocation MemberReference MethodInvocation newBignum z 1 MemberReference MethodInvocation = IRubyObject v MethodInvocation != MemberReference Literal Assignment v MemberReference MethodInvocation op_pow runtime RubyBignum MethodInvocation fix2big v RubyBignum MethodInvocation MemberReference MethodInvocation newBignum RubyBignum MethodInvocation MemberReference MethodInvocation newBignum z 1 MemberReference MethodInvocation = context RubyFixnum MemberReference MemberReference newFixnum RubyFixnum MemberReference MemberReference newFixnum MemberReference MemberReference op_mul runtime RubyBignum MethodInvocation fix2big MemberReference MethodInvocation op_pow runtime RubyBignum MethodInvocation fix2big v RubyBignum MethodInvocation MemberReference MethodInvocation newBignum runtime y runtime x context v RubyFixnum MemberReference TernaryExpression newFixnum context RubyFixnum MemberReference MemberReference newFixnum RubyFixnum MemberReference MemberReference newFixnum MemberReference MemberReference op_mul runtime RubyBignum MethodInvocation fix2big runtime MemberReference MemberReference MemberReference runtime y runtime x context v RubyFixnum MemberReference TernaryExpression newFixnum neg - z z runtime MemberReference MemberReference MemberReference neg - z z	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + MemberReference Literal ":"	0
MethodDeclaration Modifier Annotation ReferenceType yield FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override IRubyObject ReferenceType context ReferenceType value ReferenceType self ReferenceType BasicType aValue ReferenceType ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject RubyModule boolean Type context MethodInvocation getRuntime MemberReference MemberReference Literal value out of	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType as ReferenceType VariableDeclarator LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement CatchClause name Literal module Literal ThreadContext IRubyObject IRubyObject IRubyObject String className MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation MethodInvocation CatchClauseParameter IfStatement ThrowStatement "import" true name toString Class cls MethodInvocation RubyModule namespace instanceof MemberReference ReferenceType StatementExpression StatementExpression namespace MethodInvocation MethodInvocation defineConstant context MethodInvocation getRuntime Exception e MethodInvocation BlockStatement MethodInvocation MethodInvocation MemberReference findClass self RubyModule Assignment Assignment as toString MethodInvocation MemberReference getNil context MethodInvocation MethodInvocation getRuntime StatementExpression context MethodInvocation getRuntime context MethodInvocation getRuntime className MemberReference Cast = MemberReference MethodInvocation = context getRuntime cls getDebug isTrue MethodInvocation BinaryOperation newTypeError getJRubyClassLoader namespace ReferenceType MemberReference namespace self MethodInvocation getMetaClass e printStackTrace + BinaryOperation MemberReference RubyModule self getRealClass + BinaryOperation Literal e + Literal MemberReference ", exception: " "Could not find class " className	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal compat MemberReference ThreadContext RubyString str MethodInvocation str MemberReference str CompatVersion RUBY1_8 MethodInvocation context context getRuntime	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier swap FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression private static ReferenceType a BasicType i BasicType j ReferenceType VariableDeclarator Assignment Assignment Object int int Object t MemberReference MemberReference MemberReference = MemberReference MemberReference = ArraySelector a ArraySelector a ArraySelector a ArraySelector a t MemberReference MemberReference MemberReference MemberReference i i j j	0
MethodDeclaration Modifier ReferenceType getUnicodeValue TryStatement public String ReturnStatement CatchClause ClassCreator CatchClauseParameter ThrowStatement ReferenceType MemberReference MemberReference MemberReference Literal Exception e ClassCreator String value bytes value begin value realSize "UTF-8" ReferenceType Literal MemberReference RuntimeException "Something's with e	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement IfStatement ReturnStatement public Map ReferenceType runtime ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation StatementExpression BlockStatement MemberReference Ruby Map envs Literal != MethodInvocation Literal ReturnStatement Ruby isSecurityRestricted Assignment LocalVariableDeclaration StatementExpression envs null runtime MethodInvocation getInstanceConfig null MethodInvocation MemberReference ClassCreator = ReferenceType VariableDeclarator Assignment MemberReference MethodInvocation getAsMapOfRubyStrings envs ReferenceType Map variables MethodInvocation MemberReference MethodInvocation = runtime runtime MethodInvocation MethodInvocation getInstanceConfig HashMap System envs MemberReference MethodInvocation getAsMapOfRubyStrings entrySet runtime variables entrySet	1
MethodDeclaration Modifier Annotation ReferenceType index FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType expected ReferenceType VariableDeclarator TernaryExpression name Literal compat MemberReference ThreadContext IRubyObject IRubyObject key MethodInvocation BinaryOperation MemberReference MethodInvocation "index" CompatVersion RUBY1_8 MemberReference MemberReference != MemberReference Literal key context MethodInvocation getRuntime context expected key null getNil	0
MethodDeclaration Modifier BasicType getOffset ReturnStatement public int TernaryExpression BinaryOperation Literal MemberReference <= MemberReference Literal 0 offset offset 0	0
MethodDeclaration Modifier BasicType FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private int ReferenceType val ReferenceType VariableDeclarator BasicType VariableDeclarator Assignment Assignment Assignment Assignment MemberReference IRubyObject String str MethodInvocation int res Literal MemberReference BinaryOperation += MemberReference BinaryOperation += MemberReference BinaryOperation += MemberReference MethodInvocation += res val MethodInvocation convertToString 0 res << MethodInvocation Literal res << MethodInvocation Literal res << MethodInvocation Literal res str Literal charAt toString str Literal charAt 24 str Literal charAt 16 str Literal charAt 8 3 0 1 2	1
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier ReferenceType ReturnStatement public IRubyObject MemberReference	0
MethodDeclaration Modifier BasicType ReturnStatement public int MemberReference varTable length	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Literal = yyVal yyVal null	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast MemberReference assignable ReferenceType MemberReference NilImplicitNode NIL Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType java_methods FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private RubyArray ReferenceType methods BasicType isStatic ReferenceType VariableDeclarator ForControl BlockStatement MemberReference Method boolean RubyArray result MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement result MethodInvocation getRuntime BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference newArray int i Literal i methods length Method method MemberReference == MemberReference MethodInvocation StatementExpression methods length 0 ArraySelector methods isStatic Modifier MethodInvocation isStatic MethodInvocation MemberReference method getModifiers result MethodInvocation append i JavaMethod MethodInvocation MemberReference create getRuntime method	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType MethodInvocation name Literal required Literal ThreadContext IRubyObject RubyFixnum MethodInvocation zero 1 context getRuntime	0
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression public ReferenceType ReferenceType foo MethodInvocation Object Object MemberReference MemberReference foo	0
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public String ReferenceType one ReferenceType two ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType seven ArrayCreator String String String String String String String ReferenceType ArrayInitializer String MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference one two seven	0
MethodDeclaration Modifier ReferenceType evalUnder FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject Modifier ReferenceType context ReferenceType ReferenceType src ReferenceType file ReferenceType line MethodInvocation final ThreadContext RubyModule IRubyObject IRubyObject IRubyObject MemberReference MemberReference MethodInvocation MethodInvocation Cast evalUnder context src convertToString file MethodInvocation convertToString BasicType BinaryOperation toString int - MethodInvocation Literal line MethodInvocation convertToInteger 1 getLongValue	1
MethodDeclaration Modifier FormalParameter FormalParameter IfStatement private ReferenceType name ReferenceType MethodInvocation BlockStatement String Library profile MemberReference StatementExpression name MethodInvocation MemberReference MemberReference name	0
MethodDeclaration Modifier ReferenceType FormalParameter RaiseException LocalVariableDeclaration TryStatement ReturnStatement protected LoadServiceResource ReferenceType namePlusSuffix ReferenceType VariableDeclarator IfStatement CatchClause MemberReference String LoadServiceResource foundResource Literal MethodInvocation BlockStatement CatchClauseParameter foundResource null ! Ruby isSecurityRestricted LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression IfStatement SecurityException secEx ReferenceType VariableDeclarator ReferenceType VariableDeclarator ClassCreator BlockStatement BlockStatement MethodInvocation BinaryOperation BlockStatement String reportedPath MemberReference File actualPath MethodInvocation ReferenceType MemberReference StatementExpression IfStatement StatementExpression Literal MethodInvocation debugLogTry && MethodInvocation MethodInvocation StatementExpression StatementExpression namePlusSuffix isAbsolute File reportedPath Assignment BinaryOperation BlockStatement Assignment actualPath toString actualPath isFile actualPath canRead Assignment MethodInvocation MemberReference ClassCreator = && BinaryOperation BinaryOperation StatementExpression MemberReference MethodInvocation = MemberReference ClassCreator = MemberReference debugLogFound actualPath ReferenceType MethodInvocation == MethodInvocation Literal == MethodInvocation Literal Assignment actualPath JRubyFile MethodInvocation MethodInvocation create foundResource ReferenceType MemberReference MemberReference foundResource File RubyFile MethodInvocation MemberReference expandUserPath reportedPath Literal charAt '.' reportedPath Literal charAt '/' MemberReference MethodInvocation = runtime getCurrentDirectory RubyFile MethodInvocation MemberReference expandUserPath LoadServiceResource actualPath reportedPath runtime getCurrentContext namePlusSuffix 0 1 reportedPath reportedPath Literal MethodInvocation runtime getCurrentContext namePlusSuffix runtime getCurrentDirectory	1
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler methodCompiler	0
MethodDeclaration Modifier Annotation BasicType isIncluded ReturnStatement public Override boolean Literal true	0
MethodDeclaration Modifier ReferenceType getValue ReturnStatement public Object MemberReference constructor	0
MethodDeclaration Modifier Annotation ReferenceType split FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv MethodInvocation name Literal frame Literal module Literal visibility MemberReference reads MemberReference writes ElementArrayValue compat MemberReference ThreadContext IRubyObject MethodInvocation MemberReference MethodInvocation getLastlineString true true PRIVATE MemberReference MemberReference CompatVersion RUBY1_8 MemberReference split context context getRuntime BACKREF context	0
MethodDeclaration Modifier Annotation ReferenceType close IOException StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation This name Literal impl close "close"	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyModule MemberReference	0
MethodDeclaration Modifier Annotation Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject ReferenceType context MethodInvocation name Literal ThreadContext MemberReference MethodInvocation MethodInvocation f_add context MemberReference MemberReference MemberReference f_mul MemberReference MemberReference MemberReference f_mul context real real context image image	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RaiseException MethodInvocation MethodInvocation Literal newRaiseException MethodInvocation null MethodInvocation getPosix	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private ReferenceType name ReferenceType VariableDeclarator BinaryOperation BlockStatement Literal String MethodInvocation != MemberReference Literal IfStatement null MemberReference get null BinaryOperation BlockStatement name == MemberReference MethodInvocation ReturnStatement token MemberReference	1
MethodDeclaration Modifier BasicType IOException ReturnStatement private boolean BinaryOperation == Cast Literal ReferenceType MemberReference 0 GZIPInputStream io	0
MethodDeclaration Modifier Annotation ReferenceType to_f LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair RubyFloat BasicType VariableDeclarator Assignment MethodInvocation name Literal long time MethodInvocation MemberReference BinaryOperation = RubyFloat MethodInvocation BinaryOperation newFloat "to_f" time + BinaryOperation MemberReference getRuntime / MemberReference Literal * MemberReference Literal usec time time 1000	1
MethodDeclaration Modifier ReferenceType ThrowStatement static public IRubyObject MemberReference JumpException	0
MethodDeclaration Modifier ReferenceType callMethod FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType receiver ReferenceType methodName MethodInvocation IRubyObject String receiver MethodInvocation MemberReference callMethod receiver MethodInvocation getRuntime methodName getCurrentContext	0
MethodDeclaration Modifier BasicType getMax ReturnStatement public int MemberReference max	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType port ReferenceType host MethodInvocation name ElementArrayValue meta Literal ThreadContext IRubyObject IRubyObject IRubyObject MemberReference MemberReference MethodInvocation TernaryExpression Literal Literal true context recv RubyNumeric MemberReference fix2int MethodInvocation Literal MethodInvocation port host isNil null host MethodInvocation convertToString toString	1
MethodDeclaration Modifier ReferenceType ReturnStatement public IR_Class MethodInvocation IR_Class Literal	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override IRubyObject ArrayCreator ReferenceType ArrayInitializer IRubyObject MemberReference variableValueZero	0
MethodDeclaration Modifier ReferenceType getBlock ReturnStatement public BlockArgNode MemberReference	0
MethodDeclaration Modifier cancel StatementExpression public MethodInvocation channel Literal false	0
MethodDeclaration Modifier FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BranchCallback BranchCallback Label ClassCreator Label ClassCreator method MemberReference This branch method MemberReference go_to method MemberReference label This branch method MemberReference label ReferenceType ReferenceType Label Label	0
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public Object ReferenceType context ReferenceType rubyObject MethodInvocation BlockStatement ClassCreator ThreadContext IRubyObject rubyObject Literal respondsTo ReturnStatement ReferenceType Literal "to_i" ClassCreator Integer 0 ReferenceType Cast Integer BasicType Cast int ReferenceType MethodInvocation RubyNumeric rubyObject MemberReference Literal callMethod context "to_i"	1
MethodDeclaration Modifier ReferenceType getKind ReturnStatement public MemberReference kind	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RaiseException MethodInvocation MethodInvocation Literal newRaiseException by 0"	0
MethodDeclaration Modifier ReferenceType FormalParameter IOException LocalVariableDeclaration ReturnStatement private IRubyObject ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation Ruby Channel socketChannel MethodInvocation MemberReference TernaryExpression number openFile MethodInvocation MethodInvocation getMainStream runtime BinaryOperation MethodInvocation TernaryExpression getDescriptor getChannel instanceof MemberReference ReferenceType MethodInvocation asSocket BinaryOperation MethodInvocation Literal socketChannel SocketChannel instanceof MemberReference ReferenceType MethodInvocation asDatagramSocket 0 socketChannel DatagramChannel	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType arg0 BasicType arg1 ReferenceType arg2 MethodInvocation Label int Label MethodInvocation getMethodVisitor MemberReference MemberReference MemberReference arg0 arg1 arg2	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression ReturnStatement static public RubyModule ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MethodInvocation ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby ThreadContext context MethodInvocation runtime MethodInvocation RubyModule MethodInvocation ClassReference defineAnnotatedMethods RubyClass MethodInvocation MemberReference ArrayCreator ClassReference defineAnnotatedMethods RubyClass MethodInvocation ClassReference defineAnnotatedMethods RubyClass MethodInvocation ClassReference defineAnnotatedMethods runtime getCurrentContext MemberReference Literal MethodInvocation callMethod runtime Literal ReferenceType Literal MethodInvocation MethodInvocation defineClassUnder context ReferenceType ArrayInitializer ReferenceType Literal MethodInvocation MemberReference defineClassUnder ReferenceType Literal MethodInvocation MemberReference defineClassUnder ReferenceType context runtime Literal newString runtime getObject runtime MethodInvocation getObject IRubyObject MethodInvocation MethodInvocation MethodInvocation MethodInvocation runtime getObject runtime getObject "java" getAllocator runtime Literal runtime Literal runtime Literal runtime Literal "name"	0
MethodDeclaration Modifier installStaticMethods FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression private ReferenceType methodCallbacks ReferenceType javaClass ReferenceType method ReferenceType name ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Map TypeArgument TypeArgument Class TypeArgument Method String MethodInstaller invoker Cast == MemberReference Literal StatementExpression StatementExpression invoker MemberReference MemberReference addMethod ReferenceType ReferenceType ? ReferenceType MethodInvocation invoker null Assignment MethodInvocation method javaClass String NamedInstaller MethodInstaller methodCallbacks MemberReference get MemberReference ClassCreator = methodCallbacks MemberReference MemberReference put name invoker ReferenceType MemberReference name invoker name	1
MethodDeclaration ReferenceType ReturnStatement Iterator ClassCreator ReferenceType	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression TryStatement private RubySymbol ReferenceType internedName ReferenceType table ReferenceType VariableDeclarator Assignment LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration ForStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement StatementExpression String SymbolEntry lock MemberReference MemberReference = BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator Assignment Assignment Assignment MemberReference MethodInvocation lock int potentialNewSize > Assignment MemberReference StatementExpression StatementExpression int index int hash VariableDeclaration BinaryOperation Assignment IfStatement RubySymbol symbol ClassCreator MemberReference ClassCreator = MemberReference MemberReference = MemberReference MemberReference = symbol lock unlock MemberReference BinaryOperation = threshold Assignment Assignment ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = BinaryOperation BlockStatement ReferenceType MemberReference MemberReference ArraySelector table ReferenceType MemberReference MemberReference MemberReference MemberReference size potentialNewSize symbolTable table potentialNewSize + MemberReference Literal MemberReference MethodInvocation = MemberReference MemberReference = SymbolEntry e MemberReference e null e e next == MemberReference MemberReference ReturnStatement RubySymbol runtime internedName MemberReference SymbolEntry hash internedName symbol ArraySelector table size 1 table rehash table symbolTable ArraySelector table internedName e name MemberReference index MemberReference Assignment e symbol index MemberReference BinaryOperation = index & Assignment BinaryOperation MemberReference MethodInvocation = - MemberReference Literal hash internedName hashCode table length 1	1
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public String BasicType i ReferenceType o ReferenceType o2 ReferenceType Literal double String String String	0
MethodDeclaration Modifier ReferenceType getInstance ReturnStatement static public MemberReference instance	0
MethodDeclaration Modifier BasicType length ReturnStatement final int MemberReference str realSize	0
MethodDeclaration Modifier BasicType add FormalParameter LocalVariableDeclaration ReturnStatement public boolean ReferenceType o ReferenceType VariableDeclarator BinaryOperation T T previousValue MethodInvocation == MemberReference Literal map MemberReference Literal put previousValue null o null	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType internedName ReferenceType object BinaryOperation ReturnStatement MethodInvocation Ruby String RubyModule == MemberReference Literal Literal MemberReference MemberReference MemberReference getConstantInner null null runtime internedName object	1
MethodDeclaration Modifier copy FormalParameter StatementExpression StatementExpression public ReferenceType other Assignment Assignment Pair MemberReference MemberReference = MemberReference MemberReference = head other head tail other tail	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IOException LocalVariableDeclaration IfStatement AssertStatement ReturnStatement public IRubyObject ReferenceType input BasicType type BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation MethodInvocation int int i MethodInvocation == MemberReference Literal ReturnStatement == MemberReference Literal MemberReference input type '@' MethodInvocation type ';' i MemberReference i	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType recv MethodInvocation name Literal IRubyObject recv MethodInvocation getRuntime "to_s" Literal newString	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context ReferenceType recv ReferenceType block TernaryExpression name Literal frame Literal final ThreadContext IRubyObject Block MethodInvocation MethodInvocation MethodInvocation "each_char" true block isGiven MemberReference MemberReference MemberReference MethodInvocation MemberReference Literal enumeratorize context recv block context getRuntime recv "each_char"	1
MethodDeclaration Modifier BasicType StatementExpression LocalVariableDeclaration IfStatement ReturnStatement private int MethodInvocation BasicType VariableDeclarator MethodInvocation StatementExpression MemberReference check int options BinaryOperation ! Assignment options & MethodInvocation BinaryOperation MemberReference MethodInvocation |= pattern | BinaryOperation MemberReference options | MemberReference MemberReference RE_OPTION_EXTENDED RE_OPTION_IGNORECASE RE_OPTION_MULTILINE	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation RubyFixnum MemberReference MethodInvocation newFixnum CompatVersion RUBY1_9 context getRuntime runtime MemberReference MemberReference MemberReference MemberReference BinaryOperation codePoint runtime value encoding value bytes value begin + MemberReference MemberReference value begin value realSize	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String MethodInvocation String MemberReference valueOf value	0
MethodDeclaration Modifier Annotation ReferenceType listFiles FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration ForStatement ReturnStatement public Override File Modifier ReferenceType filter Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ForControl BlockStatement MemberReference final FilenameFilter final File files SuperMethodInvocation == MemberReference Literal ReturnStatement JRubyFile smartFiles ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression smartFiles MemberReference listFiles files null Literal ReferenceType MemberReference BasicType VariableDeclarator VariableDeclarator < MemberReference MemberReference ++ i Assignment filter null JRubyFile files length int i Literal j MemberReference i j MemberReference MethodInvocation = 0 files length ArraySelector smartFiles SuperMethodInvocation MemberReference MemberReference getAbsolutePath ArraySelector MethodInvocation files i MemberReference getPath i	1
MethodDeclaration Modifier Annotation ReferenceType socketpair FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType args MethodInvocation IRubyObject IRubyObject MethodInvocation MemberReference MemberReference socketpair recv MethodInvocation getRuntime recv args getCurrentContext	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType MethodInvocation Ruby ThreadContext IRubyObject Block callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation MethodInvocation context self self arg1 MemberReference MemberReference MemberReference MemberReference arg2 MemberReference MemberReference MemberReference MemberReference arg3 MemberReference MemberReference MemberReference MemberReference RuntimeHelpers MemberReference MemberReference MemberReference getBlock runtime context self runtime context self runtime context self context self	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType block ReferenceType sig MethodInvocation Ruby BlockCallback String runtime getNil	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement public Operand BasicType argIndex BasicType getSubArray MethodInvocation ReturnStatement Literal int boolean ! isConstant Literal null null	1
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression ReturnStatement public Node ReferenceType Assignment This Node This MemberReference = MemberReference	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation Attribute MethodInvocation getMethodVisitor MemberReference arg0	0
MethodDeclaration Modifier Annotation FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType arg ReferenceType block MethodInvocation Ruby ThreadContext IRubyObject IRubyObject Block rest MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign runtime context self arg block true	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MemberReference BlockStatement BlockStatement Node BodyCompiler boolean ArrayNode arrayNode Cast boolean doit BinaryOperation boolean popit BinaryOperation doit LocalVariableDeclaration StatementExpression IfStatement ForStatement ReferenceType MemberReference || MemberReference MemberReference && MemberReference MemberReference ReferenceType VariableDeclarator MethodInvocation MemberReference StatementExpression ForControl BlockStatement ArrayNode node expr ! RubyInstanceConfig PEEPHOLE_OPTZ ! RubyInstanceConfig PEEPHOLE_OPTZ ! expr ArrayCallback ClassCreator context MethodInvocation MemberReference MethodInvocation popit MethodInvocation VariableDeclaration MethodInvocation LocalVariableDeclaration StatementExpression ReferenceType MethodDeclaration arrayNode MethodInvocation childNodes arrayNode context consumeCurrentValue ReferenceType VariableDeclarator iter hasNext ReferenceType VariableDeclarator MethodInvocation ArrayCallback Modifier nextValue FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression toArray Iterator TypeArgument iter MethodInvocation Node nextNode MethodInvocation MemberReference MemberReference Literal compile public ReferenceType context ReferenceType BasicType index ReferenceType VariableDeclarator MethodInvocation ReferenceType arrayNode MethodInvocation childNodes iter next nextNode context false BodyCompiler Object int Node node Cast MemberReference MemberReference Literal compile Node iterator ReferenceType Cast node context true Node ReferenceType MemberReference Object	1
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String BinaryOperation + BinaryOperation Literal + BinaryOperation TernaryExpression "] + BinaryOperation MemberReference MemberReference Literal Literal + BinaryOperation Literal "" + BinaryOperation MemberReference "[" + BinaryOperation Literal + Literal MemberReference " = " "\t"	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter IOException LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType args ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation name Literal optional Literal IRubyObject List TypeArgument array ClassCreator && BinaryOperation MemberReference StatementExpression LocalVariableDeclaration IfStatement ForStatement MethodInvocation getRuntime 1 ReferenceType ReferenceType != MemberReference Literal ArraySelector MethodInvocation args MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement ForControl BlockStatement MemberReference newArray IRubyObject ArrayList TypeArgument args length 0 Literal isNil array MethodInvocation add ByteList sep Cast > MemberReference Literal StatementExpression VariableDeclaration MethodInvocation Assignment StatementExpression array ReferenceType 0 ArrayCreator read ReferenceType MethodInvocation args length 0 Assignment ReferenceType VariableDeclarator ! result isNil MemberReference MethodInvocation = MethodInvocation IRubyObject ReferenceType Literal RubyString MethodInvocation MethodInvocation getRuntime MemberReference MemberReference = IRubyObject result MethodInvocation result MemberReference array MemberReference add IRubyObject 0 getGlobalVariables Literal get sep ArraySelector MethodInvocation MethodInvocation args MemberReference sep result "$/" Literal convertToString getByteList sep 0	1
MethodDeclaration * This is since it should not be * used outside of use of * See * for more */ ReferenceType ReturnStatement InputStream MemberReference	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SynchronizedStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MemberReference IfStatement MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation result BinaryOperation BlockStatement runtime getNil MemberReference MemberReference checkArgs || BinaryOperation BinaryOperation StatementExpression runtime largs == MemberReference Literal < MethodInvocation Literal Assignment ArraySelector result null RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 MemberReference MemberReference = Literal ctx larg MemberReference Literal MemberReference callMethod larg ArraySelector result ArraySelector result larg 0 ctx "<=>" ArraySelector result Literal Literal Literal 0 0 0	0
MethodDeclaration Modifier ReferenceType op_lt FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context BasicType other MethodInvocation ThreadContext long RubyBoolean MethodInvocation BinaryOperation newBoolean context getRuntime < MemberReference MemberReference value other	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType block ReturnStatement CatchClause CatchClause ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ThrowStatement MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference callBlock JumpException.BreakJump bj MethodInvocation JumpException.RetryJump rj MethodInvocation context caller self arg1 arg2 arg3 block MemberReference MemberReference handleBreakJump MemberReference retryJumpError context bj context	1
MethodDeclaration Modifier ReferenceType setConstant FormalParameter FormalParameter LocalVariableDeclaration IfStatement StatementExpression StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType name ReferenceType value ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation BinaryOperation BlockStatement MemberReference String IRubyObject IRubyObject oldValue MethodInvocation != MemberReference Literal LocalVariableDeclaration IfStatement MemberReference MemberReference instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement value MemberReference oldValue null ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement name value value RubyModule ReferenceType VariableDeclarator BinaryOperation BlockStatement name Ruby runtime MethodInvocation == MemberReference MemberReference StatementExpression StatementExpression RubyModule module Cast == MethodInvocation Literal StatementExpression StatementExpression getRuntime oldValue UNDEF MethodInvocation MethodInvocation ReferenceType MemberReference module null MethodInvocation MethodInvocation runtime MethodInvocation runtime MethodInvocation getWarnings RubyModule value module MemberReference module This setParent BinaryOperation MemberReference BinaryOperation MemberReference warn name + BinaryOperation MemberReference ID + Literal MemberReference name + MethodInvocation Literal name "already initialized constant " name getName "::"	0
MethodDeclaration Modifier BasicType FormalParameter IfStatement StatementExpression ReturnStatement public boolean ReferenceType command BinaryOperation BlockStatement MethodInvocation Literal IRubyObject || BinaryOperation MethodInvocation ReturnStatement MemberReference remove true == MemberReference Literal ! MemberReference contains Literal command null command false	0
MethodDeclaration Modifier BasicType sprintf FormalParameter FormalParameter FormalParameter ReturnStatement static public boolean ReferenceType to ReferenceType format ReferenceType args MethodInvocation ByteList CharSequence IRubyObject MemberReference MemberReference ClassCreator to format ReferenceType MemberReference args	0
MethodDeclaration Modifier Annotation ReferenceType initialize_copy FormalParameter IfStatement StatementExpression LocalVariableDeclaration TryStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType obj BinaryOperation BlockStatement Cast ReferenceType VariableDeclarator StatementExpression CatchClause This name Literal required Literal IRubyObject == This MemberReference ReturnStatement ReferenceType MemberReference String name Cast Assignment CatchClauseParameter ThrowStatement "initialize_copy" 1 obj This RubyObject obj ReferenceType MemberReference MemberReference Cast = CloneNotSupportedException e MethodInvocation Base obj ReferenceType Cast MethodInvocation getRuntime MessageDigest ReferenceType MemberReference BinaryOperation newTypeError Base obj + BinaryOperation Literal + Literal MemberReference ")" "Could not copy of digest (" name	1
MethodDeclaration Modifier ReferenceType suite Exception ReturnStatement static public Test ClassCreator ReferenceType MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType x MethodInvocation ThreadContext IRubyObject x MemberReference Literal callMethod context "truncate"	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType block MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject Block body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context arg0 arg1 arg2 type block	0
MethodDeclaration Modifier ReferenceType pre FormalParameter FormalParameter FormalParameter ReturnStatement protected ReferenceType context ReferenceType ReferenceType MethodInvocation ThreadContext RubyModule context MemberReference MemberReference MemberReference scope	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override Class TypeArgument ClassReference ? ReferenceType Date	0
MethodDeclaration Modifier line FormalParameter LocalVariableDeclaration StatementExpression StatementExpression public BasicType line ReferenceType VariableDeclarator MethodInvocation MethodInvocation int Label label ClassCreator MemberReference label MemberReference MemberReference visitLineNumber ReferenceType label line label Label	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block BinaryOperation StatementExpression MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block == MemberReference Literal MethodInvocation compiledMethod MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call compiledMethod null initializeMethod context self clazz name args block	1
MethodDeclaration Modifier BasicType FormalParameter IfStatement ReturnStatement private int ReferenceType whenNode BinaryOperation BlockStatement IfStatement Literal WhenNode instanceof MethodInvocation ReferenceType LocalVariableDeclaration IfStatement LocalVariableDeclaration ForStatement ReturnStatement BinaryOperation BlockStatement IfStatement null whenNode getExpressionNodes ArrayNode ReferenceType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator ForControl BlockStatement MemberReference instanceof MethodInvocation ReferenceType LocalVariableDeclaration ReturnStatement BinaryOperation BlockStatement IfStatement ArrayNode expression Cast instanceof MethodInvocation ReferenceType ReturnStatement int cases ArrayCreator VariableDeclaration BinaryOperation MemberReference SwitchStatement cases whenNode getExpressionNodes FixnumNode ReferenceType VariableDeclarator ArrayCreator instanceof MethodInvocation ReferenceType LocalVariableDeclaration IfStatement BinaryOperation BlockStatement ReferenceType MethodInvocation expression BinaryOperation get WhenNode Literal BasicType MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation SwitchStatementCase SwitchStatementCase FixnumNode fixnumNode Cast BasicType ArrayInitializer whenNode getExpressionNodes StrNode ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement instanceof MethodInvocation ReferenceType LocalVariableDeclaration IfStatement ArrayNode whenNode getExpressionNodes - MethodInvocation Literal null int expression size int i Literal i cases length expression MethodInvocation MemberReference get FIXNUMNODE StatementExpression BreakStatement ReturnStatement ReferenceType MethodInvocation int Cast StrNode strNode Cast == MethodInvocation Literal ReturnStatement ReturnStatement whenNode getExpressionNodes SymbolNode ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement expression size 1 0 i Assignment Literal FixnumNode whenNode getExpressionNodes BasicType MethodInvocation ReferenceType MethodInvocation strNode MethodInvocation getValue 1 ArrayCreator ArrayCreator SymbolNode symbolNode Cast == MethodInvocation Literal ReturnStatement ReturnStatement MemberReference Cast = null int fixnumNode getValue StrNode whenNode getExpressionNodes length BasicType ArrayInitializer BasicType ArrayInitializer ReferenceType MethodInvocation symbolNode MethodInvocation getName 1 ArrayCreator ArrayCreator ArraySelector cases BasicType Cast int MethodInvocation int MethodInvocation SymbolNode whenNode getExpressionNodes length BasicType ArrayInitializer BasicType ArrayInitializer MemberReference int ReferenceType MethodInvocation strNode MethodInvocation getValue strNode MethodInvocation getValue int MethodInvocation int MethodInvocation i FixnumNode expression MemberReference get Literal get hashCode symbolNode MethodInvocation getName symbolNode MethodInvocation getName i 0 Literal charAt hashCode 0	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public IRubyObject ReferenceType context ReferenceType self ReferenceType receiver ReferenceType scriptObject ReferenceType name ReferenceType javaName ReferenceType scopeNames BasicType arity BasicType required BasicType optional BasicType rest ReferenceType callConfig ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ThreadContext IRubyObject IRubyObject Object String String String int int int int CallConfiguration Class compiledClass MethodInvocation Ruby runtime MethodInvocation RubyClass rubyClass MethodInvocation scope MethodInvocation MethodFactory factory MethodInvocation DynamicMethod method MethodInvocation rubyClass MemberReference MemberReference addMethod MemberReference MemberReference MethodInvocation runtime getNil scriptObject getClass context getRuntime MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MethodFactory MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference name method receiver context runtime MemberReference runtime receiver name context scopeNames required optional rest compiledClass getClassLoader factory rubyClass javaName arity scope scriptObject callConfig name	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset ReferenceType length TernaryExpression name Literal required Literal ThreadContext IRubyObject IRubyObject BinaryOperation MethodInvocation MethodInvocation 2 == MethodInvocation Literal MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference Platform MethodInvocation getPlatform 32 context offset length context offset length	1
MethodDeclaration Modifier FormalParameter SynchronizedStatement synchronized public ReferenceType subclass MethodInvocation LocalVariableDeclaration IfStatement StatementExpression RubyClass runtime getHierarchyLock ReferenceType VariableDeclarator BinaryOperation StatementExpression MethodInvocation Set TypeArgument oldSubclasses MemberReference == MemberReference Literal Assignment oldSubclasses MemberReference add ReferenceType subclasses oldSubclasses null MemberReference Assignment = subclass RubyClass subclasses MemberReference ClassCreator = oldSubclasses ReferenceType Literal TypeArgument 4 ReferenceType RubyClass	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override Class TypeArgument ClassReference ? ReferenceType BigInteger	0
MethodDeclaration Modifier send FormalParameter FormalParameter StatementExpression public ReferenceType channel ReferenceType message MethodInvocation Enum TypeArgument Object MethodInvocation MemberReference send ? channel message	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType foo MethodInvocation Object MemberReference foo	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType callType Assignment CallType MemberReference MemberReference = lastCallType callType	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public Operand BasicType argIndex BasicType getSubArray TernaryExpression int boolean BinaryOperation This MemberReference == MemberReference Literal Nil NIL argIndex 0	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType interfaces ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation name Literal rest Literal module Literal ThreadContext IRubyObject IRubyObject Class javaInterfaces ArrayCreator VariableDeclaration BinaryOperation MemberReference StatementExpression MemberReference MethodInvocation BinaryOperation true true ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment javaInterfaces context getRuntime + Literal MethodInvocation Class interfaces length int i Literal i interfaces length MemberReference MethodInvocation = "I" System currentTimeMillis 0 ArraySelector javaInterfaces MemberReference MemberReference ArraySelector interfaces i MemberReference i	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement ThrowStatement static public IRubyObject ReferenceType bj ReferenceType context BinaryOperation BlockStatement MemberReference JumpException ReferenceType ThreadContext == MethodInvocation MethodInvocation ReturnStatement bj bj context Cast ReferenceType MethodInvocation IRubyObject bj getValue	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public RaiseException ReferenceType message MethodInvocation String MethodInvocation MemberReference newRaiseException message	0
MethodDeclaration Modifier ReferenceType StatementExpression TryStatement public Object MethodInvocation ReturnStatement CatchClause CatchClause CatchClause CatchClause Literal checkArity MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement 0 constructor newInstance IllegalArgumentException iae MethodInvocation IllegalAccessException iae MethodInvocation InvocationTargetException ite MethodInvocation Throwable t MethodInvocation MemberReference handlelIllegalArgumentEx MemberReference handleIllegalAccessEx MemberReference MemberReference handleInvocationTargetEx MemberReference MemberReference handleThrowable iae iae ite constructor t constructor	1
MethodDeclaration Modifier prepare FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement public ReferenceType context ReferenceType runtime ReferenceType self ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 ReferenceType arg7 ReferenceType arg8 ReferenceType arg9 ReferenceType block ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement BinaryOperation StatementExpression ThreadContext Ruby IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Block DynamicScope scope MethodInvocation isSimple StatementExpression StatementExpression != MethodInvocation Literal MethodInvocation context getCurrentScope MethodInvocation MethodInvocation getBlock null MemberReference MemberReference MemberReference processBlockArg scope MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference ArrayCreator MemberReference prepare scope runtime block arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9 context runtime self ReferenceType ArrayInitializer block IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference arg0 arg1 arg2 arg3 arg4 arg5 arg6 arg7 arg8 arg9	1
MethodDeclaration Modifier IfStatement private MemberReference StatementExpression StatementExpression MethodInvocation MethodInvocation	1
MethodDeclaration Modifier BasicType FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement private int ReferenceType runtime BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation ReturnStatement BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation BlockStatement BinaryOperation Ruby int p MemberReference int end BinaryOperation > MemberReference MemberReference Literal byte bytes MemberReference Encoding enc MemberReference int s MethodInvocation == MemberReference Literal Literal && BinaryOperation BinaryOperation LocalVariableDeclaration IfStatement - MemberReference MemberReference value begin + MemberReference MemberReference p end 0 value bytes value encoding enc MemberReference MemberReference MemberReference MemberReference prevCharHead s - 1 0 > MemberReference MemberReference == MethodInvocation Literal BasicType VariableDeclarator BinaryOperation StatementExpression s p p value realSize bytes p end end s p MemberReference MemberReference MemberReference MemberReference MemberReference codePoint '\n' int s2 MethodInvocation && BinaryOperation BinaryOperation Assignment runtime enc bytes s end enc MemberReference MemberReference MemberReference MemberReference prevCharHead != MemberReference Literal == MethodInvocation Literal MemberReference MemberReference = bytes p s end s2 - 1 MemberReference MemberReference MemberReference MemberReference MemberReference codePoint '\r' s s2 runtime enc bytes s2 end	1
MethodDeclaration Modifier addMethod FormalParameter StatementExpression IfStatement public ReferenceType m MethodInvocation BinaryOperation BlockStatement IfStatement IR_Method _methods MemberReference add && BinaryOperation Cast LocalVariableDeclaration StatementExpression BinaryOperation BlockStatement IfStatement m instanceof This ReferenceType ReferenceType This ReferenceType VariableDeclarator MethodInvocation && MemberReference BinaryOperation LocalVariableDeclaration StatementExpression BinaryOperation BlockStatement BlockStatement IR_Method IR_Method IR_Class c Cast TernaryExpression addInstr m _isInstanceMethod instanceof This ReferenceType ReferenceType VariableDeclarator MethodInvocation && MemberReference BinaryOperation LocalVariableDeclaration StatementExpression ThrowStatement ReferenceType Cast MemberReference ClassCreator ClassCreator IR_Class IR_Class c Cast ClassCreator addInstr ! m _isInstanceMethod instanceof This ReferenceType ReferenceType VariableDeclarator MethodInvocation ClassCreator IR_Class ReferenceType This m _isInstanceMethod ReferenceType MemberReference MemberReference ReferenceType MemberReference MemberReference ReferenceType This ReferenceType MemberReference MemberReference IR_Module IR_Module c Cast ClassCreator addInstr ReferenceType Literal MetaObject MemberReference DEFINE_INSTANCE_METHOD_Instr c m DEFINE_CLASS_METHOD_Instr c m IR_Class DEFINE_INSTANCE_METHOD_Instr c m ReferenceType This ReferenceType MemberReference MemberReference RuntimeException "Encountered method add in a _parent IR_Module DEFINE_CLASS_METHOD_Instr c m	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair RubyString ReferenceType context ReferenceType arg0 ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal compat MemberReference ThreadContext IRubyObject RubyString str MethodInvocation str MemberReference MemberReference str CompatVersion RUBY1_9 MethodInvocation context arg0 context getRuntime	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType MemberReference BlockStatement MethodInvocation Ruby ThreadContext IRubyObject Block ReturnStatement context MethodInvocation MethodInvocation MethodInvocation getBlock MemberReference MethodInvocation yield context MethodInvocation MethodInvocation context argsNode MemberReference MemberReference MemberReference MemberReference getBlock MemberReference MethodInvocation Literal Literal Literal yield runtime context self context argsNode MemberReference MemberReference MemberReference MemberReference null null true runtime context self	0
MethodDeclaration Modifier modifyCheck IfStatement IfStatement final BinaryOperation ThrowStatement BinaryOperation BlockStatement != BinaryOperation Literal MethodInvocation && MethodInvocation BinaryOperation ThrowStatement & MemberReference MemberReference 0 MethodInvocation getRuntime ! isTaint >= MethodInvocation Literal MethodInvocation flags Literal MethodInvocation getRuntime 4 MethodInvocation getRuntime "string" getSafeLevel Literal newSecurityError "Insecure: can't modify string"	1
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression StatementExpression static ReferenceType l Assignment Assignment MethodInvocation ByteList MemberReference Literal = MemberReference Literal = l l begin 0 l realSize 0	0
MethodDeclaration Modifier LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Label ClassCreator method dup method MemberReference method pop loadNil method MemberReference label ReferenceType Label	0
MethodDeclaration Modifier Annotation ReferenceType obj_to_enum FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType arg ReferenceType block MethodInvocation name ElementArrayValue frame Literal ThreadContext IRubyObject IRubyObject Block MemberReference MemberReference MemberReference Literal Literal true context self arg "to_enum" "enum_for"	1
MethodDeclaration Modifier main FormalParameter StatementExpression static public ReferenceType _args MethodInvocation String MethodInvocation run suite	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType javaInvokee ReferenceType arg0 ReferenceType arg1 MethodInvocation MethodInvocation MethodInvocation BlockStatement MethodInvocation Object Object Object Literal checkArity MemberReference MemberReference ReturnStatement MemberReference MemberReference MemberReference MemberReference 2 javaInvokee javaInvokee MethodInvocation method javaInvokee arg0 arg1 MemberReference MemberReference MemberReference javaInvokee arg0 arg1	0
MethodDeclaration Modifier Annotation ReferenceType interfaces ReturnStatement public JRubyMethod RubyArray MethodInvocation MethodInvocation getInterfaces	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType block ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block Object result Cast MemberReference MemberReference javaToRuby ReferenceType MethodInvocation ruby result Object handle TernaryExpression MethodInvocation invoke MemberReference Literal Cast MemberReference isStatic null ReferenceType MemberReference arg0 JavaObjectWrapper self	0
MethodDeclaration Modifier FormalParameter IfStatement public BasicType elementCount BinaryOperation BlockStatement BlockStatement int < MemberReference Literal LocalVariableDeclaration StatementExpression StatementExpression ThrowStatement elementCount 6 ReferenceType VariableDeclarator MethodInvocation MethodInvocation ClassCreator Class params ArrayCreator Arrays MemberReference ClassReference fill Literal MethodInvocation invokeUtilityMethod ReferenceType Literal ReferenceType MemberReference params ReferenceType ClassReference MemberReference sig NotCompilableException "Don't use for more than 5 Class elementCount IRubyObject ReferenceType params IRubyObject	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation BlockStatement BlockStatement name Literal compat MemberReference ThreadContext IRubyObject Ruby runtime MethodInvocation RubyString otherStr MethodInvocation Encoding enc MethodInvocation == MemberReference Literal MethodInvocation && MethodInvocation MethodInvocation ReturnStatement ReturnStatement CompatVersion RUBY1_9 context getRuntime other convertToString MemberReference isCompatibleWith enc null runtime getNil singleByteOptimizable otherStr singleByteOptimizable MethodInvocation MethodInvocation otherStr RubyFixnum MemberReference MethodInvocation newFixnum MemberReference MemberReference MemberReference MemberReference runtime value MemberReference runtime enc value otherStr value otherStr value	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public Operand Modifier ReferenceType ReferenceType s ReferenceType VariableDeclarator ReferenceType VariableDeclarator ClassCreator final ArgsCatNode IR_Scope Operand v1 MethodInvocation Operand v2 MethodInvocation ReferenceType MemberReference MemberReference MethodInvocation MemberReference build MethodInvocation MemberReference build v1 v2 getFirstNode s s	0
MethodDeclaration Modifier Annotation FormalParameter FormalParameter FormalParameter AssertStatement SwitchStatement public Override ReferenceType values BasicType index BasicType size BinaryOperation BinaryOperation MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase IRubyObject int int <= MemberReference Literal + Literal MemberReference size Literal StatementExpression Literal StatementExpression Literal StatementExpression Literal StatementExpression size 2 only scopes with not " size 4 Assignment 3 Assignment 2 Assignment 1 Assignment MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference = variableValueZero ArraySelector values variableValueOne ArraySelector values variableValueTwo ArraySelector values variableValueThree ArraySelector values BinaryOperation BinaryOperation BinaryOperation BinaryOperation - MemberReference Literal - MemberReference Literal - MemberReference Literal - MemberReference Literal values length 4 values length 3 values length 2 values length 1	1
MethodDeclaration Modifier ReferenceType getType FormalParameter FormalParameter ReturnStatement static public String BasicType i ReferenceType o Literal double String	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean BinaryOperation == MethodInvocation MethodInvocation nativeThread get Thread currentThread	1
MethodDeclaration Modifier Annotation BasicType ReturnStatement public Override int TernaryExpression BinaryOperation MemberReference MemberReference == BinaryOperation Literal ClassIndex TRUE ClassIndex FALSE & MemberReference MemberReference 0 flags	0
MethodDeclaration Modifier ReferenceType getNextNode ReturnStatement public Node MemberReference nextNode	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement protected JavaCallable ReferenceType self ReferenceType name ReferenceType args BasicType arity ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference IRubyObject String IRubyObject int JavaCallable callable == Assignment Literal LocalVariableDeclaration IfStatement StatementExpression IfStatement callable MemberReference MemberReference = null ReferenceType VariableDeclarator BinaryOperation BlockStatement Assignment BinaryOperation BlockStatement callable javaCallable JavaCallable callablesForArity Literal || BinaryOperation BinaryOperation ThrowStatement MemberReference MethodInvocation = != MethodInvocation MemberReference ThrowStatement null >= MemberReference MemberReference == Assignment Literal MethodInvocation callable CallableSelector MemberReference MemberReference MemberReference MemberReference MemberReference matchingCallableArityN callable MemberReference getParameterTypes args length MethodInvocation arity javaCallables length MemberReference MemberReference = null self MethodInvocation getRuntime self cache callablesForArity args arity length self MethodInvocation getRuntime callablesForArity ArraySelector javaCallables MemberReference BinaryOperation newArgumentError MemberReference MethodInvocation newArgumentError MemberReference args length - MemberReference Literal args length callable MemberReference getParameterTypes arity javaCallables length 1 length	1
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType function ReferenceType args MethodInvocation Ruby Function HeapInvocationBuffer Util MemberReference MethodInvocation newSigned8 runtime invoker MemberReference MemberReference invokeInt function args	1
MethodDeclaration Modifier Annotation ReferenceType setValue FormalParameter FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType value MethodInvocation MemberReference name Literal required Literal ThreadContext IRubyObject MethodInvocation MemberReference value 1 This MemberReference put context value	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public ReferenceType self ReferenceType scope ReferenceType VariableDeclarator ClassCreator IRubyObject DynamicScope frame MethodInvocation ReferenceType MemberReference MemberReference MethodInvocation MethodInvocation MemberReference MemberReference MemberReference self frame frame getVisibility scope file line	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType Node MemberReference MemberReference createList Node	0
MethodDeclaration Modifier ReferenceType getArgsNode ReturnStatement public Node MemberReference argsNode	0
MethodDeclaration Modifier ReferenceType getFile ReturnStatement public String MemberReference filename	0
MethodDeclaration Modifier BasicType contains FormalParameter ReturnStatement public boolean ReferenceType o MethodInvocation Object MemberReference o	1
MethodDeclaration Modifier cleanup FormalParameter FormalParameter IfStatement public ReferenceType runtime BasicType BinaryOperation BlockStatement BlockStatement Ruby boolean != MemberReference Literal StatementExpression StatementExpression finalizer null MethodInvocation MethodInvocation finalizer MemberReference MemberReference finalize MemberReference MemberReference finalize runtime runtime	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement static public RubyArray ReferenceType runtime ReferenceType objs ClassCreator Ruby IRubyObject ReferenceType MemberReference MemberReference Literal RubyArray runtime objs false	0
MethodDeclaration pre FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReferenceType context ReferenceType self ReferenceType ReferenceType name ReferenceType block ReferenceType scope ReferenceType MethodInvocation ThreadContext IRubyObject RubyModule String Block context MemberReference MemberReference MemberReference MemberReference MemberReference name self block scope	0
MethodDeclaration Modifier BasicType ReturnStatement public long BinaryOperation / MethodInvocation Literal get 1000	0
MethodDeclaration Modifier StatementExpression public MethodInvocation	0
MethodDeclaration Modifier ReferenceType newString FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public RubyString ReferenceType runtime BasicType bytes BasicType start BasicType length BasicType VariableDeclarator MethodInvocation ClassCreator Ruby byte int int byte copy ArrayCreator System MemberReference MemberReference MemberReference Literal MemberReference arraycopy ReferenceType MemberReference MethodInvocation ClassCreator BasicType MemberReference bytes start copy 0 length RubyString runtime runtime getString ReferenceType MemberReference Literal byte length ByteList copy false	0
MethodDeclaration Modifier BasicType tpositive_p FormalParameter FormalParameter ReturnStatement private static boolean ReferenceType context ReferenceType x MethodInvocation ThreadContext IRubyObject ! MemberReference MemberReference context x	1
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType Assignment IRubyObject This MemberReference = MemberReference	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MemberReference ReferenceType EMPTY_LIST Node	0
MethodDeclaration Annotation dispatch FormalParameter FormalParameter TryStatement Override Modifier ReferenceType join Modifier ReferenceType args StatementExpression CatchClause final final Object MethodInvocation CatchClauseParameter MemberReference MemberReference Exception e join args	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType index MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject MemberReference MethodInvocation Literal CompatVersion RUBY1_9 context MemberReference true index	0
MethodDeclaration Modifier Annotation ReferenceType gid_set FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg MethodInvocation name Literal required Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject MethodInvocation MemberReference gid_set 1 true Visibility PRIVATE context getRuntime arg	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static public RubyHash ReferenceType runtime ReferenceType ReferenceType ReferenceType VariableDeclarator MethodInvocation MemberReference Ruby IRubyObject IRubyObject RubyHash hash MethodInvocation hash MemberReference MemberReference MemberReference hash RubyHash MemberReference runtime runtime	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject This name Literal compat MemberReference CompatVersion RUBY1_9	0
MethodDeclaration Modifier ReferenceType ReturnStatement static public ClassCreator ReferenceType	0
MethodDeclaration Modifier BasicType FormalParameter LocalVariableDeclaration TryStatement private int ReferenceType str ReferenceType VariableDeclarator ReturnStatement CatchClause RubyString ByteList value MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement str getByteList pattern MemberReference MemberReference BinaryOperation MemberReference JOniException je MethodInvocation value bytes value begin + MemberReference MemberReference regs MethodInvocation getRuntime value begin value realSize MethodInvocation newIndexError je getMessage	1
MethodDeclaration Modifier ReferenceType ci FormalParameter IfStatement static public String ReferenceType n MethodInvocation BlockStatement BlockStatement Class n isArray StatementExpression IfStatement IfStatement Assignment MethodInvocation BlockStatement BlockStatement MethodInvocation BlockStatement BlockStatement MemberReference MethodInvocation = n isPrimitive IfStatement ReturnStatement n isPrimitive IfStatement ReturnStatement n n getComponentType BinaryOperation BlockStatement IfStatement BinaryOperation BinaryOperation BlockStatement IfStatement BinaryOperation == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement + Literal MethodInvocation == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement + BinaryOperation Literal n Byte TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement "[" MemberReference ci n Byte TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement + Literal MethodInvocation ";" n Boolean TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement n "B" n Boolean TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement "L" MemberReference p n Short TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement "Z" n Short TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement n n Character TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement "S" n Character TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement n Integer TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement "C" n Integer TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement n Float TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement BlockStatement "I" n Float TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement IfStatement n Double TYPE Literal == MemberReference MemberReference ReturnStatement ThrowStatement "F" n Double TYPE Literal == MemberReference MemberReference ReturnStatement BinaryOperation BlockStatement BlockStatement n Long TYPE Literal ClassCreator "D" n Long TYPE Literal == MemberReference MemberReference ReturnStatement ThrowStatement ReferenceType BinaryOperation "J" n Void TYPE Literal ClassCreator RuntimeException + Literal MethodInvocation "V" ReferenceType BinaryOperation type in compiler: " n getName RuntimeException + Literal MethodInvocation type in compiler: " n getName	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject Object array MethodInvocation int x MethodInvocation int y MethodInvocation MemberReference MethodInvocation javaToRuby MemberReference RubyFixnum MethodInvocation fix2int RubyFixnum MethodInvocation fix2int ruby Array MethodInvocation MemberReference get self arg0 convertToInteger arg1 convertToInteger Array MemberReference MemberReference get y array x	0
MethodDeclaration Modifier Annotation ReferenceType op_mod FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement ClassCreator name ElementArrayValue required Literal ThreadContext IRubyObject Ruby runtime MethodInvocation || MethodInvocation MethodInvocation ReturnStatement RubyBigDecimal val MethodInvocation == MemberReference Literal ReturnStatement || BinaryOperation MethodInvocation ReturnStatement BigDecimal MethodInvocation < BinaryOperation Literal StatementExpression MethodInvocation ReferenceType MemberReference MemberReference Literal Literal 1 context getRuntime isInfinity isNaN MethodInvocation MemberReference Literal getVpValue val null MethodInvocation || MethodInvocation MethodInvocation val isZero MethodInvocation value MemberReference * MethodInvocation MethodInvocation 0 Assignment setResult RubyBigDecimal runtime "%" "modulo" MemberReference newNaN arg false MemberReference Literal MemberReference Literal callCoerced val isInfinity val isNaN MemberReference newNaN val value signum val.value signum MemberReference MethodInvocation = runtime context "%" arg true runtime MemberReference add val value	1
MethodDeclaration Modifier ReferenceType next LocalVariableDeclaration WhileStatement ReturnStatement public Object ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference Object obj Literal iter hasNext LocalVariableDeclaration StatementExpression IfStatement obj null ReferenceType VariableDeclarator Assignment BinaryOperation BreakStatement node Cast MemberReference MethodInvocation = != MemberReference Literal ReferenceType MethodInvocation obj node get obj null iter next	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType unusedBlock MethodInvocation name Literal frame Literal module Literal visibility MemberReference ThreadContext IRubyObject Block MethodInvocation true true Visibility PRIVATE context getRuntime	0
MethodDeclaration Modifier ReferenceType defineModuleUnder FormalParameter ReturnStatement public RubyModule ReferenceType name MethodInvocation String MethodInvocation getRuntime MemberReference This defineModuleUnder name	0
MethodDeclaration FormalParameter StatementExpression ReferenceType Assignment This MemberReference = MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter RaiseException LocalVariableDeclaration TryStatement ReturnStatement protected LoadServiceResource ReferenceType namePlusSuffix ReferenceType loadPathEntry ReferenceType VariableDeclarator IfStatement CatchClause MemberReference String String LoadServiceResource foundResource Literal MethodInvocation BlockStatement CatchClauseParameter foundResource null ! Ruby isSecurityRestricted LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression IfStatement SecurityException secEx ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ClassCreator BlockStatement BlockStatement MethodInvocation BinaryOperation BlockStatement String reportedPath BinaryOperation JRubyFile actualPath boolean absolute Literal MethodInvocation ReferenceType MemberReference StatementExpression StatementExpression StatementExpression IfStatement StatementExpression Literal MethodInvocation debugLogTry && MethodInvocation MethodInvocation StatementExpression StatementExpression + BinaryOperation MemberReference false isAbsolute File reportedPath Assignment Assignment Assignment BinaryOperation BlockStatement Assignment actualPath toString actualPath isFile actualPath canRead Assignment MethodInvocation + MemberReference Literal namePlusSuffix MemberReference Literal = MemberReference MethodInvocation = MemberReference Literal = != MethodInvocation Literal StatementExpression MemberReference MethodInvocation = MemberReference ClassCreator = MemberReference debugLogFound loadPathEntry "/" absolute true actualPath JRubyFile MemberReference MethodInvocation create absolute false reportedPath Literal charAt '.' Assignment actualPath JRubyFile MethodInvocation MethodInvocation create foundResource ReferenceType MemberReference MemberReference MemberReference foundResource loadPathEntry RubyFile MethodInvocation MemberReference expandUserPath 0 MemberReference BinaryOperation = JRubyFile MethodInvocation MethodInvocation MemberReference create RubyFile MethodInvocation MemberReference expandUserPath LoadServiceResource actualPath reportedPath absolute runtime getCurrentContext namePlusSuffix reportedPath + Literal MemberReference getAbsolutePath runtime getCurrentDirectory loadPathEntry runtime getCurrentContext namePlusSuffix "./" reportedPath	1
MethodDeclaration Modifier Annotation StatementExpression public Override MethodInvocation MemberReference MemberReference SIZE	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation MethodInvocation Cast Cast IfNode Cast getPosition support Cast getConditionNode ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop - 1 yyTop - 5 yyTop - 4 yyTop	1
MethodDeclaration Modifier ReferenceType getErrorStream ReturnStatement public PrintStream MethodInvocation runtime getErrorStream	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType Cast MemberReference NextNode ReferenceType MemberReference NilImplicitNode NIL Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv MethodInvocation IRubyObject MethodInvocation recv getRuntime	1
MethodDeclaration Modifier Annotation ReferenceType aref FormalParameter ThrowStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType index MethodInvocation name Literal IRubyObject MethodInvocation getRuntime "[]" Literal newTypeError "not a java array"	0
MethodDeclaration Modifier ReferenceType convert FormalParameter FormalParameter IfStatement ReturnStatement public Object ReferenceType context ReferenceType rubyObject MethodInvocation BlockStatement ClassCreator ThreadContext IRubyObject rubyObject Literal respondsTo ReturnStatement ReferenceType Cast "to_i" ClassCreator Byte BasicType Literal ReferenceType Cast byte 0 Byte BasicType Cast byte ReferenceType MethodInvocation RubyNumeric rubyObject MemberReference Literal callMethod context "to_i"	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime MethodInvocation Ruby MemberReference runtime	0
MethodDeclaration Modifier Annotation ReferenceType to_r FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context This name Literal ThreadContext "to_r"	1
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Ruby ThreadContext IRubyObject Block IRubyObject arg MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration SwitchStatement callAdapter MemberReference MemberReference MemberReference MemberReference call MethodInvocation getArgsNode arg RubyArray ReferenceType VariableDeclarator MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase context self self arg MemberReference MemberReference MemberReference MemberReference RubyArray nodes Cast nodes size Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ReturnStatement runtime context self ReferenceType MemberReference 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation RubyArray arg callAdapter MemberReference MemberReference MemberReference call callAdapter MemberReference MemberReference MemberReference MethodInvocation call callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation call callAdapter MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation call callAdapter MemberReference MemberReference MemberReference MethodInvocation call context self self context self self nodes Literal eltInternal context self self nodes Literal eltInternal nodes Literal eltInternal context self self nodes Literal eltInternal nodes Literal eltInternal nodes Literal eltInternal context self self nodes 0 0 1 0 1 2	0
MethodDeclaration Modifier get FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration ForStatement final public BasicType offset BasicType dst BasicType off BasicType len MethodInvocation BasicType VariableDeclarator ForControl BlockStatement long int int int MemberReference BinaryOperation checkBounds int begin MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression offset << MemberReference Literal MemberReference index BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment len 2 offset int i Literal i len MemberReference MethodInvocation = 0 ArraySelector dst MemberReference BinaryOperation BinaryOperation buffer + MemberReference BinaryOperation + MemberReference MemberReference begin << MemberReference Literal off i i 2	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public JavaClass ReferenceType clazz MethodInvocation Class MemberReference get clazz	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement public Override IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType ReferenceType type MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject Type context MethodInvocation getRuntime MemberReference MethodInvocation Literal context MethodInvocation getRuntime out of getNil	0
MethodDeclaration Modifier ReferenceType ReturnStatement public String MethodInvocation MethodInvocation getName	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType receiver ReferenceType visibility ReferenceType name ReferenceType callType ReferenceType block MethodInvocation ThreadContext IRubyObject Visibility String CallType Block MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MethodInvocation MemberReference MemberReference call context receiver visibility name callType context receiver receiver getMetaClass name block	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType ReferenceType type ReferenceType unusedBlock MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject Block ReferenceType Block MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call Type context arg0 arg1 arg2 arg3 type	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public RubyModule ReferenceType name ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement Cast String IRubyObject module MethodInvocation == MemberReference Literal StatementExpression BinaryOperation BlockStatement IfStatement ReferenceType MemberReference objectClass MemberReference getConstantAt module null Assignment >= MethodInvocation Literal ThrowStatement MethodInvocation BlockStatement RubyModule module name MemberReference MethodInvocation = getSafeLevel 4 MethodInvocation ! module isModule ThrowStatement module MemberReference Literal newSecurityError MethodInvocation name module BinaryOperation newTypeError + MemberReference Literal name " is not a	0
MethodDeclaration Modifier Annotation ReferenceType read19 FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType unusedBlock ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation name Literal meta Literal required Literal optional Literal compat MemberReference ThreadContext IRubyObject IRubyObject Block IRubyObject nil MethodInvocation IRubyObject path MemberReference IRubyObject length MemberReference IRubyObject offset MemberReference RubyHash options Literal > MemberReference Literal IfStatement StatementExpression StatementExpression StatementExpression BinaryOperation BlockStatement IfStatement MemberReference MemberReference MemberReference MemberReference MemberReference Cast read19 "read" true 1 3 CompatVersion RUBY1_9 context MethodInvocation getRuntime ArraySelector args nil nil null args length 3 BinaryOperation ThrowStatement Assignment Assignment Assignment > MemberReference Literal IfStatement StatementExpression BinaryOperation BlockStatement context recv path length offset ReferenceType MemberReference getNil Literal instanceof MemberReference ReferenceType MethodInvocation MemberReference Cast = MemberReference MemberReference = MemberReference MemberReference = args length 2 BinaryOperation BlockStatement BlockStatement Assignment > MemberReference Literal IfStatement RubyHash options 0 ArraySelector args RubyHash context MethodInvocation getRuntime options ReferenceType MemberReference offset ArraySelector args length ArraySelector args instanceof MemberReference ReferenceType StatementExpression StatementExpression MemberReference MemberReference = args length 1 BinaryOperation BlockStatement BlockStatement Literal Literal newTypeError RubyHash ArraySelector args Literal Literal ArraySelector args RubyHash Assignment Assignment length ArraySelector args instanceof MemberReference ReferenceType StatementExpression StatementExpression 3 be a Literal 2 1 Literal MemberReference Cast = MemberReference MemberReference = Literal ArraySelector args RubyHash Assignment Assignment 3 2 options ReferenceType MemberReference offset ArraySelector args 1 Literal MemberReference Cast = MemberReference MemberReference = RubyHash ArraySelector args Literal 1 options ReferenceType MemberReference length ArraySelector args Literal 2 RubyHash ArraySelector args Literal 2 Literal 1 1	1
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType src BasicType off BasicType len MethodInvocation MethodInvocation long short int int MemberReference BinaryOperation checkBounds BinaryOperation MemberReference MemberReference MemberReference offset << MemberReference Literal + MemberReference MemberReference src off len len 1 address offset	0
MethodDeclaration Modifier Annotation ReferenceType readline FormalParameter FormalParameter ReturnStatement public Deprecated IRubyObject ReferenceType context ReferenceType args TernaryExpression ThreadContext IRubyObject BinaryOperation MethodInvocation MethodInvocation == MemberReference Literal MemberReference readline MemberReference MemberReference readline args length 0 context context ArraySelector args Literal 0	1
MethodDeclaration Modifier Annotation ReferenceType inspect FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal ThreadContext RubyString MethodInvocation MethodInvocation newString "inspect" context getRuntime String Literal MemberReference format size	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public ReferenceType context ReferenceType descriptor MethodInvocation ThreadContext String runtimeCache This MemberReference Literal MemberReference context 7 descriptor	0
MethodDeclaration Modifier Annotation Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject ReferenceType context MethodInvocation name Literal ThreadContext context MethodInvocation getRuntime MethodInvocation MethodInvocation newArray MemberReference This MemberReference This context context	0
MethodDeclaration Modifier Annotation ReferenceType op_mul FormalParameter FormalParameter IfStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement BlockStatement name Literal ThreadContext IRubyObject instanceof MemberReference ReferenceType ReturnStatement ReturnStatement "*" other RubyFixnum MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference context other context other	1
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType CONSTNODE	0
MethodDeclaration Modifier Annotation ReferenceType load FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType args ReferenceType block ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation MethodInvocation name Literal required Literal optional Literal frame Literal module Literal visibility MemberReference IRubyObject IRubyObject Block Ruby runtime MethodInvocation RubyString file MemberReference boolean wrap TernaryExpression runtime MethodInvocation runtime getTrue "load" 1 1 true true PRIVATE recv getRuntime ArraySelector MethodInvocation args BinaryOperation MemberReference Literal MethodInvocation MemberReference load Literal convertToString == MemberReference Literal ArraySelector MethodInvocation args false file MethodInvocation getByteList wrap 0 args length 2 Literal isTrue toString 1	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args MethodInvocation ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject MethodInvocation proxy MethodInvocation int len MemberReference Object convertedArgs ArrayCreator JavaMethod method Cast VariableDeclaration BinaryOperation MemberReference StatementExpression method MethodInvocation MemberReference context getRuntime MemberReference args length ReferenceType MemberReference ReferenceType MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment proxy getObject convertedArgs self Object len JavaMethod MemberReference MemberReference MemberReference MemberReference int i Literal i len MemberReference MethodInvocation = self name args len 0 ArraySelector convertedArgs MemberReference MemberReference MemberReference MemberReference convertArg MemberReference context ArraySelector args method i i MemberReference i	0
MethodDeclaration Modifier ReferenceType wait FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression ReturnStatement static public IRubyObject ReferenceType runtime ReferenceType args BinaryOperation BlockStatement BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation MethodInvocation Ruby IRubyObject > MemberReference Literal ReturnStatement int status ArrayCreator int MethodInvocation == MemberReference Literal ThrowStatement runtime MethodInvocation getGlobalVariables runtime MemberReference newFixnum args length 0 MethodInvocation BasicType Literal runtime MethodInvocation getPosix - 1 MethodInvocation Literal MethodInvocation set MemberReference MemberReference int 1 MemberReference wait runtime MemberReference MemberReference runtime args status runtime ArraySelector status Literal 0	0
MethodDeclaration Modifier marshal FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType invocation ReferenceType buffer ReferenceType parameter MethodInvocation InvocationBuffer IRubyObject buffer MethodInvocation putShort Util MemberReference int16Value parameter	1
MethodDeclaration Modifier BasicType isConvertible FormalParameter FormalParameter ReturnStatement public boolean ReferenceType context ReferenceType value Literal ThreadContext IRubyObject true	0
MethodDeclaration Modifier StatementExpression public MethodInvocation method MethodInvocation aload	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement static public IRubyObject ReferenceType value ReferenceType runtime MethodInvocation ReturnStatement MethodInvocation IRubyObject Ruby value isTrue MethodInvocation runtime getTrue runtime getFalse	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType tag ReferenceType block ReferenceType VariableDeclarator StatementExpression ReturnStatement CatchClause StatementExpression name Literal required Literal frame Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject Block target ClassCreator MethodInvocation MethodInvocation CatchClauseParameter IfStatement ThrowStatement MethodInvocation "catch" 1 true true PRIVATE ReferenceType MethodInvocation context MemberReference block MemberReference MemberReference yield tj BinaryOperation ReturnStatement MemberReference context tag asJavaString target context tag == MethodInvocation MemberReference Cast tj tj target ReferenceType MethodInvocation IRubyObject tj getValue	1
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression StatementExpression public ReferenceType name MethodInvocation MethodInvocation MethodInvocation String method MemberReference ldc method MethodInvocation Literal MethodInvocation invokevirtual method MethodInvocation Literal MethodInvocation invokevirtual name ClassReference p ClassReference MethodInvocation sig ClassReference p ClassReference sig ReferenceType ReferenceType ClassReference params ReferenceType ReferenceType RubyClass DynamicMethod ReferenceType DynamicMethod Visibility String	0
MethodDeclaration Modifier ReferenceType getBlockCallback19 FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public CompiledBlockCallback19 ReferenceType method ReferenceType scriptObject ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference LocalVariableDeclaration TryStatement String Object Class typeClass MethodInvocation String typePathString MethodInvocation String mname BinaryOperation String mnamePath BinaryOperation classLoader ReferenceType VariableDeclarator IfStatement LocalVariableDeclaration ReturnStatement CatchClause CatchClause scriptObject getClass MemberReference p + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter StatementExpression ThrowStatement typeClass + BinaryOperation MemberReference "xx1" + BinaryOperation MemberReference "xx1" MemberReference tryClass == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression CompiledBlockCallback19 ic Cast ic IllegalArgumentException e MemberReference Exception e MethodInvocation ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation e e printStackTrace ReferenceType MethodInvocation typeClass getName "BlockCallback$" typePathString "BlockCallback$" ClassWriter cw MethodInvocation SkinnyMethodAdapter mv MethodInvocation mv Literal aload mv MemberReference Literal MethodInvocation getfield mv Literal aload mv Literal aload mv Literal aload mv Literal aload mv MemberReference MemberReference MethodInvocation invokestatic mv areturn mv Literal Literal visitMaxs MemberReference MethodInvocation = CompiledBlockCallback19 c MethodInvocation ClassReference getConstructor IllegalArgumentException e getMessage MemberReference MemberReference createBlockCtor19 MemberReference 0 mnamePath "$scriptObject" MemberReference ci 1 2 3 4 typePathString method ClassReference BinaryOperation ClassReference ClassReference ClassReference ClassReference sig 2 3 c MemberReference MemberReference MemberReference endCall MemberReference newInstance ReferenceType mnamePath typeClass cw typeClass ReferenceType + BinaryOperation Literal ReferenceType ReferenceType ReferenceType ReferenceType cw mv mname scriptObject Object IRubyObject + Literal MemberReference ";" ThreadContext IRubyObject IRubyObject Block "L" typePathString	1
MethodDeclaration Modifier ReferenceType newUnsigned32 FormalParameter FormalParameter ReturnStatement final static public IRubyObject ReferenceType runtime BasicType value MethodInvocation Ruby int runtime TernaryExpression newFixnum BinaryOperation Cast MemberReference < MemberReference Literal BasicType BinaryOperation value value 0 long + BinaryOperation Literal & MemberReference Literal 0x80000000L value	1
MethodDeclaration Modifier ReferenceType ReturnStatement public ArgsNode Cast ReferenceType MethodInvocation ArgsNode	0
MethodDeclaration Modifier ReferenceType ReturnStatement public IRubyObject MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType pos StatementExpression ReturnStatement public JRubyMethod ElementValuePair RubyFixnum MethodInvocation MethodInvocation name ElementArrayValue check RubyFixnum MethodInvocation MemberReference newFixnum Literal Literal getRuntime pos	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyProc ReferenceType context ReferenceType recv ReferenceType block MethodInvocation name ElementArrayValue frame Literal module Literal visibility MemberReference compat MemberReference ThreadContext IRubyObject Block context MethodInvocation getRuntime Literal true true PRIVATE CompatVersion RUBY1_9 MemberReference MemberReference newProc Block.Type PROC block	1
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType arg0 MethodInvocation Label MethodInvocation getMethodVisitor MemberReference MemberReference arg0	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration WhileStatement IfStatement ReturnStatement private IRubyObject ReferenceType runtime ReferenceType enc BasicType bytes BasicType s BasicType end BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation Ruby Encoding byte int int int endp MemberReference int prev != Assignment Literal IfStatement StatementExpression < MemberReference MemberReference StatementExpression ReturnStatement runtime getNil end MemberReference MethodInvocation = - 1 MethodInvocation BreakStatement Assignment prev end MethodInvocation This prev enc MemberReference MemberReference MemberReference MemberReference prevCharHead ! enc MethodInvocation isSpace MemberReference MemberReference = Literal BinaryOperation view bytes s endp end MemberReference MemberReference MemberReference MemberReference MemberReference codePoint endp prev 0 + BinaryOperation Literal runtime enc bytes prev end - MemberReference MemberReference 1 prev s	1
MethodDeclaration Modifier Annotation ReferenceType getArgValues IfStatement LocalVariableDeclaration AssertStatement IfStatement public Override IRubyObject MethodInvocation BlockStatement BasicType VariableDeclarator BinaryOperation MemberReference BinaryOperation BlockStatement BlockStatement ! staticScope ReturnStatement int totalArgs BinaryOperation <= MemberReference MemberReference SIZE_ERROR < MethodInvocation Literal SwitchStatement LocalVariableDeclaration AssertStatement LocalVariableDeclaration LocalVariableDeclaration StatementExpression SwitchStatement ReturnStatement MethodInvocation + MethodInvocation MethodInvocation totalArgs SIZE staticScope getRestArg 0 MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase ReferenceType VariableDeclarator BinaryOperation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference SwitchStatementCase SwitchStatementCase MemberReference parent getArgValues staticScope getRequiredArgs staticScope getOptionalArgs totalArgs Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ThrowStatement IRubyObject restArg MethodInvocation != MemberReference Literal RubyArray splattedArgs MethodInvocation IRubyObject argValues ArrayCreator System MethodInvocation Literal MemberReference MemberReference MethodInvocation arraycopy totalArgs Literal StatementExpression Literal StatementExpression argValues 0 MemberReference 1 ArrayCreator 2 ArrayCreator ClassCreator MethodInvocation Literal getValue restArg null RuntimeHelpers MemberReference splatValue ReferenceType BinaryOperation splattedArgs toJavaArray 0 argValues totalArgs splattedArgs size 2 Assignment 1 Assignment IRubyObject ReferenceType ArrayInitializer ReferenceType ArrayInitializer ReferenceType Literal staticScope getRestArg 0 restArg IRubyObject + MemberReference MethodInvocation MemberReference MemberReference = MemberReference MemberReference = IRubyObject MemberReference IRubyObject MemberReference MemberReference RuntimeException "more args requested than available variables" totalArgs splattedArgs size ArraySelector argValues variableValueOne ArraySelector argValues variableValueZero variableValueZero variableValueZero variableValueOne Literal Literal 1 0	1
MethodDeclaration Modifier BasicType ReturnStatement public int MethodInvocation incrementAndGet	0
MethodDeclaration Modifier StatementExpression public MethodInvocation method MethodInvocation Literal MethodInvocation invokevirtual ClassReference p "toString" ClassReference sig ReferenceType ReferenceType Object String	0
MethodDeclaration Modifier StatementExpression StatementExpression public MethodInvocation MethodInvocation localContext Literal set MethodInvocation remove null Thread currentThread	0
MethodDeclaration Modifier Annotation ReferenceType exception FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType block Cast name Literal optional Literal rest Literal meta Literal ThreadContext IRubyObject IRubyObject Block ReferenceType MemberReference "exception" 1 true true RubyClass recv	0
MethodDeclaration Modifier Annotation tearDown Exception StatementExpression StatementExpression protected Override SuperMethodInvocation MethodInvocation tearDown runtime tearDown	0
MethodDeclaration Modifier get FormalParameter FormalParameter FormalParameter FormalParameter ThrowStatement final public BasicType offset BasicType dst BasicType off BasicType len MethodInvocation long long int int ex	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int support pushBlockScope yyVal	1
MethodDeclaration Modifier Annotation BasicType ReturnStatement public Override int MemberReference ClassIndex STRUCT	0
MethodDeclaration Modifier ReferenceType getException ReturnStatement public RubyException MemberReference exception	0
MethodDeclaration Modifier Annotation ReferenceType s_deflate FormalParameter FormalParameter Exception LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType args ReferenceType VariableDeclarator Assignment BasicType VariableDeclarator MemberReference BlockStatement MethodInvocation name Literal required Literal optional Literal meta Literal backtrace Literal IRubyObject IRubyObject Ruby runtime MethodInvocation MemberReference MethodInvocation = int level MemberReference ! ArraySelector MethodInvocation args StatementExpression StatementExpression ZlibDeflate MemberReference MemberReference MemberReference s_deflate 1 1 true true recv getRuntime args Arity MemberReference MemberReference Literal Literal scanArgs Literal isNil Assignment MethodInvocation recv ArraySelector MethodInvocation MethodInvocation args level runtime args 1 1 1 MemberReference MethodInvocation = MemberReference MemberReference Literal convertToString getByteList level RubyNumeric MemberReference fix2int runtime level 0 ArraySelector args Literal 1	1
MethodDeclaration Modifier addInterface FormalParameter FormalParameter FormalParameter FormalParameter IfStatement private static ReferenceType ReferenceType methods ReferenceType ReferenceType names MethodInvocation BlockStatement Set Map Class Set MemberReference add StatementExpression StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MethodInvocation MemberReference methods names methods getInterfaces names	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType pattern ReferenceType prepared ReferenceType enc ReferenceType regexp BasicType tuFlags ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MemberReference ThreadContext Regex Regex Encoding RubyRegexp int Ruby runtime MethodInvocation byte bytes MemberReference int begin MemberReference int BinaryOperation final Matcher matcher MethodInvocation RubyArray ary MethodInvocation int end Literal == MethodInvocation Literal WhileStatement WhileStatement DynamicScope scope MethodInvocation > MethodInvocation Literal LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ary context getRuntime value bytes value begin + MemberReference MemberReference prepared MemberReference MemberReference MemberReference matcher runtime newArray 0 pattern 0 BinaryOperation BlockStatement BinaryOperation BlockStatement context getCurrentScope ary size 0 ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation begin value realSize bytes begin >= MethodInvocation Literal StatementExpression LocalVariableDeclaration StatementExpression StatementExpression >= MethodInvocation Literal StatementExpression StatementExpression RubyMatchData match MethodInvocation MemberReference MemberReference = match MemberReference infectBy scope MethodInvocation setBackRef matcher BinaryOperation MemberReference MemberReference search 0 Assignment ReferenceType VariableDeclarator MethodInvocation MethodInvocation matcher BinaryOperation MemberReference MemberReference search 0 Assignment MethodInvocation RubyRegexp MemberReference This MemberReference MemberReference MemberReference match regexp regexp tuFlags runtime getNil + MemberReference MemberReference Option NONE MemberReference MethodInvocation = RubyString substr MethodInvocation substr MemberReference infectBy ary MemberReference append + MemberReference MemberReference Option NONE MemberReference MethodInvocation = ary MethodInvocation append context scope matcher pattern begin end end MemberReference MemberReference MemberReference MemberReference MemberReference MethodInvocation BinaryOperation makeShared19 tuFlags substr begin end end MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference Literal matcher enc begin runtime matcher getBegin - MethodInvocation MethodInvocation matcher enc begin runtime matcher tuFlags true matcher getEnd matcher getBegin	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType Node MemberReference MemberReference MemberReference createList Node rescueNode	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference split	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject javaInterfaces MethodInvocation != MemberReference Literal MethodInvocation context MethodInvocation getRuntime self MethodInvocation getInstanceVariables javaInterfaces null javaInterfaces dup getNil Literal fastGetInstanceVariable "@java_interfaces"	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation required Literal rest Literal meta Literal ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation int owner TernaryExpression int group TernaryExpression int count Literal VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement runtime MemberReference newFixnum 2 true true context getRuntime MemberReference MethodInvocation Literal MemberReference MethodInvocation Literal 0 BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement count ! ArraySelector MethodInvocation args RubyNumeric MemberReference num2int - 1 ! ArraySelector MethodInvocation args RubyNumeric MemberReference num2int - 1 int i Literal i args length IRubyObject filename MemberReference != Literal MethodInvocation ThrowStatement StatementExpression Literal isNil ArraySelector args Literal isNil ArraySelector args 2 ArraySelector args 0 runtime MethodInvocation getPosix MethodInvocation MemberReference 0 Literal 1 Literal MemberReference MethodInvocation MemberReference MemberReference runtime ++ count 0 1 i filename toString owner group	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType rubyClass MethodInvocation Cast Ruby IRubyObject RubyClass MemberReference ReferenceType MemberReference rubyClass RubyClass rubyClass	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args MethodInvocation name Literal rest Literal ThreadContext IRubyObject MemberReference MemberReference true context ArraySelector args Literal 0	1
MethodDeclaration Modifier Annotation ReferenceType rid FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self MethodInvocation name Literal module Literal ThreadContext IRubyObject MethodInvocation rid true context getRuntime	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public ReferenceType ReferenceType ReferenceType ReferenceType VariableDeclarator MethodInvocation MemberReference DynamicScope RubyModule MethodInvocation MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier FormalParameter TryStatement public BasicType i StatementExpression CatchClause CatchClause int MethodInvocation CatchClauseParameter StatementExpression CatchClauseParameter StatementExpression index This MemberReference setInt IllegalArgumentException ex MethodInvocation IllegalAccessException ex MethodInvocation i ex printStackTrace ex printStackTrace	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration ForStatement LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair RubyArray ReferenceType context ReferenceType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal ThreadContext Set TypeArgument names ClassCreator VariableDeclaration BinaryOperation Assignment StatementExpression RubyArray ary MethodInvocation ary MemberReference addAll ary ReferenceType ReferenceType ReferenceType VariableDeclarator != MemberReference Literal MemberReference MethodInvocation = MethodInvocation context MethodInvocation getRuntime names String HashSet TypeArgument RubyModule p This p null p p getSuperClass names MethodInvocation addAll newArray ReferenceType p String	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod IRubyObject MethodInvocation MethodInvocation getRuntime getNil	1
MethodDeclaration Modifier Annotation BasicType isEmpty ReturnStatement public Override boolean BinaryOperation == MethodInvocation Literal size 0	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement private IRubyObject ReferenceType context ReferenceType self ReferenceType method MethodInvocation ThreadContext IRubyObject DynamicMethod RuntimeHelpers MethodInvocation MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference MethodInvocation MemberReference MemberReference call context self method getVisibility methodName callType context self self getMetaClass methodName Block	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv ReferenceType port ReferenceType host MethodInvocation IRubyObject IRubyObject IRubyObject MethodInvocation MemberReference MemberReference MemberReference recv MethodInvocation getRuntime recv port host getCurrentContext	1
MethodDeclaration Modifier invokeCallConfigPost FormalParameter FormalParameter FormalParameter IfStatement StatementExpression StatementExpression private ReferenceType mv ReferenceType superClass ReferenceType callConfig MethodInvocation ReturnStatement MethodInvocation MethodInvocation SkinnyMethodAdapter String CallConfiguration callConfig isNoop mv Literal aload mv MemberReference MethodInvocation MethodInvocation invokestatic 1 superClass MemberReference VoidClassReference MethodInvocation sig callConfig ClassReference params ReferenceType ThreadContext	1
MethodDeclaration Modifier putShort FormalParameter FormalParameter ThrowStatement final public BasicType offset BasicType value MethodInvocation long short ex	0
MethodDeclaration Modifier BasicType write FormalParameter IOException LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public int ReferenceType src BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference ByteBuffer int max MethodInvocation int v MethodInvocation != MemberReference Literal StatementExpression v src remaining INSTANCE MemberReference MemberReference MemberReference Literal send v - 1 MethodInvocation fd src max 0 src BinaryOperation position + MethodInvocation MemberReference src position v	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType p MethodInvocation p Literal run	1
MethodDeclaration Modifier FormalParameter IfStatement StatementExpression public ReferenceType superClazz BinaryOperation StatementExpression MethodInvocation RubyClass == MemberReference Literal Assignment superClazz MethodInvocation MemberReference This invokeInherited superClazz null MemberReference MethodInvocation = runtime getCurrentContext superClazz superClazz runtime getObject	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public RubySymbol ReferenceType runtime ReferenceType name MethodInvocation Ruby String runtimeCache MemberReference Literal MemberReference runtime 4 name	0
MethodDeclaration Modifier ReferenceType FormalParameter IfStatement IfStatement public IR_Method ReferenceType receiver BinaryOperation ReturnStatement BinaryOperation BlockStatement BlockStatement Operand instanceof MemberReference ReferenceType Literal instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement LocalVariableDeclaration ReturnStatement MethAddr null receiver MetaObject ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator TernaryExpression IR_Module m Cast m Cast IR_Class c MethodInvocation BinaryOperation Literal MethodInvocation ReferenceType Cast ReferenceType MemberReference receiver == MemberReference Literal null c Cast IR_Module ReferenceType MemberReference MethAddr c null ReferenceType MemberReference MetaObject receiver MethAddr	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean Literal true	0
MethodDeclaration Modifier ReferenceType getFalse ReturnStatement public RubyBoolean MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public ReferenceType methodName ReferenceType arg ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation ReturnStatement IfStatement Literal String Double v1 MemberReference Double v2 TernaryExpression methodName Literal equals ClassCreator MethodInvocation ReturnStatement IfStatement null BinaryOperation BinaryOperation Cast "+" ReferenceType BinaryOperation methodName Literal equals ClassCreator MethodInvocation ReturnStatement IfStatement instanceof MemberReference ReferenceType * Literal Cast ReferenceType Cast Float + MemberReference MemberReference "-" ReferenceType BinaryOperation methodName Literal equals ClassCreator MethodInvocation BlockStatement arg Fixnum 1.0 ReferenceType MemberReference Double ReferenceType MemberReference v1 v2 Float - MemberReference MemberReference "*" ReferenceType BinaryOperation methodName Literal equals ReturnStatement Fixnum arg Float arg v1 v2 Float * MemberReference MemberReference "/" TernaryExpression v1 v2 BinaryOperation Literal ClassCreator == MemberReference Literal null ReferenceType BinaryOperation v2 0.0 Float / MemberReference MemberReference v1 v2	1
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType Node MemberReference MemberReference MemberReference MemberReference createList Node nameNode argsNode	0
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration IfStatement public ReferenceType md ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodDeclaration JRubyMethod anno MethodInvocation && BinaryOperation BinaryOperation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression md ClassReference getAnnotation != MemberReference Literal != MemberReference Literal BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator EnhancedForControl BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation ReferenceType anno null out null boolean isStatic MethodInvocation String qualifiedName MethodInvocation boolean hasContext Literal boolean hasBlock Literal VariableDeclaration MethodInvocation StatementExpression StatementExpression int actualRequired MethodInvocation String annotatedBindingName MethodInvocation String TernaryExpression out BinaryOperation println out BinaryOperation println MemberReference MemberReference JRubyMethod md MethodInvocation getModifiers MethodInvocation false false ReferenceType VariableDeclarator md getParameters Assignment Assignment MethodInvocation MethodInvocation MethodInvocation MemberReference MemberReference MemberReference calculateActualRequired CodegenUtils MethodInvocation MemberReference MemberReference MemberReference MethodInvocation Literal MethodInvocation MethodInvocation Literal Literal + BinaryOperation Literal + BinaryOperation Literal md anno MemberReference contains md ParameterDeclaration pd MemberReference MethodInvocation |= MemberReference MethodInvocation |= md MethodInvocation getParameters anno optional anno rest isStatic hasContext hasBlock md getSimpleName qualifiedName isStatic actualRequired anno optional true anno frame anno meta + BinaryOperation MethodInvocation ");" + BinaryOperation MethodInvocation ");" Modifier STATIC hasContext pd MethodInvocation MethodInvocation getType hasBlock pd MethodInvocation MethodInvocation getType size + BinaryOperation Literal anno visibility + BinaryOperation Literal MemberReference toString Literal equals toString Literal equals + BinaryOperation MemberReference ", + BinaryOperation Literal anno + BinaryOperation Literal + BinaryOperation MemberReference ", " + Literal MemberReference "(" + BinaryOperation Literal isStatic " = new " annotatedBindingName + BinaryOperation MethodInvocation "\", " + Literal Literal md getSimpleName " " \""	1
MethodDeclaration Modifier ReferenceType getType FormalParameter ReturnStatement static public String BasicType b Literal byte "byte"	0
MethodDeclaration Modifier Annotation ReferenceType skip FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType regex MethodInvocation name Literal required Literal IRubyObject MemberReference Literal Literal Literal 1 regex true false true	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement private Segment TypeArgument TypeArgument BasicType hash MemberReference ReferenceType ReferenceType int ArraySelector T A BinaryOperation & BinaryOperation MemberReference >>> MemberReference MemberReference hash	0
MethodDeclaration Modifier ReferenceType getTypeInstance FormalParameter FormalParameter ReturnStatement public String BasicType i ReferenceType o Literal long String	0
MethodDeclaration Modifier ReferenceType runScript FormalParameter LocalVariableDeclaration TryStatement public IRubyObject ReferenceType script ReferenceType VariableDeclarator ReturnStatement CatchClause Script ThreadContext context MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement getCurrentContext script MemberReference MethodInvocation MemberReference MemberReference load rj Cast context context IRubyObject Block ReferenceType MethodInvocation IRubyObject rj getValue	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MemberReference ReferenceType EMPTY_LIST Node	0
MethodDeclaration Modifier visit FormalParameter FormalParameter StatementExpression public ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject result MethodInvocation append RubyArray MemberReference MemberReference MemberReference newArray runtime key value	0
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType callType MethodInvocation ThreadContext IRubyObject String CallType RuntimeHelpers MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference invoke context self name IRubyObject callType Block	0
MethodDeclaration Modifier Annotation FormalParameter LocalVariableDeclaration StatementExpression StatementExpression public Override ReferenceType clone ReferenceType VariableDeclarator Assignment MethodInvocation IRubyObject Cast MemberReference ArrayCreator = System MemberReference Literal MemberReference Literal MemberReference arraycopy ReferenceType MemberReference values ReferenceType MemberReference values 0 values 0 values length clone IRubyObject values length	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public String ReferenceType one ReferenceType two ReferenceType ReferenceType ReferenceType ArrayCreator String String String String String ReferenceType ArrayInitializer String MemberReference MemberReference MemberReference MemberReference MemberReference one two	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier BasicType LocalVariableDeclaration IfStatement IfStatement StatementExpression StatementExpression StatementExpression StatementExpression IfStatement ReturnStatement private int BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement IfStatement MethodInvocation MethodInvocation Assignment Assignment BinaryOperation StatementExpression MemberReference char c && BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement || MethodInvocation BinaryOperation StatementExpression BinaryOperation BlockStatement BlockStatement stop stop MemberReference MemberReference = MemberReference ClassCreator = && MemberReference BinaryOperation Assignment c && MemberReference BinaryOperation == MemberReference MemberReference Assignment Assignment MemberReference Assignment MemberReference isARG == MemberReference MemberReference Assignment == MemberReference MemberReference StatementExpression StatementExpression lex_state LexState EXPR_BEG yaccValue ReferenceType Literal MethodInvocation ! isOneEight != MemberReference MemberReference MemberReference Literal = ! isOneEight > MemberReference Literal leftParenBegin MemberReference MemberReference = MemberReference Literal = -- MemberReference ClassCreator = Tokens lex_state LexState EXPR_END MemberReference MemberReference = lex_state LexState EXPR_ENDARG Assignment Assignment Token "{" getPosition c Tokens commandStart true leftParenBegin 0 lex_state LexState EXPR_BEG leftParenBegin 0 yaccValue ReferenceType Literal MethodInvocation c Tokens MemberReference MemberReference = MemberReference MemberReference = Token "{" getPosition c Tokens c Tokens	1
MethodDeclaration Modifier ReferenceType getAST ReturnStatement public Node MemberReference ast	0
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration StatementExpression ReturnStatement public String ReferenceType VariableDeclarator MethodInvocation MethodInvocation StringBuilder sb ClassCreator sb MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Literal append sb toString ReferenceType Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append Literal append jruby StringBuilder " record separator if no " mode with or into " the script " check syntax " cd to before executing your " -d set flags to " one line of " pattern for " edit files in backup if extension " directory be used more than " pass an option on to the JVM " use to list " run for a list of other Java " for " enable line ending " loop your " loop like but print line also like " require the before executing your " enable some parsing for after script " for the script in bin or using environment " on " print version then on " -w warnings on for your " set warning " enable option option to " enable parsing debug " print the " the mode suitable for debugger " process " List all configuration Java properties " run with using the " use the JVM " use the JVM " enable remote and of the and " do not launch a GUI no " Ruby " Ruby " show the JVM bytecode by specified " print the	0
MethodDeclaration Modifier Annotation ReferenceType checkArrayType ReturnStatement public Override IRubyObject This	0
MethodDeclaration Modifier ReferenceType literal_concat FormalParameter FormalParameter FormalParameter IfStatement IfStatement IfStatement IfStatement IfStatement ReturnStatement public Node ReferenceType position ReferenceType head ReferenceType tail BinaryOperation ReturnStatement BinaryOperation ReturnStatement BinaryOperation BlockStatement BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement Cast ISourcePosition Node Node == MemberReference Literal MemberReference == MemberReference Literal MemberReference instanceof MemberReference ReferenceType StatementExpression instanceof MemberReference ReferenceType IfStatement StatementExpression ReturnStatement BinaryOperation BlockStatement instanceof MemberReference ReferenceType IfStatement ReferenceType MemberReference head null tail tail null head head EvStrNode Assignment tail StrNode BinaryOperation BlockStatement MethodInvocation Cast instanceof MemberReference ReferenceType IfStatement ReturnStatement head StrNode BinaryOperation BlockStatement BlockStatement DStrNode head MemberReference ClassCreator = instanceof MemberReference ReferenceType ReturnStatement head MethodInvocation ReferenceType MemberReference tail DStrNode BinaryOperation BlockStatement Cast == Cast Literal StatementExpression StatementExpression head MethodInvocation ReferenceType MethodInvocation head StrNode ClassCreator head getPosition ListNode head instanceof MemberReference ReferenceType StatementExpression ReturnStatement ReferenceType MemberReference ReferenceType MemberReference 0 Assignment Assignment MemberReference add DStrNode head getPosition ReferenceType MethodInvocation Cast Cast head StrNode Cast MemberReference ListNode head StrNode head MemberReference ClassCreator = MemberReference ClassCreator = head StrNode head getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference tail head ReferenceType MethodInvocation head MethodInvocation ReferenceType MethodInvocation StrNode head StrNode tail DStrNode tail DStrNode head getPosition MemberReference add DStrNode head getPosition head	1
MethodDeclaration Modifier ReferenceType newRaiseException FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement private RaiseException ReferenceType ReferenceType message ReferenceType VariableDeclarator MemberReference RubyClass String RaiseException re ClassCreator re ReferenceType This MemberReference MemberReference Literal RaiseException message true	1
MethodDeclaration Modifier BasicType strLength IfStatement ReturnStatement final int MethodInvocation ReturnStatement MethodInvocation singleByteOptimizable MemberReference MemberReference strLength value realSize value	1
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType fileName Assignment String This MemberReference = MemberReference fileName fileName	0
MethodDeclaration Modifier ReferenceType newClass FormalParameter FormalParameter IfStatement IfStatement ReturnStatement static public RubyClass ReferenceType runtime ReferenceType superClass BinaryOperation ThrowStatement MethodInvocation ThrowStatement ClassCreator Ruby RubyClass == MemberReference MethodInvocation MethodInvocation superClass isSingleton MethodInvocation ReferenceType MemberReference MemberReference superClass runtime getClassClass runtime Literal newTypeError runtime Literal newTypeError RubyClass runtime superClass "can't make subclass of "can't make subclass of virtual class"	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int Literal yyerror yyVal "formal argument cannot be a class variable"	1
MethodDeclaration Modifier ReferenceType toString LocalVariableDeclaration StatementExpression LocalVariableDeclaration ForStatement IfStatement StatementExpression StatementExpression ForStatement IfStatement ReturnStatement public String ReferenceType VariableDeclarator MethodInvocation BasicType VariableDeclarator ForControl BlockStatement BinaryOperation StatementExpression MethodInvocation Assignment ForControl BlockStatement BinaryOperation StatementExpression MethodInvocation StringBuffer buf ClassCreator buf Literal append int count Literal VariableDeclaration BinaryOperation MemberReference IfStatement != BinaryOperation Literal MethodInvocation buf Literal append MemberReference Literal = VariableDeclaration BinaryOperation MemberReference IfStatement != BinaryOperation Literal MethodInvocation buf MethodInvocation Literal append ReferenceType on " 0 BasicType VariableDeclarator < MemberReference MethodInvocation ++ i BinaryOperation BlockStatement % MemberReference Literal 0 buf Literal append on " count 0 BasicType VariableDeclarator < MemberReference MethodInvocation ++ i BinaryOperation BlockStatement % MemberReference Literal 0 buf Literal append toString '\n' StringBuffer int i Literal i _in size == MethodInvocation Literal StatementExpression StatementExpression IfStatement count 10 "\t\t" int i Literal i _out size == MethodInvocation Literal StatementExpression StatementExpression IfStatement count 10 "\t\t" 0 _in MemberReference get true MemberReference MethodInvocation BinaryOperation StatementExpression 0 _out MemberReference get true MemberReference MethodInvocation BinaryOperation StatementExpression i ++ count buf MethodInvocation Literal append == BinaryOperation Literal MethodInvocation i ++ count buf MethodInvocation Literal append == BinaryOperation Literal MethodInvocation MemberReference append ' ' % MemberReference Literal 0 buf Literal append MemberReference append ' ' % MemberReference Literal 0 buf Literal append i count 10 i count 10	1
MethodDeclaration Modifier ReferenceType ReturnStatement public Type MethodInvocation constructor	0
MethodDeclaration Modifier ReferenceType getParent ReturnStatement public Operand MemberReference _parent	0
MethodDeclaration Modifier Annotation ReferenceType s_readline FormalParameter FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration WhileStatement IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType prompt ReferenceType add_to_hist ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator Literal BlockStatement BinaryOperation BlockStatement MemberReference name Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject IRubyObject Ruby runtime MethodInvocation ConsoleHolder holder MethodInvocation == MemberReference Literal StatementExpression IRubyObject line MethodInvocation String v Literal true TryStatement != Literal MemberReference IfStatement StatementExpression line "readline" true Visibility PRIVATE context getRuntime MemberReference getHolder holder readline null MethodInvocation runtime getNil null StatementExpression StatementExpression BreakStatement CatchClause StatementExpression null v MethodInvocation BlockStatement Assignment runtime MemberReference MemberReference MethodInvocation Assignment CatchClauseParameter IfStatement ThrowStatement MethodInvocation add_to_hist isTrue StatementExpression MemberReference MethodInvocation = runtime holder holder.readline MethodInvocation MemberReference MethodInvocation = IOException ioe MethodInvocation BlockStatement MethodInvocation holder.readline MethodInvocation MethodInvocation line RubyString MethodInvocation MemberReference v holder.readline MethodInvocation readLine RubyIO MemberReference TryStatement ContinueStatement runtime MemberReference newIOErrorFromException holder.readline MethodInvocation getHistory recv getRuntime v prompt toString ioe StatementExpression CatchClause ioe MemberReference addToHistory MethodInvocation CatchClauseParameter v holder.readline MethodInvocation Exception e	1
MethodDeclaration Modifier Annotation Annotation ReferenceType rect FormalParameter ReturnStatement public JRubyMethod ElementValuePair Override IRubyObject ReferenceType context MethodInvocation name ElementArrayValue ThreadContext context MethodInvocation getRuntime Literal Literal MemberReference MemberReference newArray real image	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType MethodInvocation Ruby ThreadContext IRubyObject Block MemberReference MemberReference MemberReference MemberReference runtime context self	0
MethodDeclaration Modifier FormalParameter IfStatement private synchronized Modifier ReferenceType proxy BinaryOperation BlockStatement final RubyClass != MemberReference Literal StatementExpression StatementExpression null MethodInvocation Assignment MemberReference install MemberReference Literal = proxy null	0
MethodDeclaration Modifier ReferenceType newFixnum FormalParameter FormalParameter IfStatement ReturnStatement static public RubyFixnum ReferenceType runtime BasicType value MethodInvocation BlockStatement ClassCreator Ruby long MemberReference ReturnStatement ReferenceType MemberReference MemberReference value MemberReference RubyFixnum runtime value runtime ArraySelector BinaryOperation + Cast MemberReference BasicType MemberReference int value	0
MethodDeclaration Modifier Annotation BasicType read IOException LocalVariableDeclaration SwitchStatement ReturnStatement public Override int BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase MemberReference byte c MethodInvocation c Literal IfStatement BreakStatement Literal StatementExpression BreakStatement c '\r' BinaryOperation BlockStatement BlockStatement '\n' MemberReference != Assignment Literal StatementExpression StatementExpression StatementExpression StatementExpression ++ line MemberReference MethodInvocation = '\n' MethodInvocation Assignment MemberReference MemberReference c Cast unread MemberReference Literal = ++ line ++ offset BasicType MemberReference c '\n' char c	1
MethodDeclaration Modifier Annotation FormalParameter FormalParameter FormalParameter BSFException StatementExpression StatementExpression ForStatement StatementExpression public Override ReferenceType manager ReferenceType language ReferenceType SuperMethodInvocation Assignment ForControl BlockStatement MethodInvocation String Vector MemberReference MemberReference MemberReference MemberReference MethodInvocation = VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression runtime MethodInvocation getGlobalVariables manager language runtime MethodInvocation BasicType VariableDeclarator VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator MethodInvocation Literal ClassCreator defineReadonly MemberReference int i Literal size MethodInvocation i size bean Cast runtime MethodInvocation getGlobalVariables ReferenceType MemberReference ClassCreator manager 0 size ReferenceType MethodInvocation MethodInvocation ClassCreator define runtime ReferenceType MemberReference This MemberReference elementAt GlobalVariable MemberReference variableName ReferenceType MemberReference MemberReference manager i bean name runtime bean	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement protected IRubyObject ReferenceType name MethodInvocation String MethodInvocation MemberReference remove name	0
MethodDeclaration Modifier Annotation ReferenceType getSingletonMethod FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String Class Class Class String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference + BinaryOperation MemberReference MemberReference tryClass Class descriptor ArrayCreator == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression InvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setArgumentTypes ic MemberReference setJavaName ic Literal setSingleton ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname ReferenceType ArrayInitializer c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity Literal fixed descriptor method true e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class MemberReference MemberReference MemberReference Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation MemberReference MemberReference Literal MemberReference loadArguments mv MemberReference Literal visitVarInsn mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference mv Literal Literal visitMaxs MemberReference MethodInvocation = InvocationCallback c newInstance 3 IllegalArgumentException e getMessage arg1 arg2 arg3 ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtor MemberReference startCallS mv METHOD_ARGS_INDEX 3 descriptor ALOAD 3 INVOKESTATIC typePath method MemberReference MemberReference sig ARETURN 5 3 c MemberReference MemberReference MemberReference endCall Class MemberReference MemberReference MemberReference MemberReference ClassReference method signature mnamePath cw ret signature cw mv mname RubyKernel IRUBY_OBJECT arg1 arg2 arg3 ReferenceType Block	1
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SwitchStatement public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType values ReferenceType block BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Ruby ThreadContext IRubyObject IRubyObject Block int length TernaryExpression length Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression BreakStatement BinaryOperation Literal MemberReference 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation MethodInvocation == MemberReference Literal 0 values length MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation MemberReference assign MemberReference MemberReference MemberReference MemberReference MethodInvocation MethodInvocation MemberReference assign MemberReference MemberReference MemberReference MemberReference MemberReference MethodInvocation MemberReference assign MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference assign values null runtime context self runtime getNil runtime getNil runtime getNil block runtime context self ArraySelector values runtime getNil runtime getNil block runtime context self ArraySelector values ArraySelector values runtime getNil block runtime context self ArraySelector values ArraySelector values ArraySelector values block Literal Literal Literal Literal Literal Literal 0 0 1 0 1 2	1
MethodDeclaration ReferenceType ReturnStatement IRubyObject MemberReference real	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement IfStatement ReturnStatement private String ReferenceType BasicType BinaryOperation ReturnStatement BinaryOperation BlockStatement MemberReference String char && BinaryOperation MethodInvocation MemberReference && BinaryOperation BinaryOperation LocalVariableDeclaration ForStatement StatementExpression ReturnStatement != MemberReference Literal formatter Literal contains != MemberReference Literal < MethodInvocation MemberReference ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation MethodInvocation formatter null "-" null length StringBuilder seqBuf ClassCreator VariableDeclaration BinaryOperation MemberReference StatementExpression seqBuf MemberReference append seqBuf toString ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation StringBuilder int i MethodInvocation i seqBuf MemberReference append length	1
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override Arity MemberReference arity	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType arg1 ReferenceType block ReturnStatement CatchClause CatchClause ThreadContext IRubyObject IRubyObject IRubyObject Block MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ThrowStatement MemberReference MemberReference MemberReference MemberReference MemberReference callBlock JumpException.BreakJump bj MethodInvocation JumpException.RetryJump rj MethodInvocation context caller self arg1 block MemberReference MemberReference handleBreakJump MemberReference retryJumpError context bj context	1
MethodDeclaration Modifier ReferenceType newInstance ReturnStatement static public Ruby MethodInvocation ClassCreator newInstance ReferenceType RubyInstanceConfig	0
MethodDeclaration Modifier StatementExpression public MethodInvocation MemberReference Literal IRubyObject 0	0
MethodDeclaration Modifier ReferenceType yyExpecting FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration ForStatement ReturnStatement protected String BasicType state BasicType VariableDeclarator VariableDeclarator VariableDeclarator BasicType VariableDeclarator BinaryOperation ForStatement BinaryOperation ForStatement ReferenceType VariableDeclarator ForControl IfStatement MemberReference int int token n len Literal boolean ok ArrayCreator != Assignment Literal ForControl IfStatement != Assignment Literal ForControl IfStatement String result ArrayCreator Assignment BinaryOperation MemberReference MemberReference StatementExpression result 0 BasicType MemberReference MemberReference MemberReference = 0 Assignment BinaryOperation MemberReference BinaryOperation BlockStatement MemberReference MemberReference = 0 Assignment BinaryOperation MemberReference BinaryOperation BlockStatement ReferenceType MemberReference MemberReference Assignment = < MemberReference MemberReference ++ token ArraySelector ok Assignment boolean yyNames length n ArraySelector yySindex MemberReference TernaryExpression = && BinaryOperation BinaryOperation ++ token && BinaryOperation BinaryOperation StatementExpression StatementExpression n ArraySelector yyRindex MemberReference TernaryExpression = && BinaryOperation BinaryOperation ++ token && BinaryOperation BinaryOperation StatementExpression StatementExpression String len n MemberReference Literal = n len MemberReference MemberReference MemberReference = MemberReference token BinaryOperation MemberReference Literal < MemberReference MemberReference < BinaryOperation MemberReference && BinaryOperation MemberReference != MemberReference Literal MemberReference Assignment MemberReference token BinaryOperation MemberReference Literal < MemberReference MemberReference < BinaryOperation MemberReference && BinaryOperation MemberReference != MemberReference Literal MemberReference Assignment token 0 token ArraySelector result ArraySelector yyNames state < MemberReference Literal - n 0 token yyNames length + MemberReference MemberReference yyTable length == MemberReference MemberReference ! ArraySelector ok ArraySelector yyNames null ++ len MemberReference Literal = state < MemberReference Literal - n 0 token yyNames length + MemberReference MemberReference yyTable length == MemberReference MemberReference ! ArraySelector ok ArraySelector yyNames null ++ len MemberReference Literal = MemberReference MemberReference n 0 n token ArraySelector yyCheck token MemberReference MemberReference ArraySelector ok true n 0 n token ArraySelector yyCheck token MemberReference MemberReference ArraySelector ok true ++ n token BinaryOperation token token MemberReference BinaryOperation token token MemberReference + MemberReference MemberReference token + MemberReference MemberReference token n token n token	1
MethodDeclaration Modifier ReferenceType openFile FormalParameter LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement private IRubyObject ReferenceType args ReferenceType VariableDeclarator MethodInvocation Assignment ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator IfStatement CatchClause This IRubyObject RubyString filename MethodInvocation MethodInvocation getRuntime MemberReference MethodInvocation = String modeString ModeFlags modes int perm BinaryOperation BlockStatement BlockStatement CatchClauseParameter ThrowStatement MethodInvocation MemberReference get_path MemberReference checkSafeString path filename getUnicodeValue || BinaryOperation BinaryOperation StatementExpression StatementExpression StatementExpression StatementExpression IfStatement StatementExpression InvalidValueException ex MethodInvocation MethodInvocation getRuntime ArraySelector args filename && BinaryOperation BinaryOperation && BinaryOperation MemberReference Assignment Assignment MethodInvocation Assignment BinaryOperation BlockStatement MethodInvocation MethodInvocation getRuntime getCurrentContext Literal > MemberReference Literal instanceof MemberReference ReferenceType > MemberReference Literal ! ArraySelector MethodInvocation args MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MemberReference MemberReference MemberReference Literal = && BinaryOperation MemberReference StatementExpression MemberReference MemberReference newErrnoEINVALError 0 args length 1 ArraySelector args RubyFixnum args length 2 Literal isNil modes MemberReference perm MemberReference path modes perm modeString "r" > MemberReference Literal ! ArraySelector MethodInvocation args Assignment path modeString Literal 2 ArraySelector args args args length 1 Literal isNil MemberReference MemberReference = 1 Literal 1 modeString ArraySelector MethodInvocation MethodInvocation args 1 Literal convertToString toString 1	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter IfStatement private ReferenceType ReferenceType BasicType BinaryOperation BlockStatement IfStatement Object ArrayCallback boolean == MemberReference Literal StatementExpression BinaryOperation BlockStatement BlockStatement length 0 MethodInvocation <= MemberReference MemberReference ForStatement StatementExpression StatementExpression StatementExpression ForStatement IfStatement method MethodInvocation Literal MethodInvocation invokestatic length RuntimeHelpers ForControl BlockStatement MethodInvocation MethodInvocation MethodInvocation ForControl BlockStatement MemberReference BlockStatement BlockStatement ClassReference p ClassReference ClassReference sig VariableDeclaration BinaryOperation MemberReference StatementExpression Literal MethodInvocation invokeUtilityMethod method MemberReference pushInt method MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression ReferenceType ReferenceType ReferenceType BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation ClassReference MethodInvocation sig length ClassReference p BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation RubyArray RubyArray Ruby int i Literal i length This MemberReference MemberReference nextValue ReferenceType ClassReference ClassReference MemberReference params ReferenceType int i Literal i length method dup method MemberReference pushInt This MemberReference MemberReference nextValue method method MethodInvocation Literal MethodInvocation invokestatic method MethodInvocation Literal MethodInvocation invokestatic 0 i RubyArray ReferenceType ReferenceType length IRubyObject 0 i i ClassReference p ClassReference ClassReference ClassReference sig ClassReference p ClassReference ClassReference ClassReference sig Ruby IRubyObject ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType RubyArray RubyArray Ruby IRubyObject RubyArray RubyArray Ruby IRubyObject	0
MethodDeclaration Modifier Annotation ReferenceType taint FormalParameter StatementExpression ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation This name Literal ThreadContext MethodInvocation taint context getRuntime	0
MethodDeclaration Modifier BasicType ReturnStatement public boolean BinaryOperation && MethodInvocation MethodInvocation ! isFinal ! isPrivate	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal compat MemberReference ThreadContext RubyArray ary MethodInvocation ary MemberReference Literal MethodInvocation callMethod ary CompatVersion RUBY1_9 to_a context RubyFixnum MethodInvocation one context getRuntime	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Node BodyCompiler boolean final UntilNode untilNode Cast && MethodInvocation MethodInvocation StatementExpression IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression IfStatement ReferenceType MemberReference untilNode MethodInvocation MethodInvocation getConditionNode untilNode MethodInvocation MemberReference StatementExpression ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement MethodInvocation MemberReference StatementExpression UntilNode node MethodInvocation MemberReference Literal compile expr MethodInvocation BranchCallback condition ClassCreator BranchCallback body ClassCreator untilNode containsNonlocalFlow StatementExpression StatementExpression context pollThreadEvents ! expr MethodInvocation untilNode getConditionNode context false context loadNil ReferenceType MethodDeclaration ReferenceType MethodDeclaration MethodInvocation MethodInvocation context consumeCurrentValue BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter IfStatement context MemberReference MemberReference MethodInvocation context MemberReference MemberReference MethodInvocation performBooleanLoopLight public ReferenceType context MethodInvocation MethodInvocation public ReferenceType context BinaryOperation BlockStatement condition body untilNode condition body untilNode BodyCompiler MethodInvocation MemberReference Literal compile context BodyCompiler != MethodInvocation Literal StatementExpression untilNode getConditionNode context true untilNode getBodyNode null MethodInvocation MethodInvocation MemberReference Literal compile untilNode getBodyNode context true	1
MethodDeclaration Modifier setStatus FormalParameter StatementExpression public BasicType status Assignment int This MemberReference = MemberReference status status	0
MethodDeclaration Modifier Annotation ReferenceType get FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType index MethodInvocation name Literal ThreadContext IRubyObject MethodInvocation MethodInvocation MethodInvocation get "[]" context getRuntime getMemoryIO MemberReference getOffset index	0
MethodDeclaration Modifier Annotation ReferenceType convertRubyToJava FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement IfStatement LocalVariableDeclaration IfStatement IfStatement TryStatement static public Deprecated Object ReferenceType rubyObject ReferenceType javaClass BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement IfStatement MethodInvocation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BlockStatement IfStatement IfStatement ReturnStatement CatchClause IRubyObject Class || BinaryOperation MethodInvocation ReturnStatement ThreadContext context MethodInvocation IRubyObject origObject MemberReference instanceof MethodInvocation ReferenceType StatementExpression IfStatement MethodInvocation BlockStatement IfStatement instanceof MemberReference ReferenceType LocalVariableDeclaration ReturnStatement BinaryOperation BlockStatement javaClass MemberReference isInstance ReturnStatement converter MethodInvocation != MemberReference Literal ReturnStatement javaClass isPrimitive LocalVariableDeclaration IfStatement ReturnStatement BinaryOperation BlockStatement IfStatement MethodInvocation BlockStatement Cast CatchClauseParameter IfStatement ReturnStatement || BinaryOperation BinaryOperation rubyObject isNil Literal rubyObject MethodInvocation getRuntime rubyObject rubyObject dataGetStruct JavaObject Assignment BinaryOperation BlockStatement rubyObject Literal respondsTo StatementExpression IfStatement MethodInvocation BlockStatement rubyObject JavaObject ReferenceType VariableDeclarator MethodInvocation || BinaryOperation BinaryOperation StatementExpression rubyObject MemberReference MemberReference get converter null MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement ClassCreator == MemberReference ClassReference LocalVariableDeclaration LocalVariableDeclaration TryStatement BinaryOperation BlockStatement IfStatement MethodInvocation MemberReference ReturnStatement ReferenceType MemberReference ClassCastException ex MethodInvocation StatementExpression Literal == MemberReference VoidClassReference == MemberReference Literal null getCurrentContext MemberReference Cast = == MemberReference Literal ThrowStatement "java_object" Assignment BinaryOperation BlockStatement rubyObject Literal respondsTo StatementExpression IfStatement Object value Cast MethodInvocation MemberReference MethodInvocation == MemberReference ClassReference == MemberReference Literal Assignment rubyObject javaClass converter MemberReference MemberReference convert String s Cast > MethodInvocation Literal ReturnStatement ReferenceType Literal javaClass ReferenceType ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReturnStatement CatchClause == MemberReference ClassReference ReturnStatement BinaryOperation BlockStatement IfStatement rubyObject getClass javaClass MethodInvocation JavaObject rubyObject rubyObject MethodInvocation MethodInvocation getRuntime MethodInvocation null javaClass rubyObject null rubyObject ReferenceType MethodInvocation rubyObject null ClassCreator MemberReference MethodInvocation = == MemberReference Literal ThrowStatement "to_java_object" Assignment BinaryOperation BlockStatement ReferenceType MemberReference rubyObject getRuntime value value getClass javaClass ReferenceType javaClass null MemberReference MethodInvocation = context rubyObject ReferenceType MethodInvocation s length 0 ClassCreator Character '\0' String RubyString Cast ByteList bytes MethodInvocation ClassCreator CatchClauseParameter ReturnStatement javaClass ReferenceType MethodInvocation == MemberReference ClassReference IfStatement BinaryOperation BlockStatement MemberReference Cast MemberReference getDebug isTrue ex printStackTrace JavaObject rubyObject dataGetStruct ReferenceType BinaryOperation rubyObject rubyObject MemberReference Literal callMethod rubyObject null ClassCreator MemberReference MethodInvocation = == MemberReference Literal ThrowStatement JavaObject rubyObject Object javaClass rubyObject RubyString TypeConverter MemberReference MethodInvocation Literal Literal convertToType ReferenceType MethodInvocation ReferenceType MethodInvocation getByteList ReferenceType MethodInvocation MethodInvocation MethodInvocation Literal UnsupportedEncodingException uee ClassCreator ByteList rubyObject MethodInvocation convertToString javaClass ReferenceType BinaryOperation BlockStatement IfStatement && BinaryOperation BinaryOperation IfStatement context ReferenceType MemberReference javaClass RuntimeException + Literal MethodInvocation context "java_object" ReferenceType BinaryOperation rubyObject rubyObject MemberReference Literal callMethod rubyObject null ClassCreator rubyObject rubyObject MethodInvocation getRuntime "to_s" true Character s Literal charAt RubyString rubyObject MemberReference Literal callMethod String bytes unsafeBytes bytes begin bytes length "UTF8" ReferenceType MethodInvocation MethodInvocation MethodInvocation getByteList BigInteger instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement == MemberReference ClassReference instanceof MemberReference ReferenceType MethodInvocation BlockStatement RubyObject rubyObject returned null for " origObject MethodInvocation getType RuntimeException + Literal MethodInvocation context "to_java_object" ReferenceType BinaryOperation getString 0 context "to_s" String bytes unsafeBytes bytes begin bytes length rubyObject RubyBignum Cast instanceof MemberReference ReferenceType ReturnStatement MethodInvocation BlockStatement javaClass ReferenceType rubyObject JavaObject rubyObject Literal respondsTo LocalVariableDeclaration ReturnStatement getName returned null for " origObject MethodInvocation getType RuntimeException + Literal MethodInvocation ReferenceType MemberReference rubyObject RubyNumeric MethodInvocation rubyObject Literal respondsTo LocalVariableDeclaration ReturnStatement BigDecimal "to_f" BasicType VariableDeclarator ClassCreator getName returned null for " origObject MethodInvocation getType RubyBignum rubyObject BigInteger Cast valueOf "to_i" ReferenceType VariableDeclarator MethodInvocation double Cast ReferenceType MemberReference getName ReferenceType MemberReference RubyNumeric Cast BigInteger MethodInvocation valueOf ReferenceType MethodInvocation BigDecimal RubyNumeric rubyObject ReferenceType MethodInvocation getLongValue RubyNumeric rubyObject MemberReference Literal callMethod RubyNumeric rubyObject MemberReference Literal callMethod context "to_f" context "to_f"	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation Assignment MemberReference Object Object int lexer MemberReference setState MemberReference Cast = yyVal LexState EXPR_END yyVal ReferenceType MemberReference Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier clear StatementExpression final public MethodInvocation Arrays MemberReference MemberReference MemberReference Cast fill buffer offset length BasicType Literal byte 0	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ForStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement ForControl BlockStatement MethodInvocation required Literal rest Literal meta Literal ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation long Literal long Literal || BinaryOperation BinaryOperation StatementExpression StatementExpression VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement StatementExpression runtime BinaryOperation newFixnum 2 true true context getRuntime null null != MemberReference MethodInvocation != MemberReference MethodInvocation Assignment Assignment BasicType VariableDeclarator VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation - MemberReference Literal ArraySelector args runtime getNil ArraySelector args runtime getNil MemberReference MethodInvocation = MemberReference MethodInvocation = int i Literal j MemberReference i j RubyString filename MethodInvocation runtime MemberReference checkSafeString JRubyFile MethodInvocation ! exists ThrowStatement runtime MethodInvocation getPosix args length 2 Literal Literal MemberReference MemberReference MemberReference MemberReference 2 args length MemberReference MemberReference get_path filename JRubyFile MethodInvocation MethodInvocation create MethodInvocation MethodInvocation MemberReference MemberReference 0 1 runtime ArraySelector args runtime ArraySelector args context ArraySelector args runtime getCurrentDirectory filename getUnicodeValue runtime BinaryOperation newErrnoENOENTError getAbsolutePath Literal Literal MemberReference + BinaryOperation Literal 0 1 i + Literal MemberReference "\"" " No such file or directory - \"" filename	0
MethodDeclaration Modifier ReferenceType unmarshalFrom FormalParameter FormalParameter FormalParameter IOException ThrowStatement public Object ReferenceType runtime ReferenceType type ReferenceType MethodInvocation Ruby RubyClass runtime BinaryOperation newTypeError + Literal MethodInvocation "no is defined for class " type getName	0
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType block ClassCreator name Literal frame Literal meta Literal IRubyObject Block ReferenceType MethodInvocation Cast true true recv getRuntime ReferenceType MemberReference RubyClass recv	0
MethodDeclaration Modifier Annotation ReferenceType op_le FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType MethodInvocation RubyComparable MemberReference This MemberReference op_le "<=" CompatVersion RUBY1_8 other RubyString context MethodInvocation getRuntime context other BinaryOperation newBoolean <= MethodInvocation Literal Cast op_cmp 0 ReferenceType MemberReference RubyString other	1
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MemberReference MemberReference Literal compileArgs argsNode context true	0
MethodDeclaration Modifier BasicType chebylevSerie FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ForStatement ReturnStatement private static double BasicType x BasicType BasicType VariableDeclarator VariableDeclarator VariableDeclarator VariableDeclarator BasicType VariableDeclarator Assignment Assignment Assignment Assignment ForControl BlockStatement BinaryOperation double double double b0 b1 b2 twox int i MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference BinaryOperation = Assignment BinaryOperation MemberReference StatementExpression StatementExpression StatementExpression * Literal BinaryOperation b1 0.0 b0 0.0 b2 0.0 twox * Literal MemberReference MemberReference BinaryOperation = >= MemberReference Literal -- i Assignment Assignment Assignment 0.5 - MemberReference MemberReference 2.0 x i - MemberReference Literal i 0 MemberReference MemberReference = MemberReference MemberReference = MemberReference BinaryOperation = b0 b2 length 1 b2 b1 b1 b0 b0 + BinaryOperation MemberReference - BinaryOperation MemberReference ArraySelector * MemberReference MemberReference b2 MemberReference twox b1 i	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType other BinaryOperation ReturnStatement BinaryOperation ReturnStatement MethodInvocation ThreadContext IRubyObject instanceof MemberReference ReferenceType MethodInvocation instanceof MemberReference ReferenceType MethodInvocation MemberReference Literal MemberReference coerceRelOp other RubyBignum RubyBoolean MethodInvocation BinaryOperation newBoolean other RubyFloat RubyBoolean MethodInvocation BinaryOperation newBoolean context "<" other context getRuntime < MethodInvocation Literal context getRuntime < Cast Cast BigInteger MethodInvocation MemberReference valueOf 0 BasicType MemberReference ReferenceType MemberReference Cast compareTo value double value RubyFloat other ReferenceType MemberReference RubyBignum other	1
MethodDeclaration Modifier ReferenceType ReturnStatement public RaiseException ClassCreator ReferenceType ClassCreator Literal RaiseException ReferenceType This MethodInvocation Literal MemberReference MethodInvocation true "unexpected getNil	0
MethodDeclaration Modifier BasicType checkArgumentCount FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ThrowStatement static public int ReferenceType runtime BasicType length BasicType min BasicType max BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement MethodInvocation Ruby int int int int expected Literal < MemberReference MemberReference StatementExpression BinaryOperation BlockStatement BlockStatement runtime MemberReference MemberReference newArgumentError 0 length min Assignment && BinaryOperation BinaryOperation StatementExpression ReturnStatement length expected MemberReference MemberReference = > MemberReference Literal > MemberReference MemberReference Assignment MemberReference expected min max - 1 length max MemberReference MemberReference = length expected max	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair RubyBoolean MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation newBoolean isPrimitive	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression public ReferenceType arg0 BasicType arg1 ReferenceType arg2 MethodInvocation Label int Label MethodInvocation getMethodVisitor MemberReference MemberReference MemberReference arg0 arg1 arg2	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference MultipleAsgn19Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop BinaryOperation BlockStatement MethodInvocation MemberReference Object Object int || MethodInvocation MethodInvocation StatementExpression support pushLocalScope yyVal support isInDef support isInSingle MethodInvocation Literal yyerror in method body"	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter ReturnStatement private static boolean ReferenceType BasicType offset ReferenceType other BinaryOperation ByteList int ByteList < BinaryOperation MemberReference - MemberReference MemberReference other realSize realSize offset	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public ReferenceType clazz ReferenceType name1 ReferenceType name2 ReferenceType name3 ReferenceType name4 ReferenceType name5 ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference RubyClass String String String String String entry MethodInvocation == MemberReference MemberReference ReturnStatement entry clazz MemberReference entry method INSTANCE MethodInvocation name1 MemberReference MemberReference MemberReference MemberReference MemberReference clazz name2 name3 name4 name5	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public Operand Modifier ReferenceType ReferenceType s ReferenceType VariableDeclarator MethodInvocation MemberReference final InstAsgnNode IR_Scope Operand val MethodInvocation s ClassCreator addInstr val MethodInvocation MemberReference build ReferenceType MethodInvocation MethodInvocation MemberReference getValueNode s s getName val	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement protected static IRubyObject ReferenceType context ReferenceType arg1 ReferenceType arg2 MethodInvocation ThreadContext IRubyObject IRubyObject RuntimeHelpers MemberReference MethodInvocation Literal MemberReference MemberReference invoke context context MethodInvocation getRuntime arg1 arg2	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType offset MethodInvocation name ElementArrayValue required Literal ThreadContext IRubyObject Util MethodInvocation MethodInvocation newUnsigned8 Literal Literal 1 context getRuntime MethodInvocation getMemoryIO MethodInvocation MemberReference getOffset offset	1
MethodDeclaration Modifier Annotation Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration ForStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair Deprecated IRubyObject Modifier ReferenceType recv ReferenceType args ReferenceType block BasicType VariableDeclarator Modifier ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation required Literal rest Literal frame Literal module Literal visibility MemberReference final IRubyObject IRubyObject Block int size BinaryOperation final RubyProc proc instanceof MemberReference ReferenceType StatementExpression StatementExpression StatementExpression Class interfaces ArrayCreator VariableDeclaration BinaryOperation MemberReference IfStatement StatementExpression JavaObject MethodInvocation MethodInvocation wrap 1 true true true Visibility PRIVATE - MethodInvocation Literal ArraySelector args RubyProc Assignment Assignment MemberReference ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement Assignment recv getRuntime Proxy MethodInvocation MemberReference ClassCreator Arity MethodInvocation MemberReference Literal Literal checkArgumentCount 1 MemberReference MemberReference Cast = MemberReference MethodInvocation = ++ size Class size int i Literal i size || BinaryOperation Cast ThrowStatement MemberReference Cast = recv MethodInvocation getRuntime interfaces ReferenceType FieldDeclaration MethodDeclaration recv getRuntime args 1 - 1 size proc ReferenceType MemberReference proc recv MethodInvocation getRuntime 0 instanceof MemberReference ReferenceType ReferenceType MemberReference MethodInvocation ArraySelector interfaces ReferenceType MemberReference getJRubyClassLoader Modifier ReferenceType VariableDeclarator Modifier ReferenceType invoke FormalParameter FormalParameter FormalParameter Throwable LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ForStatement ReturnStatement RubyProc ArraySelector args MemberReference MemberReference newProc ArraySelector args JavaClass JavaClass ArraySelector args recv MethodInvocation getRuntime MemberReference JavaClass ArraySelector args private Map parameterTypeCache ClassCreator public Object ReferenceType proxy ReferenceType method ReferenceType nargs ReferenceType VariableDeclarator BinaryOperation BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator Assignment Assignment ForControl BlockStatement MethodInvocation MemberReference Block.Type PROC block MemberReference MemberReference BinaryOperation newArgumentError i MemberReference ReferenceType Object Method Object Class parameterTypes Cast == MemberReference Literal StatementExpression StatementExpression int methodArgsLength MemberReference String methodName MethodInvocation && MethodInvocation BinaryOperation ReturnStatement BinaryOperation BlockStatement IfStatement Ruby runtime MethodInvocation int length TernaryExpression IRubyObject rubyArgs ArrayCreator MemberReference MethodInvocation = MemberReference ClassCreator = VariableDeclaration BinaryOperation MemberReference StatementExpression proc MethodInvocation MethodInvocation MemberReference call size i i + Literal MemberReference i ConcurrentHashMap ReferenceType MethodInvocation parameterTypes null Assignment MethodInvocation parameterTypes length method getName methodName Literal equals == MemberReference Literal MethodInvocation && MethodInvocation BinaryOperation ReturnStatement BinaryOperation BlockStatement recv getRuntime BinaryOperation Literal MemberReference ReferenceType BinaryOperation ArraySelector rubyArgs JavaUtil MemberReference MemberReference convertJavaToRuby ArraySelector rubyArgs ReferenceType MemberReference MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i Assignment MethodInvocation toJava runtime getCurrentContext rubyArgs interface " ArraySelector args Class parameterTypeCache MemberReference get MemberReference MethodInvocation = parameterTypeCache MemberReference MemberReference put "toString" methodArgsLength 0 proxy MethodInvocation getClass methodName Literal equals == MemberReference Literal ClassCreator && BinaryOperation MemberReference ReturnStatement == MemberReference Literal 0 nargs length IRubyObject + MemberReference Literal Literal runtime proxy Literal JavaMethod runtime method int i Literal i length MemberReference MethodInvocation = method getReturnType MemberReference method parameterTypes method getParameterTypes method parameterTypes getName "hashCode" methodArgsLength 0 ReferenceType MethodInvocation && MethodInvocation BinaryOperation ArraySelector MethodInvocation parameterTypes MethodInvocation nargs null length 2 0 1 0 ArraySelector rubyArgs JavaUtil MemberReference MemberReference convertJavaToRuby i Integer proxy MethodInvocation getClass methodName Literal equals == MemberReference Literal Literal ClassReference equals Boolean BinaryOperation valueOf BinaryOperation runtime ArraySelector nargs hashCode "equals" methodArgsLength 1 0 ReferenceType == MemberReference MemberReference + MemberReference Literal MemberReference Object proxy ArraySelector nargs i 2 i Literal 0	1
MethodDeclaration Modifier Annotation ReferenceType sub FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType arg0 ReferenceType block ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference name Literal frame Literal module Literal visibility MemberReference reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject Block RubyString str Cast ! str MethodInvocation MemberReference MemberReference MemberReference sub_bang StatementExpression str true true PRIVATE CompatVersion RUBY1_8 ReferenceType MethodInvocation isNil context arg0 block MethodInvocation RubyString MethodInvocation MemberReference MethodInvocation getLastlineString context MethodInvocation getCurrentScope dup context context getRuntime MemberReference setLastLine str	0
MethodDeclaration Modifier BasicType hashCode ReturnStatement public int MethodInvocation field hashCode	0
MethodDeclaration Modifier Annotation ReferenceType listFiles ReturnStatement public Override File ArrayCreator ReferenceType Literal File 0	0
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression ReturnStatement public Block ReferenceType Assignment ClassCreator MemberReference MethodInvocation = ReferenceType This MemberReference MemberReference clone Block Visibility PUBLIC	0
MethodDeclaration Modifier BasicType FormalParameter ThrowStatement final public byte BasicType offset MethodInvocation long ex	0
MethodDeclaration Modifier Annotation BasicType isCallableFrom FormalParameter FormalParameter IfStatement ReturnStatement public Override boolean ReferenceType caller ReferenceType callType BinaryOperation StatementExpression MethodInvocation IRubyObject CallType == MemberReference Literal MethodInvocation compiledMethod MemberReference MemberReference isCallableFrom compiledMethod null initializeMethod caller callType	1
MethodDeclaration Modifier Annotation ReferenceType sample FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration TryStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation ReturnStatement BasicType VariableDeclarator ReturnStatement CatchClause name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation == MemberReference Literal MethodInvocation int i TernaryExpression MemberReference CatchClauseParameter StatementExpression ReturnStatement "sample" CompatVersion RUBY1_9 context getRuntime realLength 0 runtime getNil BinaryOperation Literal MethodInvocation ArraySelector values ArrayIndexOutOfBoundsException e MethodInvocation MethodInvocation == MemberReference Literal 0 runtime MethodInvocation BinaryOperation concurrentModification runtime getNil realLength 1 MemberReference nextInt + MemberReference MemberReference realLength begin i	1
MethodDeclaration Modifier BasicType ReturnStatement private static final short ArrayCreator BasicType ArrayInitializer short Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal 360 10 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 44 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 44 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 - 1 350 0 352 353 354 355 356 357 358 - 1 360 10 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 44 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 59 - 1 61 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 91 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 44 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 59 - 1 61 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 91 - 1 333 334 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 348 - 1 350 0 352 353 354 355 356 357 358 - 1 360 10 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 - 1 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 59 - 1 61 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 91 - 1 333 334 335 - 1 337 - 1 - 1 - 1 341 - 1 - 1 - 1 - 1 - 1 - 1 348 - 1 350 0 352 353 354 355 356 357 358 - 1 360 10 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 44 - 1 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 59 - 1 61 - 1 63 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 91 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 0 333 334 335 - 1 - 1 - 1 - 1 - 1 341 10 - 1 - 1 - 1 - 1 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 44 - 1 - 1 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 0 333 334 335 - 1 - 1 - 1 - 1 - 1 341 10 - 1 - 1 - 1 - 1 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 44 - 1 - 1 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 0 - 1 - 1 - 1 - 1 341 - 1 - 1 - 1 - 1 10 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 44 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 58 59 - 1 - 1 - 1 63 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 0 333 334 - 1 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 - 1 - 1 350 - 1 - 1 - 1 354 355 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 44 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 281 282 - 1 63 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 0 333 334 - 1 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 - 1 - 1 350 - 1 - 1 - 1 354 355 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 0 333 334 - 1 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 - 1 - 1 350 - 1 - 1 - 1 - 1 - 1 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 44 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 58 59 - 1 - 1 - 1 63 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 0 333 334 - 1 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 - 1 - 1 350 - 1 - 1 - 1 - 1 - 1 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 44 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 281 282 - 1 63 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 0 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 - 1 - 1 350 - 1 - 1 - 1 - 1 - 1 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 0 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 44 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 58 59 - 1 - 1 - 1 63 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 0 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 356 357 358 - 1 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 44 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 281 282 - 1 63 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 0 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 356 357 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 0 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 356 357 10 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 44 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 58 59 44 - 1 - 1 63 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 0 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 10 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 356 357 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 44 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 281 282 - 1 63 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 44 - 1 - 1 - 1 - 1 - 1 356 357 - 1 - 1 - 1 - 1 362 - 1 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 0 - 1 262 263 264 281 282 - 1 268 269 10 271 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 - 1 - 1 324 325 - 1 - 1 - 1 329 330 - 1 - 1 - 1 58 59 - 1 - 1 338 63 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 341 - 1 - 1 - 1 0 362 - 1 - 1 - 1 - 1 - 1 262 263 264 10 - 1 267 268 269 - 1 271 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 44 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 324 325 - 1 - 1 - 1 329 330 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 - 1 0 341 - 1 - 1 344 - 1 346 262 263 264 10 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 44 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 324 325 - 1 - 1 - 1 329 330 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 - 1 0 341 - 1 - 1 344 - 1 346 262 263 264 10 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 44 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 324 325 - 1 - 1 - 1 329 330 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 - 1 0 341 - 1 - 1 344 - 1 346 262 263 264 10 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 0 293 294 295 296 297 - 1 44 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 324 325 - 1 - 1 - 1 329 330 - 1 - 1 - 1 - 1 - 1 44 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 262 263 264 58 59 267 268 269 63 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 0 293 294 295 296 297 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 324 325 - 1 - 1 - 1 329 330 - 1 - 1 - 1 - 1 - 1 44 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 262 263 264 58 59 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 0 293 294 295 296 297 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 325 - 1 - 1 - 1 329 330 - 1 - 1 - 1 - 1 - 1 44 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 262 263 264 58 59 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 0 293 294 295 296 297 - 1 262 263 264 10 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 0 293 294 295 296 297 - 1 44 - 1 338 10 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 58 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 262 263 264 58 59 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 0 293 294 295 296 297 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 338 10 - 1 341 - 1 - 1 344 - 1 346 262 263 264 58 59 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 44 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 58 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 10 - 1 341 - 1 - 1 344 - 1 346 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 44 - 1 290 291 - 1 293 294 295 296 297 - 1 262 263 264 58 59 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 0 293 294 295 296 297 - 1 - 1 - 1 338 10 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 338 10 - 1 341 - 1 - 1 344 - 1 346 262 263 264 58 59 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 44 - 1 290 291 - 1 293 294 295 296 297 - 1 262 263 264 58 59 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 0 293 294 295 296 297 - 1 - 1 - 1 338 10 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 338 10 - 1 341 - 1 - 1 344 - 1 346 262 263 264 58 59 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 44 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 58 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 10 - 1 341 - 1 - 1 344 - 1 346 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 44 - 1 290 291 - 1 293 294 295 296 297 - 1 262 263 264 58 59 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 0 293 294 295 296 297 - 1 - 1 - 1 338 10 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 338 10 - 1 341 - 1 - 1 344 - 1 346 262 263 264 58 59 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 44 - 1 290 291 - 1 293 294 295 296 297 - 1 262 263 264 58 59 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 10 - 1 290 291 0 293 294 295 296 297 - 1 - 1 - 1 338 10 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 59 338 - 1 - 1 341 - 1 - 1 344 - 1 346 262 263 264 - 1 59 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 341 - 1 - 1 344 - 1 346 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 59 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 - 1 268 269 341 271 - 1 344 - 1 346 262 263 264 - 1 - 1 - 1 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 341 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 341 - 1 - 1 - 1 - 1 - 1 - 1 362 - 1 257 258 259 260 261 - 1 - 1 - 1 265 266 - 1 - 1 362 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 - 1 - 1 298 299 300 301 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 256 257 258 259 260 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 - 1 - 1 298 299 300 301 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 260 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 - 1 - 1 298 299 300 301 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 341 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 299 - 1 - 1 302 303 - 1 - 1 306 307 308 309 310 311 - 1 - 1 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 349 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 - 1 - 1 375 376 - 1 378 379 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 - 1	1
MethodDeclaration Modifier ReferenceType getOpenFileChecked StatementExpression ReturnStatement protected OpenFile MethodInvocation MemberReference openFile MethodInvocation openFile getRuntime	0
MethodDeclaration Modifier main FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement ForStatement ForStatement ForStatement static public ReferenceType args BasicType VariableDeclarator BasicType VariableDeclarator BinaryOperation BlockStatement ForControl BlockStatement ForControl BlockStatement ForControl BlockStatement String long Literal long n Literal >= MemberReference Literal StatementExpression IfStatement VariableDeclaration BinaryOperation MemberReference StatementExpression VariableDeclaration BinaryOperation MemberReference StatementExpression VariableDeclaration BinaryOperation MemberReference StatementExpression 5 30 args length 1 Assignment BinaryOperation BlockStatement BasicType VariableDeclarator < MemberReference MemberReference ++ j MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ j MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ j MethodInvocation MemberReference MethodInvocation = >= MemberReference Literal StatementExpression long j Literal j MemberReference long j Literal j MemberReference long j Literal j MemberReference Long MemberReference parseLong args length 2 Assignment 0 n 0 n 0 n ArraySelector args MemberReference MethodInvocation = Literal n Long MemberReference parseLong 0 ArraySelector args Literal 1	0
MethodDeclaration Modifier Annotation ReferenceType each_byte FormalParameter FormalParameter IOException LocalVariableDeclaration WhileStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType block BasicType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name Literal frame Literal ThreadContext Block int value MethodInvocation != MemberReference Literal StatementExpression StatementExpression MethodInvocation getRuntime "each_byte" true io read value - 1 MethodInvocation Assignment getNil block MemberReference MethodInvocation yield MemberReference MethodInvocation = context MethodInvocation getRuntime value io read MemberReference newFixnum value	1
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration IfStatement ReturnStatement public RubyClass ReferenceType VariableDeclarator BinaryOperation ReturnStatement Assignment RubyClass clazz != Assignment Literal MemberReference MemberReference MethodInvocation = MemberReference MemberReference = null clazz MethodInvocation getJavaModule clazz Literal fastGetClass	1
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement public boolean ReferenceType other BinaryOperation AssignedName && BinaryOperation BinaryOperation != MemberReference Literal < MemberReference MemberReference other null value value	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration IfStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression IfStatement IfStatement ReturnStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MethodInvocation BlockStatement BlockStatement MethodInvocation Ruby ThreadContext IRubyObject Block RubyModule containingClass MethodInvocation == MemberReference MethodInvocation ThrowStatement String name MethodInvocation && BinaryOperation BinaryOperation StatementExpression || BinaryOperation BinaryOperation StatementExpression Visibility visibility MethodInvocation || BinaryOperation BinaryOperation StatementExpression scope determineModule Node body TernaryExpression DynamicMethod MethodInvocation containingClass MemberReference MemberReference addMethod == MethodInvocation MemberReference StatementExpression StatementExpression containingClass isSingleton StatementExpression StatementExpression runtime getNil context containingClass runtime MethodInvocation getName == MemberReference MethodInvocation == MemberReference Literal MethodInvocation == MemberReference Literal == MemberReference Literal MethodInvocation context getCurrentVisibility || BinaryOperation BinaryOperation == MemberReference MemberReference Assignment BinaryOperation ClassCreator MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MethodInvocation name context getCurrentVisibility Visibility MODULE_FUNCTION MethodInvocation MethodInvocation Cast MethodInvocation runtime Literal newTypeError containingClass runtime getObject name "initialize" runtime MethodInvocation getWarnings name "__id__" name runtime MethodInvocation getWarnings == MemberReference Literal == MemberReference Literal visibility Visibility MODULE_FUNCTION MemberReference MemberReference = == MemberReference Literal ReferenceType MethodInvocation runtime containingClass name scope body argsNode visibility getPosition containingClass MethodInvocation containingClass MemberReference Literal MethodInvocation callMethod ReferenceType MemberReference containingClass MemberReference Literal MethodInvocation callMethod "no class/module to add method" MemberReference Literal Literal warn MemberReference BinaryOperation MemberReference warn name "initialize" name "initialize_copy" visibility Visibility PRIVATE null NilNode getPosition MemberReference ClassCreator addMethod context runtime MemberReference MetaClass containingClass context "method_added" runtime MemberReference ID REDEFINING_DANGEROUS "redefining may cause ID REDEFINING_DANGEROUS + BinaryOperation Literal name name ReferenceType MethodInvocation MemberReference MemberReference name name + Literal MemberReference "' may cause problem" containingClass Visibility PUBLIC "redefining `" name	1
MethodDeclaration Modifier addReadWriteAttribute FormalParameter FormalParameter StatementExpression public ReferenceType context ReferenceType name MethodInvocation ThreadContext String MemberReference MethodInvocation MemberReference Literal Literal addAccessor context name intern Visibility PUBLIC true true	1
MethodDeclaration Modifier ReferenceType getError ReturnStatement public FileChannel MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType options ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime "options" MethodInvocation newFixnum	0
MethodDeclaration Modifier ReferenceType getOSName LocalVariableDeclaration LocalVariableDeclaration ReturnStatement static public String ReferenceType VariableDeclarator ReferenceType VariableDeclarator TernaryExpression String OSName MethodInvocation String theOSName MethodInvocation BinaryOperation MemberReference MemberReference Platform getOSName MemberReference get == MemberReference Literal OSName theOSName OSName theOSName null	1
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression SwitchStatement public ReferenceType rescueArgs MethodInvocation MethodInvocation MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase ArgumentsCallback rescueArgs This call rescueArgs Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression 1 MethodInvocation 2 MethodInvocation 3 MethodInvocation MethodInvocation Literal MethodInvocation invokeUtilityMethod Literal MethodInvocation invokeUtilityMethod Literal MethodInvocation invokeUtilityMethod Literal MethodInvocation invokeUtilityMethod "isJavaExceptionHandled" ClassReference ClassReference ClassReference ClassReference sig "isJavaExceptionHandled" ClassReference ClassReference ClassReference ClassReference ClassReference sig "isJavaExceptionHandled" ClassReference ClassReference ClassReference ClassReference ClassReference ClassReference sig "isJavaExceptionHandled" ClassReference ClassReference ClassReference ClassReference sig ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType IRubyObject Throwable IRubyObject ThreadContext IRubyObject Throwable IRubyObject IRubyObject ThreadContext IRubyObject Throwable IRubyObject IRubyObject IRubyObject ThreadContext IRubyObject Throwable IRubyObject ThreadContext	1
MethodDeclaration Modifier ReferenceType s_deflate FormalParameter FormalParameter FormalParameter IOException LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement static public IRubyObject ReferenceType caller ReferenceType str BasicType level ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference IRubyObject ByteList int ZlibDeflate zstream ClassCreator IRubyObject result MethodInvocation zstream close result ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference zstream MemberReference MemberReference ZlibDeflate caller level MAX_WBITS str	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean final NextNode nextNode Cast CompilerCallback valueCallback ClassCreator context pollThreadEvents context MemberReference ! expr MethodInvocation ReferenceType MemberReference ReferenceType MethodDeclaration valueCallback context consumeCurrentValue NextNode node CompilerCallback Modifier call FormalParameter IfStatement public ReferenceType context BinaryOperation BlockStatement BlockStatement BodyCompiler != MethodInvocation Literal StatementExpression StatementExpression nextNode getValueNode null MethodInvocation MethodInvocation MethodInvocation MemberReference Literal compile context loadNil nextNode getValueNode context true	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast Cast Cast new_opElementAsgnNode Cast getPosition ReferenceType MemberReference ReferenceType Cast ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals String ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 5 yyTop + Literal MemberReference - 3 yyTop 0 yyTop - 5 yyTop - 1 yyTop	1
MethodDeclaration Modifier setPath FormalParameter StatementExpression public ReferenceType path Assignment String This MemberReference = MemberReference path path	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement protected IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType method ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject String DynamicMethod IRubyObject Block RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference MemberReference context self method getVisibility name callType args block	0
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression synchronized public BasicType Assignment MethodInvocation boolean MemberReference MemberReference = repaint	0
MethodDeclaration Modifier ReferenceType IfStatement IfStatement ReturnStatement private String MethodInvocation ReturnStatement MethodInvocation ReturnStatement MethodInvocation Double MemberReference isInfinite TernaryExpression Double MemberReference isNaN Literal MemberReference value BinaryOperation Literal Literal value value < MemberReference Literal value 0	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType VariableDeclarator StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject Ruby runtime MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference MemberReference pre argsNode MemberReference Literal argsNode MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference prepare body MemberReference MemberReference MemberReference MemberReference rj MethodInvocation rj MethodInvocation MemberReference MemberReference MemberReference post context name self Block runtime runtime 6 context runtime self arg0 arg1 arg2 arg3 arg4 arg5 Block runtime context self Block MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Short ReferenceType s MethodInvocation Short vri MemberReference s	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement final static public byte BasicType i MethodInvocation long ByteList MethodInvocation plain Long MemberReference i	0
MethodDeclaration Modifier ReferenceType required FormalParameter AssertStatement ReturnStatement static public Arity BasicType minimum BinaryOperation MethodInvocation int >= MemberReference Literal BinaryOperation createArity minimum 0 + Literal MemberReference 1 minimum	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType block MethodInvocation MemberReference frame Literal module Literal ThreadContext IRubyObject Block block MemberReference MemberReference yield recv true true context recv	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context This name Literal ThreadContext	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Operand MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType max FormalParameter ReturnStatement synchronized public JRubyMethod RubyNumeric ReferenceType context MethodInvocation ThreadContext RubyNumeric MethodInvocation MemberReference context getRuntime capacity	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType MethodInvocation RubyComparable MemberReference This MemberReference op_lt "<" CompatVersion RUBY1_9 other RubyString context MethodInvocation getRuntime context other BinaryOperation newBoolean < MethodInvocation Literal Cast op_cmp19 0 ReferenceType MemberReference RubyString other	1
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SwitchStatement public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType values ReferenceType block BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase Ruby ThreadContext IRubyObject IRubyObject Block int length TernaryExpression length Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement StatementExpression BinaryOperation Literal MemberReference 0 MethodInvocation 1 MethodInvocation MethodInvocation == MemberReference Literal 0 values length MemberReference MemberReference MemberReference MemberReference assign MemberReference MemberReference MemberReference MemberReference MemberReference assign MemberReference MemberReference MemberReference MethodInvocation MemberReference assign values null runtime context self block runtime context self ArraySelector values block runtime context self runtime MemberReference newArray block Literal values 0	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference	0
MethodDeclaration Modifier StatementExpression public MethodInvocation config MethodInvocation getOutput MethodInvocation print config	0
MethodDeclaration Modifier ReferenceType getVariable FormalParameter IfStatement LocalVariableDeclaration IfStatement ReturnStatement public Object BasicType index BinaryOperation ReturnStatement ReferenceType VariableDeclarator BinaryOperation ReturnStatement Literal int < MemberReference Literal Literal Object ivarTable MethodInvocation > MemberReference MemberReference MemberReference null index 0 null ivarTable length index ArraySelector ivarTable MemberReference index	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal Cast MethodInvocation getOperatorCallNode ReferenceType MemberReference "*" ReferenceType MemberReference getPosition Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop	1
MethodDeclaration Modifier Annotation BasicType FormalParameter FormalParameter ReturnStatement public Override boolean ReferenceType obj ReferenceType type BinaryOperation IRubyObject RubyModule instanceof MemberReference ReferenceType obj RubyMatchData	0
MethodDeclaration Modifier StatementExpression public MethodInvocation incrementAndGet	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String Block MemberReference MemberReference MemberReference MemberReference call context self clazz name	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment Cast MemberReference Object Object int MemberReference Cast = ReferenceType MemberReference yyVal yyVal ReferenceType MemberReference ISourcePositionHolder yyVal ListNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyTime ReferenceType recv ReferenceType args MethodInvocation name ElementArrayValue required Literal optional Literal meta Literal IRubyObject IRubyObject MemberReference MemberReference Literal Literal Literal 1 9 true recv args true	1
MethodDeclaration Modifier ReferenceType toString LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ForStatement ReturnStatement public String ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation EnhancedForControl StatementExpression MethodInvocation StringBuffer buf ClassCreator buf MethodInvocation MethodInvocation Literal append buf Literal append buf MethodInvocation append buf Literal append VariableDeclaration MemberReference MethodInvocation buf toString ReferenceType MethodInvocation append Literal append Data ReferenceType VariableDeclarator _fgNodes buf MethodInvocation MethodInvocation MethodInvocation Literal append StringBuffer FlowGraphNode n MethodInvocation append Literal append MethodInvocation append State for " getID ":\n" n toString	1
MethodDeclaration Modifier ReferenceType ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier Annotation Annotation ReferenceType hash ReturnStatement public JRubyMethod ElementValuePair Override RubyFixnum MethodInvocation name Literal MethodInvocation getRuntime MethodInvocation newFixnum value hashCode	0
MethodDeclaration Modifier ReferenceType checkArray FormalParameter IfStatement ReturnStatement protected static final RubyArray ReferenceType obj BinaryOperation BlockStatement Cast IRubyObject instanceof MemberReference ReferenceType ThrowStatement ReferenceType MemberReference obj RubyArray MethodInvocation RubyArray obj obj MethodInvocation getRuntime Literal newArgumentError expected"	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement protected DynamicMethod ReferenceType context ReferenceType self ReferenceType methodName MethodInvocation ThreadContext IRubyObject String runtimeCache MemberReference MemberReference Literal MemberReference getMethod context self 6 methodName	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression public ReferenceType ReferenceType BasicType MethodInvocation MethodInvocation Object ArrayCallback boolean MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType sub_bang FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType block MethodInvocation name Literal frame Literal reads MemberReference writes MemberReference compat MemberReference ThreadContext IRubyObject IRubyObject Block MemberReference MethodInvocation MethodInvocation "sub!" true BACKREF BACKREF CompatVersion RUBY1_8 context MemberReference getQuotedPattern arg1 convertToString arg0	1
MethodDeclaration Modifier ReferenceType childNodes IfStatement ReturnStatement public List TypeArgument BinaryOperation ReturnStatement MethodInvocation ReferenceType != MemberReference Literal MethodInvocation Node MemberReference MemberReference createList Node null Node MemberReference MemberReference MemberReference createList	1
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier Exception StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public Assignment MethodInvocation Assignment MethodInvocation Assignment MethodInvocation Assignment MethodInvocation Assignment MethodInvocation Assignment MethodInvocation Assignment MethodInvocation Assignment MethodInvocation MemberReference MethodInvocation = Literal MemberReference assertEquals MemberReference MethodInvocation = Literal MemberReference assertEquals MemberReference MethodInvocation = Literal MemberReference assertEquals MemberReference MethodInvocation = Literal MemberReference assertEquals MemberReference MethodInvocation = Literal MemberReference assertEquals MemberReference MethodInvocation = Literal MemberReference assertEquals MemberReference MethodInvocation = Literal MemberReference assertEquals MemberReference MethodInvocation = Literal MemberReference assertEquals result Literal eval "two" result result Literal eval "two" result result Literal eval "two" result result Literal eval "two" result result Literal eval "two" result result Literal eval "two" result result Literal eval "two" result result Literal eval "two" result = hash = = hash = = = hash = = = hash = = = hash = = = hash = = = hash = = = hash = =	0
MethodDeclaration Modifier StatementExpression public Assignment MemberReference Literal = ArraySelector null MemberReference --	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference + BinaryOperation MemberReference MemberReference tryClass == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression InvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setArgumentTypes ic MemberReference setJavaName ic Literal setSingleton ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity optional InvocationCallback OPTIONAL_ARGS method true e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation mv MemberReference MemberReference visitVarInsn MemberReference ClassReference checkCast mv MemberReference Literal visitVarInsn mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference mv Literal Literal visitMaxs MemberReference MethodInvocation = InvocationCallback c newInstance IllegalArgumentException e getMessage ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtor MemberReference startCallS ALOAD METHOD_ARGS_INDEX mv ReferenceType ALOAD 3 INVOKESTATIC typePath method MemberReference MemberReference sig ARETURN 2 3 c MemberReference MemberReference MemberReference endCall Class MemberReference ClassReference ClassReference method signature mnamePath cw IRubyObject ret signature cw mv mname RubyKernel IRUBY_OBJECT ReferenceType ReferenceType IRubyObject Block	1
MethodDeclaration Modifier Annotation StatementExpression public Override MethodInvocation MemberReference MemberReference SIZE	0
MethodDeclaration Modifier ReferenceType invoke FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement private final IRubyObject ReferenceType context ReferenceType arg1 BasicType VariableDeclarator MethodInvocation ThreadContext IRubyObject int retval MethodInvocation resultConverter MemberReference MemberReference fromNative invoker MemberReference MethodInvocation context retval function c1 MemberReference MemberReference intValue context arg1	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression public BasicType param ReferenceType name BasicType ReferenceType fields ReferenceType VariableDeclarator MethodInvocation MethodInvocation int String boolean Map TypeArgument TypeArgument MethodInvocation MemberReference MemberReference visitEnd ReferenceType ReferenceType MemberReference MemberReference MemberReference fields String Object param name	0
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement public String ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference String variables MethodInvocation String MethodInvocation int BinaryOperation String names ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy System MemberReference Literal MemberReference MemberReference MemberReference arraycopy names getVariables + MemberReference MemberReference ReferenceType MemberReference variables 0 names 0 variables length 0 names variables length length variables length length String	0
MethodDeclaration Modifier fclose IOException BadDescriptorException StatementExpression StatementExpression synchronized public Assignment MethodInvocation MemberReference Literal = Literal close true false	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Set TypeArgument MemberReference ReferenceType Script	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType ClassCreator Ruby RubyClass ReferenceType MemberReference MemberReference Base runtime	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression public ReferenceType runtime ReferenceType applet MethodInvocation MethodInvocation MethodInvocation Ruby MemberReference applet MemberReference add applet validate runtime scrollPane	0
MethodDeclaration Modifier BasicType ReturnStatement final public int MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name arg0 Block	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType pattern ReferenceType block ReferenceType VariableDeclarator TernaryExpression name Literal frame Literal compat MemberReference reads MemberReference ThreadContext IRubyObject Block IRubyObject result MethodInvocation BinaryOperation MethodInvocation MemberReference "match" true CompatVersion RUBY1_9 BACKREF MethodInvocation MemberReference && MethodInvocation MethodInvocation block MemberReference MemberReference yield result MemberReference Literal This callMethod pattern block isGiven ! result isNil context result context "match"	0
MethodDeclaration Modifier Annotation BasicType equals FormalParameter ReturnStatement final public Override boolean ReferenceType obj BinaryOperation Object && BinaryOperation BinaryOperation instanceof MemberReference ReferenceType == Cast MemberReference obj ReferenceType MemberReference address obj	1
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType all_symbols FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv MethodInvocation IRubyObject recv MethodInvocation MethodInvocation getRuntime all_symbols	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Literal getOperatorCallNode ReferenceType MemberReference "-@" Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression public ReferenceType context ReferenceType name MethodInvocation ThreadContext String MemberReference MethodInvocation MemberReference Literal Literal addAccessor context name intern Visibility PUBLIC false true	1
MethodDeclaration Modifier FormalParameter FormalParameter AssertStatement private BasicType offset ReferenceType value BinaryOperation BinaryOperation int IRubyObject < MemberReference MemberReference + BinaryOperation This offset length + BinaryOperation Literal + BinaryOperation MemberReference ", " + BinaryOperation Literal value + Literal MemberReference " to " "Setting " offset	0
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression public ReferenceType name ReferenceType value MethodInvocation String IRubyObject MemberReference ClassCreator defineReadonly name ReferenceType MemberReference ValueAccessor value	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType arity ReturnStatement final public JRubyMethod RubyFixnum MethodInvocation MethodInvocation getRuntime MethodInvocation newFixnum	0
MethodDeclaration Modifier FormalParameter RaiseException IfStatement private ReferenceType m BinaryOperation BlockStatement RubyModule == MethodInvocation MethodInvocation ThrowStatement m MethodInvocation MethodInvocation getRuntime Literal newArgumentError	0
MethodDeclaration Modifier Annotation ReferenceType delete FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal required Literal rest Literal compat MemberReference ThreadContext IRubyObject RubyString str MethodInvocation str MemberReference MemberReference str 1 true CompatVersion RUBY1_8 MethodInvocation context args context getRuntime	0
MethodDeclaration Modifier Annotation ReferenceType getBlockCallback19 FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated CompiledBlockCallback19 ReferenceType method ReferenceType scriptObject ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference LocalVariableDeclaration TryStatement String Object Class typeClass MethodInvocation String typePathString MethodInvocation String mname BinaryOperation String mnamePath BinaryOperation classLoader ReferenceType VariableDeclarator IfStatement LocalVariableDeclaration ReturnStatement CatchClause CatchClause scriptObject getClass MemberReference p + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter StatementExpression ThrowStatement typeClass + BinaryOperation MemberReference "xx1" + BinaryOperation MemberReference "xx1" MemberReference tryClass == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression CompiledBlockCallback19 ic Cast ic IllegalArgumentException e MemberReference Exception e MethodInvocation ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation e e printStackTrace ReferenceType MethodInvocation typeClass getName "BlockCallback$" typePathString "BlockCallback$" ClassWriter cw MethodInvocation SkinnyMethodAdapter mv MethodInvocation mv Literal aload mv MemberReference Literal MethodInvocation getfield mv Literal aload mv Literal aload mv Literal aload mv Literal aload mv MemberReference MemberReference MethodInvocation invokestatic mv areturn mv Literal Literal visitMaxs MemberReference MethodInvocation = CompiledBlockCallback19 c MethodInvocation ClassReference getConstructor IllegalArgumentException e getMessage MemberReference MemberReference createBlockCtor19 MemberReference 0 mnamePath "$scriptObject" MemberReference ci 1 2 3 4 typePathString method ClassReference BinaryOperation ClassReference ClassReference ClassReference ClassReference sig 2 3 c MemberReference MemberReference MemberReference endCall MemberReference newInstance ReferenceType mnamePath typeClass cw typeClass ReferenceType + BinaryOperation Literal ReferenceType ReferenceType ReferenceType ReferenceType cw mv mname scriptObject Object IRubyObject + Literal MemberReference ";" ThreadContext IRubyObject IRubyObject Block "L" typePathString	1
MethodDeclaration Modifier StatementExpression public MethodInvocation MemberReference MemberReference SIZE	0
MethodDeclaration Modifier ReferenceType ReturnStatement public String Literal	0
MethodDeclaration Modifier ReferenceType shrink FormalParameter FormalParameter StatementExpression IfStatement StatementExpression ReturnStatement private static final ByteList ReferenceType i2Shrink BasicType iLength Assignment BinaryOperation BlockStatement MethodInvocation MemberReference ByteList int MemberReference BinaryOperation = < MemberReference Literal ThrowStatement i2Shrink MemberReference length i2Shrink iLength - MethodInvocation MemberReference iLength 0 ClassCreator iLength i2Shrink length iLength ReferenceType IllegalArgumentException	1
MethodDeclaration FormalParameter StatementExpression ReferenceType Assignment RubyClass This MemberReference = MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType size ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime BinaryOperation newFixnum / BinaryOperation Literal + MethodInvocation Literal 8 value 7	0
MethodDeclaration Modifier BasicType ReturnStatement final public boolean BinaryOperation == MemberReference Literal address 0	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression LocalVariableDeclaration IfStatement IfStatement StatementExpression StatementExpression StatementExpression ReturnStatement private IRubyObject ReferenceType context ReferenceType pattern ReferenceType matcher ReferenceType repl BasicType tuFlags Modifier BasicType VariableDeclarator Modifier BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation StatementExpression Modifier BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement BinaryOperation BlockStatement MethodInvocation Assignment MethodInvocation MethodInvocation ThreadContext Regex Matcher RubyString int final int beg MethodInvocation final int end MethodInvocation Encoding enc MethodInvocation == MemberReference Literal Assignment final int plen BinaryOperation ByteList replValue MemberReference > MemberReference MemberReference StatementExpression StatementExpression MemberReference associateEncoding int cr MethodInvocation && BinaryOperation BinaryOperation LocalVariableDeclaration IfStatement != MemberReference MemberReference LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression System MemberReference MemberReference MemberReference BinaryOperation MemberReference arraycopy MemberReference BinaryOperation += MemberReference setCodeRange MemberReference infectBy matcher getBegin matcher getEnd MemberReference isCompatibleWith enc null MemberReference MethodInvocation = - MemberReference MemberReference repl value replValue realSize plen MethodInvocation MethodInvocation enc getCodeRange > MemberReference MemberReference < MemberReference MemberReference BasicType VariableDeclarator BinaryOperation BlockStatement BlockStatement replValue realSize plen BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation replValue bytes replValue begin value bytes + MemberReference MemberReference replValue realSize value realSize - MemberReference MemberReference cr tuFlags repl enc MemberReference MemberReference MemberReference MemberReference end beg BinaryOperation cr CR_UNKNOWN cr CR_BROKEN int cr2 MethodInvocation || BinaryOperation BinaryOperation StatementExpression StatementExpression int src BinaryOperation int dst BinaryOperation int length BinaryOperation System MemberReference MemberReference MemberReference MemberReference MemberReference arraycopy value begin beg replValue realSize plen context repl beg end - BinaryOperation MemberReference repl getCodeRange == MemberReference MemberReference && BinaryOperation BinaryOperation Assignment Assignment + BinaryOperation MemberReference + BinaryOperation MemberReference - BinaryOperation MemberReference value bytes src value bytes dst length + MemberReference MemberReference plen cr2 CR_BROKEN == MemberReference MemberReference == MemberReference MemberReference MemberReference MemberReference = MemberReference MemberReference = + MemberReference MemberReference plen + MemberReference MemberReference replValue realSize - MemberReference MemberReference plen value realSize replValue realSize cr CR_VALID cr2 CR_7BIT cr CR_UNKNOWN cr cr2 value begin beg value begin beg value realSize beg	1
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType Assignment Node This TernaryExpression = MemberReference BinaryOperation MemberReference MemberReference == MemberReference Literal NilImplicitNode NIL null	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement final public RubyRegexp ReferenceType runtime ReferenceType name BasicType options MethodInvocation Ruby String int runtimeCache MemberReference Literal MemberReference MemberReference runtime 3 name options	0
MethodDeclaration FormalParameter SynchronizedStatement ReferenceType rubyThread MemberReference LocalVariableDeclaration IfStatement StatementExpression StatementExpression RubyThread rubyThread ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation MethodInvocation IRubyObject oldGroup MethodInvocation ! oldGroup isNil LocalVariableDeclaration StatementExpression rubyThread This MemberReference add rubyThread group ReferenceType VariableDeclarator MethodInvocation rubyThread Cast MemberReference remove ReferenceType MemberReference rubyThread oldGroup	1
MethodDeclaration Modifier copyDataToJavaArray FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement static public ReferenceType context ReferenceType rubyArray ReferenceType javaArray BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement ThreadContext RubyArray JavaArray int javaLength Cast Class targetType MethodInvocation int rubyLength MethodInvocation int i Literal BinaryOperation MemberReference StatementExpression BasicType MethodInvocation javaArray getComponentType rubyArray getLength 0 && BinaryOperation BinaryOperation ++ i MethodInvocation int javaArray MethodInvocation length < MemberReference MemberReference < MemberReference MemberReference javaArray MemberReference MethodInvocation setWithExceptionHandling getLongValue i rubyLength i javaLength i rubyArray MethodInvocation MemberReference entry MemberReference toJava i targetType	1
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression static ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Ruby RubyClass rb_cUDPSocket MethodInvocation rb_cUDPSocket MethodInvocation includeModule rb_cUDPSocket ClassReference defineAnnotatedMethods runtime MethodInvocation getObject runtime Literal MethodInvocation MemberReference defineClass runtime MethodInvocation Literal fastGetClass ReferenceType Literal MemberReference fastSetConstant runtime Literal fastGetClass Literal fastGetConstant rb_cUDPSocket "IPSocket" "Constants"	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean MemberReference scope	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier BasicType FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement private static int BasicType key BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation Assignment Assignment Assignment Assignment MethodInvocation Assignment Assignment MethodInvocation Assignment Assignment MethodInvocation Assignment Assignment Assignment Assignment BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MemberReference byte int schedule ArrayCreator int c MethodInvocation int d MethodInvocation int results ArrayCreator MemberReference MemberReference Literal Literal MemberReference PERM_OP MemberReference MemberReference = MemberReference MemberReference = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MemberReference Literal Literal MemberReference PERM_OP MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference Literal Literal MemberReference PERM_OP MemberReference MemberReference = MemberReference MemberReference = MemberReference MemberReference Literal Literal MemberReference PERM_OP MemberReference MemberReference = MemberReference MemberReference = MemberReference BinaryOperation = MemberReference Literal &= int s int t int j Literal VariableDeclaration BinaryOperation MemberReference IfStatement StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression schedule BasicType BinaryOperation MemberReference Literal MemberReference Literal BasicType Literal d c 4 results d ArraySelector results c ArraySelector results c MemberReference Literal Literal d MemberReference Literal Literal d c 1 results d ArraySelector results c ArraySelector results c d 8 results c ArraySelector results d ArraySelector results d c 1 results d ArraySelector results c ArraySelector results d | BinaryOperation BinaryOperation c 0 BasicType VariableDeclarator < MemberReference MemberReference ++ i MemberReference BlockStatement BlockStatement Assignment Assignment Assignment Assignment Assignment Assignment Assignment Assignment int * MemberReference Literal key 0 key 4 int 2 Literal Literal c - 2 - d - 2 - Literal Literal Literal Literal Literal Literal | BinaryOperation BinaryOperation >>> BinaryOperation Literal int i Literal i ArraySelector StatementExpression StatementExpression StatementExpression StatementExpression MemberReference Literal &= MemberReference Literal &= MemberReference BinaryOperation = MemberReference BinaryOperation = MemberReference BinaryOperation = MemberReference BinaryOperation = MemberReference BinaryOperation = MemberReference BinaryOperation = 2 0 1 0 1 0 1 0 1 | BinaryOperation BinaryOperation >>> BinaryOperation Literal & MemberReference Literal 4 0 MemberReference Assignment Assignment Assignment Assignment c d s | BinaryOperation MemberReference t | BinaryOperation MemberReference ArraySelector schedule & BinaryOperation Literal s | BinaryOperation BinaryOperation s | BinaryOperation BinaryOperation ArraySelector schedule & MemberReference Literal << BinaryOperation Literal & MemberReference Literal & MemberReference Literal 16 c - i MemberReference BinaryOperation = MemberReference BinaryOperation = MemberReference BinaryOperation = MemberReference BinaryOperation = | BinaryOperation MemberReference ArraySelector ArraySelector skb | BinaryOperation MemberReference ArraySelector ArraySelector skb MemberReference | BinaryOperation BinaryOperation - 1 >>> MemberReference Literal & MemberReference Literal << MemberReference Literal >>> MemberReference Literal MemberReference s - 1 & MemberReference Literal 16 d d c | BinaryOperation BinaryOperation d | BinaryOperation BinaryOperation c | BinaryOperation BinaryOperation d | BinaryOperation BinaryOperation | MemberReference MemberReference ArraySelector ArraySelector skb Literal BinaryOperation | MemberReference MemberReference ArraySelector ArraySelector skb Literal BinaryOperation ++ j << MemberReference Literal & MemberReference Literal s 16 t - 65536 s 4 s 28 ++ j d 255 >>> MemberReference Literal << MemberReference Literal >>> MemberReference Literal << MemberReference Literal >>> MemberReference Literal << MemberReference Literal >>> MemberReference Literal << MemberReference Literal ArraySelector ArraySelector skb ArraySelector ArraySelector skb Literal BinaryOperation 3 | BinaryOperation BinaryOperation ArraySelector ArraySelector skb ArraySelector ArraySelector skb Literal BinaryOperation 7 | BinaryOperation BinaryOperation t 16 s c 2 c 26 d 2 d 26 c 1 c 27 d 1 d 27 Literal BinaryOperation Literal BinaryOperation 2 | BinaryOperation BinaryOperation | BinaryOperation BinaryOperation & BinaryOperation Literal Literal BinaryOperation Literal BinaryOperation 6 & BinaryOperation Literal & BinaryOperation Literal & BinaryOperation Literal 0 & MemberReference Literal 1 | BinaryOperation BinaryOperation & BinaryOperation Literal & BinaryOperation Literal & BinaryOperation Literal & BinaryOperation Literal >>> MemberReference Literal 56 4 & MemberReference Literal 5 | BinaryOperation BinaryOperation >>> MemberReference Literal 63 >>> MemberReference Literal 15 >>> MemberReference Literal 48 c 63 & BinaryOperation Literal & BinaryOperation Literal >>> MemberReference Literal 15 >>> MemberReference Literal 48 >>> MemberReference Literal 1 >>> MemberReference Literal 6 c 22 d 63 & BinaryOperation Literal & BinaryOperation Literal d 15 d 21 d 22 >>> MemberReference Literal 3 >>> MemberReference Literal 60 c 13 c 14 c 20 c 21 >>> MemberReference Literal 3 >>> MemberReference Literal 60 c 6 c 7 d 7 d 8	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg0 MethodInvocation name Literal compat MemberReference IRubyObject MemberReference Literal CompatVersion RUBY1_9 arg0 'c'	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public RaiseException ReferenceType reason ReferenceType exitValue ReferenceType message ClassCreator ReferenceType IRubyObject String ReferenceType ClassCreator Literal RaiseException ReferenceType This MethodInvocation MemberReference MemberReference MemberReference true message reason exitValue	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType MemberReference createList Node node	0
MethodDeclaration Modifier BasicType indexOf FormalParameter FormalParameter LocalVariableDeclaration ForStatement ReturnStatement final public int BasicType offset BasicType value BasicType VariableDeclarator ForControl BlockStatement Literal long byte int off MethodInvocation VariableDeclaration BinaryOperation MemberReference IfStatement - 1 MemberReference index BasicType VariableDeclarator < MemberReference MemberReference ++ i BinaryOperation BlockStatement offset int i Literal i length == MemberReference MemberReference ReturnStatement 0 ArraySelector buffer value MemberReference BinaryOperation i + MemberReference MemberReference off i	1
MethodDeclaration Modifier ReferenceType ReturnStatement public MemberReference scope	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement private ReferenceType context ReferenceType value ReferenceType self ReferenceType block ReferenceType type BasicType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement BinaryOperation BlockStatement ThreadContext IRubyObject IRubyObject Block Block ReferenceType int requiredCount MethodInvocation boolean isRest BinaryOperation IRubyObject parameters == MemberReference Literal StatementExpression BinaryOperation BlockStatement BlockStatement instanceof MemberReference ReferenceType LocalVariableDeclaration StatementExpression Type args getRequiredArgsCount != MethodInvocation Literal value null Assignment && BinaryOperation BinaryOperation StatementExpression StatementExpression args ReferenceType VariableDeclarator MethodInvocation args getRestArg - 1 MemberReference MemberReference = instanceof MemberReference ReferenceType || BinaryOperation BinaryOperation Assignment Assignment Ruby runtime MethodInvocation args MemberReference MemberReference MemberReference MemberReference MemberReference prepare parameters IRubyObject value RubyArray && MemberReference BinaryOperation && MemberReference BinaryOperation MemberReference Cast = MemberReference ArrayCreator = context getRuntime context runtime self parameters block isRest > MemberReference Literal ! isRest > MemberReference Literal parameters ReferenceType MemberReference parameters ReferenceType ArrayInitializer requiredCount 0 requiredCount 1 RubyArray value IRubyObject MemberReference value	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement final public RubyFixnum ReferenceType runtime BasicType i BasicType value MethodInvocation Ruby int int runtimeCache MemberReference MemberReference MemberReference runtime i value	0
MethodDeclaration Modifier Annotation ReferenceType instance_eval FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public Deprecated IRubyObject ReferenceType context ReferenceType args ReferenceType block ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement MethodInvocation ThreadContext IRubyObject Block RubyModule klazz StatementExpression StatementExpression MemberReference MemberReference MemberReference MemberReference specificEval Assignment Assignment context klazz args block MemberReference MethodInvocation = MemberReference MethodInvocation = klazz context MethodInvocation getRuntime klazz	1
MethodDeclaration Modifier Annotation ReferenceType IfStatement public Override String MethodInvocation BlockStatement BlockStatement MemberReference StatementExpression ReturnStatement StatementExpression ReturnStatement scope Assignment MethodInvocation Assignment MethodInvocation MemberReference Literal = MethodInvocation Literal MemberReference Literal = MethodInvocation MethodInvocation specificArity false script getClassname 4 specificArity true script getClassname scope getRequiredArgs	0
MethodDeclaration Modifier ReferenceType newFixnum FormalParameter ReturnStatement public RubyFixnum BasicType newValue MethodInvocation long MethodInvocation MemberReference newFixnum getRuntime newValue	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement static public Deprecated IRubyObject ReferenceType recv MethodInvocation IRubyObject MethodInvocation recv getRuntime	1
MethodDeclaration Modifier Annotation ReferenceType to_a FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment BlockStatement MemberReference name ElementArrayValue optional Literal frame Literal ThreadContext IRubyObject IRubyObject ArgsFileData data MethodInvocation Ruby runtime MethodInvocation ! data MemberReference next_argv ReturnStatement instanceof MemberReference ReferenceType ReturnStatement RubyArray ary MethodInvocation IRubyObject line MemberReference MethodInvocation = StatementExpression ary Literal 1 true ArgsFileData MemberReference getDataFrom context getRuntime context TernaryExpression data currentFile RubyIO MethodInvocation runtime newArray line MemberReference MemberReference MemberReference MethodInvocation "to_a" recv MethodInvocation MethodInvocation MethodInvocation data.currentFile MemberReference Literal MemberReference callMethod context recv args ary MemberReference append runtime is1_9 runtime newEmptyArray runtime getNil context "to_a" args line	1
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType klazz ReferenceType name ReferenceType args ReferenceType block MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block method MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self klazz name args block	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter ReturnStatement static public int BasicType bytes BasicType p BasicType len MethodInvocation byte int int MemberReference MemberReference MemberReference MemberReference bytes p len ASCIIEncoding INSTANCE	0
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter ReturnStatement private static boolean BasicType original BasicType other BasicType result BinaryOperation long long long != BinaryOperation Literal & BinaryOperation MemberReference 0 & BinaryOperation BinaryOperation MemberReference MemberReference MemberReference MemberReference original ~ other original result	0
MethodDeclaration Modifier BasicType isSpace FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private boolean BasicType str BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference int byte c || BinaryOperation BinaryOperation ReturnStatement ArraySelector == MemberReference MemberReference < Assignment Literal Literal MemberReference str end MemberReference MemberReference = 0 false c c ArraySelector data MemberReference str	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby RubyClass MethodInvocation MemberReference MemberReference = runtime MemberReference MethodInvocation includeModule ClassReference defineAnnotatedMethods runtime Literal MethodInvocation MemberReference defineClass index ClassIndex TIME runtime ReferenceType runtime getObject RubyTime	0
MethodDeclaration Modifier ReferenceType set FormalParameter FormalParameter ReturnStatement public Object BasicType index ReferenceType element MethodInvocation int Object MemberReference MethodInvocation store index JavaUtil MethodInvocation MemberReference convertJavaToUsableRubyObject getRuntime element	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MethodInvocation ReferenceType MemberReference createList Node nextNode	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType arg4 ReferenceType arg5 ReferenceType arg6 MethodInvocation ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject IRubyObject body MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context arg0 arg1 arg2 arg3 arg4 arg5 arg6 type	1
MethodDeclaration Modifier ReferenceType substr19 FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration IfStatement final public IRubyObject ReferenceType runtime BasicType beg BasicType len BinaryOperation ReturnStatement BasicType VariableDeclarator BinaryOperation StatementExpression ReferenceType VariableDeclarator MethodInvocation BlockStatement BlockStatement Ruby int int < MemberReference Literal MethodInvocation int length MemberReference == MemberReference Literal Assignment Encoding enc MemberReference MemberReference singleByteOptimizable IfStatement IfStatement IfStatement IfStatement ReturnStatement ReturnStatement len 0 runtime getNil value realSize length 0 MemberReference Literal = value encoding enc BinaryOperation ReturnStatement BinaryOperation BlockStatement BinaryOperation StatementExpression BinaryOperation StatementExpression MethodInvocation MethodInvocation len 0 > MemberReference MemberReference MethodInvocation < MemberReference Literal StatementExpression IfStatement > BinaryOperation MemberReference Assignment <= MemberReference Literal Assignment MemberReference MemberReference MemberReference makeShared19 MemberReference MemberReference MemberReference MemberReference MemberReference beg length runtime getNil beg 0 Assignment BinaryOperation ReturnStatement + MemberReference MemberReference length MemberReference BinaryOperation = len 0 MemberReference Assignment = runtime beg len runtime enc len beg length MemberReference MemberReference += < MemberReference Literal MethodInvocation beg len len - MemberReference MemberReference len MemberReference Literal = beg length beg 0 runtime getNil length beg beg 0	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement ReturnStatement private Node ReferenceType receiver ReferenceType name ReferenceType iter ReferenceType VariableDeclarator BinaryOperation StatementExpression BinaryOperation ReturnStatement ClassCreator Node Token IterNode ISourcePosition position MethodInvocation == MemberReference Literal Assignment != MemberReference Literal ClassCreator ReferenceType MemberReference MemberReference Cast MemberReference MemberReference position receiver null MemberReference MemberReference = iter null ReferenceType MemberReference MemberReference Cast MemberReference position receiver ReferenceType MethodInvocation receiver name receiver NilImplicitNode NIL position receiver ReferenceType MethodInvocation iter String name getValue String name getValue	1
MethodDeclaration Modifier Annotation ReferenceType StatementExpression TryStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation IfStatement CatchClause This name Literal modify BinaryOperation BlockStatement CatchClauseParameter StatementExpression > MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ArrayIndexOutOfBoundsException e MethodInvocation realLength 1 ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement concurrentModification IRubyObject vals MemberReference int p MemberReference int len MemberReference VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression StatementExpression values begin realLength BasicType VariableDeclarator < MemberReference BinaryOperation ++ i ReferenceType VariableDeclarator Assignment Assignment int i Literal i >> MemberReference Literal IRubyObject tmp MemberReference MemberReference MemberReference = MemberReference MemberReference = 0 len 1 ArraySelector vals ArraySelector vals ArraySelector vals ArraySelector vals tmp BinaryOperation BinaryOperation BinaryOperation BinaryOperation + MemberReference MemberReference + MemberReference MemberReference - BinaryOperation Literal - BinaryOperation Literal p i p i - BinaryOperation MemberReference 1 - BinaryOperation MemberReference 1 + MemberReference MemberReference i + MemberReference MemberReference i p len p len	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference ListNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement private Object ReferenceType internedName ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement Literal String VariableTableEntry table MemberReference Object readValue VariableDeclaration BinaryOperation Assignment IfStatement null vTable ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = BinaryOperation BlockStatement VariableTableEntry e MemberReference e null e e next == MemberReference MemberReference IfStatement ReturnStatement ArraySelector table internedName e name BinaryOperation ReturnStatement MethodInvocation BinaryOperation != Assignment Literal MemberReference MemberReference & MethodInvocation BinaryOperation MemberReference MemberReference = null readValue e internedName hashCode - MemberReference Literal readValue e value table length 1	1
MethodDeclaration Modifier ReferenceType iterator ReturnStatement public Iterator MethodInvocation	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast arg_blk_pass support MethodInvocation Cast newSplatNode ReferenceType MemberReference Cast getPosition ReferenceType MemberReference BlockPassNode ArraySelector yyVals ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation Token ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference 0 yyTop + Literal MemberReference - 1 yyTop - 2 yyTop	1
MethodDeclaration Modifier Annotation visit FormalParameter FormalParameter StatementExpression public Override ReferenceType key ReferenceType value MethodInvocation IRubyObject IRubyObject result MemberReference append value	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType receiver MethodInvocation name Literal meta Literal compat MemberReference IRubyObject receiver MethodInvocation getRuntime true CompatVersion RUBY1_8 MethodInvocation newBoolean receiver MethodInvocation MethodInvocation getRuntime getThreadService	0
MethodDeclaration Modifier ReferenceType searchInternalModuleVariable FormalParameter ForStatement ReturnStatement public IRubyObject Modifier ReferenceType name ForControl BlockStatement Literal final String VariableDeclaration BinaryOperation Assignment LocalVariableDeclaration IfStatement null ReferenceType VariableDeclarator != MemberReference Literal MemberReference MethodInvocation = ReferenceType VariableDeclarator BinaryOperation ReturnStatement RubyModule module This module null module module getSuperClass IRubyObject value Cast != MemberReference Literal MemberReference ReferenceType MethodInvocation value null value IRubyObject module MemberReference getInternalVariable name	1
MethodDeclaration Modifier Annotation ReferenceType abs FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation BlockStatement This name Literal ThreadContext MethodInvocation MemberReference Literal MethodInvocation callMethod ReturnStatement isTrue context "<" RubyFixnum MethodInvocation zero MethodInvocation getRuntime MemberReference Literal callMethod context "-@"	0
MethodDeclaration Modifier ReferenceType getReturnType ReturnStatement final public Type MemberReference returnType	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType self ReferenceType VariableDeclarator ReferenceType VariableDeclarator StatementExpression CatchClause CatchClause CatchClause CatchClause MethodInvocation frame Literal ThreadContext IRubyObject RubyIO io Cast Ruby runtime MethodInvocation MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement JavaUtil MethodInvocation MethodInvocation convertJavaToUsableRubyObject true ReferenceType MemberReference context getRuntime io MethodInvocation getOpenFile PipeException pe MethodInvocation IOException ex MethodInvocation BadDescriptorException ex MethodInvocation InvalidValueException e MethodInvocation context getRuntime io RubyIO self MethodInvocation checkWritable runtime newErrnoEPIPEError runtime MemberReference newIOErrorFromException runtime newErrnoEBADFError runtime newErrnoEINVALError context getRuntime ex	1
MethodDeclaration Modifier ReferenceType getMethods ReturnStatement public Map TypeArgument TypeArgument MemberReference ReferenceType ReferenceType methods String DynamicMethod	0
MethodDeclaration Modifier BasicType getSize ReturnStatement final public int MethodInvocation getNativeSize	1
MethodDeclaration Modifier Annotation ReferenceType delete FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType arg ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal compat MemberReference ThreadContext IRubyObject RubyString str MethodInvocation str MemberReference MemberReference str CompatVersion RUBY1_8 MethodInvocation context arg context getRuntime	0
MethodDeclaration Modifier ReferenceType pretty FormalParameter LocalVariableDeclaration ForStatement ReturnStatement private String ReferenceType list ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation List StringBuffer prettyOut ClassCreator VariableDeclaration MethodInvocation StatementExpression prettyOut toString ReferenceType ReferenceType VariableDeclarator iter hasNext MethodInvocation StringBuffer Iterator iter MethodInvocation prettyOut MethodInvocation append list iterator iter MethodInvocation next toString	1
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context BasicType value MethodInvocation ThreadContext long context MethodInvocation getRuntime MethodInvocation newFloat Double MemberReference value	1
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier BasicType indexOf FormalParameter FormalParameter FormalParameter ReturnStatement final public int BasicType offset BasicType value BasicType Cast long byte int BasicType MethodInvocation int MemberReference MemberReference MemberReference indexOf address value	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement private static boolean BasicType value BinaryOperation long && BinaryOperation BinaryOperation >= MemberReference MemberReference <= MemberReference Literal value Short MIN_VALUE value 0xFFFF	1
MethodDeclaration Modifier ReferenceType ReturnStatement public Collection TypeArgument MethodInvocation ReferenceType MethodInvocation String keySet	0
MethodDeclaration Modifier BasicType intValue FormalParameter FormalParameter IfStatement ThrowStatement final public int ReferenceType context ReferenceType parameter BinaryOperation BlockStatement IfStatement MethodInvocation ThreadContext IRubyObject instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement IfStatement context MethodInvocation getRuntime parameter Pointer MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement MethodInvocation BlockStatement Literal newArgumentError Cast getAddress parameter Struct ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement parameter isNil ReturnStatement "Cannot convert pointer to integer" ReferenceType MemberReference IRubyObject memory Cast instanceof MemberReference ReferenceType ReturnStatement BinaryOperation BlockStatement Literal Pointer parameter ReferenceType MemberReference memory Pointer MethodInvocation || BinaryOperation MethodInvocation ReturnStatement 0 Struct parameter Cast getAddress == MemberReference Literal memory isNil Literal ReferenceType MemberReference memory null 0 Pointer memory	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter IfStatement ReturnStatement private static boolean ReferenceType ReferenceType BinaryOperation BlockStatement Literal Throwable IRubyObject instanceof MemberReference ReferenceType LocalVariableDeclaration LocalVariableDeclaration IfStatement false RubyClass ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement RubyClass rubyClass Cast JavaClass javaClass Cast != MemberReference Literal LocalVariableDeclaration IfStatement ReferenceType MemberReference ReferenceType MethodInvocation javaClass null ReferenceType VariableDeclarator MethodInvocation BlockStatement RubyClass JavaClass rubyClass Literal fastGetInstanceVariable Class cls MethodInvocation cls MemberReference isInstance ReturnStatement "@java_class" javaClass javaClass Literal true	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject RuntimeHelpers MemberReference MemberReference Literal MemberReference MemberReference MemberReference invoke context self arg0 arg1 arg2	0
MethodDeclaration Modifier FormalParameter StatementExpression final public BasicType family MethodInvocation int Cast set BasicType MemberReference short family	1
MethodDeclaration Modifier FormalParameter StatementExpression private static ReferenceType rubySing MethodInvocation RubyModule rubySing Literal ClassCreator addMethod "[]" ReferenceType MemberReference MemberReference MethodDeclaration MethodDeclaration MethodDeclaration JavaMethod ReferenceType rubySing Visibility PUBLIC Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg ReferenceType VariableDeclarator BasicType VariableDeclarator MethodInvocation public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Class javaClass MethodInvocation int size MethodInvocation MethodInvocation MethodInvocation javaToRuby ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject Class javaClass MethodInvocation int x MethodInvocation int y MethodInvocation MethodInvocation MethodInvocation javaToRuby ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject Class javaClass MethodInvocation int x MethodInvocation int y MethodInvocation int z MethodInvocation MethodInvocation MethodInvocation javaToRuby MemberReference RubyFixnum MethodInvocation fix2int context getRuntime Array MemberReference MemberReference newInstance MemberReference RubyFixnum MethodInvocation fix2int RubyFixnum MethodInvocation fix2int context getRuntime Array MemberReference ArrayCreator newInstance MemberReference RubyFixnum MethodInvocation fix2int RubyFixnum MethodInvocation fix2int RubyFixnum MethodInvocation fix2int context getRuntime Array MemberReference ArrayCreator newInstance self arg convertToInteger javaClass size self arg0 convertToInteger arg1 convertToInteger javaClass BasicType ArrayInitializer self arg0 convertToInteger arg1 convertToInteger arg2 convertToInteger javaClass BasicType ArrayInitializer int MemberReference MemberReference int MemberReference MemberReference MemberReference x y x y z	0
MethodDeclaration Modifier StatementExpression public Assignment MemberReference MemberReference = status Status	0
MethodDeclaration Modifier write FormalParameter FormalParameter FormalParameter StatementExpression protected static ReferenceType context ReferenceType ReferenceType MethodInvocation ThreadContext IRubyObject ByteList MemberReference Literal MethodInvocation callMethod context RubyString MethodInvocation MemberReference context getRuntime	0
MethodDeclaration Modifier ReferenceType to_i FormalParameter ReturnStatement private final RubyFixnum ReferenceType runtime MethodInvocation Ruby runtime MemberReference newFixnum id	1
MethodDeclaration * */ Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType end ReferenceType block MethodInvocation name Literal frame Literal compat MemberReference ThreadContext IRubyObject Block MemberReference MemberReference Literal MemberReference true CompatVersion RUBY1_8 context end false block	0
MethodDeclaration Modifier Annotation assign FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SwitchStatement ForStatement IfStatement public Override ReferenceType runtime ReferenceType context ReferenceType self ReferenceType values ReferenceType block BasicType VariableDeclarator MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase ForControl BlockStatement BinaryOperation BlockStatement Ruby ThreadContext IRubyObject IRubyObject Block int valueLength TernaryExpression valueLength Literal StatementExpression ReturnStatement Literal StatementExpression ReturnStatement Literal StatementExpression ReturnStatement VariableDeclaration BinaryOperation MemberReference StatementExpression < MemberReference MemberReference StatementExpression BinaryOperation Literal MemberReference 0 MethodInvocation 1 MethodInvocation 2 MethodInvocation BasicType VariableDeclarator && BinaryOperation BinaryOperation ++ i MethodInvocation valueLength preLength MethodInvocation == MemberReference Literal 0 values length MemberReference MemberReference MemberReference MemberReference assign MemberReference MemberReference MemberReference MemberReference MemberReference assign MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference assign int i Literal < MemberReference MemberReference < MemberReference MemberReference pre MethodInvocation MemberReference get MemberReference MemberReference MemberReference MemberReference MemberReference values null runtime context self block runtime context self ArraySelector values block runtime context self ArraySelector values ArraySelector values block 0 i preLength i valueLength MemberReference MemberReference MemberReference MemberReference MemberReference Literal assign i runtime context self block valueLength Literal Literal Literal runtime context self ArraySelector values block false 0 0 1 MemberReference i	1
MethodDeclaration Modifier StatementExpression public MethodInvocation loadSelf	0
MethodDeclaration Modifier ReferenceType getOperatorCallNode FormalParameter FormalParameter FormalParameter FormalParameter IfStatement StatementExpression StatementExpression ReturnStatement public Node ReferenceType ReferenceType operator ReferenceType ReferenceType BinaryOperation BlockStatement MethodInvocation MethodInvocation MethodInvocation Node String Node ISourcePosition != MemberReference Literal StatementExpression StatementExpression MemberReference checkExpression MemberReference checkExpression MethodInvocation MemberReference MemberReference MemberReference null Assignment Assignment getPosition operator MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier ReferenceType op_equalCommon FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private IRubyObject ReferenceType context ReferenceType other ReferenceType VariableDeclarator MethodInvocation ReturnStatement TernaryExpression ThreadContext IRubyObject Ruby runtime MethodInvocation ! other Literal respondsTo MethodInvocation MethodInvocation MethodInvocation MethodInvocation context getRuntime "to_str" runtime getFalse other MethodInvocation MemberReference Literal This callMethod runtime getTrue runtime getFalse isTrue context "=="	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration LocalVariableDeclaration WhileStatement private static int ReferenceType runtime BasicType to BasicType toP BasicType bytes BasicType p BasicType end ReferenceType str ReferenceType mode BinaryOperation StatementExpression BasicType VariableDeclarator VariableDeclarator BasicType VariableDeclarator Literal BlockStatement Ruby byte int byte int int ByteList ErrorMode || BinaryOperation BinaryOperation MethodInvocation boolean metaPrefix Literal ctrlPrefix Literal int code Literal true IfStatement SwitchStatement IfStatement IfStatement IfStatement StatementExpression ReturnStatement == MemberReference MemberReference != MemberReference Cast MemberReference MemberReference Literal MemberReference raisePreprocessError false false 0 BinaryOperation StatementExpression MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase BinaryOperation StatementExpression MemberReference StatementExpression MemberReference StatementExpression Assignment MemberReference p end ArraySelector bytes BasicType Literal runtime str "too short escaped multibyte character" mode == MemberReference MemberReference MethodInvocation ArraySelector bytes Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression BreakStatement Literal Literal Literal Literal Literal Literal Literal Literal StatementExpression LocalVariableDeclaration StatementExpression StatementExpression BreakStatement Literal LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement StatementExpression BreakStatement Literal IfStatement StatementExpression IfStatement StatementExpression Literal IfStatement Literal IfStatement StatementExpression IfStatement StatementExpression StatementExpression || BinaryOperation BinaryOperation MethodInvocation ctrlPrefix Assignment metaPrefix Assignment MemberReference Cast = p MemberReference byte '\\' p end MemberReference MemberReference Literal MemberReference raisePreprocessError MemberReference '\\' Assignment 'n' Assignment 't' Assignment 'r' Assignment 'f' Assignment 'v' Assignment 'a' Assignment 'e' Assignment '0' '1' '2' '3' '4' '5' '6' '7' MemberReference BasicType VariableDeclarator Assignment Assignment 'x' BasicType VariableDeclarator Assignment BasicType VariableDeclarator BinaryOperation StatementExpression Assignment 'M' MemberReference StatementExpression Assignment BinaryOperation BlockStatement MethodInvocation 'C' BinaryOperation StatementExpression 'c' MemberReference StatementExpression Assignment BinaryOperation BlockStatement MethodInvocation MethodInvocation < MemberReference Literal > MemberReference Literal MemberReference MemberReference Literal MemberReference raisePreprocessError MemberReference Literal &= MemberReference Literal |= ArraySelector to BasicType MemberReference ++ p runtime str "too short escape sequence" mode ++ p MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal = MemberReference Literal = -- p int olen TernaryExpression MemberReference MethodInvocation = MemberReference MethodInvocation += int hlen TernaryExpression MemberReference MethodInvocation = int len MethodInvocation < MemberReference Literal MethodInvocation MemberReference MemberReference += metaPrefix MethodInvocation MemberReference Literal = && BinaryOperation BinaryOperation IfStatement MemberReference MemberReference Literal MemberReference raisePreprocessError || BinaryOperation BinaryOperation MethodInvocation ctrlPrefix MethodInvocation MemberReference Literal = && BinaryOperation BinaryOperation IfStatement MemberReference MemberReference Literal MemberReference raisePreprocessError MemberReference MemberReference Literal MemberReference raisePreprocessError code 0 code 0xff runtime str "invalid escape mode code code 0x80 MemberReference byte code code '\\' code '\n' code '\t' code '\r' code '\f' code '\013' code '\007' code '\033' BinaryOperation BinaryOperation Literal code StringSupport MemberReference MemberReference MemberReference p StringSupport MemberReference MemberReference MemberReference BinaryOperation BinaryOperation Literal code StringSupport MemberReference MemberReference MemberReference StringSupport MemberReference MemberReference MemberReference len 1 MemberReference MemberReference Literal MemberReference raisePreprocessError p len MemberReference MemberReference Literal MemberReference raisePreprocessError metaPrefix true && BinaryOperation BinaryOperation == BinaryOperation Literal BinaryOperation BlockStatement BlockStatement runtime str "too short meta escape" mode == MemberReference MemberReference != MemberReference Cast MemberReference MemberReference Literal MemberReference raisePreprocessError MemberReference MemberReference Literal MemberReference raisePreprocessError ctrlPrefix true < MemberReference MemberReference == BinaryOperation Literal BinaryOperation BlockStatement BlockStatement runtime str "too short escape" mode runtime str "unexpected escape sequence" mode toP < MemberReference BinaryOperation - MemberReference MemberReference 3 bytes p olen bytes p olen < MemberReference BinaryOperation - MemberReference MemberReference 2 bytes p hlen bytes p hlen runtime str "invalid escape" mode runtime str "duplicate meta escape" mode < BinaryOperation MemberReference == MemberReference Cast & MemberReference Literal 0 == MemberReference Cast StatementExpression ContinueStatement StatementExpression BreakStatement p end ArraySelector bytes BasicType Literal runtime str "too short escape" mode runtime str "duplicate escape" mode p end & MemberReference Literal 0 == MemberReference Cast StatementExpression ContinueStatement StatementExpression BreakStatement end + MemberReference Literal end p end + MemberReference Literal end p + MemberReference Literal end ArraySelector bytes BasicType Literal ArraySelector bytes 0x80 ArraySelector bytes BasicType Literal MemberReference Assignment MemberReference byte '-' ArraySelector bytes 0x80 ArraySelector bytes BasicType Literal MemberReference Assignment p 3 p 2 p 1 MemberReference byte '-' MemberReference MemberReference byte '\\' ++ p MemberReference BinaryOperation = ++ p MemberReference MemberReference byte '\\' ++ p MemberReference BinaryOperation = ++ p p p code & MemberReference Literal p p code & MemberReference Literal ArraySelector bytes 0xff ArraySelector bytes 0xff MemberReference MemberReference ++ p ++ p	1
MethodDeclaration Modifier Annotation ReferenceType op_aset FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType index ReferenceType value ReferenceType VariableDeclarator MethodInvocation MemberReference name Literal backtrace Literal ThreadContext IRubyObject IRubyObject Object converted MethodInvocation MethodInvocation getJavaArray value "[]=" true value MethodInvocation toJava Cast MemberReference setWithExceptionHandling MethodInvocation getJavaArray BasicType MethodInvocation converted getComponentType int index MethodInvocation convertToInteger getLongValue	1
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyModule MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration StatementExpression IfStatement TryStatement public Override IRubyObject ReferenceType runtime ReferenceType context ReferenceType self ReferenceType BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement ReturnStatement StatementExpression Ruby ThreadContext IRubyObject Block == MemberReference Literal StatementExpression MethodInvocation context MemberReference == MethodInvocation Literal StatementExpression MethodInvocation MethodInvocation scope null Assignment scope scope getModule null MethodInvocation MemberReference MemberReference MemberReference MemberReference context MemberReference MethodInvocation = MethodInvocation runtime context self scope DynamicScope MemberReference runtime getObject staticScope	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter RaiseException LocalVariableDeclaration ForStatement ReturnStatement protected LoadServiceResource ReferenceType state ReferenceType baseName ReferenceType suffixType ReferenceType VariableDeclarator EnhancedForControl BlockStatement MemberReference String SuffixType LoadServiceResource foundResource Literal VariableDeclaration MethodInvocation LocalVariableDeclaration TryStatement foundResource null ReferenceType VariableDeclarator suffixType ReferenceType VariableDeclarator LocalVariableDeclaration StatementExpression IfStatement CatchClause CatchClause String suffix String namePlusSuffix BinaryOperation ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement CatchClauseParameter CatchClauseParameter + MemberReference MemberReference JRubyFile file MethodInvocation Literal MethodInvocation debugLogTry && BinaryOperation MethodInvocation LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression BreakStatement IllegalArgumentException SecurityException secEx baseName suffix JRubyFile MethodInvocation MethodInvocation create file toString && MethodInvocation MethodInvocation file canRead BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement Assignment MethodInvocation Assignment runtime getCurrentDirectory RubyFile MethodInvocation MemberReference expandUserPath file isFile file isAbsolute boolean absolute Literal String s MemberReference ! namePlusSuffix Literal startsWith StatementExpression MemberReference ClassCreator = MemberReference debugLogFound MemberReference MemberReference = runtime getCurrentContext namePlusSuffix true namePlusSuffix "./" Assignment foundResource ReferenceType MemberReference MemberReference MemberReference foundResource state loadName namePlusSuffix MemberReference BinaryOperation = LoadServiceResource file s absolute s + Literal MemberReference "./" s	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier ReferenceType defineClassUnder FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement LocalVariableDeclaration ReturnStatement public RubyClass ReferenceType pkg ReferenceType name ReferenceType superClazz BinaryOperation BlockStatement ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator Cast RubyModule String RubyClass != MemberReference Literal ReturnStatement IRubyObject packageName == Assignment Literal ReturnStatement Ruby runtime MethodInvocation ReferenceType MethodInvocation superClazz null Literal MemberReference MethodInvocation = null Literal pkg getRuntime RubyClass MethodInvocation MethodInvocation get_proxy_class null packageName pkg MethodInvocation getInstanceVariables null runtime MethodInvocation getJavaSupport JavaClass MemberReference BinaryOperation forNameVerbose Literal fastGetInstanceVariable runtime + MethodInvocation MemberReference packageName asJavaString name	1
MethodDeclaration Modifier rescue FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression LocalVariableDeclaration StatementExpression TryStatement StatementExpression StatementExpression StatementExpression IfStatement StatementExpression public ReferenceType ReferenceType exception ReferenceType ReferenceType ret ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator Assignment ReferenceType VariableDeclarator Assignment BasicType VariableDeclarator Assignment StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression IfStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement BlockStatement MethodInvocation BranchCallback Class BranchCallback Class String mname MethodInvocation SkinnyMethodAdapter mv ClassCreator SkinnyMethodAdapter old_method Literal SkinnyMethodAdapter var_old_method Literal SkinnyMethodAdapter inv_old_method Literal Label afterMethodBody ClassCreator Label catchRetry ClassCreator Label catchRaised ClassCreator Label catchJumps ClassCreator Label exitRescue ClassCreator boolean MemberReference MemberReference Literal = Label oldLoopLabels MemberReference MemberReference Literal = int oldArgCount MemberReference MemberReference Literal = Assignment Assignment Assignment Assignment MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment Assignment MethodInvocation MethodInvocation Assignment Assignment method MemberReference aload loadSelf instanceof This ReferenceType StatementExpression StatementExpression method MethodInvocation MemberReference MethodInvocation invokestatic ReferenceType MethodInvocation null null null ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType true currentLoopLabels currentLoopLabels null 0 MemberReference This = MemberReference MethodInvocation = MemberReference MethodInvocation = This MemberReference = MethodInvocation getVariableCompiler MethodInvocation getInvocationCompiler mv start mv MemberReference aload mv MethodInvocation Literal MethodInvocation invokevirtual mv MethodInvocation astore Literal MethodInvocation mv MethodInvocation astore mv MethodInvocation Literal MethodInvocation invokevirtual mv MethodInvocation astore mv MemberReference aload mv MethodInvocation Literal MethodInvocation invokevirtual mv MethodInvocation astore > MethodInvocation Literal StatementExpression StatementExpression StatementExpression Label beforeBody ClassCreator Label afterBody ClassCreator Label catchBlock ClassCreator mv MemberReference MemberReference MemberReference MethodInvocation trycatch mv MemberReference label This branch mv MemberReference label mv MemberReference go_to mv MemberReference label mv MethodInvocation astore This branch mv MemberReference label mv MemberReference go_to mv MemberReference MemberReference MemberReference MethodInvocation trycatch mv MemberReference label mv pop mv MemberReference go_to mv MemberReference MemberReference MemberReference MethodInvocation trycatch mv MemberReference label mv athrow mv MemberReference MemberReference MemberReference MethodInvocation trycatch mv MemberReference label method MethodInvocation aload Literal MethodInvocation method pop mv athrow mv MemberReference label method MethodInvocation aload Literal MethodInvocation method pop mv areturn mv end MemberReference MemberReference = This MemberReference = MethodInvocation getVariableCompiler MethodInvocation getInvocationCompiler MemberReference MemberReference = MemberReference MemberReference = MethodInvocation MethodInvocation script getClassname mname MemberReference BinaryOperation ClassReference ClassReference ClassReference sig SkinnyMethodAdapter script MethodInvocation getClassVisitor Label Label Label Label Label old_method MemberReference var_old_method MethodInvocation getVariableCompiler inv_old_method MethodInvocation getInvocationCompiler MemberReference mv MemberReference setMethodAdapter MemberReference setMethodAdapter THREADCONTEXT_INDEX ClassReference p "getRuntime" ClassReference sig ClassReference sig getPreviousExceptionIndex ClassReference p ClassReference sig THREADCONTEXT_INDEX ClassReference p "getCurrentScope" ClassReference sig getDynamicScopeIndex scope getNumberOfVariables 4 MethodInvocation MethodInvocation MethodInvocation ReferenceType ReferenceType ReferenceType beforeBody afterBody catchBlock MemberReference p beforeBody afterBody exitRescue catchBlock afterMethodBody exitRescue catchBlock afterMethodBody catchRetry ClassReference p catchRetry beforeBody beforeBody afterMethodBody catchRaised ClassReference p catchRaised beforeBody afterMethodBody catchJumps ClassReference p catchJumps getPreviousExceptionIndex "setErrorInfo" ClassReference ClassReference sig exitRescue getPreviousExceptionIndex "setErrorInfo" ClassReference ClassReference sig MemberReference old_method MemberReference setMethodAdapter MemberReference setMethodAdapter currentLoopLabels oldLoopLabels oldArgCount pushNull ret + BinaryOperation Literal ReferenceType ReferenceType ReferenceType BinaryOperation MemberReference MethodInvocation Literal Literal visitMethod method method mv mv ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType mv MethodInvocation aload mv MethodInvocation Literal MethodInvocation invokevirtual mv MethodInvocation astore Label Label Label exception JumpException ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType method var_old_method inv_old_method + Literal MethodInvocation ";" ThreadContext IRubyObject Block | BinaryOperation MemberReference mname MemberReference BinaryOperation ClassReference ClassReference ClassReference sig null null ThreadContext Ruby IRubyObject Ruby IRubyObject ThreadContext DynamicScope getDynamicScopeIndex ClassReference p "getValues" ClassReference sig getVarsArrayIndex RaiseException JumpException IRubyObject IRubyObject IRubyObject IRubyObject "L" script getClassname | MemberReference MemberReference ACC_STATIC ret + BinaryOperation Literal ReferenceType ReferenceType ReferenceType ReferenceType ReferenceType ACC_PUBLIC ACC_SYNTHETIC + Literal MethodInvocation ";" ThreadContext IRubyObject Block DynamicScope IRubyObject "L" script getClassname	1
MethodDeclaration BasicType isPublic ReturnStatement boolean BinaryOperation == MemberReference MemberReference visibility Visibility PUBLIC	0
MethodDeclaration Modifier ReferenceType dup TryStatement public DynamicMethod LocalVariableDeclaration ReturnStatement CatchClause ReferenceType VariableDeclarator MemberReference CatchClauseParameter ReturnStatement JavaMethod msm Cast msm CloneNotSupportedException cnse Literal ReferenceType MethodInvocation null JavaMethod clone	1
MethodDeclaration Modifier ReferenceType cycleCommon FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement WhileStatement ReturnStatement private static IRubyObject ReferenceType context ReferenceType self BasicType nv Modifier ReferenceType block Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator MethodInvocation BasicType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject long final Block final Ruby runtime MethodInvocation final RubyArray result MethodInvocation MemberReference MemberReference MemberReference ClassCreator callEach int len MethodInvocation == MemberReference Literal MethodInvocation || BinaryOperation BinaryOperation ForStatement runtime getNil context getRuntime runtime newArray runtime context self ReferenceType MethodDeclaration result size len 0 runtime getNil < MemberReference Literal < Literal MemberReference ForControl BlockStatement BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration SynchronizedStatement StatementExpression ReturnStatement nv 0 0 -- nv VariableDeclaration BinaryOperation MemberReference StatementExpression public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MemberReference StatementExpression MethodInvocation MethodInvocation BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation result MethodInvocation block MemberReference MemberReference yield runtime getNil int i Literal i len block MemberReference MethodInvocation yield MemberReference MemberReference checkArgs result MemberReference append ctx larg 0 context result MemberReference eltInternal runtime largs larg i	1
MethodDeclaration Modifier Annotation ReferenceType s_readline FormalParameter FormalParameter IOException ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType prompt MethodInvocation name Literal module Literal visibility MemberReference IRubyObject IRubyObject MemberReference MemberReference MethodInvocation s_readline "readline" true Visibility PRIVATE recv prompt recv MethodInvocation getRuntime getFalse	1
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast MemberReference assignable ReferenceType MemberReference NilImplicitNode NIL Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier exit FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement IfStatement private static ReferenceType runtime ReferenceType args BasicType MethodInvocation BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference BlockStatement BlockStatement Ruby IRubyObject boolean runtime Literal secure int status Literal > MemberReference Literal LocalVariableDeclaration IfStatement ThrowStatement ThrowStatement 4 1 args length 0 ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement ClassCreator MethodInvocation RubyObject argument Cast instanceof MemberReference ReferenceType StatementExpression StatementExpression ReferenceType MemberReference Literal runtime MemberReference ReferenceType MemberReference argument RubyFixnum Assignment Assignment MainExitException status true status RubyObject ArraySelector args MemberReference MethodInvocation = MemberReference TernaryExpression = Literal status RubyNumeric MemberReference fix2int status MethodInvocation Literal Literal 0 argument argument 1 0	0
MethodDeclaration Modifier ReferenceType new_opElementAsgnNode FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public Node ReferenceType position ReferenceType ReferenceType ReferenceType argsNode ReferenceType BinaryOperation BlockStatement ClassCreator ISourcePosition Node String Node Node instanceof MemberReference ReferenceType LocalVariableDeclaration IfStatement ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference argsNode ArrayNode ReferenceType VariableDeclarator BinaryOperation BlockStatement OpElementAsgnNode position argsNode ArrayNode array Cast == MethodInvocation Literal IfStatement ReferenceType MemberReference array size 1 MethodInvocation BlockStatement IfStatement ArrayNode argsNode Literal equals ReturnStatement MethodInvocation BlockStatement BlockStatement "||" ClassCreator Literal equals ReturnStatement ReturnStatement ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference "&&" ClassCreator ClassCreator position array ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference position array position array	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression public ReferenceType name ReferenceType ReferenceType MethodInvocation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation String BranchCallback BranchCallback method MemberReference ldc method MethodInvocation Literal MethodInvocation invokevirtual Label ClassCreator Label ClassCreator method MemberReference This branch method MemberReference go_to method MemberReference label This branch method MemberReference label name ClassReference p ClassReference MethodInvocation sig ReferenceType ReferenceType ReferenceType BasicType ClassReference params Label Label RubyModule boolean ReferenceType String	0
MethodDeclaration Modifier BasicType ReturnStatement public int MemberReference	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression ReturnStatement static final RubyMatchData ReferenceType context ReferenceType str ReferenceType scope ReferenceType matcher ReferenceType pattern ReferenceType VariableDeclarator Assignment MemberReference ThreadContext RubyString DynamicScope Matcher Regex RubyMatchData match MethodInvocation MemberReference Literal = match MemberReference MemberReference MemberReference MemberReference MemberReference match false context str scope matcher pattern	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression IfStatement public ReferenceType node ReferenceType context BasicType expr ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference StatementExpression Node BodyCompiler boolean SplatNode splatNode Cast MethodInvocation MemberReference Literal compile context ! expr MethodInvocation ReferenceType MemberReference splatNode getValue context true context consumeCurrentValue SplatNode node	1
MethodDeclaration install FormalParameter IfStatement Modifier ReferenceType proxy BinaryOperation BlockStatement final RubyModule == MethodInvocation Literal IfStatement TryStatement proxy MethodInvocation getConstantAt null MethodInvocation BlockStatement StatementExpression CatchClause field getName ! Ruby isSecurityRestricted TryStatement MethodInvocation CatchClauseParameter ThrowStatement StatementExpression CatchClause proxy MethodInvocation MethodInvocation setConstant IllegalAccessException iae MethodInvocation MethodInvocation CatchClauseParameter field getName JavaUtil MethodInvocation MethodInvocation convertJavaToUsableRubyObject proxy MethodInvocation getRuntime field Literal setAccessible SecurityException e proxy getRuntime field Literal get BinaryOperation newTypeError true null + Literal MethodInvocation "illegal access on setting variable: " iae getMessage	1
MethodDeclaration Modifier Annotation BasicType ReturnStatement public Override boolean MethodInvocation MethodInvocation finished	0
MethodDeclaration Modifier StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation invokeUtilityMethod method athrow ClassReference ClassReference ClassReference sig JumpException ReferenceType ReferenceType ReferenceType IRubyObject ThreadContext	0
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression static public ReferenceType runtime ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Ruby self ClassCreator runtime MethodInvocation runtime Literal MemberReference self MethodInvocation getMetaClass ReferenceType MemberReference MemberReference self ClassReference defineAnnotatedMethods runtime self ReferenceType	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement public Operand ReferenceType ReferenceType s MethodInvocation BeginNode IR_Scope MethodInvocation MemberReference build getBodyNode s	0
MethodDeclaration Modifier Annotation ReferenceType childNodes ReturnStatement public Override List TypeArgument MethodInvocation ReferenceType Node MethodInvocation MethodInvocation MemberReference createList Node getBodyNode	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration ReturnStatement private RaiseException ReferenceType message ReferenceType VariableDeclarator ClassCreator String RubyException exception Cast ReferenceType MemberReference ReferenceType MethodInvocation RaiseException exception RubyException MethodInvocation MethodInvocation getRuntime Literal getClass MethodInvocation ArrayCreator MemberReference newInstance MethodInvocation getRuntime ReferenceType ArrayInitializer Block getCurrentContext IRubyObject MethodInvocation MethodInvocation getRuntime MemberReference newString message	0
MethodDeclaration Modifier ReferenceType group FormalParameter ReturnStatement public IRubyObject BasicType n MethodInvocation long RubyRegexp Cast This nth_match BasicType MemberReference int n	0
MethodDeclaration Modifier ReferenceType preparePattern FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration IfStatement IfStatement ReturnStatement static Regex ReferenceType runtime ReferenceType pattern ReferenceType str BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation BlockStatement BinaryOperation ReturnStatement MethodInvocation Ruby Regex RubyString == MethodInvocation MemberReference ThrowStatement Encoding enc MethodInvocation ! enc isAsciiCompatible IfStatement == MemberReference MethodInvocation MemberReference MemberReference Cast MemberReference MethodInvocation MemberReference getPreprocessedRegexpFromCache str scanForCodeRange StringSupport CR_BROKEN MethodInvocation str getEncoding BinaryOperation StatementExpression enc pattern getEncoding pattern runtime ReferenceType MethodInvocation enc pattern ErrorMode runtime BinaryOperation newArgumentError != MemberReference MethodInvocation MethodInvocation ByteList pattern getUserObject + Literal MethodInvocation enc pattern getEncoding MemberReference MemberReference MemberReference "invalid byte in " str getEncoding runtime pattern enc	1
MethodDeclaration Modifier FormalParameter IOException LocalVariableDeclaration IfStatement private ReferenceType val ReferenceType VariableDeclarator BinaryOperation BlockStatement IRubyObject Channel socketChannel MethodInvocation instanceof MemberReference ReferenceType StatementExpression openFile MethodInvocation MethodInvocation getMainStream socketChannel SocketChannel MethodInvocation getDescriptor getChannel MethodInvocation asSocket MethodInvocation MemberReference asBoolean val	1
MethodDeclaration Modifier FormalParameter IfStatement synchronized ReferenceType runtime MemberReference BlockStatement Ruby ! initialized IfStatement StatementExpression BinaryOperation BlockStatement Assignment != MemberReference Literal IfStatement StatementExpression StatementExpression MemberReference Literal = ctors null BinaryOperation BlockStatement BlockStatement Assignment Assignment initialized true == MemberReference Literal StatementExpression LocalVariableDeclaration LocalVariableDeclaration ForStatement StatementExpression ForStatement MemberReference Literal = MemberReference ClassCreator = ctors length 1 Assignment ReferenceType VariableDeclarator BasicType VariableDeclarator EnhancedForControl BlockStatement Assignment ForControl BlockStatement ctors null cache ReferenceType MemberReference MethodInvocation = Map methodsMap ClassCreator int maxArity Literal VariableDeclaration MemberReference LocalVariableDeclaration StatementExpression LocalVariableDeclaration IfStatement StatementExpression MemberReference ArrayCreator = VariableDeclaration MethodInvocation LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ConcurrentHashMap javaCallable JavaConstructor MemberReference MemberReference create ReferenceType 0 ReferenceType VariableDeclarator ctors BasicType VariableDeclarator Assignment ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation javaCallables ReferenceType BinaryOperation ReferenceType VariableDeclarator iter hasNext ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment runtime ArraySelector ctors HashMap Constructor ctor int arity MethodInvocation MemberReference MethodInvocation = List TypeArgument methodsForArity Cast == MemberReference Literal StatementExpression StatementExpression methodsForArity MethodInvocation add JavaConstructor + MemberReference Literal Iterator TypeArgument iter MethodInvocation Map ReferenceType entry MethodInvocation List TypeArgument ctorsForArity Cast JavaConstructor methodsArray MethodInvocation MemberReference MemberReference = Literal ctor MemberReference getParameterTypes maxArity Math MemberReference MemberReference max ReferenceType ReferenceType MethodInvocation methodsForArity null Assignment MethodInvocation JavaConstructor MemberReference MemberReference create maxArity 1 ReferenceType methodsMap MethodInvocation entrySet Entry iter next ReferenceType ReferenceType MethodInvocation ctorsForArity ArrayCreator toArray ArraySelector javaCallables methodsArray 0 length arity maxArity JavaConstructor ArrayList TypeArgument methodsMap MemberReference get MemberReference ClassCreator = methodsMap MemberReference MemberReference put runtime ctor Map ReferenceType iterator JavaConstructor List TypeArgument entry getValue ReferenceType MethodInvocation Cast ReferenceType arity methodsForArity ReferenceType arity methodsForArity Entry ReferenceType JavaConstructor ctorsForArity size ReferenceType MethodInvocation JavaConstructor ArrayList TypeArgument JavaConstructor Integer entry getKey ReferenceType JavaConstructor	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration SwitchStatement public Node ReferenceType position ReferenceType receiver ReferenceType name ReferenceType args BinaryOperation ReturnStatement ReferenceType VariableDeclarator MethodInvocation SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase ISourcePosition Node String Node instanceof MemberReference ReferenceType ClassCreator ArrayNode argsNode Cast argsNode size Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ReturnStatement args ArrayNode ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference 1 ClassCreator 2 ClassCreator 3 ClassCreator ClassCreator AttrAssignNode position receiver name args ArrayNode args ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference position receiver name argsNode position receiver name argsNode position receiver name argsNode AttrAssignNode position receiver name argsNode	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement SwitchStatement private Node ReferenceType operation ReferenceType blockPass ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation ReturnStatement Cast SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase Token BlockPassNode ISourcePosition position MethodInvocation String name Cast Node args MethodInvocation == MemberReference Literal ClassCreator instanceof MemberReference ReferenceType ClassCreator ReferenceType MemberReference Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement Literal ReturnStatement ReturnStatement MemberReference MemberReference position ReferenceType MethodInvocation blockPass getArgsNode args null ReferenceType MemberReference MemberReference MemberReference MemberReference args ArrayNode ReferenceType MemberReference MemberReference MemberReference MemberReference ArrayNode args 0 ClassCreator 1 ClassCreator 2 ClassCreator 3 ClassCreator ClassCreator operation blockPass String operation getValue position name args blockPass position name args blockPass ReferenceType MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference Cast MemberReference ReferenceType MemberReference MemberReference Cast MemberReference ReferenceType MemberReference MemberReference Cast MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference position name args blockPass position name ReferenceType MemberReference blockPass position name ReferenceType MemberReference blockPass position name ReferenceType MemberReference blockPass position name args blockPass ArrayNode args ArrayNode args ArrayNode args	1
MethodDeclaration Modifier shadowing_lvar FormalParameter LocalVariableDeclaration IfStatement public ReferenceType identifier ReferenceType VariableDeclarator BinaryOperation BlockStatement Token String name Cast > MethodInvocation Literal IfStatement ReferenceType MethodInvocation MethodInvocation getCurrentScope 0 MethodInvocation StatementExpression String identifier getValue MemberReference isDefined warnings isVerbose MethodInvocation name warnings MemberReference MethodInvocation BinaryOperation warning ID identifier getPosition + Literal MemberReference outer local variable - " name	1
MethodDeclaration Modifier FormalParameter LocalVariableDeclaration StatementExpression ForStatement private ReferenceType javaClass ReferenceType VariableDeclarator Assignment ForControl BlockStatement Class TypeArgument Constructor constructors MethodInvocation MemberReference ClassCreator = VariableDeclaration BinaryOperation LocalVariableDeclaration StatementExpression ? MemberReference getConstructors ReferenceType Literal BasicType VariableDeclarator >= MemberReference Literal ReferenceType VariableDeclarator MethodInvocation javaClass int i MemberReference -- i 0 Constructor ctor MemberReference MemberReference MemberReference constructors length ArraySelector constructors ctor javaClass MemberReference i	1
MethodDeclaration Modifier BasicType isOpen ReturnStatement public boolean MemberReference isOpen	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference ClassCreator = yyVal yyVal ReferenceType MethodInvocation MethodInvocation Literal Literal MultipleAsgn19Node Cast getPosition support MethodInvocation Cast newArrayNode null null ReferenceType MemberReference Cast getPosition ReferenceType MemberReference Token ArraySelector yyVals ReferenceType MemberReference Node ArraySelector yyVals BinaryOperation Token ArraySelector yyVals BinaryOperation + Literal MemberReference BinaryOperation + Literal MemberReference - 2 yyTop + Literal MemberReference - 1 yyTop - 2 yyTop	1
MethodDeclaration Modifier ReferenceType childNodes ReturnStatement public List TypeArgument MemberReference ReferenceType EMPTY_LIST Node	0
MethodDeclaration Modifier BasicType getAddress FormalParameter StatementExpression ReturnStatement final public long BasicType offset MethodInvocation MethodInvocation long MemberReference BinaryOperation checkBounds MemberReference MethodInvocation getAddress offset >> MemberReference Literal buffer MemberReference index 3 offset	1
MethodDeclaration Modifier BasicType index ReturnStatement public int BinaryOperation - MemberReference Literal index 1	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier ReferenceType toStringInstrs LocalVariableDeclaration ForStatement ReturnStatement public String ReferenceType VariableDeclarator EnhancedForControl StatementExpression MethodInvocation StringBuffer buf ClassCreator VariableDeclaration MethodInvocation MethodInvocation buf toString ReferenceType ReferenceType VariableDeclarator getNodes buf MethodInvocation append StringBuffer BasicBlock b b toStringInstrs	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter ThrowStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType path MethodInvocation name Literal required Literal meta Literal IRubyObject IRubyObject recv MethodInvocation getRuntime 1 true Literal newNotImplementedError not is and is not	0
MethodDeclaration Modifier ReferenceType newObject ReturnStatement public Object ClassCreator ReferenceType Object	0
MethodDeclaration Modifier ReferenceType open FormalParameter FormalParameter FormalParameter FileNotFoundException DirectoryAsFileException FileExistsException IOException ReturnStatement static public ChannelDescriptor ReferenceType cwd ReferenceType path ReferenceType flags MethodInvocation String String ModeFlags MemberReference MemberReference MemberReference Literal Literal open cwd path flags 0 null	1
MethodDeclaration Modifier Annotation Annotation ReferenceType to_s ReturnStatement public JRubyMethod Override IRubyObject MethodInvocation MethodInvocation getRuntime Literal newString	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context self clazz name arg0 arg1 arg2 Block	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement protected IRubyObject ReferenceType context ReferenceType self ReferenceType name ReferenceType method MethodInvocation ThreadContext IRubyObject String DynamicMethod RuntimeHelpers MemberReference MemberReference MethodInvocation MemberReference MemberReference MemberReference context self method getVisibility name callType Block	0
MethodDeclaration Modifier Annotation ReferenceType freeze FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation BlockStatement This name Literal ThreadContext Ruby runtime MethodInvocation && BinaryOperation BinaryOperation IfStatement StatementExpression context getRuntime == BinaryOperation Literal || MethodInvocation MethodInvocation BinaryOperation ThrowStatement Assignment & MemberReference MemberReference 0 runtime is1_9 ! && BinaryOperation MethodInvocation MethodInvocation MemberReference MemberReference |= flags >= MethodInvocation Literal ! isTaint runtime Literal newSecurityError flags runtime getSafeLevel 4 "Insecure: can't freeze object"	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IOException IfStatement ReturnStatement private static IRubyObject ReferenceType context ReferenceType instance ReferenceType block MethodInvocation BlockStatement MemberReference ThreadContext Block block isGiven TryStatement instance ReturnStatement IfStatement MethodInvocation MethodInvocation StatementExpression block MemberReference MemberReference yield ! instance MethodInvocation context instance instance close	1
MethodDeclaration Modifier Annotation ReferenceType IfStatement ReturnStatement public Override DynamicMethod BinaryOperation StatementExpression MethodInvocation == MemberReference Literal MethodInvocation compiledMethod compiledMethod null initializeMethod	1
MethodDeclaration Modifier ReferenceType fromNative FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context BasicType value MethodInvocation ThreadContext long Util MethodInvocation Cast newUnsigned8 context getRuntime BasicType MemberReference byte value	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter TryStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType block ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject IRubyObject Block MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ThrowStatement MethodInvocation MemberReference MemberReference MemberReference MemberReference callBlock JumpException.BreakJump bj MethodInvocation JumpException.RetryJump rj MethodInvocation block escape context caller self block MemberReference MemberReference handleBreakJump MemberReference retryJumpError context bj context	1
MethodDeclaration Modifier modify StatementExpression IfStatement StatementExpression final public MethodInvocation BinaryOperation BlockStatement MethodInvocation modifyCheck != MemberReference MemberReference IfStatement StatementExpression value BinaryOperation BlockStatement BlockStatement Assignment == MemberReference MemberReference StatementExpression StatementExpression MemberReference MemberReference = Assignment MethodInvocation MemberReference MethodInvocation = value value value dup	0
MethodDeclaration Modifier Annotation ReferenceType zero_p FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context TernaryExpression name Literal ThreadContext MethodInvocation MethodInvocation MethodInvocation "zero?" MemberReference This MethodInvocation equalInternal MethodInvocation getRuntime MethodInvocation getRuntime context RubyFixnum MethodInvocation zero getTrue getFalse getRuntime	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator MethodInvocation name Literal rest Literal module Literal visibility MemberReference ThreadContext IRubyObject IRubyObject IRubyObject MethodInvocation RubyIO MemberReference MemberReference MemberReference true true PRIVATE context MethodInvocation MethodInvocation getRuntime context args getGlobalVariables Literal get	0
MethodDeclaration Modifier Annotation ReferenceType dump FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType args ReferenceType unusedBlock ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation name Literal optional Literal frame Literal IRubyObject Block RubyString precision MethodInvocation RubyString str This precision MemberReference append 1 true RubyString MemberReference Literal MethodInvocation str ArraySelector MethodInvocation args asString Literal getRuntime 0	0
MethodDeclaration Modifier SynchronizedStatement public This StatementExpression Assignment MemberReference BinaryOperation = & BinaryOperation Literal + MemberReference Literal 1	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Object Literal null	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement static public DynamicMethod ReferenceType runtime ReferenceType container ReferenceType name ReferenceType scope ReferenceType body ReferenceType argsNode ReferenceType visibility ReferenceType position BinaryOperation BlockStatement BlockStatement Ruby RubyModule String Node ArgsNode Visibility ISourcePosition == MethodInvocation MemberReference IfStatement ReturnStatement runtime MethodInvocation getInstanceConfig OFF MemberReference BlockStatement BlockStatement ClassCreator RubyInstanceConfig FULL_TRACE_ENABLED ReturnStatement ReturnStatement ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference ClassCreator ClassCreator container scope body argsNode visibility position ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference container name scope body argsNode visibility position container scope body argsNode visibility position	1
MethodDeclaration Modifier Annotation ReferenceType to_int FormalParameter ReturnStatement public JRubyMethod ElementValuePair IRubyObject ReferenceType context MethodInvocation name Literal ThreadContext RuntimeHelpers MemberReference This Literal invoke "to_int" context "to_i"	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression WhileStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator MethodInvocation BlockStatement Assignment BinaryOperation BlockStatement TernaryExpression name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation Encoding enc MethodInvocation == MemberReference Literal StatementExpression ReturnStatement modifyAndKeepCodeRange int s MemberReference int end BinaryOperation byte bytes MemberReference boolean modify Literal int c MethodInvocation enc MemberReference isLower StatementExpression StatementExpression MemberReference MethodInvocation += < MemberReference MemberReference StatementExpression IfStatement StatementExpression MemberReference This MethodInvocation CompatVersion RUBY1_9 context getRuntime checkDummyEncoding value realSize 0 MethodInvocation MethodInvocation value begin + MemberReference MemberReference value bytes false MemberReference MemberReference MemberReference MemberReference MemberReference codePoint c MethodInvocation Assignment s MemberReference MemberReference MemberReference codeLength s end Assignment MethodInvocation BlockStatement Assignment modify runtime getNil modifyCheck runtime getNil s value realSize runtime enc bytes s end enc MethodInvocation MemberReference MemberReference codeToMbc MemberReference Literal = runtime enc c MemberReference MethodInvocation = enc MemberReference isUpper StatementExpression StatementExpression MemberReference MethodInvocation += MemberReference MemberReference bytes s modify true c MemberReference MemberReference MemberReference MemberReference MemberReference codePoint c MethodInvocation Assignment s MemberReference MemberReference MemberReference codeLength enc c runtime enc bytes s end enc MethodInvocation MemberReference MemberReference codeToMbc MemberReference Literal = runtime enc c MemberReference MemberReference bytes s modify true enc c	1
MethodDeclaration Modifier BasicType FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private static long ReferenceType runtime ReferenceType value BasicType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference Ruby IRubyObject long timeval ArrayCreator instanceof MemberReference ReferenceType StatementExpression LocalVariableDeclaration StatementExpression BinaryOperation BlockStatement BlockStatement timeval BasicType Literal value RubyFloat Assignment BasicType VariableDeclarator Assignment instanceof MemberReference ReferenceType StatementExpression StatementExpression LocalVariableDeclaration IfStatement StatementExpression StatementExpression long 2 MemberReference TernaryExpression = double fraction BinaryOperation MemberReference Cast = value RubyNumeric Assignment Assignment ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement Assignment Assignment ArraySelector timeval MemberReference MethodInvocation MethodInvocation % Cast Literal ArraySelector timeval BasicType BinaryOperation MemberReference TernaryExpression = MemberReference Literal = RubyTime time instanceof MemberReference ReferenceType StatementExpression StatementExpression MemberReference TernaryExpression = MemberReference TernaryExpression = Literal Platform RubyNumeric MemberReference num2int RubyNumeric MemberReference num2long ReferenceType MemberReference 1.0 Literal long + BinaryOperation Literal ArraySelector timeval MemberReference MethodInvocation MethodInvocation ArraySelector timeval 0 value RubyTime Assignment Assignment ArraySelector timeval MemberReference MethodInvocation MethodInvocation ArraySelector timeval MemberReference MethodInvocation MethodInvocation 0 value value RubyFloat value 1 * MemberReference Literal 0.5 Literal Platform RubyNumeric MemberReference num2int RubyNumeric MemberReference num2long Literal MemberReference Cast = MemberReference Cast = Literal Platform RubyNumeric MethodInvocation num2int RubyNumeric MethodInvocation num2long Literal Platform RubyNumeric MethodInvocation num2int RubyNumeric MethodInvocation num2long fraction 0 value value 1 time ReferenceType MemberReference time ReferenceType MethodInvocation 0 time to_i time to_i 1 time usec time usec RubyTime value RubyTime TypeConverter MemberReference MethodInvocation Literal Literal convertToType value runtime true	1
MethodDeclaration Modifier main FormalParameter LocalVariableDeclaration StatementExpression StatementExpression static public ReferenceType args ReferenceType VariableDeclarator MethodInvocation MethodInvocation String obj ClassCreator obj obj Literal ReferenceType	0
MethodDeclaration Modifier FormalParameter AssertStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression public ReferenceType exception MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement Assignment RaiseException RubyException MethodInvocation Ruby runtime MethodInvocation runtime MethodInvocation StatementExpression MethodInvocation BlockStatement IfStatement MemberReference MemberReference = exception getException getRuntime MemberReference isInstance MethodInvocation MemberReference StatementExpression LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement MethodInvocation BlockStatement exception MethodInvocation runtime MethodInvocation ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation runtime MethodInvocation getDebug StatementExpression ArrayCreator MemberReference runtime MemberReference RubyException MethodInvocation MemberReference MemberReference = MethodInvocation MethodInvocation isTrue MethodInvocation ReferenceType ArrayInitializer Block MemberReference Literal newInstance message message backtrace ArrayCreator MemberReference runtime MethodInvocation IRubyObject MemberReference runtime 1 ReferenceType ArrayInitializer Block exception getException IRubyObject MemberReference	0
MethodDeclaration Modifier BasicType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement private int ReferenceType variable ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference Variable Integer index MethodInvocation == MemberReference Literal StatementExpression StatementExpression index MemberReference MethodInvocation MemberReference MethodInvocation peek index null Assignment MethodInvocation peek MemberReference get MemberReference MethodInvocation = MemberReference MethodInvocation MemberReference MethodInvocation peek variable index MethodInvocation method peek MemberReference MemberReference put MethodInvocation variable index Type ClassReference getType ReferenceType Object	0
MethodDeclaration Modifier StatementExpression public MethodInvocation method MemberReference go_to ArraySelector currentLoopLabels Literal 1	0
MethodDeclaration Modifier Annotation ReferenceType IfStatement StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject BinaryOperation BlockStatement MethodInvocation BasicType VariableDeclarator BasicType VariableDeclarator VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MemberReference BlockStatement BinaryOperation BlockStatement This name ElementArrayValue compat MemberReference == MemberReference Literal StatementExpression ReturnStatement modify boolean alnumSeen Literal int pos Literal n Literal int p MemberReference int end BinaryOperation byte bytes MemberReference VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement ! alnumSeen ForStatement > MemberReference Literal StatementExpression Literal Literal CompatVersion RUBY1_8 value realSize 0 MethodInvocation This false - 1 0 value begin + MemberReference MemberReference value bytes BasicType VariableDeclarator >= MemberReference MemberReference -- i BasicType VariableDeclarator MethodInvocation BlockStatement ForControl BlockStatement pos - 1 MethodInvocation modifyCheck p value realSize int i BinaryOperation i p int c BinaryOperation ASCII MemberReference isAlnum StatementExpression IfStatement StatementExpression StatementExpression StatementExpression VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement StatementExpression StatementExpression StatementExpression value MemberReference Cast insert - MemberReference Literal & MemberReference Literal c Assignment BinaryOperation BlockStatement Assignment Assignment Assignment BasicType VariableDeclarator >= MemberReference MemberReference -- i BasicType VariableDeclarator BinaryOperation BlockStatement Assignment Assignment Assignment pos BasicType MemberReference end 1 ArraySelector bytes 0xff MemberReference Literal = || BinaryOperation BinaryOperation StatementExpression StatementExpression BreakStatement MemberReference MemberReference = MemberReference TernaryExpression = MemberReference TernaryExpression = int i BinaryOperation i p int c BinaryOperation < MemberReference Literal StatementExpression StatementExpression BreakStatement MemberReference MemberReference = MemberReference Literal = MemberReference Literal = byte n MemberReference alnumSeen true || BinaryOperation BinaryOperation && MethodInvocation BinaryOperation Assignment Assignment pos i n MethodInvocation Literal TernaryExpression ArraySelector bytes MethodInvocation Cast TernaryExpression - MemberReference Literal & MemberReference Literal c 0xff Assignment Assignment pos i n ArraySelector bytes 0 i && MethodInvocation BinaryOperation && MethodInvocation BinaryOperation ASCII MemberReference isUpper < MemberReference Literal MemberReference Cast = MemberReference Literal = ASCII MemberReference isDigit '1' MethodInvocation Literal Literal MemberReference ASCII MemberReference isDigit BasicType Literal MethodInvocation Cast Cast end 1 ArraySelector bytes 0xff MemberReference Cast = MemberReference Literal = MemberReference ASCII MemberReference isDigit < MemberReference Literal ASCII MemberReference isLower < MemberReference Literal c c 'Z' ArraySelector bytes BasicType BinaryOperation pos - 1 c ASCII MemberReference isLower 'a' 'A' i c byte '0' ASCII MemberReference isLower BasicType Literal BasicType Literal MemberReference ArraySelector bytes BasicType BinaryOperation pos - 1 i c c '9' c c 'z' MemberReference byte + MemberReference Literal c c byte 'a' byte 'A' i MemberReference byte + MemberReference Literal i c 1 i c 1	1
MethodDeclaration Modifier Annotation ReferenceType fnmatch FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args BasicType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation name ElementArrayValue required Literal optional Literal meta Literal ThreadContext IRubyObject IRubyObject int flags TernaryExpression ByteList pattern MemberReference ByteList path MethodInvocation == MethodInvocation Literal ReturnStatement context MethodInvocation getRuntime Literal Literal 2 1 true BinaryOperation MethodInvocation Literal ArraySelector MethodInvocation MethodInvocation args MethodInvocation MemberReference MemberReference get_path MemberReference MemberReference BinaryOperation MemberReference MemberReference BinaryOperation MemberReference fnmatch 0 MethodInvocation getFalse == MemberReference Literal RubyNumeric MemberReference num2int 0 Literal convertToString getByteList getByteList context ArraySelector args pattern bytes pattern begin + MemberReference MemberReference path bytes path begin + MemberReference MemberReference flags context MethodInvocation getRuntime args length 3 ArraySelector args 0 Literal pattern begin pattern realSize path begin path realSize getTrue Literal 1 2	1
MethodDeclaration Modifier ReferenceType getArgsNode ReturnStatement public Node MemberReference argsNode	0
MethodDeclaration Modifier BasicType ReturnStatement private static final short ArrayCreator BasicType ArrayInitializer short Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal Literal 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 - 1 - 1 0 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 10 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 356 357 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 44 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 58 59 - 1 - 1 - 1 63 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 - 1 - 1 - 1 - 1 0 338 - 1 - 1 341 - 1 - 1 344 - 1 346 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 356 357 - 1 262 263 264 362 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 281 282 - 1 44 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 58 59 - 1 - 1 - 1 63 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 318 319 320 321 322 323 324 325 326 327 - 1 329 330 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 356 357 0 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 44 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 58 59 - 1 - 1 - 1 63 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 324 325 - 1 - 1 - 1 329 330 - 1 - 1 - 1 - 1 - 1 - 1 0 338 - 1 - 1 341 - 1 - 1 344 - 1 346 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 58 59 - 1 - 1 - 1 63 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 0 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 324 325 - 1 - 1 - 1 329 330 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 44 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 - 1 362 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 10 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 - 1 - 1 - 1 - 1 - 1 324 325 - 1 - 1 - 1 329 330 58 59 - 1 - 1 - 1 63 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 362 - 1 267 268 269 - 1 271 - 1 0 - 1 - 1 - 1 374 - 1 - 1 - 1 281 282 10 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 - 1 - 1 - 1 - 1 - 1 324 325 - 1 - 1 - 1 329 330 58 59 - 1 - 1 - 1 63 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 0 - 1 - 1 362 - 1 - 1 - 1 - 1 281 282 10 - 1 - 1 - 1 - 1 374 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 44 - 1 - 1 - 1 10 - 1 - 1 324 325 - 1 - 1 - 1 329 330 58 59 - 1 - 1 - 1 63 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 262 263 264 44 - 1 267 268 269 - 1 271 362 0 - 1 - 1 - 1 - 1 - 1 - 1 59 281 282 10 374 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 44 - 1 - 1 - 1 - 1 - 1 10 324 325 - 1 - 1 - 1 329 330 58 59 - 1 - 1 - 1 63 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 262 263 264 362 - 1 267 268 269 - 1 271 - 1 - 1 58 59 - 1 374 - 1 63 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 0 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 324 325 - 1 - 1 - 1 329 330 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 44 346 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 58 59 - 1 362 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 374 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 262 263 264 - 1 - 1 305 268 269 - 1 271 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 325 - 1 - 1 - 1 329 330 293 294 295 296 297 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 262 263 264 44 - 1 267 268 269 - 1 271 362 - 1 - 1 - 1 - 1 - 1 - 1 58 59 281 282 - 1 374 - 1 - 1 - 1 - 1 341 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 262 263 264 305 0 267 268 269 362 271 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 338 - 1 - 1 341 - 1 - 1 344 305 346 - 1 - 1 - 1 44 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 362 - 1 58 59 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 10 338 - 1 - 1 341 - 1 - 1 344 - 1 346 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 44 - 1 - 1 374 290 291 - 1 293 294 295 296 297 - 1 - 1 58 59 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 0 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 362 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 281 282 - 1 - 1 - 1 - 1 44 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 58 59 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 10 - 1 341 - 1 - 1 344 - 1 346 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 44 374 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 58 59 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 281 282 344 - 1 346 - 1 - 1 - 1 - 1 290 291 0 293 294 295 296 297 - 1 - 1 - 1 362 10 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 58 59 - 1 0 - 1 - 1 - 1 - 1 - 1 262 263 264 362 10 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 44 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 58 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 0 - 1 344 - 1 346 - 1 262 263 264 - 1 10 267 268 269 - 1 271 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 374 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 44 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 58 59 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 362 10 - 1 - 1 - 1 - 1 - 1 - 1 59 262 263 264 374 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 44 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 58 59 0 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 281 282 344 - 1 346 - 1 44 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 362 59 - 1 - 1 305 - 1 0 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 262 263 264 44 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 362 - 1 - 1 58 59 281 282 - 1 - 1 - 1 - 1 - 1 374 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 10 - 1 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 293 294 295 296 297 - 1 - 1 44 - 1 - 1 - 1 262 263 264 362 - 1 267 268 269 - 1 271 58 59 - 1 0 - 1 374 - 1 - 1 - 1 281 282 - 1 - 1 10 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 341 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 362 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 58 59 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 338 - 1 - 1 341 - 1 - 1 - 1 281 282 10 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 362 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 59 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 362 - 1 91 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 374 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 305 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 338 - 1 - 1 341 281 282 344 - 1 346 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 305 - 1 59 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 338 91 - 1 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 374 - 1 - 1 - 1 256 257 258 259 260 261 262 263 264 265 266 - 1 10 269 270 - 1 272 273 274 275 276 277 278 - 1 280 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 - 1 - 1 298 299 300 301 302 303 304 - 1 306 307 308 309 310 311 - 1 313 314 315 316 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 328 - 1 - 1 - 1 - 1 - 1 - 1 335 336 - 1 - 1 339 340 - 1 342 343 - 1 345 - 1 347 - 1 91 - 1 351 - 1 - 1 - 1 - 1 356 - 1 - 1 359 - 1 361 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 373 - 1 375 376 - 1 378 379 - 1 - 1 256 257 258 259 260 261 262 263 264 265 266 - 1 10 269 270 - 1 272 273 274 275 276 277 278 - 1 280 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 - 1 - 1 298 299 300 301 302 303 304 - 1 306 307 308 309 310 311 - 1 313 314 315 316 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 328 - 1 - 1 - 1 - 1 - 1 - 1 335 336 - 1 - 1 339 340 - 1 342 343 - 1 345 - 1 347 - 1 91 - 1 351 - 1 - 1 - 1 - 1 356 - 1 - 1 359 - 1 361 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 373 - 1 375 376 - 1 378 379 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 256 257 258 259 260 261 262 263 264 265 266 - 1 10 269 270 - 1 272 273 274 275 276 277 278 - 1 280 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 - 1 - 1 298 299 300 301 302 303 304 - 1 306 307 308 309 310 311 - 1 313 314 315 316 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 328 - 1 - 1 - 1 - 1 - 1 - 1 335 336 - 1 - 1 339 340 - 1 342 343 - 1 345 - 1 347 - 1 91 - 1 351 - 1 - 1 - 1 - 1 356 - 1 - 1 359 - 1 361 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 373 - 1 375 376 - 1 378 379 - 1 - 1 256 257 258 259 260 261 262 263 264 265 266 - 1 10 269 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 - 1 - 1 298 299 300 301 302 303 304 - 1 306 307 308 309 310 311 - 1 313 314 315 316 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 328 - 1 - 1 - 1 - 1 - 1 - 1 335 336 - 1 - 1 339 340 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 356 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 373 - 1 375 376 - 1 378 379 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 256 257 258 259 260 261 262 263 264 265 266 - 1 10 269 270 - 1 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 - 1 - 1 298 299 300 301 302 303 304 - 1 306 307 308 309 310 311 - 1 313 314 315 316 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 328 - 1 - 1 - 1 - 1 - 1 - 1 335 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 356 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 373 - 1 375 376 - 1 378 379 - 1 - 1 256 257 258 259 260 261 262 263 264 265 266 - 1 268 269 270 271 272 273 274 275 276 277 278 10 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 - 1 - 1 298 299 300 301 302 303 304 - 1 306 307 308 309 310 311 - 1 313 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 373 - 1 375 376 - 1 378 379 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 256 257 258 259 260 261 - 1 - 1 264 265 266 - 1 - 1 - 1 270 10 272 273 274 275 276 277 278 - 1 - 1 - 1 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 - 1 - 1 298 299 300 301 302 303 304 - 1 306 307 308 309 310 311 - 1 313 314 315 316 - 1 - 1 - 1 59 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 336 - 1 - 1 339 - 1 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 373 - 1 375 376 - 1 378 379 - 1 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 256 257 258 259 260 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 0 - 1 283 284 285 286 287 288 289 - 1 10 292 - 1 - 1 - 1 - 1 - 1 298 299 300 301 302 303 304 - 1 306 307 308 309 310 311 - 1 313 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 336 - 1 - 1 339 59 - 1 342 343 - 1 345 - 1 347 - 1 - 1 - 1 351 - 1 - 1 - 1 - 1 - 1 - 1 - 1 359 - 1 0 362 - 1 364 365 366 367 368 369 - 1 10 - 1 373 - 1 375 376 - 1 378 379 - 1 257 258 259 - 1 261 - 1 - 1 - 1 265 266 - 1 - 1 - 1 270 - 1 272 273 274 275 276 277 278 - 1 - 1 44 - 1 283 284 285 286 287 288 289 - 1 - 1 292 - 1 - 1 - 1 59 - 1 61 299 63 - 1 302 303 304 - 1 306 307 308 309 310 311 - 1 313 314 315 316 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 91 268 269 - 1 271 - 1 - 1 - 1 336 - 1 0 339 - 1 - 1 342 343 - 1 345 - 1 - 1 10 - 1 - 1 351 - 1 - 1 293 294 295 296 297 359 - 1 - 1 - 1 - 1 364 365 366 367 368 369 - 1 - 1 - 1 373 - 1 375 376 - 1 378 379 - 1 - 1 44 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 59 - 1 - 1 - 1 63 341 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 362 - 1 268 269 - 1 271 91 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 290 291 - 1 293 294 295 296 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 341 262 263 264 - 1 59 - 1 268 269 63 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 280 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 91 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 - 1 - 1 - 1 - 1 - 1 341 - 1 - 1 - 1 - 1 - 1 - 1 348 0 350 - 1 352 353 354 355 356 357 358 10 360 361 362 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 44 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 59 - 1 - 1 - 1 63 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 - 1 - 1 - 1 91 - 1 341 - 1 - 1 - 1 - 1 - 1 - 1 348 - 1 350 0 352 353 354 355 356 357 358 - 1 360 10 362 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 59 - 1 61 - 1 63 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 91 - 1 - 1 - 1 - 1 341 - 1 - 1 - 1 - 1 - 1 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 0 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 44 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 59 - 1 61 - 1 63 281 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 91 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 - 1 - 1 - 1 - 1 - 1 341 - 1 - 1 - 1 - 1 - 1 - 1 348 - 1 350 0 352 353 354 355 356 357 358 - 1 360 10 362 - 1 - 1 262 263 264 - 1 - 1 - 1 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 44 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 59 - 1 61 - 1 63 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 - 1 337 - 1 91 - 1 341 - 1 - 1 - 1 - 1 - 1 - 1 348 - 1 350 - 1 352 353 354 355 356 357 358 0 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 10 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 - 1 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 0 44 290 291 - 1 293 294 295 296 297 10 - 1 - 1 - 1 - 1 - 1 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 44 333 334 335 - 1 - 1 - 1 - 1 - 1 341 - 1 - 1 - 1 - 1 - 1 59 348 0 350 - 1 352 353 354 355 356 357 358 10 360 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 10 262 263 264 - 1 - 1 - 1 268 269 - 1 271 - 1 - 1 59 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 0 - 1 - 1 - 1 - 1 - 1 - 1 - 1 59 - 1 10 - 1 - 1 - 1 - 1 317 318 319 320 321 322 323 324 325 326 327 328 329 330 - 1 - 1 333 334 335 - 1 - 1 - 1 0 - 1 341 - 1 - 1 - 1 - 1 44 - 1 348 10 350 - 1 352 353 354 355 356 357 358 - 1 360 59 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 44 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 59 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 282 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 341 - 1 - 1 344 - 1 346 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 362 44 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 341 281 282 344 - 1 346 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 262 263 264 362 - 1 267 268 269 - 1 271 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 281 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 290 291 - 1 293 294 295 296 297 - 1 - 1 - 1 - 1 - 1 - 1 - 1 341 - 1 - 1 344 - 1 - 1 - 1 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 - 1 - 1 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 341 - 1 - 1 293 294 295 296 297 - 1 262 263 264 - 1 - 1 267 268 269 - 1 271 - 1 59 362 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1	1
MethodDeclaration Modifier BasicType ReturnStatement public boolean BinaryOperation >= MemberReference Literal index 0	0
MethodDeclaration Modifier LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression private BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation Assignment int BinaryOperation ArrayCreator System MemberReference Literal MemberReference Literal MemberReference arraycopy MemberReference MemberReference = * MemberReference Literal ReferenceType MemberReference 0 0 length length 2	0
MethodDeclaration Modifier flush StatementExpression public MethodInvocation ruby MethodInvocation MethodInvocation MethodInvocation get getInstanceConfig flush	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation BlockStatement MethodInvocation name Literal required Literal compat MemberReference ThreadContext IRubyObject && BinaryOperation BinaryOperation ThrowStatement MemberReference MemberReference "remainder" 1 CompatVersion RUBY1_9 instanceof MemberReference ReferenceType == Cast Literal MethodInvocation context other other RubyFloat ReferenceType MemberReference 0 context MethodInvocation getRuntime RubyFloat other	0
MethodDeclaration Modifier BasicType intValue FormalParameter FormalParameter ReturnStatement final public int ReferenceType context ReferenceType obj MethodInvocation ThreadContext IRubyObject Util MemberReference uint16Value obj	1
MethodDeclaration Modifier BasicType isOpen ReturnStatement public boolean MemberReference isOpen	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter IfStatement ReturnStatement public RaiseException ReferenceType message ReferenceType MethodInvocation BlockStatement MethodInvocation String StackOverflowError MethodInvocation getDebug StatementExpression MethodInvocation MemberReference newRaiseException isTrue MethodInvocation message MethodInvocation printStackTrace MethodInvocation getInstanceConfig getError	0
MethodDeclaration Modifier Annotation ReferenceType toString ReturnStatement public Override String BinaryOperation + BinaryOperation Literal + BinaryOperation MethodInvocation ")" + BinaryOperation Literal openFile MethodInvocation MethodInvocation getMainStream + BinaryOperation MethodInvocation ", " getDescriptor getFileno + BinaryOperation Literal openFile getMode + Literal MemberReference ", " path	0
MethodDeclaration pre FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression ReferenceType context ReferenceType self ReferenceType ReferenceType name ReferenceType block ReferenceType scope ReferenceType MethodInvocation ThreadContext IRubyObject RubyModule String Block context MemberReference MemberReference MemberReference MemberReference MemberReference name self block scope	0
MethodDeclaration Modifier ReferenceType getString FormalParameter FormalParameter ReturnStatement final public RubyString ReferenceType runtime BasicType i MethodInvocation Ruby int runtimeCache MemberReference MemberReference getString runtime i	0
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration TryStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType arg2 ReferenceType arg3 ReferenceType block ReferenceType VariableDeclarator StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject IRubyObject IRubyObject Block Ruby runtime MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation CatchClauseParameter ReturnStatement CatchClauseParameter ReturnStatement MethodInvocation context getRuntime MemberReference MemberReference MemberReference MemberReference MemberReference pre argsNode MemberReference Literal argsNode MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference prepare body MemberReference MemberReference MemberReference MemberReference rj MethodInvocation rj MethodInvocation MemberReference MemberReference MemberReference post context name self block runtime runtime 4 context runtime self arg0 arg1 arg2 arg3 block runtime context self block MemberReference MemberReference handleReturn MemberReference handleRedo runtime context name context rj runtime	0
MethodDeclaration Modifier Annotation ReferenceType StatementExpression LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject MethodInvocation ReferenceType VariableDeclarator BinaryOperation ReturnStatement BinaryOperation ReturnStatement TernaryExpression name Literal alias Literal check ByteList value MethodInvocation > MemberReference MemberReference MethodInvocation == MemberReference Literal MethodInvocation BinaryOperation MethodInvocation MethodInvocation str getByteList pos value realSize MethodInvocation getRuntime pos 0 MethodInvocation getRuntime == MemberReference Cast MethodInvocation getRuntime MethodInvocation getRuntime getNil getTrue value ArraySelector bytes BasicType Literal getTrue getFalse BinaryOperation byte '\n' - BinaryOperation Literal + MemberReference MemberReference 1 value begin pos	1
MethodDeclaration Modifier ReferenceType toJava FormalParameter IfStatement ReturnStatement public Object ReferenceType target MethodInvocation ReturnStatement MemberReference Class MemberReference Boolean TRUE Boolean FALSE	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter LocalVariableDeclaration IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation name Literal compat MemberReference ThreadContext Ruby runtime MethodInvocation == MemberReference Literal MethodInvocation MemberReference Literal MethodInvocation makeShared19 CompatVersion RUBY1_9 context getRuntime value realSize 0 MethodInvocation MemberReference MethodInvocation MemberReference newEmptyString runtime 0 MemberReference This infectBy runtime getMetaClass value encoding runtime	1
MethodDeclaration Modifier Annotation FormalParameter StatementExpression LocalVariableDeclaration StatementExpression public Override ReferenceType clone SuperMethodInvocation ReferenceType VariableDeclarator Assignment IRubyObject MemberReference exception Cast MemberReference MemberReference = clone ReferenceType MemberReference exception args args clone	0
MethodDeclaration Modifier setName FormalParameter StatementExpression public ReferenceType name Assignment String This MemberReference = MemberReference name name	0
MethodDeclaration Modifier run TryStatement public LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression IfStatement LocalVariableDeclaration IfStatement CatchClause ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation This Assignment MethodInvocation BlockStatement ReferenceType VariableDeclarator MemberReference BlockStatement BlockStatement CatchClauseParameter BufferedReader ClassCreator String command MethodInvocation close MemberReference MethodInvocation This Literal = conf isDebug StatementExpression String cmds MethodInvocation ArraySelector MethodInvocation cmds IfStatement IfStatement Exception e ReferenceType ClassCreator readLine socket close MemberReference null MethodInvocation command Literal Literal split Literal MethodInvocation equals MemberReference BlockStatement IfStatement MethodInvocation BlockStatement BufferedReader ReferenceType This socket System.err BinaryOperation println " " 3 1 conf getKey ArraySelector MethodInvocation cmds IfStatement StatementExpression MemberReference BlockStatement IfStatement conf isDebug StatementExpression InputStreamReader MemberReference MethodInvocation + Literal MemberReference Literal MemberReference equals MethodInvocation BlockStatement MethodInvocation ArraySelector MethodInvocation cmds IfStatement StatementExpression MemberReference BlockStatement BlockStatement MethodInvocation socket getInputStream "Got command: " command 0 conf isDebug StatementExpression System Literal exit Literal MemberReference equals MethodInvocation BlockStatement Assignment ArraySelector MethodInvocation cmds IfStatement IfStatement System.err Literal println MethodInvocation 0 0 conf isDebug StatementExpression MemberReference Literal = Literal MemberReference equals MemberReference BlockStatement BlockStatement MethodInvocation BlockStatement "Invalid System.err Literal println MethodInvocation false 0 IfStatement StatementExpression IfStatement conf isDebug StatementExpression System.err Literal println MethodInvocation BlockStatement ClassCreator MethodInvocation BlockStatement MethodInvocation no more conf isDebug StatementExpression MethodInvocation ReferenceType conf isDebug StatementExpression System.err Literal println MethodInvocation MethodInvocation run Main MethodInvocation command" System.err BinaryOperation println MemberReference System.err Literal println + Literal MemberReference ArraySelector MethodInvocation cmds "Not doing invalid command" on command " ArraySelector cmds Literal trim Literal 2 2	1
MethodDeclaration Modifier FormalParameter FormalParameter LocalVariableDeclaration IfStatement IfStatement StatementExpression private static ReferenceType context ReferenceType timeoutFuture BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference BlockStatement MethodInvocation ThreadContext Future boolean cancelled MethodInvocation && BinaryOperation BinaryOperation StatementExpression ! cancelled TryStatement context pollThreadEvents timeoutFuture Literal cancel && MemberReference BinaryOperation instanceof MemberReference ReferenceType Cast StatementExpression CatchClause CatchClause false cancelled instanceof MemberReference ReferenceType timeoutFuture Runnable ReferenceType MemberReference MethodInvocation CatchClauseParameter CatchClauseParameter timeoutExecutor timeoutExecutor timeoutFuture get ex InterruptedException ex	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement private Object ReferenceType name ReferenceType value ReferenceType VariableDeclarator BasicType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement MethodInvocation String Object Object table MemberReference int hash MethodInvocation int i Literal Assignment BinaryOperation MemberReference LocalVariableDeclaration IfStatement MemberReference MemberReference MethodInvocation MemberReference packedVTable name hashCode 0 MemberReference Literal = < MemberReference MemberReference ++ i ReferenceType VariableDeclarator BinaryOperation BlockStatement table i name intern value i 0 i vTableSize String n Cast && BinaryOperation MethodInvocation StatementExpression ReturnStatement ReferenceType MemberReference == MethodInvocation MemberReference name MemberReference equals Assignment MemberReference String ArraySelector table n hashCode hash n MemberReference MemberReference = value MemberReference ArraySelector table value i BinaryOperation + MemberReference MemberReference i MAX_PACKED	0
MethodDeclaration Modifier Annotation ReferenceType start FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair RubyThread ReferenceType recv ReferenceType args ReferenceType block MethodInvocation name Literal rest Literal frame Literal meta Literal IRubyObject IRubyObject Block MemberReference MemberReference Literal MemberReference true true true recv args false block	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression private ReferenceType context ReferenceType buffer ReferenceType value ReferenceType VariableDeclarator MethodInvocation ThreadContext InvocationBuffer Object Pointer cb MethodInvocation buffer MethodInvocation MethodInvocation getInstance cb getAddress MethodInvocation MemberReference MemberReference context getRuntime cbInfo value	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair Buffer ReferenceType context ReferenceType recv ReferenceType ReferenceType ReferenceType MethodInvocation name ElementArrayValue meta Literal ThreadContext IRubyObject IRubyObject IRubyObject IRubyObject MemberReference MemberReference MemberReference MethodInvocation BinaryOperation Literal Literal Literal true context recv RubyFixnum MemberReference fix2int | MemberReference MemberReference IN	0
MethodDeclaration Modifier ReferenceType getMethodName ReturnStatement public String MemberReference methodName	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement public boolean BasicType index MemberReference int ArraySelector MemberReference index	0
MethodDeclaration Modifier ReferenceType TryStatement public InputStream IfStatement CatchClause MemberReference BlockStatement IfStatement CatchClauseParameter ThrowStatement ReturnStatement MethodInvocation BlockStatement BlockStatement IOException e ClassCreator ClassCreator IfStatement ReturnStatement LocalVariableDeclaration ReturnStatement ReferenceType Literal BinaryOperation ReferenceType MethodInvocation MethodInvocation BlockStatement MethodInvocation ReferenceType VariableDeclarator ClassCreator MainExitException 1 + Literal MethodInvocation ByteArrayInputStream ReturnStatement getInput File file MethodInvocation ReferenceType ClassCreator Literal "Error opening script file: " e getMessage Literal JRubyFile MethodInvocation MethodInvocation create BufferedInputStream ReferenceType MemberReference 8192 null getCurrentDirectory FileInputStream file	1
MethodDeclaration Modifier ReferenceType FormalParameter StatementExpression ReturnStatement public BasicType offset MethodInvocation TernaryExpression long MemberReference Literal checkBounds BinaryOperation This ClassCreator offset 1 == MemberReference Literal ReferenceType This MemberReference offset 0 offset	0
MethodDeclaration Modifier StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation	0
MethodDeclaration Modifier Annotation ReferenceType recvfrom FormalParameter FormalParameter TryStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType args LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ReturnStatement CatchClause CatchClause required Literal rest Literal ThreadContext IRubyObject BasicType VariableDeclarator ReferenceType VariableDeclarator Cast MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement 1 true int length MethodInvocation ByteBuffer buf MethodInvocation ReferenceType This context MethodInvocation getThread InetSocketAddress sender Cast IRubyObject addressArray MethodInvocation IRubyObject result MethodInvocation context MethodInvocation getRuntime UnknownHostException e MethodInvocation IOException e MethodInvocation RubyNumeric MemberReference fix2int ByteBuffer MemberReference DatagramChannel MethodInvocation This MemberReference select ReferenceType Cast context MethodInvocation getRuntime context MethodInvocation getRuntime ArrayCreator newArray MethodInvocation Literal sockerr MethodInvocation Literal sockerr ArraySelector args length getChannel SelectionKey OP_READ InetSocketAddress ReferenceType This ArrayCreator newArray ClassCreator newString ReferenceType ArrayInitializer context getRuntime name or service not known" context getRuntime name or service not known" Literal DatagramChannel MethodInvocation ReferenceType ArrayInitializer ReferenceType MethodInvocation Literal MethodInvocation IRubyObject MemberReference MemberReference 0 getChannel IRubyObject MethodInvocation MethodInvocation MethodInvocation MethodInvocation ByteList buf array 0 buf position result addressArray context MethodInvocation getRuntime context MethodInvocation getRuntime context MethodInvocation getRuntime context MethodInvocation getRuntime Literal newString MethodInvocation newFixnum MethodInvocation newString MethodInvocation newString sender getPort sender getHostName sender MethodInvocation getAddress getHostAddress	1
MethodDeclaration Modifier BasicType write FormalParameter IOException IfStatement LocalVariableDeclaration IfStatement ReturnStatement public int ReferenceType src MemberReference BlockStatement BasicType VariableDeclarator BinaryOperation BlockStatement MemberReference ByteBuffer ! isOpen ThrowStatement int n MethodInvocation > MemberReference Literal StatementExpression n ClassCreator MemberReference MemberReference MethodInvocation write n 0 MethodInvocation ReferenceType Literal fd src src remaining src BinaryOperation position IOException "Not + MethodInvocation MemberReference src position n	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType ReferenceType block ReferenceType VariableDeclarator MethodInvocation name Literal frame Literal meta Literal compat MemberReference ThreadContext IRubyObject IRubyObject Block RubyString pathString MethodInvocation MemberReference MemberReference MethodInvocation MemberReference MemberReference true true CompatVersion RUBY1_8 convertToString context recv context getRuntime pathString block	1
MethodDeclaration Modifier Annotation ReferenceType hash FormalParameter ReturnStatement public JRubyMethod ElementValuePair RubyFixnum ReferenceType context MethodInvocation name Literal ThreadContext context MethodInvocation getRuntime MethodInvocation newFixnum hashCode	0
MethodDeclaration Modifier BasicType isInstanceVariable ReturnStatement public boolean MethodInvocation IdUtil MemberReference isInstanceVariable name	0
MethodDeclaration Modifier ReferenceType case75_line566 FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support Cast Cast ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference - 3 yyTop - 1 yyTop	1
MethodDeclaration Modifier ReferenceType set_dictionary FormalParameter UnsupportedEncodingException StatementExpression StatementExpression ReturnStatement public IRubyObject ReferenceType str MethodInvocation MethodInvocation MemberReference IRubyObject MethodInvocation Literal run str str MethodInvocation convertToString false getBytes	1
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter IfStatement private static ReferenceType containingClass ReferenceType context ReferenceType name MethodInvocation BlockStatement BlockStatement RubyModule ThreadContext RubySymbol containingClass isSingleton StatementExpression StatementExpression MethodInvocation MethodInvocation Cast MemberReference MemberReference containingClass MemberReference Literal MemberReference callMethod ReferenceType MemberReference context name context "method_added" name MetaClass containingClass	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType caller ReferenceType self ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject IRubyObject RubyModule klazz MethodInvocation String name MethodInvocation RubyClass selfType MethodInvocation MemberReference && BinaryOperation MethodInvocation ReturnStatement MemberReference MemberReference MemberReference MemberReference MemberReference context context MemberReference MemberReference MemberReference MemberReference cache && BinaryOperation BinaryOperation MemberReference MethodInvocation caller selfType context self name context self klazz name == MemberReference MemberReference != MemberReference Literal selfType MemberReference MemberReference MemberReference MemberReference call name lastName selfType null context self selfType name	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter Exception LocalVariableDeclaration ForStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType lines ReferenceType VariableDeclarator ForControl BlockStatement MethodInvocation name ElementArrayValue rest Literal IRubyObject IRubyObject ConsoleHolder holder MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression recv MethodInvocation getRuntime Literal Literal true MethodInvocation getHolder BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator MethodInvocation getNil "push" "<<" recv getRuntime int i Literal i lines length RubyString line MemberReference holder.history MethodInvocation addToHistory 0 ArraySelector MethodInvocation lines line getUnicodeValue MemberReference convertToString i	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement private static ByteList ReferenceType runtime BasicType bytes BasicType start BasicType len ReferenceType enc BasicType options ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MemberReference Ruby byte int int Encoding int ByteList ClassCreator Cast append MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference Cast append MemberReference MemberReference ReferenceType BasicType Literal runtime bytes start len enc BasicType Literal options ByteList byte '/' byte '/'	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType args ReferenceType VariableDeclarator ReferenceType VariableDeclarator Assignment Assignment Assignment Assignment MethodInvocation required Literal rest Literal meta Literal ThreadContext IRubyObject IRubyObject Ruby runtime MethodInvocation IRubyObject ret ArrayCreator MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MethodInvocation = MemberReference MemberReference = runtime MemberReference 1 true true context getRuntime ReferenceType Literal ArraySelector ret runtime MethodInvocation newString ArraySelector ret runtime newArray ArraySelector ret runtime Literal newFixnum ArraySelector ret ArraySelector args ret IRubyObject 4 Literal MethodInvocation MemberReference MemberReference Literal Literal 2 Literal Literal 0 getCanonicalHostName runtime ArraySelector MethodInvocation MethodInvocation args 1 2 3 0 Literal convertToString toString 0	0
MethodDeclaration Modifier put FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression final public ReferenceType runtime ReferenceType io BasicType offset ReferenceType value MethodInvocation Ruby MemoryIO long IRubyObject io MemberReference MethodInvocation offset Util MemberReference int8Value value	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement final public RubyRegexp ReferenceType runtime ReferenceType name BasicType options MethodInvocation Ruby String int runtimeCache MemberReference Literal MemberReference MemberReference runtime 2 name options	0
MethodDeclaration Modifier call FormalParameter StatementExpression public ReferenceType context MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile opElementAsgnNode getReceiverNode context true	0
MethodDeclaration Modifier BasicType length FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration IfStatement ReturnStatement static public int ReferenceType enc BasicType bytes BasicType p BasicType end BasicType VariableDeclarator BinaryOperation ReturnStatement TernaryExpression Encoding byte int int int n MethodInvocation && BinaryOperation BinaryOperation MemberReference BinaryOperation MethodInvocation BinaryOperation enc MemberReference MemberReference MemberReference length > MemberReference Literal >= BinaryOperation MemberReference n >= BinaryOperation MethodInvocation enc minLength - MemberReference MemberReference bytes p end n 0 - MemberReference MemberReference n - MemberReference MemberReference enc minLength end p end p end p	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast newSplatNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier StatementExpression public MethodInvocation BinaryOperation assertTrue == MethodInvocation MethodInvocation rubyObject MethodInvocation rubyObject getType getType	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression StatementExpression StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation Assignment Cast MemberReference Object Object int lexer MemberReference setState MemberReference Cast = ReferenceType MemberReference yyVal LexState EXPR_END yyVal ReferenceType MemberReference ISourcePositionHolder yyVal Token ArraySelector yyVals BinaryOperation + Literal MemberReference 0 yyTop	1
MethodDeclaration Modifier FormalParameter FormalParameter java.io.IOException StatementExpression StatementExpression static public ReferenceType ReferenceType output MethodInvocation MethodInvocation RubyFloat output MemberReference output MethodInvocation writeString	0
MethodDeclaration Modifier ReferenceType rid FormalParameter ReturnStatement static public IRubyObject ReferenceType runtime MethodInvocation Ruby MemberReference uid runtime	0
MethodDeclaration Modifier FormalParameter StatementExpression StatementExpression StatementExpression public ReferenceType value MethodInvocation MethodInvocation MethodInvocation BigInteger script MethodInvocation method MethodInvocation Literal MethodInvocation invokestatic This MemberReference ClassReference p ClassReference MethodInvocation sig value ReferenceType ReferenceType ClassReference ClassReference params RubyBignum RubyBignum ReferenceType ReferenceType Ruby BigInteger	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Arity MethodInvocation Arity optional	0
MethodDeclaration Modifier Annotation ReferenceType getMethod FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType arg1 ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String Class String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference + BinaryOperation MemberReference MemberReference tryClass Class descriptor ArrayCreator == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression StatementExpression InvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setArgumentTypes ic MemberReference setJavaName ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname ReferenceType ArrayInitializer c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity singleArgument descriptor method e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class MemberReference Class signature ArrayCreator Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation MemberReference MemberReference Literal MemberReference loadArguments mv MemberReference Literal visitVarInsn mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference mv Literal Literal visitMaxs MemberReference MethodInvocation = InvocationCallback c newInstance IllegalArgumentException e getMessage arg1 ReferenceType ArrayInitializer MemberReference MemberReference getReturnClass MemberReference createCtor MemberReference startCall mv METHOD_ARGS_INDEX 1 descriptor ALOAD 3 INVOKEVIRTUAL typePath method MemberReference MemberReference sig ARETURN 3 3 c MemberReference MemberReference MemberReference endCall Class MemberReference ClassReference method signature mnamePath cw ret signature cw mv mname arg1 ReferenceType Block	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement public IRubyObject ReferenceType runtime ReferenceType ReferenceType VariableDeclarator ClassCreator Ruby RubyClass IRubyObject dummy ClassCreator ReferenceType MemberReference MemberReference MemberReference MemberReference MemberReference ReferenceType MemberReference MethodInvocation runtime dummy dummy Visibility PRIVATE CallType VARIABLE RubyObject runtime runtime getObject	1
MethodDeclaration Modifier BasicType getBytes ReturnStatement public byte MethodInvocation value bytes	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference Cast = yyVal yyVal ReferenceType MemberReference ArgsNode ArraySelector yyVals BinaryOperation + Literal MemberReference - 1 yyTop	1
MethodDeclaration Modifier ReferenceType LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement public Class ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement Cast Set all ClassCreator Iterator it MethodInvocation it hasNext LocalVariableDeclaration LocalVariableDeclaration ForStatement ReferenceType MethodInvocation ReferenceType methods iterator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ForControl BlockStatement Class all ArrayCreator toArray HashSet Method m Cast Class ex MethodInvocation VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration WhileStatement IfStatement ReferenceType MethodInvocation ReferenceType MethodInvocation m BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator MethodInvocation BlockStatement BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation BlockStatement MemberReference BlockStatement Class all size Method it next int i Literal i ex length Class exx MemberReference all MemberReference contains ContinueStatement boolean add Literal Iterator it2 MethodInvocation it2 hasNext LocalVariableDeclaration IfStatement add StatementExpression 0 ArraySelector ex exx true all iterator ReferenceType VariableDeclarator MethodInvocation BlockStatement IfStatement MethodInvocation MemberReference Class de Cast de MemberReference isAssignableFrom StatementExpression BreakStatement MethodInvocation BlockStatement all MemberReference add i ReferenceType MethodInvocation exx Assignment exx MemberReference isAssignableFrom StatementExpression StatementExpression exx Class it2 next MemberReference Literal = de MethodInvocation Assignment add false it2 remove MemberReference Literal = add true	1
MethodDeclaration Modifier load FormalParameter FormalParameter IOException StatementExpression public ReferenceType runtime BasicType wrap MethodInvocation Ruby boolean MemberReference runtime	0
MethodDeclaration Modifier ReferenceType ReturnStatement private JavaObject Cast ReferenceType MethodInvocation JavaObject dataGetStruct	0
MethodDeclaration Modifier ReferenceType FormalParameter AssertStatement AssertStatement LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration WhileStatement ReturnStatement public IRubyObject ReferenceType internedName BinaryOperation BinaryOperation MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement Literal String == MemberReference MethodInvocation + MemberReference Literal IdUtil MemberReference isConstant Ruby runtime MethodInvocation RubyClass objectClass MethodInvocation IRubyObject value RubyModule p This != MemberReference Literal IfStatement StatementExpression null internedName internedName intern internedName " is not interned" internedName getRuntime runtime getObject p null BinaryOperation BlockStatement Assignment != Assignment Literal IfStatement IfStatement ReturnStatement MemberReference MethodInvocation = MemberReference MethodInvocation = null BinaryOperation BlockStatement BinaryOperation BlockStatement MemberReference p p getSuperClass value p MemberReference == MemberReference MemberReference IfStatement ContinueStatement && BinaryOperation BinaryOperation LocalVariableDeclaration StatementExpression value internedName value UNDEF BinaryOperation BreakStatement == MemberReference MemberReference != This MemberReference ReferenceType VariableDeclarator MethodInvocation == MethodInvocation Literal p objectClass objectClass String badCName BinaryOperation runtime MethodInvocation getWarnings p MemberReference MemberReference null + BinaryOperation MemberReference MemberReference BinaryOperation MemberReference warn runtime internedName + MethodInvocation Literal internedName ID + BinaryOperation MemberReference badCName getName "::" + BinaryOperation Literal badCName + Literal MemberReference " referenced by " constant " internedName	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration ForStatement ReturnStatement final static public IRubyObject ReferenceType runtime ReferenceType io BasicType offset BasicType count BasicType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ForControl BlockStatement MemberReference Ruby MemoryIO long int int array ArrayCreator io MemberReference MemberReference Literal MemberReference get RubyArray arr MethodInvocation VariableDeclaration BinaryOperation MemberReference StatementExpression arr BasicType MemberReference offset array 0 array length RubyArray MemberReference MemberReference newArray BasicType VariableDeclarator < MemberReference MemberReference ++ i MethodInvocation int count runtime array length int i Literal i array length arr MethodInvocation add 0 Util MemberReference MemberReference newUnsigned32 runtime ArraySelector array MemberReference i	1
MethodDeclaration Modifier BasicType ReturnStatement final public int MemberReference addressSize	0
MethodDeclaration Modifier ReferenceType ReturnStatement public MethodInvocation MethodInvocation	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType index BasicType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator BinaryOperation ReturnStatement MethodInvocation BlockStatement MethodInvocation name Literal compat MemberReference ThreadContext IRubyObject int i MethodInvocation Ruby runtime MethodInvocation int b MethodInvocation < MemberReference Literal MethodInvocation ! str singleByteOptimizable StatementExpression StatementExpression RubyFixnum MemberReference MemberReference newFixnum CompatVersion RUBY1_9 MemberReference context getRuntime MemberReference MemberReference b 0 runtime getNil MethodInvocation Assignment runtime b index runtime i updateCharOffset MemberReference MemberReference = b charOffsets ArraySelector beg MemberReference i	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Object ReferenceType iVisitor MethodInvocation NodeVisitor iVisitor This	0
MethodDeclaration Modifier ReferenceType toString ReturnStatement public String Literal	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression ReturnStatement static public IRubyObject ReferenceType context ReferenceType result MethodInvocation MemberReference ThreadContext IRubyObject context pollThreadEvents result	0
MethodDeclaration Modifier loadArguments FormalParameter FormalParameter FormalParameter SwitchStatement private ReferenceType mv ReferenceType desc BasicType specificArity MemberReference SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase SkinnyMethodAdapter JavaMethodDescriptor int specificArity Literal StatementExpression BreakStatement Literal BreakStatement Literal StatementExpression BreakStatement Literal StatementExpression StatementExpression BreakStatement Literal StatementExpression StatementExpression StatementExpression BreakStatement - 1 MethodInvocation 0 1 MethodInvocation 2 MethodInvocation MethodInvocation 3 MethodInvocation MethodInvocation MethodInvocation mv MemberReference aload MemberReference Literal MemberReference loadArgumentWithCast MemberReference Literal MemberReference loadArgumentWithCast MemberReference Literal MemberReference loadArgumentWithCast MemberReference Literal MemberReference loadArgumentWithCast MemberReference Literal MemberReference loadArgumentWithCast MemberReference Literal MemberReference loadArgumentWithCast mv 1 desc ArraySelector argumentTypes mv 1 desc ArraySelector argumentTypes mv 2 desc ArraySelector argumentTypes mv 1 desc ArraySelector argumentTypes mv 2 desc ArraySelector argumentTypes mv 3 desc ArraySelector argumentTypes Literal Literal Literal Literal Literal Literal 0 0 1 0 1 2	1
MethodDeclaration Modifier FormalParameter StatementExpression public BasicType index MethodInvocation int method MemberReference astore index	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter StatementExpression IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType arg Assignment BinaryOperation BlockStatement MethodInvocation name Literal required Literal IRubyObject MemberReference MethodInvocation = < MemberReference Literal ThrowStatement MethodInvocation getRuntime "pos=" 1 pos RubyNumeric MemberReference fix2int pos 0 MethodInvocation getNil arg MethodInvocation getRuntime Literal newErrnoEINVALError "Invalid argument"	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression protected final ReferenceType context ReferenceType name MethodInvocation ThreadContext String context MemberReference name	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk ReferenceType VariableDeclarator MethodInvocation BinaryOperation BlockStatement MethodInvocation ThreadContext IRubyObject Block IRubyObject larg MethodInvocation MemberReference MemberReference Literal checkContext || BinaryOperation BinaryOperation StatementExpression runtime getNil MemberReference MemberReference checkArgs localContext ctx == MemberReference Literal < MethodInvocation Literal Assignment runtime largs ArraySelector result null RubyComparable MemberReference MethodInvocation MemberReference MemberReference cmpint 0 MemberReference MemberReference = Literal ctx block MemberReference MethodInvocation yield larg ArraySelector result ArraySelector result larg 0 ctx runtime MemberReference MemberReference newArray Literal Literal larg ArraySelector result 0 0 Literal 0	0
MethodDeclaration Modifier Annotation ReferenceType op_match19 FormalParameter FormalParameter IfStatement IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType other BinaryOperation ReturnStatement BinaryOperation ThrowStatement MethodInvocation name Literal compat MemberReference writes MemberReference ThreadContext IRubyObject instanceof MemberReference ReferenceType Cast instanceof MemberReference ReferenceType MethodInvocation other MemberReference Literal This callMethod "=~" CompatVersion RUBY1_9 BACKREF other RubyRegexp ReferenceType MemberReference other RubyString context MethodInvocation getRuntime context "=~" RubyRegexp other Literal newTypeError "type mismatch: String given"	1
MethodDeclaration Modifier FormalParameter FormalParameter StatementExpression StatementExpression final public BasicType offset BasicType value MethodInvocation MethodInvocation long double MemberReference Literal checkBounds MemberReference MethodInvocation MemberReference offset 8 buffer MemberReference index value offset	1
MethodDeclaration Modifier Annotation ReferenceType getFastMethod FormalParameter LocalVariableDeclaration LocalVariableDeclaration SynchronizedStatement public Deprecated Callback ReferenceType method ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration TryStatement String String mname BinaryOperation String mnamePath BinaryOperation runtime getJRubyClassLoader ReferenceType VariableDeclarator IfStatement LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement CatchClause CatchClause + BinaryOperation Literal + BinaryOperation Literal Class c MethodInvocation BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MethodInvocation MemberReference CatchClauseParameter ThrowStatement CatchClauseParameter ThrowStatement + BinaryOperation MemberReference + BinaryOperation MemberReference MemberReference tryClass == MemberReference Literal LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression StatementExpression StatementExpression StatementExpression FastInvocationCallback ic Cast ic MethodInvocation setArity ic MemberReference setJavaName ic IllegalArgumentException e MemberReference Exception e ClassCreator + MethodInvocation Literal method + MemberReference Literal method mname c null ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation Assignment ReferenceType MethodInvocation Arity noArguments method e ReferenceType MethodInvocation type getName "Callback$" typePath "Callback$" Class ret MethodInvocation ClassWriter cw MethodInvocation MethodVisitor mv MethodInvocation mv MemberReference MemberReference MemberReference MethodInvocation visitMethodInsn mv MemberReference mv Literal Literal visitMaxs MemberReference MethodInvocation = FastInvocationCallback c newInstance IllegalArgumentException e getMessage MemberReference ArrayCreator getReturnClass MemberReference createCtorFast MemberReference startCallFast INVOKEVIRTUAL typePath method MemberReference sig ARETURN 1 3 c MemberReference MemberReference MemberReference endCall method ReferenceType Literal mnamePath cw ret cw mv mname Class 0	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter IfStatement ReturnStatement public Override IRubyObject ReferenceType nil BinaryOperation ReturnStatement MemberReference IRubyObject == MemberReference Literal Assignment variableValueTwo variableValueTwo null MemberReference MemberReference = variableValueTwo nil	1
MethodDeclaration Modifier ReferenceType infectBy FormalParameter IfStatement IfStatement ReturnStatement public IRubyObject ReferenceType obj MethodInvocation StatementExpression MethodInvocation StatementExpression This IRubyObject obj isTaint MethodInvocation obj isUntrusted MethodInvocation Literal setTaint Literal true true	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration TryStatement ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType self Modifier ReferenceType block Modifier ReferenceType VariableDeclarator Modifier ReferenceType VariableDeclarator IfStatement CatchClause MethodInvocation name Literal frame Literal ThreadContext IRubyObject final Block final Ruby runtime MethodInvocation final ThreadContext localContext MemberReference MethodInvocation BlockStatement BlockStatement CatchClauseParameter ReturnStatement runtime getTrue true context getRuntime context block isGiven StatementExpression StatementExpression JumpException.SpecialJump sj MethodInvocation MethodInvocation MethodInvocation runtime getFalse MemberReference MemberReference MemberReference ClassCreator callEach MemberReference MemberReference MemberReference ClassCreator callEach runtime context self ReferenceType MethodDeclaration runtime context self ReferenceType MethodDeclaration BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement BlockCallback Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation public IRubyObject ReferenceType ctx ReferenceType largs ReferenceType blk MethodInvocation ReferenceType VariableDeclarator MethodInvocation BlockStatement MethodInvocation ThreadContext IRubyObject Block MemberReference MemberReference Literal checkContext IRubyObject larg MethodInvocation ! block MethodInvocation MemberReference MemberReference yield ThrowStatement runtime getNil ThreadContext IRubyObject Block MemberReference MemberReference Literal checkContext IRubyObject larg MethodInvocation ! larg isTrue ThrowStatement runtime getNil localContext ctx MemberReference MemberReference checkArgs isTrue ctx larg MemberReference localContext ctx MemberReference MemberReference checkArgs MemberReference runtime largs JumpException SPECIAL_JUMP runtime largs JumpException SPECIAL_JUMP	1
MethodDeclaration Modifier StatementExpression public MethodInvocation MethodInvocation getMethodVisitor MemberReference	0
MethodDeclaration Modifier ReferenceType ReturnStatement public ClassCreator ReferenceType	0
MethodDeclaration Modifier FormalParameter StatementExpression public ReferenceType name MethodInvocation String MemberReference MethodInvocation addMethod name getInstance	0
MethodDeclaration Modifier addMethod FormalParameter FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration LocalVariableDeclaration IfStatement StatementExpression private static ReferenceType methods ReferenceType method BasicType VariableDeclarator BinaryOperation BlockStatement ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement MethodInvocation Map Method int acc MethodInvocation || MethodInvocation MethodInvocation ReturnStatement mk ClassCreator md Cast == MemberReference Literal StatementExpression StatementExpression md MemberReference add method getModifiers Modifier MemberReference isStatic Modifier MemberReference isPrivate ReferenceType MemberReference ReferenceType MethodInvocation md null Assignment MethodInvocation method acc acc method methods MemberReference get MemberReference ClassCreator = methods MemberReference MemberReference put mk md ReferenceType MemberReference mk md method	1
MethodDeclaration Modifier BasicType isSingleton ReturnStatement public boolean MemberReference isSingleton	0
MethodDeclaration Modifier Annotation ReferenceType java_alias FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType proxyClass ReferenceType newName ReferenceType rubyName MethodInvocation backtrace Literal meta Literal visibility MemberReference ThreadContext IRubyObject IRubyObject IRubyObject MemberReference MemberReference MemberReference MemberReference MethodInvocation java_alias true true Visibility PRIVATE context proxyClass newName rubyName context MethodInvocation getRuntime newEmptyArray	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ForStatement LocalVariableDeclaration ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType VariableDeclarator ForControl BlockStatement ReferenceType VariableDeclarator MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Object newArgs ArrayCreator VariableDeclaration BinaryOperation MemberReference LocalVariableDeclaration StatementExpression Object result Cast MemberReference MemberReference javaToRuby ReferenceType MemberReference BasicType VariableDeclarator < MemberReference MemberReference ++ i ReferenceType VariableDeclarator Assignment ReferenceType MethodInvocation ruby result Object args length int i Literal i args length IRubyObject arg MemberReference MemberReference MethodInvocation = Object handle TernaryExpression MemberReference invoke 0 ArraySelector args ArraySelector newArgs MemberReference MemberReference Literal Cast newArgs MemberReference MemberReference arg isStatic null ReferenceType MemberReference i i JavaObjectWrapper self	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public Override BigInteger MethodInvocation value	0
MethodDeclaration Modifier ReferenceType getHistory FormalParameter ReturnStatement static public ReferenceType holder MemberReference ConsoleHolder holder history	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter LocalVariableDeclaration IfStatement public DynamicMethod ReferenceType klazz ReferenceType method ReferenceType VariableDeclarator BinaryOperation BlockStatement BlockStatement RubyModule Method Class params MethodInvocation > MemberReference Literal ReturnStatement ReturnStatement method getParameterTypes params length 0 ClassCreator ClassCreator ReferenceType MemberReference MemberReference ReferenceType MemberReference MemberReference klazz method klazz method	0
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration IfStatement ReturnStatement public RubyModule ReferenceType name ReferenceType VariableDeclarator ReferenceType VariableDeclarator ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement MemberReference String Ruby runtime MethodInvocation IRubyObject moduleObj MethodInvocation RubyModule module != MemberReference Literal IfStatement IfStatement StatementExpression BinaryOperation BlockStatement BlockStatement module getRuntime MemberReference getConstantAt moduleObj null MethodInvocation ThrowStatement BinaryOperation ThrowStatement Assignment && BinaryOperation BinaryOperation StatementExpression name ! moduleObj isModule MethodInvocation >= MethodInvocation Literal MethodInvocation MemberReference Cast = != MemberReference Literal != Assignment Literal Assignment runtime BinaryOperation newTypeError runtime getSafeLevel 4 runtime Literal newSecurityError module ReferenceType MemberReference null MemberReference MethodInvocation = null MemberReference MethodInvocation = + MemberReference Literal module RubyModule moduleObj module MemberReference module RubyModule MemberReference MemberReference This Literal newModule name " is not a module" name runtime name true	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression ReturnStatement protected Object ReferenceType name ReferenceType value MethodInvocation MemberReference String Object MethodInvocation MethodInvocation MethodInvocation getMetaClass value getRealClass MemberReference This MemberReference set name value	0
MethodDeclaration Modifier BasicType hashCode ReturnStatement public int MethodInvocation name hashCode	0
MethodDeclaration Modifier setName FormalParameter StatementExpression public ReferenceType name Assignment String This MemberReference = MemberReference name name	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter IfStatement public ReferenceType node ReferenceType context BasicType expr MemberReference BlockStatement BlockStatement Node BodyCompiler boolean RubyInstanceConfig PEEPHOLE_OPTZ IfStatement StatementExpression IfStatement MemberReference StatementExpression MethodInvocation MemberReference StatementExpression expr MethodInvocation context ! expr MethodInvocation context context consumeCurrentValue	1
MethodDeclaration Modifier ReferenceType ReturnStatement public Profile MemberReference profile	0
MethodDeclaration Modifier Annotation ReferenceType initialize_copy FormalParameter IfStatement StatementExpression IfStatement ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType original BinaryOperation ReturnStatement MethodInvocation BinaryOperation BlockStatement This name Literal required Literal visibility MemberReference IRubyObject == This MemberReference This != MethodInvocation MethodInvocation ThrowStatement "initialize_copy" 1 Visibility PRIVATE original MethodInvocation getMetaClass original MethodInvocation getMetaClass MethodInvocation getRealClass getRealClass MethodInvocation getRuntime Literal newTypeError should take same class object"	1
MethodDeclaration Modifier BasicType FormalParameter LocalVariableDeclaration IfStatement LocalVariableDeclaration StatementExpression IfStatement ReturnStatement private boolean ReferenceType arg ReferenceType VariableDeclarator MethodInvocation ReturnStatement ReferenceType VariableDeclarator MethodInvocation BinaryOperation ReturnStatement MethodInvocation IRubyObject IRubyObject tmp MethodInvocation tmp isNil Literal RubyString otherString Cast MemberReference checkEncoding < MemberReference MemberReference Literal value MemberReference startsWith arg checkStringType false ReferenceType MemberReference otherString value realSize otherString.value realSize false otherString value RubyString tmp	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration ForStatement ReturnStatement private Object ReferenceType name ReferenceType VariableDeclarator ReferenceType VariableDeclarator BasicType VariableDeclarator ForControl BlockStatement Literal String VariableTableEntry table MemberReference Object readValue int hash MethodInvocation VariableDeclaration BinaryOperation Assignment IfStatement null vTable name hashCode ReferenceType VariableDeclarator != MemberReference Literal MemberReference MemberReference = BinaryOperation BlockStatement VariableTableEntry e MemberReference e null e e next && BinaryOperation MethodInvocation IfStatement ReturnStatement ArraySelector table == MemberReference MemberReference name MemberReference equals BinaryOperation ReturnStatement MethodInvocation BinaryOperation hash e hash e name != Assignment Literal MemberReference MemberReference & MemberReference BinaryOperation MemberReference MemberReference = null readValue e hash - MemberReference Literal readValue e value table length 1	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement private RubyHash ReferenceType ary2 MethodInvocation RubyArray ary2 MethodInvocation	0
MethodDeclaration Modifier ReferenceType newClass FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression StatementExpression IfStatement StatementExpression StatementExpression ReturnStatement static public RubyClass ReferenceType runtime ReferenceType superClass ReferenceType name ReferenceType ReferenceType parent BasicType setParent ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation MemberReference StatementExpression MethodInvocation MethodInvocation MemberReference Ruby RubyClass String ObjectAllocator RubyModule boolean RubyClass clazz MethodInvocation clazz MemberReference clazz MemberReference setAllocator clazz MethodInvocation makeMetaClass setParent MethodInvocation parent MemberReference MemberReference setConstant clazz MemberReference clazz MemberReference MemberReference newClass name superClass getMetaClass clazz MemberReference setParent name clazz superClass runtime superClass parent	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType arg1 ReferenceType VariableDeclarator BasicType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext IRubyObject RubyModule String IRubyObject IRubyObject Object array MethodInvocation int x MethodInvocation Object obj MethodInvocation Array MemberReference MemberReference MemberReference set arg1 MemberReference RubyFixnum MethodInvocation fix2int MemberReference array x obj self arg0 convertToInteger arg1	0
MethodDeclaration Modifier Annotation Annotation ReferenceType java_to_ruby FormalParameter FormalParameter FormalParameter TryStatement static public Deprecated JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject ReferenceType recv ReferenceType object ReferenceType unusedBlock ReturnStatement CatchClause frame Literal module Literal visibility MemberReference IRubyObject IRubyObject Block MethodInvocation CatchClauseParameter StatementExpression ReturnStatement true true Visibility PRIVATE JavaUtil MethodInvocation MemberReference java_to_ruby RuntimeException e MethodInvocation MethodInvocation recv getRuntime object recv MethodInvocation MethodInvocation getRuntime recv MethodInvocation getRuntime getJavaSupport MemberReference Literal handleNativeException getNil e null	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter ReturnStatement public JRubyMethod ElementValuePair ElementValuePair ElementValuePair IRubyObject Modifier ReferenceType context ReferenceType args Modifier ReferenceType block TernaryExpression name Literal optional Literal frame Literal final ThreadContext IRubyObject final Block MethodInvocation MethodInvocation MethodInvocation 1 true block isGiven MemberReference MemberReference MemberReference each_line MethodInvocation This Literal MemberReference enumeratorize context args block context getRuntime args	0
MethodDeclaration Modifier ReferenceType getFirstNode ReturnStatement public Node MemberReference	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement public JRubyMethod ElementValuePair RubyArray ReferenceType context MethodInvocation name Literal ThreadContext context MethodInvocation getRuntime MethodInvocation newArray	0
MethodDeclaration Modifier BasicType count LocalVariableDeclaration ForStatement ReturnStatement private int BasicType VariableDeclarator EnhancedForControl BlockStatement MemberReference int count Literal VariableDeclaration MemberReference WhileStatement count 0 ReferenceType VariableDeclarator entryTable BinaryOperation BlockStatement Entry TypeArgument e != MemberReference Literal StatementExpression StatementExpression ReferenceType e null MemberReference Assignment T ++ count MemberReference MemberReference = e e next	0
MethodDeclaration BasicType IfStatement LocalVariableDeclaration ReturnStatement boolean MethodInvocation BlockStatement BasicType VariableDeclarator MethodInvocation MethodInvocation getDeclaringClass ReturnStatement int MethodInvocation ! Modifier MemberReference isAbstract isInterface Literal getModifiers false	0
MethodDeclaration Modifier BasicType FormalParameter ReturnStatement protected boolean ReferenceType name MethodInvocation String MethodInvocation MemberReference containsKey name	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement LocalVariableDeclaration StatementExpression ReturnStatement public IRubyObject ReferenceType internedName ReferenceType target ReferenceType result BinaryOperation BlockStatement ReferenceType VariableDeclarator MethodInvocation MemberReference String IRubyObject IRubyObject instanceof MemberReference ReferenceType ThrowStatement RubyModule module Cast module MemberReference MemberReference fastSetConstant result target RubyModule MethodInvocation ReferenceType MemberReference internedName result runtime BinaryOperation newTypeError RubyModule target + MethodInvocation Literal target toString " is not a class/module"	0
MethodDeclaration Modifier Annotation ReferenceType newInstance FormalParameter FormalParameter FormalParameter FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType ReferenceType block MethodInvocation name ElementArrayValue meta Literal ThreadContext IRubyObject IRubyObject Block MemberReference MemberReference MemberReference Literal Literal Literal MemberReference Literal true context recv 1 1 true block	0
MethodDeclaration * */ Modifier ReferenceType FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType to ReferenceType block BinaryOperation BlockStatement BlockStatement This ThreadContext IRubyObject Block && BinaryOperation BinaryOperation StatementExpression StatementExpression instanceof This ReferenceType instanceof MemberReference ReferenceType MethodInvocation MethodInvocation RubyFixnum to RubyFixnum MemberReference Cast Cast MemberReference MemberReference This MemberReference MemberReference context ReferenceType This ReferenceType MemberReference block context to block RubyFixnum RubyFixnum to	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType context ReferenceType name MethodInvocation ThreadContext String runtimeCache MemberReference MemberReference Literal context name 2	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter IfStatement ReturnStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType args ReferenceType block BinaryOperation ReturnStatement MethodInvocation ThreadContext IRubyObject RubyModule String IRubyObject Block != MemberReference Literal MethodInvocation MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call args length 2 This MemberReference MemberReference MemberReference Literal Literal raiseArgumentError context self clazz name ArraySelector args ArraySelector args block context name args length 2 2 Literal Literal 0 1	1
MethodDeclaration Modifier Annotation ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement public Override IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType VariableDeclarator MethodInvocation ReferenceType VariableDeclarator ReferenceType VariableDeclarator MethodInvocation MemberReference ThreadContext IRubyObject RubyModule String Ruby runtime MethodInvocation MemberReference proxy MethodInvocation JavaConstructor constructor Cast proxy MethodInvocation self context getRuntime runtime MemberReference ReferenceType MethodInvocation JavaObject MemberReference MethodInvocation wrap self JavaConstructor MemberReference MemberReference runtime constructor self name	0
MethodDeclaration Modifier run FormalParameter StatementExpression StatementExpression LocalVariableDeclaration IfStatement public ReferenceType s MethodInvocation MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement IfStatement IR_Scope System.out Literal println System.out MethodInvocation println c MethodInvocation != MemberReference Literal StatementExpression StatementExpression BinaryOperation BlockStatement s toString s c null MethodInvocation MethodInvocation instanceof MemberReference ReferenceType LocalVariableDeclaration StatementExpression StatementExpression System.out BinaryOperation println System.out BinaryOperation println s IR_Method ReferenceType VariableDeclarator MethodInvocation MethodInvocation + Literal MethodInvocation + Literal MethodInvocation IR_Method m Cast System.out BinaryOperation println System.out BinaryOperation println c MethodInvocation c toStringInstrs ReferenceType MemberReference + Literal MethodInvocation + Literal MethodInvocation toString IR_Method s "\n m toStringInstrs "\n m	1
MethodDeclaration Modifier ReferenceType ReturnStatement public NodeType MemberReference NodeType	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter FormalParameter StatementExpression TryStatement public IRubyObject ReferenceType context ReferenceType self ReferenceType clazz ReferenceType name ReferenceType arg0 ReferenceType block MethodInvocation LocalVariableDeclaration LocalVariableDeclaration StatementExpression ReturnStatement StatementExpression ThreadContext IRubyObject RubyModule String IRubyObject Block MemberReference MemberReference ReferenceType VariableDeclarator ReferenceType VariableDeclarator MemberReference MemberReference MethodInvocation context name RubyClass cls Cast IRubyObject obj MethodInvocation cls ArraySelector MethodInvocation obj MemberReference ReferenceType MemberReference cls MemberReference MemberReference MemberReference MemberReference MemberReference MemberReference call context RubyClass self context self obj arg0 block	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter FormalParameter LocalVariableDeclaration ReturnStatement static public RubyInteger ReferenceType runtime ReferenceType str BasicType base BasicType strict ReferenceType VariableDeclarator MethodInvocation Ruby RubyString int boolean ByteList s MethodInvocation Convert2 MemberReference MemberReference MemberReference MemberReference str getByteList runtime s base strict	0
MethodDeclaration Modifier BasicType FormalParameter ForStatement ReturnStatement static public boolean ReferenceType receivers ForControl BlockStatement Literal IRubyObject VariableDeclaration BinaryOperation MemberReference IfStatement false BasicType VariableDeclarator < MemberReference MemberReference ++ i MemberReference ReturnStatement int i Literal i receivers length ArraySelector MethodInvocation receivers Literal 0 MemberReference isTrue true i	1
MethodDeclaration Modifier ReferenceType ReturnStatement protected String Literal	0
MethodDeclaration Modifier Annotation ReferenceType ReturnStatement public JRubyMethod ElementValuePair IRubyObject MethodInvocation name Literal MethodInvocation getRuntime getNil	0
MethodDeclaration Modifier ReferenceType op_gt FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType context BasicType other MethodInvocation ThreadContext long RubyBoolean MethodInvocation BinaryOperation newBoolean context getRuntime > MemberReference MemberReference value other	1
MethodDeclaration Modifier ReferenceType FormalParameter ReturnStatement public Float ReferenceType f MethodInvocation Float vri MemberReference f	0
MethodDeclaration Modifier ReferenceType ReturnStatement public RubyClass MemberReference	0
MethodDeclaration Modifier ReferenceType getLine TryStatement ReturnStatement protected String ReturnStatement CatchClause Literal MethodInvocation CatchClauseParameter StatementExpression null area MemberReference BinaryOperation getText BadLocationException e MethodInvocation startPos - MethodInvocation MemberReference e printStackTrace area MethodInvocation getDocument startPos getLength	1
MethodDeclaration Modifier ReferenceType FormalParameter LocalVariableDeclaration ReturnStatement public ReferenceType self ReferenceType VariableDeclarator ClassCreator IRubyObject frame MethodInvocation ReferenceType MemberReference MemberReference MethodInvocation MethodInvocation MethodInvocation MemberReference MemberReference self frame frame getVisibility getCurrentScope file line	0
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter StatementExpression LocalVariableDeclaration IfStatement ReturnStatement public IRubyObject BasicType offset ReferenceType nil MethodInvocation ReferenceType VariableDeclarator BinaryOperation BlockStatement MemberReference int IRubyObject MemberReference IRubyObject value MemberReference == MemberReference Literal ReturnStatement value offset ArraySelector value null MethodInvocation MemberReference MemberReference MemberReference setValueDepthZero offset value offset	0
MethodDeclaration Modifier StatementExpression StatementExpression StatementExpression public MethodInvocation MethodInvocation MethodInvocation Literal MethodInvocation invokeUtilityMethod VoidClassReference ClassReference ClassReference sig ReferenceType ReferenceType Throwable ThreadContext	0
MethodDeclaration Modifier Annotation ReferenceType get ReturnStatement public Override IRubyObject MethodInvocation other get	0
MethodDeclaration Modifier ReferenceType ReturnStatement final public java ReferenceType MethodInvocation ReferenceType MemberReference MemberReference ByteBuffer address Integer MAX_VALUE	0
MethodDeclaration Modifier ReferenceType ReturnStatement public Arity MethodInvocation Arity	0
MethodDeclaration Modifier Annotation ReferenceType FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression StatementExpression ReturnStatement static public JRubyMethod ElementValuePair IRubyObject ReferenceType context ReferenceType recv ReferenceType line ReferenceType VariableDeclarator Assignment MethodInvocation MethodInvocation name Literal ThreadContext IRubyObject IRubyObject ArgsFileData data MethodInvocation MemberReference MethodInvocation = context MethodInvocation MethodInvocation getRuntime recv MethodInvocation getRuntime "lineno=" ArgsFileData MemberReference getDataFrom data RubyNumeric MemberReference fix2int getGlobalVariables Literal MemberReference set getNil recv line line	1
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement public IRubyObject ReferenceType runtime ReferenceType array BasicType i MethodInvocation Ruby Object int MemberReference Cast convert runtime ReferenceType MemberReference Double array	0
MethodDeclaration Modifier ReferenceType call FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public IRubyObject ReferenceType context ReferenceType args ReferenceType MethodInvocation MethodInvocation ThreadContext IRubyObject Block MemberReference MemberReference call context MethodInvocation getRuntime context ArraySelector args getNil Literal 0	0
MethodDeclaration Modifier ReferenceType SwitchStatement ThrowStatement public String This SwitchStatementCase SwitchStatementCase SwitchStatementCase SwitchStatementCase ClassCreator Source ReturnStatement Extension ReturnStatement Both ReturnStatement Neither ReturnStatement ReferenceType BinaryOperation MemberReference MemberReference MemberReference MemberReference RuntimeException + Literal This "Unknown "	1
MethodDeclaration FormalParameter StatementExpression ReferenceType Assignment RubyClass This MemberReference = MemberReference	0
MethodDeclaration Modifier FormalParameter FormalParameter FormalParameter LocalVariableDeclaration StatementExpression IfStatement IfStatement public ReferenceType node ReferenceType context BasicType expr Modifier ReferenceType VariableDeclarator MethodInvocation MethodInvocation BlockStatement BlockStatement MemberReference StatementExpression Node BodyCompiler boolean final FlipNode flipNode Cast context MethodInvocation getVariableCompiler flipNode isExclusive StatementExpression StatementExpression ! expr MethodInvocation ReferenceType MemberReference MethodInvocation MethodInvocation MethodInvocation MethodInvocation context consumeCurrentValue FlipNode node flipNode getIndex flipNode context ClassCreator ClassCreator performBooleanBranch context ClassCreator ClassCreator performBooleanBranch ReferenceType MethodDeclaration ReferenceType MethodDeclaration ReferenceType MethodDeclaration ReferenceType MethodDeclaration BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression public ReferenceType context MethodInvocation MethodInvocation MethodInvocation public ReferenceType context MethodInvocation MethodInvocation MethodInvocation public ReferenceType context MethodInvocation MethodInvocation MethodInvocation public ReferenceType context MethodInvocation MethodInvocation BodyCompiler MethodInvocation MemberReference Literal compile context ClassCreator ClassCreator performBooleanBranch context BodyCompiler MethodInvocation MemberReference Literal compile MemberReference context MethodInvocation getVariableCompiler BodyCompiler MethodInvocation MemberReference Literal compile context ClassCreator ClassCreator performBooleanBranch context BodyCompiler MethodInvocation MemberReference Literal compile context ClassCreator ClassCreator performBooleanBranch flipNode context true ReferenceType MethodDeclaration ReferenceType MethodDeclaration flipNode context true context MethodInvocation MethodInvocation Literal assignLocalVariable flipNode context true ReferenceType MethodDeclaration ReferenceType MethodDeclaration flipNode context true ReferenceType MethodDeclaration ReferenceType MethodDeclaration BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter flipNode getIndex flipNode true BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter BranchCallback Modifier branch FormalParameter StatementExpression StatementExpression StatementExpression StatementExpression BranchCallback Modifier branch FormalParameter StatementExpression public ReferenceType context MethodInvocation MethodInvocation public ReferenceType context public ReferenceType context MethodInvocation MethodInvocation public ReferenceType context public ReferenceType context MethodInvocation MethodInvocation MethodInvocation MethodInvocation public ReferenceType context MethodInvocation BodyCompiler context context MethodInvocation getVariableCompiler BodyCompiler BodyCompiler context context MethodInvocation getVariableCompiler BodyCompiler BodyCompiler MethodInvocation MemberReference Literal compile MemberReference context MethodInvocation getVariableCompiler context BodyCompiler context MethodInvocation MethodInvocation Literal assignLocalVariable MethodInvocation MethodInvocation Literal assignLocalVariable flipNode context true context MethodInvocation MethodInvocation Literal assignLocalVariable flipNode getIndex flipNode false flipNode getIndex flipNode false flipNode getIndex flipNode false	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop MethodInvocation MemberReference Object Object int Literal yyerror yyVal "constant re-assignment"	1
MethodDeclaration Modifier ReferenceType FormalParameter FormalParameter FormalParameter StatementExpression ReturnStatement public Object ReferenceType yyVal ReferenceType yyVals BasicType yyTop Assignment MemberReference Object Object int MemberReference MethodInvocation = yyVal yyVal support MethodInvocation Cast Cast newOrNode Cast getPosition ReferenceType MemberReference ReferenceType MemberReference ReferenceType MemberReference Node ArraySelector yyVals Node ArraySelector yyVals Token ArraySelector yyVals BinaryOperation BinaryOperation BinaryOperation + Literal MemberReference + Literal MemberReference + Literal MemberReference - 2 yyTop 0 yyTop - 1 yyTop	1
MethodDeclaration Modifier Annotation ReferenceType FormalParameter ReturnStatement static public JRubyMethod ElementValuePair ElementValuePair IRubyObject ReferenceType recv MethodInvocation name Literal meta Literal IRubyObject recv MethodInvocation getRuntime true getCharsetMap	1
MethodDeclaration Modifier ReferenceType get FormalParameter FormalParameter FormalParameter ReturnStatement final public IRubyObject ReferenceType runtime ReferenceType io BasicType offset MethodInvocation Ruby MemoryIO long runtime MethodInvocation newFloat io MemberReference offset	1
MethodDeclaration Modifier ReferenceType sockerr FormalParameter FormalParameter ReturnStatement protected static RuntimeException ReferenceType runtime ReferenceType msg ClassCreator Ruby String ReferenceType MemberReference MethodInvocation MemberReference Literal RaiseException runtime runtime Literal fastGetClass msg true	0
