MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation Literal "remove" Literal null Literal null StatementExpression MethodInvocation notifier ClassCreator ReferenceType Literal "remove" This Literal 0 sendNotification	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object oSubmachineState FormalParameter ReferenceType Object oStatemachine StatementExpression MethodInvocation impl MemberReference oSubmachineState MemberReference oStatemachine	0
MethodDeclaration Modifier private ReferenceType Collection findTagValues FormalParameter ReferenceType Object item FormalParameter ReferenceType String searchedName LocalVariableDeclaration ReferenceType Collection VariableDeclarator result ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation MethodInvocation MemberReference item getTaggedValues getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal null WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tag MethodInvocation iter next LocalVariableDeclaration ReferenceType String VariableDeclarator tagOfTag MethodInvocation MethodInvocation MemberReference tag getTagOfTag getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference tagOfTag Literal null MethodInvocation tagOfTag MemberReference searchedName equals BlockStatement StatementExpression Assignment MemberReference s MethodInvocation MethodInvocation MemberReference tag getValueOfTag getFacade = IfStatement BinaryOperation && BinaryOperation != MemberReference s Literal null BinaryOperation != MethodInvocation s length Literal 0 StatementExpression MethodInvocation result MemberReference s add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public static ReferenceType String localTime FormalParameter ReferenceType String cvsDate IfStatement MethodInvocation ! cvsDate Literal "$Date: " startsWith BlockStatement ReturnStatement MemberReference cvsDate LocalVariableDeclaration ReferenceType String VariableDeclarator yrS MethodInvocation cvsDate Literal 7 Literal 11 substring LocalVariableDeclaration ReferenceType String VariableDeclarator moS MethodInvocation cvsDate Literal 12 Literal 14 substring LocalVariableDeclaration ReferenceType String VariableDeclarator daS MethodInvocation cvsDate Literal 15 Literal 17 substring LocalVariableDeclaration ReferenceType String VariableDeclarator hrS MethodInvocation cvsDate Literal 18 Literal 20 substring LocalVariableDeclaration ReferenceType String VariableDeclarator miS MethodInvocation cvsDate Literal 21 Literal 23 substring LocalVariableDeclaration ReferenceType String VariableDeclarator seS MethodInvocation cvsDate Literal 24 Literal 26 substring LocalVariableDeclaration ReferenceType TimeZone VariableDeclarator tz MethodInvocation TimeZone Literal "GMT+0" LocalVariableDeclaration ReferenceType VariableDeclarator gmtCal ClassCreator ReferenceType MemberReference tz TryStatement StatementExpression MethodInvocation gmtCal MethodInvocation Integer MemberReference yrS parseInt BinaryOperation - MethodInvocation Integer MemberReference moS parseInt Literal 1 MethodInvocation Integer MemberReference daS parseInt MethodInvocation Integer MemberReference hrS parseInt MethodInvocation Integer MemberReference miS parseInt MethodInvocation Integer MemberReference seS parseInt set CatchClause CatchClauseParameter NumberFormatException e LocalVariableDeclaration ReferenceType Date VariableDeclarator d MethodInvocation gmtCal getTime ReturnStatement MethodInvocation d toString	1
MethodDeclaration Modifier public final expression_list RecognitionException TokenStreamException StatementExpression MethodInvocation assignment_expression BlockStatement DoStatement _loop465 Literal true BlockStatement IfStatement BinaryOperation == MethodInvocation Literal 1 LA MemberReference COMMA BlockStatement StatementExpression MethodInvocation MemberReference COMMA match StatementExpression MethodInvocation assignment_expression BlockStatement BreakStatement _loop465	1
MethodDeclaration Modifier private ReferenceType getCollaborations ReturnStatement Cast ReferenceType MethodInvocation modelImpl getCollaborationsFactory	0
MethodDeclaration Modifier protected setBigPort FormalParameter ReferenceType Fig bp StatementExpression Assignment This MemberReference MemberReference bp = StatementExpression MethodInvocation MethodInvocation getOwner MemberReference	1
MethodDeclaration Modifier public set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value IfStatement MethodInvocation value MemberReference equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement Literal false setReadOnly getCoreHelper IfStatement MethodInvocation value MemberReference equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement MethodInvocation Model MethodInvocation setChangeability getCoreHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement Literal true setReadOnly getCoreHelper	1
MethodDeclaration Modifier protected setAllElements FormalParameter ReferenceType Collection col IfStatement MethodInvocation ! isEmpty StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MemberReference col addAll	1
MethodDeclaration Modifier private StatementExpression MethodInvocation MemberReference srcPathTableModel	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String moduleName IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal null IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal = " MethodInvocation size debug ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator MemberReference BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator candidate ClassCreator ReferenceType File MemberReference MemberReference moduleName IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal '" MethodInvocation candidate toString Literal "' MethodInvocation candidate exists debug IfStatement MethodInvocation candidate exists BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator urlString TryStatement StatementExpression Assignment MemberReference urlString MethodInvocation candidate MethodInvocation toURL MethodInvocation toExternalForm toURI = CatchClause CatchClauseParameter MalformedURLException e ReturnStatement Literal null ReturnStatement MethodInvocation MemberReference urlString IfStatement MethodInvocation public2SystemIds MemberReference moduleName containsKey BlockStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Couldn't find user model (\"" MemberReference moduleName Literal "\") in " Literal "to use a model stored within the file." debug ReturnStatement MemberReference moduleName ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Collection getModels LocalVariableDeclaration ReferenceType Set VariableDeclarator result ClassCreator ReferenceType HashSet StatementExpression MethodInvocation result MemberReference models addAll ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator profile MethodInvocation MethodInvocation getProfiles getProfileConfiguration BlockStatement TryStatement StatementExpression MethodInvocation result MethodInvocation profile getProfilePackages addAll CatchClause CatchClauseParameter org.argouml.profile.ProfileException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Exception when fetching models from profile " MethodInvocation profile MemberReference e error ReturnStatement MethodInvocation Collections MemberReference result	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType BehavioralFeature	0
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener ListenerNotFoundException StatementExpression MethodInvocation notifier MemberReference listener removeNotificationListener	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Node FormalParameter ReferenceType Object ns IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Node VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Node TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference ns BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference o addAll IfStatement BinaryOperation instanceof MemberReference o ReferenceType Node BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Node MemberReference o add CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType List elems StatementExpression MethodInvocation impl MemberReference handle MemberReference elems	0
MethodDeclaration BasicType boolean FormalParameter ReferenceType Object t ReturnStatement MethodInvocation Model MethodInvocation MemberReference t isLeaf getFacade	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isATransition getFacade BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference target setTarget StatementExpression SuperMethodInvocation MemberReference e actionPerformed	0
MethodDeclaration Modifier protected addAction FormalParameter ReferenceType Action action FormalParameter ReferenceType String tooltip LocalVariableDeclaration ReferenceType JButton VariableDeclarator button ClassCreator ReferenceType MemberReference action IfStatement BinaryOperation != MemberReference tooltip Literal null BlockStatement StatementExpression MethodInvocation button MemberReference tooltip setToolTipText StatementExpression MethodInvocation button Literal "" setText StatementExpression MethodInvocation button Literal false StatementExpression MethodInvocation actions MemberReference button add	0
MethodDeclaration Modifier protected ReferenceType Object IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getOwner getClassifier getFacade	0
MethodDeclaration Modifier public Annotation Override ReferenceType ReturnStatement MemberReference figNodeStrategy	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator cpp MethodInvocation getInstance StatementExpression MethodInvocation lfBeforeCurly MethodInvocation cpp setSelected StatementExpression MethodInvocation verboseDocs MethodInvocation cpp setSelected StatementExpression MethodInvocation indent MethodInvocation Integer MethodInvocation cpp valueOf setValue StatementExpression MethodInvocation useSect MethodInvocation cpp setSelectedIndex StatementExpression MethodInvocation headerGuardUpperCase MethodInvocation cpp setSelected StatementExpression MethodInvocation headerGuardGUID MethodInvocation cpp setSelected StatementExpression MethodInvocation defaultInline MethodInvocation cpp setSelectedIndex	0
MethodDeclaration Modifier public undo StatementExpression MethodInvocation MemberReference oldValue set	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object element FormalParameter ReferenceType String property StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference element MemberReference property add StatementExpression MethodInvocation Model MethodInvocation This MemberReference element MemberReference property addModelEventListener getPump	0
MethodDeclaration Modifier public paint FormalParameter ReferenceType Graphics g StatementExpression SuperMethodInvocation MemberReference g paint ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator getFigs MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Cast ReferenceType Fig MethodInvocation it next IfStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation g MethodInvocation getLineColor setColor StatementExpression MethodInvocation MemberReference g Literal 1 MethodInvocation fig getX BinaryOperation + MethodInvocation fig getY MethodInvocation fig getHeight BinaryOperation + MethodInvocation fig getX MethodInvocation fig getWidth BinaryOperation + MethodInvocation fig getY MethodInvocation fig getHeight Literal 0 ArrayCreator BasicType float ArrayInitializer Literal 5.0f Literal 5.0f Literal 10	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String name FormalParameter ReferenceType Object ns ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier static BasicType int ReturnStatement MemberReference defInsideClass id	0
MethodDeclaration Modifier public BasicType int ReturnStatement BinaryOperation + Cast BasicType int BinaryOperation + MethodInvocation low MethodInvocation getX getLocation BinaryOperation / MethodInvocation low MemberReference width getSize Literal 2 MethodInvocation getOffset	0
MethodDeclaration Modifier final BasicType int ReturnStatement Cast ReferenceType Integer MemberReference object	0
MethodDeclaration Modifier public BasicType boolean enable StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType getInstance StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType getInstance StatementExpression MethodInvocation MethodInvocation getInstance StatementExpression MethodInvocation LOG Literal "Transformer Module info ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType boolean isATagDefinition FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType Object assoc FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer Literal LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference assoc getConnections MethodInvocation iterator getFacade ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 MethodInvocation iter hasNext MemberReference ++ i BlockStatement IfStatement BinaryOperation != MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation buf Literal "_" append StatementExpression MethodInvocation buf MethodInvocation MethodInvocation iter next MemberReference ns append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public addOwnedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object me IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Namespace BinaryOperation instanceof MemberReference me ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Namespace MemberReference handle LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator elem Cast ReferenceType ModelElement MemberReference me StatementExpression MethodInvocation elem MemberReference ns setNamespace StatementExpression MethodInvocation ns MethodInvocation MemberReference elem add ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference me	0
MethodDeclaration Modifier private FormalParameter ReferenceType IfStatement BinaryOperation == MemberReference listenerList Literal null BlockStatement StatementExpression Assignment MemberReference listenerList MethodInvocation This = LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dm computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Parameter BinaryOperation || BinaryOperation == MemberReference expr Literal null BinaryOperation instanceof MemberReference expr ReferenceType Expression BlockStatement LocalVariableDeclaration ReferenceType Expression VariableDeclarator Cast ReferenceType Parameter MemberReference handle IfStatement MethodInvocation ! MemberReference Cast ReferenceType Expression MemberReference expr equal BlockStatement StatementExpression Cast ReferenceType Parameter MemberReference handle IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference expr	0
MethodDeclaration Modifier private static BasicType int stringToBound FormalParameter ReferenceType String b TryStatement IfStatement BinaryOperation || MethodInvocation b Literal "n" equals MethodInvocation b Literal "*" equals BlockStatement ReturnStatement Literal - 1 BlockStatement ReturnStatement MethodInvocation Integer MemberReference b parseInt CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "illegal : " TernaryExpression BinaryOperation == MemberReference b Literal null Literal "null" MemberReference b	1
MethodDeclaration Modifier final protected ReferenceType FormalParameter ReferenceType String title ReturnStatement ClassCreator ReferenceType MethodInvocation Translator MemberReference title localize	0
MethodDeclaration Modifier private setTarget StatementExpression MethodInvocation singleton MethodInvocation singleton shouldBeEnabled setEnabled	0
MethodDeclaration Modifier public BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement StatementExpression MethodInvocation LOG Literal to stillvalid while not warn ReturnStatement Literal false IfStatement BinaryOperation != MethodInvocation i MethodInvocation size getOffenders Literal 1 BlockStatement ReturnStatement Literal true IfStatement MethodInvocation MethodInvocation i MethodInvocation Literal 0 get getOffenders MemberReference dsgr predicate BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item MethodInvocation MethodInvocation i MethodInvocation Literal 0 get getOffenders MemberReference dsgr toDoItem ReturnStatement MethodInvocation item MemberReference i equals ReturnStatement Literal false	1
MethodDeclaration Modifier protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation head MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MemberReference oldBounds MethodInvocation getBounds	0
MethodDeclaration Modifier public BasicType boolean isSaveEnabled ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Action actions FormalParameter ReferenceType Project p FormalParameter ReferenceType Object sourceModelElement AssertStatement MethodInvocation Model MethodInvocation MemberReference sourceModelElement getFacade LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Action VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Action StatementExpression MethodInvocation result ClassCreator ReferenceType MemberReference p MemberReference sourceModelElement add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection parseFiles FormalParameter ReferenceType Project p FormalParameter ReferenceType Collection files FormalParameter ReferenceType ImportSettings settings FormalParameter ReferenceType ProgressMonitor monitor ImportException StatementExpression MethodInvocation LOG Literal "Not fully implemented yet!" warn StatementExpression MethodInvocation MemberReference monitor warnUser StatementExpression Assignment MemberReference newElements ClassCreator ReferenceType HashSet = StatementExpression MethodInvocation monitor MethodInvocation files size setMaximumProgress LocalVariableDeclaration BasicType int VariableDeclarator count Literal 1 ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation files iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator file MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference file ReferenceType File BlockStatement ThrowStatement ClassCreator ReferenceType ImportException BinaryOperation + Literal "Invalid argument - not a file: " MemberReference file StatementExpression MethodInvocation MemberReference p Cast ReferenceType File MemberReference file MemberReference settings parseFile StatementExpression MethodInvocation monitor MemberReference ++ count updateProgress ReturnStatement MemberReference newElements	1
MethodDeclaration Modifier protected Annotation Override ReferenceType IfStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent isReadOnly getModelManagementHelper BlockStatement ReturnStatement ArrayCreator ReferenceType Literal 6 ReturnStatement MemberReference icons	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType GridBagLayout VariableDeclarator gb ClassCreator ReferenceType GridBagLayout StatementExpression MethodInvocation MemberReference gb setLayout StatementExpression MethodInvocation MemberReference gb setLayout LocalVariableDeclaration ReferenceType VariableDeclarator c ClassCreator ReferenceType StatementExpression Assignment MemberReference c Literal 3 = StatementExpression Assignment MemberReference c Literal 3 = StatementExpression Assignment MemberReference ClassCreator ReferenceType JLabel = StatementExpression MethodInvocation MethodInvocation BorderFactory MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX createEmptyBorder setBorder StatementExpression Assignment MemberReference c fill MemberReference BOTH = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c gridwidth Literal 3 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression Assignment MemberReference c weighty Literal 0.0 = StatementExpression MethodInvocation gb MemberReference MemberReference c setConstraints StatementExpression MethodInvocation MemberReference add LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType ClassCreator ReferenceType LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator ClassCreator ReferenceType JScrollPane MemberReference MemberReference JScrollPane VERTICAL_SCROLLBAR_AS_NEEDED MemberReference JScrollPane StatementExpression MethodInvocation MemberReference MemberReference add StatementExpression MethodInvocation MemberReference MemberReference CENTER add StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c gridwidth Literal 4 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression Assignment MemberReference c weighty Literal 1.0 = StatementExpression MethodInvocation gb MemberReference MemberReference c setConstraints StatementExpression MethodInvocation MemberReference add LocalVariableDeclaration ReferenceType VariableDeclarator persButtons ClassCreator ReferenceType ClassCreator ReferenceType GridLayout Literal 6 Literal 1 Literal 0 Literal 5 StatementExpression MethodInvocation persButtons MemberReference add StatementExpression MethodInvocation persButtons MemberReference add StatementExpression MethodInvocation persButtons MemberReference add StatementExpression MethodInvocation persButtons MemberReference add StatementExpression MethodInvocation persButtons MemberReference add StatementExpression MethodInvocation persButtons MemberReference add LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType ClassCreator ReferenceType MemberReference RIGHT Literal 0 Literal 0 StatementExpression MethodInvocation MemberReference persButtons add StatementExpression Assignment MemberReference c gridx Literal 4 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c weighty Literal 0.0 = StatementExpression Assignment MemberReference c Literal 0 = StatementExpression Assignment MemberReference c Literal 0 = StatementExpression Assignment MemberReference c insets ClassCreator ReferenceType Insets Literal 0 Literal 5 Literal 0 Literal 0 = StatementExpression MethodInvocation gb MemberReference MemberReference c setConstraints StatementExpression MethodInvocation MemberReference add StatementExpression Assignment MemberReference ClassCreator ReferenceType JLabel = StatementExpression MethodInvocation MethodInvocation BorderFactory MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX createEmptyBorder setBorder StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 3 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression Assignment MemberReference c weighty Literal 0.0 = StatementExpression Assignment MemberReference c Literal 3 = StatementExpression Assignment MemberReference c Literal 3 = StatementExpression Assignment MemberReference c insets ClassCreator ReferenceType Insets Literal 10 Literal 0 Literal 0 Literal 0 = StatementExpression MethodInvocation gb MemberReference MemberReference c setConstraints StatementExpression MethodInvocation MemberReference add StatementExpression MethodInvocation ClassCreator ReferenceType Insets Literal 2 Literal 15 Literal 2 Literal 15 setMargin StatementExpression MethodInvocation ClassCreator ReferenceType Insets Literal 2 Literal 15 Literal 2 Literal 15 setMargin LocalVariableDeclaration ReferenceType VariableDeclarator xferButtons ClassCreator ReferenceType StatementExpression MethodInvocation xferButtons ClassCreator ReferenceType BoxLayout MemberReference xferButtons MemberReference BoxLayout Y_AXIS setLayout StatementExpression MethodInvocation xferButtons MemberReference add StatementExpression MethodInvocation xferButtons ClassCreator ReferenceType add StatementExpression MethodInvocation xferButtons MemberReference add StatementExpression Assignment MemberReference c gridx Literal 2 = StatementExpression Assignment MemberReference c gridy Literal 4 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c weighty Literal 0.0 = StatementExpression Assignment MemberReference c insets ClassCreator ReferenceType Insets Literal 0 Literal 3 Literal 0 Literal 5 = StatementExpression MethodInvocation gb MemberReference xferButtons MemberReference c setConstraints StatementExpression MethodInvocation MemberReference xferButtons add StatementExpression Assignment MemberReference ClassCreator ReferenceType JLabel = StatementExpression MethodInvocation MethodInvocation BorderFactory MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX createEmptyBorder setBorder StatementExpression Assignment MemberReference c gridx Literal 3 = StatementExpression Assignment MemberReference c gridy Literal 3 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression Assignment MemberReference c insets ClassCreator ReferenceType Insets Literal 10 Literal 0 Literal 0 Literal 0 = StatementExpression MethodInvocation gb MemberReference MemberReference c setConstraints StatementExpression MethodInvocation MemberReference add StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 4 = StatementExpression Assignment MemberReference c weighty Literal 1.0 = StatementExpression Assignment MemberReference c gridwidth Literal 2 = StatementExpression Assignment MemberReference c Literal 2 = StatementExpression Assignment MemberReference c insets ClassCreator ReferenceType Insets Literal 0 Literal 0 Literal 0 Literal 0 = LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator ClassCreator ReferenceType JScrollPane MemberReference MemberReference JScrollPane VERTICAL_SCROLLBAR_AS_NEEDED MemberReference JScrollPane StatementExpression MethodInvocation gb MemberReference MemberReference c setConstraints StatementExpression MethodInvocation MemberReference add StatementExpression Assignment MemberReference c gridx Literal 3 = StatementExpression Assignment MemberReference c gridy Literal 4 = StatementExpression Assignment MemberReference c gridwidth Literal 2 = StatementExpression Assignment MemberReference c Literal 2 = LocalVariableDeclaration ReferenceType JScrollPane VariableDeclarator ClassCreator ReferenceType JScrollPane MemberReference MemberReference JScrollPane VERTICAL_SCROLLBAR_AS_NEEDED MemberReference JScrollPane StatementExpression MethodInvocation gb MemberReference MemberReference c setConstraints StatementExpression MethodInvocation MemberReference add	0
MethodDeclaration Modifier public BasicType boolean hasMoreTokens ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation < MemberReference sIdx MemberReference eIdx BinaryOperation != MemberReference savedToken Literal null BinaryOperation != MemberReference putToken Literal null	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isACompositeState getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType arg0 StatementExpression MethodInvocation updateModel	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement MethodInvocation ! MethodInvocation isEmpty	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int buttonCode ReturnStatement MethodInvocation Model MethodInvocation getException getMetaTypes	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object mClassifier StatementExpression Assignment MemberReference context ClassCreator ReferenceType MemberReference context MemberReference mClassifier =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object constraint IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Collaboration BinaryOperation instanceof MemberReference constraint ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType Collaboration MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference constraint	0
MethodDeclaration Modifier protected BasicType int getInitialX ReturnStatement Literal 0	0
MethodDeclaration Modifier public final template_head RecognitionException TokenStreamException StatementExpression MethodInvocation MemberReference LITERAL_template match StatementExpression MethodInvocation MemberReference LESSTHAN match StatementExpression MethodInvocation template_parameter_list StatementExpression MethodInvocation MemberReference GREATERTHAN match	1
MethodDeclaration Modifier public final mCOMMA FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference COMMA = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal ',' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier private FormalParameter ReferenceType HyperlinkEvent e IfStatement MethodInvocation e MethodInvocation MemberReference HyperlinkEvent.EventType ACTIVATED equals getEventType BlockStatement StatementExpression MethodInvocation MethodInvocation e getURL	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object component StatementExpression SuperMethodInvocation MemberReference handle MemberReference component StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference name get	0
MethodDeclaration Modifier public ReferenceType Object getValueOfTag FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object property ThrowStatement ClassCreator ReferenceType NotImplementedException	0
MethodDeclaration Modifier static ReferenceType StringBuilder FormalParameter ReferenceType Collection modelElements FormalParameter ReferenceType String separator LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator result ClassCreator ReferenceType StringBuilder ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference modelElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference element getName getFacade StatementExpression MethodInvocation result MethodInvocation MemberReference separator append MemberReference name append IfStatement BinaryOperation >= MethodInvocation result length MethodInvocation separator length BlockStatement StatementExpression MethodInvocation result BinaryOperation - MethodInvocation result length MethodInvocation separator length MethodInvocation result length delete ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected ReferenceType Fig createBigPortFig ReturnStatement ClassCreator ReferenceType FigRect MemberReference MemberReference Literal 0 Literal 0 MemberReference DEBUG_COLOR MemberReference DEBUG_COLOR	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression MethodInvocation MemberReference b StatementExpression MethodInvocation MemberReference b	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType int ReturnStatement MethodInvocation ordinal	0
MethodDeclaration Modifier public ReferenceType Object getInstance FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier protected Annotation Override BasicType boolean FormalParameter ReferenceType KeyEvent ke IfStatement BinaryOperation == BinaryOperation & MethodInvocation ke getModifiers BinaryOperation | MemberReference KeyEvent META_MASK MemberReference KeyEvent ALT_MASK Literal 0 BlockStatement ReturnStatement SuperMethodInvocation MemberReference ke BlockStatement ReturnStatement Literal false	0
MethodDeclaration Modifier protected Annotation Override updateLayout FormalParameter ReferenceType UmlChangeEvent event StatementExpression SuperMethodInvocation MemberReference event updateLayout StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean predicate FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation && MethodInvocation Model getFacade MethodInvocation Model getPseudostateKind	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object object IfStatement BinaryOperation instanceof MemberReference object ReferenceType UMLClassDiagram BlockStatement ReturnStatement ClassCreator ReferenceType ReturnStatement Literal null	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig createBigPortFig ReturnStatement ClassCreator ReferenceType BinaryOperation + MethodInvocation getInitialX Literal 1 BinaryOperation + MethodInvocation getInitialY Literal 1 BinaryOperation - MethodInvocation getInitialWidth Literal 2 BinaryOperation - MethodInvocation Literal 2 MemberReference DEBUG_COLOR MemberReference DEBUG_COLOR	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb IfStatement MemberReference isRef BlockStatement StatementExpression MethodInvocation sb Literal "ref " append IfStatement MemberReference isOut BlockStatement StatementExpression MethodInvocation sb Literal "out " append StatementExpression MethodInvocation expression MemberReference sb ToSource	1
MethodDeclaration Modifier public remove FormalParameter ReferenceType String key StatementExpression MethodInvocation propertyBundle MemberReference key remove	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BehavioralFeature BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder Literal SynchronizedStatement MemberReference list ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation iterator MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation sb MethodInvocation it next append IfStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation sb Literal ", " append StatementExpression MethodInvocation sb Literal "}" append ReturnStatement MethodInvocation sb toString	0
MethodDeclaration Modifier protected StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType getUmlFactory IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType getTabPanel IfStatement MemberReference ! initialized BlockStatement StatementExpression MethodInvocation ReturnStatement This	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "Not a element"	0
MethodDeclaration Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType UMLDeploymentDiagram dd LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation dd MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator obj MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigObject BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType FigObject VariableDeclarator fo Cast ReferenceType FigObject MemberReference obj LocalVariableDeclaration ReferenceType Fig VariableDeclarator enclosing MethodInvocation fo getEnclosingFig IfStatement BinaryOperation || BinaryOperation == MemberReference enclosing Literal null BinaryOperation || MethodInvocation Model MethodInvocation MethodInvocation enclosing getOwner isAComponent getFacade MethodInvocation Model MethodInvocation MethodInvocation enclosing getOwner isAComponentInstance getFacade BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference dd add StatementExpression MethodInvocation offs MemberReference fo add ReturnStatement MemberReference offs	1
MethodDeclaration Modifier public doAction FormalParameter BasicType int oldStep StatementExpression MethodInvocation LOG BinaryOperation + Literal "doAction " MemberReference oldStep debug LocalVariableDeclaration BasicType int VariableDeclarator choice Literal - 1 LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation item getOffenders SwitchStatement MemberReference oldStep SwitchStatementCase Literal 1 IfStatement BinaryOperation != MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference choice MethodInvocation step1 getSelectedIndex = IfStatement BinaryOperation == MemberReference choice Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType Error Literal "nothing selected, should not get StatementExpression Assignment MemberReference selectedCls MethodInvocation offs MemberReference choice get = BreakStatement SwitchStatementCase Literal 2 IfStatement BinaryOperation != MemberReference step2 Literal null BlockStatement StatementExpression Assignment MemberReference choice MethodInvocation step2 getSelectedIndex = IfStatement BinaryOperation == MemberReference choice Literal - 1 BlockStatement ThrowStatement ClassCreator ReferenceType Error Literal "nothing selected, should not get LocalVariableDeclaration ReferenceType Object VariableDeclarator ae Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference selectedCls getAssociationEnds MethodInvocation iterator getFacade ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator n Literal 0 BinaryOperation <= MemberReference n MemberReference choice MemberReference ++ n BlockStatement StatementExpression Assignment MemberReference ae MethodInvocation iter next = StatementExpression Assignment MemberReference selectedAsc MethodInvocation Model MethodInvocation MemberReference ae getAssociation getFacade = BreakStatement SwitchStatementCase Literal 3 IfStatement BinaryOperation != MemberReference selectedAsc Literal null BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator conns ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference selectedAsc getConnections getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator ae0 MethodInvocation conns Literal 0 get LocalVariableDeclaration ReferenceType Object VariableDeclarator ae1 MethodInvocation conns Literal 1 get TryStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference ae0 MethodInvocation Model MethodInvocation setAggregation1 getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference ae1 MethodInvocation Model MethodInvocation setAggregation1 getCoreHelper CatchClause CatchClauseParameter Exception pve StatementExpression MethodInvocation LOG Literal "could not set MemberReference pve error BreakStatement	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object mClassifier StatementExpression Assignment MemberReference context ClassCreator ReferenceType MemberReference context MemberReference mClassifier =	0
MethodDeclaration Modifier public addParameter FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType Parameter BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Event BlockStatement StatementExpression Cast ReferenceType Event MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement StatementExpression Cast ReferenceType BehavioralFeature MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement StatementExpression Cast ReferenceType Parameter MemberReference parameter ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or parameter: " MemberReference parameter	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement TernaryExpression BinaryOperation == MemberReference theNewTargets Literal null ArrayCreator ReferenceType Object ArrayInitializer MemberReference theNewTargets	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent event IfStatement BinaryOperation == MethodInvocation event getSource MemberReference theComboBox BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator item MethodInvocation theComboBox getSelectedItem StatementExpression MethodInvocation MemberReference item setButtonEnabled	1
MethodDeclaration BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType getCoreHelper IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This = ReturnStatement MemberReference	0
MethodDeclaration Modifier protected fireContentsChanged FormalParameter ReferenceType Object source FormalParameter BasicType int index0 FormalParameter BasicType int index1 IfStatement BinaryOperation && MemberReference fireListEvents MemberReference ! buildingModel BlockStatement StatementExpression SuperMethodInvocation MemberReference source MemberReference index0 MemberReference index1 fireContentsChanged	1
MethodDeclaration Modifier public setCondition FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object booleanExpression StatementExpression MethodInvocation impl MemberReference handle MemberReference booleanExpression setCondition	0
MethodDeclaration Modifier static ReferenceType Resource getResource FormalParameter ReferenceType modelImplementation FormalParameter ReferenceType URI uri FormalParameter BasicType boolean readOnly IfStatement BinaryOperation && Literal ! MethodInvocation MethodInvocation uri equals "xmi" Literal ! MethodInvocation MethodInvocation uri equals BlockStatement StatementExpression Assignment MemberReference uri MethodInvocation uri Literal "xmi" = LocalVariableDeclaration ReferenceType Resource VariableDeclarator r MethodInvocation modelImplementation MethodInvocation getResourceSet MethodInvocation MemberReference uri Literal false getResource IfStatement BinaryOperation == MemberReference r Literal null BlockStatement StatementExpression Assignment MemberReference r MethodInvocation modelImplementation MethodInvocation getResourceSet MethodInvocation MemberReference uri = IfStatement BinaryOperation == MemberReference r Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException BinaryOperation + Literal "Failed to create resource for URI " MemberReference uri StatementExpression MethodInvocation modelImplementation MethodInvocation MemberReference r MethodInvocation Boolean MemberReference readOnly valueOf put ReturnStatement MemberReference r	0
MethodDeclaration Modifier public final mAND FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference AND = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal "&&" match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement Literal MethodInvocation MethodInvocation evt getPropertyName equals "remove" BlockStatement StatementExpression MethodInvocation MethodInvocation evt getSource remove	0
MethodDeclaration Modifier public ReferenceType Object getInterface FormalParameter ReferenceType String name ClassifierNotFoundException ReturnStatement MethodInvocation MemberReference name Literal true get	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object cons ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object trans FormalParameter ReferenceType String ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType getIcon FormalParameter ReferenceType File f LocalVariableDeclaration ReferenceType VariableDeclarator persister MethodInvocation PersistenceManager MethodInvocation MethodInvocation f getName getInstance IfStatement BinaryOperation && BinaryOperation != MemberReference persister Literal null MethodInvocation persister BlockStatement ReturnStatement MethodInvocation Literal lookupIconResource BlockStatement ReturnStatement Literal null	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator action MethodInvocation IfStatement MethodInvocation MethodInvocation MemberReference Roles equals MemberReference ROLE getValue BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference action getStateMachinesHelper IfStatement MethodInvocation MethodInvocation MemberReference Roles equals MemberReference ROLE getValue BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference action getStateMachinesHelper IfStatement MethodInvocation MethodInvocation MemberReference Roles DO equals MemberReference ROLE getValue BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference action getStateMachinesHelper IfStatement MethodInvocation MethodInvocation MemberReference Roles equals MemberReference ROLE getValue BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference action getCollaborationsHelper IfStatement MethodInvocation MethodInvocation MemberReference Roles EFFECT equals MemberReference ROLE getValue BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference action getStateMachinesHelper IfStatement MethodInvocation MethodInvocation MemberReference Roles equals MemberReference ROLE getValue BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference action addAction getCommonBehaviorHelper StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference action setTarget getInstance	0
MethodDeclaration Modifier private layoutSection FormalParameter Modifier final ReferenceType Container parent FormalParameter Modifier final BasicType int sectionX FormalParameter Modifier final BasicType int sectionWidth FormalParameter Modifier final ReferenceType ArrayList components FormalParameter Modifier final BasicType int sectionNo LocalVariableDeclaration Modifier final ReferenceType ArrayList TypeArgument ReferenceType Integer VariableDeclarator rowHeights ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Integer LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation components size IfStatement BinaryOperation == MemberReference Literal 0 BlockStatement ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator labelWidth Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator unknownHeightCount Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator totalHeight Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration Modifier final ReferenceType Component VariableDeclarator childComp Cast ReferenceType Component MethodInvocation components MemberReference i get IfStatement BinaryOperation instanceof MemberReference childComp ReferenceType LabelledComponent BlockStatement LocalVariableDeclaration ReferenceType LabelledComponent VariableDeclarator Cast ReferenceType LabelledComponent MemberReference childComp LocalVariableDeclaration Modifier final ReferenceType JLabel VariableDeclarator label MethodInvocation getLabel IfStatement BinaryOperation != MemberReference label Literal null BlockStatement IfStatement BinaryOperation > MethodInvocation label MemberReference width getMinimumSize MemberReference labelWidth BlockStatement StatementExpression Assignment MemberReference labelWidth MethodInvocation label MemberReference width getMinimumSize = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator childHeight MethodInvocation MemberReference childComp IfStatement BinaryOperation == MemberReference childHeight Literal 0 BlockStatement StatementExpression MemberReference ++ unknownHeightCount StatementExpression Assignment MemberReference totalHeight BinaryOperation + MemberReference childHeight This MemberReference += StatementExpression MethodInvocation rowHeights ClassCreator ReferenceType Integer MemberReference childHeight add StatementExpression Assignment MemberReference totalHeight This MemberReference -= LocalVariableDeclaration Modifier final ReferenceType Insets VariableDeclarator insets MethodInvocation parent getInsets LocalVariableDeclaration Modifier final BasicType int VariableDeclarator parentHeight BinaryOperation - MethodInvocation parent getHeight BinaryOperation + MemberReference insets top MemberReference insets bottom LocalVariableDeclaration BasicType int VariableDeclarator y MemberReference insets top LocalVariableDeclaration BasicType int VariableDeclarator row Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Component VariableDeclarator childComp Cast ReferenceType Component MethodInvocation components MemberReference i get IfStatement MethodInvocation childComp isVisible BlockStatement IfStatement BinaryOperation instanceof MemberReference childComp ReferenceType LabelledComponent BlockStatement LocalVariableDeclaration Modifier final ReferenceType LabelledComponent VariableDeclarator Cast ReferenceType LabelledComponent MemberReference childComp LocalVariableDeclaration Modifier final ReferenceType JLabel VariableDeclarator label MethodInvocation getLabel IfStatement BinaryOperation != MemberReference label Literal null BlockStatement StatementExpression MethodInvocation label ClassCreator ReferenceType Dimension MemberReference labelWidth MethodInvocation label MemberReference height getPreferredSize setPreferredSize LocalVariableDeclaration BasicType int VariableDeclarator rowHeight LocalVariableDeclaration BasicType int VariableDeclarator componentWidth MemberReference sectionWidth LocalVariableDeclaration BasicType int VariableDeclarator componentX MemberReference sectionX StatementExpression Assignment MemberReference rowHeight MethodInvocation rowHeights MethodInvocation intValue MemberReference row get = IfStatement BinaryOperation == MemberReference rowHeight Literal 0 BlockStatement TryStatement StatementExpression Assignment MemberReference rowHeight MethodInvocation MemberReference parentHeight MemberReference totalHeight MemberReference -- unknownHeightCount MemberReference childComp calculateHeight = CatchClause CatchClauseParameter ArithmeticException e LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator lookAndFeel MethodInvocation UIManager MethodInvocation getClass MethodInvocation getName getLookAndFeel ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Division by zero laying out " MethodInvocation childComp MethodInvocation getName getClass Literal " on " MethodInvocation parent MethodInvocation getName getClass Literal " in section " MemberReference sectionNo Literal " using " MemberReference lookAndFeel MemberReference e StatementExpression Assignment MemberReference totalHeight MemberReference rowHeight += IfStatement BinaryOperation && BinaryOperation != MethodInvocation childComp Literal null BinaryOperation < MethodInvocation MemberReference childComp getMaximumWidth MemberReference componentWidth BlockStatement StatementExpression Assignment MemberReference componentWidth MethodInvocation MemberReference childComp getMaximumWidth = StatementExpression MethodInvocation childComp MemberReference componentX MemberReference y MemberReference componentWidth MemberReference rowHeight setBounds StatementExpression Assignment MemberReference y BinaryOperation + MemberReference rowHeight This MemberReference += StatementExpression MemberReference ++ row	1
MethodDeclaration BasicType int getBottomMargin ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Parameter getParameters FormalParameter ReferenceType Object handle IfStatement BinaryOperation || BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BinaryOperation instanceof MemberReference handle ReferenceType Event BlockStatement ReturnStatement MethodInvocation MemberReference handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier public static ReferenceType String ReturnStatement MethodInvocation System Literal "java.version" Literal "" getProperty	0
MethodDeclaration Modifier private rebuildModelList StatementExpression MethodInvocation removeAllElements StatementExpression Assignment MemberReference buildingModel Literal true = TryStatement StatementExpression MethodInvocation buildModelList CatchClause CatchClauseParameter InvalidElementException exception StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal threw exception for target " MethodInvocation getTarget Literal ": " MemberReference exception debug StatementExpression Assignment MemberReference buildingModel Literal false = IfStatement BinaryOperation > MethodInvocation getSize Literal 0 BlockStatement StatementExpression MethodInvocation This Literal 0 BinaryOperation - MethodInvocation getSize Literal 1 fireIntervalAdded	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Flow BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator SuperMethodInvocation StatementExpression Cast ReferenceType MemberReference w StatementExpression Cast ReferenceType MemberReference w	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference flat	0
MethodDeclaration Modifier public Annotation Override setEnclosingFig FormalParameter ReferenceType Fig encloser IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator comp MethodInvocation getOwner IfStatement BinaryOperation != MemberReference encloser Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator nodeOrComp MethodInvocation encloser getOwner IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrComp isANodeInstance getFacade BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference comp getFacade MemberReference nodeOrComp BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference comp MemberReference nodeOrComp getCommonBehaviorHelper StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrComp isAComponentInstance getFacade BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference comp getComponentInstance getFacade MemberReference nodeOrComp BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference comp MemberReference nodeOrComp setComponentInstance getCommonBehaviorHelper StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrComp isANode getFacade BlockStatement StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig IfStatement BinaryOperation != MethodInvocation getLayer Literal null BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator contents ClassCreator ReferenceType ArrayList MethodInvocation MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation contents iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdgeModelElement BlockStatement LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator figedge Cast ReferenceType FigEdgeModelElement MemberReference o StatementExpression MethodInvocation figedge MethodInvocation MemberReference figedge bringToFront getLayer IfStatement BinaryOperation && BinaryOperation && MethodInvocation isVisible BinaryOperation == MemberReference encloser Literal null BinaryOperation != MethodInvocation getEnclosingFig Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference comp getFacade Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference comp Literal null getCommonBehaviorHelper IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference comp getComponentInstance getFacade Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference comp Literal null setComponentInstance getCommonBehaviorHelper StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig	1
MethodDeclaration Modifier public ReferenceType Permission FormalParameter ReferenceType Object FormalParameter ReferenceType Object client ForStatement EnhancedForControl VariableDeclaration ReferenceType Dependency VariableDeclarator dependency MethodInvocation MemberReference MemberReference client getDependencies BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference dependency ReferenceType Permission MethodInvocation Model MethodInvocation MemberReference dependency MemberReference ModelManagementHelper hasStereotype getExtensionMechanismsHelper BlockStatement ReturnStatement Cast ReferenceType Permission MemberReference dependency ReturnStatement Literal null	0
MethodDeclaration Modifier public clear StatementExpression SuperMethodInvocation clear StatementExpression MethodInvocation Literal MethodInvocation size StatementExpression MethodInvocation Literal Literal false	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public save LocalVariableDeclaration ReferenceType Writer VariableDeclarator sw ClassCreator ReferenceType StringWriter Literal 1024 TryStatement StatementExpression MethodInvocation sw MemberReference XML_TAG write StatementExpression MethodInvocation sw MemberReference LINE_SEPARATOR write StatementExpression MethodInvocation sw MemberReference write StatementExpression MethodInvocation sw MemberReference LINE_SEPARATOR write StatementExpression Assignment MemberReference indent Literal "\t" = LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator dbEntries MethodInvocation databases entrySet ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator it MethodInvocation dbEntries iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator entry MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator className Cast ReferenceType String MethodInvocation entry getKey LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator mappings MethodInvocation entry getValue LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation sb MemberReference indent append StatementExpression MethodInvocation sb Literal "<tns:database name=\"" append StatementExpression MethodInvocation sb MemberReference className append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal "\">" append StatementExpression MethodInvocation sw MethodInvocation sb toString write StatementExpression MethodInvocation MemberReference sw MemberReference mappings writeMappings StatementExpression MethodInvocation sw Literal write StatementExpression MethodInvocation sw Literal write StatementExpression MethodInvocation sw close CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG Literal "Exception" MemberReference e error StatementExpression MethodInvocation Configuration MemberReference MAPPING_KEY MethodInvocation sw toString setString	1
MethodDeclaration Modifier public BasicType boolean contains FormalParameter BasicType int x FormalParameter BasicType int y ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation <= MemberReference _x MemberReference x BinaryOperation <= MemberReference x BinaryOperation + MemberReference _x MemberReference BinaryOperation <= MemberReference _y MemberReference y BinaryOperation <= MemberReference y BinaryOperation + MemberReference _y MemberReference	1
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement BinaryOperation == MethodInvocation e getSource MemberReference search BlockStatement StatementExpression MethodInvocation doSearch IfStatement BinaryOperation == MethodInvocation e getSource MemberReference clearTabs BlockStatement StatementExpression MethodInvocation IfStatement BinaryOperation == MethodInvocation e getSource MethodInvocation getOkButton BlockStatement StatementExpression MethodInvocation BlockStatement StatementExpression SuperMethodInvocation MemberReference e actionPerformed	1
MethodDeclaration Modifier public Annotation Override setFillColor FormalParameter ReferenceType Color col StatementExpression SuperMethodInvocation MemberReference col setFillColor StatementExpression MethodInvocation externalSeparatorFig MethodInvocation getLineColor setFillColor	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation Override ReferenceType Class TypeArgument ? getColumnClass FormalParameter BasicType int col SwitchStatement MemberReference col SwitchStatementCase Literal 0 ReturnStatement ClassReference ReferenceType String SwitchStatementCase Literal 1 ReturnStatement ClassReference ReferenceType KeyStroke SwitchStatementCase Literal 2 ReturnStatement ClassReference ReferenceType KeyStroke SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public stateChanged FormalParameter ReferenceType e StatementExpression MethodInvocation LOG Literal state changed" debug LocalVariableDeclaration ReferenceType Component VariableDeclarator sel MethodInvocation topLevelTabbedPane getSelectedComponent IfStatement BinaryOperation >= MemberReference lastNonNullTab Literal 0 BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator tab MethodInvocation tabPanelList MemberReference lastNonNullTab get IfStatement BinaryOperation instanceof MemberReference tab ReferenceType TargetListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType TargetListener MemberReference tab removeTargetListener LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getInstance IfStatement BinaryOperation && BinaryOperation instanceof MemberReference sel ReferenceType TabToDoTarget BinaryOperation instanceof MemberReference sel ReferenceType BlockStatement IfStatement BinaryOperation instanceof MemberReference sel ReferenceType TabTarget BlockStatement StatementExpression Cast ReferenceType TabTarget MemberReference sel IfStatement BinaryOperation instanceof MemberReference sel ReferenceType TargetListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType TargetListener MemberReference sel removeTargetListener StatementExpression MethodInvocation Cast ReferenceType TargetListener MemberReference sel addTargetListener StatementExpression Cast ReferenceType TargetListener MemberReference sel IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference target Literal null MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BinaryOperation > MethodInvocation topLevelTabbedPane getSelectedIndex Literal 0 BlockStatement StatementExpression Assignment MemberReference lastNonNullTab MethodInvocation topLevelTabbedPane getSelectedIndex =	1
MethodDeclaration Modifier public Annotation Override mouseClicked FormalParameter ReferenceType MouseEvent IfStatement MethodInvocation isConsumed BlockStatement ReturnStatement StatementExpression SuperMethodInvocation MemberReference mouseClicked IfStatement BinaryOperation && MethodInvocation isShiftDown BinaryOperation > MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation size getInstance Literal 0 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor IfStatement BinaryOperation != MemberReference ce Literal null BlockStatement LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel MethodInvocation ce MethodInvocation This getSelectionManager IfStatement BinaryOperation instanceof MemberReference sel ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference sel LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r ClassCreator ReferenceType Rectangle BinaryOperation - MethodInvocation getX Literal 1 BinaryOperation - MethodInvocation getY Literal 1 Literal 2 Literal 2 LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation MemberReference r IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigCompartment BlockStatement LocalVariableDeclaration ReferenceType FigCompartment VariableDeclarator Cast ReferenceType FigCompartment MemberReference f StatementExpression Assignment MemberReference f MethodInvocation MemberReference r = IfStatement BinaryOperation instanceof MemberReference f ReferenceType CompartmentFigText BlockStatement StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference f setTarget getInstance	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Configuration MemberReference DiagramAppearance getBoolean StatementExpression MethodInvocation MethodInvocation ! Configuration MemberReference DiagramAppearance Literal true getBoolean StatementExpression MethodInvocation MethodInvocation Configuration MemberReference DiagramAppearance Literal 1 getInteger StatementExpression MethodInvocation MethodInvocation Configuration MemberReference ProfileConfiguration MemberReference DiagramAppearance STEREOTYPE_VIEW_TEXTUAL getInteger StatementExpression MethodInvocation MethodInvocation DiagramAppearance MethodInvocation getInstance StatementExpression MethodInvocation MethodInvocation Configuration MemberReference DiagramAppearance getInteger setFontSize	0
MethodDeclaration Modifier public ReferenceType Object getModelElement FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BlockStatement ReturnStatement Cast ReferenceType ElementImport MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BlockStatement ReturnStatement Cast ReferenceType TaggedValue MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	1
MethodDeclaration Modifier public ReferenceType Object getTarget ReturnStatement Cast ReferenceType UMLComboBoxModel MethodInvocation getModel	0
MethodDeclaration Modifier public IfStatement MethodInvocation ! ignore BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType =	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isAAssociationRole getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Iterator VariableDeclarator assocEnds MethodInvocation Model MethodInvocation MemberReference dm getConnections MethodInvocation iterator getFacade LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false WhileStatement MethodInvocation assocEnds hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation assocEnds next LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference ae getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference type isAInterface getFacade BlockStatement StatementExpression Assignment MemberReference Literal true = IfStatement MethodInvocation Model MethodInvocation MemberReference ae isNavigable getFacade BlockStatement StatementExpression Assignment MemberReference Literal true = IfStatement BinaryOperation && MemberReference MemberReference BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object execute StatementExpression MethodInvocation Model MethodInvocation getPump StatementExpression Assignment MemberReference creatingCurrentProject Literal true = StatementExpression MethodInvocation LOG Literal "making empty project" info LocalVariableDeclaration ReferenceType Project VariableDeclarator newProject ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference newProject IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference newProject StatementExpression Assignment MemberReference creatingCurrentProject Literal false = StatementExpression MethodInvocation MemberReference newProject StatementExpression MethodInvocation Model MethodInvocation getPump ReturnStatement Literal null	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionCreatePseudostate MethodInvocation Model MethodInvocation getChoice getPseudostateKind Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object dependency FormalParameter Modifier final ReferenceType Object element IfStatement BinaryOperation instanceof MemberReference dependency ReferenceType Dependency BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The dependency must be instance of IfStatement BinaryOperation instanceof MemberReference element ReferenceType NamedElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The element must be instance of LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType Dependency MemberReference dependency StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the client to the dependency #" MemberReference element MemberReference dependency execute getCommandStack	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object stimulus IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference handle Literal null BinaryOperation != MemberReference stimulus Literal null BinaryOperation instanceof MemberReference stimulus ReferenceType BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement StatementExpression Cast ReferenceType MemberReference stimulus ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference stimulus ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference stimulus	1
MethodDeclaration Modifier public moveToTrash FormalParameter ReferenceType Object obj IfStatement BinaryOperation instanceof MemberReference obj ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i Cast ReferenceType Collection MemberReference obj WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation i next IfStatement MethodInvocation ! MemberReference contains BlockStatement StatementExpression MethodInvocation MemberReference BlockStatement IfStatement MethodInvocation ! MemberReference obj contains BlockStatement StatementExpression MethodInvocation MemberReference obj	0
MethodDeclaration Modifier public ReferenceType getMenuTextFont ReturnStatement MemberReference	1
MethodDeclaration Modifier public ReferenceType String getAttributeValue FormalParameter BasicType int i ReturnStatement MethodInvocation attributes MemberReference i getValue	0
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType Class MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier protected IfStatement MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference target MemberReference propertyName addModelEventListener getPump StatementExpression MethodInvocation LOG Literal for debug	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig createBigPortFig LocalVariableDeclaration ReferenceType VariableDeclarator frr ClassCreator ReferenceType BinaryOperation + MemberReference Literal 1 BinaryOperation + MemberReference Literal 1 BinaryOperation - MemberReference STATE_WIDTH Literal 2 BinaryOperation - MemberReference HEIGHT Literal 2 MemberReference DEBUG_COLOR MemberReference DEBUG_COLOR StatementExpression MethodInvocation frr BinaryOperation / MethodInvocation frr getHeight Literal 2 setCornerRadius ReturnStatement MemberReference frr	0
MethodDeclaration Modifier public static setDouble FormalParameter ReferenceType ConfigurationKey key FormalParameter BasicType double newValue StatementExpression MethodInvocation config MemberReference key MemberReference newValue setDouble	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color arg0 StatementExpression SuperMethodInvocation MemberReference arg0 setLineColor IfStatement BinaryOperation != MethodInvocation getAssociationClass Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference arg0 setLineColor getAssociationClass IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference arg0 setLineColor	0
MethodDeclaration Modifier public setIncludes FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection includes IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Include VariableDeclarator inc MethodInvocation Model MethodInvocation MemberReference handle getFacade IfStatement MethodInvocation ! inc isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Include VariableDeclarator in ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Include MemberReference inc ForStatement EnhancedForControl VariableDeclaration ReferenceType Include VariableDeclarator i MemberReference in BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference i ForStatement EnhancedForControl VariableDeclaration ReferenceType Include VariableDeclarator i Cast ReferenceType Collection TypeArgument ReferenceType Include MemberReference includes BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference i ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or includes: " MemberReference includes	1
MethodDeclaration Modifier public FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator arg MethodInvocation e IfStatement BinaryOperation instanceof MemberReference source ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference source Cast ReferenceType Fig MemberReference source = IfStatement BinaryOperation instanceof MemberReference arg ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference arg Cast ReferenceType Fig MemberReference arg = StatementExpression MethodInvocation Model MethodInvocation MemberReference source MemberReference arg getDiagramInterchangeModel	0
MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType Rectangle r LocalVariableDeclaration BasicType int VariableDeclarator cornersHit MethodInvocation MemberReference r x MemberReference r y MemberReference r width MemberReference r height countCornersContained IfStatement MemberReference BlockStatement ReturnStatement BinaryOperation || BinaryOperation > MemberReference cornersHit Literal 0 MethodInvocation MemberReference r intersects ReturnStatement BinaryOperation || BinaryOperation && BinaryOperation > MemberReference cornersHit Literal 0 BinaryOperation < MemberReference cornersHit Literal 4 MethodInvocation MemberReference r intersects	1
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent e IfStatement MethodInvocation e MethodInvocation MemberReference propertySetName equals getPropertyName BlockStatement StatementExpression MethodInvocation buildModel	0
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation Literal "remove" Literal null Literal null StatementExpression MethodInvocation notifier ClassCreator ReferenceType Literal "remove" This Literal 0 sendNotification	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent arg0 LocalVariableDeclaration ReferenceType Editor VariableDeclarator ed MethodInvocation Globals curEditor IfStatement BinaryOperation == MemberReference ed Literal null BlockStatement ReturnStatement IfStatement BinaryOperation || BinaryOperation == MemberReference Literal 0 BinaryOperation && BinaryOperation > BinaryOperation * MethodInvocation ed MemberReference BinaryOperation / MemberReference ZoomSliderButton MINIMUM_ZOOM Literal 100.0 BinaryOperation < BinaryOperation * MethodInvocation ed MemberReference BinaryOperation / MemberReference ZoomSliderButton MAXIMUM_ZOOM Literal 100.0 BlockStatement StatementExpression SuperMethodInvocation MemberReference arg0 actionPerformed	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object expression LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal "There is no StatementExpression MethodInvocation Model MethodInvocation MemberReference target Literal null getStateMachinesHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference expression getStateMachinesHelper	0
MethodDeclaration BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier protected Annotation Override ReferenceType FormalParameter ReferenceType Object owner FormalParameter ReferenceType Rectangle bounds FormalParameter ReferenceType DiagramSettings settings ReturnStatement ClassCreator ReferenceType MemberReference owner MemberReference bounds MemberReference settings	0
MethodDeclaration Modifier public select ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation getOffenders BlockStatement IfStatement BinaryOperation instanceof MemberReference dm ReferenceType Highlightable BlockStatement StatementExpression Cast ReferenceType Highlightable MemberReference dm	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference moreInfoURL	0
MethodDeclaration Modifier public ReferenceType Object StatementExpression MethodInvocation StatementExpression Assignment MemberReference pmw MethodInvocation = StatementExpression MethodInvocation ArgoFrame MethodInvocation MethodInvocation Cursor MemberReference Cursor WAIT_CURSOR getPredefinedCursor setCursor getFrame LocalVariableDeclaration ReferenceType Object VariableDeclarator retVal Literal null StatementExpression Assignment MemberReference timer ClassCreator ReferenceType Timer Literal 25 ClassCreator ReferenceType = StatementExpression MethodInvocation timer start TryStatement StatementExpression Assignment MemberReference retVal MethodInvocation MemberReference pmw construct = CatchClause CatchClauseParameter Exception exc StatementExpression MethodInvocation LOG Literal "Error while loading project: " MemberReference exc error StatementExpression MethodInvocation pmw close ReturnStatement MemberReference retVal	1
MethodDeclaration Modifier public final direct_declarator RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType Token VariableDeclarator dtor Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator id Literal "" SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase TILDE BlockStatement StatementExpression MethodInvocation MemberReference TILDE match StatementExpression Assignment MemberReference dtor MethodInvocation Literal 1 LT = StatementExpression MethodInvocation MemberReference ID match IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation dtor getText MemberReference CPPvariables QI_DTOR declaratorID StatementExpression MethodInvocation MemberReference LPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_typedef LITERAL_enum ID LITERAL_inline LITERAL_extern LITERAL__inline LITERAL___inline LITERAL_virtual LITERAL_explicit LITERAL_friend LITERAL__stdcall LITERAL___stdcall LITERAL__declspec LITERAL___declspec LPAREN LITERAL_typename LITERAL_auto LITERAL_register LITERAL_static LITERAL_mutable LITERAL_const LITERAL_const_cast LITERAL_volatile LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void LITERAL_class LITERAL_struct LITERAL_union OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE ELLIPSIS SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation parameter_list BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RPAREN match BreakStatement SwitchStatementCase LPAREN BlockStatement StatementExpression MethodInvocation MemberReference LPAREN match StatementExpression MethodInvocation declarator StatementExpression MethodInvocation MemberReference RPAREN match StatementExpression MethodInvocation declarator_suffixes BreakStatement SwitchStatementCase LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched203 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_29 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_16 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m203 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched203 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation qualified_id StatementExpression MethodInvocation MemberReference LPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase RPAREN BlockStatement StatementExpression MethodInvocation MemberReference RPAREN match BreakStatement SwitchStatementCase LITERAL_typedef LITERAL_enum ID LITERAL_inline LITERAL_extern LITERAL__inline LITERAL___inline LITERAL_virtual LITERAL_explicit LITERAL_friend LITERAL__stdcall LITERAL___stdcall LITERAL__declspec LITERAL___declspec LITERAL_typename LITERAL_auto LITERAL_register LITERAL_static LITERAL_mutable LITERAL_const LITERAL_const_cast LITERAL_volatile LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void LITERAL_class LITERAL_struct LITERAL_union SCOPE BlockStatement StatementExpression MethodInvocation declaration_specifiers BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched203 Literal false = StatementExpression MethodInvocation MemberReference _m203 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched203 BlockStatement StatementExpression Assignment MemberReference id MethodInvocation qualified_id = IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference id MemberReference CPPvariables QI_FUN declaratorID StatementExpression MethodInvocation m MemberReference id MemberReference _td directDeclarator StatementExpression MethodInvocation MemberReference LPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_typedef LITERAL_enum ID LITERAL_inline LITERAL_extern LITERAL__inline LITERAL___inline LITERAL_virtual LITERAL_explicit LITERAL_friend LITERAL__stdcall LITERAL___stdcall LITERAL__declspec LITERAL___declspec LPAREN LITERAL_typename LITERAL_auto LITERAL_register LITERAL_static LITERAL_mutable LITERAL_const LITERAL_const_cast LITERAL_volatile LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void LITERAL_class LITERAL_struct LITERAL_union OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE ELLIPSIS SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation parameter_list BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RPAREN match BlockStatement DoStatement _loop206 Literal true BlockStatement IfStatement BinaryOperation && BinaryOperation >= MethodInvocation Literal 1 LA MemberReference LITERAL_const BinaryOperation <= MethodInvocation Literal 1 LA MemberReference LITERAL_volatile BlockStatement StatementExpression MethodInvocation type_qualifier BlockStatement BreakStatement _loop206 BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_throw BlockStatement StatementExpression MethodInvocation exception_specification BreakStatement SwitchStatementCase LESSTHAN GREATERTHAN ID SEMICOLON RCURLY ASSIGNEQUAL COLON COMMA LITERAL__stdcall LITERAL___stdcall LPAREN RPAREN OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND LSQUARE RSQUARE TILDE ELLIPSIS TIMESEQUAL DIVIDEEQUAL MINUSEQUAL PLUSEQUAL MODEQUAL SHIFTLEFTEQUAL SHIFTRIGHTEQUAL BITWISEANDEQUAL BITWISEXOREQUAL BITWISEOREQUAL QUESTIONMARK OR AND BITWISEOR BITWISEXOR NOTEQUAL EQUAL LESSTHANOREQUALTO GREATERTHANOREQUALTO SHIFTLEFT SHIFTRIGHT PLUS MINUS DIVIDE MOD DOTMBR POINTERTOMBR SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched209 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_29 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_16 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m209 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched209 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation qualified_id StatementExpression MethodInvocation MemberReference LPAREN match StatementExpression MethodInvocation qualified_id CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched209 Literal false = StatementExpression MethodInvocation MemberReference _m209 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched209 BlockStatement StatementExpression Assignment MemberReference id MethodInvocation qualified_id = IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference id MemberReference CPPvariables QI_VAR declaratorID StatementExpression MethodInvocation MemberReference LPAREN match StatementExpression MethodInvocation expression_list StatementExpression MethodInvocation MemberReference RPAREN match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched211 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_29 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_16 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m211 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched211 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation qualified_id StatementExpression MethodInvocation MemberReference LSQUARE match CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched211 Literal false = StatementExpression MethodInvocation MemberReference _m211 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched211 BlockStatement StatementExpression Assignment MemberReference id MethodInvocation qualified_id = IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference _td Literal true StatementExpression MethodInvocation MemberReference id MemberReference CPPvariables QI_TYPE declaratorID StatementExpression MethodInvocation MemberReference id MemberReference CPPvariables QI_VAR declaratorID BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _cnt214 Literal 0 DoStatement _loop214 Literal true BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LSQUARE MethodInvocation _tokenSet_32 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation MemberReference LSQUARE match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID StringLiteral LITERAL__declspec LITERAL___declspec LPAREN LITERAL_const_cast LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void OPERATOR LITERAL_this LITERAL_true LITERAL_false OCTALINT STAR AMPERSAND TILDE PLUS MINUS PLUSPLUS MINUSMINUS LITERAL_sizeof SCOPE LITERAL_dynamic_cast LITERAL_static_cast LITERAL_reinterpret_cast NOT LITERAL_new LITERAL_delete DECIMALINT HEXADECIMALINT CharLiteral FLOATONE FLOATTWO BlockStatement StatementExpression MethodInvocation constant_expression BreakStatement SwitchStatementCase RSQUARE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RSQUARE match BlockStatement IfStatement BinaryOperation >= MemberReference _cnt214 Literal 1 BlockStatement BreakStatement _loop214 BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MemberReference ++ _cnt214 IfStatement BinaryOperation && MethodInvocation _tokenSet_29 MethodInvocation Literal 1 LA member MethodInvocation MethodInvocation Literal 2 LA member BlockStatement StatementExpression Assignment MemberReference id MethodInvocation qualified_id = IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference _td Literal true StatementExpression MethodInvocation MemberReference id MemberReference CPPvariables QI_TYPE declaratorID StatementExpression MethodInvocation MemberReference id MemberReference CPPvariables QI_VAR declaratorID StatementExpression MethodInvocation m MemberReference id MemberReference _td directDeclarator BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier private BasicType long parseAttributeModifiers FeatureNotSupportedException LocalVariableDeclaration BasicType long VariableDeclarator result MemberReference Modifier Empty LocalVariableDeclaration ReferenceType String VariableDeclarator curIdent Literal "" LocalVariableDeclaration BasicType boolean VariableDeclarator isMod Literal true WhileStatement MemberReference isMod BlockStatement SwitchStatement MemberReference curtok id SwitchStatementCase MemberReference TokenID Ident StatementExpression Assignment MemberReference curIdent MethodInvocation strings MemberReference curtok data get = IfStatement MethodInvocation curIdent Literal "field" equals BlockStatement StatementExpression Assignment MemberReference result MemberReference Modifier Field |= IfStatement MethodInvocation curIdent Literal "method" equals BlockStatement StatementExpression Assignment MemberReference result MemberReference Modifier Method |= IfStatement MethodInvocation curIdent Literal "param" equals BlockStatement StatementExpression Assignment MemberReference result MemberReference Modifier Param |= IfStatement MethodInvocation curIdent Literal "property" equals BlockStatement StatementExpression Assignment MemberReference result MemberReference Modifier Property |= IfStatement MethodInvocation curIdent Literal "type" equals BlockStatement StatementExpression Assignment MemberReference result MemberReference Modifier Type |= IfStatement MethodInvocation curIdent Literal "module" equals BlockStatement StatementExpression Assignment MemberReference result MemberReference Modifier Module |= IfStatement MethodInvocation curIdent Literal "assembly" equals BlockStatement StatementExpression Assignment MemberReference result MemberReference Modifier Assembly |= BlockStatement StatementExpression Assignment MemberReference isMod Literal false = StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase MemberReference TokenID Return StatementExpression Assignment MemberReference result MemberReference Modifier Return |= StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase MemberReference TokenID Event StatementExpression Assignment MemberReference result MemberReference Modifier Event |= StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference isMod Literal false = BreakStatement ReturnStatement MemberReference result	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String url LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator suffix MethodInvocation MemberReference url IfStatement MethodInvocation suffix Literal endsWith BlockStatement StatementExpression Assignment MemberReference url BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "jar:" MemberReference url Literal "!/" MethodInvocation suffix Literal 0 BinaryOperation - MethodInvocation suffix length Literal 6 substring Literal ".xmi" = IfStatement BinaryOperation || MethodInvocation suffix Literal ".zip" endsWith MethodInvocation suffix Literal ".jar" endsWith BlockStatement StatementExpression Assignment MemberReference url BinaryOperation + BinaryOperation + BinaryOperation + Literal "jar:" MemberReference url Literal "!/" MethodInvocation suffix Literal 0 BinaryOperation - MethodInvocation suffix length Literal 4 substring = ReturnStatement MemberReference url	0
MethodDeclaration Modifier protected Annotation Override BasicType int getInitialWidth ReturnStatement Literal	0
MethodDeclaration Modifier public Annotation Deprecated setTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType String tag FormalParameter ReferenceType String value ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier public formatCallout FormalParameter ReferenceType DOMBuilder rtf FormalParameter ReferenceType Callout callout LocalVariableDeclaration ReferenceType Element VariableDeclarator area MethodInvocation callout getArea LocalVariableDeclaration BasicType int VariableDeclarator num MethodInvocation callout getCallout LocalVariableDeclaration ReferenceType String VariableDeclarator label MethodInvocation MemberReference area areaLabel TryStatement IfStatement BinaryOperation && BinaryOperation == MemberReference label Literal null BinaryOperation <= MemberReference num MemberReference graphicsMax BlockStatement LocalVariableDeclaration ReferenceType AttributesImpl VariableDeclarator imgAttr ClassCreator ReferenceType AttributesImpl LocalVariableDeclaration ReferenceType String VariableDeclarator ns Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator prefix Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator imgName Literal "" IfStatement MemberReference BlockStatement StatementExpression Assignment MemberReference ns MemberReference foURI = StatementExpression Assignment MemberReference prefix Literal "fo:" = StatementExpression Assignment MemberReference imgName Literal "external-graphic" = StatementExpression MethodInvocation imgAttr Literal "" Literal "src" Literal "src" Literal "CDATA" BinaryOperation + BinaryOperation + MemberReference graphicsPath MemberReference num MemberReference graphicsExt addAttribute StatementExpression MethodInvocation imgAttr Literal "" Literal "alt" Literal "alt" Literal "CDATA" MemberReference label addAttribute BlockStatement StatementExpression Assignment MemberReference ns Literal "" = StatementExpression Assignment MemberReference prefix Literal "" = StatementExpression Assignment MemberReference imgName Literal "img" = StatementExpression MethodInvocation imgAttr Literal "" Literal "src" Literal "src" Literal "CDATA" BinaryOperation + BinaryOperation + MemberReference graphicsPath MemberReference num MemberReference graphicsExt addAttribute StatementExpression MethodInvocation imgAttr Literal "" Literal "alt" Literal "alt" Literal "CDATA" MemberReference label addAttribute StatementExpression MethodInvocation MemberReference rtf startSpan StatementExpression MethodInvocation rtf MemberReference ns MemberReference imgName BinaryOperation + MemberReference prefix MemberReference imgName MemberReference imgAttr startElement StatementExpression MethodInvocation rtf MemberReference ns MemberReference imgName BinaryOperation + MemberReference prefix MemberReference imgName endElement StatementExpression MethodInvocation MemberReference rtf endSpan BlockStatement StatementExpression MethodInvocation MemberReference rtf MemberReference callout formatTextCallout CatchClause CatchClauseParameter SAXException e StatementExpression MethodInvocation System.out Literal "SAX Exception in graphics formatCallout" println	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index IfStatement BinaryOperation == MemberReference index Literal 0 BlockStatement StatementExpression Assignment MemberReference index MethodInvocation = LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent getNamespace getFacade SwitchStatement MemberReference index SwitchStatementCase Literal 10 LocalVariableDeclaration ReferenceType Object VariableDeclarator clazz MethodInvocation Model MethodInvocation MemberReference ns buildClass getCoreFactory StatementExpression MethodInvocation StereotypeUtility MemberReference clazz Literal Literal false dealWithStereotypes ReturnStatement MemberReference clazz SwitchStatementCase Literal 11 LocalVariableDeclaration ReferenceType Object VariableDeclarator st MethodInvocation Model MethodInvocation getExtensionMechanismsFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference st MemberReference ns setNamespace getCoreHelper ReturnStatement MemberReference st ReturnStatement Literal null	1
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object source IfStatement BinaryOperation instanceof MemberReference source ReferenceType ArgoDiagram BlockStatement ReturnStatement Cast ReferenceType ArgoDiagram MemberReference source ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean isANodeInstance FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier protected StatementExpression MethodInvocation MemberReference listeners removeElementListeners	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType p1 StatementExpression MethodInvocation model MethodInvocation getText setLanguage	0
MethodDeclaration Modifier public IfStatement BinaryOperation != MemberReference elements Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference elements length MemberReference ++ i BlockStatement StatementExpression MethodInvocation Cast ReferenceType String MemberReference ArraySelector MemberReference i ArraySelector Literal 0 elements Cast ReferenceType Boolean MemberReference ArraySelector MemberReference i ArraySelector Literal 1 elements setSelected StatementExpression MethodInvocation Literal false doLoad	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator features MethodInvocation Model MethodInvocation MemberReference dm getFeatures getFacade IfStatement BinaryOperation == MemberReference features Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration BasicType int VariableDeclarator n Literal 0 ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation features iterator MethodInvocation iter hasNext BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation iter next isAStructuralFeature getFacade BlockStatement StatementExpression MemberReference ++ n IfStatement BinaryOperation <= MemberReference n MethodInvocation getThreshold BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	1
MethodDeclaration Modifier private ReferenceType ZipInputStream openZipStreamAt FormalParameter ReferenceType URL url FormalParameter ReferenceType String ext IOException LocalVariableDeclaration ReferenceType ZipInputStream VariableDeclarator zis ClassCreator ReferenceType ZipInputStream MethodInvocation url openStream LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator entry MethodInvocation zis getNextEntry WhileStatement BinaryOperation && BinaryOperation != MemberReference entry Literal null MethodInvocation ! entry MethodInvocation MemberReference ext endsWith getName BlockStatement StatementExpression Assignment MemberReference entry MethodInvocation zis getNextEntry = ReturnStatement MemberReference zis	1
MethodDeclaration Modifier public FormalParameter ReferenceType String stereoName FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference modelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator stereo MethodInvocation MemberReference stereoName StatementExpression MethodInvocation MethodInvocation MemberReference modelElement MemberReference stereo addStereotype getCoreHelper	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier private AssertAndAdvance FormalParameter BasicType int id FeatureNotSupportedException IfStatement BinaryOperation != MemberReference curtok id MemberReference id BlockStatement StatementExpression MethodInvocation MemberReference id RecoverFromError StatementExpression MethodInvocation advance	1
MethodDeclaration Modifier public ReferenceType NotationSettings getNotationSettings ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Fig FormalParameter ReferenceType Rectangle r ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection LocalVariableDeclaration ReferenceType Object VariableDeclarator pstate MethodInvocation getOwner LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel Literal null IfStatement BinaryOperation != MemberReference pstate Literal null BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal "1" startsWith getFacade MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference pstate getContainer getFacade getStateMachine getFacade getFacade BlockStatement StatementExpression Assignment MemberReference sel ClassCreator ReferenceType SelectionActionState This = StatementExpression Cast ReferenceType SelectionActionState MemberReference sel LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation getOwner getFacade StatementExpression Cast ReferenceType SelectionActionState MemberReference sel BlockStatement StatementExpression Assignment MemberReference sel ClassCreator ReferenceType SelectionState This = StatementExpression Cast ReferenceType SelectionState MemberReference sel LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation getOwner getFacade StatementExpression Cast ReferenceType SelectionState MemberReference sel ReturnStatement MemberReference sel	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object operation FormalParameter ReferenceType Object classifier FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation MemberReference operation MemberReference classifier MemberReference name StatementExpression MethodInvocation Model MethodInvocation MemberReference parameter MethodInvocation Model MethodInvocation getDirectionKind getCoreHelper ReturnStatement MemberReference parameter	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String name FormalParameter ReferenceType Object ReturnStatement MethodInvocation MemberReference name MemberReference put	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Configuration MemberReference Argo Literal true getBoolean setSelected StatementExpression MethodInvocation MethodInvocation Configuration MemberReference Argo Literal false getBoolean setSelected StatementExpression MethodInvocation MethodInvocation Configuration MemberReference Argo Literal false getBoolean setSelected	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator dependency MethodInvocation StatementExpression MethodInvocation dependency MethodInvocation Cast ReferenceType NamedElement MemberReference add StatementExpression MethodInvocation dependency MethodInvocation Cast ReferenceType NamedElement MemberReference add getSuppliers StatementExpression Cast ReferenceType NamedElement MemberReference StatementExpression MethodInvocation MethodInvocation MemberReference dependency add	0
MethodDeclaration Modifier public ReferenceType T nextElement ReturnStatement MethodInvocation it next	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection StatementExpression MethodInvocation impl MemberReference handle MemberReference	0
MethodDeclaration Modifier public ReferenceType Element getModelElementContainer FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType Element MemberReference handle	0
MethodDeclaration Modifier public ReferenceType String getBaseName FormalParameter ReferenceType String n LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation MemberReference n IfStatement BinaryOperation == MemberReference p Literal null BlockStatement ReturnStatement MemberReference n LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MethodInvocation p MethodInvocation length getExtension Literal 1 ReturnStatement MethodInvocation n Literal 0 BinaryOperation - MethodInvocation n length MemberReference substring	0
MethodDeclaration Modifier public FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator arg MethodInvocation e IfStatement BinaryOperation instanceof MemberReference source ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference source Cast ReferenceType Fig MemberReference source = IfStatement BinaryOperation instanceof MemberReference arg ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference arg Cast ReferenceType Fig MemberReference arg = StatementExpression MethodInvocation Model MethodInvocation MemberReference source MemberReference arg getDiagramInterchangeModel	0
MethodDeclaration Modifier public Annotation Override BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object target StatementExpression Assignment MemberReference target TernaryExpression BinaryOperation instanceof MemberReference target ReferenceType Fig Cast ReferenceType Fig MemberReference target MemberReference target = StatementExpression MethodInvocation Literal false setShouldBeEnabled ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator p MemberReference BlockStatement IfStatement MethodInvocation p MemberReference target evaluate BlockStatement StatementExpression MethodInvocation Literal true setShouldBeEnabled ReturnStatement MethodInvocation shouldBeEnabled	1
MethodDeclaration Modifier public ReferenceType List ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType String getVersion ReturnStatement MemberReference version	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Property property LocalVariableDeclaration ReferenceType Object VariableDeclarator value Literal null LocalVariableDeclaration ReferenceType Type VariableDeclarator type MethodInvocation property getType IfStatement BinaryOperation != MemberReference type Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tname MethodInvocation type getName IfStatement MethodInvocation PTYPE_BOOLEAN_NAME MemberReference tname equals BlockStatement StatementExpression Assignment MemberReference value MemberReference Boolean FALSE = IfStatement MethodInvocation PTYPE_INTEGER_NAME MemberReference tname equals BlockStatement StatementExpression Assignment MemberReference value ClassCreator ReferenceType Integer Literal 0 = IfStatement MethodInvocation PTYPE_STRING_NAME MemberReference tname equals BlockStatement StatementExpression Assignment MemberReference value ClassCreator ReferenceType String = IfStatement MethodInvocation PTYPE_UNATURAL_NAME MemberReference tname equals BlockStatement StatementExpression Assignment MemberReference value ClassCreator ReferenceType Integer Literal 0 = ReturnStatement MemberReference value	1
MethodDeclaration Modifier public StatementExpression MethodInvocation typeInstanceValueList Literal 0 setSelectedIndex	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getDescription ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object FormalParameter ReferenceType Collection StatementExpression MethodInvocation impl MemberReference MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String lang FormalParameter ReferenceType String body ReturnStatement MethodInvocation Model MethodInvocation MemberReference lang MemberReference body getDataTypesFactory	0
MethodDeclaration Modifier private ReferenceType String generateVisibility FormalParameter ReferenceType Object o IfStatement MethodInvocation Model MethodInvocation MemberReference o isAFeature getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation Model MethodInvocation MemberReference o Literal "src_visibility" getTaggedValue getFacade IfStatement BinaryOperation != MemberReference tv Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tagged Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference tv getValue getFacade IfStatement BinaryOperation != MemberReference tagged Literal null BlockStatement IfStatement BinaryOperation || BinaryOperation || MethodInvocation tagged MethodInvocation Literal "" equals trim MethodInvocation tagged MethodInvocation toLowerCase MethodInvocation Literal "package" equals trim MethodInvocation tagged MethodInvocation toLowerCase MethodInvocation Literal "default" equals trim BlockStatement ReturnStatement Literal "" ReturnStatement BinaryOperation + MemberReference tagged Literal " " IfStatement MethodInvocation Model MethodInvocation MemberReference o isAModelElement getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference o isPublic getFacade BlockStatement ReturnStatement Literal "public " IfStatement MethodInvocation Model MethodInvocation MemberReference o isPrivate getFacade BlockStatement ReturnStatement Literal "private " IfStatement MethodInvocation Model MethodInvocation MemberReference o isProtected getFacade BlockStatement ReturnStatement Literal "protected " IfStatement MethodInvocation Model MethodInvocation MemberReference o isPackage getFacade BlockStatement ReturnStatement Literal "" IfStatement MethodInvocation Model MethodInvocation MemberReference o isAVisibilityKind getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation getPublic MethodInvocation MemberReference o equals getVisibilityKind BlockStatement ReturnStatement Literal "public " IfStatement MethodInvocation Model MethodInvocation getPrivate MethodInvocation MemberReference o equals getVisibilityKind BlockStatement ReturnStatement Literal "private " IfStatement MethodInvocation Model MethodInvocation getProtected MethodInvocation MemberReference o equals getVisibilityKind BlockStatement ReturnStatement Literal "protected " IfStatement MethodInvocation Model MethodInvocation getPackage MethodInvocation MemberReference o equals getVisibilityKind BlockStatement ReturnStatement Literal "" ReturnStatement Literal ""	1
MethodDeclaration Modifier public Annotation Override removeFromDiagramImpl LocalVariableDeclaration BasicType int VariableDeclarator width MethodInvocation getWidth LocalVariableDeclaration ReferenceType FigPool VariableDeclarator MethodInvocation IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression SuperMethodInvocation removeFromDiagramImpl ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation - MethodInvocation getWidth MemberReference width StatementExpression SuperMethodInvocation removeFromDiagramImpl LocalVariableDeclaration ReferenceType FigPartition VariableDeclarator next MemberReference WhileStatement BinaryOperation != MemberReference next Literal null BlockStatement StatementExpression MethodInvocation next MemberReference - width StatementExpression Assignment MemberReference next MemberReference next = IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation removeFromDiagram ReturnStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal null StatementExpression MethodInvocation Literal null StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType WizMEName BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation w LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation item MethodInvocation Literal 0 get getOffenders LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions LocalVariableDeclaration ReferenceType String VariableDeclarator SuperMethodInvocation IfStatement MethodInvocation Model MethodInvocation MemberReference me isAAttribute getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator a MemberReference me LocalVariableDeclaration BasicType int VariableDeclarator count Literal 1 IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference a getOwner getFacade Literal null BlockStatement StatementExpression Assignment MemberReference count MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference a getOwner getFacade getFeatures MethodInvocation size getFacade = StatementExpression Assignment MemberReference BinaryOperation + Literal BinaryOperation + MemberReference count Literal 1 = StatementExpression Cast ReferenceType WizMEName MemberReference w StatementExpression Cast ReferenceType WizMEName MemberReference w	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal - Literal 18014398509482000L Literal 15872L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier protected Annotation Override ReferenceType FigEdge FormalParameter ReferenceType MutableGraphModel FormalParameter ReferenceType Object edgeType FormalParameter ReferenceType Fig sourceFig FormalParameter ReferenceType Fig destFig TryStatement IfStatement BinaryOperation instanceof MemberReference sourceFig ReferenceType FigClassifierBox BlockStatement LocalVariableDeclaration Modifier final ReferenceType Fig VariableDeclarator MemberReference sourceFig StatementExpression Assignment MemberReference sourceFig MemberReference destFig = StatementExpression Assignment MemberReference destFig MemberReference = LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnd MethodInvocation Model MethodInvocation MemberReference edgeType MethodInvocation sourceFig getOwner Literal null MethodInvocation destFig getOwner Literal null Literal null Literal null getUmlFactory LocalVariableDeclaration Modifier final ReferenceType FigNode VariableDeclarator MethodInvocation MemberReference sourceFig LocalVariableDeclaration Modifier final ReferenceType FigNode VariableDeclarator destFigNode MethodInvocation MemberReference destFig StatementExpression MethodInvocation MemberReference associationEnd addEdge StatementExpression MethodInvocation MemberReference associationEnd IfStatement BinaryOperation != MethodInvocation getNewEdge Literal null BlockStatement StatementExpression MethodInvocation damage StatementExpression MethodInvocation destFigNode damage LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation editor MethodInvocation getActiveLayer getLayerManager LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator fe Cast ReferenceType FigEdge MethodInvocation lay MethodInvocation getNewEdge presentationFor StatementExpression MethodInvocation MemberReference Color black setLineColor StatementExpression MethodInvocation fe MemberReference StatementExpression MethodInvocation fe MemberReference setSourcePortFig StatementExpression MethodInvocation fe MemberReference setSourceFigNode StatementExpression MethodInvocation fe MemberReference destFigNode setDestPortFig StatementExpression MethodInvocation fe MemberReference destFigNode setDestFigNode StatementExpression MethodInvocation fe ReturnStatement MemberReference fe BlockStatement ReturnStatement Literal null CatchClause CatchClauseParameter IllegalModelElementConnectionException e ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object type FormalParameter ReferenceType Object ReturnStatement MethodInvocation impl MemberReference type MemberReference	0
MethodDeclaration Modifier private ReferenceType Point applyOffset FormalParameter BasicType double theta FormalParameter BasicType int theOffset FormalParameter ReferenceType Point anchor LocalVariableDeclaration ReferenceType Point VariableDeclarator result ClassCreator ReferenceType Point MemberReference anchor LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator aboveAndRight Literal false IfStatement BinaryOperation && BinaryOperation && MemberReference swap BinaryOperation > MemberReference theta BinaryOperation / MemberReference Math PI Literal 2 BinaryOperation < MemberReference theta BinaryOperation / BinaryOperation * MemberReference Math PI Literal 3 Literal 2 BlockStatement StatementExpression Assignment MemberReference theta BinaryOperation - MemberReference theta MemberReference angle = BlockStatement StatementExpression Assignment MemberReference theta BinaryOperation + MemberReference theta MemberReference angle = IfStatement BinaryOperation > MemberReference theta BinaryOperation * MemberReference Math PI Literal 2 BlockStatement StatementExpression Assignment MemberReference theta BinaryOperation * MemberReference Math PI Literal 2 -= IfStatement BinaryOperation < MemberReference theta Literal 0 BlockStatement StatementExpression Assignment MemberReference theta BinaryOperation * MemberReference Math PI Literal 2 += LocalVariableDeclaration BasicType int VariableDeclarator dx Cast BasicType int BinaryOperation * MemberReference theOffset MethodInvocation Math MemberReference theta cos LocalVariableDeclaration BasicType int VariableDeclarator dy Cast BasicType int BinaryOperation * MemberReference theOffset MethodInvocation Math MemberReference theta sin IfStatement MemberReference aboveAndRight BlockStatement StatementExpression Assignment MemberReference dx MethodInvocation Math MemberReference dx abs = StatementExpression Assignment MemberReference dy MethodInvocation - Math MemberReference dy abs = StatementExpression Assignment MemberReference result x MemberReference dx += StatementExpression Assignment MemberReference result y MemberReference dy += ReturnStatement MemberReference result	1
MethodDeclaration Modifier private FormalParameter ReferenceType Object key FormalParameter ReferenceType JToolBar newToolbar FormalParameter BasicType int LocalVariableDeclaration ReferenceType JCheckBoxMenuItem VariableDeclarator wantedMenuItem Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation MethodInvocation getItemCount getMenu MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ToolbarManagerMenuItemAction VariableDeclarator menuItemAction Cast ReferenceType ToolbarManagerMenuItemAction MethodInvocation MethodInvocation MemberReference i getItem MethodInvocation getAction getMenu IfStatement MethodInvocation menuItemAction MethodInvocation MemberReference key equals getKey BlockStatement StatementExpression Assignment MemberReference wantedMenuItem Cast ReferenceType JCheckBoxMenuItem MethodInvocation MethodInvocation MemberReference i getItem getMenu = LocalVariableDeclaration BasicType boolean VariableDeclarator visibility MethodInvocation MethodInvocation newToolbar getName getConfiguredToolbarAppearance StatementExpression MethodInvocation newToolbar MemberReference visibility setVisible IfStatement BinaryOperation == MemberReference wantedMenuItem Literal null BlockStatement LocalVariableDeclaration ReferenceType ToolbarManagerMenuItemAction VariableDeclarator action ClassCreator ReferenceType ToolbarManagerMenuItemAction MethodInvocation Translator MethodInvocation newToolbar getName localize MemberReference key StatementExpression Assignment MemberReference wantedMenuItem ClassCreator ReferenceType JCheckBoxMenuItem MethodInvocation Translator MethodInvocation newToolbar getName localize MethodInvocation newToolbar isVisible = StatementExpression MethodInvocation wantedMenuItem MemberReference action LocalVariableDeclaration ReferenceType JCheckBoxMenuItem VariableDeclarator menuItem2 ClassCreator ReferenceType JCheckBoxMenuItem MethodInvocation Translator MethodInvocation newToolbar getName localize MethodInvocation newToolbar isVisible StatementExpression MethodInvocation menuItem2 MemberReference action StatementExpression MethodInvocation MethodInvocation MemberReference wantedMenuItem MemberReference insert getMenu StatementExpression MethodInvocation MethodInvocation MemberReference menuItem2 MemberReference insert getPopupMenu StatementExpression MethodInvocation MemberReference wantedMenuItem add StatementExpression MethodInvocation MemberReference menuItem2 add LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType JToolBar VariableDeclarator toolBarsForClass Cast ReferenceType ToolbarManagerMenuItemAction MethodInvocation wantedMenuItem getAction LocalVariableDeclaration BasicType boolean VariableDeclarator Literal true IfStatement BinaryOperation > MethodInvocation toolBarsForClass size Literal 0 BlockStatement StatementExpression Assignment MemberReference MethodInvocation toolBarsForClass MethodInvocation isVisible Literal 0 get = StatementExpression MethodInvocation newToolbar MemberReference setVisible StatementExpression MethodInvocation toolBarsForClass MemberReference newToolbar add StatementExpression MethodInvocation newToolbar ClassCreator ReferenceType MethodDeclaration Modifier public Annotation Override mouseReleased FormalParameter ReferenceType MouseEvent e StatementExpression SuperMethodInvocation MemberReference e mouseReleased IfStatement MethodInvocation e isPopupTrigger BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation e getComponent MethodInvocation e getX MethodInvocation e getY show getPopupMenu MethodDeclaration Modifier public Annotation Override mousePressed FormalParameter ReferenceType MouseEvent e StatementExpression SuperMethodInvocation MemberReference e mousePressed IfStatement MethodInvocation e isPopupTrigger BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation e getComponent MethodInvocation e getX MethodInvocation e getY show getPopupMenu addMouseListener	1
MethodDeclaration Modifier protected Annotation Override removeFromDiagramImpl LocalVariableDeclaration ReferenceType VariableDeclarator figEdgeLink Literal null LocalVariableDeclaration ReferenceType List VariableDeclarator edges Literal null LocalVariableDeclaration ReferenceType VariableDeclarator figEdgePort MethodInvocation getEdgePort IfStatement BinaryOperation != MemberReference figEdgePort Literal null BlockStatement StatementExpression Assignment MemberReference edges MethodInvocation figEdgePort = IfStatement BinaryOperation != MemberReference edges Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation edges iterator BinaryOperation && MethodInvocation it hasNext BinaryOperation == MemberReference figEdgeLink Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement StatementExpression Assignment MemberReference figEdgeLink Cast ReferenceType MemberReference o = IfStatement BinaryOperation != MemberReference figEdgeLink Literal null BlockStatement LocalVariableDeclaration ReferenceType FigNode VariableDeclarator figClassBox MethodInvocation figEdgeLink IfStatement BinaryOperation instanceof MemberReference figClassBox ReferenceType FigClassAssociationClass BlockStatement StatementExpression Assignment MemberReference figClassBox MethodInvocation figEdgeLink getSourceFigNode = StatementExpression MethodInvocation figEdgeLink removeFromDiagramImpl StatementExpression Cast ReferenceType FigClassAssociationClass MemberReference figClassBox StatementExpression SuperMethodInvocation removeFromDiagramImpl	0
MethodDeclaration Modifier protected Annotation Override BasicType int getNotationType ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType node LocalVariableDeclaration ReferenceType Object VariableDeclarator name Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator value Literal null StatementExpression MethodInvocation MemberReference node IfStatement BinaryOperation != MethodInvocation node getTLet Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getTLet IfStatement BinaryOperation != MethodInvocation node getName Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getName StatementExpression Assignment MemberReference name MethodInvocation node MethodInvocation toString MethodInvocation trim getName = IfStatement BinaryOperation != MethodInvocation node getLetExpressionTypeDeclaration Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getLetExpressionTypeDeclaration IfStatement BinaryOperation != MethodInvocation node getEqual Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getEqual IfStatement BinaryOperation != MethodInvocation node getExpression Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getExpression StatementExpression Assignment MemberReference value MemberReference val = IfStatement BinaryOperation != MethodInvocation node getTIn Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getTIn StatementExpression MethodInvocation vt BinaryOperation + Literal "" MemberReference name MemberReference value put StatementExpression Assignment MemberReference val Literal null = StatementExpression MethodInvocation MemberReference node outALetExpression	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType Object annotatedElement IfStatement BinaryOperation instanceof MemberReference annotatedElement ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MemberReference StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run BinaryOperation + Literal "Remove the link between the " Literal "and the element #" MemberReference MemberReference annotatedElement execute getCommandStack	0
MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade setSelected	0
MethodDeclaration Modifier public Annotation Deprecated FormalParameter ReferenceType String width StatementExpression MethodInvocation MethodInvocation Integer MemberReference width parseInt	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Critic c FormalParameter ReferenceType Designer d ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator cm MethodInvocation BlockStatement IfStatement MethodInvocation ! cm MemberReference c MemberReference d BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public static FormalParameter BasicType int event FormalParameter ReferenceType listener StatementExpression MethodInvocation SINGLETON MemberReference event MemberReference listener	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier public addMessage FormalParameter ReferenceType FigMessage message StatementExpression MethodInvocation messages MemberReference message addFig StatementExpression MethodInvocation StatementExpression MethodInvocation messages damage	0
MethodDeclaration Modifier protected finalize StatementExpression MethodInvocation This	1
MethodDeclaration Modifier public ReferenceType Collection getActivatedMessages FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showSingularMultiplicities MemberReference showem = StatementExpression Assignment MemberReference showSingularMultiplicitiesSet Literal true =	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unchecked" ReferenceType Object invokeFeature FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object vt FormalParameter ReferenceType Object subject FormalParameter ReferenceType String feature FormalParameter ReferenceType String type FormalParameter ReferenceType Object parameters IfStatement BinaryOperation == MemberReference subject Literal null BlockStatement StatementExpression Assignment MemberReference subject MethodInvocation vt Literal get = IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAAssociation getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getConnections getFacade IfStatement MethodInvocation feature Literal "allConnections" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getConnections getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAAssociationEnd getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "aggregation" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "changeability" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getChangeability getFacade IfStatement MethodInvocation feature Literal "ordering" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "isNavigable" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject isNavigable getFacade IfStatement MethodInvocation feature Literal "multiplicity" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getMultiplicity getFacade IfStatement MethodInvocation feature Literal "targetScope" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getTargetScope getFacade IfStatement MethodInvocation feature Literal "visibility" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getVisibility getFacade IfStatement MethodInvocation feature Literal "qualifier" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getQualifiers getFacade IfStatement MethodInvocation feature Literal "specification" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "participant" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getClassifier getFacade IfStatement MethodInvocation feature Literal "upperbound" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getUpper getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAAttribute getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "initialValue" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getInitialValue getFacade IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getAssociationEnds getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "isQuery" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "parameter" equals BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getParameters getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "argument" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAClass getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "isActive" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject isActive getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAClassifier getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "feature" equals BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFeatures getFacade IfStatement MethodInvocation feature Literal "feature" equals BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFeatures getFacade IfStatement MethodInvocation feature Literal "association" equals BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getAssociationEnds getFacade IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "feature" equals BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFeatures getFacade IfStatement MethodInvocation feature Literal "allFeatures" equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + Literal "self.feature->union(" Literal "self.parent.oclAsType(Classifier).allFeatures)" internalOcl IfStatement MethodInvocation feature Literal "allOperations" equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + Literal "self.allFeatures->" Literal "select(f | internalOcl IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + Literal "self.allFeatures->" Literal "select(f | internalOcl IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + Literal "self.allFeatures->" Literal "select(f | internalOcl IfStatement MethodInvocation feature Literal "associations" equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt Literal "self.association.association->asSet()" internalOcl IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + Literal "self.associations->union(" Literal internalOcl IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal ( a | a.connection->select " Literal "( ae | ae.participant = self ).size = 1 )->" Literal "collect ( a | a.connection->" Literal "select ( ae | ae.participant self ) )->" Literal "union ( Literal "select ( a | a.connection->select ( ae |" Literal "ae.participant = self ).size > 1 )->" Literal "collect ( a | )" internalOcl IfStatement MethodInvocation feature Literal "allOppositeAssociationEnds" equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + Literal "self.oppositeAssociationEnds->" Literal )" internalOcl IfStatement MethodInvocation feature Literal "specification" equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "self.clientDependency->" Literal |" Literal Literal "and = " Literal "and Literal internalOcl IfStatement MethodInvocation feature Literal "allContents" equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + BinaryOperation + BinaryOperation + Literal "self.contents->union(" Literal |" Literal = #public or true or " Literal " = #protected))" internalOcl IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + BinaryOperation + Literal Literal Literal internalOcl IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAComment getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "body" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getBody getFacade IfStatement MethodInvocation feature Literal "annotatedElement" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAComponent getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "deploymentLocation" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "resident" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "self.resident->union(" Literal Literal re |" Literal "re.elementResidence.visibility = #public or " Literal "re.elementResidence.visibility = #protected))" internalOcl IfStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "body" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getBody getFacade IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isADependency getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "client" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "supplier" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getSuppliers getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAElementResidence getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "visibility" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getVisibility getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAEnumeration getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "literal" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getEnumerationLiterals getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "enumeration" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAFeature getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "ownerScope" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject isStatic getFacade IfStatement MethodInvocation feature Literal "visibility" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getVisibility getFacade IfStatement MethodInvocation feature Literal "owner" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getOwner getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAGeneralizableElement getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "isAbstract" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject isAbstract getFacade IfStatement MethodInvocation feature Literal "isLeaf" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject isLeaf getFacade IfStatement MethodInvocation feature Literal "isRoot" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject isRoot getFacade IfStatement MethodInvocation feature Literal "generalization" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getGeneralizations getFacade IfStatement MethodInvocation feature Literal "specialization" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getSpecializations getFacade IfStatement MethodInvocation feature Literal "parent" equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt Literal "self.generalization.parent" internalOcl IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt Literal internalOcl IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAGeneralization getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "child" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getSpecific getFacade IfStatement MethodInvocation feature Literal "parent" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getGeneral getFacade IfStatement MethodInvocation feature Literal "powertype" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getPowertype getFacade IfStatement MethodInvocation feature Literal "specialization" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getSpecializations getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "body" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getBody getFacade IfStatement MethodInvocation feature Literal "specification" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAModelElement getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "name" equals BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference subject getName getFacade IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name Literal "" = ReturnStatement MemberReference name IfStatement MethodInvocation feature Literal "clientDependency" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getClientDependencies getFacade IfStatement MethodInvocation feature Literal "constraint" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "namespace" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getNamespace getFacade IfStatement MethodInvocation feature Literal "supplierDependency" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getSupplierDependencies getFacade IfStatement MethodInvocation feature Literal "templateParameter" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "stereotype" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getStereotypes getFacade IfStatement MethodInvocation feature Literal "taggedValue" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getTaggedValuesCollection getFacade IfStatement MethodInvocation feature Literal "constraint" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "supplier" equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt Literal internalOcl IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt Literal "self.supplier->union(self.supplier.allSuppliers)" internalOcl IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + BinaryOperation + Literal "self.namespace->" Literal Literal internalOcl IfStatement MethodInvocation feature Literal "isTemplate" equals BlockStatement ReturnStatement MethodInvocation ! Model MethodInvocation MemberReference subject MethodInvocation isEmpty getFacade IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + Literal "self.clientDependency->" Literal internalOcl IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + BinaryOperation + Literal "self.clientDependency->" Literal Literal internalOcl IfStatement MethodInvocation Model MethodInvocation MemberReference subject isANamespace getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "ownedElement" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getOwnedElements getFacade IfStatement MethodInvocation feature Literal "contents" equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + BinaryOperation + Literal Literal Literal "select(x|x.oclIsKindOf(Namespace)).contents)" internalOcl IfStatement MethodInvocation feature Literal "allContents" equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt Literal internalOcl IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + Literal "self.allContents Literal = #public)" internalOcl IfStatement MethodInvocation feature Literal "allSurroundingNamespaces" equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + Literal "self.namespace->" Literal "union(self.namespace.allSurroundingNamespaces)" internalOcl IfStatement MethodInvocation Model MethodInvocation MemberReference subject isANode getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "deployedComponent" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAOperation getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "concurrency" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "isAbstract" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject isAbstract getFacade IfStatement MethodInvocation feature Literal "isLeaf" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject isLeaf getFacade IfStatement MethodInvocation feature Literal "isRoot" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject isRoot getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAParameter getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getDefaultValue getFacade IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getKind getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAStructuralFeature getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "changeability" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getChangeability getFacade IfStatement MethodInvocation feature Literal "multiplicity" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getMultiplicity getFacade IfStatement MethodInvocation feature Literal "ordering" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "targetScope" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getTargetScope getFacade IfStatement MethodInvocation feature Literal "type" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "binding" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getBinding getFacade IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getModelElement getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "defaultElement" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAUseCase getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject IfStatement MethodInvocation feature Literal "allExtensionPoints" equals BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference subject getCoreHelper LocalVariableDeclaration ReferenceType Collection VariableDeclarator result ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference subject getExtensionPoints getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MemberReference c BlockStatement StatementExpression MethodInvocation result MethodInvocation Model MethodInvocation MemberReference getExtensionPoints getFacade addAll ReturnStatement MemberReference result IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAAssociationClass getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "allConnections" equals BlockStatement ReturnStatement MethodInvocation MemberReference subject MemberReference vt BinaryOperation + BinaryOperation + Literal Literal | Literal "a : Association | internalOcl IfStatement MethodInvocation Model MethodInvocation MemberReference subject isAStereotype getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "baseClass" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getBaseClasses getFacade IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "definedTag" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getTagDefinitions getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isATagDefinition getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "multiplicity" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getMultiplicity getFacade IfStatement MethodInvocation feature Literal "tagType" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getType getFacade IfStatement MethodInvocation feature Literal "typedValue" equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "owner" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getOwner getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference subject isATaggedValue getFacade BlockStatement IfStatement MethodInvocation type Literal "." equals BlockStatement IfStatement MethodInvocation feature Literal "dataValue" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getFacade IfStatement MethodInvocation feature Literal "type" equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference subject getType getFacade IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation Model MethodInvocation MemberReference subject getFacade ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType State	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference target setTarget	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal "Very	0
MethodDeclaration Modifier static ReferenceType Inline getInlineOperationModifierType FormalParameter ReferenceType Object op LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation MethodInvocation MemberReference op MemberReference getTaggedValue getFacade IfStatement BinaryOperation != MemberReference tv Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator val MethodInvocation MethodInvocation MemberReference tv getValueOfTag getFacade IfStatement MethodInvocation val MemberReference equals BlockStatement ReturnStatement MemberReference notInline IfStatement BinaryOperation || BinaryOperation || MethodInvocation val MemberReference equals MethodInvocation val Literal "" equals BinaryOperation == MemberReference val Literal null BlockStatement ReturnStatement MemberReference defaultInline IfStatement MethodInvocation val MemberReference defInsideClass tvName equals BlockStatement ReturnStatement MemberReference defInsideClass IfStatement MethodInvocation val MemberReference keyAndDefInsideClass tvName equals BlockStatement ReturnStatement MemberReference keyAndDefInsideClass IfStatement MethodInvocation val MemberReference keyAndDefOutsideClass tvName equals BlockStatement ReturnStatement MemberReference keyAndDefOutsideClass IfStatement MethodInvocation val MemberReference defOutsideClass tvName equals BlockStatement ReturnStatement MemberReference defOutsideClass ReturnStatement MemberReference notInline	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String argument LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference argument LocalVariableDeclaration ReferenceType String VariableDeclarator suffix MethodInvocation SuffixFilter MemberReference file getExtension IfStatement BinaryOperation == MemberReference suffix Literal null BlockStatement ReturnStatement Literal false TryStatement ReturnStatement MethodInvocation MemberReference file MemberReference suffix Literal false doSave CatchClause CatchClauseParameter FileNotFoundException e StatementExpression MethodInvocation LOG Literal "File not found error when writing." MemberReference e error CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG Literal "IO error when writing." MemberReference e error ReturnStatement Literal false	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me StatementExpression Assignment MemberReference useComposite MethodInvocation me isShiftDown =	0
MethodDeclaration Modifier public addParameter FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter StatementExpression MethodInvocation impl MemberReference handle MemberReference parameter addParameter	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter Modifier final ReferenceType Object IfStatement BinaryOperation instanceof MemberReference ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal expect a " MemberReference LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Activity VariableDeclarator activity Cast ReferenceType Activity MethodInvocation StatementExpression MethodInvocation activity Cast ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType MemberReference setPackage StatementExpression MethodInvocation MethodInvocation MemberReference activity add LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the activity in the package #" StatementExpression MethodInvocation modelImpl MethodInvocation getCommandStack MethodInvocation MemberReference cmd execute StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get MemberReference ReturnStatement Cast ReferenceType Activity MethodInvocation run MethodInvocation Literal 0 get	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Signal BlockStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation Cast ReferenceType Signal MemberReference handle MemberReference handle getRefOutermostPackage CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public static ReferenceType getSingleton ReturnStatement MemberReference singleton	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier private ReferenceType Profile FormalParameter ReferenceType Project p ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator profile MethodInvocation p MethodInvocation getProfiles getProfileConfiguration BlockStatement IfStatement Literal MethodInvocation MethodInvocation profile equals BlockStatement ReturnStatement MemberReference profile ReturnStatement Literal null	0
MethodDeclaration Modifier protected FormalParameter ReferenceType splash FormalParameter ReferenceType IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash MethodInvocation MethodInvocation Translator Literal localize getStatusBar StatementExpression MethodInvocation splash MethodInvocation Literal 10 getStatusBar StatementExpression MethodInvocation splash Literal true setVisible StatementExpression Assignment MemberReference ClassCreator ReferenceType = IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash MethodInvocation MethodInvocation Translator Literal localize getStatusBar StatementExpression MethodInvocation splash MethodInvocation Literal 5 getStatusBar StatementExpression Assignment MemberReference ClassCreator ReferenceType MemberReference splash = StatementExpression Assignment MemberReference ClassCreator ReferenceType = IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash MethodInvocation MethodInvocation Translator Literal localize getStatusBar StatementExpression MethodInvocation splash MethodInvocation Literal 5 getStatusBar StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier private removeTargetListener FormalParameter ReferenceType TargetListener listener StatementExpression MethodInvocation listenerList ClassReference ReferenceType TargetListener MemberReference listener remove	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public StatementExpression Assignment MemberReference ClassCreator ReferenceType Date Literal 0 =	0
MethodDeclaration Modifier public ReferenceType Class TypeArgument ? getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType String name ClassifierNotFoundException ReturnStatement MethodInvocation MemberReference name Literal false Literal null get	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public doNext LocalVariableDeclaration ReferenceType Wizard VariableDeclarator w MethodInvocation IfStatement BinaryOperation != MemberReference w Literal null BlockStatement StatementExpression MethodInvocation w next StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getOperation getMetaTypes	0
MethodDeclaration Modifier public addTranslation FormalParameter Modifier final ReferenceType String FormalParameter Modifier final ReferenceType String newClassName StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference newClassName addTranslation	0
MethodDeclaration Modifier private ReferenceType String generateClassList FormalParameter ReferenceType Collection classifiers IfStatement BinaryOperation == MemberReference classifiers Literal null BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 80 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator clsEnum MethodInvocation classifiers iterator WhileStatement MethodInvocation clsEnum hasNext BlockStatement StatementExpression MethodInvocation sb MethodInvocation MethodInvocation clsEnum next generateClassifierRef append IfStatement MethodInvocation clsEnum hasNext BlockStatement StatementExpression MethodInvocation sb Literal ", " append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object enumeration FormalParameter ReferenceType List IfStatement BinaryOperation instanceof MemberReference enumeration ReferenceType Enumeration BlockStatement StatementExpression Cast ReferenceType Enumeration MemberReference enumeration StatementExpression Cast ReferenceType Enumeration MemberReference enumeration	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object operation FormalParameter ReferenceType Object classifier LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter MethodInvocation MemberReference operation MemberReference classifier Literal "return" StatementExpression MethodInvocation Model MethodInvocation MemberReference parameter MethodInvocation Model MethodInvocation getReturnParameter getDirectionKind getCoreHelper ReturnStatement MemberReference parameter	0
MethodDeclaration Modifier public init LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public Annotation Override setEnclosingFig FormalParameter ReferenceType Fig newEncloser LocalVariableDeclaration ReferenceType Fig VariableDeclarator oldEncloser MemberReference encloser LocalVariableDeclaration ReferenceType LayerPerspective VariableDeclarator layer Cast ReferenceType LayerPerspective MethodInvocation getLayer IfStatement BinaryOperation != MemberReference layer Literal null BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram Cast ReferenceType ArgoDiagram MethodInvocation layer getDiagram StatementExpression MethodInvocation diagram This Cast ReferenceType FigNode MemberReference oldEncloser Cast ReferenceType FigNode MemberReference newEncloser StatementExpression SuperMethodInvocation MemberReference newEncloser setEnclosingFig IfStatement BinaryOperation && BinaryOperation != MemberReference layer Literal null BinaryOperation != MemberReference newEncloser MemberReference oldEncloser BlockStatement LocalVariableDeclaration ReferenceType Diagram VariableDeclarator diagram MethodInvocation layer getDiagram IfStatement BinaryOperation instanceof MemberReference diagram ReferenceType ArgoDiagram BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator umlDiagram Cast ReferenceType ArgoDiagram MemberReference diagram LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace Literal null IfStatement BinaryOperation == MemberReference newEncloser Literal null BlockStatement StatementExpression MethodInvocation umlDiagram MethodInvocation getOwner Literal null setModelElementNamespace BlockStatement StatementExpression Assignment MemberReference namespace MethodInvocation newEncloser getOwner = IfStatement MethodInvocation Model MethodInvocation MemberReference namespace isANamespace getFacade BlockStatement StatementExpression MethodInvocation umlDiagram MethodInvocation getOwner MemberReference namespace setModelElementNamespace IfStatement BinaryOperation instanceof MemberReference encloser ReferenceType FigNodeModelElement BlockStatement StatementExpression Cast ReferenceType FigNodeModelElement MemberReference encloser IfStatement BinaryOperation instanceof MemberReference newEncloser ReferenceType FigNodeModelElement BlockStatement StatementExpression Cast ReferenceType FigNodeModelElement MemberReference newEncloser StatementExpression Assignment MemberReference encloser MemberReference newEncloser =	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation cover MemberReference f setFilled	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt StatementExpression MethodInvocation StatementExpression MethodInvocation panel	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Constraint BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier public final Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated ReferenceType Object getRoot ReturnStatement MemberReference root	1
MethodDeclaration Modifier public Annotation Override addMemento FormalParameter Modifier final ReferenceType Memento LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation != MemberReference p Literal null BlockStatement LocalVariableDeclaration ReferenceType org ReferenceType argouml ReferenceType kernel ReferenceType UndoManager VariableDeclarator undo MethodInvocation p IfStatement BinaryOperation != MemberReference undo Literal null BlockStatement IfStatement MemberReference startChain BlockStatement StatementExpression MethodInvocation undo Literal "Diagram startInteraction StatementExpression MethodInvocation undo ClassCreator ReferenceType MemberReference StatementExpression Assignment MemberReference startChain Literal false =	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType SignalEvent	0
MethodDeclaration Modifier private delete FormalParameter ReferenceType Object obj IfStatement BinaryOperation != MemberReference obj Literal null BlockStatement StatementExpression MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation MemberReference obj moveToTrash getManager	0
MethodDeclaration BasicType boolean IfStatement BinaryOperation || BinaryOperation == MethodInvocation getDestPortFig Literal null BinaryOperation == MethodInvocation getSourcePortFig Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation getSource equals BlockStatement ReturnStatement MethodInvocation getDestPortFig	0
MethodDeclaration Modifier public FormalParameter ReferenceType n IfStatement BinaryOperation == MemberReference n MemberReference BlockStatement ReturnStatement StatementExpression MethodInvocation IfStatement BinaryOperation != MemberReference n Literal null BlockStatement StatementExpression Assignment MemberReference MemberReference n = StatementExpression MethodInvocation MethodInvocation This add	0
MethodDeclaration Modifier private StatementExpression MethodInvocation umlListener MemberReference history StatementExpression Assignment MemberReference history ClassCreator ReferenceType ArrayList = StatementExpression Assignment MemberReference currentTarget Literal - 1 =	0
MethodDeclaration Modifier public ReferenceType Object getPackage ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String path IfStatement MethodInvocation path MemberReference FILE_SEPARATOR endsWith BlockStatement StatementExpression Assignment MemberReference MethodInvocation path Literal 0 BinaryOperation - MethodInvocation path length MethodInvocation FILE_SEPARATOR length substring = BlockStatement StatementExpression Assignment MemberReference MemberReference path =	0
MethodDeclaration pre IfStatement MethodInvocation ! MethodInvocation getComposite MethodInvocation MethodInvocation MethodInvocation MemberReference associationEnd getFacade equals BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation MethodInvocation MemberReference associationEnd getOtherAssociationEnds getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MemberReference BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator MethodInvocation MethodInvocation MemberReference getTaggedValues getFacade LocalVariableDeclaration BasicType boolean VariableDeclarator Literal true WhileStatement MethodInvocation hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation next IfStatement MethodInvocation MethodInvocation MethodInvocation MemberReference tv getName getFacade BlockStatement StatementExpression Assignment MemberReference Literal false = BreakStatement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation MemberReference LocalVariableDeclaration ReferenceType Object VariableDeclarator ptrTV MethodInvocation MethodInvocation MethodInvocation MemberReference ArrayCreator ReferenceType String ArrayInitializer Literal "true" buildTaggedValue getExtensionMechanismsFactory StatementExpression MethodInvocation MethodInvocation MemberReference MemberReference ptrTV addTaggedValue getExtensionMechanismsHelper StatementExpression MethodInvocation ArrayCreator ReferenceType Object ArrayInitializer MemberReference MemberReference ptrTV add	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object StatementExpression MethodInvocation MemberReference addItem	0
MethodDeclaration Modifier public reset LocalVariableDeclaration BasicType int VariableDeclarator i ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference match length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i match Literal 0 =	0
MethodDeclaration Modifier public final init_declarator_list RecognitionException TokenStreamException StatementExpression MethodInvocation init_declarator BlockStatement DoStatement _loop156 Literal true BlockStatement IfStatement BinaryOperation == MethodInvocation Literal 1 LA MemberReference COMMA BlockStatement StatementExpression MethodInvocation MemberReference COMMA match StatementExpression MethodInvocation init_declarator BlockStatement BreakStatement _loop156	1
MethodDeclaration Modifier public static ReferenceType String generateStereotype FormalParameter ReferenceType Collection TypeArgument ReferenceType Object st ReturnStatement MethodInvocation NotationUtilityUml MemberReference st MethodInvocation MethodInvocation isUseGuillemets getNotationSettings generateStereotype	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCorePackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier private ReferenceType String generateAttribute FormalParameter ReferenceType Object attr FormalParameter BasicType boolean documented LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator makeGet MethodInvocation Model MethodInvocation MemberReference attr Literal "get" getTaggedValueValue getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator makeSet MethodInvocation Model MethodInvocation MemberReference attr Literal "set" getTaggedValueValue getFacade LocalVariableDeclaration BasicType boolean VariableDeclarator genAccessor Literal false StatementExpression Assignment MemberReference genAccessor BinaryOperation || BinaryOperation && BinaryOperation != MemberReference makeGet Literal null MethodInvocation makeGet Literal "true" equals BinaryOperation && BinaryOperation != MemberReference makeSet Literal null MethodInvocation makeSet Literal "true" equals = IfStatement MemberReference documented BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + MethodInvocation MemberReference attr generateConstraintEnrichedDocComment Literal "\n" MemberReference INDENT += IfStatement MemberReference genAccessor BlockStatement StatementExpression Assignment MemberReference s Literal " private " += BlockStatement StatementExpression Assignment MemberReference s MethodInvocation MemberReference attr generateVisibility += StatementExpression Assignment MemberReference s MethodInvocation MemberReference attr generateScope += StatementExpression Assignment MemberReference s MethodInvocation MemberReference attr += IfStatement MethodInvocation MemberReference attr isCollection BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator temp MethodInvocation MethodInvocation Model MethodInvocation MemberReference attr getMultiplicity getFacade generateMultiplicity IfStatement BinaryOperation > MethodInvocation temp length Literal 0 BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + MemberReference temp Literal " " += LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference attr getType getFacade IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + MethodInvocation MemberReference type generateClassifierRef Literal " " += LocalVariableDeclaration ReferenceType String VariableDeclarator slash Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator attrName MethodInvocation Model MethodInvocation MemberReference attr getName getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference attr getVisibility getFacade IfStatement MethodInvocation Model MethodInvocation getPrivate MethodInvocation MemberReference equals getVisibilityKind BlockStatement StatementExpression Assignment MemberReference attrName BinaryOperation + BinaryOperation + MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference attr getOwner getFacade getName getFacade Literal "_" MemberReference attrName = IfStatement MemberReference genAccessor BlockStatement StatementExpression Assignment MemberReference attrName BinaryOperation + Literal MemberReference attrName = StatementExpression Assignment MemberReference s BinaryOperation + MemberReference slash MemberReference attrName += LocalVariableDeclaration ReferenceType Object VariableDeclarator init MethodInvocation Model MethodInvocation MemberReference attr getInitialValue getFacade IfStatement BinaryOperation != MemberReference init Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator initStr MethodInvocation MethodInvocation trim MemberReference init generateExpression IfStatement BinaryOperation > MethodInvocation initStr length Literal 0 BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + Literal " = " MemberReference initStr += StatementExpression Assignment MemberReference s Literal ";\n" += IfStatement MemberReference genAccessor BlockStatement StatementExpression Assignment MemberReference s Literal "\n" += StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + MemberReference INDENT MethodInvocation MemberReference attr generateVisibility Literal " " += StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + MethodInvocation MemberReference type generateClassifierRef Literal " " MethodInvocation Model MethodInvocation MemberReference attr getName getFacade += StatementExpression Assignment MemberReference s Literal " {\n" += IfStatement BinaryOperation && BinaryOperation != MemberReference makeSet Literal null MethodInvocation makeSet Literal "true" equals BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + BinaryOperation + MemberReference INDENT MemberReference INDENT Literal "set { m_" MethodInvocation Model MethodInvocation MemberReference attr getName getFacade += StatementExpression Assignment MemberReference s Literal " = value; } \n" += IfStatement BinaryOperation && BinaryOperation != MemberReference makeGet Literal null MethodInvocation makeGet Literal "true" equals BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + MemberReference INDENT MemberReference INDENT += StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + Literal "get { return m_" MethodInvocation Model MethodInvocation MemberReference attr getName getFacade Literal "; } \n" += StatementExpression Assignment MemberReference s BinaryOperation + MemberReference INDENT Literal "}\n" += ReturnStatement MemberReference s	1
MethodDeclaration Modifier private ReferenceType Object getClass FormalParameter ReferenceType Object mPackage FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator mClass Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference mPackage getAllClasses getCoreHelper BlockStatement IfStatement MethodInvocation name MethodInvocation Model MethodInvocation MemberReference c getName getFacade equals BlockStatement StatementExpression Assignment MemberReference mClass MemberReference c = BreakStatement IfStatement BinaryOperation == MemberReference mClass Literal null BlockStatement StatementExpression Assignment MemberReference mClass MethodInvocation Model MethodInvocation MemberReference name MemberReference mPackage buildClass getCoreFactory = StatementExpression MethodInvocation newElements MemberReference mClass add ReturnStatement MemberReference mClass	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget Literal true getTransitions getStateMachinesHelper setAllElements	0
MethodDeclaration Modifier public ReferenceType String getReferencesTableName ReturnStatement MethodInvocation getName	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType d ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier private FeatureNotSupportedException WhileStatement MethodInvocation ! curtok MemberReference EOF equals BlockStatement SwitchStatement MemberReference curtok id SwitchStatementCase MemberReference TokenID New MemberReference TokenID Public MemberReference TokenID Protected MemberReference TokenID MemberReference TokenID Private MemberReference TokenID Abstract MemberReference TokenID Sealed MemberReference TokenID Static MemberReference TokenID MemberReference TokenID Override MemberReference TokenID MemberReference TokenID MemberReference TokenID MemberReference TokenID MemberReference TokenID Out MemberReference TokenID Partial LocalVariableDeclaration BasicType long VariableDeclarator Cast BasicType long MethodInvocation MemberReference curtok id get IfStatement BinaryOperation > BinaryOperation & Cast BasicType long MemberReference curmods MemberReference Literal 0 BlockStatement StatementExpression MethodInvocation Literal "Duplicate ReportError StatementExpression Assignment MemberReference curmods MemberReference |= StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase ReturnStatement	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation cover getFillColor	0
MethodDeclaration Modifier public BasicType int ReturnStatement This MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String getAllMetatypeNames LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String ForStatement EnhancedForControl VariableDeclaration ReferenceType Field VariableDeclarator f ClassReference UMLPackage MethodInvocation getDeclaredFields ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o TryStatement StatementExpression Assignment MemberReference o MethodInvocation f Literal null get = CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement MemberReference e CatchClause CatchClauseParameter IllegalAccessException e ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement StatementExpression MethodInvocation result Cast ReferenceType MemberReference o add ReturnStatement MemberReference result	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Object getAssociationClass ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object umlMessage FormalParameter ReferenceType StringBuilder guard FormalParameter BasicType boolean parallell FormalParameter BasicType boolean iterative IfStatement BinaryOperation != MemberReference guard Literal null BlockStatement StatementExpression Assignment MemberReference guard ClassCreator ReferenceType StringBuilder BinaryOperation + BinaryOperation + Literal "[" MethodInvocation guard MethodInvocation trim toString Literal "]" = IfStatement MemberReference iterative BlockStatement IfStatement MemberReference parallell BlockStatement StatementExpression Assignment MemberReference guard MethodInvocation guard Literal 0 Literal insert = BlockStatement StatementExpression Assignment MemberReference guard MethodInvocation guard Literal 0 Literal "*" insert = LocalVariableDeclaration ReferenceType Object VariableDeclarator expr MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation guard toString getDataTypesFactory StatementExpression MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference umlMessage getAction getFacade MemberReference expr setRecurrence getCommonBehaviorHelper	0
MethodDeclaration Modifier public ReferenceType Object getFork ReturnStatement MemberReference	0
MethodDeclaration Modifier public read FormalParameter ReferenceType String filename TryStatement LocalVariableDeclaration ReferenceType FileReader VariableDeclarator f ClassCreator ReferenceType FileReader MemberReference filename LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator fr ClassCreator ReferenceType BufferedReader MemberReference f LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal "" LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator content ClassCreator ReferenceType StringBuilder LocalVariableDeclaration BasicType boolean VariableDeclarator inSection Literal false WhileStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression Assignment MemberReference line MethodInvocation fr readLine = IfStatement BinaryOperation != MemberReference line Literal null BlockStatement IfStatement MemberReference inSection BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sectionId MethodInvocation MemberReference line getSectId IfStatement BinaryOperation != MemberReference sectionId Literal null BlockStatement StatementExpression Assignment MemberReference inSection Literal false = StatementExpression MethodInvocation mAry MemberReference sectionId MethodInvocation content toString put StatementExpression Assignment MemberReference content ClassCreator ReferenceType StringBuilder = BlockStatement StatementExpression MethodInvocation content BinaryOperation + MemberReference line MemberReference LINE_SEPARATOR append BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sectionId MethodInvocation MemberReference line getSectId IfStatement BinaryOperation != MemberReference sectionId Literal null BlockStatement StatementExpression Assignment MemberReference inSection Literal true = StatementExpression MethodInvocation fr close CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error: " MethodInvocation e toString error	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final BasicType boolean isActive IfStatement BinaryOperation instanceof MemberReference handle ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType Class BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of UML2 LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType Class MemberReference handle StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Set isActive to for #" MemberReference isActive MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier public ReferenceType Object getBase FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement ReturnStatement Cast ReferenceType Extend MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Include BlockStatement ReturnStatement Cast ReferenceType Include MemberReference handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Object getTaggedValue ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public Annotation Deprecated setFontSize FormalParameter BasicType int StatementExpression MethodInvocation diaDefault MemberReference setFontSize	1
MethodDeclaration Modifier private ReferenceType CR FormalParameter BasicType int IfStatement BinaryOperation || BinaryOperation < MemberReference Literal 0 BinaryOperation >= MemberReference MethodInvocation theMAlConstraints size BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator mc MethodInvocation theMAlConstraints MemberReference get IfStatement BinaryOperation != MemberReference mc Literal null BlockStatement ReturnStatement ClassCreator ReferenceType CR MemberReference mc MemberReference ReturnStatement ClassCreator ReferenceType CR MemberReference	1
MethodDeclaration Modifier private deleteNamespace FormalParameter ReferenceType Namespace elem StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteNamespace getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Classifier BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteClassifier getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType UmlClass BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType DataType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Primitive BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Enumeration BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Node BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Component BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Signal BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteSignal IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Exception BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ClassifierRole BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteClassifierRole getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem deleteUseCase IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getActivityGraphs IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Collaboration BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType UmlPackage BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getModelManagement IfStatement BinaryOperation instanceof MemberReference elem ReferenceType org ReferenceType omg ReferenceType uml ReferenceType ReferenceType Model BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getModelManagement IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getModelManagement	1
MethodDeclaration Modifier public actionPerformed FormalParameter Modifier final ReferenceType ActionEvent e StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run ForStatement EnhancedForControl VariableDeclaration ReferenceType JToolBar VariableDeclarator toolbar MethodInvocation BlockStatement StatementExpression MethodInvocation toolbar Cast ReferenceType JCheckBoxMenuItem MethodInvocation e getSource setVisible LocalVariableDeclaration ReferenceType ConfigurationKey VariableDeclarator MethodInvocation Configuration MemberReference MethodInvocation toolbar getName makeKey StatementExpression MethodInvocation Configuration MemberReference Cast ReferenceType Boolean MethodInvocation toolbar isVisible setString invokeLater ForStatement EnhancedForControl VariableDeclaration ReferenceType JMenuItem VariableDeclarator menuItem MemberReference BlockStatement IfStatement MethodInvocation menuItem MethodInvocation This equals getAction BlockStatement StatementExpression MethodInvocation menuItem Cast ReferenceType JCheckBoxMenuItem MethodInvocation e getSource setSelected	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object o StatementExpression MethodInvocation historyManager MemberReference o	0
MethodDeclaration Modifier private ReferenceType String generateGeneralization FormalParameter ReferenceType Collection generalizations IfStatement BinaryOperation || BinaryOperation == MemberReference generalizations Literal null BinaryOperation == MethodInvocation generalizations size Literal 0 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType Collection VariableDeclarator classes ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator generalization MemberReference generalizations BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference generalization getGeneral getFacade IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation classes MemberReference add ReturnStatement MethodInvocation MemberReference classes generateClassList	1
MethodDeclaration Modifier public setup FormalParameter ReferenceType Object namespace FormalParameter ReferenceType Object agraph IfStatement BinaryOperation || MethodInvocation ! Model MethodInvocation MemberReference namespace isANamespace getFacade MethodInvocation ! Model MethodInvocation MemberReference agraph getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException StatementExpression MethodInvocation MemberReference namespace setNamespace StatementExpression Assignment MemberReference theActivityGraph MemberReference agraph = LocalVariableDeclaration ReferenceType VariableDeclarator gm MethodInvocation createGraphModel StatementExpression MethodInvocation gm MemberReference namespace IfStatement BinaryOperation != MemberReference theActivityGraph Literal null BlockStatement StatementExpression MethodInvocation gm MemberReference theActivityGraph LocalVariableDeclaration ReferenceType VariableDeclarator rend ClassCreator ReferenceType LocalVariableDeclaration ReferenceType LayerPerspective VariableDeclarator lay ClassCreator ReferenceType LayerPerspectiveMutable MethodInvocation Model MethodInvocation MemberReference namespace getName getFacade MemberReference gm StatementExpression MethodInvocation lay MemberReference rend setGraphNodeRenderer StatementExpression MethodInvocation lay MemberReference rend setGraphEdgeRenderer StatementExpression MethodInvocation MemberReference lay setLayer StatementExpression MethodInvocation Model MethodInvocation This MemberReference theActivityGraph ArrayCreator ReferenceType String ArrayInitializer Literal "remove" Literal "namespace" addModelEventListener getPump	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAState getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation setEnabled	0
MethodDeclaration Modifier public Annotation Deprecated FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation == MethodInvocation npSettings isShowInitialValues MemberReference showem BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Memento VariableDeclarator ClassCreator ReferenceType Memento FieldDeclaration Modifier private final ReferenceType ConfigurationKey VariableDeclarator key MemberReference Notation MethodDeclaration Modifier public redo StatementExpression MethodInvocation npSettings MemberReference showem setShowInitialValues StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent MethodDeclaration Modifier public undo StatementExpression MethodInvocation npSettings MemberReference ! showem setShowInitialValues StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier private BasicType int FormalParameter Modifier final ReferenceType Component comp ReturnStatement Cast BasicType int MethodInvocation comp MethodInvocation getHeight getPreferredSize	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object sig StatementExpression MethodInvocation impl MemberReference handle MemberReference sig	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType Stereotype getAllStereotypesIn FormalParameter ReferenceType Profile p LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Stereotype VariableDeclarator l ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Stereotype LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Element VariableDeclarator iter MethodInvocation p MethodInvocation iterator getOwnedElements WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Element VariableDeclarator elem MethodInvocation iter next IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Stereotype BlockStatement StatementExpression MethodInvocation l Cast ReferenceType Stereotype MemberReference elem add IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Profile BlockStatement StatementExpression MethodInvocation l MethodInvocation Cast ReferenceType Profile MemberReference elem getAllStereotypesIn addAll ReturnStatement MemberReference l	1
MethodDeclaration Modifier protected BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier public addClassifier FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object classifier IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unrecognized object " MemberReference handle Literal " or " MemberReference classifier	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier public run IfStatement BinaryOperation instanceof MemberReference ReferenceType ToDoListListener BlockStatement StatementExpression Cast ReferenceType ToDoListListener MemberReference StatementExpression MethodInvocation	0
MethodDeclaration Modifier public init StatementExpression Assignment MemberReference stringMap ClassCreator ReferenceType HashMap TypeArgument ReferenceType Integer TypeArgument ReferenceType String = StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID Not Literal "!" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID Percent Literal "%" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID BAnd Literal "&" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID BOr Literal "|" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID Star Literal "*" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID Plus Literal "+" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID Minus Literal "-" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID Slash Literal "/" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID Less Literal "<" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID Equal Literal "=" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID Greater Literal ">" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID PlusPlus Literal "++" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID MinusMinus Literal "--" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID And Literal "&&" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID Or Literal "||" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID EqualEqual Literal "==" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID NotEqual Literal "!=" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID LessEqual Literal "<=" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID GreaterEqual Literal ">=" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID ShiftLeft Literal "<<" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID ShiftRight Literal ">>" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID Is Literal "is" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID As Literal "as" put StatementExpression MethodInvocation stringMap ClassCreator ReferenceType Integer MemberReference TokenID MinusGreater Literal "->" put	1
MethodDeclaration Modifier public setNamespace FormalParameter ReferenceType Object ns IfStatement MethodInvocation ! Model MethodInvocation MemberReference ns isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Illegal argument. " Literal " MemberReference ns Literal " is not a namespace" error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Illegal argument. " Literal " MemberReference ns Literal " is not a namespace" LocalVariableDeclaration BasicType boolean VariableDeclarator init BinaryOperation == Literal null MethodInvocation getNamespace StatementExpression SuperMethodInvocation MemberReference ns setNamespace LocalVariableDeclaration ReferenceType VariableDeclarator gm Cast ReferenceType MethodInvocation getGraphModel StatementExpression MethodInvocation gm MemberReference ns IfStatement MemberReference init BlockStatement LocalVariableDeclaration ReferenceType LayerPerspective VariableDeclarator lay ClassCreator ReferenceType LayerPerspectiveMutable MethodInvocation Model MethodInvocation MemberReference ns getName getFacade MemberReference gm LocalVariableDeclaration ReferenceType ClassDiagramRenderer VariableDeclarator rend ClassCreator ReferenceType ClassDiagramRenderer StatementExpression MethodInvocation lay MemberReference rend setGraphNodeRenderer StatementExpression MethodInvocation lay MemberReference rend setGraphEdgeRenderer StatementExpression MethodInvocation MemberReference lay setLayer	1
MethodDeclaration Modifier public ReferenceType Object getPrivate ReturnStatement MemberReference	0
MethodDeclaration Modifier public final iteration_statement RecognitionException TokenStreamException SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_while BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_while match StatementExpression MethodInvocation MemberReference LPAREN match StatementExpression MethodInvocation expression StatementExpression MethodInvocation MemberReference RPAREN match StatementExpression MethodInvocation statement BreakStatement SwitchStatementCase LITERAL_do BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_do match StatementExpression MethodInvocation statement StatementExpression MethodInvocation MemberReference LITERAL_while match StatementExpression MethodInvocation MemberReference LPAREN match StatementExpression MethodInvocation expression StatementExpression MethodInvocation MemberReference RPAREN match StatementExpression MethodInvocation MemberReference SEMICOLON match BreakStatement SwitchStatementCase LITERAL_for BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_for match StatementExpression MethodInvocation MemberReference LPAREN match BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched323 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m323 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched323 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched323 Literal false = StatementExpression MethodInvocation MemberReference _m323 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched323 BlockStatement StatementExpression MethodInvocation declaration IfStatement BinaryOperation && MethodInvocation _tokenSet_42 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_60 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation expression StatementExpression MethodInvocation MemberReference SEMICOLON match IfStatement BinaryOperation == MethodInvocation Literal 1 LA MemberReference SEMICOLON BlockStatement StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID StringLiteral LITERAL__declspec LITERAL___declspec LPAREN LITERAL_const_cast LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void OPERATOR LITERAL_this LITERAL_true LITERAL_false OCTALINT STAR AMPERSAND TILDE PLUS MINUS PLUSPLUS MINUSMINUS LITERAL_sizeof SCOPE LITERAL_dynamic_cast LITERAL_static_cast LITERAL_reinterpret_cast NOT LITERAL_new LITERAL_delete DECIMALINT HEXADECIMALINT CharLiteral FLOATONE FLOATTWO BlockStatement StatementExpression MethodInvocation expression BreakStatement SwitchStatementCase SEMICOLON BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID StringLiteral LITERAL__declspec LITERAL___declspec LPAREN LITERAL_const_cast LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void OPERATOR LITERAL_this LITERAL_true LITERAL_false OCTALINT STAR AMPERSAND TILDE PLUS MINUS PLUSPLUS MINUSMINUS LITERAL_sizeof SCOPE LITERAL_dynamic_cast LITERAL_static_cast LITERAL_reinterpret_cast NOT LITERAL_new LITERAL_delete DECIMALINT HEXADECIMALINT CharLiteral FLOATONE FLOATTWO BlockStatement StatementExpression MethodInvocation expression BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RPAREN match StatementExpression MethodInvocation statement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier private static ReferenceType String FormalParameter ReferenceType Object op IfStatement BinaryOperation && BinaryOperation != MethodInvocation Model MethodInvocation MemberReference op getFacade Literal null MethodInvocation Model MethodInvocation getGuarded MethodInvocation MethodInvocation Model MethodInvocation MemberReference op getFacade equals getConcurrencyKind BlockStatement ReturnStatement Literal " ReturnStatement Literal ""	0
MethodDeclaration Modifier public static BasicType boolean FormalParameter ReferenceType String location ReturnStatement MethodInvocation MemberReference location contains	0
MethodDeclaration Modifier public StatementExpression MethodInvocation Literal true	0
MethodDeclaration Modifier public static BasicType short getUmlModifierForVisibility FormalParameter BasicType long LocalVariableDeclaration BasicType short VariableDeclarator Literal IfStatement BinaryOperation > BinaryOperation & MemberReference Literal Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal += IfStatement BinaryOperation > BinaryOperation & MemberReference Literal Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal += IfStatement BinaryOperation > BinaryOperation & MemberReference Literal Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal += IfStatement BinaryOperation > BinaryOperation & MemberReference Literal Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal += IfStatement BinaryOperation > BinaryOperation & MemberReference Literal Literal 0 BlockStatement StatementExpression Assignment MemberReference Literal += BlockStatement StatementExpression Assignment MemberReference Literal += ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Color getFillColor ReturnStatement MethodInvocation MethodInvocation getFillColor getBigPort	0
MethodDeclaration Modifier public setNamespace FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ns StatementExpression MethodInvocation MemberReference ns MemberReference handle addOwnedElement	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object base ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Object getProperty FormalParameter ReferenceType String name ReturnStatement MethodInvocation image MemberReference name getProperty	0
MethodDeclaration Modifier private IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator body Cast ReferenceType String MethodInvocation Model MethodInvocation MethodInvocation getOwner getBody getFacade IfStatement BinaryOperation != MemberReference body Literal null BlockStatement StatementExpression MethodInvocation MemberReference body setText	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement MemberReference ! BlockStatement IfStatement BinaryOperation == MethodInvocation e getSource MemberReference BlockStatement LocalVariableDeclaration ReferenceType FigUseCase VariableDeclarator target Cast ReferenceType FigUseCase MethodInvocation getTarget StatementExpression MethodInvocation target MethodInvocation isSelected BlockStatement StatementExpression SuperMethodInvocation MemberReference e itemStateChanged	1
MethodDeclaration Modifier synchronized protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h LocalVariableDeclaration Modifier final ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds StatementExpression MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation lineFig BinaryOperation + MemberReference x BinaryOperation / MemberReference w Literal 2 MemberReference y MemberReference w MemberReference h setBounds LocalVariableDeclaration Modifier final BasicType int VariableDeclarator BinaryOperation - MemberReference oldBounds y MemberReference y ForStatement EnhancedForControl VariableDeclaration ReferenceType FigActivation VariableDeclarator act MemberReference activations BlockStatement StatementExpression MethodInvocation MemberReference act removeFig StatementExpression MethodInvocation act BinaryOperation - MethodInvocation lineFig getX BinaryOperation / MemberReference FigActivation Literal 2 BinaryOperation - MethodInvocation act getY MemberReference setLocation IfStatement BinaryOperation && BinaryOperation == MethodInvocation activations size Literal 1 BinaryOperation == MethodInvocation act getHeight MemberReference oldBounds height BlockStatement StatementExpression MethodInvocation act MethodInvocation getHeight StatementExpression MethodInvocation MemberReference act addFig StatementExpression MethodInvocation damage StatementExpression Assignment MemberReference _x MemberReference x = StatementExpression Assignment MemberReference _y MemberReference y = StatementExpression Assignment MemberReference MemberReference w = StatementExpression Assignment MemberReference MemberReference h = StatementExpression MethodInvocation Literal MemberReference oldBounds MethodInvocation getBounds	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter ReferenceType String specification StatementExpression MethodInvocation ClassCreator ReferenceType StringSetter MethodDeclaration Modifier public set FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent MemberReference specification MethodInvocation Model MethodInvocation MemberReference handle getFacade createCommand	1
MethodDeclaration Modifier public final propertyChange FormalParameter Modifier final ReferenceType PropertyChangeEvent pve IfStatement BinaryOperation instanceof MemberReference pve ReferenceType UmlChangeEvent BlockStatement LocalVariableDeclaration Modifier final ReferenceType UmlChangeEvent VariableDeclarator event Cast ReferenceType UmlChangeEvent MemberReference pve LocalVariableDeclaration ReferenceType Runnable VariableDeclarator doWorkRunnable ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation MemberReference event modelChanged CatchClause CatchClauseParameter InvalidElementException e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "event = " MethodInvocation event MethodInvocation getName getClass debug StatementExpression MethodInvocation LOG BinaryOperation + Literal = " MethodInvocation event getSource debug StatementExpression MethodInvocation LOG BinaryOperation + Literal = " MethodInvocation event getOldValue debug StatementExpression MethodInvocation LOG BinaryOperation + Literal "name = " MethodInvocation event getPropertyName debug StatementExpression MethodInvocation LOG BinaryOperation + Literal "updateLayout method accessed " Literal "deleted element " MemberReference e debug StatementExpression MethodInvocation SwingUtilities MemberReference doWorkRunnable invokeLater	1
MethodDeclaration Modifier protected ReferenceType String getLabel IfStatement MethodInvocation empty BlockStatement ReturnStatement MethodInvocation Translator Literal localize BlockStatement ReturnStatement MethodInvocation MethodInvocation peek	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Override Annotation Deprecated ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object ns IfStatement MethodInvocation MemberReference ns isValidNamespace BlockStatement ReturnStatement MethodInvocation DiagramFactory MethodInvocation MemberReference Class MemberReference ns Literal null createDiagram getInstance StatementExpression MethodInvocation LOG Literal "No namespace as argument" error StatementExpression MethodInvocation LOG MemberReference ns error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "The argument " MemberReference ns Literal "is not a namespace."	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object activityGraph LocalVariableDeclaration ReferenceType List VariableDeclarator partitions MethodInvocation MethodInvocation getLayer StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getOwner MemberReference activityGraph getCoreHelper IfStatement BinaryOperation == MethodInvocation partitions size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType FigPool VariableDeclarator fp ClassCreator ReferenceType FigPool MethodInvocation getBounds MethodInvocation getSettings StatementExpression MethodInvocation MethodInvocation MemberReference fp add getLayer StatementExpression MethodInvocation MethodInvocation This bringToFront getLayer IfStatement BinaryOperation > MethodInvocation partitions size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType FigPool VariableDeclarator fp MethodInvocation StatementExpression MethodInvocation fp BinaryOperation + MethodInvocation fp getWidth MethodInvocation getWidth LocalVariableDeclaration BasicType int VariableDeclarator x Literal 0 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation partitions iterator LocalVariableDeclaration ReferenceType FigPartition VariableDeclarator f Literal null LocalVariableDeclaration ReferenceType FigPartition VariableDeclarator previousFig Literal null WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference f Cast ReferenceType FigPartition MethodInvocation it next = IfStatement BinaryOperation && BinaryOperation != MemberReference f This BinaryOperation > BinaryOperation + MethodInvocation f getX MethodInvocation f getWidth MemberReference x BlockStatement StatementExpression Assignment MemberReference previousFig MemberReference f = StatementExpression Assignment MemberReference x MethodInvocation f getX = StatementExpression MethodInvocation MemberReference previousFig StatementExpression MethodInvocation This StatementExpression MethodInvocation BinaryOperation + MemberReference x MethodInvocation previousFig getWidth MethodInvocation previousFig getY MethodInvocation getWidth MethodInvocation previousFig getHeight setBounds	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter Annotation SuppressWarnings Literal "unused" BasicType int row FormalParameter Annotation SuppressWarnings Literal "unused" ReferenceType TreePath path StatementExpression MemberReference ++ IfStatement BinaryOperation == MethodInvocation getSelectedObject Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sel MethodInvocation getSelectedObject IfStatement BinaryOperation instanceof MemberReference sel ReferenceType ToDoItem BlockStatement StatementExpression Cast ReferenceType ToDoItem MemberReference sel StatementExpression MethodInvocation LOG BinaryOperation + Literal "2: " MethodInvocation MethodInvocation toString getSelectedObject debug	1
MethodDeclaration Modifier public FormalParameter ReferenceType item LocalVariableDeclaration ReferenceType VariableDeclarator nl MethodInvocation item IfStatement BinaryOperation == MemberReference nl Literal null BlockStatement StatementExpression Assignment MemberReference nl MethodInvocation languages Literal 0 get = StatementExpression MethodInvocation nl MemberReference item StatementExpression MethodInvocation items MemberReference item add	0
MethodDeclaration Modifier public ReferenceType String ToString LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i This MethodInvocation size MemberReference ++ i BlockStatement StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + BinaryOperation + MemberReference i Literal ": " This MethodInvocation MemberReference i get MemberReference id Literal "\n" append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getPseudostate getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public Annotation Override BasicType int ReturnStatement MethodInvocation size	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal 18014398509482000L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier private StatementExpression MethodInvocation discriminator Literal false setFilled StatementExpression MethodInvocation discriminator Literal 0 setLineWidth StatementExpression MethodInvocation discriminator MemberReference FigText END_EDITING StatementExpression MethodInvocation discriminator MemberReference FigText END_EDITING StatementExpression MethodInvocation MemberReference discriminator addFig StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MemberReference ClassCreator ReferenceType PathItemPlacement This MemberReference Literal 50 Literal - 10 StatementExpression Assignment MemberReference ClassCreator ReferenceType = StatementExpression MethodInvocation MemberReference FILL_COLOR setFillColor StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal true	0
MethodDeclaration Modifier private applyWriteOnlyStereotype FormalParameter ReferenceType Object property LocalVariableDeclaration ReferenceType Object VariableDeclarator mSt MethodInvocation ele BinaryOperation + BinaryOperation + BinaryOperation + MemberReference TAG_STEREOTYPE Literal "DefaultNamespace" Literal "." Literal "CSharp_Property_ro" get IfStatement BinaryOperation != MemberReference mSt Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference property MemberReference mSt addStereotype getCoreHelper	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator userPerspectives MethodInvocation Configuration MemberReference Argo Literal "" getString LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator pst ClassCreator ReferenceType StringTokenizer MemberReference userPerspectives Literal ";" IfStatement MethodInvocation pst hasMoreTokens BlockStatement WhileStatement MethodInvocation pst hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation pst nextToken LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator perspectiveDetails ClassCreator ReferenceType StringTokenizer MemberReference Literal "," LocalVariableDeclaration ReferenceType String VariableDeclarator perspectiveName MethodInvocation perspectiveDetails nextToken LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator userDefinedPerspective ClassCreator ReferenceType ExplorerPerspective MemberReference perspectiveName IfStatement MethodInvocation perspectiveDetails hasMoreTokens BlockStatement WhileStatement MethodInvocation perspectiveDetails hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ruleName MethodInvocation perspectiveDetails nextToken TryStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator ruleClass MethodInvocation Class MemberReference ruleName forName LocalVariableDeclaration ReferenceType VariableDeclarator rule Cast ReferenceType MethodInvocation ruleClass newInstance StatementExpression MethodInvocation userDefinedPerspective MemberReference rule addRule CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "could not create rule " MemberReference ruleName Literal " you can try to " Literal "refresh the perspectives to the " Literal "default settings." MemberReference e error CatchClause CatchClauseParameter InstantiationException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "could not create rule " MemberReference ruleName Literal " you can try to " Literal "refresh the perspectives to the " Literal "default settings." MemberReference e error CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "could not create rule " MemberReference ruleName Literal " you can try to " Literal "refresh the perspectives to the " Literal "default settings." MemberReference e error BlockStatement ContinueStatement StatementExpression MethodInvocation MemberReference userDefinedPerspective BlockStatement StatementExpression MethodInvocation IfStatement BinaryOperation == MethodInvocation MethodInvocation size Literal 0 BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public static FormalParameter BasicType boolean StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public modelElementChanged FormalParameter ReferenceType Object element IfStatement BinaryOperation == MemberReference treeModel Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation treeModel MemberReference element modelElementChanged	1
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType This	0
MethodDeclaration Modifier public Annotation Override paint FormalParameter ReferenceType Graphics g IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Trying to paint a FigAssociation without an " error BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation getOwner getFacade BlockStatement StatementExpression MethodInvocation applyArrowHeads IfStatement BinaryOperation && BinaryOperation != MethodInvocation getSourceArrowHead Literal null BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getLineColor setLineColor getSourceArrowHead StatementExpression MethodInvocation MethodInvocation MethodInvocation getLineColor setLineColor StatementExpression SuperMethodInvocation MemberReference g paint	1
MethodDeclaration Modifier public ReferenceType Dimension getMinimumSize LocalVariableDeclaration Modifier final ReferenceType Dimension VariableDeclarator nameSize MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration Modifier final ReferenceType Dimension VariableDeclarator bodySize MethodInvocation MethodInvocation getMinimumSize getBodyText LocalVariableDeclaration BasicType int VariableDeclarator h BinaryOperation + BinaryOperation + MethodInvocation getTopMargin MemberReference nameSize height MethodInvocation getBottomMargin StatementExpression Assignment MemberReference h MethodInvocation regionCompartment MemberReference height getMinimumSize += IfStatement BinaryOperation > MethodInvocation MethodInvocation getText MethodInvocation length getBodyText Literal 0 BlockStatement StatementExpression Assignment MemberReference h MemberReference bodySize height += LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation + BinaryOperation + MethodInvocation getLeftMargin MethodInvocation Math MemberReference nameSize width MemberReference bodySize width max MethodInvocation getRightMargin IfStatement MethodInvocation Model MethodInvocation MethodInvocation getOwner isACompositeState getFacade BlockStatement StatementExpression Assignment MemberReference w MethodInvocation Math Literal 180 MemberReference w max = StatementExpression Assignment MemberReference h MethodInvocation Math Literal 150 MemberReference h max = BlockStatement StatementExpression Assignment MemberReference w MethodInvocation Math Literal 80 MemberReference w max = StatementExpression Assignment MemberReference h MethodInvocation Math Literal 40 MemberReference h max = ReturnStatement ClassCreator ReferenceType Dimension MemberReference w MemberReference h	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType MouseEvent me IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation requestFocus StatementExpression MethodInvocation MemberReference me StatementExpression MethodInvocation Globals This curEditor StatementExpression MethodInvocation Cast ReferenceType MethodInvocation Globals mode StatementExpression MethodInvocation MemberReference me StatementExpression MethodInvocation MemberReference me	0
MethodDeclaration Modifier public handleStartElement FormalParameter ReferenceType XMLElement e SAXException IfStatement MemberReference DBG BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "NOTE: ArgoParser MethodInvocation e getName debug SwitchStatement MethodInvocation tokens MethodInvocation e getName Literal true toToken SwitchStatementCase MemberReference ArgoTokenTable TOKEN_ARGO StatementExpression MethodInvocation MemberReference e BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_DOCUMENTATION StatementExpression MethodInvocation MemberReference e handleDocumentation BreakStatement SwitchStatementCase MemberReference ArgoTokenTable TOKEN_SETTINGS StatementExpression MethodInvocation MemberReference e BreakStatement SwitchStatementCase IfStatement MemberReference DBG BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "WARNING: unknown tag:" MethodInvocation e getName warn BreakStatement	1
MethodDeclaration Modifier public handleResetToDefault IfStatement MemberReference ! initialized BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier protected setNameFig FormalParameter ReferenceType FigText fig StatementExpression Assignment MemberReference MemberReference fig = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier public Annotation Override ReferenceType Fig FormalParameter ReferenceType MouseEvent me FormalParameter BasicType int snapX FormalParameter BasicType int snapY ReturnStatement ClassCreator ReferenceType MemberReference snapX MemberReference snapY Literal 0 Literal 0	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType String name FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType Object VariableDeclarator ret Literal null IfStatement Literal MethodInvocation MethodInvocation MemberReference name getPackageName equals "" BlockStatement IfStatement BinaryOperation && MemberReference BinaryOperation != MemberReference javaProfile Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MethodInvocation javaProfile MethodInvocation iterator MethodInvocation next getProfilePackages StatementExpression Assignment MemberReference ret MethodInvocation Model MethodInvocation MemberReference m MemberReference name lookupIn getFacade = CatchClause CatchClauseParameter Exception e StatementExpression Assignment MemberReference ret Literal null = IfStatement BinaryOperation == MemberReference ret Literal null BlockStatement StatementExpression Assignment MemberReference ret MethodInvocation Model MethodInvocation MemberReference model MemberReference name lookupIn getFacade = ReturnStatement MemberReference ret LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation MethodInvocation MemberReference name getPackageName MemberReference ReturnStatement TernaryExpression BinaryOperation == MemberReference owner Literal null Literal null MethodInvocation Model MethodInvocation MemberReference owner MethodInvocation MemberReference name lookupIn getFacade	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent e LocalVariableDeclaration Modifier final BasicType int VariableDeclarator index MethodInvocation MethodInvocation getSelectedIndex StatementExpression MethodInvocation BinaryOperation && BinaryOperation > MemberReference index Literal - 1 BinaryOperation < MemberReference index BinaryOperation - MethodInvocation MethodInvocation getSize getModel Literal 1 setEnabled	0
MethodDeclaration Modifier public Annotation Override dragHandle FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h FormalParameter ReferenceType Handle handle LocalVariableDeclaration ReferenceType FigMessage VariableDeclarator message Cast ReferenceType FigMessage MethodInvocation getContent IfStatement MethodInvocation message BlockStatement StatementExpression MethodInvocation message Literal 0 BinaryOperation - MemberReference y MethodInvocation message getY translate BlockStatement StatementExpression SuperMethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h MemberReference handle dragHandle StatementExpression MethodInvocation	0
MethodDeclaration Modifier protected ReferenceType String getProperty IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public final mAMPERSAND FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference AMPERSAND = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal '&' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public static FormalParameter ReferenceType factory StatementExpression MethodInvocation Literal 0 MemberReference factory add	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getMetaTypes	0
MethodDeclaration Modifier public mouseReleased FormalParameter ReferenceType MouseEvent me IfStatement BinaryOperation || BinaryOperation || MethodInvocation me isConsumed MemberReference ! armed BinaryOperation == MemberReference Literal - 1 BlockStatement StatementExpression Assignment MemberReference armed Literal false = StatementExpression SuperMethodInvocation MemberReference me mouseReleased ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation me getX VariableDeclarator y MethodInvocation me getY LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator newFig Literal null LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator mousePoint ClassCreator ReferenceType Rectangle BinaryOperation - MemberReference x Literal 5 BinaryOperation - MemberReference y Literal 5 Literal 5 Literal 5 LocalVariableDeclaration ReferenceType Editor VariableDeclarator editor MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType VariableDeclarator lm MethodInvocation editor getLayerManager LocalVariableDeclaration ReferenceType Layer VariableDeclarator active MethodInvocation lm getActiveLayer LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator figs MethodInvocation active MemberReference mousePoint elementsIn WhileStatement MethodInvocation figs hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator candidateFig Cast ReferenceType Fig MethodInvocation figs nextElement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference candidateFig ReferenceType FigNodeModelElement MethodInvocation candidateFig BlockStatement StatementExpression Assignment MemberReference newFig Cast ReferenceType FigNodeModelElement MemberReference candidateFig = IfStatement BinaryOperation == MemberReference newFig Literal null BlockStatement StatementExpression Assignment MemberReference armed Literal false = StatementExpression SuperMethodInvocation MemberReference me mouseReleased ReturnStatement LocalVariableDeclaration ReferenceType VariableDeclarator mgm Cast ReferenceType MethodInvocation editor getGraphModel LocalVariableDeclaration ReferenceType FigNode VariableDeclarator oldFig Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator isSource Literal false IfStatement BinaryOperation == MemberReference Literal 0 BlockStatement StatementExpression Assignment MemberReference oldFig MemberReference sourceFig = StatementExpression Assignment MemberReference isSource Literal true = BlockStatement StatementExpression Assignment MemberReference oldFig MemberReference destFig = IfStatement MethodInvocation mgm MethodInvocation newFig getOwner MethodInvocation oldFig getOwner This MethodInvocation getContent MethodInvocation getOwner canChangeConnectedNode BlockStatement StatementExpression MethodInvocation mgm MethodInvocation newFig getOwner MethodInvocation oldFig getOwner This MethodInvocation getContent MethodInvocation getOwner MemberReference isSource StatementExpression MethodInvocation editor MethodInvocation MethodInvocation getContent getSelectionManager StatementExpression Assignment MemberReference armed Literal false = LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator figEdge Cast ReferenceType FigEdgeModelElement MethodInvocation getContent StatementExpression MethodInvocation figEdge determineFigNodes StatementExpression MethodInvocation figEdge StatementExpression SuperMethodInvocation MemberReference me mouseReleased ReturnStatement	1
MethodDeclaration Modifier public ReferenceType NotationSettings getNotationSettings FormalParameter ReferenceType NotationProvider IfStatement BinaryOperation == MemberReference notationProvider MemberReference BlockStatement ReturnStatement MethodInvocation getNotationSettings ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean isContainmentValid FormalParameter ReferenceType Object metaType FormalParameter ReferenceType Object container ForStatement EnhancedForControl VariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator containerType MethodInvocation validContainmentMap keySet BlockStatement IfStatement MethodInvocation containerType MemberReference container isInstance BlockStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator validElements MethodInvocation validContainmentMap MemberReference containerType get ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator eIter Literal 0 BinaryOperation < MemberReference eIter MemberReference validElements length MemberReference ++ eIter BlockStatement IfStatement BinaryOperation == MemberReference metaType MemberReference ArraySelector MemberReference eIter validElements BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType JDialog VariableDeclarator dialog ClassCreator ReferenceType ExceptionDialog MethodInvocation ArgoFrame getFrame MethodInvocation Translator Literal "dialog.error.title" localize MemberReference message MethodInvocation ExceptionDialog MemberReference message MemberReference ex BinaryOperation instanceof MemberReference ex ReferenceType OpenException StatementExpression MethodInvocation dialog Literal true setVisible	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal	0
MethodDeclaration Modifier public Annotation Deprecated BasicType boolean FormalParameter BasicType boolean overwrite FormalParameter ReferenceType File file FormalParameter ReferenceType ProgressMonitor pmw StatementExpression MethodInvocation LOG Literal "Saving the project" info IfStatement MethodInvocation ! PersistenceManager MethodInvocation MethodInvocation ArgoFrame getFrame MemberReference overwrite MemberReference file getInstance BlockStatement ReturnStatement Literal false IfStatement This MethodInvocation MemberReference file isFileReadonly BlockStatement StatementExpression MethodInvocation JOptionPane This MethodInvocation Translator Literal "optionpane.save-project-read-only" localize MethodInvocation Translator Literal "optionpane.save-project-read-only-title" localize MemberReference JOptionPane INFORMATION_MESSAGE showMessageDialog ReturnStatement Literal false LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ReturnStatement MethodInvocation MemberReference file MemberReference pmw MemberReference project	1
MethodDeclaration ReferenceType Color ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public setSources FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection specifications StatementExpression SuperMethodInvocation MemberReference handle MemberReference specifications setSources StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public Annotation Override ReferenceType Fig FormalParameter ReferenceType MouseEvent e FormalParameter BasicType int snapX FormalParameter BasicType int snapY ReturnStatement ClassCreator ReferenceType ArgoFigText Literal null ClassCreator ReferenceType Rectangle MemberReference snapX MemberReference snapY Literal 0 Literal 0 MethodInvocation DiagramUtils MethodInvocation getDiagramSettings getActiveDiagram Literal true	0
MethodDeclaration Modifier public BasicType int getLineNumber ReturnStatement This MemberReference lineNumber	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object target ReturnStatement BinaryOperation instanceof MemberReference target ReferenceType ToDoItem	0
MethodDeclaration Modifier public static enableCritiquing SynchronizedStatement MethodInvocation StatementExpression MethodInvocation -- MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public doAction StatementExpression MethodInvocation MemberReference step doAction	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier public addTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference ReferenceType TaggedValue BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object newNode FormalParameter ReferenceType Object oldNode FormalParameter ReferenceType Object edge FormalParameter BasicType boolean isSource IfStatement MemberReference isSource BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference edge MemberReference newNode getStateMachinesHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference edge MemberReference newNode setTarget getCommonBehaviorHelper	0
MethodDeclaration Modifier public static ReferenceType String getDocs FormalParameter ReferenceType Object o FormalParameter ReferenceType String indent FormalParameter ReferenceType String header FormalParameter ReferenceType String prefix FormalParameter ReferenceType String footer LocalVariableDeclaration ReferenceType String VariableDeclarator sResult MethodInvocation MemberReference o MemberReference indent defaultFor IfStatement MethodInvocation Model MethodInvocation MemberReference o isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference o getTaggedValues getFacade IfStatement BinaryOperation != MemberReference iter Literal null BlockStatement WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation iter next LocalVariableDeclaration ReferenceType String VariableDeclarator tag MethodInvocation Model MethodInvocation MemberReference tv getTagOfTag getFacade IfStatement BinaryOperation || MethodInvocation MemberReference tag equals MethodInvocation MemberReference tag equals BlockStatement StatementExpression Assignment MemberReference sResult MethodInvocation Model MethodInvocation MemberReference tv getValueOfTag getFacade = IfStatement MethodInvocation MemberReference tag equals BlockStatement BreakStatement IfStatement BinaryOperation == MemberReference sResult Literal null BlockStatement ReturnStatement Literal "(No LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation != MemberReference header Literal null BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference LINE_SEPARATOR append MemberReference header append IfStatement BinaryOperation != MemberReference indent Literal null BlockStatement IfStatement BinaryOperation != MemberReference prefix Literal null BlockStatement StatementExpression Assignment MemberReference prefix BinaryOperation + MemberReference indent MemberReference prefix = IfStatement BinaryOperation != MemberReference footer Literal null BlockStatement StatementExpression Assignment MemberReference footer BinaryOperation + MemberReference indent MemberReference footer = StatementExpression MethodInvocation MemberReference result MemberReference prefix MemberReference sResult Literal 0 appendComment IfStatement BinaryOperation != MemberReference footer Literal null BlockStatement StatementExpression MethodInvocation result MemberReference footer append ReturnStatement MethodInvocation result toString	1
MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference showBidirectionalArrows MemberReference ! showem =	0
MethodDeclaration Modifier public ReferenceType EnumerationLiteral FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Object enumeration IfStatement BinaryOperation instanceof MemberReference enumeration ReferenceType Enumeration BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The enumeration must be instance of LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType EnumerationLiteral VariableDeclarator enumerationLiteral MethodInvocation IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation enumerationLiteral MemberReference name setName StatementExpression MethodInvocation enumerationLiteral Cast ReferenceType Enumeration MemberReference enumeration StatementExpression MethodInvocation MethodInvocation MemberReference enumerationLiteral add LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the enumeration literal by #" StatementExpression MethodInvocation MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get MemberReference enumeration ReturnStatement Cast ReferenceType EnumerationLiteral MethodInvocation run MethodInvocation Literal 0 get	0
MethodDeclaration Modifier public ReferenceType pop LocalVariableDeclaration ReferenceType VariableDeclarator item SuperMethodInvocation pop StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference MemberReference item StatementExpression MethodInvocation MemberReference MethodInvocation size ReturnStatement MemberReference item	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference handler	1
MethodDeclaration Modifier public BasicType boolean isAbstract FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement Cast ReferenceType Operation MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement ReturnStatement Cast ReferenceType GeneralizableElement MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BlockStatement ReturnStatement Cast ReferenceType UmlAssociation MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e IfStatement MethodInvocation MemberReference handle isAUMLElement BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean	0
MethodDeclaration Modifier protected Annotation Deprecated updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation == MemberReference oldOwner MemberReference newOwner BlockStatement ReturnStatement IfStatement BinaryOperation != MemberReference oldOwner Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference oldOwner removeModelEventListener getPump IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference newOwner Literal "remove" addModelEventListener getPump	1
MethodDeclaration Modifier static protected BasicType int getPopupAddOffset ReturnStatement MemberReference popupAddOffset	0
MethodDeclaration Modifier private ReferenceType URL makeZipEntryUrl FormalParameter ReferenceType URL url FormalParameter ReferenceType String entryName MalformedURLException LocalVariableDeclaration ReferenceType String VariableDeclarator BinaryOperation + BinaryOperation + BinaryOperation + Literal "jar:" MemberReference url Literal "!/" MemberReference entryName ReturnStatement ClassCreator ReferenceType URL MemberReference	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object base ReturnStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference base isAPackage getFacade MethodInvocation Model MethodInvocation MemberReference base isAClassifier getFacade	0
MethodDeclaration Modifier public FormalParameter ReferenceType element StatementExpression MethodInvocation ns MemberReference element push	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object m ReturnStatement MethodInvocation Model MethodInvocation MemberReference m isASignal getFacade	0
MethodDeclaration Modifier private StatementExpression Assignment MemberReference eastPane MethodInvocation MemberReference EAST MethodInvocation getInstance = StatementExpression Assignment MemberReference MethodInvocation MemberReference SOUTH MethodInvocation getInstance = StatementExpression Assignment MemberReference southEastPane MethodInvocation MemberReference SOUTHEAST MethodInvocation getInstance = StatementExpression Assignment MemberReference northWestPane MethodInvocation MemberReference NORTHWEST MethodInvocation getInstance = StatementExpression Assignment MemberReference northPane MethodInvocation MemberReference MethodInvocation getInstance = StatementExpression Assignment MemberReference northEastPane MethodInvocation MemberReference NORTHEAST MethodInvocation getInstance = IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference Position MemberReference put IfStatement BinaryOperation != MemberReference southEastPane Literal null BlockStatement StatementExpression MethodInvocation MemberReference Position MemberReference southEastPane put IfStatement BinaryOperation != MemberReference eastPane Literal null BlockStatement StatementExpression MethodInvocation MemberReference Position MemberReference eastPane put IfStatement BinaryOperation != MemberReference northWestPane Literal null BlockStatement StatementExpression MethodInvocation MemberReference Position MemberReference northWestPane put IfStatement BinaryOperation != MemberReference northPane Literal null BlockStatement StatementExpression MethodInvocation MemberReference Position MemberReference northPane put IfStatement BinaryOperation != MemberReference northEastPane Literal null BlockStatement StatementExpression MethodInvocation MemberReference Position MemberReference northEastPane put LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator entrySet WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation TargetManager MethodInvocation Cast ReferenceType DetailsPane Cast ReferenceType Map ReferenceType Entry MethodInvocation it next addTargetListener getInstance	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier protected Annotation Override handleError FormalParameter ReferenceType Exception exception StatementExpression SuperMethodInvocation MemberReference exception handleError ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference exception	1
MethodDeclaration Modifier public ReferenceType FormalParameter BasicType int s IfStatement BinaryOperation && BinaryOperation > MemberReference s Literal 0 BinaryOperation <= MemberReference s MethodInvocation size BlockStatement ReturnStatement MethodInvocation BinaryOperation - MemberReference s Literal 1 get ReturnStatement Literal null	0
MethodDeclaration BasicType boolean ReturnStatement MemberReference ArraySelector Literal 4 t	0
MethodDeclaration Modifier public ReferenceType Point getLocation ReturnStatement MethodInvocation MethodInvocation getLocation	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType p1 StatementExpression MethodInvocation model MethodInvocation getText setLanguage	0
MethodDeclaration Modifier private StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig	0
MethodDeclaration Modifier public ReferenceType Collection parseFiles FormalParameter ReferenceType Project p FormalParameter ReferenceType Collection TypeArgument ReferenceType File files FormalParameter ReferenceType ImportSettings settings FormalParameter ReferenceType ProgressMonitor monitor ImportException StatementExpression Assignment MemberReference secondPassFiles ClassCreator ReferenceType ArrayList = StatementExpression Assignment MemberReference newElements ClassCreator ReferenceType HashSet = StatementExpression Assignment MemberReference javaProfile MethodInvocation MemberReference p = StatementExpression MethodInvocation monitor MethodInvocation MemberReference files countFiles setMaximumProgress ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator file MemberReference files BlockStatement StatementExpression MethodInvocation monitor BinaryOperation + Literal "Parsing file: " MemberReference file updateMainTask IfStatement MethodInvocation monitor isCanceled BlockStatement BreakStatement StatementExpression MethodInvocation MemberReference p Cast ReferenceType File MemberReference file MemberReference monitor processFile StatementExpression MethodInvocation monitor MemberReference ++ fileCount updateProgress IfStatement BinaryOperation && BinaryOperation > MethodInvocation MemberReference secondPassFiles count2ndPassFiles Literal 0 MethodInvocation ! monitor isCanceled BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator next MemberReference secondPassFiles BlockStatement TryStatement IfStatement BinaryOperation instanceof MemberReference next ReferenceType Collection BlockStatement StatementExpression MethodInvocation MemberReference p Cast ReferenceType Collection MemberReference next MemberReference monitor do2ndJarPass BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator nextFile Cast ReferenceType File MemberReference next LocalVariableDeclaration ReferenceType String VariableDeclarator fileName MethodInvocation nextFile getName LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator fis TryStatement StatementExpression Assignment MemberReference fis ClassCreator ReferenceType FileInputStream MemberReference nextFile = CatchClause CatchClauseParameter FileNotFoundException e ThrowStatement ClassCreator ReferenceType ImportException MemberReference e StatementExpression MethodInvocation monitor BinaryOperation + Literal "Parsing class 2nd pass - " MemberReference fileName updateSubTask IfStatement MethodInvocation monitor isCanceled BlockStatement BreakStatement StatementExpression MethodInvocation MemberReference p MemberReference fis MemberReference fileName parseFile StatementExpression MethodInvocation monitor MemberReference ++ fileCount updateProgress CatchClause CatchClauseParameter ANTLRException e ThrowStatement ClassCreator ReferenceType ImportException MemberReference e CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType ImportException MemberReference e ReturnStatement MemberReference newElements	1
MethodDeclaration Modifier public ReferenceType Object getTarget ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType String VariableDeclarator ownerPackageName VariableDeclarator currentName MemberReference name StatementExpression Assignment MemberReference ownerPackageName MethodInvocation MemberReference currentName getPackageName = WhileStatement Literal ! MethodInvocation MemberReference ownerPackageName equals "" BlockStatement StatementExpression Assignment MemberReference currentName MemberReference ownerPackageName = StatementExpression Assignment MemberReference ownerPackageName MethodInvocation MemberReference currentName getPackageName = LocalVariableDeclaration ReferenceType Object VariableDeclarator mPackage MethodInvocation MemberReference currentName getPackage IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference importSession Literal null BinaryOperation != MethodInvocation importSession getSrcPath Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference mPackage MemberReference ImportInterface getTaggedValue getFacade Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mPackage MemberReference ImportInterface MethodInvocation importSession getSrcPath setTaggedValue getCoreHelper StatementExpression Assignment MemberReference mPackage MethodInvocation MemberReference name getPackage = StatementExpression Assignment MemberReference currentPackage MemberReference mPackage = StatementExpression MethodInvocation parseState MemberReference mPackage addPackageContext LocalVariableDeclaration ReferenceType Object VariableDeclarator component MethodInvocation Model MethodInvocation MemberReference currentPackage MemberReference fileName lookupIn getFacade IfStatement BinaryOperation == MemberReference component Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation parseState getComponent MemberReference currentPackage setNamespace getCoreHelper BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator oldComponent MethodInvocation parseState getComponent StatementExpression MethodInvocation Model MethodInvocation MemberReference oldComponent delete getUmlFactory StatementExpression MethodInvocation newElements MemberReference oldComponent remove StatementExpression MethodInvocation parseState MemberReference component addComponent	1
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation + MemberReference nameDim width BinaryOperation * MemberReference PADDING Literal 2 LocalVariableDeclaration BasicType int VariableDeclarator h BinaryOperation + MemberReference nameDim height MemberReference PADDING ReturnStatement ClassCreator ReferenceType Dimension MethodInvocation Math MemberReference w BinaryOperation / MemberReference Literal 2 max MethodInvocation Math MemberReference h BinaryOperation / MemberReference H Literal 2 max	0
MethodDeclaration Modifier public caseAConstraintBody FormalParameter ReferenceType AConstraintBody node IfStatement BinaryOperation == MemberReference nameID Literal 0 BlockStatement StatementExpression MethodInvocation node ClassCreator ReferenceType MemberReference sName setName BlockStatement StatementExpression MethodInvocation node ClassCreator ReferenceType BinaryOperation + BinaryOperation + MemberReference sName Literal "_" MemberReference nameID setName StatementExpression MemberReference ++ nameID	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object source FormalParameter ReferenceType Object path StatementExpression MethodInvocation MemberReference source MemberReference path Literal null Literal null	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object element FormalParameter ReferenceType Object model IfStatement BinaryOperation == MemberReference model Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A namespace must be LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator Cast ReferenceType ModelElement MemberReference element LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType Namespace VariableDeclarator Literal null IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference add StatementExpression Assignment MemberReference MethodInvocation getNamespace = BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType Namespace MemberReference model = StatementExpression MethodInvocation MemberReference setNamespace ReturnStatement MemberReference	0
MethodDeclaration Modifier private BasicType int newPosition FormalParameter BasicType int index FormalParameter BasicType int size FormalParameter ReferenceType LocalVariableDeclaration Modifier final BasicType int VariableDeclarator IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression Assignment MemberReference BinaryOperation + MemberReference index Literal 1 = IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression Assignment MemberReference BinaryOperation - MemberReference index Literal 1 = IfStatement BinaryOperation == MemberReference MemberReference TOP BlockStatement StatementExpression Assignment MemberReference Literal 0 = IfStatement BinaryOperation == MemberReference MemberReference BOTTOM BlockStatement StatementExpression Assignment MemberReference BinaryOperation - MemberReference size Literal 1 = BlockStatement StatementExpression Assignment MemberReference Literal 0 = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getNamespace getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public doAction FormalParameter BasicType int oldStep LocalVariableDeclaration ReferenceType Object VariableDeclarator oper LocalVariableDeclaration ReferenceType Collection VariableDeclarator savedTargets SwitchStatement MemberReference oldStep SwitchStatementCase Literal 1 LocalVariableDeclaration ReferenceType String VariableDeclarator newName MethodInvocation getSuggestion IfStatement BinaryOperation != MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference newName MethodInvocation step1 getText = LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation getModelElement StatementExpression Assignment MemberReference savedTargets MethodInvocation TargetManager MethodInvocation getTargets getInstance = LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getDefaultReturnType getManager StatementExpression Assignment MemberReference oper MethodInvocation Model MethodInvocation MemberReference me MemberReference returnType MemberReference newName buildOperation2 getCoreFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference oper MethodInvocation MemberReference oper addStereotype getCoreHelper StatementExpression MethodInvocation ProjectManager MethodInvocation updateRoots getManager StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference savedTargets setTargets getInstance BreakStatement	1
MethodDeclaration Modifier public Annotation Deprecated setTargetScope FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException	1
MethodDeclaration Modifier public ReferenceType FormalParameter BasicType int ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean newValue StatementExpression Assignment MemberReference MemberReference newValue = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public FormalParameter ReferenceType ToDoListEvent StatementExpression MethodInvocation LOG Literal debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation getToDoList = ForStatement EnhancedForControl VariableDeclaration ReferenceType KnowledgeTypeNode VariableDeclarator ktn MethodInvocation KnowledgeTypeNode BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator kt MethodInvocation ktn getName ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement MethodInvocation item MemberReference kt BlockStatement StatementExpression Assignment MemberReference Literal true = IfStatement MemberReference ! BlockStatement ContinueStatement StatementExpression MethodInvocation LOG Literal updating debug StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference ktn = StatementExpression MethodInvocation MemberReference path	0
MethodDeclaration Modifier private ReferenceType InputSource serialTransform FormalParameter ReferenceType String styles FormalParameter ReferenceType InputSource input UmlException LocalVariableDeclaration ReferenceType SAXSource VariableDeclarator myInput ClassCreator ReferenceType SAXSource MemberReference input LocalVariableDeclaration ReferenceType SAXTransformerFactory VariableDeclarator stf Cast ReferenceType SAXTransformerFactory MethodInvocation TransformerFactory newInstance TryStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference styles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator xsltFileName BinaryOperation + MemberReference STYLE_PATH MemberReference ArraySelector MemberReference i styles IfStatement MethodInvocation LOG isInfoEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Transforming with " MemberReference xsltFileName info LocalVariableDeclaration ReferenceType URL VariableDeclarator xsltUrl MethodInvocation MethodInvocation MemberReference xsltFileName getResource getClass IfStatement BinaryOperation == MemberReference xsltUrl Literal null BlockStatement ThrowStatement ClassCreator ReferenceType UmlException BinaryOperation + Literal "Error opening XSLT style : " MemberReference xsltFileName LocalVariableDeclaration ReferenceType StreamSource VariableDeclarator xsltStreamSource ClassCreator ReferenceType StreamSource MethodInvocation xsltUrl openStream StatementExpression MethodInvocation xsltStreamSource MethodInvocation xsltUrl toExternalForm setSystemId LocalVariableDeclaration ReferenceType File VariableDeclarator tmpOutFile MethodInvocation File MemberReference TEMP_XMI_FILE_PREFIX Literal ".xmi" createTempFile StatementExpression MethodInvocation tmpOutFile deleteOnExit LocalVariableDeclaration ReferenceType StreamResult VariableDeclarator result ClassCreator ReferenceType StreamResult ClassCreator ReferenceType FileOutputStream MemberReference tmpOutFile LocalVariableDeclaration ReferenceType Transformer VariableDeclarator transformer MethodInvocation stf MemberReference xsltStreamSource newTransformer StatementExpression MethodInvocation transformer MemberReference myInput MemberReference result transform StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Wrote converted XMI file - " MemberReference tmpOutFile Literal " converted using : " MemberReference xsltFileName info StatementExpression Assignment MemberReference myInput ClassCreator ReferenceType SAXSource ClassCreator ReferenceType InputSource ClassCreator ReferenceType FileInputStream MemberReference tmpOutFile = StatementExpression MethodInvocation myInput MethodInvocation tmpOutFile MethodInvocation toURL MethodInvocation toExternalForm toURI setSystemId ReturnStatement MethodInvocation myInput CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType UmlException MemberReference e CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType UmlException MemberReference e CatchClause CatchClauseParameter TransformerException e ThrowStatement ClassCreator ReferenceType UmlException MemberReference e	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object clazz ReturnStatement MethodInvocation impl MemberReference clazz	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType Object o IfStatement BinaryOperation || BinaryOperation == MemberReference o Literal null BinaryOperation == MemberReference o MethodInvocation getOwner BlockStatement ReturnStatement Literal true ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fig MethodInvocation getFigs BlockStatement IfStatement MethodInvocation Cast ReferenceType Fig MemberReference fig MemberReference o BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public dragHandle FormalParameter BasicType int mX FormalParameter BasicType int mY FormalParameter BasicType int anX FormalParameter BasicType int anY FormalParameter ReferenceType Handle hand StatementExpression Assignment MemberReference mX MethodInvocation Math MemberReference mX Literal 0 max = StatementExpression Assignment MemberReference mY MethodInvocation Math MemberReference mY Literal 0 max = IfStatement BinaryOperation < MemberReference hand index Literal 10 BlockStatement StatementExpression MethodInvocation Literal false StatementExpression SuperMethodInvocation MemberReference mX MemberReference mY MemberReference anX MemberReference anY MemberReference hand dragHandle ReturnStatement IfStatement MethodInvocation ! MemberReference hand index BlockStatement ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator cx MethodInvocation MethodInvocation getX getContent VariableDeclarator cy MethodInvocation MethodInvocation getY getContent LocalVariableDeclaration BasicType int VariableDeclarator cw MethodInvocation MethodInvocation getWidth getContent VariableDeclarator ch MethodInvocation MethodInvocation getHeight getContent LocalVariableDeclaration BasicType int VariableDeclarator bx MemberReference mX VariableDeclarator by MemberReference mY StatementExpression Assignment MemberReference button MemberReference hand index = SwitchStatement MemberReference hand index SwitchStatementCase TOP StatementExpression Assignment MemberReference by MemberReference cy = StatementExpression Assignment MemberReference bx BinaryOperation + MemberReference cx BinaryOperation / MemberReference cw Literal 2 = BreakStatement SwitchStatementCase BOTTOM StatementExpression Assignment MemberReference by BinaryOperation + MemberReference cy MemberReference ch = StatementExpression Assignment MemberReference bx BinaryOperation + MemberReference cx BinaryOperation / MemberReference cw Literal 2 = BreakStatement SwitchStatementCase LEFT StatementExpression Assignment MemberReference by BinaryOperation + MemberReference cy BinaryOperation / MemberReference ch Literal 2 = StatementExpression Assignment MemberReference bx MemberReference cx = BreakStatement SwitchStatementCase RIGHT StatementExpression Assignment MemberReference by BinaryOperation + MemberReference cy BinaryOperation / MemberReference ch Literal 2 = StatementExpression Assignment MemberReference bx BinaryOperation + MemberReference cx MemberReference cw = BreakStatement SwitchStatementCase LOWER_LEFT StatementExpression Assignment MemberReference by BinaryOperation + MemberReference cy MemberReference ch = StatementExpression Assignment MemberReference bx MemberReference cx = BreakStatement SwitchStatementCase StatementExpression MethodInvocation LOG Literal "invalid handle number" warn BreakStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator nodeType MethodInvocation MemberReference hand index getNewNodeType LocalVariableDeclaration ReferenceType Object VariableDeclarator edgeType MethodInvocation MemberReference hand index LocalVariableDeclaration BasicType boolean VariableDeclarator reverse MethodInvocation MemberReference hand index isReverseEdge IfStatement BinaryOperation && BinaryOperation != MemberReference edgeType Literal null BinaryOperation != MemberReference nodeType Literal null BlockStatement LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType VariableDeclarator m MethodInvocation MemberReference ce MemberReference edgeType MethodInvocation This StatementExpression MethodInvocation m Cast ReferenceType FigNode MethodInvocation getContent MethodInvocation MethodInvocation getOwner getContent MemberReference bx MemberReference by MemberReference reverse setup StatementExpression MethodInvocation ce MemberReference m	1
MethodDeclaration Modifier public addModelEventListener FormalParameter ReferenceType listener FormalParameter ReferenceType Object modelelement FormalParameter ReferenceType String StatementExpression MethodInvocation MemberReference listener MemberReference modelelement ArrayCreator ReferenceType String ArrayInitializer MemberReference addModelEventListener	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation movedModelElement MethodInvocation MethodInvocation getSelectedValues ArraySelector Literal 0 setElement AssertStatement BinaryOperation != MemberReference movedModelElement Literal null StatementExpression MethodInvocation Model MethodInvocation MemberReference target MethodInvocation movedModelElement getElement MemberReference UmlHelper.Direction TOP move getUmlHelper	1
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier private static StatementExpression MethodInvocation System Literal Literal setProperty StatementExpression MethodInvocation System Literal Literal "true" setProperty StatementExpression MethodInvocation System Literal Literal setProperty	0
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier static ReferenceType getDefault FormalParameter ReferenceType Collection TypeArgument ReferenceType c LocalVariableDeclaration ReferenceType VariableDeclarator locale MethodInvocation getDefault ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MemberReference c BlockStatement IfStatement MethodInvocation locale MethodInvocation getLocale equals BlockStatement ReturnStatement MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Color getLineColor ReturnStatement MethodInvocation cover getLineColor	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType EList TypeArgument ReferenceType Class VariableDeclarator eList Cast ReferenceType Stereotype MemberReference handle LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType Class VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Class LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation eList iterator WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression MethodInvocation list Cast ReferenceType Class MethodInvocation iter next add ReturnStatement MemberReference list	1
MethodDeclaration Modifier public BasicType boolean predicate FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr ReturnStatement Literal false	0
MethodDeclaration Modifier protected ReferenceType Type getOclRepresentation FormalParameter ReferenceType Object foundType LocalVariableDeclaration ReferenceType Type VariableDeclarator result Literal null IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal "int" equals getFacade MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal "Integer" equals getFacade BlockStatement StatementExpression Assignment MemberReference result MemberReference Basic INTEGER = IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal "float" equals getFacade MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal "double" equals getFacade BlockStatement StatementExpression Assignment MemberReference result MemberReference Basic REAL = IfStatement BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal "bool" equals getFacade MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal equals getFacade MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal "boolean" equals getFacade BlockStatement StatementExpression Assignment MemberReference result MemberReference Basic BOOLEAN = IfStatement MethodInvocation Model MethodInvocation MemberReference foundType getName MethodInvocation Literal "String" equals getFacade BlockStatement StatementExpression Assignment MemberReference result MemberReference Basic STRING = IfStatement BinaryOperation == MemberReference result Literal null BlockStatement StatementExpression Assignment MemberReference result ClassCreator ReferenceType MemberReference foundType = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override BasicType int getLineWidth ReturnStatement MethodInvocation getLineWidth	0
MethodDeclaration Modifier protected ReferenceType FormalParameter ReferenceType List TypeArgument ReferenceType Action actions LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator buttonPanel ClassCreator ReferenceType ClassCreator ReferenceType FlexiGridLayout Literal 2 Literal 1 MemberReference FlexiGridLayout LocalVariableDeclaration Modifier final ReferenceType JToolBar VariableDeclarator toolbar IfStatement BinaryOperation == MethodInvocation actions size Literal 1 BlockStatement LocalVariableDeclaration Modifier final ReferenceType ToolButton VariableDeclarator tb ClassCreator ReferenceType ToolButton MethodInvocation actions Literal 0 get LocalVariableDeclaration Modifier final ReferenceType ToolBarFactory VariableDeclarator tbf ClassCreator ReferenceType ToolBarFactory MemberReference actions StatementExpression Assignment MemberReference toolbar MethodInvocation tbf createToolBar = StatementExpression MethodInvocation toolbar Literal true setRollover BlockStatement LocalVariableDeclaration Modifier final ReferenceType PopupToolBoxButton VariableDeclarator ptb ClassCreator ReferenceType PopupToolBoxButton MethodInvocation actions Literal 0 get MethodInvocation actions size Literal 1 Literal true ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator action MemberReference actions BlockStatement StatementExpression MethodInvocation ptb MemberReference action add LocalVariableDeclaration Modifier final ReferenceType ToolBarFactory VariableDeclarator tbf ClassCreator ReferenceType ToolBarFactory ArrayCreator ReferenceType Object ArrayInitializer StatementExpression Assignment MemberReference toolbar MethodInvocation tbf createToolBar = StatementExpression MethodInvocation toolbar Literal true setRollover StatementExpression MethodInvocation toolbar MemberReference ptb add StatementExpression MethodInvocation buttonPanel MemberReference toolbar add ReturnStatement MemberReference buttonPanel	1
MethodDeclaration Modifier private StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal false setTextFilled StatementExpression MethodInvocation MemberReference FigText StatementExpression MethodInvocation Literal 3 StatementExpression MethodInvocation Literal 3 StatementExpression SuperMethodInvocation Literal 0 setLineWidth	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier private modelChanged FormalParameter ReferenceType UmlChangeEvent event IfStatement BinaryOperation instanceof MemberReference event ReferenceType AttributeChangeEvent BlockStatement StatementExpression MethodInvocation treeModel MethodInvocation event getSource modelElementChanged IfStatement BinaryOperation instanceof MemberReference event ReferenceType RemoveAssociationEvent BlockStatement IfStatement Literal ! "namespace" BlockStatement StatementExpression MethodInvocation treeModel Cast ReferenceType RemoveAssociationEvent MemberReference event modelElementChanged IfStatement BinaryOperation instanceof MemberReference event ReferenceType AddAssociationEvent BlockStatement IfStatement Literal ! "namespace" BlockStatement StatementExpression MethodInvocation treeModel Cast ReferenceType AddAssociationEvent MemberReference event modelElementAdded IfStatement BinaryOperation instanceof MemberReference event ReferenceType DeleteInstanceEvent BlockStatement StatementExpression MethodInvocation treeModel Cast ReferenceType DeleteInstanceEvent MemberReference event	1
MethodDeclaration Modifier public ReferenceType ListSet getOffenders LocalVariableDeclaration ReferenceType ListSet VariableDeclarator all MemberReference allOffenders IfStatement BinaryOperation == MemberReference all Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation items size StatementExpression Assignment MemberReference all ClassCreator ReferenceType ListSet BinaryOperation * MemberReference size Literal 2 = SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement StatementExpression MethodInvocation all MethodInvocation item getOffenders addAll StatementExpression Assignment MemberReference allOffenders MemberReference all = ReturnStatement MemberReference all	1
MethodDeclaration Modifier public Annotation Override modelChanged FormalParameter ReferenceType UmlChangeEvent evt IfStatement BinaryOperation instanceof MemberReference evt ReferenceType AttributeChangeEvent BlockStatement IfStatement MethodInvocation evt MethodInvocation Literal "operation" equals getPropertyName BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation evt getSource MethodInvocation getTarget BinaryOperation != MethodInvocation MemberReference evt getChangedElement Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MethodInvocation MemberReference evt getChangedElement StatementExpression MethodInvocation MemberReference elem setSelectedItem	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public BasicType int getIconWidth ReturnStatement Literal 9	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter ReferenceType Object element FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types	0
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation Literal "remove" Literal null Literal null StatementExpression MethodInvocation notifier ClassCreator ReferenceType Literal "remove" This Literal 0 sendNotification	0
MethodDeclaration Modifier public ReferenceType Object getAttribute FormalParameter ReferenceType String key ReturnStatement MethodInvocation attributes MemberReference key get	0
MethodDeclaration Modifier protected ReferenceType String FormalParameter ReferenceType Object t ReturnStatement TernaryExpression BinaryOperation == MemberReference t Literal null Literal "Nothing selected" MethodInvocation t toString	0
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType String ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation tabPanelList size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator title MethodInvocation topLevelTabbedPane MemberReference i getTitleAt IfStatement BinaryOperation && BinaryOperation != MemberReference title Literal null MethodInvocation title MemberReference equals BlockStatement ReturnStatement MemberReference i ReturnStatement Literal - 1	0
MethodDeclaration Modifier private BasicType boolean illegalArgumentBoolean FormalParameter ReferenceType Object arg StatementExpression MethodInvocation MemberReference arg illegalArgument ReturnStatement Literal false	0
MethodDeclaration Modifier public static doLoad FormalParameter BasicType boolean StatementExpression MethodInvocation MethodInvocation MemberReference getInstance	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MemberReference name	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public BasicType boolean disable ReturnStatement Literal false	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal true	1
MethodDeclaration Modifier public setNewAction FormalParameter ReferenceType action IfStatement BinaryOperation != MemberReference action Literal null StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment MemberReference MemberReference action =	1
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType SequenceDiagram VariableDeclarator sd Cast ReferenceType SequenceDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference sd computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier protected removeDiagram FormalParameter ReferenceType ArgoDiagram d StatementExpression MethodInvocation diagrams MemberReference d remove LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation d IfStatement BinaryOperation != MemberReference o Literal null BlockStatement StatementExpression MethodInvocation MemberReference o moveToTrash	0
MethodDeclaration Modifier public Annotation Deprecated FormalParameter ReferenceType Object handle FormalParameter ReferenceType String value StatementExpression MethodInvocation impl MemberReference handle MemberReference value	1
MethodDeclaration Modifier public synchronized ReferenceType List TypeArgument ReferenceType SqlCodeCreator IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setAggregation getComponent	0
MethodDeclaration Modifier public Annotation Override BasicType boolean LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance ReturnStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade MethodInvocation Model MethodInvocation MemberReference target isAMessage getFacade	0
MethodDeclaration Modifier public FormalParameter ReferenceType node StatementExpression Assignment MemberReference val Cast BasicType int MethodInvocation Double MethodInvocation node MethodInvocation getText getReal parseDouble = StatementExpression MethodInvocation MemberReference node	1
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MethodInvocation getObjectToRemove Literal null MethodInvocation ! Model MethodInvocation MethodInvocation getObjectToRemove isReadOnly getModelManagementHelper BinaryOperation != MethodInvocation getTarget Literal null MethodInvocation ! Model MethodInvocation MethodInvocation getTarget isReadOnly getModelManagementHelper	0
MethodDeclaration Modifier private static FormalParameter ReferenceType List TypeArgument ReferenceType String list ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator commandString MemberReference list BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator pos MethodInvocation commandString Literal '=' indexOf LocalVariableDeclaration ReferenceType String VariableDeclarator commandName LocalVariableDeclaration ReferenceType String VariableDeclarator commandArgument IfStatement BinaryOperation == MemberReference pos Literal - 1 BlockStatement StatementExpression Assignment MemberReference commandName MemberReference commandString = StatementExpression Assignment MemberReference commandArgument Literal null = BlockStatement StatementExpression Assignment MemberReference commandName MethodInvocation commandString Literal 0 MemberReference pos substring = StatementExpression Assignment MemberReference commandArgument MethodInvocation commandString BinaryOperation + MemberReference pos Literal 1 substring = LocalVariableDeclaration ReferenceType Class VariableDeclarator c TryStatement StatementExpression Assignment MemberReference c MethodInvocation Class MemberReference commandName forName = CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation System.out BinaryOperation + Literal "Cannot find the command: " MemberReference commandName println ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o Literal null TryStatement StatementExpression Assignment MemberReference o MethodInvocation c newInstance = CatchClause CatchClauseParameter InstantiationException e StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + MemberReference commandName Literal " could not be instantiated - skipping" Literal " (InstantiationException)" println ContinueStatement CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + MemberReference commandName Literal " could not be instantiated - skipping" Literal " (IllegalAccessException)" println ContinueStatement IfStatement BinaryOperation || BinaryOperation == MemberReference o Literal null BinaryOperation instanceof MemberReference o ReferenceType CommandLineInterface BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + MemberReference commandName Literal " is not a command - println ContinueStatement LocalVariableDeclaration ReferenceType CommandLineInterface VariableDeclarator clio Cast ReferenceType CommandLineInterface MemberReference o StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal command " MemberReference commandName Literal "( " TernaryExpression BinaryOperation == MemberReference commandArgument Literal null Literal "" MemberReference commandArgument Literal " )" println LocalVariableDeclaration BasicType boolean VariableDeclarator result MethodInvocation clio MemberReference commandArgument IfStatement MemberReference ! result BlockStatement StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "There was an error executing " Literal "the command " MemberReference commandName Literal "( " TernaryExpression BinaryOperation == MemberReference commandArgument Literal null Literal "" MemberReference commandArgument Literal " )" println StatementExpression MethodInvocation System.out Literal "Aborting the rest of the println ReturnStatement	1
MethodDeclaration Modifier public ReferenceType UmlClass FormalParameter ReferenceType Object source FormalParameter ReferenceType Object ns IfStatement BinaryOperation && BinaryOperation instanceof MemberReference source ReferenceType UmlClass BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "source: " MemberReference source Literal " MemberReference ns LocalVariableDeclaration ReferenceType UmlClass VariableDeclarator c MethodInvocation createClass StatementExpression Cast ReferenceType Namespace MemberReference ns StatementExpression MethodInvocation MemberReference source MemberReference c ReturnStatement MemberReference c	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType p1 StatementExpression MethodInvocation model MethodInvocation getText setBody	0
MethodDeclaration Modifier public static FormalParameter ReferenceType Editor editor FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Layer VariableDeclarator layer MethodInvocation editor MethodInvocation getActiveLayer getLayerManager LocalVariableDeclaration ReferenceType VariableDeclarator thisFig Cast ReferenceType MethodInvocation layer MemberReference element presentationFor IfStatement BinaryOperation != MemberReference thisFig Literal null BlockStatement StatementExpression MethodInvocation MemberReference editor MemberReference thisFig MemberReference layer	0
MethodDeclaration BasicType int getTopMargin ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType SourceUnit generate FormalParameter ReferenceType Collection elements FormalParameter BasicType boolean deps StatementExpression MethodInvocation LOG Literal debug LocalVariableDeclaration ReferenceType File VariableDeclarator tmpdir Literal null TryStatement StatementExpression Assignment MemberReference tmpdir MethodInvocation TempFileUtils createTempDir = IfStatement BinaryOperation != MemberReference tmpdir Literal null BlockStatement StatementExpression MethodInvocation MemberReference elements MethodInvocation tmpdir getPath MemberReference deps generateFiles ReturnStatement MethodInvocation TempFileUtils MemberReference tmpdir ReturnStatement MethodInvocation Collections emptyList IfStatement BinaryOperation != MemberReference tmpdir Literal null BlockStatement StatementExpression MethodInvocation TempFileUtils MemberReference tmpdir deleteDir StatementExpression MethodInvocation LOG Literal debug	0
MethodDeclaration Modifier public clear SynchronizedStatement MemberReference mutex StatementExpression MethodInvocation list clear StatementExpression MethodInvocation set clear	0
MethodDeclaration Modifier public static ReferenceType FormalParameter BasicType int x FormalParameter BasicType int y ReturnStatement MethodInvocation MemberReference x MemberReference y Literal 1 Literal 1	0
MethodDeclaration Modifier public FormalParameter ReferenceType FigNode FormalParameter ReferenceType FigNode oldEncloser FormalParameter ReferenceType FigNode newEncloser IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference oldEncloser Literal null BinaryOperation == MemberReference newEncloser Literal null MethodInvocation Model MethodInvocation MethodInvocation oldEncloser getOwner isAComponent getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator er1 MethodInvocation Model MethodInvocation MethodInvocation getOwner getElementResidences getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator er2 MethodInvocation Model MethodInvocation MethodInvocation oldEncloser getOwner getResidentElements getFacade LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator common ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MemberReference er1 StatementExpression MethodInvocation common MemberReference er2 ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator elementResidence MemberReference common BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference elementResidence delete getUmlFactory	1
MethodDeclaration Modifier private ReferenceType Parameter FormalParameter ReferenceType Classifier type FormalParameter ReferenceType javax ReferenceType jmi ReferenceType reflect ReferenceType RefObject ref LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param Cast ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage MethodInvocation ref refOutermostPackage StatementExpression MethodInvocation param MemberReference type ReturnStatement MemberReference param	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType item LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator nt IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation getStereotype getMetaTypes MethodInvocation item getMetaType getCoreHelper BlockStatement StatementExpression Assignment MemberReference nt ClassCreator ReferenceType MemberReference item = BlockStatement StatementExpression Assignment MemberReference nt ClassCreator ReferenceType MemberReference item = StatementExpression MethodInvocation Model MethodInvocation Cast ReferenceType MemberReference nt MethodInvocation item getOwner addModelEventListener getPump StatementExpression Cast ReferenceType MemberReference nt ReturnStatement MemberReference nt	0
MethodDeclaration Modifier public BasicType boolean isPrivate FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MethodInvocation MemberReference handle getVisibility equals	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType getComments FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType ForStatement EnhancedForControl VariableDeclaration ReferenceType ReferenceType Setting VariableDeclarator reference MethodInvocation Cast ReferenceType Element MemberReference handle BlockStatement IfStatement BinaryOperation instanceof MethodInvocation reference getEObject ReferenceType BlockStatement StatementExpression MethodInvocation result Cast ReferenceType MethodInvocation reference getEObject add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType String path StatementExpression MethodInvocation MemberReference path add	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Relationship BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier protected Annotation Override updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator l ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation l ArrayCreator ReferenceType Object ArrayInitializer MemberReference newOwner Literal null add LocalVariableDeclaration ReferenceType Object VariableDeclarator machine MethodInvocation Model MethodInvocation MemberReference newOwner getSubmachine getFacade IfStatement BinaryOperation != MemberReference machine Literal null BlockStatement StatementExpression MethodInvocation l ArrayCreator ReferenceType Object ArrayInitializer MemberReference machine Literal null add StatementExpression MethodInvocation MemberReference l updateElementListeners	1
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement MemberReference element	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Critic getCritics IfStatement BinaryOperation == MemberReference critics Literal null BlockStatement StatementExpression MethodInvocation ReturnStatement SuperMethodInvocation getCritics	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType String discriminator StatementExpression SuperMethodInvocation MemberReference handle MemberReference discriminator StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object nodeInstance IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference nodeInstance ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation == MemberReference nodeInstance Literal null BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference nodeInstance	1
MethodDeclaration Modifier public ReferenceType Object getGuard ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation getObjectToRemove getModelManagementHelper	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public ReferenceType Object getActivity ReturnStatement ClassReference ReferenceType Activity	0
MethodDeclaration Modifier public static ReferenceType makeLanguage FormalParameter ReferenceType String theName FormalParameter ReferenceType theIcon ReturnStatement MethodInvocation MemberReference theName MemberReference theName MemberReference theIcon makeLanguage	0
MethodDeclaration Modifier public setName FormalParameter Modifier final ReferenceType String sName FormalParameter Modifier final ReferenceType EditingUtilities euHelper IfStatement BinaryOperation != MemberReference theMMcConstraint Literal null BlockStatement IfStatement MethodInvocation ! euHelper MemberReference sName BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Please specify a valid name." LocalVariableDeclaration ReferenceType Object VariableDeclarator mcOld MethodInvocation Model MethodInvocation getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference mcOld MethodInvocation Model MethodInvocation MemberReference theMMcConstraint getName getFacade setName getCoreHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator constraintBody MethodInvocation Model MethodInvocation MemberReference theMMcConstraint getBody getFacade StatementExpression MethodInvocation Model MethodInvocation MemberReference mcOld MethodInvocation Model MethodInvocation Literal "OCL" Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference constraintBody getBody getFacade createBooleanExpression getDataTypesFactory setBody getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference theMMcConstraint MemberReference sName setName getCoreHelper StatementExpression MethodInvocation MemberReference theMNIdx MemberReference mcOld MemberReference theMMcConstraint TryStatement LocalVariableDeclaration ReferenceType OclTree VariableDeclarator tree Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator mmeContext MethodInvocation OCLUtil MemberReference theMMmeiTarget getInnerMostEnclosingNamespace StatementExpression Assignment MemberReference constraintBody MethodInvocation Model MethodInvocation MemberReference theMMcConstraint getBody getFacade = StatementExpression Assignment MemberReference tree MethodInvocation euHelper Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference constraintBody getBody getFacade ClassCreator ReferenceType ArgoFacade MemberReference mmeContext parseAndCheckConstraint = IfStatement BinaryOperation != MemberReference tree Literal null BlockStatement StatementExpression MethodInvocation tree ClassCreator ReferenceType DepthFirstAdapter FieldDeclaration Modifier private BasicType int VariableDeclarator nameID Literal 0 MethodDeclaration Modifier public caseAConstraintBody FormalParameter ReferenceType AConstraintBody node IfStatement BinaryOperation == MemberReference nameID Literal 0 BlockStatement StatementExpression MethodInvocation node ClassCreator ReferenceType MemberReference sName setName BlockStatement StatementExpression MethodInvocation node ClassCreator ReferenceType BinaryOperation + BinaryOperation + MemberReference sName Literal "_" MemberReference nameID setName StatementExpression MemberReference ++ nameID apply StatementExpression MethodInvocation MethodInvocation tree getExpression MemberReference euHelper setData CatchClause CatchClauseParameter Throwable t StatementExpression MethodInvocation LOG Literal unidentified problem" MemberReference t error BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal "Please define and submit a constraint body first."	1
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation = ReturnStatement MemberReference	0
MethodDeclaration Modifier protected Annotation Override fireIntervalAdded FormalParameter ReferenceType Object source FormalParameter BasicType int index0 FormalParameter BasicType int index1 IfStatement BinaryOperation && MemberReference fireListEvents MemberReference ! buildingModel BlockStatement StatementExpression SuperMethodInvocation MemberReference source MemberReference index0 MemberReference index1 fireIntervalAdded	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object object FormalParameter ReferenceType String name FormalParameter ReferenceType String base IfStatement BinaryOperation instanceof MemberReference object ReferenceType Stereotype BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator st Cast ReferenceType Stereotype MemberReference object IfStatement BinaryOperation && BinaryOperation == MemberReference name Literal null BinaryOperation != MethodInvocation st getName Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation == MemberReference base Literal null MethodInvocation ! st BlockStatement ReturnStatement Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Class VariableDeclarator c MethodInvocation st BlockStatement IfStatement MethodInvocation c MethodInvocation MemberReference base equals getName BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_6 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayCreator BasicType long Literal 8 StatementExpression Assignment MemberReference ArraySelector Literal 0 data Literal - = StatementExpression Assignment MemberReference ArraySelector Literal 1 data Literal - = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 2 BinaryOperation <= MemberReference i Literal 3 MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i data Literal - 1L = ReturnStatement MemberReference data	1
MethodDeclaration Modifier public final ReferenceType Object getTarget ReturnStatement MemberReference target	0
MethodDeclaration Modifier protected FormalParameter ReferenceType JLabel StatementExpression Assignment MemberReference MemberReference = StatementExpression MethodInvocation MemberReference setFont	0
MethodDeclaration Modifier public Annotation Override ReferenceType String ReturnStatement BinaryOperation + BinaryOperation + SuperMethodInvocation Literal MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object associationEnd FormalParameter ReferenceType String ReturnStatement MethodInvocation impl MemberReference associationEnd MemberReference	0
MethodDeclaration Modifier private static ReferenceType String mapPropertyName FormalParameter ReferenceType String name IfStatement Literal MethodInvocation MemberReference name equals BlockStatement ReturnStatement Literal "parameter" IfStatement Literal MethodInvocation MemberReference name equals "typedFeature" BlockStatement ReturnStatement Literal "feature" ReturnStatement MemberReference name	1
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent e IfStatement BinaryOperation > MethodInvocation tblCreators getSelectedRowCount Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation Literal true setEnabled getOkButton BlockStatement StatementExpression MethodInvocation MethodInvocation Literal false setEnabled getOkButton	1
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation MemberReference w setLineWidth	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType SuffixFilter arg0 FormalParameter ReferenceType SuffixFilter arg1 ReturnStatement MethodInvocation arg0 MethodInvocation MethodInvocation arg1 compareToIgnoreCase	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation LookAndFeelMgr MethodInvocation getInstance LocalVariableDeclaration ReferenceType String VariableDeclarator theme MethodInvocation LookAndFeelMgr MethodInvocation getInstance StatementExpression MethodInvocation lookAndFeel MemberReference setSelectedItem StatementExpression MethodInvocation metalTheme MemberReference theme setSelectedItem StatementExpression MethodInvocation MethodInvocation Configuration MemberReference Argo Literal false getBoolean setSelected	0
MethodDeclaration Modifier protected Annotation Override ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator workingIcons ArrayCreator ReferenceType MemberReference icons length StatementExpression MethodInvocation System MemberReference icons Literal 0 MemberReference workingIcons Literal 0 MemberReference icons length arraycopy IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference BASE MemberReference LEFT workingIcons Literal null = IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference BASE MemberReference RIGHT workingIcons Literal null = IfStatement BinaryOperation && MemberReference ! MemberReference ! BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference BASE MemberReference LOWER_LEFT workingIcons Literal null = ReturnStatement MemberReference workingIcons	0
MethodDeclaration Modifier public ReferenceType Object IfStatement BinaryOperation != MethodInvocation profileConfiguration getDefaultTypeStrategy Literal null BlockStatement ReturnStatement MethodInvocation profileConfiguration MethodInvocation getDefaultTypeStrategy ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType node StatementExpression Assignment MemberReference val MethodInvocation Integer MethodInvocation node MethodInvocation getText getInt parseInt = StatementExpression MethodInvocation MemberReference node	0
MethodDeclaration Modifier private ReferenceType String generateVisibility FormalParameter ReferenceType Object o IfStatement MethodInvocation MethodInvocation MemberReference o isAAttribute getFacade BlockStatement ReturnStatement Literal "" IfStatement MethodInvocation MethodInvocation MemberReference o isAFeature getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation MethodInvocation MemberReference o Literal "src_visibility" getTaggedValue getFacade IfStatement BinaryOperation != MemberReference tv Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tagged Cast ReferenceType String MethodInvocation MethodInvocation MemberReference tv getValue getFacade IfStatement BinaryOperation != MemberReference tagged Literal null BlockStatement IfStatement BinaryOperation || BinaryOperation || MethodInvocation tagged MethodInvocation Literal "" equals trim MethodInvocation tagged MethodInvocation toLowerCase MethodInvocation Literal "default" equals trim MethodInvocation tagged MethodInvocation toLowerCase MethodInvocation Literal "package" equals trim BlockStatement ReturnStatement Literal "" ReturnStatement BinaryOperation + MemberReference tagged Literal ": " IfStatement MethodInvocation MethodInvocation MemberReference o isAModelElement getFacade BlockStatement IfStatement MethodInvocation MethodInvocation MemberReference o isPublic getFacade ReturnStatement Literal "public: " IfStatement MethodInvocation MethodInvocation MemberReference o isPrivate getFacade ReturnStatement Literal "private: " IfStatement MethodInvocation MethodInvocation MemberReference o isProtected getFacade ReturnStatement Literal "protected: " IfStatement MethodInvocation MethodInvocation MemberReference o isPackage getFacade ReturnStatement Literal "" IfStatement MethodInvocation MethodInvocation MemberReference o isAVisibilityKind getFacade BlockStatement IfStatement MethodInvocation MethodInvocation getPublic MethodInvocation MemberReference o equals getVisibilityKind ReturnStatement Literal "public: " IfStatement MethodInvocation MethodInvocation getPrivate MethodInvocation MemberReference o equals getVisibilityKind ReturnStatement Literal "private: " IfStatement MethodInvocation MethodInvocation getProtected MethodInvocation MemberReference o equals getVisibilityKind ReturnStatement Literal "protected: " IfStatement MethodInvocation MethodInvocation getPackage MethodInvocation MemberReference o equals getVisibilityKind ReturnStatement Literal "" ReturnStatement Literal ""	1
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object state FormalParameter ReferenceType Object deferrableEvent ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public Annotation Deprecated BasicType boolean predicate FormalParameter ReferenceType Object obj ReturnStatement MethodInvocation MemberReference obj evaluate	1
MethodDeclaration Modifier private ReferenceType NotationProviderFactory2 LocalVariableDeclaration ReferenceType NotationProviderFactory2 VariableDeclarator npf MethodInvocation NotationProviderFactory2 getInstance ReturnStatement MemberReference npf	1
MethodDeclaration Modifier public ReferenceType ItemUID ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String en StatementExpression Assignment MemberReference MemberReference en =	0
MethodDeclaration Modifier private initFigs StatementExpression MethodInvocation Literal false StatementExpression Assignment MemberReference head ClassCreator ReferenceType FigCircle MemberReference X MemberReference MemberReference MemberReference HEIGHT MemberReference LINE_COLOR MemberReference FILL_COLOR = StatementExpression Assignment MemberReference h ClassCreator ReferenceType FigText MemberReference X MemberReference BinaryOperation - MemberReference Literal 10 BinaryOperation - MemberReference HEIGHT Literal 10 = StatementExpression MethodInvocation h MethodInvocation MethodInvocation getFontPlain getSettings setFont StatementExpression MethodInvocation h MethodInvocation setText StatementExpression MethodInvocation h MemberReference StatementExpression MethodInvocation h Literal false setFilled StatementExpression MethodInvocation h Literal 0 setLineWidth StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference head addFig StatementExpression MethodInvocation MemberReference h addFig StatementExpression MethodInvocation Literal false setBlinkPorts	0
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType UIManager ReferenceType LookAndFeelInfo VariableDeclarator lafs MethodInvocation UIManager getInstalledLookAndFeels LocalVariableDeclaration ReferenceType String VariableDeclarator names ArrayCreator ReferenceType String BinaryOperation + MemberReference lafs length Literal 1 StatementExpression Assignment MemberReference ArraySelector Literal 0 names MemberReference = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference lafs length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 names MemberReference ArraySelector MemberReference i MethodInvocation getName lafs = ReturnStatement MemberReference names	0
MethodDeclaration Modifier public setAttribute FormalParameter ReferenceType String key FormalParameter ReferenceType Object value StatementExpression MethodInvocation attributes MemberReference key MemberReference value put	0
MethodDeclaration Modifier public FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType String VariableDeclarator status MethodInvocation MessageFormat MethodInvocation Translator Literal localize ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation e getText format StatementExpression MethodInvocation MemberReference status showStatusOnSwingThread	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade setAllElements	0
MethodDeclaration Modifier private selectChildren FormalParameter ReferenceType ExplorerTreeModel model FormalParameter ReferenceType ExplorerTreeNode node FormalParameter ReferenceType Set targets IfStatement MethodInvocation targets isEmpty BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation node getUserObject IfStatement BinaryOperation != MemberReference Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator t MemberReference targets BlockStatement IfStatement BinaryOperation == MemberReference t MemberReference BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType TreePath MethodInvocation node getPath addSelectionPath StatementExpression MethodInvocation model ClassCreator ReferenceType TreePath MethodInvocation node getPath LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation node children WhileStatement MethodInvocation e hasMoreElements BlockStatement StatementExpression MethodInvocation MemberReference model Cast ReferenceType ExplorerTreeNode MethodInvocation e nextElement MemberReference targets selectChildren	1
MethodDeclaration Modifier static ReferenceType Collection TypeArgument ReferenceType LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType VariableDeclarator c ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator locale MethodInvocation Arrays MethodInvocation Translator asList BlockStatement StatementExpression MethodInvocation c ClassCreator ReferenceType MemberReference locale add ReturnStatement MemberReference c	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt StatementExpression MethodInvocation buildModel	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String FormalParameter ReferenceType String LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference MemberReference ReturnStatement BinaryOperation <= MemberReference Literal 1	0
MethodDeclaration Modifier public addUplink FormalParameter ReferenceType ClassdiagramNode StatementExpression MethodInvocation MemberReference add	0
MethodDeclaration Modifier public BasicType boolean StatementExpression Assignment This MemberReference Literal false = StatementExpression Assignment This MemberReference Literal true = StatementExpression Assignment This MemberReference Literal false = ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType AbstractFigNode VariableDeclarator figClone Cast ReferenceType AbstractFigNode SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType MethodInvocation it next = StatementExpression MethodInvocation it next StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public ReferenceType Object getChild FormalParameter ReferenceType Object parent FormalParameter BasicType int index ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator tm MethodInvocation BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation tm MemberReference parent getChildCount IfStatement BinaryOperation < MemberReference index MemberReference BlockStatement ReturnStatement MethodInvocation tm MemberReference parent MemberReference index getChild StatementExpression Assignment MemberReference index MemberReference -= ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ArgoDiagram ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean isAAssociationRole FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType ItemUID ReturnStatement MemberReference id	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getCompositeState getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean u IfStatement BinaryOperation == MethodInvocation MemberReference u BlockStatement ReturnStatement StatementExpression SuperMethodInvocation MemberReference u	1
MethodDeclaration Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType UMLDeploymentDiagram deploymentDiagram LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation deploymentDiagram MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator isNode Literal false LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figs iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator obj Literal null WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference obj MethodInvocation it next = IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigNodeInstance BlockStatement StatementExpression Assignment MemberReference isNode Literal true = StatementExpression Assignment MemberReference it MethodInvocation figs iterator = WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference obj MethodInvocation it next = IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigComponentInstance BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType FigComponentInstance VariableDeclarator fc Cast ReferenceType FigComponentInstance MemberReference obj IfStatement BinaryOperation && BinaryOperation == MethodInvocation fc getEnclosingFig Literal null MemberReference isNode BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference deploymentDiagram add StatementExpression MethodInvocation offs MemberReference fc add IfStatement BinaryOperation && BinaryOperation != MethodInvocation fc getEnclosingFig Literal null BinaryOperation == MethodInvocation Model getFacade Literal null BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference deploymentDiagram add StatementExpression MethodInvocation offs MemberReference fc add ReturnStatement MemberReference offs	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object trans FormalParameter ReferenceType Object model ReturnStatement MethodInvocation impl MemberReference trans MemberReference model	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize ReturnStatement ClassCreator ReferenceType Dimension Literal 180 Literal 80	0
MethodDeclaration Modifier public BasicType int getIconHeight ReturnStatement Literal 9	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String ReturnStatement MethodInvocation goals MemberReference	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType g ReturnStatement MethodInvocation MethodInvocation MemberReference g getPoster	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation StatementExpression MethodInvocation Cast ReferenceType MemberReference client StatementExpression MethodInvocation Cast ReferenceType MemberReference setSignature IfStatement BinaryOperation != MemberReference arguments Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference arguments BlockStatement StatementExpression MethodInvocation MethodInvocation Cast ReferenceType TemplateParameterSubstitution MemberReference o add StatementExpression MethodInvocation MethodInvocation MemberReference add	0
MethodDeclaration Modifier protected formatLineNumber FormalParameter BasicType int lineNumber TransformerException LocalVariableDeclaration BasicType char VariableDeclarator ch Literal 160 LocalVariableDeclaration ReferenceType String VariableDeclarator lno Literal "" IfStatement BinaryOperation || BinaryOperation == MemberReference lineNumber Literal 1 BinaryOperation && BinaryOperation >= MemberReference modulus Literal 1 BinaryOperation == BinaryOperation % MemberReference lineNumber MemberReference modulus Literal 0 BlockStatement StatementExpression Assignment MemberReference lno BinaryOperation + Literal "" MemberReference lineNumber = WhileStatement BinaryOperation < MethodInvocation lno length MemberReference width BlockStatement StatementExpression Assignment MemberReference lno BinaryOperation + MemberReference ch MemberReference lno = StatementExpression Assignment MemberReference lno MemberReference separator += LocalVariableDeclaration BasicType char VariableDeclarator chars ArrayCreator BasicType char MethodInvocation lno length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MethodInvocation lno length MemberReference ++ count BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference count chars MethodInvocation lno MemberReference count charAt = StatementExpression MethodInvocation MemberReference chars Literal 0 MethodInvocation lno length characters	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator checkCol MethodInvocation table MethodInvocation Literal 0 getColumn LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation table MethodInvocation Literal 1 getColumn StatementExpression MethodInvocation checkCol Literal 20 StatementExpression MethodInvocation checkCol Literal 30 StatementExpression MethodInvocation checkCol Literal 30 StatementExpression MethodInvocation Literal StatementExpression MethodInvocation table MemberReference JTable StatementExpression MethodInvocation table Literal 0 StatementExpression MethodInvocation validate	0
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation cover MemberReference f setFilled	0
MethodDeclaration Modifier public addStereotype FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object stereotype StatementExpression MethodInvocation impl MemberReference modelElement MemberReference stereotype addStereotype	0
MethodDeclaration Modifier protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds LocalVariableDeclaration BasicType int VariableDeclarator out_d BinaryOperation + MemberReference BinaryOperation * Literal 2 MethodInvocation getLineWidth StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference out_d MemberReference out_d setBounds getBigPort StatementExpression MethodInvocation MemberReference x MemberReference y MemberReference out_d MemberReference out_d setBounds LocalVariableDeclaration BasicType int VariableDeclarator inner_d BinaryOperation - BinaryOperation - MemberReference out_d BinaryOperation * Literal 2 MethodInvocation getLineWidth Literal 6 AssertStatement BinaryOperation == BinaryOperation % MemberReference inner_d Literal 2 BinaryOperation % MemberReference out_d Literal 2 StatementExpression Assignment MemberReference inner_d BinaryOperation - MemberReference inner_d BinaryOperation % MethodInvocation getLineWidth Literal 2 = StatementExpression MethodInvocation BinaryOperation + MemberReference x BinaryOperation / BinaryOperation - MemberReference out_d MemberReference inner_d Literal 2 BinaryOperation + MemberReference y BinaryOperation / BinaryOperation - MemberReference out_d MemberReference inner_d Literal 2 MemberReference inner_d MemberReference inner_d setBounds StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MemberReference oldBounds MethodInvocation getBounds	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType org ReferenceType argouml ReferenceType util ReferenceType p ReturnStatement BinaryOperation != MethodInvocation MemberReference p Literal null	0
MethodDeclaration Modifier public ReferenceType createElement FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Object node IfStatement BinaryOperation != MethodInvocation Model getDiagramInterchangeModel Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation Cast ReferenceType MemberReference gm MemberReference node createElement getDiagramInterchangeModel ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object connect FormalParameter ReferenceType Object fromPort FormalParameter ReferenceType Object toPort ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "The connect method is not supported"	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Class TypeArgument ? getTypes ReturnStatement MethodInvocation Collections MemberReference types	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel ClassCreator ReferenceType SelectionState This StatementExpression Cast ReferenceType SelectionState MemberReference sel StatementExpression Cast ReferenceType SelectionState MemberReference sel ReturnStatement MemberReference sel	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType URL VariableDeclarator urls This MethodInvocation getURLs LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator path ClassCreator ReferenceType StringBuilder ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference urls length MemberReference ++ i BlockStatement StatementExpression MethodInvocation path MemberReference ArraySelector MemberReference i MethodInvocation getFile urls append IfStatement BinaryOperation < MemberReference i BinaryOperation - MemberReference urls length Literal 1 BlockStatement StatementExpression MethodInvocation path Literal ";" append ReturnStatement MethodInvocation path toString	0
MethodDeclaration Modifier protected updateListeners FormalParameter ReferenceType Object oldOwner FormalParameter ReferenceType Object newOwner IfStatement BinaryOperation != MemberReference oldOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldOwner LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference oldOwner getAssociation getFacade IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference IfStatement BinaryOperation != MemberReference newOwner Literal null BlockStatement StatementExpression MethodInvocation MemberReference newOwner ArrayCreator ReferenceType String ArrayInitializer Literal "remove" Literal "association" LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference newOwner getAssociation getFacade IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference Literal "name"	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType State BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType Action BlockStatement StatementExpression Cast ReferenceType State MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or value: " MemberReference value	1
MethodDeclaration Modifier public ReferenceType MBeanNotificationInfo getNotificationInfo ReturnStatement MethodInvocation notifier getNotificationInfo	0
MethodDeclaration Modifier public ReferenceType CodeGenerator FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType VariableDeclarator lang MethodInvocation MemberReference name ReturnStatement MethodInvocation MemberReference lang	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object classifier StatementExpression MethodInvocation impl MemberReference handle MemberReference classifier	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType Command FormalParameter ReferenceType Object modelElement ReturnStatement ClassCreator ReferenceType MemberReference modelElement	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier private addInterfaces FormalParameter ReferenceType Object mClass FormalParameter ReferenceType List TypeArgument ReferenceType String interfaces FormalParameter BasicType boolean forceIt ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator interfaceName MemberReference interfaces BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mInterface Literal null TryStatement StatementExpression Assignment MemberReference mInterface MethodInvocation MethodInvocation MethodInvocation MemberReference interfaceName getClassifierName Literal true MemberReference javaProfile get MemberReference interfaceName getContext = CatchClause CatchClauseParameter ClassifierNotFoundException e IfStatement BinaryOperation && BinaryOperation && MemberReference forceIt BinaryOperation != MemberReference interfaceName Literal null BinaryOperation != MemberReference model Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Modeller.java: " Literal "forced creation of unknown interface " MemberReference interfaceName info LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference interfaceName getPackageName LocalVariableDeclaration ReferenceType String VariableDeclarator classifierName MethodInvocation MemberReference interfaceName getClassifierName LocalVariableDeclaration ReferenceType Object VariableDeclarator mPackage TernaryExpression BinaryOperation > MethodInvocation packageName length Literal 0 MethodInvocation MemberReference packageName Literal false getPackage MemberReference model StatementExpression Assignment MemberReference mInterface MethodInvocation Model MethodInvocation MemberReference mPackage MemberReference classifierName lookupIn getFacade = IfStatement BinaryOperation == MemberReference mInterface Literal null BlockStatement StatementExpression Assignment MemberReference mInterface MethodInvocation Model MethodInvocation MemberReference classifierName MemberReference mPackage buildInterface getCoreFactory = StatementExpression MethodInvocation newElements MemberReference mInterface add BlockStatement StatementExpression MethodInvocation MemberReference interfaceName Literal "an warnClassifierNotFound IfStatement BinaryOperation && BinaryOperation != MemberReference mInterface Literal null BinaryOperation != MemberReference mInterface MemberReference mClass BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mAbstraction MethodInvocation MemberReference mInterface MemberReference mClass getAbstraction IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference mAbstraction getSuppliers MethodInvocation size getFacade Literal 0 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mAbstraction MemberReference mInterface getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference mAbstraction MemberReference mClass getCoreHelper IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mAbstraction MemberReference currentPackage setNamespace getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference mAbstraction MethodInvocation MemberReference getUML1Stereotype addStereotype getCoreHelper StatementExpression MethodInvocation ProjectManager MethodInvocation updateRoots getManager StatementExpression MethodInvocation newElements MemberReference mAbstraction add	1
MethodDeclaration Modifier public ReferenceType NodeRow doSplit FormalParameter BasicType int maxWidth FormalParameter BasicType int gap LocalVariableDeclaration ReferenceType TreeSet TypeArgument ReferenceType ClassdiagramNode VariableDeclarator ts ClassCreator ReferenceType TreeSet TypeArgument ReferenceType ClassdiagramNode MemberReference nodes IfStatement BinaryOperation < MethodInvocation ts size Literal 2 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator MethodInvocation ts first IfStatement MethodInvocation ! isStandalone BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator lastNode MethodInvocation ts last IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MethodInvocation isStandalone MethodInvocation lastNode isStandalone BinaryOperation == MethodInvocation isPackage MethodInvocation lastNode isPackage BinaryOperation <= MethodInvocation MemberReference gap getWidth MemberReference maxWidth BlockStatement ReturnStatement Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator hasPackage MethodInvocation isPackage LocalVariableDeclaration ReferenceType NodeRow VariableDeclarator newRow ClassCreator ReferenceType NodeRow BinaryOperation + MemberReference Literal 1 LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator split Literal null LocalVariableDeclaration BasicType int VariableDeclarator width Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 ForStatement ForControl VariableDeclaration ReferenceType Iterator TypeArgument ReferenceType ClassdiagramNode VariableDeclarator iter MethodInvocation ts iterator BinaryOperation && MethodInvocation iter hasNext BinaryOperation || BinaryOperation < MemberReference width MemberReference maxWidth BinaryOperation < MemberReference count Literal 2 BlockStatement LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MethodInvocation iter next StatementExpression Assignment MemberReference split TernaryExpression BinaryOperation || BinaryOperation || BinaryOperation == MemberReference split Literal null BinaryOperation && MemberReference hasPackage BinaryOperation == MethodInvocation split isPackage MemberReference hasPackage MethodInvocation split isStandalone MemberReference node MemberReference split = StatementExpression Assignment MemberReference width BinaryOperation + MethodInvocation node MemberReference width getSize MemberReference gap += StatementExpression MemberReference ++ count StatementExpression Assignment MemberReference nodes ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ClassdiagramNode MethodInvocation ts MemberReference split = ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator n MethodInvocation ts MemberReference split BlockStatement StatementExpression MethodInvocation newRow MemberReference n addNode IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal This row width: " MethodInvocation MemberReference gap getWidth Literal " next width: " MethodInvocation newRow MemberReference gap getWidth debug ReturnStatement MemberReference newRow	1
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation cover MemberReference f setFilled StatementExpression MethodInvocation MethodInvocation MemberReference f setFilled getBigPort	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object edge ReturnStatement MethodInvocation edges MemberReference edge contains	0
MethodDeclaration Modifier protected Annotation Override BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier public Annotation Override BasicType int hashCode ReturnStatement BinaryOperation * MethodInvocation map hashCode Literal 35	0
MethodDeclaration Modifier private StatementExpression MethodInvocation elementName Literal true StatementExpression MethodInvocation elementName MethodInvocation getEditorComponent MethodInvocation MemberReference Color white setBackground getEditor StatementExpression MethodInvocation diagramName Literal true StatementExpression MethodInvocation diagramName MethodInvocation getEditorComponent MethodInvocation MemberReference Color white setBackground getEditor StatementExpression MethodInvocation elementName Literal "*" addItem StatementExpression MethodInvocation diagramName Literal "*" addItem LocalVariableDeclaration ReferenceType GridBagLayout VariableDeclarator gb ClassCreator ReferenceType GridBagLayout StatementExpression MethodInvocation nameLocTab MemberReference gb setLayout LocalVariableDeclaration ReferenceType JLabel VariableDeclarator elementNameLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize LocalVariableDeclaration ReferenceType JLabel VariableDeclarator diagramNameLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize LocalVariableDeclaration ReferenceType JLabel VariableDeclarator typeLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal "dialog.find.label.element-type" localize LocalVariableDeclaration ReferenceType JLabel VariableDeclarator locLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal "dialog.find.label.find-in" localize StatementExpression MethodInvocation location MethodInvocation Translator Literal localize addItem StatementExpression MethodInvocation StatementExpression MethodInvocation typeDetails ClassCreator ReferenceType Dimension Literal 200 Literal 100 StatementExpression MethodInvocation typeDetails ClassCreator ReferenceType Dimension Literal 200 Literal 100 setPreferredSize StatementExpression MethodInvocation typeDetails ClassCreator ReferenceType Dimension Literal 200 Literal 100 setSize LocalVariableDeclaration ReferenceType VariableDeclarator c ClassCreator ReferenceType StatementExpression Assignment MemberReference c fill MemberReference BOTH = StatementExpression Assignment MemberReference c Literal 3 = StatementExpression Assignment MemberReference c Literal 3 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression MethodInvocation gb MemberReference elementNameLabel MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference elementNameLabel add StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression MethodInvocation gb MemberReference elementName MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference elementName add StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression MethodInvocation gb MemberReference diagramNameLabel MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference diagramNameLabel add StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression MethodInvocation gb MemberReference diagramName MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference diagramName add StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 3 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression MethodInvocation gb MemberReference locLabel MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference locLabel add StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridy Literal 3 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression MethodInvocation gb MemberReference location MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference location add LocalVariableDeclaration ReferenceType VariableDeclarator spacer ClassCreator ReferenceType StatementExpression Assignment MemberReference c gridx Literal 2 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression MethodInvocation gb MemberReference spacer MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference spacer add StatementExpression Assignment MemberReference c gridx Literal 3 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression MethodInvocation gb MemberReference typeLabel MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference typeLabel add StatementExpression Assignment MemberReference c gridx Literal 4 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression MethodInvocation gb MemberReference type MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference type add StatementExpression Assignment MemberReference c gridx Literal 3 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c gridwidth Literal 2 = StatementExpression Assignment MemberReference c Literal 5 = StatementExpression MethodInvocation gb MemberReference typeDetails MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference typeDetails add LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation ClassCreator ReferenceType GridLayout Literal 1 Literal 2 Literal 5 Literal 5 setLayout StatementExpression MethodInvocation MemberReference clearTabs add StatementExpression MethodInvocation MemberReference search add StatementExpression MethodInvocation ClassCreator ReferenceType EmptyBorder Literal 10 Literal 10 Literal 10 Literal 10 setBorder StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 4 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c weighty Literal 0.0 = StatementExpression Assignment MemberReference c gridwidth Literal 2 = StatementExpression Assignment MemberReference c Literal 1 = StatementExpression MethodInvocation gb MemberReference MemberReference c setConstraints StatementExpression MethodInvocation nameLocTab MemberReference add	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier protected ReferenceType Project getProject ReturnStatement MemberReference project	0
MethodDeclaration Modifier public ReferenceType Collection generate FormalParameter ReferenceType Collection elements FormalParameter BasicType boolean deps StatementExpression MethodInvocation LOG Literal debug LocalVariableDeclaration ReferenceType File VariableDeclarator tmpdir Literal null TryStatement StatementExpression Assignment MemberReference tmpdir MethodInvocation TempFileUtils createTempDir = IfStatement BinaryOperation != MemberReference tmpdir Literal null BlockStatement StatementExpression MethodInvocation MemberReference elements MethodInvocation tmpdir getPath MemberReference deps generateFiles ReturnStatement MethodInvocation TempFileUtils MemberReference tmpdir ReturnStatement MemberReference Collections EMPTY_LIST IfStatement BinaryOperation != MemberReference tmpdir Literal null BlockStatement StatementExpression MethodInvocation TempFileUtils MemberReference tmpdir deleteDir StatementExpression MethodInvocation LOG Literal debug	1
MethodDeclaration Modifier public ReferenceType Action getAction ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration BasicType boolean isAffected FormalParameter ReferenceType PropertyChangeEvent event LocalVariableDeclaration ReferenceType String VariableDeclarator sourceName MethodInvocation event getPropertyName ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference thePropertyName Literal null BinaryOperation == MemberReference sourceName Literal null MethodInvocation sourceName MemberReference thePropertyName equals	1
MethodDeclaration Modifier private ReferenceType String generateHeaderPackageStartSingle FormalParameter ReferenceType Object pkg LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 30 LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MethodInvocation MemberReference pkg getName getFacade LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference packageName Literal "." LocalVariableDeclaration ReferenceType String VariableDeclarator token Literal "" StatementExpression MethodInvocation sb MethodInvocation MemberReference pkg MemberReference DOC_COMMENT_TAGS generateTaggedValues append WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference token MethodInvocation st nextToken = StatementExpression MethodInvocation sb MethodInvocation MemberReference token append MethodInvocation Literal " {" append MethodInvocation MemberReference LINE_SEPARATOR append Literal "namespace " append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isACompositeState BlockStatement ReturnStatement Cast ReferenceType CompositeState MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public BasicType boolean canUndo ReturnStatement MethodInvocation modelImplementation MethodInvocation getCommandStack MethodInvocation canUndo	0
MethodDeclaration Modifier public BasicType boolean disable StatementExpression MethodInvocation MemberReference propPanelFactory removePropPanelFactory StatementExpression MethodInvocation DiagramFactory MethodInvocation MemberReference DiagramType Deployment Cast ReferenceType DiagramFactoryInterface2 Literal null registerDiagramFactory getInstance ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Feature FormalParameter ReferenceType Object classifier LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Feature VariableDeclarator opsAndReceps ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Feature IfStatement BinaryOperation != MemberReference classifier Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator f MethodInvocation MemberReference classifier getFeatures BlockStatement IfStatement BinaryOperation || MethodInvocation MemberReference f isAOperation MethodInvocation MemberReference f BlockStatement StatementExpression MethodInvocation opsAndReceps MemberReference f add ReturnStatement MemberReference opsAndReceps	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Collection selected StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference selected getCommonBehaviorHelper	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override register FormalParameter Modifier final ReferenceType String systemId FormalParameter Modifier final ReferenceType String xmiId FormalParameter Modifier final ReferenceType RefObject object IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Registering XMI ID '" MemberReference xmiId Literal "' in system ID '" MemberReference systemId Literal "' to object with MOF ID '" MethodInvocation object refMofId Literal "'" debug IfStatement BinaryOperation == MemberReference topSystemId Literal null BlockStatement StatementExpression Assignment MemberReference topSystemId MemberReference systemId = TryStatement StatementExpression Assignment MemberReference baseUri ClassCreator ReferenceType URI MethodInvocation systemId Literal 0 BinaryOperation + MethodInvocation systemId Literal '/' lastIndexOf Literal 1 substring = CatchClause CatchClauseParameter URISyntaxException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Bad URI syntax for base URI from XMI document " MemberReference systemId MemberReference e warn StatementExpression Assignment MemberReference baseUri Literal null = IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Top system ID set to " MemberReference topSystemId debug LocalVariableDeclaration ReferenceType String VariableDeclarator resolvedSystemId MemberReference systemId IfStatement BinaryOperation && MemberReference profile MethodInvocation systemId MemberReference topSystemId equals BlockStatement StatementExpression Assignment MemberReference resolvedSystemId MemberReference = IfStatement BinaryOperation != MethodInvocation reverseUrlMap MemberReference systemId get Literal null BlockStatement StatementExpression Assignment MemberReference resolvedSystemId MethodInvocation reverseUrlMap MemberReference systemId get = BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Unable to map systemId - " MemberReference systemId debug LocalVariableDeclaration ReferenceType RefObject VariableDeclarator o MethodInvocation MemberReference resolvedSystemId MemberReference xmiId IfStatement BinaryOperation == MemberReference o Literal null BlockStatement IfStatement MethodInvocation mofidToXmiref MethodInvocation object refMofId containsKey BlockStatement LocalVariableDeclaration ReferenceType XmiReference VariableDeclarator ref MethodInvocation mofidToXmiref MethodInvocation object refMofId get StatementExpression MethodInvocation LOG BinaryOperation + Literal twice for the same object " Literal "- ignoring debug StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal " - first reference = " MethodInvocation ref getSystemId Literal "#" MethodInvocation ref getXmiId debug StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal " - 2nd reference = " MemberReference systemId Literal "#" MemberReference xmiId debug StatementExpression MethodInvocation LOG BinaryOperation + Literal " - system id = " MemberReference resolvedSystemId debug BlockStatement StatementExpression MethodInvocation MemberReference resolvedSystemId MemberReference xmiId MemberReference object registerInt StatementExpression SuperMethodInvocation MemberReference resolvedSystemId MemberReference xmiId MemberReference object register BlockStatement IfStatement MethodInvocation o MemberReference object equals BlockStatement StatementExpression SuperMethodInvocation MemberReference resolvedSystemId MemberReference xmiId MemberReference object register BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal - multiple elements with same : " MemberReference xmiId error ThrowStatement ClassCreator ReferenceType IllegalStateException Literal "Multiple elements with same	1
MethodDeclaration Modifier public FormalParameter ReferenceType TreePath path LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator node Cast ReferenceType ExplorerTreeNode MethodInvocation path getLastPathComponent LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation node getUserObject IfStatement BinaryOperation == MemberReference rules Literal null BlockStatement ReturnStatement IfStatement MethodInvocation MemberReference node contains BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference node add LocalVariableDeclaration ReferenceType List VariableDeclarator children MethodInvocation MemberReference node LocalVariableDeclaration ReferenceType List VariableDeclarator newChildren ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Set VariableDeclarator deps ClassCreator ReferenceType HashSet StatementExpression MethodInvocation MemberReference modelElement MemberReference newChildren MemberReference deps StatementExpression MethodInvocation node MemberReference deps StatementExpression MethodInvocation MemberReference node MemberReference children MemberReference newChildren StatementExpression MethodInvocation MemberReference node remove	0
MethodDeclaration Modifier static protected ReferenceType String FormalParameter ReferenceType List TypeArgument ReferenceType Token tokens LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder ForStatement EnhancedForControl VariableDeclaration ReferenceType Token VariableDeclarator t MemberReference tokens BlockStatement StatementExpression MethodInvocation buf MethodInvocation t getValue append ReturnStatement MethodInvocation buf toString	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType VariableDeclarator dialog ClassCreator ReferenceType StatementExpression MethodInvocation dialog MethodInvocation setTarget StatementExpression MethodInvocation dialog Literal true setVisible	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getGeneral getFacade MemberReference o	1
MethodDeclaration Modifier public ReferenceType String getDescription ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter BasicType boolean StatementExpression MethodInvocation huntForModules LocalVariableDeclaration BasicType boolean VariableDeclarator someModuleSucceeded DoStatement MemberReference someModuleSucceeded BlockStatement StatementExpression Assignment MemberReference someModuleSucceeded Literal false = ForStatement EnhancedForControl VariableDeclaration ReferenceType ModuleInterface VariableDeclarator module MethodInvocation MethodInvocation getInstance BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator status MethodInvocation moduleStatus MemberReference module get IfStatement BinaryOperation == MemberReference status Literal null BlockStatement ContinueStatement IfStatement BinaryOperation && MethodInvocation ! status MethodInvocation status isSelected BlockStatement TryStatement IfStatement MethodInvocation module enable BlockStatement StatementExpression Assignment MemberReference someModuleSucceeded Literal true = StatementExpression MethodInvocation status setEnabled CatchClause CatchClauseParameter Throwable e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Exception or error while trying to " Literal module " MethodInvocation module getName MemberReference e error IfStatement BinaryOperation && MethodInvocation status MethodInvocation ! status isSelected BlockStatement TryStatement IfStatement MethodInvocation module disable BlockStatement StatementExpression Assignment MemberReference someModuleSucceeded Literal true = StatementExpression MethodInvocation status CatchClause CatchClauseParameter Throwable e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Exception or error while trying to " Literal module " MethodInvocation module getName MemberReference e error IfStatement MemberReference ! BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType ModuleInterface VariableDeclarator module MethodInvocation MethodInvocation getInstance BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator status MethodInvocation moduleStatus MemberReference module get IfStatement BinaryOperation == MemberReference status Literal null BlockStatement ContinueStatement IfStatement BinaryOperation && MethodInvocation status MethodInvocation status isSelected BlockStatement ContinueStatement IfStatement BinaryOperation && MethodInvocation ! status MethodInvocation ! status isSelected BlockStatement ContinueStatement IfStatement MethodInvocation status isSelected BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "ModuleLoader was not able to enable module " MethodInvocation module getName warn BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "ModuleLoader was not able to disable module " MethodInvocation module getName warn	1
MethodDeclaration Modifier public ReferenceType Object getTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator me Cast ReferenceType ModelElement MemberReference handle LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation me MethodInvocation iterator getTaggedValue WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType TaggedValue VariableDeclarator tv Cast ReferenceType TaggedValue MethodInvocation i next IfStatement BinaryOperation && BinaryOperation != MethodInvocation tv getType Literal null MethodInvocation name MethodInvocation tv MethodInvocation getName getType equals BlockStatement ReturnStatement MemberReference tv ReturnStatement Literal null CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	1
MethodDeclaration Modifier public set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement Cast ReferenceType Boolean MemberReference value setAbstract getCoreHelper	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 1080863912280837728L Literal - 4591419820120997825L Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showAssociationNames MemberReference showem = StatementExpression Assignment MemberReference showAssociationNamesSet Literal true =	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier protected Annotation Override LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation getOwner IfStatement BinaryOperation == MemberReference modelElement Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator rect MethodInvocation getBounds IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes MethodInvocation isEmpty getFacade BlockStatement IfStatement MethodInvocation MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation MethodInvocation Literal 0 getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setVisible BlockStatement StatementExpression SuperMethodInvocation IfStatement MethodInvocation ! BlockStatement StatementExpression MethodInvocation MethodInvocation Literal 0 getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setVisible IfStatement MethodInvocation ! MethodInvocation isVisible BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation getMinimumSize MemberReference height getNameFig StatementExpression MethodInvocation MethodInvocation Literal true setVisible StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference rect x MemberReference rect y MemberReference rect width MemberReference rect height setBounds	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Object getTarget ReturnStatement MemberReference target	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier static FormalParameter BasicType int inline ForStatement EnhancedForControl VariableDeclaration ReferenceType Inline VariableDeclarator style MethodInvocation Inline values BlockStatement IfStatement BinaryOperation == MemberReference style id MemberReference inline BlockStatement StatementExpression Assignment MemberReference defaultInline MemberReference style = ReturnStatement Statement AssertStatement Literal false BinaryOperation + Literal "Unexpected Inline style ID: " MemberReference inline	1
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType EnumerationLiteral VariableDeclarator enumerationLiteral MethodInvocation IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation enumerationLiteral MemberReference name setName StatementExpression MethodInvocation enumerationLiteral Cast ReferenceType Enumeration MemberReference enumeration StatementExpression MethodInvocation MethodInvocation MemberReference enumerationLiteral add	0
MethodDeclaration Modifier public ReferenceType Iterator getTaggedValues FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement MethodInvocation MethodInvocation iterator MemberReference handle getTaggedValuesCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Expected a Got a " MethodInvocation handle MethodInvocation getName getClass	0
MethodDeclaration Modifier public final setTarget FormalParameter ReferenceType Object target LocalVariableDeclaration ReferenceType VariableDeclarator eventPump MethodInvocation Model getPump StatementExpression Assignment This MemberReference target MemberReference target = StatementExpression MethodInvocation eventPump This This MemberReference target MethodInvocation addModelEventListener StatementExpression MethodInvocation MethodInvocation getProperty updateText	0
MethodDeclaration Modifier public StatementExpression Assignment MemberReference Literal true = StatementExpression SuperMethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation StatementExpression MethodInvocation MethodInvocation setSelected LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation StatementExpression MethodInvocation MethodInvocation setSelected StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType LiteralInteger	0
MethodDeclaration Modifier private static ReferenceType Collection TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType String VariableDeclarator classpath MethodInvocation System Literal "java.class.path" getProperty LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator entries ClassCreator ReferenceType TreeSet TypeArgument ReferenceType String LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator pathSep MethodInvocation System Literal "path.separator" getProperty LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator allEntries ClassCreator ReferenceType StringTokenizer MemberReference classpath MemberReference pathSep WhileStatement MethodInvocation allEntries hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator entry MethodInvocation allEntries nextToken IfStatement BinaryOperation && MethodInvocation ! entry MethodInvocation Literal ".jar" endsWith toLowerCase MethodInvocation ! entry MethodInvocation Literal ".zip" endsWith toLowerCase BlockStatement StatementExpression MethodInvocation entries MemberReference entry add ReturnStatement MemberReference entries	1
MethodDeclaration Modifier public addConstraint FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType Object mc IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The handle must be instance of IfStatement BinaryOperation instanceof MemberReference mc ReferenceType Constraint BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of LocalVariableDeclaration Modifier final ReferenceType Element VariableDeclarator element Cast ReferenceType Element MemberReference handle LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType Constraint MemberReference mc StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the constraint to the element #" MemberReference mc MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier public setName FormalParameter ReferenceType String text StatementExpression MethodInvocation MethodInvocation MemberReference text setText getNameFig	0
MethodDeclaration Modifier public static ReferenceType getCollaborationsFactory ReturnStatement MethodInvocation impl getCollaborationsFactory	0
MethodDeclaration Modifier public BasicType boolean isAStateVertex FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Vertex	0
MethodDeclaration Modifier public BasicType boolean equals FormalParameter ReferenceType Object d2 IfStatement BinaryOperation instanceof MemberReference d2 ReferenceType BlockStatement ReturnStatement Literal false ReturnStatement Cast ReferenceType MemberReference d2	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isCellEditable FormalParameter BasicType int row FormalParameter BasicType int col ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType String name FormalParameter BasicType boolean interfacesOnly ClassifierNotFoundException LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference mClassifier MemberReference name lookupIn getFacade IfStatement BinaryOperation == MemberReference Literal null BlockStatement LocalVariableDeclaration ReferenceType Class VariableDeclarator classifier TryStatement IfStatement MethodInvocation Model MethodInvocation MemberReference mPackage isAModel getFacade BlockStatement StatementExpression Assignment MemberReference classifier MethodInvocation Class BinaryOperation + MemberReference namePrefix MemberReference name forName = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator clazzName BinaryOperation + BinaryOperation + BinaryOperation + MemberReference Literal "." MemberReference namePrefix MemberReference name StatementExpression Assignment MemberReference classifier MethodInvocation Class MemberReference clazzName forName = IfStatement MethodInvocation classifier isInterface BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference name MemberReference mClassifier buildInterface getCoreFactory = BlockStatement IfStatement MemberReference interfacesOnly BlockStatement ThrowStatement ClassCreator ReferenceType ClassNotFoundException BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference name MemberReference mClassifier buildClass getCoreFactory = CatchClause CatchClauseParameter ClassNotFoundException e TryStatement IfStatement MethodInvocation Model MethodInvocation MemberReference mPackage isAModel getFacade BlockStatement StatementExpression Assignment MemberReference classifier MethodInvocation ImportClassLoader MethodInvocation BinaryOperation + MemberReference namePrefix MemberReference name loadClass getInstance = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator clazzName BinaryOperation + BinaryOperation + BinaryOperation + MemberReference Literal "." MemberReference namePrefix MemberReference name StatementExpression Assignment MemberReference classifier MethodInvocation ImportClassLoader MethodInvocation MemberReference clazzName loadClass getInstance = IfStatement MethodInvocation classifier isInterface BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference name MemberReference mClassifier buildInterface getCoreFactory = BlockStatement IfStatement MemberReference interfacesOnly BlockStatement ThrowStatement ClassCreator ReferenceType ClassNotFoundException BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference name MemberReference mClassifier buildClass getCoreFactory = CatchClause CatchClauseParameter Exception e1 IfStatement BinaryOperation instanceof MemberReference e1 ReferenceType ClassNotFoundException BlockStatement StatementExpression MethodInvocation LOG MemberReference e1 warn IfStatement BinaryOperation != MethodInvocation getContext Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation MemberReference name MemberReference interfacesOnly get getContext = ReturnStatement MemberReference	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType BehavioralFeature FormalParameter ReferenceType Object element IfStatement BinaryOperation instanceof MemberReference element ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List VariableDeclarator contents ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType BehavioralFeature VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType BehavioralFeature TryStatement StatementExpression MethodInvocation contents MethodInvocation Model MethodInvocation MemberReference element getTaggedValuesCollection getFacade addAll StatementExpression MethodInvocation contents Cast ReferenceType ModelElement MemberReference element addAll LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation contents iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator clazz Cast ReferenceType Classifier MemberReference o IfStatement BinaryOperation instanceof MemberReference clazz ReferenceType DataType BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o1 MethodInvocation clazz getFeature BlockStatement IfStatement BinaryOperation instanceof MemberReference o1 ReferenceType BehavioralFeature BlockStatement StatementExpression MethodInvocation result Cast ReferenceType BehavioralFeature MemberReference o1 add BlockStatement StatementExpression MethodInvocation result MethodInvocation MethodInvocation it next addAll CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected BasicType int getInitialX ReturnStatement Literal 0	0
MethodDeclaration Modifier public BasicType boolean disable ReturnStatement Literal false	0
MethodDeclaration Modifier public static FormalParameter ReferenceType JMenu menu StatementExpression MethodInvocation MemberReference menu add	0
MethodDeclaration Modifier public final storage_class_specifier RecognitionException TokenStreamException SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_auto BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_auto match IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m Literal "auto" storageClassSpecifier BreakStatement SwitchStatementCase LITERAL_register BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_register match IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m Literal storageClassSpecifier BreakStatement SwitchStatementCase LITERAL_static BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_static match IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m Literal "static" storageClassSpecifier BreakStatement SwitchStatementCase LITERAL_extern BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_extern match IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m Literal storageClassSpecifier BreakStatement SwitchStatementCase LITERAL_mutable BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_mutable match IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m Literal "mutable" storageClassSpecifier BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object base ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Property	0
MethodDeclaration Modifier private ReferenceType StringBuffer generateClassifierBody FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference cls isAClass getFacade MethodInvocation Model MethodInvocation MemberReference cls isAInterface getFacade MethodInvocation Model MethodInvocation MemberReference cls isAEnumeration getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tv Literal null LocalVariableDeclaration ReferenceType Collection VariableDeclarator sFeatures MethodInvocation Model MethodInvocation MemberReference cls getFacade IfStatement MethodInvocation ! sFeatures isEmpty BlockStatement StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append IfStatement BinaryOperation && MemberReference verboseDocs MethodInvocation Model MethodInvocation MemberReference cls isAClass getFacade BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "// Attributes" append MemberReference INDENT append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator structuralFeature MemberReference sFeatures BlockStatement IfStatement MemberReference ! first BlockStatement StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MemberReference INDENT append StatementExpression MethodInvocation sb MethodInvocation MemberReference structuralFeature Literal false generateAttribute append StatementExpression Assignment MemberReference tv MethodInvocation MemberReference structuralFeature generateTaggedValues = IfStatement BinaryOperation && BinaryOperation != MemberReference tv Literal null BinaryOperation > MethodInvocation tv length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference tv append MemberReference INDENT append StatementExpression Assignment MemberReference first Literal false = IfStatement MethodInvocation Model MethodInvocation MemberReference cls isAEnumeration getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference cls getEnumerationLiterals getFacade IfStatement MethodInvocation ! isEmpty BlockStatement StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append IfStatement MemberReference verboseDocs BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "// append MemberReference INDENT append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation size LocalVariableDeclaration BasicType int VariableDeclarator cnt Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator literal MemberReference BlockStatement StatementExpression MemberReference ++ cnt IfStatement MemberReference ! first BlockStatement StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MemberReference INDENT append LocalVariableDeclaration BasicType char VariableDeclarator sep TernaryExpression BinaryOperation != MemberReference cnt MemberReference size Literal ',' Literal ';' StatementExpression MethodInvocation sb MethodInvocation MemberReference literal Literal false MemberReference sep generateEnumerationLiteral append StatementExpression Assignment MemberReference tv MethodInvocation MemberReference literal generateTaggedValues = IfStatement BinaryOperation && BinaryOperation != MemberReference tv Literal null BinaryOperation > MethodInvocation tv length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference tv append MemberReference INDENT append StatementExpression Assignment MemberReference first Literal false = LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation Model MethodInvocation MemberReference cls getAssociationEnds getFacade IfStatement MethodInvocation ! ends isEmpty BlockStatement StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append IfStatement BinaryOperation && MemberReference verboseDocs MethodInvocation Model MethodInvocation MemberReference cls isAClass getFacade BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "// Associations" append MemberReference INDENT append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator associationEnd MemberReference ends BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator association MethodInvocation Model MethodInvocation MemberReference associationEnd getAssociation getFacade StatementExpression MethodInvocation sb MethodInvocation MemberReference association MemberReference associationEnd generateAssociationFrom append StatementExpression Assignment MemberReference tv MethodInvocation MemberReference association generateTaggedValues = IfStatement BinaryOperation && BinaryOperation != MemberReference tv Literal null BinaryOperation > MethodInvocation tv length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference tv append MemberReference INDENT append LocalVariableDeclaration ReferenceType Collection VariableDeclarator elements MethodInvocation Model MethodInvocation MemberReference cls getOwnedElements getFacade ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation elements iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element MethodInvocation i next IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference element isAClass getFacade MethodInvocation Model MethodInvocation MemberReference element isAInterface getFacade BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference element generateClassifier append LocalVariableDeclaration ReferenceType Collection VariableDeclarator bFeatures MethodInvocation Model MethodInvocation MemberReference cls getOperations getFacade IfStatement MethodInvocation ! bFeatures isEmpty BlockStatement StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append IfStatement MemberReference verboseDocs BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "// Operations" append MemberReference INDENT append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator behavioralFeature MemberReference bFeatures BlockStatement IfStatement MemberReference ! first BlockStatement StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MemberReference INDENT append StatementExpression MethodInvocation sb MethodInvocation MemberReference behavioralFeature Literal false generateOperation append StatementExpression Assignment MemberReference tv MethodInvocation MemberReference behavioralFeature generateTaggedValues = IfStatement BinaryOperation && BinaryOperation && MethodInvocation Model getFacade MethodInvocation Model getFacade MethodInvocation Model getFacade BlockStatement IfStatement MemberReference lfBeforeCurly BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference INDENT append MemberReference LINE_SEPARATOR append BlockStatement StatementExpression MethodInvocation sb Literal ' ' append StatementExpression MethodInvocation sb Literal '{' append IfStatement BinaryOperation > MethodInvocation tv length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference INDENT append MethodInvocation MemberReference tv append MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MethodInvocation MemberReference behavioralFeature generateMethodBody append StatementExpression MethodInvocation sb MemberReference INDENT append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal "}" append BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal ";" append IfStatement BinaryOperation > MethodInvocation tv length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference tv append MethodInvocation MemberReference LINE_SEPARATOR append MemberReference INDENT append StatementExpression Assignment MemberReference first Literal false = ReturnStatement MemberReference sb	1
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference ignoredElementCount	0
MethodDeclaration Modifier public Annotation Override ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated setProject FormalParameter ReferenceType Project project ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	1
MethodDeclaration Modifier public ReferenceType LayoutedObject getObject FormalParameter BasicType int index ReturnStatement Cast ReferenceType LayoutedObject MethodInvocation objects MemberReference index get	0
MethodDeclaration Modifier protected updateElementListeners FormalParameter ReferenceType Set TypeArgument ReferenceType Object listenerSet LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator removes ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MemberReference listeners StatementExpression MethodInvocation removes MemberReference listenerSet removeAll StatementExpression MethodInvocation MemberReference removes removeElementListeners LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator adds ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MemberReference listenerSet StatementExpression MethodInvocation adds MemberReference listeners removeAll StatementExpression MethodInvocation MemberReference adds addElementListeners	1
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType Collection IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException MethodInvocation o toString LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement StatementExpression Cast ReferenceType Extend MemberReference handle ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference BlockStatement StatementExpression Cast ReferenceType Extend MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference BlockStatement StatementExpression Cast ReferenceType MemberReference handle StatementExpression MethodInvocation modelImpl MethodInvocation getCommandStack MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Set extension points for the #" MethodInvocation size MemberReference handle execute	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object classifier TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unrecognized object " MemberReference handle Literal " or " MemberReference classifier	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation modelCommand	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb MemberReference Value append	1
MethodDeclaration Modifier private getAllImportedElements FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType ModelElement results FormalParameter Modifier final ReferenceType Object pack IfStatement BinaryOperation instanceof MemberReference pack ReferenceType Namespace BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Namespace MemberReference pack TryStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Dependency VariableDeclarator deps MethodInvocation ns getClientDependency ForStatement EnhancedForControl VariableDeclaration ReferenceType Dependency VariableDeclarator dep MemberReference deps BlockStatement IfStatement BinaryOperation instanceof MemberReference dep ReferenceType Permission BlockStatement IfStatement MethodInvocation modelImpl MethodInvocation MemberReference dep MemberReference FRIEND_STEREOTYPE hasStereotype getExtensionMechanismsHelper BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType ModelElement VariableDeclarator o MethodInvocation dep getSupplier BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation results Cast ReferenceType Namespace MemberReference o addAll IfStatement BinaryOperation || MethodInvocation modelImpl MethodInvocation MemberReference dep MemberReference hasStereotype getExtensionMechanismsHelper MethodInvocation modelImpl MethodInvocation MemberReference dep MemberReference ACCESS_STEREOTYPE hasStereotype getExtensionMechanismsHelper BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType ModelElement VariableDeclarator o MethodInvocation dep getSupplier BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation results MethodInvocation CoreHelperMDRImpl Cast ReferenceType Namespace MemberReference o addAll IfStatement BinaryOperation instanceof MemberReference ns ReferenceType UmlPackage BlockStatement StatementExpression MethodInvocation results MethodInvocation modelImpl MethodInvocation MemberReference ns getFacade addAll CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	1
MethodDeclaration Modifier public Annotation Override ReferenceType ReturnStatement MethodInvocation ClClassName getTheInstance	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Parameter BlockStatement ReturnStatement Cast ReferenceType Parameter MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public ReferenceType getDoActivity FormalParameter ReferenceType Object handle ReturnStatement Cast ReferenceType State MemberReference handle	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType StatementExpression MethodInvocation result ClassCreator ReferenceType SettingsTabDiagramAppearance MemberReference Argo add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public static ReferenceType Object FormalParameter BasicType int x FormalParameter BasicType int y ReturnStatement MethodInvocation MemberReference x MemberReference y Literal 1 Literal 1	0
MethodDeclaration Modifier private ReferenceType Object getTaggedValue FormalParameter ReferenceType Object element FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation Model MethodInvocation MemberReference element MemberReference name getTaggedValue getFacade IfStatement BinaryOperation == MemberReference tv Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayInitializer Literal "" StatementExpression MethodInvocation MemberReference element MemberReference name MemberReference buildTaggedValue StatementExpression Assignment MemberReference tv MethodInvocation Model MethodInvocation MemberReference element MemberReference name getTaggedValue getFacade = ReturnStatement MemberReference tv	0
MethodDeclaration ReferenceType Object getType ReturnStatement MemberReference type	0
MethodDeclaration Modifier public static ReferenceType getTargetFollower IfStatement BinaryOperation == MemberReference targetFollower Literal null BlockStatement StatementExpression Assignment MemberReference targetFollower ClassCreator ReferenceType = StatementExpression MethodInvocation TargetManager MethodInvocation ClassCreator ReferenceType TargetListener MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation setTarget MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation setTarget MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation setTarget MethodDeclaration Modifier private setTarget StatementExpression MethodInvocation targetFollower MethodInvocation targetFollower shouldBeEnabled setEnabled addTargetListener getInstance StatementExpression MethodInvocation targetFollower MethodInvocation targetFollower shouldBeEnabled setEnabled ReturnStatement MemberReference targetFollower	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType StateVertex getAllSubStates FormalParameter ReferenceType Object TryStatement IfStatement BinaryOperation instanceof MemberReference ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType StateVertex VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType StateVertex ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator subState MethodInvocation Model MethodInvocation MemberReference getFacade BlockStatement IfStatement BinaryOperation instanceof MemberReference subState ReferenceType CompositeState BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference subState getAllSubStates addAll StatementExpression MethodInvocation result Cast ReferenceType StateVertex MemberReference subState add ReturnStatement MemberReference result CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument is not a composite state"	1
MethodDeclaration Modifier public BasicType int ReturnStatement BinaryOperation + SuperMethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType String getInstructions FormalParameter ReferenceType Object droppedObject ReturnStatement MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation Model MethodInvocation MemberReference droppedObject toString getFacade localize	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ev StatementExpression SuperMethodInvocation MemberReference ev actionPerformed IfStatement BinaryOperation == MethodInvocation ev getSource MethodInvocation getOkButton BlockStatement StatementExpression MethodInvocation IfStatement BinaryOperation == MethodInvocation ev getSource MethodInvocation BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier private ReferenceType StringBuffer generateClassifierBody FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || MethodInvocation MethodInvocation MemberReference cls isAClass getFacade MethodInvocation MethodInvocation MemberReference cls isAInterface getFacade BlockStatement StatementExpression MethodInvocation MemberReference cls MemberReference sb generateClassifierInnerClasses StatementExpression MethodInvocation MemberReference cls MemberReference sb generateClassifierBodyOperations StatementExpression MethodInvocation MemberReference cls MemberReference sb generateClassifierDestructor StatementExpression MethodInvocation MemberReference cls MemberReference sb generateClassifierBodyAttributes StatementExpression MethodInvocation MemberReference cls MemberReference sb generateClassifierBodyAssociations StatementExpression MethodInvocation MemberReference cls MemberReference sb generateClassifierBodyTypedefs ReturnStatement MemberReference sb	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Object umlMessage FormalParameter ReferenceType String s ParseException LocalVariableDeclaration ReferenceType String VariableDeclarator fname Literal null LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator guard Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator paramExpr Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator token LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator varname Literal null LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType List VariableDeclarator predecessors ClassCreator ReferenceType ArrayList TypeArgument ReferenceType List LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Integer VariableDeclarator seqno Literal null LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Integer VariableDeclarator currentseq ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Integer LocalVariableDeclaration BasicType boolean VariableDeclarator mustBePre Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator mustBeSeq Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator parallell Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator iterative Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator mayDeleteExpr Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator refindOperation Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator hasPredecessors Literal false StatementExpression MethodInvocation currentseq Literal null add StatementExpression MethodInvocation currentseq Literal null add TryStatement LocalVariableDeclaration ReferenceType MyTokenizer VariableDeclarator st ClassCreator ReferenceType MyTokenizer MemberReference s Literal " MemberReference MyTokenizer PAREN_EXPR_STRING_SEPARATOR WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference token MethodInvocation st nextToken = IfStatement BinaryOperation || Literal MethodInvocation MemberReference token equals " " Literal MethodInvocation MemberReference token equals "\t" BlockStatement IfStatement BinaryOperation == MemberReference currentseq Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference varname Literal null BinaryOperation == MemberReference fname Literal null BlockStatement StatementExpression MethodInvocation varname MemberReference token append IfStatement Literal MethodInvocation MemberReference token equals "[" BlockStatement IfStatement MemberReference mustBePre BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.message.pred-unqualified" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex StatementExpression Assignment MemberReference mustBeSeq Literal true = IfStatement BinaryOperation != MemberReference guard Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex StatementExpression Assignment MemberReference guard ClassCreator ReferenceType StringBuilder = WhileStatement Literal true BlockStatement StatementExpression Assignment MemberReference token MethodInvocation st nextToken = IfStatement Literal MethodInvocation MemberReference token equals "]" BlockStatement BreakStatement StatementExpression MethodInvocation guard MemberReference token append IfStatement Literal MethodInvocation MemberReference token equals "*" BlockStatement IfStatement MemberReference mustBePre BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.message.pred-unqualified" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex StatementExpression Assignment MemberReference mustBeSeq Literal true = IfStatement BinaryOperation != MemberReference currentseq Literal null BlockStatement StatementExpression Assignment MemberReference iterative Literal true = IfStatement Literal MethodInvocation MemberReference token equals "." BlockStatement IfStatement BinaryOperation == MemberReference currentseq Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex IfStatement BinaryOperation || BinaryOperation != MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 2 get Literal null BinaryOperation != MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 get Literal null BlockStatement StatementExpression MethodInvocation currentseq Literal null add StatementExpression MethodInvocation currentseq Literal null add IfStatement Literal MethodInvocation MemberReference token equals ":" BlockStatement IfStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation st nextToken IfStatement Literal MethodInvocation MemberReference t equals "=" BlockStatement StatementExpression MethodInvocation st Literal ":=" putToken ContinueStatement StatementExpression MethodInvocation st MemberReference t putToken IfStatement MemberReference mustBePre BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex IfStatement BinaryOperation != MemberReference currentseq Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation > MethodInvocation currentseq size Literal 2 BinaryOperation == MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 2 get Literal null BinaryOperation == MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 get Literal null BlockStatement StatementExpression MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 remove StatementExpression MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 remove StatementExpression Assignment MemberReference seqno MemberReference currentseq = StatementExpression Assignment MemberReference currentseq Literal null = StatementExpression Assignment MemberReference mayDeleteExpr Literal true = IfStatement Literal MethodInvocation MemberReference token equals "/" BlockStatement IfStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation st nextToken IfStatement Literal MethodInvocation MemberReference t equals "/" BlockStatement StatementExpression MethodInvocation st Literal "//" putToken ContinueStatement StatementExpression MethodInvocation st MemberReference t putToken IfStatement MemberReference mustBeSeq BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex StatementExpression Assignment MemberReference mustBePre Literal false = StatementExpression Assignment MemberReference mustBeSeq Literal true = IfStatement BinaryOperation && BinaryOperation && BinaryOperation > MethodInvocation currentseq size Literal 2 BinaryOperation == MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 2 get Literal null BinaryOperation == MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 get Literal null BlockStatement StatementExpression MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 remove StatementExpression MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 remove IfStatement BinaryOperation || BinaryOperation != MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 2 get Literal null BinaryOperation != MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 get Literal null BlockStatement StatementExpression MethodInvocation predecessors MemberReference currentseq add StatementExpression Assignment MemberReference currentseq ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Integer = StatementExpression MethodInvocation currentseq Literal null add StatementExpression MethodInvocation currentseq Literal null add StatementExpression Assignment MemberReference hasPredecessors Literal true = IfStatement Literal MethodInvocation MemberReference token equals "//" BlockStatement IfStatement MemberReference mustBePre BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex StatementExpression Assignment MemberReference mustBeSeq Literal true = IfStatement BinaryOperation != MemberReference currentseq Literal null BlockStatement StatementExpression Assignment MemberReference parallell Literal true = IfStatement Literal MethodInvocation MemberReference token equals "," BlockStatement IfStatement BinaryOperation != MemberReference currentseq Literal null BlockStatement IfStatement MemberReference mustBeSeq BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex StatementExpression Assignment MemberReference mustBePre Literal true = IfStatement BinaryOperation && BinaryOperation && BinaryOperation > MethodInvocation currentseq size Literal 2 BinaryOperation == MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 2 get Literal null BinaryOperation == MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 get Literal null BlockStatement StatementExpression MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 remove StatementExpression MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 remove IfStatement BinaryOperation || BinaryOperation != MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 2 get Literal null BinaryOperation != MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 get Literal null BlockStatement StatementExpression MethodInvocation predecessors MemberReference currentseq add StatementExpression Assignment MemberReference currentseq ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Integer = StatementExpression MethodInvocation currentseq Literal null add StatementExpression MethodInvocation currentseq Literal null add StatementExpression Assignment MemberReference hasPredecessors Literal true = BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference varname Literal null BinaryOperation != MemberReference fname Literal null BlockStatement StatementExpression Assignment MemberReference varname ClassCreator ReferenceType StringBuilder BinaryOperation + MemberReference fname MemberReference token = StatementExpression Assignment MemberReference fname Literal null = IfStatement BinaryOperation && BinaryOperation != MemberReference varname Literal null BinaryOperation == MemberReference fname Literal null BlockStatement StatementExpression MethodInvocation varname MemberReference token append BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex IfStatement BinaryOperation || Literal MethodInvocation MemberReference token equals "=" Literal MethodInvocation MemberReference token equals ":=" BlockStatement IfStatement BinaryOperation == MemberReference currentseq Literal null BlockStatement IfStatement BinaryOperation == MemberReference varname Literal null BlockStatement StatementExpression Assignment MemberReference varname ClassCreator ReferenceType StringBuilder MemberReference fname = StatementExpression Assignment MemberReference fname Literal "" = BlockStatement StatementExpression Assignment MemberReference fname Literal "" = IfStatement BinaryOperation == MemberReference currentseq Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference paramExpr Literal null BinaryOperation == MethodInvocation token Literal 0 charAt Literal '(' BlockStatement IfStatement BinaryOperation != MethodInvocation token BinaryOperation - MethodInvocation token length Literal 1 charAt Literal ')' BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex IfStatement BinaryOperation || BinaryOperation == MemberReference fname Literal null Literal MethodInvocation MemberReference fname equals "" BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex IfStatement BinaryOperation == MemberReference varname Literal null BlockStatement StatementExpression Assignment MemberReference varname ClassCreator ReferenceType StringBuilder = StatementExpression Assignment MemberReference paramExpr MethodInvocation token Literal 1 BinaryOperation - MethodInvocation token length Literal 1 substring = IfStatement BinaryOperation && BinaryOperation != MemberReference varname Literal null BinaryOperation == MemberReference fname Literal null BlockStatement StatementExpression MethodInvocation varname MemberReference token append IfStatement BinaryOperation || BinaryOperation == MemberReference fname Literal null BinaryOperation == MethodInvocation fname length Literal 0 BlockStatement StatementExpression Assignment MemberReference fname MemberReference token = BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.message.unexpected-token" LocalVariableDeclaration ReferenceType Object VariableDeclarator parseExcArgs ArrayInitializer MemberReference token ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg MemberReference parseExcArgs localize MethodInvocation st getTokenIndex BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator hasVal BinaryOperation != MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 2 get Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator hasOrd BinaryOperation != MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 get Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator assigned Literal false LocalVariableDeclaration BasicType int VariableDeclarator bp MethodInvocation MemberReference token findMsgOrderBreak IfStatement BinaryOperation && BinaryOperation && MemberReference ! hasVal MemberReference ! assigned BinaryOperation == MemberReference bp MethodInvocation token length BlockStatement TryStatement StatementExpression MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 2 MethodInvocation Integer MemberReference token valueOf set StatementExpression Assignment MemberReference assigned Literal true = CatchClause CatchClauseParameter NumberFormatException nfe IfStatement BinaryOperation && BinaryOperation && MemberReference ! hasOrd MemberReference ! assigned BinaryOperation == MemberReference bp Literal 0 BlockStatement TryStatement StatementExpression MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 MethodInvocation Integer MethodInvocation MemberReference token parseMsgOrder valueOf set StatementExpression Assignment MemberReference assigned Literal true = CatchClause CatchClauseParameter NumberFormatException nfe IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation && MemberReference ! hasVal MemberReference ! hasOrd MemberReference ! assigned BinaryOperation > MemberReference bp Literal 0 BinaryOperation < MemberReference bp MethodInvocation token length BlockStatement LocalVariableDeclaration ReferenceType Integer VariableDeclarator nbr VariableDeclarator ord TryStatement StatementExpression Assignment MemberReference nbr MethodInvocation Integer MethodInvocation token Literal 0 MemberReference bp substring valueOf = StatementExpression Assignment MemberReference ord MethodInvocation Integer MethodInvocation MethodInvocation token MemberReference bp substring parseMsgOrder valueOf = StatementExpression MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 2 MemberReference nbr set StatementExpression MethodInvocation currentseq BinaryOperation - MethodInvocation currentseq size Literal 1 MemberReference ord set StatementExpression Assignment MemberReference assigned Literal true = CatchClause CatchClauseParameter NumberFormatException nfe IfStatement MemberReference ! assigned BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.message.unexpected-token" LocalVariableDeclaration ReferenceType Object VariableDeclarator parseExcArgs ArrayInitializer MemberReference token ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg MemberReference parseExcArgs localize MethodInvocation st getTokenIndex CatchClause CatchClauseParameter NoSuchElementException nsee LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation s length CatchClause CatchClauseParameter ParseException pre ThrowStatement MemberReference pre LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator args MethodInvocation MemberReference paramExpr MemberReference mayDeleteExpr parseArguments StatementExpression MethodInvocation MemberReference s MemberReference fname MemberReference guard MemberReference paramExpr MemberReference varname MemberReference predecessors MemberReference seqno MemberReference parallell MemberReference iterative printDebugInfo StatementExpression MethodInvocation MemberReference umlMessage StatementExpression MethodInvocation MemberReference umlMessage MemberReference guard MemberReference parallell MemberReference iterative StatementExpression Assignment MemberReference fname MethodInvocation MemberReference umlMessage MemberReference fname MemberReference mayDeleteExpr fillBlankFunctionName = StatementExpression Assignment MemberReference varname MethodInvocation MemberReference umlMessage MemberReference varname MemberReference mayDeleteExpr fillBlankVariableName = StatementExpression Assignment MemberReference refindOperation MethodInvocation MemberReference umlMessage MemberReference fname MemberReference varname MemberReference refindOperation = StatementExpression Assignment MemberReference refindOperation MethodInvocation MemberReference umlMessage MemberReference args MemberReference refindOperation handleArguments = StatementExpression Assignment MemberReference refindOperation MethodInvocation MemberReference umlMessage MemberReference seqno MemberReference refindOperation handleSequenceNumber = StatementExpression MethodInvocation MemberReference umlMessage MemberReference fname MemberReference refindOperation handleOperation StatementExpression MethodInvocation MemberReference umlMessage MemberReference predecessors MemberReference hasPredecessors handlePredecessors	1
MethodDeclaration Modifier public static ReferenceType ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public ReferenceType Object getSpecific FormalParameter ReferenceType Object handle ReturnStatement Cast ReferenceType Generalization MemberReference handle	0
MethodDeclaration Modifier public Annotation Override BasicType int getChildCount FormalParameter ReferenceType Object parent IfStatement BinaryOperation && MemberReference flat BinaryOperation == MemberReference parent MethodInvocation getRoot BlockStatement ReturnStatement MethodInvocation size ReturnStatement SuperMethodInvocation MemberReference parent getChildCount	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getSelectedModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator ar MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference ar isAAssociationRole getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation Model MethodInvocation MemberReference ar getBase getFacade IfStatement BinaryOperation != MemberReference base Literal null BlockStatement ReturnStatement MemberReference base ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier public BasicType boolean isEmpty ReturnStatement MethodInvocation list isEmpty	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement LocalVariableDeclaration Modifier final ReferenceType Operation VariableDeclarator operation Cast ReferenceType Operation MemberReference handle ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereo MethodInvocation MemberReference operation getStereotypes BlockStatement IfStatement MethodInvocation modelImpl MethodInvocation MemberReference stereo Literal "create" Literal "BehavioralFeature" isStereotypeInh getExtensionMechanismsHelper BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object source FormalParameter ReferenceType Object path FormalParameter BasicType int FormalParameter ReferenceType Object children LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList LocalVariableDeclaration ReferenceType VariableDeclarator e Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType BlockStatement IfStatement BinaryOperation == MemberReference e Literal null BlockStatement StatementExpression Assignment MemberReference e ClassCreator ReferenceType MemberReference source MemberReference path MemberReference MemberReference children = StatementExpression Cast ReferenceType MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object type FormalParameter ReferenceType Object IfStatement BinaryOperation || BinaryOperation instanceof MemberReference type ReferenceType Class BinaryOperation instanceof MemberReference ReferenceType Class BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal are expected" ReturnStatement Cast ReferenceType Class MemberReference type	0
MethodDeclaration Modifier public Annotation Override ReferenceType ReturnStatement MethodInvocation ClClassName getTheInstance	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name StatementExpression Assignment MemberReference propertySetName MemberReference name =	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String decision FormalParameter BasicType int priority LocalVariableDeclaration ReferenceType VariableDeclarator d MethodInvocation MemberReference decision IfStatement BinaryOperation == Literal null MemberReference d BlockStatement StatementExpression Assignment MemberReference d ClassCreator ReferenceType MemberReference decision MemberReference priority = StatementExpression MethodInvocation decisions MemberReference d add ReturnStatement StatementExpression MethodInvocation d MemberReference priority setPriority StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference decision notifyObservers	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier private ReferenceType String generateConstraintEnrichedDocComment FormalParameter ReferenceType Object me FormalParameter ReferenceType Object ae LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MemberReference me Literal true MemberReference INDENT generateConstraintEnrichedDocComment IfStatement MethodInvocation MemberReference ae isCollection BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sDocComment ClassCreator ReferenceType StringBuffer Literal 80 IfStatement BinaryOperation || BinaryOperation == MemberReference s Literal null Literal MethodInvocation MemberReference s equals "" BlockStatement StatementExpression MethodInvocation sDocComment MethodInvocation s Literal 0 BinaryOperation + MethodInvocation s Literal "*/" indexOf Literal 1 substring append BlockStatement StatementExpression MethodInvocation sDocComment MethodInvocation Literal "/**" append MethodInvocation MemberReference LINE_SEPARATOR append MemberReference INDENT append StatementExpression MethodInvocation sDocComment MethodInvocation Literal " * " append MethodInvocation MemberReference LINE_SEPARATOR append MemberReference INDENT append StatementExpression MethodInvocation sDocComment MethodInvocation Literal " *" append MemberReference INDENT append LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference ae getType getFacade IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression MethodInvocation sDocComment Literal " " append StatementExpression MethodInvocation sDocComment MethodInvocation Model MethodInvocation MemberReference type getName getFacade append StatementExpression MethodInvocation sDocComment MethodInvocation MemberReference INDENT append MethodInvocation Literal " */" append MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sDocComment MemberReference LINE_SEPARATOR append ReturnStatement MethodInvocation sDocComment toString ReturnStatement TernaryExpression BinaryOperation != MemberReference s Literal null MemberReference s Literal ""	1
MethodDeclaration Modifier private BasicType int FormalParameter Modifier final ReferenceType Component comp ReturnStatement Cast BasicType int MethodInvocation comp MethodInvocation getWidth getPreferredSize	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public ReferenceType Collection getInternalTransitions FormalParameter ReferenceType Object handle IfStatement MethodInvocation MemberReference handle BlockStatement LocalVariableDeclaration Modifier final ReferenceType List TypeArgument ReferenceType Transition VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Transition LocalVariableDeclaration Modifier final ReferenceType Region VariableDeclarator region Cast ReferenceType Vertex MemberReference handle IfStatement BinaryOperation != MemberReference region Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType List TypeArgument ReferenceType Transition VariableDeclarator transitions MethodInvocation region getTransitions ForStatement EnhancedForControl VariableDeclaration ReferenceType Transition VariableDeclarator transition MemberReference transitions BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation transition getSource MemberReference handle BinaryOperation == MethodInvocation transition getTarget MemberReference handle BinaryOperation == MethodInvocation transition getKind MemberReference TransitionKind INTERNAL_LITERAL BlockStatement StatementExpression MethodInvocation result MemberReference transition add ReturnStatement MemberReference result ThrowStatement ClassCreator ReferenceType IllegalArgumentException	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType AbstractArgoJPanel ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public Annotation Override StatementExpression MethodInvocation IfStatement MemberReference ! BlockStatement StatementExpression SuperMethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator maxWidth Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator height Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator fig MethodInvocation getFigs BlockStatement IfStatement BinaryOperation > MethodInvocation fig getWidth MemberReference maxWidth BlockStatement StatementExpression Assignment MemberReference maxWidth MethodInvocation fig getWidth = StatementExpression MethodInvocation fig MethodInvocation fig MemberReference height getMinimumSize StatementExpression Assignment MemberReference height MethodInvocation fig getHeight += StatementExpression Assignment MemberReference MemberReference maxWidth = StatementExpression Assignment MemberReference MemberReference height =	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier final protected mEndOfLine FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference EndOfLine = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '\r' BinaryOperation == MethodInvocation Literal 2 LA Literal '\n' Literal true BlockStatement StatementExpression MethodInvocation Literal match IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '\r' Literal true Literal true BlockStatement StatementExpression MethodInvocation Literal '\r' match IfStatement BinaryOperation == MethodInvocation Literal 1 LA Literal '\n' BlockStatement StatementExpression MethodInvocation Literal '\n' match BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltForCharException Cast BasicType char MethodInvocation Literal 1 LA MethodInvocation getFilename MethodInvocation getLine MethodInvocation getColumn IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType Collection getExtentElements FormalParameter ReferenceType String extentName IfStatement BinaryOperation && BinaryOperation != MemberReference extentName Literal null MethodInvocation extentName Literal "pathmap://UML_" startsWith BlockStatement TryStatement LocalVariableDeclaration ReferenceType URI VariableDeclarator uri MethodInvocation URI MemberReference extentName createURI LocalVariableDeclaration ReferenceType Resource VariableDeclarator r MethodInvocation modelImpl MethodInvocation getResourceSet MethodInvocation MemberReference uri Literal true getResource StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference r MemberReference Boolean TRUE put ReturnStatement MethodInvocation r getContents CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation LOG BinaryOperation + Literal "failed to get resource: " MemberReference extentName warn ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ToDoList BlockStatement ReturnStatement MethodInvocation KnowledgeTypeNode MethodInvocation MemberReference child indexOf IfStatement BinaryOperation instanceof MemberReference parent ReferenceType KnowledgeTypeNode BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator candidates ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ToDoItem LocalVariableDeclaration ReferenceType KnowledgeTypeNode VariableDeclarator ktn Cast ReferenceType KnowledgeTypeNode MemberReference parent LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator itemList MethodInvocation Designer MethodInvocation getToDoList MethodInvocation SynchronizedStatement MemberReference itemList ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference itemList BlockStatement IfStatement MethodInvocation item MethodInvocation ktn getName BlockStatement StatementExpression MethodInvocation candidates MemberReference item add ReturnStatement MethodInvocation candidates MemberReference child indexOf ReturnStatement Literal - 1	1
MethodDeclaration Modifier public BasicType boolean isACallAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType CallAction	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType String VariableDeclarator meName MethodInvocation Model MethodInvocation MemberReference dm getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference meName Literal null MethodInvocation meName Literal "" equals BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr MemberReference meName IfStatement BinaryOperation || BinaryOperation == MemberReference nameStr Literal null BinaryOperation == MethodInvocation nameStr length Literal 0 BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation MemberReference nameStr BlockStatement ReturnStatement MemberReference NO_PROBLEM ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator name MemberReference names BlockStatement IfStatement MethodInvocation name MemberReference nameStr equalsIgnoreCase BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier private ReferenceType IdentifierExpression parseIdentifierOrKeyword FeatureNotSupportedException LocalVariableDeclaration ReferenceType IdentifierExpression VariableDeclarator result ClassCreator ReferenceType IdentifierExpression SwitchStatement MemberReference curtok id SwitchStatementCase MemberReference TokenID Ident StatementExpression Assignment MemberReference result Identifier ArrayCreator ReferenceType String ArrayInitializer MethodInvocation strings MemberReference curtok data get = StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase MemberReference TokenID If MemberReference TokenID Else MemberReference TokenID Bool MemberReference TokenID Byte MemberReference TokenID Char MemberReference TokenID Decimal MemberReference TokenID Double MemberReference TokenID Float MemberReference TokenID Int MemberReference TokenID Long MemberReference TokenID Object MemberReference TokenID SByte MemberReference TokenID Short MemberReference TokenID String MemberReference TokenID UInt MemberReference TokenID ULong MemberReference TokenID UShort MemberReference TokenID Void MemberReference TokenID This MemberReference TokenID Base LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation TokenID MemberReference curtok id getFieldName StatementExpression Assignment MemberReference result Identifier ArrayCreator ReferenceType String ArrayInitializer MemberReference = StatementExpression Assignment MemberReference result MemberReference curtok id = StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference TokenID Ident RecoverFromError BreakStatement ReturnStatement MemberReference result	0
MethodDeclaration addInterface FormalParameter ReferenceType String name FormalParameter BasicType short modifiers FormalParameter ReferenceType List TypeArgument ReferenceType String typeParameters FormalParameter ReferenceType List TypeArgument ReferenceType String interfaces FormalParameter ReferenceType String javadoc FormalParameter BasicType boolean forceIt IfStatement BinaryOperation && BinaryOperation != MemberReference typeParameters Literal null BinaryOperation > MethodInvocation typeParameters size Literal 0 BlockStatement StatementExpression MethodInvocation Literal "type parameters not supported on Interface" MemberReference name logError LocalVariableDeclaration ReferenceType Object VariableDeclarator mInterface MethodInvocation MethodInvocation Model MethodInvocation getCoreFactory MemberReference name MemberReference modifiers MemberReference javadoc MemberReference typeParameters addClassifier IfStatement BinaryOperation == MethodInvocation getLevel Literal 0 BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator interfaceName MemberReference interfaces BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parentInterface Literal null TryStatement StatementExpression Assignment MemberReference parentInterface MethodInvocation MethodInvocation MethodInvocation MemberReference interfaceName getClassifierName getInterface MemberReference interfaceName getContext = StatementExpression MethodInvocation MemberReference currentPackage MemberReference parentInterface MemberReference mInterface getGeneralization CatchClause CatchClauseParameter ClassifierNotFoundException e IfStatement BinaryOperation && BinaryOperation && MemberReference forceIt BinaryOperation != MemberReference interfaceName Literal null BinaryOperation != MemberReference model Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Modeler.java: " Literal "forced creation of unknown interface " MemberReference interfaceName info LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference interfaceName getPackageName LocalVariableDeclaration ReferenceType String VariableDeclarator classifierName MethodInvocation MemberReference interfaceName getClassifierName LocalVariableDeclaration ReferenceType Object VariableDeclarator mPackage TernaryExpression BinaryOperation > MethodInvocation packageName length Literal 0 MethodInvocation MemberReference packageName getPackage MemberReference model StatementExpression Assignment MemberReference parentInterface MethodInvocation Model MethodInvocation MemberReference classifierName MemberReference mPackage buildInterface getCoreFactory = StatementExpression MethodInvocation newElements MemberReference parentInterface add StatementExpression MethodInvocation MemberReference currentPackage MemberReference parentInterface MemberReference mInterface getGeneralization BlockStatement StatementExpression MethodInvocation MemberReference interfaceName Literal "a generalization" warnClassifierNotFound	1
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb Literal append StatementExpression MethodInvocation Resource MemberReference sb ToSource StatementExpression MethodInvocation sb Literal ")" append StatementExpression MethodInvocation Statements MemberReference sb ToSource	1
MethodDeclaration Modifier public ReferenceType List getOutEdges FormalParameter ReferenceType Object port ReturnStatement MemberReference Collections EMPTY_LIST	1
MethodDeclaration Modifier private selectAll FormalParameter ReferenceType Set targets LocalVariableDeclaration ReferenceType ExplorerTreeModel VariableDeclarator model Cast ReferenceType ExplorerTreeModel MethodInvocation getModel LocalVariableDeclaration ReferenceType ExplorerTreeNode VariableDeclarator root Cast ReferenceType ExplorerTreeNode MethodInvocation model getRoot StatementExpression MethodInvocation MemberReference model MemberReference root MemberReference targets selectChildren	1
MethodDeclaration Modifier protected ReferenceType Action getActionUniAggregation IfStatement BinaryOperation == MemberReference actionUniAggregation Literal null BlockStatement StatementExpression Assignment MemberReference actionUniAggregation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation Literal true Literal = ReturnStatement MemberReference actionUniAggregation	0
MethodDeclaration Modifier public Annotation Override ReferenceType FormalParameter ReferenceType FormalParameter ReferenceType String instructions ReturnStatement ClassCreator ReferenceType MemberReference MemberReference instructions	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation Notation MethodInvocation	0
MethodDeclaration Modifier public set FormalParameter BasicType boolean value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier static protected ReferenceType List TypeArgument ReferenceType Critic criticListForSpecificClass FormalParameter ReferenceType Class clazz LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Critic VariableDeclarator theCritics MethodInvocation MethodInvocation MemberReference clazz get getCriticRegistry IfStatement BinaryOperation == MemberReference theCritics Literal null BlockStatement StatementExpression Assignment MemberReference theCritics ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Critic = StatementExpression MethodInvocation criticRegistry MemberReference clazz MemberReference theCritics put ReturnStatement MemberReference theCritics	1
MethodDeclaration Modifier protected ReferenceType NameVal FormalParameter ReferenceType String str LocalVariableDeclaration ReferenceType NameVal VariableDeclarator rv Literal null LocalVariableDeclaration BasicType int VariableDeclarator lqpos VariableDeclarator rqpos LocalVariableDeclaration BasicType int VariableDeclarator eqpos MethodInvocation str Literal '=' indexOf IfStatement BinaryOperation < MemberReference eqpos Literal 0 BlockStatement ReturnStatement Literal null StatementExpression Assignment MemberReference lqpos MethodInvocation str Literal '"' MemberReference eqpos indexOf = StatementExpression Assignment MemberReference rqpos MethodInvocation str Literal '"' lastIndexOf = IfStatement BinaryOperation || BinaryOperation < MemberReference lqpos Literal 0 BinaryOperation <= MemberReference rqpos MemberReference lqpos BlockStatement ReturnStatement Literal null StatementExpression Assignment MemberReference rv ClassCreator ReferenceType NameVal MethodInvocation str Literal 0 MemberReference eqpos substring MethodInvocation str BinaryOperation + MemberReference lqpos Literal 1 MemberReference rqpos substring = ReturnStatement MemberReference rv	1
MethodDeclaration Modifier private IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation Literal false setVisible	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getFillColor ReturnStatement MethodInvocation MethodInvocation getFillColor getBigPort	0
MethodDeclaration Modifier public ReferenceType Object getMethod FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MemberReference obsoleteFeatures BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference getFacade MethodInvocation name MethodInvocation Model MethodInvocation MemberReference getName getFacade equals BlockStatement ReturnStatement MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType FigNode FormalParameter ReferenceType FigNode oldEncloser FormalParameter ReferenceType FigNode newEncloser IfStatement BinaryOperation && BinaryOperation == MemberReference oldEncloser Literal null BinaryOperation == MemberReference newEncloser Literal null BlockStatement ReturnStatement IfStatement BinaryOperation || BinaryOperation instanceof MemberReference ReferenceType BinaryOperation instanceof MemberReference ReferenceType FigObjectFlowState BlockStatement StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType event StatementExpression This MethodInvocation MethodInvocation event getText setText StatementExpression This MethodInvocation MethodInvocation event StatementExpression This MethodInvocation MethodInvocation event isBold setBold StatementExpression This MethodInvocation MethodInvocation event isItalic setItalic IfStatement BinaryOperation > MethodInvocation MemberReference width getMinimumSize MethodInvocation getWidth BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference width getMinimumSize StatementExpression This MethodInvocation damage	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference INSTANCE	0
MethodDeclaration ReferenceType String generateCoreAssociationEnd FormalParameter ReferenceType Object ae LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 80 StatementExpression MethodInvocation sb MethodInvocation MethodInvocation Model MethodInvocation MemberReference ae getVisibility getFacade generateVisibility append IfStatement MethodInvocation Model MethodInvocation MemberReference ae isStatic getFacade BlockStatement StatementExpression MethodInvocation sb Literal "static " append IfStatement MethodInvocation Model MethodInvocation MemberReference ae isFrozen getFacade BlockStatement StatementExpression MethodInvocation sb Literal "final " append IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference ae getUpper getFacade Literal 1 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MethodInvocation Model MethodInvocation MemberReference ae getType getFacade generateClassifierRef append BlockStatement StatementExpression MethodInvocation sb Literal "Vector " append StatementExpression MethodInvocation sb MethodInvocation MethodInvocation MemberReference ae generateAscEndName append Literal ' ' append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getStateMachine getFacade MemberReference element	0
MethodDeclaration Modifier public ReferenceType Parameter ReturnStatement MethodInvocation	0
MethodDeclaration Modifier private FormalParameter BasicType int x FormalParameter BasicType int y StatementExpression Assignment MemberReference activations ClassCreator ReferenceType LinkedList TypeArgument ReferenceType FigActivation = StatementExpression Assignment MemberReference ClassCreator ReferenceType LinkedList TypeArgument ReferenceType FigActivation = StatementExpression Assignment MemberReference ClassCreator ReferenceType FigRect MemberReference x MemberReference y MemberReference MemberReference HEIGHT = StatementExpression MethodInvocation Literal false setFilled StatementExpression MethodInvocation Literal 0 setLineWidth StatementExpression Assignment MemberReference lineFig ClassCreator ReferenceType FigLine BinaryOperation + MemberReference x BinaryOperation / MemberReference Literal 2 MemberReference y BinaryOperation + MemberReference x BinaryOperation / MemberReference Literal 2 BinaryOperation + MemberReference y MemberReference HEIGHT MemberReference LINE_COLOR = StatementExpression MethodInvocation lineFig Literal true StatementExpression MethodInvocation lineFig MemberReference setLineWidth StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MemberReference lineFig addFig	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getCoreHelper ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier protected FormalParameter ReferenceType String s StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ArgoEventTypes This MethodInvocation Translator MemberReference s localize	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object getValue ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getExpression	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object action StatementExpression MethodInvocation impl MemberReference handle MemberReference action	0
MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType Object attribute FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MethodInvocation MemberReference attribute Literal false generateAttribute getInstance	0
MethodDeclaration Modifier protected buildModelList StatementExpression SuperMethodInvocation buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getAddition getFacade addElement	0
MethodDeclaration Modifier protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator stereoDim MethodInvocation MethodInvocation getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MemberReference PADDING BinaryOperation + MemberReference y MemberReference stereoDim height BinaryOperation - MemberReference w BinaryOperation * MemberReference PADDING Literal 2 MemberReference nameDim height setBounds getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MemberReference PADDING MemberReference y BinaryOperation - MemberReference w BinaryOperation * MemberReference PADDING Literal 2 MemberReference stereoDim height setBounds StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x Literal 1 BinaryOperation + MemberReference y Literal 1 BinaryOperation - MemberReference w Literal 2 BinaryOperation - MemberReference h Literal 2 setBounds getBigPort StatementExpression MethodInvocation cover MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression Cast ReferenceType MethodInvocation getBigPort StatementExpression MethodInvocation cover MemberReference h setCornerRadius StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MemberReference oldBounds MethodInvocation getBounds	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object op FormalParameter ReferenceType Object type LocalVariableDeclaration ReferenceType Object VariableDeclarator param Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation MemberReference op getParameters MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator p MethodInvocation it next IfStatement MethodInvocation Model MethodInvocation MemberReference p isReturn getFacade BlockStatement StatementExpression Assignment MemberReference param MemberReference p = BreakStatement WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator p MethodInvocation it next IfStatement MethodInvocation Model MethodInvocation MemberReference p isReturn getFacade BlockStatement StatementExpression MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation MemberReference p moveToTrash getManager IfStatement BinaryOperation == MemberReference param Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getDefaultReturnType getManager StatementExpression Assignment MemberReference param MethodInvocation Model MethodInvocation MemberReference op MemberReference returnType getCoreFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference param MemberReference type getCoreHelper	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object container ReturnStatement Cast ReferenceType Activity MemberReference container	0
MethodDeclaration Modifier public found FormalParameter ReferenceType Object element FormalParameter ReferenceType String value IfStatement MethodInvocation Model MethodInvocation MemberReference element isAOperation getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element MethodInvocation Model MethodInvocation getSequential getConcurrencyKind setConcurrency getCoreHelper	0
MethodDeclaration Modifier public Annotation Override setEnclosingFig FormalParameter ReferenceType Fig encloser IfStatement BinaryOperation || BinaryOperation == MemberReference encloser Literal null BinaryOperation && BinaryOperation != MemberReference encloser Literal null MethodInvocation Model MethodInvocation MethodInvocation encloser getOwner isANode getFacade BlockStatement StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig IfStatement BinaryOperation != MethodInvocation getLayer Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator contents MethodInvocation MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType FigEdgeModelElement VariableDeclarator bringToFrontList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType FigEdgeModelElement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference contents BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType FigEdgeModelElement BlockStatement StatementExpression MethodInvocation bringToFrontList Cast ReferenceType FigEdgeModelElement MemberReference o add ForStatement EnhancedForControl VariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator figEdge MemberReference bringToFrontList BlockStatement StatementExpression MethodInvocation figEdge MethodInvocation MemberReference figEdge bringToFront getLayer	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration ReferenceType getRepository ReturnStatement MemberReference repository	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent e LocalVariableDeclaration Modifier final ReferenceType JList VariableDeclarator list Cast ReferenceType JList MethodInvocation e getSource IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation > MethodInvocation list MemberReference length getSelectedValues Literal 0 BlockStatement StatementExpression Assignment MemberReference MemberReference list = ForStatement EnhancedForControl VariableDeclaration ReferenceType Component VariableDeclarator c MethodInvocation getComponents BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference c ReferenceType RowSelector BinaryOperation != Cast ReferenceType RowSelector MemberReference c MemberReference list BlockStatement StatementExpression Cast ReferenceType RowSelector MemberReference c StatementExpression Assignment MemberReference Literal null =	1
MethodDeclaration Modifier public ReferenceType UmlPackage getUmlPackage SynchronizedStatement MemberReference extents IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation LOG Literal is null - no current extent" debug ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter BasicType int index ReturnStatement Cast ReferenceType Object MethodInvocation elements MemberReference index get	0
MethodDeclaration Modifier private ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration BasicType int VariableDeclarator index MethodInvocation getSelectedIndices BlockStatement StatementExpression MethodInvocation result MethodInvocation MethodInvocation MemberReference index getElementAt getModel add ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference machine	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getNode getMetaTypes	0
MethodDeclaration Modifier protected Annotation Override BasicType boolean determineFigNodes ReturnStatement Literal true	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType JPopupMenu popup FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Action VariableDeclarator stereoActions MethodInvocation StereotypeUtility MethodInvocation getTarget getApplyStereotypeActions IfStatement BinaryOperation != MemberReference stereoActions Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference stereoActions length MemberReference ++ i BlockStatement StatementExpression MethodInvocation popup MethodInvocation MemberReference ArraySelector MemberReference i stereoActions getCheckItem add ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType Component comp StatementExpression MethodInvocation MemberReference comp remove StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint	0
MethodDeclaration Modifier protected FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation MethodInvocation ! Boolean MemberReference	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier private copyArgo FormalParameter ReferenceType File file FormalParameter ReferenceType String encoding FormalParameter ReferenceType PrintWriter writer IOException MalformedURLException OpenException UnsupportedEncodingException LocalVariableDeclaration BasicType int VariableDeclarator pgmlCount MethodInvocation MemberReference file LocalVariableDeclaration BasicType boolean VariableDeclarator containsToDo MethodInvocation MemberReference file LocalVariableDeclaration BasicType boolean VariableDeclarator containsProfile MethodInvocation MemberReference file containsProfile LocalVariableDeclaration ReferenceType ZipInputStream VariableDeclarator zis MethodInvocation MethodInvocation MemberReference file toURL MemberReference FileConstants openZipStreamAt IfStatement BinaryOperation == MemberReference zis Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OpenException Literal "There is no file in the LocalVariableDeclaration ReferenceType String VariableDeclarator line LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference zis MemberReference encoding LocalVariableDeclaration ReferenceType String VariableDeclarator rootLine DoStatement MethodInvocation ! rootLine Literal startsWith BlockStatement StatementExpression Assignment MemberReference rootLine MethodInvocation reader readLine = IfStatement BinaryOperation == MemberReference rootLine Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OpenException Literal "Can't find an <argo> tag in the argo file" LocalVariableDeclaration ReferenceType String VariableDeclarator version MethodInvocation MemberReference rootLine getVersion StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + Literal "<uml version=\"" MemberReference version Literal "\">" println StatementExpression MethodInvocation writer MemberReference rootLine println StatementExpression MethodInvocation LOG Literal argo info LocalVariableDeclaration BasicType int VariableDeclarator memberCount Literal 0 WhileStatement BinaryOperation != Assignment MemberReference line MethodInvocation reader readLine = Literal null BlockStatement IfStatement MethodInvocation line MethodInvocation Literal "<member" startsWith trim BlockStatement StatementExpression MemberReference ++ memberCount IfStatement BinaryOperation && MethodInvocation line MethodInvocation Literal "</argo>" equals trim BinaryOperation == MemberReference memberCount Literal 0 BlockStatement StatementExpression MethodInvocation LOG Literal "Inserting member info" info StatementExpression MethodInvocation writer Literal "<member type='xmi' />" println ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference pgmlCount MemberReference ++ i BlockStatement StatementExpression MethodInvocation writer Literal "<member type='pgml' />" println IfStatement MemberReference containsToDo BlockStatement StatementExpression MethodInvocation writer Literal "<member />" println IfStatement MemberReference containsProfile BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator type MemberReference ProfileConfiguration StatementExpression MethodInvocation writer BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "<member MemberReference type Literal "' MemberReference type Literal "' />" println StatementExpression MethodInvocation writer MemberReference line println IfStatement MethodInvocation LOG isInfoEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal count = " MemberReference memberCount info StatementExpression MethodInvocation zis close StatementExpression MethodInvocation reader close	1
MethodDeclaration Modifier protected createContainedModelElement FormalParameter ReferenceType FigGroup fg FormalParameter ReferenceType InputEvent ie IfStatement BinaryOperation instanceof MemberReference fg ReferenceType FigCompartment BlockStatement ReturnStatement StatementExpression Cast ReferenceType FigCompartment MemberReference fg StatementExpression Cast ReferenceType FigCompartment MemberReference fg LocalVariableDeclaration ReferenceType List VariableDeclarator figList MethodInvocation fg getFigs IfStatement BinaryOperation > MethodInvocation figList size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Cast ReferenceType Fig MethodInvocation figList BinaryOperation - MethodInvocation figList size Literal 1 get IfStatement BinaryOperation && BinaryOperation != MemberReference fig Literal null BinaryOperation instanceof MemberReference fig ReferenceType CompartmentFigText BlockStatement LocalVariableDeclaration ReferenceType CompartmentFigText VariableDeclarator Cast ReferenceType CompartmentFigText MemberReference fig StatementExpression MethodInvocation MemberReference ie startTextEditor StatementExpression MethodInvocation ie consume	1
MethodDeclaration Modifier public BasicType boolean isAVisibilityKind FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier protected BasicType boolean FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation p MemberReference name ReturnStatement BinaryOperation != MemberReference type Literal null	0
MethodDeclaration Modifier public ReferenceType Project ReturnStatement MethodInvocation Literal true	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Message VariableDeclarator m Cast ReferenceType Message MemberReference handle ReturnStatement BinaryOperation == MethodInvocation m MemberReference MessageSort	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object profile IfStatement BinaryOperation instanceof MemberReference profile ReferenceType Profile BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType Model MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Profile BlockStatement StatementExpression Cast ReferenceType Profile MemberReference handle LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType VariableDeclarator iter Cast ReferenceType Profile MemberReference profile WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation iter next IfStatement BinaryOperation instanceof MemberReference p ReferenceType Profile BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference p	0
MethodDeclaration Modifier public mouseMoved FormalParameter ReferenceType MouseEvent me StatementExpression MethodInvocation MemberReference me	0
MethodDeclaration Modifier public static ReferenceType List getEdges FormalParameter ReferenceType Diagram diagram LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation diagram getLayer LocalVariableDeclaration ReferenceType Collection VariableDeclarator edges MethodInvocation lay getContentsEdgesOnly LocalVariableDeclaration ReferenceType List VariableDeclarator returnEdges ClassCreator ReferenceType ArrayList MethodInvocation edges size StatementExpression MethodInvocation MemberReference diagram MemberReference edges MemberReference returnEdges getEdges ReturnStatement MemberReference returnEdges	1
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Object target IfStatement MethodInvocation MethodInvocation MemberReference target shouldBeEnabled BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation topLevelTabbedPane MethodInvocation StatementExpression MethodInvocation topLevelTabbedPane MemberReference setSelectedIndex StatementExpression Assignment MemberReference lastNonNullTab MemberReference = ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Collection generateFileList FormalParameter ReferenceType Collection elements FormalParameter BasicType boolean deps LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation startFileGeneration ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation elements iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MethodInvocation it next StatementExpression MethodInvocation ret BinaryOperation + MethodInvocation MethodInvocation MemberReference elem getName getFacade Literal ".cpp" add StatementExpression MethodInvocation ret BinaryOperation + MethodInvocation MethodInvocation MemberReference elem getName getFacade Literal ".h" add StatementExpression MethodInvocation endFileGeneration ReturnStatement Literal null	1
MethodDeclaration Modifier public found FormalParameter ReferenceType Object element FormalParameter ReferenceType String value IfStatement MethodInvocation Model MethodInvocation MemberReference element isAStructuralFeature getFacade BlockStatement IfStatement BinaryOperation == MemberReference value Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element Literal true setReadOnly getCoreHelper IfStatement Literal MethodInvocation MemberReference value equalsIgnoreCase "false" BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element Literal false setReadOnly getCoreHelper IfStatement Literal MethodInvocation MemberReference value equalsIgnoreCase "true" BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element Literal true setReadOnly getCoreHelper	1
MethodDeclaration Modifier public BasicType boolean contains FormalParameter ReferenceType Object elem ReturnStatement MethodInvocation MemberReference elem contains	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal - Literal 4501453380688804819L Literal 16128L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType Object getInstantiation FormalParameter ReferenceType Object ReturnStatement MethodInvocation impl MemberReference getInstantiation	0
MethodDeclaration Modifier public static registerRule FormalParameter ReferenceType rule StatementExpression MethodInvocation rules MemberReference rule add	1
MethodDeclaration Modifier private FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType ToDoList VariableDeclarator list MethodInvocation Designer MethodInvocation getToDoList TryStatement StatementExpression MethodInvocation list MemberReference target MethodInvocation getText explicitlyResolve StatementExpression MethodInvocation Designer MemberReference Designer MODEL_TODOITEM_DISMISSED Literal null Literal null firePropertyChange CatchClause CatchClauseParameter UnresolvableException ure StatementExpression MethodInvocation LOG Literal "Resolve failed " MemberReference ure error StatementExpression MethodInvocation JOptionPane This MethodInvocation ure getMessage MethodInvocation Translator Literal localize MemberReference JOptionPane ERROR_MESSAGE showMessageDialog	1
MethodDeclaration Modifier public ReferenceType FigEdge getFigEdgeFor FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object edge FormalParameter ReferenceType Map styleAttributes IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "making figedge for " MemberReference edge debug IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A model edge must be supplied" AssertStatement BinaryOperation instanceof MemberReference lay ReferenceType LayerPerspective LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diag Cast ReferenceType ArgoDiagram Cast ReferenceType LayerPerspective MemberReference lay LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation diag getDiagramSettings LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator newEdge Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociation getFacade BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator associationEnds MethodInvocation Model MethodInvocation MemberReference edge getConnections MethodInvocation toArray getFacade StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigAssociation ClassCreator ReferenceType DiagramEdgeSettings MemberReference edge MemberReference ArraySelector Literal 0 associationEnds MemberReference ArraySelector Literal 1 associationEnds MemberReference settings = LocalVariableDeclaration Modifier final ReferenceType FigNode VariableDeclarator sourceFig MethodInvocation MemberReference diag MemberReference ArraySelector Literal 0 associationEnds getFigNodeForAssociationEnd LocalVariableDeclaration Modifier final ReferenceType FigNode VariableDeclarator destFig MethodInvocation MemberReference diag MemberReference ArraySelector Literal 1 associationEnds getFigNodeForAssociationEnd StatementExpression MethodInvocation newEdge MemberReference sourceFig setSourceFigNode StatementExpression MethodInvocation newEdge MemberReference sourceFig setSourcePortFig StatementExpression MethodInvocation newEdge MemberReference destFig setDestFigNode StatementExpression MethodInvocation newEdge MemberReference destFig setDestPortFig IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAGeneralization getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigGeneralization MemberReference edge MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference edge getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigExtend MemberReference edge MemberReference settings = LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation Model MethodInvocation MemberReference edge getBase getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator extension MethodInvocation Model MethodInvocation MemberReference edge getExtension getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator baseFN Cast ReferenceType FigNode MethodInvocation lay MemberReference base presentationFor LocalVariableDeclaration ReferenceType FigNode VariableDeclarator extensionFN Cast ReferenceType FigNode MethodInvocation lay MemberReference extension presentationFor StatementExpression MethodInvocation newEdge MemberReference extensionFN setSourcePortFig StatementExpression MethodInvocation newEdge MemberReference extensionFN setSourceFigNode StatementExpression MethodInvocation newEdge MemberReference baseFN setDestPortFig StatementExpression MethodInvocation newEdge MemberReference baseFN setDestFigNode IfStatement MethodInvocation Model MethodInvocation MemberReference edge getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigInclude MemberReference edge MemberReference settings = LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation Model MethodInvocation MemberReference edge getBase getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference edge getAddition getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator baseFN Cast ReferenceType FigNode MethodInvocation lay MemberReference base presentationFor LocalVariableDeclaration ReferenceType FigNode VariableDeclarator additionFN Cast ReferenceType FigNode MethodInvocation lay MemberReference presentationFor StatementExpression MethodInvocation newEdge MemberReference baseFN setSourcePortFig StatementExpression MethodInvocation newEdge MemberReference baseFN setSourceFigNode StatementExpression MethodInvocation newEdge MemberReference additionFN setDestPortFig StatementExpression MethodInvocation newEdge MemberReference additionFN setDestFigNode IfStatement MethodInvocation Model MethodInvocation MemberReference edge isADependency getFacade BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigDependency MemberReference edge MemberReference settings = LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator client MethodInvocation Model getFacade LocalVariableDeclaration ReferenceType FigNode VariableDeclarator supplierFN Cast ReferenceType FigNode MethodInvocation lay MemberReference presentationFor LocalVariableDeclaration ReferenceType FigNode VariableDeclarator clientFN Cast ReferenceType FigNode MethodInvocation lay MemberReference client presentationFor StatementExpression MethodInvocation newEdge MemberReference clientFN setSourcePortFig StatementExpression MethodInvocation newEdge MemberReference clientFN setSourceFigNode StatementExpression MethodInvocation newEdge MemberReference supplierFN setDestPortFig StatementExpression MethodInvocation newEdge MemberReference supplierFN setDestFigNode IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference newEdge ClassCreator ReferenceType FigEdgeNote MemberReference edge MemberReference settings = StatementExpression MethodInvocation MemberReference lay MemberReference newEdge MemberReference edge addEdge ReturnStatement MemberReference newEdge	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource IfStatement BinaryOperation instanceof MemberReference source ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator box Cast ReferenceType MemberReference source LocalVariableDeclaration ReferenceType Object VariableDeclarator diagram MethodInvocation box getTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation box getSelectedItem IfStatement BinaryOperation instanceof MemberReference diagram ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator d Cast ReferenceType MemberReference diagram IfStatement MethodInvocation d MemberReference BlockStatement StatementExpression MethodInvocation d MemberReference	0
MethodDeclaration Modifier public paintIcon FormalParameter ReferenceType Component c FormalParameter ReferenceType Graphics g FormalParameter BasicType int x FormalParameter BasicType int y LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator modelElement MethodInvocation fig getOwner IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation getAttribute getMetaTypes MemberReference modelElement isContainmentValid getUmlFactory BlockStatement LocalVariableDeclaration ReferenceType FigCompartmentBox VariableDeclarator fcb Cast ReferenceType FigCompartmentBox MemberReference fig LocalVariableDeclaration ReferenceType FigCompartment VariableDeclarator fc MethodInvocation fcb MethodInvocation Model MethodInvocation getAttribute getMetaTypes IfStatement BinaryOperation || BinaryOperation == MemberReference fc Literal null MethodInvocation ! fc isVisible BlockStatement StatementExpression Assignment MemberReference fig Literal null = ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator fr MethodInvocation fc getBounds LocalVariableDeclaration BasicType int VariableDeclarator left BinaryOperation + MemberReference fr x Literal 6 LocalVariableDeclaration BasicType int VariableDeclarator height BinaryOperation - BinaryOperation + MemberReference fr y MemberReference fr height Literal 5 LocalVariableDeclaration BasicType int VariableDeclarator right BinaryOperation - BinaryOperation + MemberReference fr x MemberReference fr width Literal 6 StatementExpression MethodInvocation g MemberReference Color red setColor LocalVariableDeclaration BasicType int VariableDeclarator i MemberReference left WhileStatement Literal true BlockStatement StatementExpression MethodInvocation g MemberReference i MemberReference height BinaryOperation + MemberReference i MemberReference WAVE_LENGTH BinaryOperation + MemberReference height MemberReference WAVE_HEIGHT drawLine StatementExpression Assignment MemberReference i MemberReference WAVE_LENGTH += IfStatement BinaryOperation >= MemberReference i MemberReference right BlockStatement BreakStatement StatementExpression MethodInvocation g MemberReference i BinaryOperation + MemberReference height MemberReference WAVE_HEIGHT BinaryOperation + MemberReference i MemberReference WAVE_LENGTH MemberReference height drawLine StatementExpression Assignment MemberReference i MemberReference WAVE_LENGTH += IfStatement BinaryOperation >= MemberReference i MemberReference right BlockStatement BreakStatement StatementExpression MethodInvocation g MemberReference i MemberReference height BinaryOperation + MemberReference i MemberReference WAVE_LENGTH BinaryOperation + MemberReference height BinaryOperation / MemberReference WAVE_HEIGHT Literal 2 drawLine StatementExpression Assignment MemberReference i MemberReference WAVE_LENGTH += IfStatement BinaryOperation >= MemberReference i MemberReference right BlockStatement BreakStatement StatementExpression MethodInvocation g MemberReference i BinaryOperation + MemberReference height BinaryOperation / MemberReference WAVE_HEIGHT Literal 2 BinaryOperation + MemberReference i MemberReference WAVE_LENGTH MemberReference height drawLine StatementExpression Assignment MemberReference i MemberReference WAVE_LENGTH += IfStatement BinaryOperation >= MemberReference i MemberReference right BlockStatement BreakStatement StatementExpression Assignment MemberReference fig Literal null =	1
MethodDeclaration Modifier public BasicType boolean isANaryAssociation FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlAssociation BlockStatement ReturnStatement BinaryOperation > MethodInvocation MethodInvocation size MemberReference handle getConnections Literal 2 ReturnStatement Literal false	1
MethodDeclaration Modifier private FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType ExplorerTreeNode node LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ExplorerTreeNode VariableDeclarator nodes MethodInvocation modelElementMap MemberReference modelElement get IfStatement BinaryOperation != MemberReference nodes Literal null BlockStatement StatementExpression MethodInvocation nodes MemberReference node remove IfStatement MethodInvocation nodes isEmpty BlockStatement StatementExpression MethodInvocation modelElementMap MemberReference modelElement remove	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer BinaryOperation + BinaryOperation + Literal "ResolvedCritic: " MemberReference critic Literal " : " ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation offenders size MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal ", " append StatementExpression MethodInvocation sb MethodInvocation offenders MemberReference i get append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public final dtor_head RecognitionException TokenStreamException IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m beginDtorHead StatementExpression MethodInvocation dtor_decl_spec StatementExpression MethodInvocation dtor_declarator IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType InputStream stream TryStatement LocalVariableDeclaration BasicType int VariableDeclarator length MethodInvocation stream available LocalVariableDeclaration BasicType byte VariableDeclarator bytes ArrayCreator BasicType byte MemberReference length StatementExpression MethodInvocation stream MemberReference bytes Literal 0 MemberReference length read StatementExpression Assignment MemberReference ClassCreator ReferenceType String MemberReference bytes = CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG Literal "Exception reading XMI file MemberReference e error	0
MethodDeclaration Modifier public ReferenceType FigNode getFigNodeFor FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object node FormalParameter ReferenceType Map styleAttributes LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNode Literal null IfStatement BinaryOperation == MemberReference node Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A node must be supplied" LocalVariableDeclaration ReferenceType Diagram VariableDeclarator diag Cast ReferenceType LayerPerspective MemberReference lay IfStatement BinaryOperation && BinaryOperation instanceof MemberReference diag ReferenceType UMLDiagram Cast ReferenceType UMLDiagram MemberReference diag BlockStatement StatementExpression Assignment MemberReference figNode Cast ReferenceType FigNodeModelElement Cast ReferenceType UMLDiagram MemberReference diag = BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "TODO: ClassDiagramRenderer getFigNodeFor " MemberReference node error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Node is not a recognised Received " MethodInvocation node MethodInvocation getName getClass StatementExpression MethodInvocation lay MemberReference figNode add StatementExpression MethodInvocation figNode MethodInvocation GraphChangeAdapter MethodInvocation MemberReference gm MemberReference node createElement getInstance ReturnStatement MemberReference figNode	1
MethodDeclaration Modifier protected FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameSize MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator bodySize MethodInvocation MethodInvocation getMinimumSize getBodyText StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MethodInvocation getLeftMargin BinaryOperation + MemberReference y MethodInvocation getTopMargin BinaryOperation - BinaryOperation - MemberReference w MethodInvocation getLeftMargin MethodInvocation getRightMargin MemberReference nameSize height setBounds getNameFig IfStatement BinaryOperation > MethodInvocation MethodInvocation getText MethodInvocation length getBodyText Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MethodInvocation getLeftMargin BinaryOperation + BinaryOperation + MemberReference y MethodInvocation getTopMargin MemberReference nameSize height MemberReference bodySize width MemberReference bodySize height setBounds getBodyText BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MethodInvocation getLeftMargin BinaryOperation + BinaryOperation + MemberReference y MethodInvocation getTopMargin MemberReference nameSize height MemberReference bodySize width Literal 1 setBounds getBodyText StatementExpression MethodInvocation regionCompartment BinaryOperation + MemberReference x MethodInvocation getLeftMargin BinaryOperation + MethodInvocation MethodInvocation getY getBodyText MethodInvocation MethodInvocation getHeight getBodyText BinaryOperation - BinaryOperation - MemberReference w MethodInvocation getLeftMargin MethodInvocation getRightMargin BinaryOperation - BinaryOperation - BinaryOperation - BinaryOperation - MemberReference h MethodInvocation getTopMargin MethodInvocation getBottomMargin MethodInvocation MethodInvocation getHeight getNameFig MethodInvocation MethodInvocation getHeight getBodyText setBounds StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object key FormalParameter ReferenceType Object value StatementExpression MethodInvocation document MemberReference key MemberReference value	0
MethodDeclaration Modifier public ReferenceType List getOutEdges FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType List VariableDeclarator ports ClassCreator ReferenceType LinkedList IfStatement MethodInvocation Model MethodInvocation MemberReference element isAClassifierRole getFacade BlockStatement StatementExpression MethodInvocation ports MethodInvocation Model MethodInvocation MemberReference element getFacade addAll ReturnStatement MemberReference ports	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier protected Annotation Override BasicType int getFigFontStyle LocalVariableDeclaration BasicType boolean VariableDeclarator MethodInvocation MethodInvocation getSettings LocalVariableDeclaration BasicType int VariableDeclarator TernaryExpression MemberReference MemberReference Font BOLD MemberReference Font PLAIN ReturnStatement BinaryOperation | SuperMethodInvocation getFigFontStyle MemberReference	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation Boolean MethodInvocation diaDefault toString	0
MethodDeclaration Modifier public BasicType int count FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType Integer VariableDeclarator c MethodInvocation map MemberReference element get ReturnStatement TernaryExpression BinaryOperation == MemberReference c Literal null Literal 0 MemberReference c	0
MethodDeclaration Modifier private ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation Model MethodInvocation getComposite StatementExpression MethodInvocation ToolBarUtility MemberReference actions Literal ReturnStatement MemberReference actions	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType TemplateParameterSubstitution	1
MethodDeclaration Modifier public Annotation Override ReferenceType Component getTreeCellRendererComponent FormalParameter ReferenceType JTree tree FormalParameter ReferenceType Object value FormalParameter BasicType boolean sel FormalParameter BasicType boolean expanded FormalParameter BasicType boolean leaf FormalParameter BasicType int row FormalParameter BasicType boolean hasFocusParam IfStatement BinaryOperation instanceof MemberReference value ReferenceType DefaultMutableTreeNode BlockStatement StatementExpression Assignment MemberReference value Cast ReferenceType DefaultMutableTreeNode MemberReference value = LocalVariableDeclaration ReferenceType Component VariableDeclarator r SuperMethodInvocation MemberReference tree MemberReference value MemberReference sel MemberReference expanded MemberReference leaf MemberReference row MemberReference hasFocusParam getTreeCellRendererComponent IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null BinaryOperation instanceof MemberReference r ReferenceType JLabel BlockStatement LocalVariableDeclaration ReferenceType JLabel VariableDeclarator lab Cast ReferenceType JLabel MemberReference r LocalVariableDeclaration ReferenceType VariableDeclarator icon MethodInvocation MethodInvocation MemberReference value getInstance IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement StatementExpression MethodInvocation lab MemberReference icon setIcon LocalVariableDeclaration ReferenceType String VariableDeclarator type Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference value isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference type MethodInvocation Model MethodInvocation MemberReference value getUMLClassName getFacade = IfStatement BinaryOperation instanceof MemberReference value ReferenceType UMLDiagram BlockStatement StatementExpression Assignment MemberReference type Cast ReferenceType UMLDiagram MemberReference value = IfStatement BinaryOperation != MemberReference type Literal null BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf Literal "<html>" append StatementExpression MethodInvocation buf MemberReference name append StatementExpression MethodInvocation buf Literal ' ' append StatementExpression MethodInvocation buf MethodInvocation lab getText append StatementExpression MethodInvocation buf Literal "<br>" append StatementExpression MethodInvocation buf MemberReference typeName append StatementExpression MethodInvocation buf Literal ' ' append StatementExpression MethodInvocation buf MemberReference type append StatementExpression MethodInvocation lab MethodInvocation buf toString setToolTipText BlockStatement StatementExpression MethodInvocation lab MethodInvocation lab getText setToolTipText ReturnStatement MemberReference r	1
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter BasicType short modifiers FormalParameter ReferenceType String returnType FormalParameter ReferenceType String name FormalParameter ReferenceType List TypeArgument ReferenceType ParameterDeclaration parameters FormalParameter ReferenceType String javadoc ReturnStatement MethodInvocation MemberReference modifiers MemberReference EMPTY_STRING_LIST MemberReference returnType MemberReference name MemberReference parameters MemberReference javadoc Literal false	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal Property	0
MethodDeclaration Modifier public setCompositeStateHeight FormalParameter BasicType int h IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration BasicType int VariableDeclarator x MemberReference oldBounds x LocalVariableDeclaration BasicType int VariableDeclarator y MemberReference oldBounds y LocalVariableDeclaration BasicType int VariableDeclarator w MemberReference oldBounds width StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MemberReference BinaryOperation + BinaryOperation + MemberReference y MemberReference nameDim height Literal 4 BinaryOperation - MemberReference w BinaryOperation * Literal 2 MemberReference BinaryOperation - BinaryOperation - MemberReference h MemberReference nameDim height Literal 6 setBounds StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation cover MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MemberReference oldBounds MethodInvocation getBounds	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier protected IfStatement MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference target MemberReference propertyName removeModelEventListener getPump StatementExpression MethodInvocation LOG Literal for debug	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation cover MemberReference w setLineWidth	0
MethodDeclaration Modifier public ReferenceType JLabel FormalParameter ReferenceType String label FormalParameter ReferenceType Component component FormalParameter ReferenceType Component beforeComponent LocalVariableDeclaration BasicType int VariableDeclarator nComponent MethodInvocation getComponentCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference nComponent MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation MemberReference i getComponent MemberReference beforeComponent BlockStatement LocalVariableDeclaration ReferenceType JLabel VariableDeclarator jlabel MethodInvocation MemberReference label MemberReference component createLabelFor StatementExpression MethodInvocation component MemberReference setFont StatementExpression MethodInvocation MemberReference jlabel BinaryOperation - MemberReference i Literal 1 add StatementExpression MethodInvocation MemberReference component MemberReference ++ i add ReturnStatement MemberReference jlabel ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Component not found"	1
MethodDeclaration Modifier private ReferenceType String getLabel FormalParameter ReferenceType Object metaType ReturnStatement BinaryOperation + Literal "button.new-" MethodInvocation Model MethodInvocation MemberReference metaType getName MethodInvocation toLowerCase getMetaTypes	1
MethodDeclaration Modifier public handleSettingsTabCancel StatementExpression MethodInvocation	0
MethodDeclaration Modifier protected Annotation Override LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation - MemberReference BinaryOperation + MethodInvocation getLeftMargin MethodInvocation getRightMargin LocalVariableDeclaration BasicType int VariableDeclarator x BinaryOperation + MemberReference _x MethodInvocation getLeftMargin LocalVariableDeclaration BasicType int VariableDeclarator y BinaryOperation + MemberReference _y MethodInvocation getTopMargin ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation getFigs BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Cast ReferenceType Fig MemberReference f StatementExpression MethodInvocation fig MemberReference x MemberReference y MemberReference w MethodInvocation fig MemberReference height getMinimumSize setBounds StatementExpression Assignment MemberReference y MethodInvocation fig getHeight +=	0
MethodDeclaration Modifier public setRoot FormalParameter ReferenceType ToDoList r StatementExpression Assignment MemberReference root MemberReference r = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object getDefaultValue ReturnStatement MemberReference defaultValue	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String s IfStatement MethodInvocation s Literal endsWith BlockStatement ReturnStatement MethodInvocation s Literal 0 BinaryOperation - MethodInvocation s length Literal 2 substring IfStatement MethodInvocation s Literal "*/" endsWith BlockStatement ReturnStatement MethodInvocation s Literal 0 BinaryOperation - MethodInvocation s length Literal 2 substring IfStatement MethodInvocation s Literal "/" endsWith BlockStatement ReturnStatement MethodInvocation s Literal 0 BinaryOperation - MethodInvocation s length Literal 1 substring BlockStatement ReturnStatement MemberReference s	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ReturnStatement MethodInvocation impl MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Message getPredecessors FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement MethodInvocation Collections ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Message Cast ReferenceType Message MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	1
MethodDeclaration Modifier protected setAllElements FormalParameter ReferenceType Collection col IfStatement MethodInvocation ! isEmpty BlockStatement StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MemberReference col addAll	0
MethodDeclaration Modifier public ReferenceType String getText ReturnStatement MethodInvocation theTextField getText	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType UMLComboBox VariableDeclarator source Cast ReferenceType UMLComboBox MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator assoc MethodInvocation source getSelectedItem LocalVariableDeclaration ReferenceType Object VariableDeclarator ar MethodInvocation source getTarget IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference ar getBase getFacade MemberReference assoc BlockStatement ReturnStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference assoc isAAssociation getFacade MethodInvocation Model MethodInvocation MemberReference ar isAAssociationRole getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference ar MemberReference assoc setBase getCollaborationsHelper	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade setAllElements	0
MethodDeclaration Modifier protected ReferenceType String getReleaseVersion FormalParameter ReferenceType InputStream inputStream OpenException LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader Literal null TryStatement StatementExpression Assignment MemberReference reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader MemberReference inputStream MethodInvocation Argo getEncoding = LocalVariableDeclaration ReferenceType String VariableDeclarator versionLine MethodInvocation reader readLine WhileStatement MethodInvocation ! versionLine MethodInvocation Literal startsWith trim BlockStatement StatementExpression Assignment MemberReference versionLine MethodInvocation reader readLine = IfStatement BinaryOperation == MemberReference versionLine Literal null BlockStatement ThrowStatement ClassCreator ReferenceType OpenException Literal "Failed to find the release tag" StatementExpression Assignment MemberReference versionLine MethodInvocation versionLine trim = LocalVariableDeclaration BasicType int VariableDeclarator end MethodInvocation versionLine Literal lastIndexOf ReturnStatement MethodInvocation versionLine MethodInvocation Literal 9 MemberReference end substring trim CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e CatchClause CatchClauseParameter NumberFormatException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e TryStatement IfStatement BinaryOperation != MemberReference inputStream Literal null BlockStatement StatementExpression MethodInvocation inputStream close IfStatement BinaryOperation != MemberReference reader Literal null BlockStatement StatementExpression MethodInvocation reader close CatchClause CatchClauseParameter IOException e	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent event StatementExpression SuperMethodInvocation MemberReference event actionPerformed IfStatement MethodInvocation ImporterManager MethodInvocation getInstance BlockStatement StatementExpression ClassCreator ReferenceType Import MethodInvocation ArgoFrame getFrame BlockStatement StatementExpression MethodInvocation LOG Literal sources dialog not no info LocalVariableDeclaration ReferenceType ExceptionDialog VariableDeclarator ed ClassCreator ReferenceType ExceptionDialog MethodInvocation ArgoFrame getFrame MethodInvocation Translator Literal localize MethodInvocation Translator Literal localize MethodInvocation Translator Literal localize StatementExpression MethodInvocation ed Literal true StatementExpression MethodInvocation ed Literal true setVisible	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object source FormalParameter ReferenceType Object ns IfStatement BinaryOperation instanceof MemberReference source ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType VariableDeclarator i MethodInvocation StatementExpression Cast ReferenceType Namespace MemberReference ns StatementExpression MethodInvocation MemberReference source MemberReference i ReturnStatement MemberReference i	1
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dm computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType AbstractArgoJPanel ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation map toString	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType UMLComboBox VariableDeclarator box Cast ReferenceType UMLComboBox MethodInvocation e getSource StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation box getSelectedItem getStateMachinesHelper	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement Cast ReferenceType Boolean MemberReference value	0
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object t StatementExpression Assignment MemberReference t TernaryExpression BinaryOperation instanceof MemberReference t ReferenceType Fig Cast ReferenceType Fig MemberReference t MemberReference t = ReturnStatement MethodInvocation Model MethodInvocation MemberReference t isAUMLElement getFacade	1
MethodDeclaration toggleValueOfTarget FormalParameter ReferenceType Object t StatementExpression MethodInvocation Model MethodInvocation MemberReference t MethodInvocation ! Model MethodInvocation MemberReference t isRoot getFacade setRoot getCoreHelper	0
MethodDeclaration Modifier public targetChanged IfStatement MemberReference BlockStatement StatementExpression MethodInvocation model targetChanged StatementExpression MethodInvocation update	0
MethodDeclaration Modifier public final template_parameter RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType Token VariableDeclarator id Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_typename BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_class MethodInvocation MethodInvocation Literal 2 LA member BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_class BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_class match BreakStatement SwitchStatementCase LITERAL_typename BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_typename match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID BlockStatement StatementExpression Assignment MemberReference id MethodInvocation Literal 1 LT = StatementExpression MethodInvocation MemberReference ID match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ASSIGNEQUAL BlockStatement StatementExpression MethodInvocation MemberReference ASSIGNEQUAL match StatementExpression MethodInvocation assigned_type_name BreakStatement SwitchStatementCase GREATERTHAN COMMA BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase GREATERTHAN COMMA BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement IfStatement MethodInvocation ! symbols MethodInvocation id getText containsKey StatementExpression MethodInvocation symbols MethodInvocation id getText MemberReference CPPvariables OT_TYPE_DEF put IfStatement BinaryOperation && MethodInvocation MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_10 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation parameter_declaration BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Font ReturnStatement MethodInvocation diaDefault	0
MethodDeclaration Modifier public static ReferenceType Object getFirstItemOrNull FormalParameter ReferenceType Collection c IfStatement BinaryOperation == MethodInvocation c size Literal 0 BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation MemberReference c	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String s FormalParameter BasicType boolean defineNew IfStatement BinaryOperation != MemberReference s Literal null BlockStatement StatementExpression Assignment MemberReference s MethodInvocation s trim = IfStatement BinaryOperation || BinaryOperation == MemberReference s Literal null BinaryOperation == MethodInvocation s length Literal 0 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator cls Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MemberReference models BlockStatement StatementExpression Assignment MemberReference cls MethodInvocation MemberReference s MemberReference model = IfStatement BinaryOperation != MemberReference cls Literal null BlockStatement ReturnStatement MemberReference cls StatementExpression Assignment MemberReference cls MethodInvocation MemberReference s = IfStatement BinaryOperation && BinaryOperation == MemberReference cls Literal null MemberReference defineNew BlockStatement StatementExpression MethodInvocation LOG Literal "new Type defined!" debug StatementExpression Assignment MemberReference cls MethodInvocation Model MethodInvocation MethodInvocation getCurrentNamespace buildClass getCoreFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference cls MemberReference s setName getCoreHelper ReturnStatement MemberReference cls	1
MethodDeclaration Modifier private IfStatement BinaryOperation >= MemberReference currentTarget BinaryOperation - MethodInvocation history size Literal 1 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + BinaryOperation + Literal is not allowed " Literal the is at " Literal "the upper boundary " Literal "of the history" StatementExpression MethodInvocation Cast ReferenceType WeakReference MethodInvocation history MemberReference ++ currentTarget get setTarget	0
MethodDeclaration Modifier private ReferenceType String generateSection FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String sIndent FormalParameter ReferenceType String sSuffix LocalVariableDeclaration ReferenceType String VariableDeclarator uuid MethodInvocation MemberReference modelElement IfStatement BinaryOperation && BinaryOperation != MemberReference sSuffix Literal null BinaryOperation != MethodInvocation sSuffix trim Literal "" BlockStatement ReturnStatement MethodInvocation Section BinaryOperation + BinaryOperation + MemberReference uuid Literal "-" MethodInvocation sSuffix trim MemberReference sIndent generate ReturnStatement MethodInvocation Section MemberReference uuid MemberReference sIndent generate	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object element StatementExpression MethodInvocation impl MemberReference handle MemberReference element	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getMetaTypes getAllModelElementsOfKind getModelManagementHelper addAll ReturnStatement MemberReference list	1
MethodDeclaration Modifier protected ReferenceType String getProperty IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isADependency getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getSupplierDependencies MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter Modifier final ReferenceType Object element FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types	0
MethodDeclaration Modifier public ReferenceType Collection LocalVariableDeclaration ReferenceType List VariableDeclarator addedTargets ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType List VariableDeclarator oldTargets MethodInvocation Arrays MemberReference asList LocalVariableDeclaration ReferenceType List VariableDeclarator newTargets MethodInvocation Arrays MemberReference theNewTargets asList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference newTargets BlockStatement IfStatement MethodInvocation ! oldTargets MemberReference o contains BlockStatement StatementExpression MethodInvocation addedTargets MemberReference o add ReturnStatement MemberReference addedTargets	0
MethodDeclaration Modifier protected fireIntervalAdded FormalParameter ReferenceType Object source FormalParameter BasicType int index0 FormalParameter BasicType int index1 IfStatement BinaryOperation && MemberReference fireListEvents MemberReference ! buildingModel BlockStatement StatementExpression SuperMethodInvocation MemberReference source MemberReference index0 MemberReference index1 fireIntervalAdded	1
MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent e IfStatement BinaryOperation == MethodInvocation e getSource This BlockStatement StatementExpression MethodInvocation Cast ReferenceType MemberReference component	0
MethodDeclaration Modifier private addDocumentationTag FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String sJavaDocs IfStatement BinaryOperation && BinaryOperation != MemberReference sJavaDocs Literal null BinaryOperation >= MethodInvocation sJavaDocs MethodInvocation length trim Literal 5 BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbPureDocs ClassCreator ReferenceType StringBuffer Literal 80 LocalVariableDeclaration ReferenceType String VariableDeclarator sCurrentTagName Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator sCurrentTagData ArrayInitializer Literal null LocalVariableDeclaration BasicType int VariableDeclarator nStartPos Literal 3 LocalVariableDeclaration BasicType boolean VariableDeclarator fHadAsterisk Literal true WhileStatement BinaryOperation < MemberReference nStartPos MethodInvocation sJavaDocs length BlockStatement SwitchStatement MethodInvocation sJavaDocs MemberReference nStartPos charAt SwitchStatementCase Literal '*' StatementExpression Assignment MemberReference fHadAsterisk Literal true = StatementExpression MemberReference ++ nStartPos BreakStatement SwitchStatementCase Literal ' ' Literal '\t' IfStatement MemberReference ! fHadAsterisk BlockStatement StatementExpression MemberReference ++ nStartPos BreakStatement SwitchStatementCase LocalVariableDeclaration BasicType int VariableDeclarator j MemberReference nStartPos WhileStatement BinaryOperation && BinaryOperation < MemberReference j MethodInvocation sJavaDocs length BinaryOperation || BinaryOperation == MethodInvocation sJavaDocs MemberReference j charAt Literal ' ' BinaryOperation == MethodInvocation sJavaDocs MemberReference j charAt Literal '\t' BlockStatement StatementExpression MemberReference ++ j IfStatement BinaryOperation < MemberReference j MethodInvocation sJavaDocs length BlockStatement IfStatement BinaryOperation == MethodInvocation sJavaDocs MemberReference j charAt Literal '@' BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator lineEndPos Literal 0 IfStatement BinaryOperation < MethodInvocation sJavaDocs Literal '\n' MemberReference j indexOf Literal 0 BlockStatement StatementExpression Assignment MemberReference lineEndPos BinaryOperation - MethodInvocation sJavaDocs length Literal 2 = BlockStatement StatementExpression Assignment MemberReference lineEndPos BinaryOperation + MethodInvocation sJavaDocs Literal '\n' MemberReference j indexOf Literal 1 = StatementExpression MethodInvocation sbPureDocs MethodInvocation sJavaDocs MemberReference j MemberReference lineEndPos substring append IfStatement BinaryOperation != MemberReference sCurrentTagName Literal null BlockStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference sCurrentTagName MemberReference sCurrentTagData addJavadocTagContents LocalVariableDeclaration BasicType int VariableDeclarator nTemp MethodInvocation sJavaDocs Literal ' ' BinaryOperation + MemberReference j Literal 1 indexOf IfStatement BinaryOperation == MemberReference nTemp Literal - 1 BlockStatement StatementExpression Assignment MemberReference nTemp BinaryOperation - MethodInvocation sJavaDocs length Literal 1 = StatementExpression Assignment MemberReference sCurrentTagName MethodInvocation sJavaDocs BinaryOperation + MemberReference j Literal 1 MemberReference nTemp substring = LocalVariableDeclaration BasicType int VariableDeclarator nTemp1 MethodInvocation sJavaDocs Literal '\n' MemberReference ++ nTemp indexOf IfStatement BinaryOperation == MemberReference nTemp1 Literal - 1 BlockStatement StatementExpression Assignment MemberReference nTemp1 MethodInvocation sJavaDocs length = BlockStatement StatementExpression MemberReference ++ nTemp1 StatementExpression Assignment MemberReference ArraySelector Literal 0 sCurrentTagData MethodInvocation sJavaDocs MemberReference nTemp MemberReference nTemp1 substring = StatementExpression Assignment MemberReference nStartPos MemberReference nTemp1 = BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator nTemp MethodInvocation sJavaDocs Literal '\n' MemberReference nStartPos indexOf IfStatement BinaryOperation == MemberReference nTemp Literal - 1 BlockStatement StatementExpression Assignment MemberReference nTemp MethodInvocation sJavaDocs length = BlockStatement StatementExpression MemberReference ++ nTemp IfStatement BinaryOperation != MemberReference sCurrentTagName Literal null BlockStatement StatementExpression MethodInvocation sbPureDocs MethodInvocation sJavaDocs MemberReference nStartPos MemberReference nTemp substring append StatementExpression Assignment MemberReference ArraySelector Literal 0 sCurrentTagData BinaryOperation + Literal " " MethodInvocation sJavaDocs MemberReference nStartPos MemberReference nTemp substring += BlockStatement StatementExpression MethodInvocation sbPureDocs MethodInvocation sJavaDocs MemberReference nStartPos MemberReference nTemp substring append StatementExpression Assignment MemberReference nStartPos MemberReference nTemp = StatementExpression Assignment MemberReference fHadAsterisk Literal false = StatementExpression Assignment MemberReference sJavaDocs MethodInvocation sbPureDocs toString = StatementExpression Assignment MemberReference sJavaDocs MethodInvocation MemberReference sJavaDocs = IfStatement BinaryOperation != MemberReference sCurrentTagName Literal null BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 sCurrentTagData MethodInvocation MemberReference ArraySelector Literal 0 sCurrentTagData = StatementExpression MethodInvocation MemberReference modelElement MemberReference sCurrentTagName MemberReference sCurrentTagData addJavadocTagContents LocalVariableDeclaration ReferenceType String VariableDeclarator javadocs ArrayInitializer MemberReference sJavaDocs StatementExpression MethodInvocation MemberReference modelElement MemberReference Argo MemberReference javadocs buildTaggedValue StatementExpression MethodInvocation MemberReference modelElement addStereotypes	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object transition FormalParameter ReferenceType Object event IfStatement BinaryOperation instanceof MemberReference transition ReferenceType Transition BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal either null or not " Literal "an instance of IfStatement BinaryOperation && BinaryOperation != MemberReference event Literal null BinaryOperation instanceof MemberReference event ReferenceType Event BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Event not an " Literal of StatementExpression Cast ReferenceType Transition MemberReference transition	0
MethodDeclaration Modifier protected ReferenceType ArgoJMenu buildOperationMenu LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator opMenu ClassCreator ReferenceType ArgoJMenu Literal "Operation" LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType Object VariableDeclarator iter MethodInvocation MethodInvocation iterator getReceiverOperations StatementExpression MethodInvocation opMenu MethodInvocation iter hasNext setEnabled WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation iter next LocalVariableDeclaration ReferenceType NotationProvider VariableDeclarator Literal null TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MethodInvocation getNotationSettings StatementExpression Assignment MemberReference MethodInvocation NotationProviderFactory2 MethodInvocation MemberReference NotationProviderFactory2 MemberReference op MethodInvocation Notation MemberReference s getInstance = CatchClause CatchClauseParameter Exception e StatementExpression Assignment MemberReference Literal null = LocalVariableDeclaration ReferenceType String VariableDeclarator label TernaryExpression BinaryOperation != MemberReference Literal null MethodInvocation MemberReference op MethodInvocation getNotationSettings toString MethodInvocation Model MethodInvocation MemberReference op getName getFacade StatementExpression MethodInvocation opMenu ClassCreator ReferenceType ActionSetOperation MethodInvocation getAction MemberReference op MemberReference label add ReturnStatement MemberReference opMenu	1
MethodDeclaration Modifier private dealWithMultiplicity FormalParameter ReferenceType Object attribute FormalParameter ReferenceType StringBuilder multiplicity FormalParameter BasicType int multindex ParseException IfStatement BinaryOperation != MemberReference multiplicity Literal null BlockStatement TryStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference attribute MethodInvocation multiplicity toString setMultiplicity getCoreHelper CatchClause CatchClauseParameter IllegalArgumentException iae LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.attribute.bad-multiplicity" LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MemberReference iae ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg MemberReference args localize MemberReference multindex	1
MethodDeclaration Modifier protected ReferenceType Object findOrBuildTimeEvent FormalParameter ReferenceType String timeexpr FormalParameter ReferenceType Object ns LocalVariableDeclaration ReferenceType StateMachinesFactory VariableDeclarator sMFactory MethodInvocation Model getStateMachinesFactory IfStatement BinaryOperation || BinaryOperation == MemberReference timeexpr Literal null Literal "" BlockStatement ReturnStatement MethodInvocation sMFactory MemberReference timeexpr MemberReference ns LocalVariableDeclaration ReferenceType Object VariableDeclarator result Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation getMetaTypes LocalVariableDeclaration ReferenceType Collection VariableDeclarator events MethodInvocation Model MethodInvocation MemberReference ns MemberReference type getAllModelElementsOfKind getModelManagementHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator event MemberReference events BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator expression MethodInvocation Model MethodInvocation MemberReference event getExpression getFacade IfStatement BinaryOperation != MemberReference expression Literal null BlockStatement IfStatement MethodInvocation timeexpr MethodInvocation Model MethodInvocation MemberReference expression getBody getFacade equals BlockStatement StatementExpression Assignment MemberReference result MemberReference event = BreakStatement IfStatement BinaryOperation == MemberReference result Literal null BlockStatement StatementExpression Assignment MemberReference result MethodInvocation sMFactory MemberReference timeexpr MemberReference ns = ReturnStatement MemberReference result	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getParameters MethodInvocation MemberReference element contains getFacade	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation e getSource IfStatement BinaryOperation == MemberReference src MemberReference attrCheckBox BlockStatement LocalVariableDeclaration ReferenceType FigCompartmentBox VariableDeclarator fcb Cast ReferenceType FigCompartmentBox MethodInvocation StatementExpression MethodInvocation fcb MethodInvocation Model MethodInvocation getAttribute getMetaTypes MethodInvocation attrCheckBox isSelected showCompartment IfStatement BinaryOperation == MemberReference src MemberReference operCheckBox BlockStatement LocalVariableDeclaration ReferenceType FigCompartmentBox VariableDeclarator fcb Cast ReferenceType FigCompartmentBox MethodInvocation StatementExpression MethodInvocation fcb MethodInvocation Model MethodInvocation getOperation getMetaTypes MethodInvocation operCheckBox isSelected showCompartment BlockStatement StatementExpression SuperMethodInvocation MemberReference e itemStateChanged	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig createBigPortFig ReturnStatement ClassCreator ReferenceType Literal 0 Literal 0 Literal 0 Literal 0 MemberReference LINE_COLOR MemberReference FILL_COLOR	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement Cast ReferenceType Boolean MemberReference value getCoreHelper	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object arole ReturnStatement Literal null	1
MethodDeclaration Modifier private ReferenceType String generateAttribute FormalParameter ReferenceType Object attr FormalParameter BasicType boolean documented IfStatement MemberReference isFileGeneration BlockStatement StatementExpression Assignment MemberReference documented Literal true = LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 80 IfStatement MemberReference documented BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MemberReference attr MemberReference documented MemberReference INDENT generateConstraintEnrichedDocComment IfStatement BinaryOperation && BinaryOperation != MemberReference s Literal null BinaryOperation > MethodInvocation s MethodInvocation length trim Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference INDENT append MemberReference s append StatementExpression MethodInvocation sb MethodInvocation MemberReference attr generateCoreAttribute append StatementExpression MethodInvocation sb MethodInvocation MemberReference LINE_SEPARATOR append Literal ";" append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType String getBody FormalParameter ReferenceType Object IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of ReturnStatement Cast ReferenceType MemberReference	0
MethodDeclaration Modifier private ReferenceType ModelElement lookup FormalParameter ReferenceType Namespace ns FormalParameter ReferenceType String name TryStatement LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation name Literal "::" indexOf IfStatement BinaryOperation != MemberReference idx Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nm StatementExpression Assignment MemberReference nm MethodInvocation name Literal 0 MemberReference idx substring = LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator e MethodInvocation MemberReference ns MemberReference nm lookup IfStatement BinaryOperation || BinaryOperation == MemberReference e Literal null BinaryOperation instanceof MemberReference e ReferenceType Namespace BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType Namespace VariableDeclarator n Cast ReferenceType Namespace MemberReference e StatementExpression Assignment MemberReference nm MethodInvocation name BinaryOperation + MemberReference idx Literal 2 substring = ReturnStatement MethodInvocation MemberReference n MemberReference nm lookup LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation ns MethodInvocation iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator e Cast ReferenceType ModelElement MethodInvocation i next IfStatement MethodInvocation name MethodInvocation e getName equals BlockStatement ReturnStatement MemberReference e CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isCellEditable FormalParameter BasicType int row FormalParameter BasicType int col ReturnStatement BinaryOperation == MemberReference col Literal 0	0
MethodDeclaration Modifier final protected setPorts FormalParameter ReferenceType Layer layer FormalParameter ReferenceType FigEdge newEdge LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation newEdge getOwner IfStatement BinaryOperation == MethodInvocation newEdge getSourcePortFig Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator source IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference source Cast ReferenceType CommentEdge MemberReference modelElement = BlockStatement StatementExpression Assignment MemberReference source MethodInvocation Model MethodInvocation MemberReference modelElement getSource getUmlHelper = LocalVariableDeclaration ReferenceType FigNode VariableDeclarator sourceNode MethodInvocation MemberReference layer MemberReference source getNodePresentationFor AssertStatement BinaryOperation != MemberReference sourceNode Literal null BinaryOperation + Literal "No FigNode found for " MemberReference source StatementExpression MethodInvocation MemberReference newEdge MemberReference sourceNode IfStatement BinaryOperation == MethodInvocation newEdge getDestPortFig Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator dest IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference dest Cast ReferenceType CommentEdge MemberReference modelElement = BlockStatement StatementExpression Assignment MemberReference dest MethodInvocation Model MethodInvocation MethodInvocation newEdge getOwner getUmlHelper = StatementExpression MethodInvocation MemberReference newEdge MethodInvocation MemberReference layer MemberReference dest getNodePresentationFor IfStatement BinaryOperation || BinaryOperation == MethodInvocation newEdge getSourcePortFig Literal null BinaryOperation == MethodInvocation newEdge getDestPortFig Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + BinaryOperation + Literal "Edge of type " MethodInvocation newEdge MethodInvocation getName getClass Literal " created with no source or destination port"	1
MethodDeclaration Modifier public static ReferenceType FormalParameter ReferenceType String s ReturnStatement MethodInvocation MemberReference s	0
MethodDeclaration Modifier public static ReferenceType PredicateType create FormalParameter ReferenceType Class c0 FormalParameter ReferenceType Class c1 LocalVariableDeclaration ReferenceType Class VariableDeclarator classes ArrayCreator ReferenceType Class Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 classes MemberReference c0 = StatementExpression Assignment MemberReference ArraySelector Literal 1 classes MemberReference c1 = ReturnStatement ClassCreator ReferenceType PredicateType MemberReference classes	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object c StatementExpression Assignment This MemberReference artifact MemberReference c =	0
MethodDeclaration Modifier public final FormalParameter ReferenceType Object element FormalParameter ReferenceType String property StatementExpression MethodInvocation This MemberReference element MemberReference property	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent lse IfStatement MethodInvocation lse getValueIsAdjusting BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation lse getSource IfStatement BinaryOperation != MemberReference src MethodInvocation table getSelectionModel BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "src = " MemberReference src debug ReturnStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal valueChanged from " MemberReference src debug LocalVariableDeclaration BasicType int VariableDeclarator row MethodInvocation table getSelectedRow IfStatement BinaryOperation != This MemberReference target Literal null BlockStatement StatementExpression This MemberReference target MethodInvocation This StatementExpression MethodInvocation TernaryExpression BinaryOperation == MemberReference row Literal - 1 Literal null MethodInvocation table MemberReference row setTarget IfStatement BinaryOperation != This MemberReference target Literal null BlockStatement StatementExpression This MemberReference target MethodInvocation This addObserver	1
MethodDeclaration Modifier public FormalParameter BasicType int inline StatementExpression MethodInvocation Inline MemberReference inline StatementExpression MethodInvocation Configuration MemberReference MemberReference inline setInteger	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getName getManager Literal null	0
MethodDeclaration Modifier public static BasicType double getDouble FormalParameter ReferenceType ConfigurationKey key FormalParameter BasicType double defaultValue ReturnStatement MethodInvocation config MemberReference key MemberReference defaultValue getDouble	0
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int rowIndex ReturnStatement Cast ReferenceType String MethodInvocation MemberReference rowIndex MemberReference getValueAt	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getOwner getStateMachinesHelper ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType List TypeArgument ReferenceType Token parse LocalVariableDeclaration ReferenceType VariableDeclarator lexer Literal null SwitchStatement MethodInvocation desc Literal 0 charAt SwitchStatementCase Literal 'L' StatementExpression Assignment MemberReference lexer ClassCreator ReferenceType ClassTypeSignatureLexer MemberReference desc = BreakStatement SwitchStatementCase Literal '[' StatementExpression Assignment MemberReference lexer ClassCreator ReferenceType MemberReference desc = BreakStatement SwitchStatementCase Literal 'T' StatementExpression Assignment MemberReference lexer ClassCreator ReferenceType MemberReference desc = BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + MemberReference desc Literal " is not a field type StatementExpression MethodInvocation result MethodInvocation lexer parse addAll StatementExpression Assignment MemberReference desc MethodInvocation lexer = ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean IfStatement MemberReference BlockStatement ReturnStatement MemberReference BlockStatement IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement ReturnStatement MethodInvocation parent BlockStatement ReturnStatement MethodInvocation MethodInvocation getDefaultSettings	0
MethodDeclaration Modifier protected Annotation Override ReferenceType IfStatement BinaryOperation instanceof MethodInvocation Globals MethodInvocation getGraphModel curEditor ReferenceType DeploymentDiagramGraphModel BlockStatement ReturnStatement Literal null IfStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent isReadOnly getModelManagementHelper BlockStatement ReturnStatement ArrayCreator ReferenceType ArrayInitializer Literal null MemberReference Literal null Literal null Literal null ReturnStatement MemberReference icons	1
MethodDeclaration Modifier protected ReferenceType ArgoJMenu LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator ClassCreator ReferenceType ArgoJMenu Literal LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType FigCompartment VariableDeclarator comps MethodInvocation ForStatement EnhancedForControl VariableDeclaration ReferenceType FigCompartment VariableDeclarator comp MemberReference comps BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator metaType MethodInvocation comp getCompartmentType LocalVariableDeclaration ReferenceType Action VariableDeclarator addAction ClassCreator ReferenceType ActionCreateContainedModelElement MemberReference metaType MethodInvocation getOwner StatementExpression MethodInvocation addAction MethodInvocation setEnabled StatementExpression MethodInvocation MemberReference addAction Literal 0 insert StatementExpression MethodInvocation ClassCreator ReferenceType add StatementExpression MethodInvocation MethodInvocation add StatementExpression MethodInvocation MethodInvocation add ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Class codeCreatorClass FormalParameter ReferenceType String domain FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator mappings MethodInvocation MemberReference codeCreatorClass StatementExpression MethodInvocation mappings MemberReference domain MemberReference put	0
MethodDeclaration Modifier public ReferenceType Collection getAllClasses FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation impl MemberReference ns getAllClasses	0
MethodDeclaration Modifier public ReferenceType String getTabKey ReturnStatement Literal	0
MethodDeclaration Modifier public addClass FormalParameter ReferenceType Object newClass FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference newClass MemberReference addClassifier	0
MethodDeclaration Modifier public BasicType boolean StatementExpression Assignment This MemberReference Literal false = StatementExpression Assignment This MemberReference Literal false = StatementExpression Assignment This MemberReference Literal true = ReturnStatement Literal true	0
MethodDeclaration Modifier public run TryStatement IfStatement BinaryOperation instanceof MemberReference e ReferenceType AddAssociationEvent BlockStatement IfStatement MethodInvocation MemberReference e isValidEvent BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference e getChangedElement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Collection BlockStatement StatementExpression MethodInvocation LOG Literal "Elements added" info LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator tempList ClassCreator ReferenceType ArrayList Cast ReferenceType Collection MemberReference o LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation tempList iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o2 MethodInvocation it next StatementExpression MethodInvocation MemberReference o2 addElement BlockStatement IfStatement MethodInvocation ! MemberReference o contains BlockStatement IfStatement BinaryOperation instanceof MemberReference lm ReferenceType Ordered BlockStatement LocalVariableDeclaration ReferenceType Ordered VariableDeclarator ordered Cast ReferenceType Ordered MemberReference lm LocalVariableDeclaration ReferenceType Collection VariableDeclarator elements MethodInvocation ordered IfStatement BinaryOperation instanceof MemberReference elements ReferenceType List BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator Cast ReferenceType List MemberReference elements StatementExpression MethodInvocation MemberReference MemberReference o add BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference elements BlockStatement IfStatement BinaryOperation == MemberReference element MemberReference o BlockStatement BreakStatement StatementExpression MemberReference ++ StatementExpression MethodInvocation MemberReference MemberReference o add BlockStatement StatementExpression MethodInvocation MemberReference o addElement IfStatement BinaryOperation instanceof MemberReference e ReferenceType RemoveAssociationEvent BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator valid Literal false IfStatement BinaryOperation instanceof MethodInvocation MemberReference e getChangedElement ReferenceType Collection BlockStatement StatementExpression Assignment MemberReference valid MethodInvocation MethodInvocation MemberReference e getChangedElement contains = BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MethodInvocation MemberReference e getChangedElement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator StatementExpression Assignment MemberReference valid Literal true = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement MethodInvocation ! MemberReference o contains BlockStatement StatementExpression Assignment MemberReference valid Literal false = BreakStatement IfStatement MemberReference valid BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference e getChangedElement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it Cast ReferenceType Collection MemberReference o WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation it next StatementExpression MethodInvocation MemberReference removeElement BlockStatement StatementExpression MethodInvocation MemberReference o removeElement CatchClause CatchClauseParameter InvalidElementException e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "updateLayout method accessed " Literal "deleted element " MemberReference e debug	1
MethodDeclaration Modifier public insertString FormalParameter BasicType int offset FormalParameter ReferenceType String str FormalParameter ReferenceType AttributeSet a BadLocationException StatementExpression SuperMethodInvocation MemberReference offset MemberReference str MemberReference a insertString StatementExpression MethodInvocation MethodInvocation Literal 0 MethodInvocation getLength getText setPropertyInternal	1
MethodDeclaration Modifier public setTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType String tag FormalParameter ReferenceType String value StatementExpression SuperMethodInvocation MemberReference handle MemberReference tag MemberReference value setTaggedValue StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object role ReturnStatement MethodInvocation impl MemberReference role	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object dependency StatementExpression MethodInvocation impl MemberReference handle MemberReference dependency	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation getName	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Multiplicity FormalParameter Modifier final ReferenceType List ReturnStatement MethodInvocation MemberReference createMultiplicityInternal	0
MethodDeclaration ReferenceType List TypeArgument ReferenceType AbstractArgoJPanel LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType AbstractArgoJPanel VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType AbstractArgoJPanel ForStatement EnhancedForControl VariableDeclaration ReferenceType ModuleInterface VariableDeclarator module MethodInvocation MethodInvocation getInstance BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator status MethodInvocation moduleStatus MemberReference module get IfStatement BinaryOperation == MemberReference status Literal null BlockStatement ContinueStatement IfStatement MethodInvocation status BlockStatement IfStatement BinaryOperation instanceof MemberReference module ReferenceType BlockStatement StatementExpression MethodInvocation result Cast ReferenceType MemberReference module addAll ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType String getText FormalParameter BasicType int offset FormalParameter BasicType int length BadLocationException ReturnStatement MethodInvocation document MemberReference offset MemberReference length getText	0
MethodDeclaration BasicType boolean FormalParameter ReferenceType Object modelElement ReturnStatement BinaryOperation == MethodInvocation getOperation MemberReference modelElement	0
MethodDeclaration Modifier public ReferenceType Generalization FormalParameter ReferenceType Object extent LocalVariableDeclaration ReferenceType Generalization VariableDeclarator Cast ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage MemberReference extent StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object model FormalParameter ReferenceType Object oSubmachineState IfStatement BinaryOperation instanceof MemberReference oSubmachineState ReferenceType State BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType VariableDeclarator MethodInvocation Model MethodInvocation MemberReference model ClassReference ReferenceType getAllModelElementsOfKind getModelManagementHelper StatementExpression MethodInvocation MethodInvocation MemberReference oSubmachineState getStateMachine remove ReturnStatement MemberReference BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal expected"	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal - 1054405279954763721L Literal 511L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier private BasicType int getMaxUpper FormalParameter ReferenceType Multiplicity m LocalVariableDeclaration BasicType int VariableDeclarator max Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType MultiplicityRange VariableDeclarator mr MethodInvocation m getRange BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator value MethodInvocation mr getUpper IfStatement BinaryOperation == MemberReference value MemberReference BlockStatement StatementExpression Assignment MemberReference max MemberReference value = IfStatement BinaryOperation && BinaryOperation != MemberReference max MemberReference BinaryOperation > MemberReference value MemberReference max BlockStatement StatementExpression Assignment MemberReference max MemberReference value = ReturnStatement MemberReference max	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType JComboBox VariableDeclarator cb Cast ReferenceType JComboBox MethodInvocation e getSource LocalVariableDeclaration ReferenceType String VariableDeclarator selected Cast ReferenceType String MethodInvocation cb getSelectedItem LocalVariableDeclaration ReferenceType ImportInterface VariableDeclarator MethodInvocation getCurrentModule StatementExpression MethodInvocation MethodInvocation MethodInvocation MemberReference selected get StatementExpression MethodInvocation Cast ReferenceType JFileChooser MethodInvocation dialog MethodInvocation Literal 0 getComponent getContentPane MethodInvocation MethodInvocation MethodInvocation getCurrentModule StatementExpression MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType String decision FormalParameter BasicType int priority LocalVariableDeclaration ReferenceType VariableDeclarator d MethodInvocation MemberReference decision IfStatement BinaryOperation == MemberReference d Literal null BlockStatement StatementExpression MethodInvocation MemberReference decision MemberReference priority	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType UmlPackage VariableDeclarator pkg MethodInvocation StatementExpression MethodInvocation pkg MemberReference name setName ReturnStatement MemberReference pkg	0
MethodDeclaration Modifier private FormalParameter ReferenceType FigEdge edge FormalParameter ReferenceType FigNode dest StatementExpression MethodInvocation edge MemberReference dest setDestPortFig StatementExpression MethodInvocation edge MemberReference dest setDestFigNode	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes Literal makeCreateNodeAction = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object getContainer FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation || MethodInvocation MemberReference handle isAGuard MethodInvocation MemberReference handle BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference handle getTransition getContainer IfStatement MethodInvocation MemberReference handle isAEvent BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator container LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator MemberReference handle getTransitions WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference container MethodInvocation MethodInvocation it next getContainer = IfStatement BinaryOperation != MemberReference container Literal null BlockStatement ReturnStatement MemberReference container IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StateVertex BlockStatement ReturnStatement Cast ReferenceType StateVertex MemberReference handle IfStatement MethodInvocation MemberReference handle isATransition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! interpreter MemberReference dm BlockStatement ReturnStatement MemberReference NO_PROBLEM BlockStatement IfStatement MethodInvocation interpreter MemberReference dm check BlockStatement ReturnStatement MemberReference NO_PROBLEM BlockStatement ReturnStatement MemberReference PROBLEM_FOUND	0
MethodDeclaration Modifier public FormalParameter ReferenceType DropTargetDragEvent dropTargetDragEvent IfStatement MethodInvocation ! MemberReference dropTargetDragEvent BlockStatement StatementExpression MethodInvocation dropTargetDragEvent rejectDrag BlockStatement StatementExpression MethodInvocation dropTargetDragEvent MethodInvocation dropTargetDragEvent getDropAction acceptDrag	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation Configuration MemberReference Argo Literal "" getString setPath	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object expression LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal "There is no StatementExpression MethodInvocation Model MethodInvocation MemberReference target Literal null setRecurrence getCommonBehaviorHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference expression setRecurrence getCommonBehaviorHelper	0
MethodDeclaration Modifier public Annotation Override ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment MemberReference MemberReference = StatementExpression Assignment MemberReference Literal true =	0
MethodDeclaration Modifier public Annotation Override mousePressed FormalParameter ReferenceType MouseEvent e StatementExpression SuperMethodInvocation MemberReference e mousePressed IfStatement MethodInvocation e isPopupTrigger BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation e getComponent MethodInvocation e getX MethodInvocation e getY show getPopupMenu	0
MethodDeclaration Modifier public synchronized ReferenceType List getTargets ReturnStatement MethodInvocation Collections MemberReference targets	0
MethodDeclaration Modifier private BasicType boolean isReadOnly FormalParameter ReferenceType RefBaseObject object ReturnStatement MethodInvocation modelImpl MethodInvocation object refOutermostPackage isReadOnly	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType AssociationEnd	0
MethodDeclaration FormalParameter ReferenceType String type FormalParameter BasicType boolean forceIt LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation parseState anonymousClass TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mClassifier MethodInvocation MethodInvocation MethodInvocation MemberReference type getClassifierName Literal false MemberReference javaProfile get MemberReference type getContext LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator interfaces ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String IfStatement MethodInvocation Model MethodInvocation MemberReference mClassifier isAInterface getFacade BlockStatement StatementExpression MethodInvocation interfaces MemberReference type add StatementExpression MethodInvocation MemberReference name Cast BasicType short Literal 0 MemberReference EMPTY_STRING_LIST TernaryExpression MethodInvocation Model MethodInvocation MemberReference mClassifier isAClass getFacade MemberReference type Literal null MemberReference interfaces Literal "" MemberReference forceIt addClass CatchClause CatchClauseParameter ClassifierNotFoundException e StatementExpression MethodInvocation MemberReference name Cast BasicType short Literal 0 MemberReference EMPTY_STRING_LIST Literal null MemberReference EMPTY_STRING_LIST Literal "" MemberReference forceIt addClass StatementExpression MethodInvocation LOG BinaryOperation + Literal "Modeller.java: an class was created " Literal "although it could not be found in the classpath." info	1
MethodDeclaration Modifier public static ReferenceType Object execute FormalParameter ReferenceType command LocalVariableDeclaration ReferenceType VariableDeclarator mco MethodInvocation IfStatement BinaryOperation != MemberReference mco Literal null BlockStatement ReturnStatement MethodInvocation mco MemberReference command execute BlockStatement ReturnStatement MethodInvocation command execute	1
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent event StatementExpression MethodInvocation LOG BinaryOperation + Literal MemberReference event debug StatementExpression MethodInvocation update	1
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType Object target IfStatement MethodInvocation BlockStatement ReturnStatement IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator oldTargets MethodInvocation targets toArray LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation MemberReference target StatementExpression MethodInvocation targets MemberReference c removeAll StatementExpression MethodInvocation umlListener MemberReference c IfStatement BinaryOperation != MethodInvocation targets size MemberReference oldTargets length BlockStatement StatementExpression MethodInvocation MemberReference MemberReference oldTargets internalOnSetTarget StatementExpression MethodInvocation	0
MethodDeclaration Modifier public keyTyped FormalParameter ReferenceType KeyEvent ke IfStatement BinaryOperation || MemberReference ! editable MethodInvocation isReadOnly BlockStatement ReturnStatement IfStatement MemberReference ! BlockStatement IfStatement MethodInvocation Model MethodInvocation MethodInvocation getOwner isAModelElement getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getOwner Literal "" setName getCoreHelper StatementExpression Assignment MemberReference Literal true = BlockStatement StatementExpression MethodInvocation LOG Literal "not ready to edit name" debug ReturnStatement IfStatement BinaryOperation || MethodInvocation ke isConsumed BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference ke keyTyped	0
MethodDeclaration Modifier private FormalParameter ReferenceType Collection c FormalParameter ReferenceType Collection v ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference c BlockStatement IfStatement MethodInvocation ! v MemberReference o contains BlockStatement StatementExpression MethodInvocation v MemberReference o add	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal 18014398509481984L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Property VariableDeclarator property MethodInvocation StatementExpression MethodInvocation MethodInvocation MemberReference property add Cast ReferenceType Type MemberReference handle getOwnedAttributes IfStatement BinaryOperation != MemberReference type Literal null BlockStatement StatementExpression MethodInvocation property Cast ReferenceType Type MemberReference type StatementExpression MethodInvocation property Literal setName StatementExpression MethodInvocation MethodInvocation MemberReference property add	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object enumeration FormalParameter ReferenceType List ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType Object filterWithActivator FormalParameter ReferenceType Collection c FormalParameter ReferenceType Object a LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Object VariableDeclarator v ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator msg MemberReference c BlockStatement IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference msg getActivator getFacade MemberReference a BlockStatement StatementExpression MethodInvocation v MemberReference msg add ReturnStatement MemberReference v	1
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType List VariableDeclarator MethodInvocation IfStatement MemberReference exclusive BlockStatement StatementExpression Cast ReferenceType MethodInvocation getModel StatementExpression Cast ReferenceType MethodInvocation getModel	0
MethodDeclaration Modifier private ReferenceType File FormalParameter ReferenceType String fn LocalVariableDeclaration ReferenceType File VariableDeclarator theFile Literal null LocalVariableDeclaration ReferenceType PersistenceManager VariableDeclarator pm MethodInvocation PersistenceManager getInstance LocalVariableDeclaration ReferenceType JFileChooser VariableDeclarator chooser ClassCreator ReferenceType JFileChooser StatementExpression MethodInvocation chooser MethodInvocation Translator Literal localize setDialogTitle StatementExpression MethodInvocation chooser MethodInvocation getInstance StatementExpression MethodInvocation chooser MethodInvocation Translator Literal localize StatementExpression MethodInvocation chooser Literal true StatementExpression MethodInvocation pm MemberReference chooser IfStatement BinaryOperation > MethodInvocation fn length Literal 0 BlockStatement StatementExpression Assignment MemberReference fn MethodInvocation PersistenceManager MethodInvocation MemberReference fn getBaseName getInstance = StatementExpression MethodInvocation chooser ClassCreator ReferenceType File MemberReference fn setSelectedFile LocalVariableDeclaration BasicType int VariableDeclarator result MethodInvocation chooser MethodInvocation ArgoFrame getFrame showSaveDialog IfStatement BinaryOperation == MemberReference result MemberReference JFileChooser APPROVE_OPTION BlockStatement StatementExpression Assignment MemberReference theFile MethodInvocation chooser getSelectedFile = IfStatement BinaryOperation != MemberReference theFile Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference getExtensionMechanismsHelper LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation theFile getName StatementExpression Assignment MemberReference name MethodInvocation pm MemberReference name = StatementExpression Assignment MemberReference theFile ClassCreator ReferenceType File MethodInvocation theFile getParent MemberReference name = StatementExpression MethodInvocation ProjectBrowser MethodInvocation Literal true MemberReference theFile Literal false getInstance ReturnStatement MemberReference theFile	0
MethodDeclaration Modifier private StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig StatementExpression Assignment MemberReference bodyText ClassCreator ReferenceType Literal 0 Literal 0 Literal 0 Literal 0 = StatementExpression Assignment MemberReference regionCompartment ClassCreator ReferenceType Literal 0 Literal 0 Literal 0 Literal 0 = StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MethodInvocation getBodyText addFig StatementExpression MethodInvocation MemberReference regionCompartment addFig StatementExpression MethodInvocation MethodInvocation getBounds setBounds	0
MethodDeclaration Modifier public Annotation Override BasicType boolean doesAccept FormalParameter ReferenceType Object objectToAccept IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAState getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isASynchState getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAStubState getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAPseudostate getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAComment getFacade BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType MultiplicityRange	0
MethodDeclaration Modifier public final primary_expression RecognitionException TokenStreamException SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID OPERATOR TILDE SCOPE BlockStatement StatementExpression MethodInvocation id_expression BreakStatement SwitchStatementCase StringLiteral LITERAL_true LITERAL_false OCTALINT DECIMALINT HEXADECIMALINT CharLiteral FLOATONE FLOATTWO BlockStatement StatementExpression MethodInvocation constant BreakStatement SwitchStatementCase LITERAL_this BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_this match BreakStatement SwitchStatementCase LPAREN BlockStatement StatementExpression MethodInvocation MemberReference LPAREN match StatementExpression MethodInvocation expression StatementExpression MethodInvocation MemberReference RPAREN match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int ReturnStatement MethodInvocation group	0
MethodDeclaration Modifier private ReferenceType LockStatement parseLock FeatureNotSupportedException LocalVariableDeclaration ReferenceType LockStatement VariableDeclarator node ClassCreator ReferenceType LockStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference TokenID LParen AssertAndAdvance StatementExpression Assignment MemberReference node Target MethodInvocation ParseExpression = StatementExpression MethodInvocation MemberReference TokenID RParen AssertAndAdvance StatementExpression MethodInvocation MemberReference node Statements parseBlock IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi StatementExpression MethodInvocation advance ReturnStatement MemberReference node	1
MethodDeclaration Modifier private ReferenceType TemplateParameter createTemplateParameter FormalParameter ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage extent LocalVariableDeclaration ReferenceType TemplateParameter VariableDeclarator MethodInvocation extent MethodInvocation MethodInvocation createTemplateParameter getCore StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean isAAssociationEnd FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object qualifier StatementExpression MethodInvocation MemberReference handle MemberReference qualifier removeOwnedElement	0
MethodDeclaration Modifier public ReferenceType buildInterface ReturnStatement MethodInvocation	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig createBigPortFig ReturnStatement ClassCreator ReferenceType FigRect MemberReference X MemberReference MemberReference STATE_WIDTH MemberReference HEIGHT MemberReference DEBUG_COLOR MemberReference DEBUG_COLOR	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getStateMachinesFactory	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType String VariableDeclarator text MethodInvocation getText LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation getName LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MethodInvocation getSource getNamespace getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator transitions ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MethodInvocation getSource getTransitions getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator parameters ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MethodInvocation getSource getParameters getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator trans Literal null IfStatement MethodInvocation ! transitions isEmpty BlockStatement StatementExpression Assignment MemberReference trans MethodInvocation transitions MethodInvocation next iterator = LocalVariableDeclaration ReferenceType Object VariableDeclarator evt MethodInvocation MemberReference text MemberReference name MemberReference ns MemberReference trans ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator param MemberReference parameters BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getSource MemberReference param getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference evt MemberReference param addParameter getCoreHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator t MemberReference transitions BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference t Literal null getStateMachinesHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference t MemberReference evt getStateMachinesHelper StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getSource delete getUmlFactory	1
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier private static BasicType int parseMsgOrder FormalParameter ReferenceType String s LocalVariableDeclaration BasicType int VariableDeclarator i VariableDeclarator t LocalVariableDeclaration BasicType int VariableDeclarator v Literal 0 StatementExpression Assignment MemberReference t MethodInvocation s length = ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference t MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation s MemberReference i charAt IfStatement BinaryOperation || BinaryOperation < MemberReference c Literal 'a' BinaryOperation > MemberReference c Literal 'z' BlockStatement ThrowStatement ClassCreator ReferenceType NumberFormatException StatementExpression Assignment MemberReference v Literal 26 *= StatementExpression Assignment MemberReference v BinaryOperation - MemberReference c Literal 'a' += ReturnStatement MemberReference v	1
MethodDeclaration * Interpreter */ Modifier public FormalParameter ReferenceType node LocalVariableDeclaration BasicType boolean VariableDeclarator test Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator ret Literal false StatementExpression MethodInvocation MemberReference node IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply StatementExpression Assignment MemberReference test MethodInvocation MemberReference val MethodInvocation node asBoolean = StatementExpression Assignment MemberReference val Literal null = IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply IfStatement MemberReference test BlockStatement StatementExpression Assignment MemberReference ret MethodInvocation MemberReference val MethodInvocation node asBoolean = StatementExpression Assignment MemberReference val Literal null = IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply IfStatement MemberReference ! test BlockStatement StatementExpression Assignment MemberReference ret MethodInvocation MemberReference val MethodInvocation node asBoolean = StatementExpression Assignment MemberReference val Literal null = IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply StatementExpression Assignment MemberReference val MemberReference ret = StatementExpression MethodInvocation MemberReference node	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference setLineColor StatementExpression MethodInvocation MemberReference col setLineColor	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType org ReferenceType argouml ReferenceType model ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType Collection VariableDeclarator targets MethodInvocation TargetManager MethodInvocation getInstance LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation DiagramUtils getActiveDiagram LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation Literal null MethodInvocation diagram getNamespace getCoreFactory LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator mgm Cast ReferenceType MutableGraphModel MethodInvocation diagram getGraphModel LocalVariableDeclaration ReferenceType Object VariableDeclarator firstTarget Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation targets iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation i next LocalVariableDeclaration ReferenceType Fig VariableDeclarator destFig MethodInvocation diagram MemberReference obj presentationFor IfStatement BinaryOperation instanceof MemberReference destFig ReferenceType FigEdgeModelElement BlockStatement LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator destEdge Cast ReferenceType FigEdgeModelElement MemberReference destFig StatementExpression MethodInvocation destEdge makeEdgePort StatementExpression Assignment MemberReference destFig MethodInvocation destEdge getEdgePort = StatementExpression MethodInvocation destEdge IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference obj isAModelElement getFacade MethodInvocation Model getFacade BlockStatement IfStatement BinaryOperation == MemberReference firstTarget Literal null BlockStatement StatementExpression Assignment MemberReference firstTarget MemberReference obj = IfStatement MethodInvocation ! Model MethodInvocation MemberReference MethodInvocation MemberReference obj contains getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference obj getCoreHelper StatementExpression MethodInvocation mgm MemberReference addNode LocalVariableDeclaration ReferenceType Fig VariableDeclarator noteFig MethodInvocation diagram MemberReference presentationFor StatementExpression Assignment MemberReference i MethodInvocation Model MethodInvocation MemberReference MethodInvocation iterator getFacade = WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation i next IfStatement BinaryOperation != MethodInvocation diagram MemberReference obj presentationFor Literal null BlockStatement LocalVariableDeclaration ReferenceType CommentEdge VariableDeclarator commentEdge ClassCreator ReferenceType CommentEdge MemberReference MemberReference obj StatementExpression MethodInvocation mgm MemberReference commentEdge addEdge LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator fe Cast ReferenceType FigEdge MethodInvocation diagram MemberReference commentEdge presentationFor LocalVariableDeclaration ReferenceType FigPoly VariableDeclarator fp Cast ReferenceType FigPoly MethodInvocation fe getFig StatementExpression MethodInvocation fp Literal true setComplete StatementExpression MethodInvocation noteFig MethodInvocation MemberReference diagram MemberReference firstTarget MemberReference noteFig calculateLocation setLocation StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation noteFig getOwner setTarget getInstance	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType getComments FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public Annotation Override removeFromDiagram StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation getOwner Literal "isAbstract" removeModelEventListener getPump StatementExpression SuperMethodInvocation removeFromDiagram	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getCompositeState getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MemberReference diagrams BlockStatement StatementExpression MethodInvocation diagram	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference target setTarget	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType MutableGraphModel gm FormalParameter ReferenceType Object newNode ReturnStatement MethodInvocation MemberReference gm MemberReference newNode MemberReference LEFT	0
MethodDeclaration Modifier public Annotation Override ReferenceType Point connectionPoint FormalParameter ReferenceType Point anotherPt ReturnStatement MethodInvocation MethodInvocation MemberReference anotherPt connectionPoint getBigPort	0
MethodDeclaration Modifier public setMaximumProgress FormalParameter BasicType int max StatementExpression MethodInvocation pbar MemberReference max	0
MethodDeclaration Modifier public redo StatementExpression MethodInvocation UndoManager MethodInvocation This addMementoLock getInstance ForStatement EnhancedForControl VariableDeclaration ReferenceType FigNode VariableDeclarator figNode MemberReference nodesPlaced BlockStatement StatementExpression MethodInvocation editor MemberReference figNode add StatementExpression MethodInvocation mgm MethodInvocation figNode getOwner addNode StatementExpression MethodInvocation UndoManager MethodInvocation This removeMementoLock getInstance	1
MethodDeclaration Modifier private ReferenceType Point FormalParameter ReferenceType Rectangle r FormalParameter ReferenceType Point pOut FormalParameter ReferenceType Point pIn LocalVariableDeclaration ReferenceType Line2D ReferenceType Double VariableDeclarator m VariableDeclarator n StatementExpression Assignment MemberReference m ClassCreator ReferenceType Line2D ReferenceType Double MemberReference pOut MemberReference pIn = StatementExpression Assignment MemberReference n ClassCreator ReferenceType Line2D ReferenceType Double MemberReference r x MemberReference r y BinaryOperation + MemberReference r x MemberReference r width MemberReference r y = IfStatement MethodInvocation m MemberReference n intersectsLine BlockStatement ReturnStatement MethodInvocation MemberReference m MemberReference n intersection StatementExpression Assignment MemberReference n ClassCreator ReferenceType Line2D ReferenceType Double BinaryOperation + MemberReference r x MemberReference r width MemberReference r y BinaryOperation + MemberReference r x MemberReference r width BinaryOperation + MemberReference r y MemberReference r height = IfStatement MethodInvocation m MemberReference n intersectsLine BlockStatement ReturnStatement MethodInvocation MemberReference m MemberReference n intersection StatementExpression Assignment MemberReference n ClassCreator ReferenceType Line2D ReferenceType Double MemberReference r x BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r x MemberReference r width BinaryOperation + MemberReference r y MemberReference r height = IfStatement MethodInvocation m MemberReference n intersectsLine BlockStatement ReturnStatement MethodInvocation MemberReference m MemberReference n intersection StatementExpression Assignment MemberReference n ClassCreator ReferenceType Line2D ReferenceType Double MemberReference r x MemberReference r y MemberReference r x BinaryOperation + MemberReference r y MemberReference r width = IfStatement MethodInvocation m MemberReference n intersectsLine BlockStatement ReturnStatement MethodInvocation MemberReference m MemberReference n intersection StatementExpression MethodInvocation LOG Literal "Could not find using inner warn ReturnStatement MemberReference pIn	1
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier public addElement FormalParameter ReferenceType Object obj IfStatement BinaryOperation && BinaryOperation != MemberReference obj Literal null MethodInvocation ! MemberReference obj contains BlockStatement StatementExpression SuperMethodInvocation MemberReference obj addElement	1
MethodDeclaration Modifier private LocalVariableDeclaration Modifier final ReferenceType List TypeArgument ReferenceType Action VariableDeclarator MethodInvocation getContextPopupActions StatementExpression MethodInvocation LOG MemberReference info IfStatement BinaryOperation instanceof MemberReference ReferenceType ActionList BlockStatement StatementExpression MethodInvocation This Cast ReferenceType Action MemberReference BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator a MemberReference BlockStatement StatementExpression MethodInvocation This MemberReference a	0
MethodDeclaration Modifier public ReferenceType Transition LocalVariableDeclaration ReferenceType Transition VariableDeclarator MethodInvocation MethodInvocation getTransition MethodInvocation getSmPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object container TryStatement IfStatement BinaryOperation instanceof MemberReference container ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference container CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference container illegalArgumentCollection	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb MemberReference Type append	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File pathname ReturnStatement BinaryOperation && BinaryOperation && MethodInvocation pathname canRead MethodInvocation pathname isFile MethodInvocation pathname MethodInvocation toLowerCase MethodInvocation Literal ".jar" endsWith getPath	1
MethodDeclaration Modifier public Annotation Override ReferenceType ReturnStatement MethodInvocation ClClassName getTheInstance	0
MethodDeclaration Modifier public ReferenceType Extend FormalParameter ReferenceType Object abase FormalParameter ReferenceType Object anextension ReturnStatement MethodInvocation MemberReference abase MemberReference anextension Literal null	0
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation cover MemberReference f setFilled	0
MethodDeclaration Modifier public BasicType boolean disable StatementExpression MethodInvocation MethodInvocation MemberReference getInstance ReturnStatement Literal true	1
MethodDeclaration Modifier private FormalParameter ReferenceType Object attribute FormalParameter ReferenceType String visibility IfStatement BinaryOperation != MemberReference visibility Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference attribute MethodInvocation NotationUtilityUml MethodInvocation visibility trim getVisibility setVisibility getCoreHelper	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment MemberReference instructions MemberReference s =	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference currLanguage	0
MethodDeclaration Modifier public static ReferenceType Collection TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator coll ClassCreator ReferenceType HashSet TypeArgument ReferenceType String ForStatement EnhancedForControl VariableDeclaration ReferenceType ModuleInterface VariableDeclarator mf MethodInvocation MethodInvocation getInstance BlockStatement StatementExpression MethodInvocation coll MethodInvocation mf getName add ReturnStatement MemberReference coll	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType List TypeArgument ReferenceType String typeParameters IfStatement BinaryOperation || BinaryOperation == MemberReference modelElement Literal null BinaryOperation == MemberReference typeParameters Literal null BlockStatement ReturnStatement IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference modelElement MethodInvocation size getFacade Literal 0 BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator parameter MemberReference typeParameters BlockStatement LocalVariableDeclaration ReferenceType Pattern VariableDeclarator p MethodInvocation Pattern Literal | extends compile LocalVariableDeclaration ReferenceType Matcher VariableDeclarator m MethodInvocation p MemberReference parameter matcher IfStatement MethodInvocation m matches BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation m Literal 1 group LocalVariableDeclaration ReferenceType Object VariableDeclarator param MethodInvocation Model MethodInvocation getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference param MemberReference setName getCoreHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference param Literal null getCoreFactory IfStatement BinaryOperation != MethodInvocation m Literal 2 group Literal null BlockStatement StatementExpression MethodInvocation MemberReference param MethodInvocation m MethodInvocation trim Literal 2 group ArrayCreator ReferenceType String ArrayInitializer MethodInvocation m Literal 3 group buildTaggedValue StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference getCoreHelper	0
MethodDeclaration Modifier public final new_initializer RecognitionException TokenStreamException StatementExpression MethodInvocation MemberReference LPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID StringLiteral LITERAL__declspec LITERAL___declspec LPAREN LITERAL_const_cast LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void OPERATOR LITERAL_this LITERAL_true LITERAL_false OCTALINT STAR AMPERSAND TILDE PLUS MINUS PLUSPLUS MINUSMINUS LITERAL_sizeof SCOPE LITERAL_dynamic_cast LITERAL_static_cast LITERAL_reinterpret_cast NOT LITERAL_new LITERAL_delete DECIMALINT HEXADECIMALINT CharLiteral FLOATONE FLOATTWO BlockStatement StatementExpression MethodInvocation expression_list BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RPAREN match	1
MethodDeclaration Modifier public BasicType boolean addAll FormalParameter BasicType int arg0 FormalParameter ReferenceType Collection TypeArgument ReferenceType T extends arg1 ReturnStatement MethodInvocation list MemberReference arg0 MemberReference arg1 addAll	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference ignoredElements	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Designer MethodInvocation getDecisionModel MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String getColumnName FormalParameter BasicType int col IfStatement BinaryOperation == MemberReference col Literal 0 BlockStatement ReturnStatement MemberReference IfStatement BinaryOperation == MemberReference col Literal 1 BlockStatement ReturnStatement MemberReference ReturnStatement Literal null	1
MethodDeclaration Modifier public Annotation Deprecated FormalParameter Modifier final BasicType boolean IfStatement BinaryOperation == MethodInvocation diaDefault MemberReference ! BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Memento VariableDeclarator ClassCreator ReferenceType Memento MethodDeclaration Modifier public redo StatementExpression MethodInvocation diaDefault MemberReference ! MethodDeclaration Modifier public undo StatementExpression MethodInvocation diaDefault MemberReference StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement BinaryOperation == MethodInvocation e getStateChange MemberReference ItemEvent SELECTED BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Cast ReferenceType String MethodInvocation multiplicityComboBox getSelectedItem IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget Literal "1" setMultiplicity getCoreHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference setMultiplicity getCoreHelper StatementExpression MethodInvocation multiplicityComboBox Literal true setEnabled StatementExpression MethodInvocation multiplicityComboBox Literal true BlockStatement StatementExpression MethodInvocation multiplicityComboBox Literal false setEnabled StatementExpression MethodInvocation multiplicityComboBox Literal false StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget Literal null setMultiplicity getCoreHelper	0
MethodDeclaration Modifier public finish StatementExpression Assignment MemberReference started Literal true = LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference step BinaryOperation <= MemberReference i MemberReference MemberReference ++ i BlockStatement StatementExpression MethodInvocation MemberReference i doAction IfStatement BinaryOperation != MemberReference item Literal null BlockStatement StatementExpression MethodInvocation item changed StatementExpression Assignment MemberReference finished Literal true =	1
MethodDeclaration Modifier public ReferenceType Object getComposite ReturnStatement MemberReference AggregationKindEnum	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAStereotype getFacade	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression SuperMethodInvocation Literal 0 setLineWidth StatementExpression MethodInvocation Literal 0 setLineWidth StatementExpression MethodInvocation externalSeparatorFig MemberReference w	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle FormalParameter BasicType int index TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Extend BlockStatement ReturnStatement Cast ReferenceType Extend MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent pce StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal change:" MethodInvocation pce getOldValue Literal " to " MethodInvocation pce getNewValue info StatementExpression MethodInvocation ClassCreator ReferenceType ArgoNotationEvent MemberReference ArgoEventTypes MemberReference pce	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getCollaborationsFactory	0
MethodDeclaration Modifier public setLanguage FormalParameter ReferenceType lang StatementExpression Assignment This MemberReference language MemberReference lang =	0
MethodDeclaration Modifier private ReferenceType Object buildImport FormalParameter ReferenceType Object element FormalParameter ReferenceType Object srcFile LocalVariableDeclaration ReferenceType Collection VariableDeclarator dependencies MethodInvocation Model MethodInvocation MemberReference element MemberReference srcFile getDependencies getCoreHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dep MemberReference dependencies BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereotype MethodInvocation Model MethodInvocation MemberReference dep getStereotypes getFacade BlockStatement IfStatement Literal MethodInvocation MethodInvocation Model MethodInvocation MemberReference stereotype getName getFacade equals "javaImport" BlockStatement ReturnStatement MemberReference dep LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference srcFile MemberReference element getCoreFactory IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference MethodInvocation Literal "javaImport" getUML1Stereotype addStereotype getCoreHelper StatementExpression MethodInvocation ProjectManager MethodInvocation updateRoots getManager LocalVariableDeclaration ReferenceType String VariableDeclarator newName MethodInvocation MemberReference srcFile MemberReference element StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference newName setName getCoreHelper StatementExpression MethodInvocation newElements MemberReference add ReturnStatement MemberReference	1
MethodDeclaration Modifier public BasicType boolean setSelection FormalParameter BasicType int sel IfStatement MethodInvocation MemberReference sel BlockStatement StatementExpression Assignment MemberReference selection MemberReference sel = ReturnStatement Literal true BlockStatement ReturnStatement Literal false	0
MethodDeclaration Modifier protected BasicType int FormalParameter ReferenceType Object obj FormalParameter ReferenceType Object obj1 ReturnStatement MethodInvocation collator MethodInvocation MemberReference obj getName MethodInvocation MemberReference obj1 getName compare	0
MethodDeclaration Modifier public final ReferenceType String qualified_id RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType String VariableDeclarator q Literal "" LocalVariableDeclaration ReferenceType Token VariableDeclarator id Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator so Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator qitem Literal "" StatementExpression Assignment MemberReference so MethodInvocation scope_override = IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression Assignment MemberReference qitem MemberReference so = BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID BlockStatement StatementExpression Assignment MemberReference id MethodInvocation Literal 1 LT = StatementExpression MethodInvocation MemberReference ID match BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LESSTHAN MethodInvocation _tokenSet_24 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation MemberReference LESSTHAN match StatementExpression MethodInvocation template_argument_list StatementExpression MethodInvocation MemberReference GREATERTHAN match IfStatement BinaryOperation && MethodInvocation _tokenSet_25 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_26 MethodInvocation Literal 2 LA member BlockStatement BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression Assignment MemberReference qitem BinaryOperation + MemberReference qitem MethodInvocation id getText = BreakStatement SwitchStatementCase OPERATOR BlockStatement StatementExpression MethodInvocation MemberReference OPERATOR match StatementExpression MethodInvocation optor IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression Assignment MemberReference qitem BinaryOperation + BinaryOperation + MemberReference qitem Literal Literal = BreakStatement SwitchStatementCase LITERAL_this BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_this match BreakStatement SwitchStatementCase LITERAL_true LITERAL_false BlockStatement BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_true BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_true match BreakStatement SwitchStatementCase LITERAL_false BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_false match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression Assignment MemberReference q MemberReference qitem = ReturnStatement MemberReference q	1
MethodDeclaration Modifier public BasicType boolean isDropAcceptable FormalParameter ReferenceType DropTargetDropEvent dropTargetDropEvent IfStatement BinaryOperation == BinaryOperation & MethodInvocation dropTargetDropEvent getDropAction MemberReference DnDConstants ACTION_COPY_OR_MOVE Literal 0 BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Point VariableDeclarator pt MethodInvocation dropTargetDropEvent getLocation LocalVariableDeclaration ReferenceType TreePath VariableDeclarator path MethodInvocation MemberReference pt x MemberReference pt y getPathForLocation IfStatement BinaryOperation == MemberReference path Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation path MemberReference sourcePath equals BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Profile getProfiles ReturnStatement MemberReference profiles	0
MethodDeclaration Modifier static protected ReferenceType String FormalParameter ReferenceType List TypeArgument ReferenceType Token tokens LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator buf ClassCreator ReferenceType StringBuilder ForStatement EnhancedForControl VariableDeclaration ReferenceType Token VariableDeclarator t MemberReference tokens BlockStatement StatementExpression MethodInvocation buf MethodInvocation t getValue append ReturnStatement MethodInvocation buf toString	1
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent pce IfStatement MethodInvocation pce MethodInvocation MethodInvocation getKey equals getPropertyName BlockStatement StatementExpression Assignment MemberReference MethodInvocation pce MethodInvocation toString getNewValue = BlockStatement StatementExpression MethodInvocation MethodInvocation pce getSource MethodInvocation pce getPropertyName	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object IfStatement BinaryOperation instanceof MemberReference ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator myActivityGraph MethodInvocation LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator modelelement Cast ReferenceType ModelElement MemberReference StatementExpression MethodInvocation myActivityGraph MemberReference modelelement IfStatement BinaryOperation instanceof MemberReference modelelement ReferenceType BehavioralFeature BlockStatement StatementExpression Assignment MemberReference modelelement Cast ReferenceType BehavioralFeature MemberReference modelelement = IfStatement BinaryOperation instanceof MemberReference modelelement ReferenceType Namespace BlockStatement LocalVariableDeclaration ReferenceType Namespace VariableDeclarator namespace Cast ReferenceType Namespace MemberReference modelelement WhileStatement BinaryOperation instanceof MemberReference namespace ReferenceType UmlClass BlockStatement LocalVariableDeclaration ReferenceType Namespace VariableDeclarator pns MethodInvocation namespace getNamespace IfStatement BinaryOperation == MemberReference pns Literal null BreakStatement StatementExpression Assignment MemberReference namespace MemberReference pns = StatementExpression MethodInvocation myActivityGraph MemberReference namespace setNamespace LocalVariableDeclaration ReferenceType State VariableDeclarator top Cast ReferenceType CompositeState MethodInvocation modelImpl MethodInvocation MemberReference myActivityGraph getStateMachinesFactory StatementExpression MethodInvocation myActivityGraph MemberReference top setTop ReturnStatement MemberReference myActivityGraph ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Cannot create an with context " MemberReference	1
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade addAll ReturnStatement MemberReference list	0
MethodDeclaration ReferenceType List TypeArgument ReferenceType FigStereotype LocalVariableDeclaration Modifier final ReferenceType List TypeArgument ReferenceType FigStereotype VariableDeclarator ClassCreator ReferenceType ArrayList TypeArgument ReferenceType FigStereotype ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation getFigs BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigStereotype BlockStatement LocalVariableDeclaration ReferenceType FigStereotype VariableDeclarator fs Cast ReferenceType FigStereotype MemberReference f StatementExpression MethodInvocation MemberReference fs add ReturnStatement MemberReference	0
MethodDeclaration * @see * Set up the locale specific text for the critic * one that appears in the * and the critic * appears in the tab of the details * we can make it part of the constructor * override if */ Modifier public final StatementExpression MethodInvocation MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object getRoot FormalParameter Modifier final ReferenceType Object handle LocalVariableDeclaration ReferenceType Object VariableDeclarator result MemberReference handle TryStatement IfStatement MethodInvocation ! MemberReference handle isAUMLElement BlockStatement ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject LocalVariableDeclaration ReferenceType Object VariableDeclarator container MethodInvocation MemberReference handle getModelElementContainer WhileStatement BinaryOperation != MemberReference container Literal null BlockStatement StatementExpression Assignment MemberReference result MemberReference container = StatementExpression Assignment MemberReference container MethodInvocation MemberReference result getModelElementContainer = CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType List getOutEdges FormalParameter ReferenceType Object port ReturnStatement MemberReference Collections EMPTY_LIST	1
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation MethodInvocation MemberReference f setFilled getBigPort	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object objectFlowState FormalParameter ReferenceType Object parameter StatementExpression MethodInvocation impl MemberReference objectFlowState MemberReference parameter	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object object IfStatement BinaryOperation instanceof MemberReference object ReferenceType UMLDeploymentDiagram BlockStatement ReturnStatement ClassCreator ReferenceType ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigJoinState VariableDeclarator figClone Cast ReferenceType FigJoinState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone head Cast ReferenceType FigRect MethodInvocation it next = ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator report ClassCreator ReferenceType StringBuffer Literal 500 LocalVariableDeclaration BasicType boolean VariableDeclarator faultFixed DoStatement MemberReference faultFixed BlockStatement StatementExpression Assignment MemberReference faultFixed Literal false = LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator figs ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Fig MethodInvocation MethodInvocation getContentsNoEdges getLayer ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MemberReference figs BlockStatement IfStatement MethodInvocation MemberReference f MemberReference report repairFig BlockStatement StatementExpression Assignment MemberReference faultFixed Literal true = StatementExpression Assignment MemberReference figs ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Fig MethodInvocation MethodInvocation getContentsEdgesOnly getLayer = ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MemberReference figs BlockStatement IfStatement MethodInvocation MemberReference f MemberReference report repairFig BlockStatement StatementExpression Assignment MemberReference faultFixed Literal true = ReturnStatement MethodInvocation report toString	1
MethodDeclaration FormalParameter ReferenceType NotationProvider IfStatement BinaryOperation != MemberReference notationProvider Literal null BlockStatement StatementExpression MethodInvocation notationProvider StatementExpression Assignment This MemberReference notationProvider MemberReference =	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal "profile"	1
MethodDeclaration Modifier public FormalParameter ReferenceType DiagramSettings StatementExpression Assignment MemberReference settings MemberReference = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator res ClassCreator ReferenceType StringBuffer Literal 100 StatementExpression MethodInvocation res MethodInvocation Literal " {\n" append MethodInvocation MethodInvocation getName getClass append LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator itemList MethodInvocation SynchronizedStatement MemberReference itemList ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference itemList BlockStatement StatementExpression MethodInvocation res MethodInvocation MethodInvocation item toString append MethodInvocation Literal "\n" append Literal " " append StatementExpression MethodInvocation res Literal " }" append ReturnStatement MethodInvocation res toString	1
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation head MemberReference w setLineWidth	0
MethodDeclaration Modifier private getContents FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType ModelElement results FormalParameter Modifier final ReferenceType Object modelelement IfStatement BinaryOperation instanceof MemberReference modelelement ReferenceType UmlPackage BlockStatement StatementExpression MethodInvocation MemberReference results Cast ReferenceType UmlPackage MemberReference modelelement getContents ReturnStatement IfStatement BinaryOperation instanceof MemberReference modelelement ReferenceType Namespace BlockStatement StatementExpression MethodInvocation MemberReference results Cast ReferenceType Namespace MemberReference modelelement getContents ReturnStatement IfStatement BinaryOperation instanceof MemberReference modelelement ReferenceType BlockStatement StatementExpression MethodInvocation MemberReference results Cast ReferenceType MemberReference modelelement getContents ReturnStatement IfStatement BinaryOperation == MemberReference modelelement Literal null BlockStatement ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Unsupported element type " MemberReference modelelement	0
MethodDeclaration Modifier public Annotation Override BasicType int hashCode LocalVariableDeclaration BasicType int VariableDeclarator code Literal 0 StatementExpression Assignment MemberReference code MethodInvocation MethodInvocation hashCode += IfStatement BinaryOperation != MethodInvocation getPoster Literal null BlockStatement StatementExpression Assignment MemberReference code MethodInvocation MethodInvocation hashCode getPoster += ReturnStatement MemberReference code	0
MethodDeclaration Modifier public StatementExpression MemberReference ++	0
MethodDeclaration Modifier public synchronized redo LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator command MethodInvocation pop StatementExpression MethodInvocation command execute StatementExpression MethodInvocation undoStack MemberReference command push	0
MethodDeclaration Modifier public setLanguage FormalParameter ReferenceType String lang LocalVariableDeclaration ReferenceType Object VariableDeclarator expression MethodInvocation getExpression LocalVariableDeclaration BasicType boolean VariableDeclarator mustChange Literal true IfStatement BinaryOperation != MemberReference expression Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator oldValue MethodInvocation Model MethodInvocation MemberReference expression getLanguage IfStatement BinaryOperation && BinaryOperation != MemberReference oldValue Literal null MethodInvocation oldValue MemberReference lang equals BlockStatement StatementExpression Assignment MemberReference mustChange Literal false = IfStatement MemberReference mustChange BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator body MemberReference EMPTYSTRING IfStatement BinaryOperation && BinaryOperation != MemberReference expression Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference expression getBody Literal null BlockStatement StatementExpression Assignment MemberReference body MethodInvocation Model MethodInvocation MemberReference expression getBody = StatementExpression MethodInvocation MemberReference lang MemberReference body	0
MethodDeclaration Modifier public ReferenceType getCommonBehaviorHelper IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This = ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object o ReturnStatement MethodInvocation impl MemberReference o	0
MethodDeclaration Modifier private targetChanged FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference target ReferenceType ArgoDiagram BlockStatement StatementExpression MethodInvocation Literal null Cast ReferenceType ArgoDiagram MemberReference target StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator Literal null StatementExpression Assignment MemberReference target MethodInvocation TargetManager MethodInvocation getTarget getInstance = IfStatement BinaryOperation instanceof MemberReference target ReferenceType ArgoDiagram BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType ArgoDiagram MemberReference target = IfStatement MethodInvocation Model MethodInvocation MemberReference target isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference MemberReference target = IfStatement MethodInvocation Model MethodInvocation MemberReference target isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade = BlockStatement StatementExpression Assignment MemberReference MethodInvocation p getRoot = StatementExpression MethodInvocation p MemberReference IfStatement BinaryOperation instanceof MemberReference target ReferenceType ArgoDiagram BlockStatement StatementExpression MethodInvocation p Cast ReferenceType ArgoDiagram MemberReference target	0
MethodDeclaration Modifier public setCurrentDiagram FormalParameter ReferenceType ArgoDiagram diagram IfStatement BinaryOperation == MemberReference diagram Literal null BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "you can't select a null StatementExpression Assignment MemberReference currentGM Cast ReferenceType MethodInvocation diagram getGraphModel = StatementExpression Assignment MemberReference currentLayer MethodInvocation diagram getLayer = StatementExpression Assignment MemberReference MemberReference diagram = StatementExpression Assignment MemberReference currentProject MethodInvocation diagram getProject = StatementExpression MethodInvocation MemberReference diagram	1
MethodDeclaration Modifier public BasicType boolean isUseGuillemets IfStatement MemberReference useGuillemetsSet BlockStatement ReturnStatement MemberReference useGuillemets IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement ReturnStatement MethodInvocation parent isUseGuillemets ReturnStatement MethodInvocation MethodInvocation isUseGuillemets getDefaultSettings	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier protected updateCompartment FormalParameter ReferenceType Object metaType LocalVariableDeclaration ReferenceType FigCompartment VariableDeclarator fc MethodInvocation MemberReference metaType IfStatement MethodInvocation ! fc isVisible BlockStatement ReturnStatement StatementExpression MethodInvocation fc populate StatementExpression MethodInvocation MethodInvocation getBounds setBounds	1
MethodDeclaration Modifier private fixup FormalParameter ReferenceType Object owner IfStatement MethodInvocation Model MethodInvocation MemberReference owner isAGeneralization getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference owner getSpecific getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator superType MethodInvocation Model MethodInvocation MemberReference owner getGeneral getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference superType Literal null BlockStatement StatementExpression MethodInvocation removeFromDiagram ReturnStatement StatementExpression MethodInvocation IfStatement BinaryOperation != MemberReference owner Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal has an illegal owner of " MethodInvocation owner MethodInvocation getName getClass	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object messageSort StatementExpression MethodInvocation impl MemberReference handle MemberReference messageSort	0
MethodDeclaration Modifier public final initializer RecognitionException TokenStreamException IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m beginInitializer BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID StringLiteral LITERAL__declspec LITERAL___declspec LPAREN LITERAL_const_cast LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void OPERATOR LITERAL_this LITERAL_true LITERAL_false OCTALINT STAR AMPERSAND TILDE PLUS MINUS PLUSPLUS MINUSMINUS LITERAL_sizeof SCOPE LITERAL_dynamic_cast LITERAL_static_cast LITERAL_reinterpret_cast NOT LITERAL_new LITERAL_delete DECIMALINT HEXADECIMALINT CharLiteral FLOATONE FLOATTWO BlockStatement StatementExpression MethodInvocation remainder_expression BreakStatement SwitchStatementCase LCURLY BlockStatement StatementExpression MethodInvocation MemberReference LCURLY match StatementExpression MethodInvocation initializer BlockStatement DoStatement _loop162 Literal true BlockStatement IfStatement BinaryOperation == MethodInvocation Literal 1 LA MemberReference COMMA BlockStatement StatementExpression MethodInvocation MemberReference COMMA match StatementExpression MethodInvocation initializer BlockStatement BreakStatement _loop162 StatementExpression MethodInvocation MemberReference RCURLY match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m	1
MethodDeclaration Modifier protected ReferenceType Object getNewNode FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getCommonBehaviorFactory	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference target isAInterface getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MemberReference target LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference getNamespace getFacade MemberReference addOwnedElement getCoreHelper StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference setTarget getInstance StatementExpression SuperMethodInvocation MemberReference e actionPerformed	0
MethodDeclaration Modifier private ForStatement EnhancedForControl VariableDeclaration ReferenceType JMenu VariableDeclarator menu MemberReference BlockStatement StatementExpression MethodInvocation MemberReference menu add	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation chooser ClassCreator ReferenceType File MemberReference fileName setSelectedFile	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType getIcon ReturnStatement MemberReference icon	0
MethodDeclaration Modifier private static ReferenceType URL projectUrl FormalParameter Modifier final ReferenceType String theProjectName FormalParameter ReferenceType URL urlToOpen LocalVariableDeclaration ReferenceType File VariableDeclarator ClassCreator ReferenceType File MemberReference theProjectName IfStatement MethodInvocation ! exists BlockStatement StatementExpression MethodInvocation System.err BinaryOperation + BinaryOperation + Literal "Project file '" MemberReference Literal "' does not exist." println BlockStatement TryStatement StatementExpression Assignment MemberReference urlToOpen MethodInvocation Util MemberReference fileToURL = CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG Literal "Exception opening project in MemberReference e error ReturnStatement MemberReference urlToOpen	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation ! Model MethodInvocation MemberReference target isATransition getFacade BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference target setTarget StatementExpression SuperMethodInvocation MemberReference e actionPerformed	0
MethodDeclaration Modifier protected FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameSize MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator bodySize MethodInvocation MethodInvocation getMinimumSize getBodyText StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MethodInvocation getLeftMargin BinaryOperation + MemberReference y MethodInvocation getTopMargin BinaryOperation - BinaryOperation - MemberReference w MethodInvocation getLeftMargin MethodInvocation getRightMargin MemberReference nameSize height setBounds getNameFig IfStatement BinaryOperation > MethodInvocation MethodInvocation getText MethodInvocation length getBodyText Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MethodInvocation getLeftMargin BinaryOperation + BinaryOperation + MemberReference y MethodInvocation getTopMargin MemberReference nameSize height MemberReference bodySize width MemberReference bodySize height setBounds getBodyText BlockStatement StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MethodInvocation getLeftMargin BinaryOperation + BinaryOperation + MemberReference y MethodInvocation getTopMargin MemberReference nameSize height MemberReference bodySize width Literal 1 setBounds getBodyText StatementExpression MethodInvocation regionCompartment BinaryOperation + MemberReference x MethodInvocation getLeftMargin BinaryOperation + MethodInvocation MethodInvocation getY getBodyText MethodInvocation MethodInvocation getHeight getBodyText BinaryOperation - BinaryOperation - MemberReference w MethodInvocation getLeftMargin MethodInvocation getRightMargin BinaryOperation - BinaryOperation - BinaryOperation - BinaryOperation - MemberReference h MethodInvocation getTopMargin MethodInvocation getBottomMargin MethodInvocation MethodInvocation getHeight getNameFig MethodInvocation MethodInvocation getHeight getBodyText setBounds StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation	0
MethodDeclaration Modifier private FormalParameter ReferenceType member StatementExpression MethodInvocation LOG BinaryOperation + Literal "Setting todoList to " MemberReference member info StatementExpression Assignment MemberReference todoList MemberReference member =	1
MethodDeclaration Modifier public BasicType boolean isANamespace FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Namespace	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated ReferenceType Object getModel IfStatement BinaryOperation != MethodInvocation models size Literal 1 BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation models MethodInvocation next iterator	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean canAddEdge FormalParameter ReferenceType Object edge IfStatement SuperMethodInvocation MemberReference edge canAddEdge BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation MemberReference edge containsEdge BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator end0 Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator end1 Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge isATransition getFacade BlockStatement StatementExpression Assignment MemberReference end0 MethodInvocation Model MethodInvocation MemberReference edge getSource getFacade = StatementExpression Assignment MemberReference end1 MethodInvocation Model MethodInvocation MemberReference edge getTarget getFacade = IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference end0 Cast ReferenceType CommentEdge MemberReference edge = StatementExpression Assignment MemberReference end1 Cast ReferenceType CommentEdge MemberReference edge = BlockStatement ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation == MemberReference end0 Literal null BinaryOperation == MemberReference end1 Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Edge rejected. Its ends are not attached to anything" error ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation ! MemberReference end0 containsNode MethodInvocation ! MemberReference end0 containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Edge rejected. Its source end is attached to " MemberReference end0 Literal " but this is not in the graph model" error ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation ! MemberReference end1 containsNode MethodInvocation ! MemberReference end1 containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Edge rejected. Its destination end is attached to " MemberReference end1 Literal " but this is not in the graph model" error ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public flushModelEvents WhileStatement Literal true BlockStatement SynchronizedStatement MemberReference IfStatement BinaryOperation || BinaryOperation <= MemberReference Literal 0 MethodInvocation Thread MethodInvocation MemberReference eventThread equals currentThread BlockStatement ReturnStatement TryStatement StatementExpression MethodInvocation wait CatchClause CatchClauseParameter InterruptedException e StatementExpression MethodInvocation LOG Literal "Interrupted while waiting in error	1
MethodDeclaration Modifier private FormalParameter ReferenceType Object handle FormalParameter ReferenceType Multiplicity arg LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator Cast ReferenceType Multiplicity MethodInvocation Model MethodInvocation MemberReference handle getMultiplicity getFacade IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole BlockStatement StatementExpression Cast ReferenceType ClassifierRole MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType StructuralFeature BlockStatement StatementExpression Cast ReferenceType StructuralFeature MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle IfStatement BinaryOperation != MemberReference Literal null BlockStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal multiplicity of " MemberReference handle Literal " will be MemberReference arg debug StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getAssociationClass getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier private StatementExpression This MethodInvocation Literal 299 Literal 400 setSize StatementExpression This MethodInvocation MethodInvocation Translator Literal localize setTitle StatementExpression This MethodInvocation MethodInvocation setContentPane StatementExpression MethodInvocation	0
MethodDeclaration Modifier public final template_argument RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType BitSet VariableDeclarator auxBitSet Cast ReferenceType java ReferenceType util ReferenceType BitSet MethodInvocation CPPvariables.QI_TYPE clone StatementExpression MethodInvocation auxBitSet MemberReference CPPvariables QI_CTOR or IfStatement BinaryOperation && BinaryOperation && MethodInvocation _tokenSet_11 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_57 MethodInvocation Literal 2 LA member BinaryOperation || BinaryOperation || BinaryOperation == MethodInvocation Literal 1 LA MemberReference SCOPE BinaryOperation == MethodInvocation Literal 1 LA MemberReference ID MethodInvocation MemberReference auxBitSet Literal 0 qualifiedItemIsOneOf BlockStatement StatementExpression MethodInvocation type_name IfStatement BinaryOperation && MethodInvocation _tokenSet_42 MethodInvocation Literal 1 LA member MethodInvocation MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation shift_expression BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType KeyboardFocusManager VariableDeclarator focusManager MethodInvocation KeyboardFocusManager getCurrentKeyboardFocusManager LocalVariableDeclaration ReferenceType Component VariableDeclarator focusOwner MethodInvocation focusManager getFocusOwner IfStatement BinaryOperation instanceof MemberReference focusOwner ReferenceType FigTextEditor BlockStatement StatementExpression Cast ReferenceType FigTextEditor MemberReference focusOwner IfStatement BinaryOperation instanceof MemberReference focusOwner ReferenceType JTable BlockStatement LocalVariableDeclaration ReferenceType JTable VariableDeclarator table Cast ReferenceType JTable MemberReference focusOwner IfStatement MethodInvocation table BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ce MethodInvocation table getCellEditor IfStatement BinaryOperation != MemberReference ce Literal null BlockStatement StatementExpression MethodInvocation ce LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator targets MethodInvocation TargetManager MethodInvocation getTargets MethodInvocation toArray getInstance StatementExpression MethodInvocation TargetManager MethodInvocation Literal null setTarget getInstance LocalVariableDeclaration ReferenceType Object VariableDeclarator target Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference targets length Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement StatementExpression Assignment MemberReference target MemberReference ArraySelector MemberReference i targets = TryStatement IfStatement MethodInvocation MemberReference target sureRemove BlockStatement IfStatement BinaryOperation instanceof MemberReference target ReferenceType Fig BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator owner Cast ReferenceType Fig MemberReference target IfStatement BinaryOperation != MemberReference owner Literal null BlockStatement StatementExpression Assignment MemberReference target MemberReference owner = StatementExpression MethodInvocation p MemberReference target moveToTrash CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG Literal "Model element deleted twice - ignoring 2nd delete" debug	1
MethodDeclaration Modifier public Annotation Override BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference target ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference target Cast ReferenceType Fig MemberReference target = ReturnStatement MethodInvocation Model MethodInvocation MemberReference target isAModelElement getFacade	0
MethodDeclaration Modifier static protected BasicType boolean sureRemoveModelElement FormalParameter ReferenceType Object me LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation p MemberReference me LocalVariableDeclaration BasicType boolean VariableDeclarator doAsk Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator confirmStr Literal "" IfStatement BinaryOperation > MemberReference count Literal 1 BlockStatement StatementExpression Assignment MemberReference confirmStr MethodInvocation Translator Literal localize += StatementExpression Assignment MemberReference doAsk Literal true = IfStatement MemberReference ! doAsk BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference me getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null MethodInvocation name Literal "" equals BlockStatement StatementExpression Assignment MemberReference name MethodInvocation Translator Literal "optionpane.remove-from-model-anon-element-name" localize = StatementExpression Assignment MemberReference confirmStr MethodInvocation MessageFormat MethodInvocation Translator Literal "optionpane.remove-from-model-confirm-delete" localize ArrayCreator ReferenceType Object ArrayInitializer MemberReference name MemberReference confirmStr format = LocalVariableDeclaration BasicType int VariableDeclarator response MethodInvocation JOptionPane MethodInvocation ArgoFrame getFrame MemberReference confirmStr MethodInvocation Translator Literal "optionpane.remove-from-model-confirm-delete-title" localize MemberReference JOptionPane YES_NO_OPTION showConfirmDialog ReturnStatement BinaryOperation == MemberReference response MemberReference JOptionPane YES_OPTION	1
MethodDeclaration Modifier protected ReferenceType String getJavaName FormalParameter ReferenceType Object mPackage LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MemberReference mPackage getNamespace getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModel getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference mPackage getName getFacade IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation MemberReference parent getJavaName Literal "." MethodInvocation Model MethodInvocation MemberReference mPackage getName getFacade BlockStatement ReturnStatement Literal ""	0
MethodDeclaration Modifier public ReferenceType Object getValueAt FormalParameter BasicType int row FormalParameter BasicType int col LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation classes MemberReference row get IfStatement BinaryOperation == MemberReference col MethodInvocation getLanguagesCount BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference cls getName getFacade IfStatement BinaryOperation > MethodInvocation name length Literal 0 BlockStatement ReturnStatement MemberReference name ReturnStatement Literal IfStatement BinaryOperation && BinaryOperation >= MemberReference col Literal 0 BinaryOperation < MemberReference col MethodInvocation getLanguagesCount BlockStatement IfStatement MemberReference ArraySelector MemberReference col MethodInvocation MemberReference cls contains checked BlockStatement ReturnStatement MemberReference Boolean TRUE ReturnStatement MemberReference Boolean FALSE BlockStatement ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference row Literal " MemberReference col	0
MethodDeclaration Modifier protected Annotation Override ReferenceType String getInstructions FormalParameter BasicType int index ReturnStatement MemberReference ArraySelector BinaryOperation - MemberReference index MemberReference BASE instructions	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier static ReferenceType FormalParameter ReferenceType String k1 FormalParameter ReferenceType String k2 FormalParameter ReferenceType icon LocalVariableDeclaration ReferenceType VariableDeclarator Literal null StatementExpression Assignment MemberReference MethodInvocation MethodInvocation MemberReference k1 MemberReference k2 = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MemberReference k1 MemberReference k2 MemberReference icon = StatementExpression MethodInvocation MemberReference add StatementExpression MethodInvocation MemberReference ArgoEventTypes MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getContainer getFacade addElement	0
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement ClassReference ReferenceType Class	0
MethodDeclaration Modifier private SynchronizedStatement MemberReference StatementExpression MemberReference -- IfStatement BinaryOperation <= MemberReference Literal 0 BlockStatement StatementExpression MethodInvocation notifyAll	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference dd computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier public ReferenceType Object getOwner IfStatement BinaryOperation instanceof MethodInvocation getGraphModel ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "Incorrect graph model of " MethodInvocation MethodInvocation getClass MethodInvocation getName getGraphModel LocalVariableDeclaration ReferenceType VariableDeclarator gm Cast ReferenceType MethodInvocation getGraphModel ReturnStatement MethodInvocation gm	0
MethodDeclaration Modifier public static ReferenceType GraphChangeAdapter getInstance ReturnStatement MemberReference INSTANCE	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal - 8070450533322321024L Literal Literal 16128L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier protected IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator association MethodInvocation Model MethodInvocation MethodInvocation getOwner getAssociation getFacade IfStatement BinaryOperation != MemberReference association Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation Model MethodInvocation MemberReference association getName getFacade = IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference Literal "" = StatementExpression MethodInvocation MethodInvocation MemberReference setText getNameFig StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation getBounds setBounds	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier private ReferenceType String IfStatement MethodInvocation BlockStatement ReturnStatement BinaryOperation + Literal " MemberReference label BlockStatement ReturnStatement BinaryOperation + Literal "Can't " MemberReference label	0
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getInstance IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ReturnStatement Literal false ReturnStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference target isAClassifier getFacade MethodInvocation Model MethodInvocation MemberReference target isAFeature getFacade	0
MethodDeclaration Modifier public BasicType boolean isComposite FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ReturnStatement MethodInvocation Cast ReferenceType AssociationEnd MemberReference handle equals CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType ModuleInterface TypeArgument ReferenceType VariableDeclarator entry MethodInvocation MemberReference name IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator status MethodInvocation entry getValue IfStatement BinaryOperation == MemberReference status Literal null BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation status isSelected ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Object getExtend ReturnStatement ClassReference ReferenceType Extend	0
MethodDeclaration Modifier public ReferenceType String getText ReturnStatement MethodInvocation text toString	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setLineColor	0
MethodDeclaration Modifier public static ReferenceType String localize FormalParameter ReferenceType String key IfStatement MemberReference ! initialized BlockStatement StatementExpression MethodInvocation Literal "en" init IfStatement BinaryOperation == MemberReference key Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "null" LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation MemberReference key getName IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ReturnStatement MethodInvocation Localizer Literal MemberReference key localize StatementExpression MethodInvocation MemberReference name loadBundle LocalVariableDeclaration ReferenceType ResourceBundle VariableDeclarator bundle MethodInvocation bundles MemberReference name get IfStatement BinaryOperation == MemberReference bundle Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal (" MemberReference name Literal ") for resource " MemberReference key Literal " not found." debug ReturnStatement MemberReference key TryStatement ReturnStatement MethodInvocation bundle MemberReference key getString CatchClause CatchClauseParameter MissingResourceException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Resource " MemberReference key Literal " not found." debug ReturnStatement MemberReference key	1
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setLineColor StatementExpression MethodInvocation MemberReference col setLineColor StatementExpression MethodInvocation MemberReference col setLineColor StatementExpression MethodInvocation circle1 MemberReference col setLineColor StatementExpression MethodInvocation circle2 MemberReference col setLineColor StatementExpression MethodInvocation MemberReference col setLineColor	0
MethodDeclaration Modifier private synchronized schedule IfStatement MemberReference BlockStatement ReturnStatement StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation This invokeLater	0
MethodDeclaration Modifier public StatementExpression MethodInvocation removeAllItems LocalVariableDeclaration ReferenceType ListIterator VariableDeclarator iterator MethodInvocation Notation MethodInvocation listIterator WhileStatement MethodInvocation iterator hasNext BlockStatement TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation iterator next StatementExpression MethodInvocation MemberReference addItem CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG Literal "Unexpected exception" MemberReference e error StatementExpression MethodInvocation Literal true setVisible StatementExpression MethodInvocation	0
MethodDeclaration Modifier private BasicType int count2ndPassFiles FormalParameter ReferenceType Collection buffer LocalVariableDeclaration BasicType int VariableDeclarator nfiles Literal 0 ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation secondPassFiles iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator next MethodInvocation i next StatementExpression Assignment MemberReference nfiles TernaryExpression BinaryOperation instanceof MemberReference next ReferenceType Collection BinaryOperation - Cast ReferenceType Collection MemberReference next Literal 1 Literal 1 += ReturnStatement MemberReference nfiles	1
MethodDeclaration BasicType int getTopMargin ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getDescription ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object trans ReturnStatement MethodInvocation impl MemberReference trans getSource	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean isOK ReturnStatement MemberReference ok	0
MethodDeclaration Modifier static ReferenceType create FormalParameter ReferenceType DefaultListModel model IfStatement BinaryOperation instanceof MemberReference model ReferenceType UMLModelElementListModel BlockStatement ReturnStatement ClassCreator ReferenceType OldScrollList MemberReference model IfStatement BinaryOperation instanceof MemberReference model ReferenceType org ReferenceType argouml ReferenceType core ReferenceType propertypanels ReferenceType ui ReferenceType SimpleListModel BlockStatement ReturnStatement ClassCreator ReferenceType Cast ReferenceType org ReferenceType argouml ReferenceType core ReferenceType propertypanels ReferenceType ui ReferenceType SimpleListModel MemberReference model ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public act FormalParameter ReferenceType File f StatementExpression MethodInvocation f delete	1
MethodDeclaration Modifier private ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator gbc MethodInvocation Literal false Literal true Literal false StatementExpression Assignment MemberReference gbc MemberReference REMAINDER = StatementExpression Assignment MemberReference gbc weighty Literal 1.0 = ReturnStatement MemberReference gbc	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation file MethodInvocation toLowerCase getName ReturnStatement BinaryOperation || MethodInvocation file isDirectory BinaryOperation && MethodInvocation file isFile BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation s Literal ".xmi" endsWith MethodInvocation s Literal ".xml" endsWith MethodInvocation s Literal ".uml" endsWith MethodInvocation s Literal ".xmi.zip" endsWith MethodInvocation s Literal ".xml.zip" endsWith	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e IfStatement MethodInvocation ! BlockStatement ReturnStatement StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance LocalVariableDeclaration ReferenceType Object VariableDeclarator guard MethodInvocation Model MethodInvocation MemberReference target getGuard getFacade IfStatement BinaryOperation == MemberReference guard Literal null BlockStatement StatementExpression Assignment MemberReference guard MethodInvocation Model MethodInvocation MemberReference target getStateMachinesFactory = StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference guard setTarget getInstance	0
MethodDeclaration FormalParameter ReferenceType Object operation ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator possibleDuplicate MethodInvocation MethodInvocation MethodInvocation getOwner getOperations getFacade BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference operation MemberReference possibleDuplicate MethodInvocation MethodInvocation MemberReference operation getName MethodInvocation MethodInvocation MethodInvocation MemberReference possibleDuplicate getName getFacade equals getFacade BlockStatement IfStatement MethodInvocation MemberReference operation MemberReference possibleDuplicate BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getOwner MemberReference operation getCoreHelper	1
MethodDeclaration Modifier public FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator arg MethodInvocation e IfStatement BinaryOperation instanceof MemberReference source ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference source Cast ReferenceType Fig MemberReference source = IfStatement BinaryOperation instanceof MemberReference arg ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference arg Cast ReferenceType Fig MemberReference arg = StatementExpression MethodInvocation Model MethodInvocation MemberReference source MemberReference arg getDiagramInterchangeModel	0
MethodDeclaration Modifier private FormalParameter ReferenceType Component aComponent StatementExpression Assignment MemberReference activeComponent MemberReference aComponent =	0
MethodDeclaration Modifier public ReferenceType CommentEdge FormalParameter ReferenceType Object from FormalParameter ReferenceType Object to IfStatement BinaryOperation || BinaryOperation == MemberReference from Literal null BinaryOperation == MemberReference to Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal == null " Literal "or == null" LocalVariableDeclaration ReferenceType Object VariableDeclarator Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator annotatedElement Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference from isAComment getFacade BlockStatement StatementExpression Assignment MemberReference MemberReference from = StatementExpression Assignment MemberReference annotatedElement MemberReference to = BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference to isAComment getFacade BlockStatement StatementExpression Assignment MemberReference MemberReference to = StatementExpression Assignment MemberReference annotatedElement MemberReference from = BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType CommentEdge VariableDeclarator connection ClassCreator ReferenceType CommentEdge MemberReference from MemberReference to StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference annotatedElement getCoreHelper ReturnStatement MemberReference connection	0
MethodDeclaration Modifier public final mCOLON FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference COLON = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal ':' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType Collection getNewElements ReturnStatement MemberReference newElements	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType FigText StatementExpression MethodInvocation Literal true StatementExpression SuperMethodInvocation MemberReference StatementExpression MethodInvocation Literal false	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation cover isFilled	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent arg0 IfStatement BinaryOperation > MemberReference currentIndex Literal 0 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tabValues Cast ReferenceType String MethodInvocation model getValue LocalVariableDeclaration ReferenceType String VariableDeclarator savTabValues ArrayCreator ReferenceType String Literal 2 StatementExpression MethodInvocation System MemberReference tabValues BinaryOperation * MemberReference currentIndex Literal 2 MemberReference savTabValues Literal 0 Literal 2 arraycopy StatementExpression Assignment MemberReference ArraySelector BinaryOperation * MemberReference currentIndex Literal 2 tabValues MemberReference ArraySelector BinaryOperation - BinaryOperation * MemberReference currentIndex Literal 2 Literal 2 tabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * MemberReference currentIndex Literal 2 Literal 1 tabValues MemberReference ArraySelector BinaryOperation - BinaryOperation * MemberReference currentIndex Literal 2 Literal 1 tabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation * BinaryOperation - MemberReference currentIndex Literal 1 Literal 2 tabValues MemberReference ArraySelector Literal 0 savTabValues = StatementExpression Assignment MemberReference ArraySelector BinaryOperation + BinaryOperation * BinaryOperation - MemberReference currentIndex Literal 1 Literal 2 Literal 1 tabValues MemberReference ArraySelector Literal 1 savTabValues = StatementExpression MethodInvocation model MemberReference tabValues setValue StatementExpression Assignment MemberReference currentIndex BinaryOperation - MemberReference currentIndex Literal 1 = StatementExpression MethodInvocation updateFields	0
MethodDeclaration Modifier public ReferenceType CompositeState buildCompositeState FormalParameter ReferenceType Object IfStatement BinaryOperation instanceof MemberReference ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType CompositeState VariableDeclarator state MethodInvocation StatementExpression MethodInvocation state Literal false StatementExpression MethodInvocation state Cast ReferenceType CompositeState MemberReference ReturnStatement MemberReference state ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument must be a	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType ArgoDiagram VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType ArgoDiagram ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation p getDiagramList BlockStatement IfStatement BinaryOperation == MethodInvocation diagram getNamespace MemberReference parent BlockStatement StatementExpression MethodInvocation ret MemberReference diagram add ReturnStatement MemberReference ret ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object end1 FormalParameter ReferenceType Object end2 IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference end1 Literal null BinaryOperation == MemberReference end2 Literal null BinaryOperation instanceof MemberReference end1 ReferenceType Classifier BinaryOperation instanceof MemberReference end2 ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal one of the arguments was null" LocalVariableDeclaration Modifier final ReferenceType Classifier VariableDeclarator Cast ReferenceType Classifier MemberReference end1 LocalVariableDeclaration Modifier final ReferenceType Classifier VariableDeclarator Cast ReferenceType Classifier MemberReference end2 LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation createAssociationClass StatementExpression MethodInvocation MethodInvocation getNamespace setNamespace StatementExpression MethodInvocation Literal "" setName StatementExpression MethodInvocation Literal false setAbstract StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation Literal false setRoot StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation MemberReference setVisibility StatementExpression MethodInvocation MemberReference Literal null MemberReference Literal null Literal null Literal true Literal null Literal null Literal null Literal null Literal null buildAssociationEnd StatementExpression MethodInvocation MemberReference Literal null MemberReference Literal null Literal null Literal true Literal null Literal null Literal null Literal null Literal null buildAssociationEnd ReturnStatement MemberReference	0
MethodDeclaration Modifier public addDocumentListener FormalParameter ReferenceType listener StatementExpression MethodInvocation document MemberReference listener addDocumentListener	0
MethodDeclaration Modifier public Annotation Override setVisible FormalParameter BasicType boolean show IfStatement MemberReference show BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation toFront StatementExpression SuperMethodInvocation MemberReference show setVisible	0
MethodDeclaration Modifier public ReferenceType Node createNode LocalVariableDeclaration ReferenceType Node VariableDeclarator myNode MethodInvocation MethodInvocation getNode MethodInvocation createNode getCorePackage StatementExpression SuperMethodInvocation MemberReference myNode ReturnStatement MemberReference myNode	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal - Literal 4611686018410610751L Literal 16128L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public setName FormalParameter ReferenceType String n PropertyVetoException StatementExpression SuperMethodInvocation MemberReference n setName StatementExpression MethodInvocation	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae IfStatement MethodInvocation ae MethodInvocation Literal "comboBoxChanged" equals getActionCommand BlockStatement LocalVariableDeclaration ReferenceType JComboBox VariableDeclarator lst Cast ReferenceType JComboBox MethodInvocation ae getSource LocalVariableDeclaration ReferenceType String VariableDeclarator sTypeVS Cast ReferenceType String MethodInvocation lst getSelectedItem StatementExpression MethodInvocation model MemberReference sTypeVS StatementExpression MethodInvocation MemberReference sTypeVS createField	1
MethodDeclaration Modifier public run StatementExpression MethodInvocation MethodInvocation MethodInvocation add	0
MethodDeclaration Modifier public setVisibility FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType Object visibility IfStatement BinaryOperation instanceof MemberReference handle ReferenceType NamedElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of IfStatement BinaryOperation instanceof MemberReference visibility ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of LocalVariableDeclaration Modifier final ReferenceType NamedElement VariableDeclarator Cast ReferenceType NamedElement MemberReference handle LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression MethodInvocation Cast ReferenceType MemberReference visibility setVisibility StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Set the visibility to the named element #" MemberReference visibility MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier public setAggregation FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "An association end was expected got " MemberReference handle IfStatement BinaryOperation instanceof MemberReference ReferenceType AggregationKind BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "An aggregation kind was expected got " MemberReference LocalVariableDeclaration ReferenceType AggregationKind VariableDeclarator ak Cast ReferenceType AggregationKind MemberReference LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator ae Cast ReferenceType AssociationEnd MemberReference handle IfStatement BinaryOperation || BinaryOperation == MemberReference ak MemberReference AggregationKindEnum BinaryOperation < MethodInvocation ae MethodInvocation getConnection MethodInvocation size getAssociation Literal 3 BlockStatement StatementExpression MethodInvocation ae MemberReference ak setAggregation BlockStatement StatementExpression MethodInvocation ae MemberReference AggregationKindEnum setAggregation IfStatement BinaryOperation || BinaryOperation == MemberReference ak MemberReference AggregationKindEnum BinaryOperation == MemberReference ak MemberReference AggregationKindEnum BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end MethodInvocation ae MethodInvocation getConnection getAssociation BlockStatement IfStatement BinaryOperation && MethodInvocation ! end MemberReference ae equals BinaryOperation != MethodInvocation end MemberReference AggregationKindEnum BlockStatement StatementExpression MethodInvocation end MemberReference AggregationKindEnum setAggregation ReturnStatement	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Object operation FormalParameter ReferenceType String text ParseException IfStatement BinaryOperation || BinaryOperation == MemberReference classifier Literal null BinaryOperation == MemberReference operation Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType ParseException VariableDeclarator pex Literal null LocalVariableDeclaration BasicType int VariableDeclarator start Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator end MethodInvocation NotationUtilityUml MemberReference text MemberReference start indexOfNextCheckedSemicolon LocalVariableDeclaration ReferenceType Project VariableDeclarator currentProject MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation == MemberReference end Literal - 1 BlockStatement StatementExpression MethodInvocation currentProject MemberReference operation moveToTrash ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation text MethodInvocation trim MemberReference start MemberReference end substring IfStatement BinaryOperation == MethodInvocation s length Literal 0 BlockStatement StatementExpression MethodInvocation currentProject MemberReference operation moveToTrash ReturnStatement StatementExpression MethodInvocation MemberReference s MemberReference operation parseOperation LocalVariableDeclaration BasicType int VariableDeclarator i MethodInvocation Model MethodInvocation MemberReference classifier getFeatures MethodInvocation MemberReference operation indexOf getFacade StatementExpression Assignment MemberReference start BinaryOperation + MemberReference end Literal 1 = StatementExpression Assignment MemberReference end MethodInvocation NotationUtilityUml MemberReference text MemberReference start indexOfNextCheckedSemicolon = WhileStatement BinaryOperation && BinaryOperation > MemberReference end MemberReference start BinaryOperation <= MemberReference end MethodInvocation text length BlockStatement StatementExpression Assignment MemberReference s MethodInvocation text MethodInvocation trim MemberReference start MemberReference end substring = IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation currentProject getDefaultReturnType LocalVariableDeclaration ReferenceType Object VariableDeclarator newOp MethodInvocation Model MethodInvocation MemberReference classifier MemberReference returnType getCoreFactory IfStatement BinaryOperation != MemberReference newOp Literal null BlockStatement TryStatement StatementExpression MethodInvocation MemberReference s MemberReference newOp parseOperation IfStatement BinaryOperation != MemberReference i Literal - 1 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference classifier MemberReference ++ i MemberReference newOp getCoreHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference classifier MemberReference newOp getCoreHelper CatchClause CatchClauseParameter ParseException ex IfStatement BinaryOperation == MemberReference pex Literal null BlockStatement StatementExpression Assignment MemberReference pex MemberReference ex = StatementExpression Assignment MemberReference start BinaryOperation + MemberReference end Literal 1 = StatementExpression Assignment MemberReference end MethodInvocation NotationUtilityUml MemberReference text MemberReference start indexOfNextCheckedSemicolon = IfStatement BinaryOperation != MemberReference pex Literal null BlockStatement ThrowStatement MemberReference pex	1
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType NamedElement MemberReference handle	0
MethodDeclaration Modifier protected ReferenceType String getProperty ReturnStatement Cast ReferenceType String MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade	0
MethodDeclaration Modifier protected ReferenceType Object getNewNode FormalParameter BasicType int buttonCode LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent getNamespace getFacade ReturnStatement MethodInvocation Model MethodInvocation Literal "" MemberReference ns buildDataType getCoreFactory	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String s IfStatement MethodInvocation s Literal endsWith BlockStatement ReturnStatement MethodInvocation s Literal 0 BinaryOperation - MethodInvocation s length Literal 2 substring IfStatement MethodInvocation s Literal "/" endsWith BlockStatement ReturnStatement MethodInvocation s Literal 0 BinaryOperation - MethodInvocation s length Literal 1 substring BlockStatement ReturnStatement MemberReference s	0
MethodDeclaration Modifier private ReferenceType JScrollPane FormalParameter ReferenceType String text LocalVariableDeclaration ReferenceType VariableDeclarator a ClassCreator ReferenceType StatementExpression MethodInvocation a Literal false StatementExpression MethodInvocation a Literal true StatementExpression MethodInvocation a Literal true StatementExpression MethodInvocation a ClassCreator ReferenceType Insets MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX setMargin StatementExpression MethodInvocation a MemberReference text setText StatementExpression MethodInvocation a Literal 0 setCaretPosition ReturnStatement ClassCreator ReferenceType JScrollPane MemberReference a	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent IfStatement MethodInvocation ! isSelected BlockStatement StatementExpression MethodInvocation Literal false setSelected StatementExpression MethodInvocation Literal false setSelected	0
MethodDeclaration Modifier public setConnections FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection elems StatementExpression SuperMethodInvocation MemberReference handle MemberReference elems setConnections StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference org.eclipse.uml2.uml.PseudostateKind	0
MethodDeclaration Modifier public ReferenceType MessageSort IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType int columnCount ReturnStatement MemberReference numColumns	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation IfStatement BinaryOperation == MethodInvocation e getSource MemberReference BlockStatement StatementExpression MethodInvocation MethodInvocation ShortcutMgr MethodInvocation getText decodeKeyStroke StatementExpression MethodInvocation Literal true setEnabled StatementExpression MethodInvocation requestFocus IfStatement BinaryOperation == MethodInvocation e getSource MemberReference BlockStatement StatementExpression MethodInvocation MethodInvocation target getDefaultShortcut StatementExpression MethodInvocation Literal false setEnabled StatementExpression MethodInvocation MethodInvocation target getDefaultShortcut IfStatement BinaryOperation == MethodInvocation e getSource MemberReference BlockStatement StatementExpression MethodInvocation Literal null StatementExpression MethodInvocation Literal false setEnabled	1
MethodDeclaration Modifier public Annotation Override ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions IfStatement MethodInvocation Model MethodInvocation MethodInvocation getAction isACallAction getFacade BlockStatement LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator opMenu MethodInvocation buildOperationMenu LocalVariableDeclaration BasicType int VariableDeclarator index BinaryOperation - BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset Literal 1 IfStatement BinaryOperation < MemberReference index Literal 0 BlockStatement StatementExpression Assignment MemberReference index Literal 0 = StatementExpression MethodInvocation popUpActions MemberReference index ClassCreator ReferenceType JSeparator add StatementExpression MethodInvocation popUpActions MemberReference index MemberReference opMenu add ReturnStatement MemberReference popUpActions	1
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation MethodInvocation getTarget getResidentElements MethodInvocation iterator getFacade LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator list ClassCreator ReferenceType ArrayList WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MethodInvocation it next getFacade add ReturnStatement MemberReference list	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigStubState VariableDeclarator figClone Cast ReferenceType FigStubState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone Cast ReferenceType FigText MethodInvocation it next = StatementExpression Assignment MemberReference figClone Cast ReferenceType FigLine MethodInvocation it next = ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public keyTyped FormalParameter ReferenceType KeyEvent arg0 StatementExpression Assignment MemberReference keyTyped Literal true =	0
MethodDeclaration Modifier public ReferenceType Object getClassifier FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle isAAssociationEnd BlockStatement ReturnStatement Cast ReferenceType AssociationEnd MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent lse IfStatement MethodInvocation lse getValueIsAdjusting BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator selPers MethodInvocation getSelectedValue StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation getSelectedValue StatementExpression MethodInvocation BinaryOperation != MemberReference selPers Literal null setEnabled StatementExpression MethodInvocation BinaryOperation != MemberReference selPers Literal null setEnabled StatementExpression MethodInvocation BinaryOperation != MemberReference selPers Literal null setEnabled StatementExpression MethodInvocation BinaryOperation > MethodInvocation getSelectedIndex Literal 0 setEnabled StatementExpression MethodInvocation BinaryOperation && BinaryOperation != MemberReference selPers Literal null BinaryOperation < MethodInvocation getSelectedIndex BinaryOperation - MethodInvocation MethodInvocation getSize getModel Literal 1 setEnabled IfStatement BinaryOperation == MemberReference selPers Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation selPers toString setText LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator pers Cast ReferenceType ExplorerPerspective MemberReference selPers StatementExpression MethodInvocation clear ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator rule MethodInvocation pers BlockStatement StatementExpression MethodInvocation MemberReference rule Literal 0 insertElementAt StatementExpression MethodInvocation MemberReference sortJListModel StatementExpression MethodInvocation BinaryOperation && BinaryOperation != MemberReference selPers Literal null BinaryOperation != MemberReference Literal null setEnabled StatementExpression MethodInvocation	1
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType MutableGraphModel gm LocalVariableDeclaration ReferenceType Object VariableDeclarator edge MethodInvocation gm MethodInvocation MethodInvocation getOwner getContent MethodInvocation MethodInvocation getOwner getContent MethodInvocation MemberReference LOWER_LEFT connect ReturnStatement MemberReference edge	1
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference resultSize	0
MethodDeclaration Modifier public ReferenceType buildUsage FormalParameter ReferenceType Object client FormalParameter ReferenceType Object IfStatement BinaryOperation || BinaryOperation == MemberReference client Literal null BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "In buildUsage null IfStatement BinaryOperation instanceof MemberReference client ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "client ModelElement" IfStatement BinaryOperation instanceof MemberReference ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal ModelElement" LocalVariableDeclaration ReferenceType VariableDeclarator usage MethodInvocation StatementExpression MethodInvocation usage MethodInvocation Cast ReferenceType ModelElement MemberReference add getSupplier StatementExpression MethodInvocation usage MethodInvocation Cast ReferenceType ModelElement MemberReference client add getClient IfStatement BinaryOperation != Cast ReferenceType ModelElement MemberReference Literal null BlockStatement StatementExpression MethodInvocation usage Cast ReferenceType ModelElement MemberReference setNamespace IfStatement BinaryOperation != Cast ReferenceType ModelElement MemberReference client Literal null BlockStatement StatementExpression MethodInvocation usage Cast ReferenceType ModelElement MemberReference client setNamespace ReturnStatement MemberReference usage	1
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MemberReference handle ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference elems BlockStatement StatementExpression Cast ReferenceType MemberReference handle	0
MethodDeclaration Modifier protected Annotation Override buildModelList LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList IfStatement BinaryOperation instanceof MemberReference target ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator diagram Cast ReferenceType MemberReference target ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation diagram MethodInvocation MethodInvocation BlockStatement IfStatement MethodInvocation diagram MemberReference obj BlockStatement StatementExpression MethodInvocation list MemberReference obj add StatementExpression MethodInvocation list MethodInvocation getSelectedModelElement add StatementExpression MethodInvocation Collections MemberReference list ClassCreator ReferenceType PathComparator sort StatementExpression MethodInvocation MemberReference list	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType ToDoListEvent StatementExpression MethodInvocation ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run IfStatement BinaryOperation instanceof MemberReference ReferenceType ToDoListListener BlockStatement StatementExpression Cast ReferenceType ToDoListListener MemberReference LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator todo MemberReference items BlockStatement IfStatement BinaryOperation >= MethodInvocation todo getPriority MemberReference ToDoItem BlockStatement StatementExpression MethodInvocation MemberReference todo BreakStatement StatementExpression MethodInvocation swingInvoke	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier final protected FormalParameter ReferenceType listener FormalParameter ReferenceType Object element StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference element Literal null remove StatementExpression MethodInvocation Model MethodInvocation MemberReference listener MemberReference element removeModelEventListener getPump	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public Annotation Override addEdge FormalParameter ReferenceType Object edge IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Cannot add a null edge" IfStatement BinaryOperation || BinaryOperation == MethodInvocation MemberReference edge getDestPort Literal null BinaryOperation == MethodInvocation MemberReference edge getSourcePort Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The source and dest port should be provided on an edge" IfStatement MethodInvocation LOG isInfoEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Adding an edge of type " MethodInvocation edge MethodInvocation getName getClass Literal " to use diagram." info IfStatement MethodInvocation ! MemberReference edge canAddEdge BlockStatement StatementExpression MethodInvocation LOG Literal "Attempt to add edge info ReturnStatement StatementExpression MethodInvocation MethodInvocation MemberReference edge add getEdges IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference edge isAUMLElement getFacade BinaryOperation == MethodInvocation Model MethodInvocation MemberReference edge getNamespace getFacade Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getHomeModel MemberReference edge addOwnedElement getCoreHelper StatementExpression MethodInvocation MemberReference edge fireEdgeAdded	1
MethodDeclaration Modifier public addElement FormalParameter ReferenceType Object o IfStatement MethodInvocation ! objects MemberReference o contains BlockStatement StatementExpression MethodInvocation objects MemberReference o add StatementExpression MethodInvocation This BinaryOperation - MethodInvocation objects size Literal 1 BinaryOperation - MethodInvocation objects size Literal 1 fireIntervalAdded	1
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade setAllElements	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object literal IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Enumeration BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The handle must be instance of IfStatement BinaryOperation instanceof MemberReference literal ReferenceType EnumerationLiteral BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MethodInvocation Cast ReferenceType Enumeration MemberReference handle MemberReference index Cast ReferenceType EnumerationLiteral MemberReference literal Literal the EnumerationLiteral to the Enumeration #" MemberReference literal MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType Object machine IfStatement MethodInvocation ! Model MethodInvocation MemberReference machine isAStateMachine getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal "No given to create a LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference machine getNamespace getFacade IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement ReturnStatement MemberReference ns LocalVariableDeclaration ReferenceType Object VariableDeclarator context MethodInvocation Model MethodInvocation MemberReference machine getContext getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference context isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference ns MemberReference context = IfStatement MethodInvocation Model MethodInvocation MemberReference context getFacade BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference context getOwner getFacade getNamespace getFacade = IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation MethodInvocation MethodInvocation iterator MethodInvocation next getProject = IfStatement BinaryOperation || BinaryOperation == MemberReference ns Literal null MethodInvocation ! Model MethodInvocation MemberReference ns isANamespace getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException Literal not a Namespace from a ReturnStatement MemberReference ns	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation PerspectiveManager MethodInvocation getInstance ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator Cast ReferenceType ExplorerPerspective MethodInvocation MemberReference i get StatementExpression MethodInvocation PerspectiveManager MethodInvocation MemberReference getInstance StatementExpression MethodInvocation PerspectiveManager MethodInvocation getInstance	0
MethodDeclaration Modifier public FormalParameter ReferenceType ComponentEvent e StatementExpression MethodInvocation MemberReference target	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement ClassCreator ReferenceType MethodInvocation getOwner ClassCreator ReferenceType Rectangle MemberReference MemberReference MemberReference MemberReference STEREOHEIGHT MemberReference settings	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object element IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Dependency BinaryOperation instanceof MemberReference element ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType Dependency MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or element: " MemberReference element	0
MethodDeclaration Modifier protected ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator actions ArrayInitializer MethodInvocation MethodInvocation MethodInvocation MethodInvocation StatementExpression MethodInvocation ToolBarUtility MemberReference actions Literal ReturnStatement MemberReference actions	0
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType String s FormalParameter BasicType int n LocalVariableDeclaration ReferenceType String VariableDeclarator ind ClassCreator ReferenceType String ForStatement ForControl BinaryOperation > MemberReference n Literal 0 MemberReference -- n StatementExpression Assignment MemberReference ind MemberReference indent += LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator result ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MethodInvocation s Literal '\n' indexOf BinaryOperation != MemberReference i Literal - 1 Assignment MemberReference i MethodInvocation s Literal '\n' indexOf = BlockStatement StatementExpression MethodInvocation result MethodInvocation MethodInvocation s Literal 0 BinaryOperation + MemberReference i Literal 1 substring append MemberReference ind append StatementExpression Assignment MemberReference s MethodInvocation s BinaryOperation + MemberReference i Literal 1 substring = IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference s append MemberReference ind append ReturnStatement MethodInvocation result toString	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getSmPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType int FormalParameter ReferenceType Point p1 FormalParameter ReferenceType Point p2 LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation - MemberReference p2 x MemberReference p1 x StatementExpression Assignment MemberReference MemberReference *= LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation - MemberReference p2 y MemberReference p1 y StatementExpression Assignment MemberReference MemberReference *= ReturnStatement BinaryOperation + MemberReference MemberReference	0
MethodDeclaration Modifier private StatementExpression Assignment MemberReference allOffenders Literal null =	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Mode VariableDeclarator placeMode ClassCreator ReferenceType MemberReference diagram MemberReference metaType MemberReference style Literal to diagram element" StatementExpression MethodInvocation Globals MemberReference placeMode Literal false mode	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getStateVertex getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType ExplorerTreeNode node LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType ExplorerTreeNode VariableDeclarator nodes MethodInvocation modelElementMap MemberReference modelElement get IfStatement BinaryOperation != MemberReference nodes Literal null BlockStatement StatementExpression MethodInvocation nodes MemberReference node add BlockStatement StatementExpression Assignment MemberReference nodes ClassCreator ReferenceType HashSet TypeArgument ReferenceType ExplorerTreeNode = StatementExpression MethodInvocation nodes MemberReference node add StatementExpression MethodInvocation modelElementMap MemberReference modelElement MemberReference nodes put	1
MethodDeclaration Modifier public Annotation Override BasicType boolean LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator MethodInvocation DiagramUtils getActiveDiagram IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator gm Cast ReferenceType MutableGraphModel MethodInvocation getGraphModel ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference objects BlockStatement IfStatement MethodInvocation gm MemberReference o canAddNode BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int index ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType ModelElement FormalParameter ReferenceType Object ns IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException TryStatement ReturnStatement MethodInvocation Cast ReferenceType Namespace MemberReference ns CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement BinaryOperation instanceof MemberReference dm ReferenceType UMLDeploymentDiagram BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig createBigPortFig LocalVariableDeclaration ReferenceType FigRect VariableDeclarator fr ClassCreator ReferenceType FigRect Literal 0 Literal 0 MemberReference MemberReference HEIGHT StatementExpression MethodInvocation fr Literal 1 setLineWidth ReturnStatement MemberReference fr	0
MethodDeclaration Modifier public BasicType boolean finalQualifier FormalParameter BasicType int k TokenStreamException IfStatement BinaryOperation == MethodInvocation MethodInvocation getType MemberReference k LT MemberReference ID BlockStatement IfStatement BinaryOperation && MethodInvocation MethodInvocation MethodInvocation getText MemberReference k LT isTypeName BinaryOperation == MethodInvocation MethodInvocation getType BinaryOperation + MemberReference k Literal 1 LT MemberReference LESSTHAN BlockStatement StatementExpression MemberReference ++ k StatementExpression Assignment MemberReference k MethodInvocation MemberReference k skipTemplateQualifiers = BlockStatement StatementExpression MemberReference ++ k ReturnStatement BinaryOperation != MethodInvocation MethodInvocation getType MemberReference k LT MemberReference SCOPE BlockStatement ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType Object getItem ReturnStatement MethodInvocation panel getText	1
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb Literal "null" append	1
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb Literal append StatementExpression MethodInvocation Expression MemberReference sb ToSource StatementExpression MethodInvocation sb Literal ")" append	1
MethodDeclaration Modifier private ReferenceType String generateConstraintEnrichedDocComment FormalParameter ReferenceType Object me ReturnStatement MethodInvocation MemberReference me Literal "/// " Literal "/// " Literal "/// </summary>" generateConstraintEnrichedDocComment	0
MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget isALink getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getAssociation getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier protected ReferenceType Action FormalParameter ReferenceType String ReturnStatement ClassCreator ReferenceType RadioAction ClassCreator ReferenceType MemberReference	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference removeAction	0
MethodDeclaration Modifier private ReferenceType File copySource FormalParameter ReferenceType InputSource input IOException LocalVariableDeclaration BasicType byte VariableDeclarator buf ArrayCreator BasicType byte Literal 2048 LocalVariableDeclaration BasicType int VariableDeclarator len LocalVariableDeclaration ReferenceType File VariableDeclarator tmpOutFile MethodInvocation File MemberReference TEMP_XMI_FILE_PREFIX Literal ".xmi" createTempFile StatementExpression MethodInvocation tmpOutFile deleteOnExit LocalVariableDeclaration ReferenceType FileOutputStream VariableDeclarator out ClassCreator ReferenceType FileOutputStream MemberReference tmpOutFile LocalVariableDeclaration ReferenceType String VariableDeclarator systemId MethodInvocation input getSystemId IfStatement BinaryOperation != MemberReference systemId Literal null BlockStatement StatementExpression Assignment MemberReference input ClassCreator ReferenceType InputSource ClassCreator MethodInvocation openStream ReferenceType URL MemberReference systemId = LocalVariableDeclaration ReferenceType InputStream VariableDeclarator in MethodInvocation input getByteStream WhileStatement BinaryOperation >= Assignment MemberReference len MethodInvocation in MemberReference buf read = Literal 0 BlockStatement StatementExpression MethodInvocation out MemberReference buf Literal 0 MemberReference len write StatementExpression MethodInvocation out close StatementExpression MethodInvocation LOG BinaryOperation + Literal "Wrote XMI file to " MemberReference tmpOutFile debug ReturnStatement MemberReference tmpOutFile	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType ElementImport FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlPackage BlockStatement ReturnStatement Cast ReferenceType UmlPackage MemberReference handle ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public setLocation FormalParameter ReferenceType Object handle FormalParameter ReferenceType String loc StatementExpression MethodInvocation impl MemberReference handle MemberReference loc setLocation	0
MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier private BasicType int getSelectedIndexes LocalVariableDeclaration BasicType int VariableDeclarator firstSelectedRow MethodInvocation rowSM getMinSelectionIndex LocalVariableDeclaration BasicType int VariableDeclarator lastSelectedRow MethodInvocation rowSM getMaxSelectionIndex LocalVariableDeclaration ReferenceType LinkedList VariableDeclarator selectedIndexesList ClassCreator ReferenceType LinkedList LocalVariableDeclaration BasicType int VariableDeclarator numSelectedRows Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i MemberReference firstSelectedRow BinaryOperation <= MemberReference i MemberReference lastSelectedRow MemberReference ++ i BlockStatement IfStatement MethodInvocation rowSM MemberReference i isSelectedIndex BlockStatement StatementExpression MemberReference ++ numSelectedRows StatementExpression MethodInvocation selectedIndexesList MethodInvocation Integer MemberReference i valueOf add LocalVariableDeclaration BasicType int VariableDeclarator indexes ArrayCreator BasicType int MethodInvocation selectedIndexesList size LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType Iterator VariableDeclarator it MethodInvocation selectedIndexesList iterator ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation < MemberReference i MemberReference indexes length MethodInvocation it hasNext MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i indexes Cast ReferenceType Integer MethodInvocation it next = ReturnStatement MemberReference indexes	1
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public static ReferenceType Dimension FormalParameter ReferenceType Dimension size FormalParameter ReferenceType Fig child IfStatement MethodInvocation child isVisible BlockStatement LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation child getMinimumSize StatementExpression Assignment MemberReference size width MethodInvocation Math MemberReference size width MemberReference width max = ReturnStatement MemberReference size	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent e IfStatement BinaryOperation == MemberReference p Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType VariableDeclarator ps MethodInvocation p getProjectSettings LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator ds MethodInvocation ps getDefaultDiagramSettings LocalVariableDeclaration ReferenceType Object VariableDeclarator src MethodInvocation e getSource IfStatement BinaryOperation == MemberReference src MemberReference stereoField BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator item MethodInvocation e getItem LocalVariableDeclaration ReferenceType DefaultComboBoxModel VariableDeclarator model Cast ReferenceType DefaultComboBoxModel MethodInvocation stereoField getModel LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation model MemberReference item getIndexOf SwitchStatement MemberReference idx SwitchStatementCase Literal 0 StatementExpression MethodInvocation ds MemberReference DiagramAppearance STEREOTYPE_VIEW_TEXTUAL BreakStatement SwitchStatementCase Literal 1 StatementExpression MethodInvocation ds MemberReference DiagramAppearance STEREOTYPE_VIEW_BIG_ICON BreakStatement SwitchStatementCase Literal 2 StatementExpression MethodInvocation ds MemberReference DiagramAppearance STEREOTYPE_VIEW_SMALL_ICON BreakStatement	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Generalization getGeneralizations FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Generalization VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType Generalization ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator g Cast ReferenceType Classifier MemberReference handle BlockStatement StatementExpression MethodInvocation result MemberReference g add ReturnStatement MemberReference result	1
MethodDeclaration Modifier private BasicType int comparePaths FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator path1 MethodInvocation Model MethodInvocation MemberReference o1 getPathList getModelManagementHelper StatementExpression MethodInvocation Collections MemberReference path1 reverse LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator path2 MethodInvocation Model MethodInvocation MemberReference o2 getPathList getModelManagementHelper StatementExpression MethodInvocation Collections MemberReference path2 reverse LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType String VariableDeclarator i2 MethodInvocation path2 iterator LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType String VariableDeclarator i1 MethodInvocation path1 iterator LocalVariableDeclaration BasicType int VariableDeclarator caseSensitiveComparison Literal 0 WhileStatement MethodInvocation i2 hasNext BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name2 MethodInvocation i2 next IfStatement MethodInvocation ! i1 hasNext BlockStatement ReturnStatement Literal - 1 LocalVariableDeclaration ReferenceType String VariableDeclarator name1 MethodInvocation i1 next LocalVariableDeclaration BasicType int VariableDeclarator comparison IfStatement BinaryOperation == MemberReference name1 Literal null BlockStatement IfStatement BinaryOperation == MemberReference name2 Literal null BlockStatement StatementExpression Assignment MemberReference comparison Literal 0 = BlockStatement StatementExpression Assignment MemberReference comparison Literal - 1 = IfStatement BinaryOperation == MemberReference name2 Literal null BlockStatement StatementExpression Assignment MemberReference comparison Literal 1 = BlockStatement StatementExpression Assignment MemberReference comparison MethodInvocation collator MemberReference name1 MemberReference name2 compare = IfStatement BinaryOperation != MemberReference comparison Literal 0 BlockStatement ReturnStatement MemberReference comparison IfStatement BinaryOperation == MemberReference caseSensitiveComparison Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference name1 Literal null BlockStatement IfStatement BinaryOperation == MemberReference name2 Literal null BlockStatement StatementExpression Assignment MemberReference caseSensitiveComparison Literal 0 = BlockStatement StatementExpression Assignment MemberReference caseSensitiveComparison Literal - 1 = IfStatement BinaryOperation == MemberReference name2 Literal null BlockStatement StatementExpression Assignment MemberReference caseSensitiveComparison Literal 1 = BlockStatement StatementExpression Assignment MemberReference caseSensitiveComparison MethodInvocation name1 MemberReference name2 compareTo = IfStatement MethodInvocation i2 hasNext BlockStatement ReturnStatement Literal 1 IfStatement BinaryOperation != MemberReference caseSensitiveComparison Literal 0 BlockStatement ReturnStatement MemberReference caseSensitiveComparison ReturnStatement MethodInvocation o1 MethodInvocation MethodInvocation o2 toString compareTo toString	1
MethodDeclaration Modifier public ReferenceType Object getStateMachine ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object t StatementExpression Assignment MemberReference t MethodInvocation MemberReference t = IfStatement BinaryOperation == MemberReference t Literal null BlockStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal false = ReturnStatement MemberReference shouldBeEnabled StatementExpression Assignment MemberReference shouldBeEnabled Literal true = LocalVariableDeclaration ReferenceType VariableDeclarator cl MethodInvocation MemberReference t IfStatement BinaryOperation == MemberReference cl Literal null BlockStatement StatementExpression Assignment MemberReference shouldBeEnabled Literal false = ReturnStatement MemberReference shouldBeEnabled ReturnStatement MemberReference shouldBeEnabled	0
MethodDeclaration Modifier public static FormalParameter BasicType int value IfStatement BinaryOperation > MemberReference value Literal 0 BlockStatement StatementExpression Assignment MemberReference pixelsPerInch MemberReference value = StatementExpression MethodInvocation initializeHash	0
MethodDeclaration Modifier private parseBlock FormalParameter ReferenceType BlockStatement node FormalParameter BasicType boolean FeatureNotSupportedException IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID LCurly BlockStatement StatementExpression MethodInvocation advance WhileStatement BinaryOperation && BinaryOperation != MemberReference curtok id MemberReference TokenID Eof BinaryOperation != MemberReference curtok id MemberReference TokenID RCurly BlockStatement StatementExpression MethodInvocation MemberReference node Statements StatementExpression MethodInvocation MemberReference TokenID RCurly AssertAndAdvance IfStatement MemberReference BlockStatement WhileStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference curtok id MemberReference TokenID Eof BinaryOperation != MemberReference curtok id MemberReference TokenID BinaryOperation != MemberReference curtok id MemberReference TokenID Default BinaryOperation != MemberReference curtok id MemberReference TokenID RCurly BlockStatement StatementExpression MethodInvocation MemberReference node Statements BlockStatement StatementExpression MethodInvocation MemberReference node Statements	0
MethodDeclaration ReferenceType StringBuffer generateClassifierStart FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType String VariableDeclarator sClassifierKeyword IfStatement MethodInvocation Model MethodInvocation MemberReference cls isAClass getFacade BlockStatement StatementExpression Assignment MemberReference sClassifierKeyword Literal "class" = IfStatement MethodInvocation Model MethodInvocation MemberReference cls isAInterface getFacade BlockStatement StatementExpression Assignment MemberReference sClassifierKeyword Literal "interface" = IfStatement MethodInvocation Model MethodInvocation MemberReference cls isAEnumeration getFacade BlockStatement StatementExpression Assignment MemberReference sClassifierKeyword Literal "enum" = BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 80 StatementExpression MethodInvocation sb MethodInvocation DocumentationManager MemberReference cls getComments append StatementExpression MethodInvocation sb MethodInvocation MemberReference cls Literal true Literal "" generateConstraintEnrichedDocComment append IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference cls isPublic getFacade MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference cls getNamespace getFacade isAClassifier getFacade BlockStatement StatementExpression MethodInvocation sb MethodInvocation MethodInvocation Model MethodInvocation MemberReference cls getVisibility getFacade generateVisibility append IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference cls isAbstract getFacade MethodInvocation ! Model getFacade BlockStatement StatementExpression MethodInvocation sb Literal " append IfStatement MethodInvocation Model MethodInvocation MemberReference cls isLeaf getFacade BlockStatement StatementExpression MethodInvocation sb Literal "final " append LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference cls MemberReference ImportInterface getTaggedValue getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference getValue getFacade Literal null BlockStatement StatementExpression MethodInvocation sb Literal " " append StatementExpression MethodInvocation sb MethodInvocation Model MethodInvocation MemberReference getValue getFacade append StatementExpression MethodInvocation sb Literal " " append StatementExpression MethodInvocation sb MethodInvocation Literal " " append MemberReference sClassifierKeyword append StatementExpression MethodInvocation sb MethodInvocation MethodInvocation Model MethodInvocation MemberReference cls getName getFacade generateName append LocalVariableDeclaration ReferenceType List VariableDeclarator templateParameters MethodInvocation Model MethodInvocation MemberReference cls getFacade ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation templateParameters size MemberReference ++ i BlockStatement IfStatement BinaryOperation == MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal "<" append LocalVariableDeclaration ReferenceType Object VariableDeclarator param MethodInvocation Model MethodInvocation MethodInvocation templateParameters MemberReference i get getParameter getFacade StatementExpression MethodInvocation sb MethodInvocation Model MethodInvocation MemberReference param getName getFacade append ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String ArrayInitializer Literal "extends" Literal "super" BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator s MethodInvocation Model MethodInvocation MemberReference param MemberReference getTaggedValueValue getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference s Literal null BinaryOperation > MethodInvocation s MethodInvocation trim MethodInvocation length toString Literal 0 BlockStatement StatementExpression MethodInvocation sb BinaryOperation + BinaryOperation + BinaryOperation + Literal " " MemberReference Literal " " MemberReference s append IfStatement BinaryOperation == MemberReference i BinaryOperation - MethodInvocation templateParameters size Literal 1 BlockStatement StatementExpression MethodInvocation sb Literal ">" append BlockStatement StatementExpression MethodInvocation sb Literal ", " append LocalVariableDeclaration ReferenceType String VariableDeclarator baseClass MethodInvocation MethodInvocation Model MethodInvocation MemberReference cls getGeneralizations getFacade generateGeneralization IfStatement MethodInvocation ! baseClass Literal "" equals BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "extends " append MethodInvocation MemberReference baseClass append Literal " " append IfStatement MethodInvocation Model MethodInvocation MemberReference cls isAClass getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator interfaces MethodInvocation MemberReference cls generateSpecification StatementExpression MethodInvocation LOG BinaryOperation + Literal " MemberReference interfaces debug IfStatement MethodInvocation ! interfaces Literal "" equals BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal "implements " append MethodInvocation MemberReference interfaces append Literal " " append StatementExpression MethodInvocation sb TernaryExpression MemberReference lfBeforeCurly BinaryOperation + MemberReference LINE_SEPARATOR Literal "{" Literal " {" append LocalVariableDeclaration ReferenceType String VariableDeclarator tv MethodInvocation MemberReference cls generateTaggedValues IfStatement BinaryOperation && BinaryOperation != MemberReference tv Literal null BinaryOperation > MethodInvocation tv length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference INDENT append MethodInvocation MemberReference tv append MemberReference LINE_SEPARATOR append ReturnStatement MemberReference sb	1
MethodDeclaration Modifier public ReferenceType Iterator getTaggedValues FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation Collections MethodInvocation iterator emptySet	0
MethodDeclaration Modifier public BasicType boolean isStandalone ReturnStatement BinaryOperation && MethodInvocation isEmpty MethodInvocation isEmpty	0
MethodDeclaration Modifier public initialiseListener FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference modelElement	0
MethodDeclaration Modifier public Annotation Override set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "About to call setBody " MemberReference modelElement Literal " / " MemberReference value info StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference value setBody getCoreHelper	1
MethodDeclaration Modifier private ReferenceType List getOperation FormalParameter ReferenceType Collection classifiers FormalParameter ReferenceType String name FormalParameter BasicType int params ParseException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Object VariableDeclarator operations ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation == MethodInvocation name length Literal 0 BlockStatement ReturnStatement MemberReference operations ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MemberReference classifiers BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator oe MethodInvocation Model MethodInvocation MemberReference getFeatures getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator operation MemberReference oe BlockStatement IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement IfStatement MethodInvocation ! name MethodInvocation Model MethodInvocation MemberReference operation getName getFacade equals BlockStatement ContinueStatement IfStatement BinaryOperation != MemberReference params MethodInvocation MemberReference operation BlockStatement ContinueStatement StatementExpression MethodInvocation operations MemberReference operation add IfStatement BinaryOperation > MethodInvocation operations size Literal 0 BlockStatement ReturnStatement MemberReference operations LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation classifiers iterator IfStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator expr ClassCreator ReferenceType StringBuilder BinaryOperation + MemberReference name Literal "(" LocalVariableDeclaration BasicType int VariableDeclarator i ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference params MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation expr Literal ", " append StatementExpression MethodInvocation expr BinaryOperation + Literal "param" BinaryOperation + MemberReference i Literal 1 append StatementExpression MethodInvocation expr Literal ")" append LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation it next LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getDefaultReturnType getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation Model MethodInvocation MemberReference cls MemberReference returnType getCoreFactory StatementExpression ClassCreator MethodInvocation MethodInvocation expr toString MemberReference op parseOperation ReferenceType MemberReference op StatementExpression MethodInvocation operations MemberReference op add ReturnStatement MemberReference operations	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig createBigPortFig LocalVariableDeclaration ReferenceType FigCircle VariableDeclarator fc ClassCreator ReferenceType FigCircle Literal 0 Literal 0 MemberReference MemberReference HEIGHT StatementExpression MethodInvocation fc Literal 1 setLineWidth ReturnStatement MemberReference fc	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation && BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '2' MethodInvocation Model MethodInvocation MemberReference parent isAProfile getFacade BlockStatement ReturnStatement MemberReference Collections EMPTY_SET IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAPackage getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference INSTANCE	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object cons StatementExpression MethodInvocation impl MemberReference handle MemberReference cons	0
MethodDeclaration Modifier private ReferenceType Point getPosition FormalParameter ReferenceType Point result LocalVariableDeclaration ReferenceType Point VariableDeclarator anchor MethodInvocation StatementExpression MethodInvocation result MemberReference anchor setLocation IfStatement MemberReference ! BlockStatement StatementExpression MethodInvocation result MemberReference offset x MemberReference offset y translate ReturnStatement MemberReference result LocalVariableDeclaration BasicType double VariableDeclarator slope MethodInvocation getSlope StatementExpression MethodInvocation result MethodInvocation MemberReference slope MemberReference MemberReference anchor applyOffset setLocation IfStatement MemberReference BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator increment Literal 2 LocalVariableDeclaration ReferenceType Dimension VariableDeclarator size ClassCreator ReferenceType Dimension MethodInvocation getWidth MethodInvocation getHeight LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator fp Cast ReferenceType FigEdge MemberReference LocalVariableDeclaration ReferenceType Point VariableDeclarator points MethodInvocation fp getPoints IfStatement MethodInvocation MemberReference points MemberReference result MemberReference size intersects BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator scaledOffset BinaryOperation + MemberReference MemberReference increment LocalVariableDeclaration BasicType int VariableDeclarator limit Literal 20 LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 WhileStatement BinaryOperation && MethodInvocation MemberReference points MemberReference result MemberReference size intersects BinaryOperation < MemberReference ++ count MemberReference limit BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference slope MemberReference scaledOffset MemberReference anchor applyOffset setLocation StatementExpression Assignment MemberReference scaledOffset MemberReference increment += IfStatement Literal false BlockStatement StatementExpression MethodInvocation LOG Literal "Retry limit exceeded. Trying other debug StatementExpression MethodInvocation result MemberReference anchor setLocation StatementExpression MethodInvocation result MethodInvocation MemberReference slope MemberReference - MemberReference anchor applyOffset setLocation StatementExpression Assignment MemberReference count Literal 0 = StatementExpression Assignment MemberReference scaledOffset MemberReference - scaledOffset = WhileStatement BinaryOperation && MethodInvocation MemberReference points MemberReference result MemberReference size intersects BinaryOperation < MemberReference ++ count MemberReference limit BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference slope MemberReference scaledOffset MemberReference anchor applyOffset setLocation StatementExpression Assignment MemberReference scaledOffset MemberReference increment += ReturnStatement MemberReference result	1
MethodDeclaration Modifier public showDialog IfStatement MemberReference BlockStatement ReturnStatement StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true setVisible StatementExpression MethodInvocation toFront StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType String VariableDeclarator data MethodInvocation PersistenceManager MethodInvocation MemberReference project getInstance LocalVariableDeclaration ReferenceType JDialog VariableDeclarator pw ClassCreator ReferenceType JDialog MethodInvocation ArgoFrame getFrame MethodInvocation Translator Literal localize Literal false LocalVariableDeclaration ReferenceType VariableDeclarator a ClassCreator ReferenceType MemberReference data Literal 50 Literal 80 StatementExpression MethodInvocation a Literal false StatementExpression MethodInvocation a Literal true StatementExpression MethodInvocation a Literal true StatementExpression MethodInvocation a ClassCreator ReferenceType Insets MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX setMargin StatementExpression MethodInvocation a Literal 0 setCaretPosition StatementExpression MethodInvocation pw MethodInvocation ClassCreator ReferenceType JScrollPane MemberReference a add getContentPane StatementExpression MethodInvocation pw Literal 1000 Literal 500 setSize StatementExpression MethodInvocation pw MethodInvocation ArgoFrame getFrame StatementExpression MethodInvocation MemberReference pw init StatementExpression MethodInvocation pw Literal true setVisible	0
MethodDeclaration ReferenceType String generateOperation FormalParameter ReferenceType Object op FormalParameter BasicType boolean documented IfStatement MemberReference isFileGeneration BlockStatement StatementExpression Assignment MemberReference documented Literal true = LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 80 LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator constructor Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference op Literal "create" hasStereotype getExtensionMechanismsHelper BlockStatement StatementExpression Assignment MemberReference nameStr MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference op getOwner getFacade getName getFacade generateName = StatementExpression Assignment MemberReference constructor Literal true = BlockStatement StatementExpression Assignment MemberReference nameStr MethodInvocation MethodInvocation Model MethodInvocation MemberReference op getName getFacade generateName = IfStatement MemberReference documented BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MemberReference op MemberReference documented MemberReference INDENT generateConstraintEnrichedDocComment IfStatement BinaryOperation && BinaryOperation != MemberReference s Literal null BinaryOperation > MethodInvocation s MethodInvocation length trim Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference INDENT append MemberReference s append StatementExpression MethodInvocation sb MethodInvocation MemberReference op generateVisibility append StatementExpression MethodInvocation sb MethodInvocation MemberReference op append StatementExpression MethodInvocation sb MethodInvocation MemberReference op generateScope append StatementExpression MethodInvocation sb MethodInvocation MemberReference op generateChangeability append StatementExpression MethodInvocation sb MethodInvocation MemberReference op append LocalVariableDeclaration ReferenceType Collection VariableDeclarator returnParams MethodInvocation Model MethodInvocation MemberReference op getReturnParameters getCoreHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator rp IfStatement BinaryOperation == MethodInvocation returnParams size Literal 0 BlockStatement StatementExpression Assignment MemberReference rp Literal null = BlockStatement StatementExpression Assignment MemberReference rp MethodInvocation returnParams MethodInvocation next iterator = IfStatement BinaryOperation > MethodInvocation returnParams size Literal 1 BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Java generator only handles one return parameter" Literal " - Found " MethodInvocation returnParams size Literal " for " MethodInvocation Model MethodInvocation MemberReference op getName getFacade warn IfStatement BinaryOperation && BinaryOperation != MemberReference rp Literal null MemberReference ! constructor BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation Model MethodInvocation MemberReference rp getType getFacade IfStatement BinaryOperation == MemberReference returnType Literal null BlockStatement StatementExpression MethodInvocation sb Literal "void " append BlockStatement StatementExpression MethodInvocation sb MethodInvocation Literal ' ' append MethodInvocation MemberReference returnType generateClassifierRef append LocalVariableDeclaration ReferenceType List VariableDeclarator params ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference op getParameters getFacade StatementExpression MethodInvocation params MemberReference rp remove StatementExpression MethodInvocation sb MethodInvocation Literal '(' append MemberReference nameStr append IfStatement BinaryOperation != MemberReference params Literal null BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation params size MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference i Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal ", " append StatementExpression MethodInvocation sb MethodInvocation MethodInvocation params MemberReference i get generateParameter append StatementExpression MethodInvocation sb Literal ')' append LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference op getRaisedSignals getFacade IfStatement MethodInvocation ! c isEmpty BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation c iterator LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator signal MethodInvocation it next IfStatement MethodInvocation ! Model MethodInvocation MemberReference signal isAException getFacade BlockStatement ContinueStatement IfStatement MemberReference first BlockStatement StatementExpression MethodInvocation sb Literal " throws " append BlockStatement StatementExpression MethodInvocation sb Literal ", " append StatementExpression MethodInvocation sb MethodInvocation Model MethodInvocation MethodInvocation it next getName getFacade append StatementExpression Assignment MemberReference first Literal false = ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier private ReferenceType Action getNodeAction FormalParameter ReferenceType Object metaType LocalVariableDeclaration ReferenceType String VariableDeclarator label MethodInvocation MemberReference metaType getLabel ReturnStatement ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MemberReference metaType MemberReference label	0
MethodDeclaration Modifier public setPersistenceVersion FormalParameter BasicType int StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String key FormalParameter ReferenceType Object ReturnStatement MethodInvocation Translator MemberReference key MemberReference	0
MethodDeclaration Modifier public ReferenceType Object IfStatement BinaryOperation != MethodInvocation profileConfiguration getDefaultTypeStrategy Literal null BlockStatement ReturnStatement MethodInvocation profileConfiguration MethodInvocation getDefaultTypeStrategy ReturnStatement Literal null	0
MethodDeclaration Modifier private ReferenceType createGraphModel IfStatement BinaryOperation instanceof MethodInvocation getGraphModel ReferenceType BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getGraphModel BlockStatement ReturnStatement ClassCreator ReferenceType	1
MethodDeclaration Modifier public ReferenceType Object getSender FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement Cast ReferenceType Message MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public setShowInitialValues FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation && BinaryOperation == MemberReference MemberReference showem MemberReference showInitialValuesSet BlockStatement ReturnStatement LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator oldValid MemberReference showInitialValuesSet LocalVariableDeclaration ReferenceType Memento VariableDeclarator ClassCreator ReferenceType Memento MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference MemberReference showem = StatementExpression Assignment MemberReference showInitialValuesSet Literal true = MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference MemberReference ! showem = StatementExpression Assignment MemberReference showInitialValuesSet MemberReference oldValid = StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType event StatementExpression MethodInvocation MethodInvocation event getKeyStroke StatementExpression MethodInvocation MethodInvocation event getKeyStroke StatementExpression This MemberReference selectedContainer MethodInvocation repaint	0
MethodDeclaration Modifier private ReferenceType WhileStatement parseWhile FeatureNotSupportedException LocalVariableDeclaration ReferenceType WhileStatement VariableDeclarator node ClassCreator ReferenceType WhileStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference TokenID LParen AssertAndAdvance StatementExpression Assignment MemberReference node Test MethodInvocation ParseExpression = StatementExpression MethodInvocation MemberReference TokenID RParen AssertAndAdvance StatementExpression MethodInvocation MemberReference node Statements parseBlock IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi StatementExpression MethodInvocation advance ReturnStatement MemberReference node	1
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType MutableTreeNode node IfStatement BinaryOperation instanceof MemberReference node ReferenceType ExplorerTreeNode BlockStatement StatementExpression MethodInvocation Cast ReferenceType ExplorerTreeNode MemberReference node StatementExpression Cast ReferenceType ExplorerTreeNode MemberReference node StatementExpression SuperMethodInvocation MemberReference node	0
MethodDeclaration Modifier public FormalParameter BasicType boolean h IfStatement MemberReference h BlockStatement StatementExpression MethodInvocation BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType TaggedValue buildTaggedValue FormalParameter ReferenceType Object type FormalParameter ReferenceType String values IfStatement BinaryOperation instanceof MemberReference type ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal received - " MemberReference type LocalVariableDeclaration ReferenceType TaggedValue VariableDeclarator tv MethodInvocation Cast ReferenceType MemberReference type buildTaggedValue ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator value MemberReference values BlockStatement StatementExpression MethodInvocation tv MethodInvocation MemberReference value add ReturnStatement MemberReference tv	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigPool VariableDeclarator figClone Cast ReferenceType FigPool SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier private ReferenceType FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType DiagramSettings settings FormalParameter Modifier final BasicType int FormalParameter Modifier final BasicType int FormalParameter Modifier final BasicType int FormalParameter Modifier final BasicType int ReturnStatement ClassCreator ReferenceType MemberReference MemberReference settings MemberReference MemberReference MemberReference MemberReference	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getSmPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType panel FormalParameter Modifier final ReferenceType Object target FormalParameter Modifier final ReferenceType prop LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator propertyName MethodInvocation prop getPropertyName LocalVariableDeclaration Modifier final ReferenceType GetterSetterManager VariableDeclarator MethodInvocation GetterSetterManager MethodInvocation prop getType LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator label MethodInvocation Translator MethodInvocation prop getLabel localize IfStatement MethodInvocation MemberReference propertyName contains BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator cb ClassCreator ReferenceType MemberReference label MemberReference target MemberReference propertyName MemberReference IfStatement MethodInvocation Model MethodInvocation MemberReference target isReadOnly getModelManagementHelper BlockStatement StatementExpression MethodInvocation cb Literal false setEnabled StatementExpression MethodInvocation panel MemberReference cb add	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation update	0
MethodDeclaration Modifier protected IfStatement MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference target MemberReference propertyName removeModelEventListener getPump StatementExpression MethodInvocation LOG Literal for debug	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent pce LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType This MemberReference pce StatementExpression MethodInvocation SwingUtilities MemberReference invokeLater	0
MethodDeclaration Modifier protected ReferenceType Object getTarget ReturnStatement MemberReference target	0
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType char c LocalVariableDeclaration BasicType int VariableDeclarator i StatementExpression Assignment MemberReference pattern Literal 1 <<= StatementExpression Assignment MemberReference pattern Literal 1 |= ForStatement ForControl Assignment MemberReference i Literal 0 = BinaryOperation < MemberReference i MemberReference length MemberReference ++ i BlockStatement IfStatement BinaryOperation != MethodInvocation MemberReference i charAt MemberReference c BlockStatement StatementExpression Assignment MemberReference pattern BinaryOperation << Literal 1 MemberReference i &= ReturnStatement BinaryOperation != BinaryOperation & MemberReference pattern BinaryOperation << Literal 1 BinaryOperation - MemberReference length Literal 1 Literal 0	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier private static ReferenceType String FormalParameter ReferenceType String str ReturnStatement MethodInvocation str MethodInvocation Literal ' ' Literal '-' replace toLowerCase	1
MethodDeclaration Modifier private BasicType boolean isAEnumeration FormalParameter ReferenceType Object element IfStatement MethodInvocation Model MethodInvocation MemberReference element isAEnumeration getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation ! Model MethodInvocation MemberReference element isAClass getFacade BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation Model MethodInvocation MemberReference element Literal "enumeration" hasStereotype getExtensionMechanismsHelper	1
MethodDeclaration Modifier static FormalParameter BasicType int use StatementExpression Assignment MemberReference useSections MemberReference use =	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier private FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h StatementExpression Assignment MemberReference ClassCreator ReferenceType FigRect MemberReference x MemberReference y MemberReference w MemberReference h MemberReference LINE_COLOR MemberReference FILL_COLOR = StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation Literal false setFilled StatementExpression MethodInvocation Literal 0 setLineWidth StatementExpression MethodInvocation Literal false setFilled	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement ReturnStatement Cast ReferenceType Operation MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Fig createBigPortFig LocalVariableDeclaration ReferenceType Fig VariableDeclarator b ClassCreator ReferenceType Literal 0 Literal 0 Literal 100 Literal 60 StatementExpression MethodInvocation b Literal true setFilled StatementExpression MethodInvocation b MemberReference FILL_COLOR setFillColor StatementExpression MethodInvocation b MemberReference LINE_COLOR setLineColor StatementExpression MethodInvocation b MemberReference setLineWidth ReturnStatement MemberReference b	0
MethodDeclaration Modifier public BasicType boolean isSaveEnabled ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Object getExpression ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getRecurrence getFacade	0
MethodDeclaration Modifier public setAttributes FormalParameter ReferenceType Object classifier FormalParameter ReferenceType List attributes IfStatement BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator mclassifier Cast ReferenceType Classifier MemberReference classifier LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Feature VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Feature MethodInvocation mclassifier getFeature ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator feature MethodInvocation mclassifier getFeature BlockStatement IfStatement BinaryOperation instanceof MemberReference feature ReferenceType Attribute BlockStatement StatementExpression MethodInvocation result MemberReference feature remove StatementExpression MethodInvocation result MemberReference attributes addAll StatementExpression MethodInvocation mclassifier MethodInvocation clear getFeature StatementExpression MethodInvocation mclassifier MethodInvocation MemberReference result addAll getFeature	1
MethodDeclaration Modifier public static ReferenceType Collection generate FormalParameter ReferenceType lang FormalParameter ReferenceType Object elem FormalParameter BasicType boolean deps LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation list MemberReference elem add ReturnStatement MethodInvocation MemberReference lang MemberReference list MemberReference deps generate	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object context ReturnStatement BinaryOperation || BinaryOperation instanceof MemberReference context ReferenceType Classifier BinaryOperation instanceof MemberReference context ReferenceType Operation	1
MethodDeclaration Modifier public undo StatementExpression MethodInvocation diaDefault MemberReference oldValue StatementExpression MethodInvocation MemberReference key MemberReference newView MemberReference oldValue fireNotationEvent	0
MethodDeclaration Modifier public ReferenceType Object getStereotype FormalParameter ReferenceType Object ns FormalParameter ReferenceType Object stereo IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "namespace" IfStatement BinaryOperation instanceof MemberReference stereo ReferenceType Stereotype BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "stereotype" TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name Cast ReferenceType ModelElement MemberReference stereo LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator baseClasses Cast ReferenceType Stereotype MemberReference stereo IfStatement BinaryOperation || BinaryOperation == MemberReference name Literal null BinaryOperation != MethodInvocation baseClasses size Literal 1 BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator baseClass MethodInvocation baseClasses MethodInvocation next iterator ForStatement EnhancedForControl VariableDeclaration ReferenceType Stereotype VariableDeclarator o MethodInvocation MemberReference ns getStereotypes BlockStatement IfStatement BinaryOperation && MethodInvocation name MethodInvocation o getName equals MethodInvocation o MethodInvocation MemberReference baseClass contains getBaseClass BlockStatement ReturnStatement MemberReference o CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null	0
MethodDeclaration Modifier public stateChanged FormalParameter ReferenceType e StatementExpression MethodInvocation LOG Literal shown on panel are changed" debug	1
MethodDeclaration Modifier protected Annotation Deprecated ReferenceType Object FormalParameter Modifier final ReferenceType Object multiplicityOwner FormalParameter Modifier final ReferenceType String s1 ParseException LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation s1 trim LocalVariableDeclaration ReferenceType Object VariableDeclarator multi Literal null TryStatement StatementExpression Assignment MemberReference multi MethodInvocation Model MethodInvocation MemberReference s getDataTypesFactory = CatchClause CatchClauseParameter IllegalArgumentException iae ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation iae getLocalizedMessage Literal 0 StatementExpression MethodInvocation MemberReference multiplicityOwner MemberReference s1 setMultiplicity ReturnStatement MemberReference multi	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateVertex getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType Project BlockStatement ReturnStatement Cast ReferenceType Project MemberReference parent ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAMessage getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator action MethodInvocation Model MethodInvocation MemberReference parent getAction getFacade IfStatement BinaryOperation != MemberReference action Literal null BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator children ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation children MemberReference action add ReturnStatement MemberReference children ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public BasicType int ReturnStatement Literal 0	0
MethodDeclaration Modifier public FormalParameter ReferenceType PropertyChangeEvent pce StatementExpression MethodInvocation fireTableDataChanged	0
MethodDeclaration Modifier public ReferenceType Object getInstance ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier public ReferenceType Object getTransition ReturnStatement ClassReference ReferenceType Transition	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator elems MethodInvocation Model MethodInvocation MemberReference dm getOwnedElements getFacade IfStatement BinaryOperation == MethodInvocation elems size Literal 0 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator oper MemberReference dm LocalVariableDeclaration ReferenceType String VariableDeclarator myName MethodInvocation Model MethodInvocation MemberReference oper getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference myName Literal null MethodInvocation myName Literal "" equals BlockStatement ReturnStatement MemberReference PROBLEM_FOUND IfStatement BinaryOperation == MethodInvocation myName length Literal 0 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File f IfStatement BinaryOperation == MemberReference f Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation f isDirectory BlockStatement ReturnStatement Literal true LocalVariableDeclaration ReferenceType String VariableDeclarator extension MethodInvocation MemberReference f getExtension ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator suffix MemberReference BlockStatement IfStatement MethodInvocation suffix MemberReference extension equalsIgnoreCase BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation MethodInvocation isFilled getBigPort	0
MethodDeclaration Modifier private ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes Literal makeCreateNodeAction = ReturnStatement MemberReference	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation updateModel	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object profile StatementExpression MethodInvocation impl MemberReference handle MemberReference profile	0
MethodDeclaration Modifier public Annotation Override caseAActualParameterList FormalParameter ReferenceType node LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation MemberReference node IfStatement BinaryOperation != MethodInvocation node getExpression Literal null BlockStatement StatementExpression Assignment MemberReference val Literal null = StatementExpression MethodInvocation node MethodInvocation This apply getExpression StatementExpression MethodInvocation list MemberReference val add BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator temp MethodInvocation node MethodInvocation toArray ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference temp length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference val Literal null = StatementExpression Cast ReferenceType MemberReference ArraySelector MemberReference i temp StatementExpression MethodInvocation list MemberReference val add StatementExpression Assignment MemberReference val MemberReference list = StatementExpression MethodInvocation MemberReference node outAActualParameterList	1
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getUMLClass getMetaTypes add StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getMetaTypes add StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public Annotation Override BasicType boolean canAddEdge FormalParameter ReferenceType Object edge IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation MemberReference edge containsEdge BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator sourceModelElement Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator destModelElement Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociation getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator conns MethodInvocation Model MethodInvocation MemberReference edge getConnections getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation conns iterator IfStatement BinaryOperation < MethodInvocation conns size Literal 2 BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnd0 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnd1 MethodInvocation iter next IfStatement BinaryOperation || BinaryOperation == MemberReference associationEnd0 Literal null BinaryOperation == MemberReference associationEnd1 Literal null BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference sourceModelElement MethodInvocation Model MethodInvocation MemberReference associationEnd0 getType getFacade = StatementExpression Assignment MemberReference destModelElement MethodInvocation Model MethodInvocation MemberReference associationEnd1 getType getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAGeneralization getFacade BlockStatement StatementExpression Assignment MemberReference sourceModelElement MethodInvocation Model MethodInvocation MemberReference edge getSpecific getFacade = StatementExpression Assignment MemberReference destModelElement MethodInvocation Model MethodInvocation MemberReference edge getGeneral getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge getFacade BlockStatement StatementExpression Assignment MemberReference sourceModelElement MethodInvocation Model MethodInvocation MemberReference edge getBase getFacade = StatementExpression Assignment MemberReference destModelElement MethodInvocation Model MethodInvocation MemberReference edge getExtension getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge getFacade BlockStatement StatementExpression Assignment MemberReference sourceModelElement MethodInvocation Model MethodInvocation MemberReference edge getBase getFacade = StatementExpression Assignment MemberReference destModelElement MethodInvocation Model MethodInvocation MemberReference edge getAddition getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isADependency getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator clients MethodInvocation Model MethodInvocation MemberReference edge getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator suppliers MethodInvocation Model MethodInvocation MemberReference edge getSuppliers getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference clients Literal null MethodInvocation clients isEmpty BinaryOperation == MemberReference suppliers Literal null MethodInvocation suppliers isEmpty BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference sourceModelElement MethodInvocation clients MethodInvocation next iterator = StatementExpression Assignment MemberReference destModelElement MethodInvocation suppliers MethodInvocation next iterator = IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference sourceModelElement Cast ReferenceType CommentEdge MemberReference edge = StatementExpression Assignment MemberReference destModelElement Cast ReferenceType CommentEdge MemberReference edge = BlockStatement ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation == MemberReference sourceModelElement Literal null BinaryOperation == MemberReference destModelElement Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Edge rejected. Its ends are not attached to anything" error ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation ! MemberReference sourceModelElement containsNode MethodInvocation ! MemberReference sourceModelElement containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Edge rejected. Its source end is attached to " MemberReference sourceModelElement Literal " but this is not in the graph model" error ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation ! MemberReference destModelElement containsNode MethodInvocation ! MemberReference destModelElement containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Edge rejected. Its destination end is attached to " MemberReference destModelElement Literal " but this is not in the graph model" error ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Object o StatementExpression MethodInvocation MemberReference o setNamespace LocalVariableDeclaration ReferenceType DeploymentDiagramGraphModel VariableDeclarator gm MethodInvocation createGraphModel StatementExpression MethodInvocation gm MemberReference namespace LocalVariableDeclaration ReferenceType VariableDeclarator rend ClassCreator ReferenceType LocalVariableDeclaration ReferenceType LayerPerspective VariableDeclarator lay ClassCreator ReferenceType LayerPerspectiveMutable MethodInvocation Model MethodInvocation MemberReference namespace getName getFacade MemberReference gm StatementExpression MethodInvocation lay MemberReference rend setGraphNodeRenderer StatementExpression MethodInvocation lay MemberReference rend setGraphEdgeRenderer StatementExpression MethodInvocation MemberReference lay setLayer StatementExpression MethodInvocation Model MethodInvocation This MemberReference namespace ArrayCreator ReferenceType String ArrayInitializer Literal "remove" addModelEventListener getPump	0
MethodDeclaration Modifier public ReferenceType getOrientation ReturnStatement MemberReference orientation	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_56 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal - 4593671619917905913L Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public static BasicType int getVGap ReturnStatement MemberReference vGap	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType IncomingDependencyNode	0
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation MemberReference f setFilled	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation && BinaryOperation == MemberReference showSingularMultiplicities MemberReference showem MemberReference showSingularMultiplicitiesSet BlockStatement ReturnStatement LocalVariableDeclaration Modifier final BasicType boolean VariableDeclarator oldValid MemberReference showSingularMultiplicitiesSet LocalVariableDeclaration ReferenceType Memento VariableDeclarator ClassCreator ReferenceType Memento MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference showSingularMultiplicities MemberReference showem = StatementExpression Assignment MemberReference showSingularMultiplicitiesSet Literal true = MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference showSingularMultiplicities MemberReference ! showem = StatementExpression Assignment MemberReference showSingularMultiplicitiesSet MemberReference oldValid = StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType ListSet TypeArgument ReferenceType T reachable FormalParameter ReferenceType org ReferenceType argouml ReferenceType util ReferenceType cg ReturnStatement MethodInvocation MemberReference cg MemberReference MethodInvocation getInstance reachable	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Region BinaryOperation instanceof MemberReference ReferenceType Vertex BlockStatement StatementExpression Cast ReferenceType Vertex MemberReference ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference	0
MethodDeclaration Modifier public ReferenceType getVisibility FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType NamedElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType NamedElement MemberReference handle	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier protected IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation getOwner StatementExpression MethodInvocation populate	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getClassifier getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter ReferenceType Object specification StatementExpression MethodInvocation ClassCreator ReferenceType ObjectSetter MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent MemberReference specification MethodInvocation Model MethodInvocation MemberReference handle getCoreHelper createCommand	1
MethodDeclaration Modifier public FormalParameter ReferenceType p StatementExpression Assignment MemberReference pred MemberReference p =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object literal IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Enumeration BinaryOperation instanceof MemberReference literal ReferenceType EnumerationLiteral BlockStatement StatementExpression Cast ReferenceType Enumeration MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object col IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation || BinaryOperation instanceof MemberReference col ReferenceType Collaboration BinaryOperation == MemberReference col Literal null BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference col	0
MethodDeclaration Modifier public startElement FormalParameter BasicType int nameCode FormalParameter ReferenceType org ReferenceType xml ReferenceType sax ReferenceType Attributes attributes FormalParameter BasicType int namespaces FormalParameter BasicType int nscount TransformerException IfStatement MethodInvocation ! MemberReference nameCode skipThisElement BlockStatement LocalVariableDeclaration ReferenceType StartElementInfo VariableDeclarator sei ClassCreator ReferenceType StartElementInfo MemberReference nameCode MemberReference attributes MemberReference namespaces MemberReference nscount StatementExpression MethodInvocation elementStack MemberReference sei push StatementExpression Assignment MemberReference firstElement Literal false = StatementExpression MethodInvocation rtfEmitter MemberReference nameCode MemberReference attributes MemberReference namespaces MemberReference nscount startElement	1
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType TreeSelectionEvent e IfStatement MemberReference ! BlockStatement StatementExpression Assignment MemberReference Literal true = LocalVariableDeclaration ReferenceType TreePath VariableDeclarator addedOrRemovedPaths MethodInvocation e getPaths LocalVariableDeclaration ReferenceType TreePath VariableDeclarator selectedPaths MethodInvocation getSelectionPaths LocalVariableDeclaration ReferenceType List VariableDeclarator elementsAsList ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation && BinaryOperation != MemberReference selectedPaths Literal null BinaryOperation < MemberReference i MemberReference selectedPaths length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element Cast ReferenceType DefaultMutableTreeNode MemberReference ArraySelector MemberReference i MethodInvocation getLastPathComponent selectedPaths StatementExpression MethodInvocation elementsAsList MemberReference element add LocalVariableDeclaration BasicType int VariableDeclarator rows MethodInvocation getRowCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator row Literal 0 BinaryOperation < MemberReference row MemberReference rows MemberReference ++ row BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator rowItem Cast ReferenceType DefaultMutableTreeNode MethodInvocation MethodInvocation getLastPathComponent MemberReference row getPathForRow IfStatement BinaryOperation && BinaryOperation == MemberReference rowItem MemberReference element MethodInvocation ! MemberReference row BlockStatement StatementExpression MethodInvocation MemberReference row addSelectionRow LocalVariableDeclaration BasicType boolean VariableDeclarator callSetTarget Literal true LocalVariableDeclaration ReferenceType List VariableDeclarator addedElements ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference addedOrRemovedPaths length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element Cast ReferenceType DefaultMutableTreeNode MemberReference ArraySelector MemberReference i MethodInvocation getLastPathComponent addedOrRemovedPaths IfStatement MethodInvocation ! e MemberReference i isAddedPath BlockStatement StatementExpression Assignment MemberReference callSetTarget Literal false = BreakStatement StatementExpression MethodInvocation addedElements MemberReference element add IfStatement BinaryOperation && BinaryOperation && MemberReference callSetTarget BinaryOperation == MethodInvocation addedElements size MethodInvocation elementsAsList size MethodInvocation elementsAsList MemberReference addedElements BlockStatement StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference elementsAsList setTargets getInstance BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator removedTargets ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType List VariableDeclarator addedTargets ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference addedOrRemovedPaths length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element Cast ReferenceType DefaultMutableTreeNode MemberReference ArraySelector MemberReference i MethodInvocation getLastPathComponent addedOrRemovedPaths IfStatement MethodInvocation e MemberReference i isAddedPath BlockStatement StatementExpression MethodInvocation addedTargets MemberReference element add BlockStatement StatementExpression MethodInvocation removedTargets MemberReference element add IfStatement MethodInvocation ! removedTargets isEmpty BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation removedTargets iterator WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation it next getInstance IfStatement MethodInvocation ! addedTargets isEmpty BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation addedTargets iterator WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation it next addTarget getInstance StatementExpression Assignment MemberReference Literal false =	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference item	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType ReturnAction	0
MethodDeclaration Modifier public final BasicType boolean isLoaded ReturnStatement MemberReference loaded	0
MethodDeclaration Modifier public ReferenceType Action getAction ReturnStatement Literal null	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int index IfStatement BinaryOperation || BinaryOperation == MemberReference index MemberReference TOP BinaryOperation == MemberReference index MemberReference BOTTOM BlockStatement ReturnStatement MethodInvocation Model MethodInvocation getMetaTypes ReturnStatement MethodInvocation Model MethodInvocation getMetaTypes	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object FormalParameter ReferenceType Object include IfStatement BinaryOperation && BinaryOperation instanceof MemberReference ReferenceType BinaryOperation instanceof MemberReference include ReferenceType Include BlockStatement StatementExpression Cast ReferenceType MemberReference ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference Literal " or " MemberReference include	0
MethodDeclaration Modifier public ReferenceType getNotationType ReturnStatement MethodInvocation getNotationType	0
MethodDeclaration Modifier public ReferenceType FigEdge getFigEdge ReturnStatement MemberReference figEdge	0
MethodDeclaration Modifier public dragOver FormalParameter ReferenceType DropTargetDragEvent dropTargetDragEvent LocalVariableDeclaration ReferenceType Point VariableDeclarator pt MethodInvocation dropTargetDragEvent getLocation IfStatement MethodInvocation pt MemberReference lastMouseLocation equals BlockStatement ReturnStatement StatementExpression Assignment MemberReference lastMouseLocation MemberReference pt = LocalVariableDeclaration ReferenceType Graphics2D VariableDeclarator g2 Cast ReferenceType Graphics2D MethodInvocation getGraphics IfStatement BinaryOperation != MemberReference ghostImage Literal null BlockStatement IfStatement MethodInvocation ! DragSource BlockStatement StatementExpression MethodInvocation MethodInvocation ghostRectangle getBounds StatementExpression MethodInvocation ghostRectangle BinaryOperation - MemberReference pt x MemberReference clickOffset x BinaryOperation - MemberReference pt y MemberReference clickOffset y MethodInvocation ghostImage getWidth MethodInvocation ghostImage getHeight setRect StatementExpression MethodInvocation g2 MemberReference ghostImage MethodInvocation AffineTransform MethodInvocation ghostRectangle getX MethodInvocation ghostRectangle getY Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation cueLine getBounds LocalVariableDeclaration ReferenceType TreePath VariableDeclarator path MethodInvocation MemberReference pt x MemberReference pt y getPathForLocation IfStatement BinaryOperation == MemberReference path MemberReference BlockStatement StatementExpression Assignment MemberReference MemberReference path = StatementExpression MethodInvocation hoverTimer LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator raPath MethodInvocation MemberReference path getPathBounds IfStatement BinaryOperation != MemberReference raPath Literal null BlockStatement StatementExpression MethodInvocation cueLine Literal 0 BinaryOperation + MemberReference raPath y Cast BasicType int MethodInvocation raPath getHeight MethodInvocation getWidth Literal 2 setRect StatementExpression MethodInvocation g2 MemberReference setColor StatementExpression MethodInvocation g2 MemberReference cueLine fill StatementExpression Assignment MemberReference ghostRectangle MethodInvocation ghostRectangle MemberReference cueLine = TryStatement IfStatement MethodInvocation ! dropTargetDragEvent MemberReference TransferableModelElements UML_COLLECTION_FLAVOR isDataFlavorSupported BlockStatement StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement CatchClause CatchClauseParameter NullPointerException e StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement IfStatement BinaryOperation == MemberReference path Literal null BlockStatement StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement IfStatement MethodInvocation path MemberReference sourcePath equals BlockStatement StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement IfStatement MethodInvocation MemberReference path isDescendant BlockStatement StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator dest Cast ReferenceType DefaultMutableTreeNode MethodInvocation path getLastPathComponent IfStatement MethodInvocation ! Model MethodInvocation MemberReference dest isANamespace getFacade BlockStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name IfStatement MethodInvocation Model MethodInvocation MemberReference dest isAUMLElement getFacade BlockStatement StatementExpression Assignment MemberReference name MethodInvocation Model MethodInvocation MemberReference dest getName getFacade = IfStatement BinaryOperation == MemberReference dest Literal null BlockStatement StatementExpression Assignment MemberReference name Literal "<null>" = BlockStatement StatementExpression Assignment MemberReference name MethodInvocation dest toString = StatementExpression MethodInvocation LOG BinaryOperation + Literal "No valid Drag: " TernaryExpression MethodInvocation Model MethodInvocation MemberReference dest isAUMLElement getFacade BinaryOperation + MemberReference name Literal " not a namespace." Literal " not a element." debug StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement IfStatement MethodInvocation Model MethodInvocation MemberReference dest isReadOnly getModelManagementHelper BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "No valid Drag: " Literal "not an editable element (profile?)." debug ReturnStatement IfStatement MethodInvocation Model MethodInvocation MemberReference dest isADataType getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "No valid Drag: destination is a DataType." debug StatementExpression MethodInvocation dropTargetDragEvent rejectDrag ReturnStatement StatementExpression MethodInvocation dropTargetDragEvent MethodInvocation dropTargetDragEvent getDropAction acceptDrag	1
MethodDeclaration Modifier private ReferenceType String generateExtensionPoint FormalParameter ReferenceType Object ep ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation Boolean MethodInvocation toString	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier protected ReferenceType Project doLoad FormalParameter ReferenceType File originalFile FormalParameter ReferenceType File file FormalParameter ReferenceType ProgressMgr progressMgr OpenException InterruptedException LocalVariableDeclaration ReferenceType XmlInputStream VariableDeclarator inputStream Literal null TryStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectFactory MethodInvocation MethodInvocation file toURI createProject getInstance LocalVariableDeclaration BasicType int VariableDeclarator fileVersion MethodInvocation MemberReference file getPersistenceVersionFromFile StatementExpression MethodInvocation LOG BinaryOperation + Literal "Loading uml file of version " MemberReference fileVersion info IfStatement MethodInvocation ! MemberReference fileVersion MethodInvocation MemberReference file getReleaseVersionFromFile checkVersion BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator release MethodInvocation MemberReference file getReleaseVersionFromFile StatementExpression MethodInvocation MemberReference originalFile ClassCreator ReferenceType File BinaryOperation + BinaryOperation + MethodInvocation originalFile getAbsolutePath Literal '~' MemberReference release copyFile StatementExpression MethodInvocation progressMgr BinaryOperation + MethodInvocation progressMgr BinaryOperation - MemberReference PERSISTENCE_VERSION MemberReference fileVersion setNumberOfPhases WhileStatement BinaryOperation < MemberReference fileVersion MemberReference PERSISTENCE_VERSION BlockStatement StatementExpression MemberReference ++ fileVersion StatementExpression MethodInvocation LOG BinaryOperation + Literal "Upgrading to version " MemberReference fileVersion info LocalVariableDeclaration BasicType long VariableDeclarator startTime MethodInvocation System currentTimeMillis StatementExpression Assignment MemberReference file MethodInvocation MemberReference file MemberReference fileVersion transform = LocalVariableDeclaration BasicType long VariableDeclarator endTime MethodInvocation System currentTimeMillis StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Upgrading took " BinaryOperation / BinaryOperation - MemberReference endTime MemberReference startTime Literal 1000 Literal " info StatementExpression MethodInvocation progressMgr nextPhase StatementExpression MethodInvocation progressMgr nextPhase StatementExpression Assignment MemberReference inputStream ClassCreator ReferenceType XmlInputStream MethodInvocation file MethodInvocation toURL MethodInvocation openStream toURI Literal "argo" MethodInvocation file length Literal 100000 = LocalVariableDeclaration ReferenceType ArgoParser VariableDeclarator parser ClassCreator ReferenceType ArgoParser LocalVariableDeclaration ReferenceType Reader VariableDeclarator reader ClassCreator ReferenceType InputStreamReader MemberReference inputStream MethodInvocation Argo getEncoding StatementExpression MethodInvocation parser MemberReference p MemberReference reader LocalVariableDeclaration ReferenceType List VariableDeclarator memberList MethodInvocation parser StatementExpression MethodInvocation LOG BinaryOperation + MethodInvocation memberList size Literal " members" info ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation memberList size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType MemberFilePersister VariableDeclarator persister MethodInvocation Cast ReferenceType String MethodInvocation memberList MemberReference i get getMemberFilePersister StatementExpression MethodInvocation LOG BinaryOperation + Literal "Loading member with " MethodInvocation persister MethodInvocation getName getClass info StatementExpression MethodInvocation inputStream MethodInvocation persister reopen LocalVariableDeclaration ReferenceType InputSource VariableDeclarator inputSource ClassCreator ReferenceType InputSource MemberReference inputStream StatementExpression MethodInvocation inputSource MethodInvocation originalFile MethodInvocation toURL MethodInvocation toExternalForm toURI setPublicId TryStatement StatementExpression MethodInvocation persister MemberReference p MemberReference inputSource load CatchClause CatchClauseParameter OpenException e IfStatement BinaryOperation && BinaryOperation && Literal MethodInvocation MethodInvocation persister equals BinaryOperation instanceof MethodInvocation e getCause ReferenceType UmlException BinaryOperation instanceof MethodInvocation e MethodInvocation getCause getCause ReferenceType IOException BlockStatement StatementExpression MethodInvocation inputStream Literal reopen StatementExpression MethodInvocation persister MemberReference p MemberReference inputSource load StatementExpression MethodInvocation p MemberReference Project BlockStatement ThrowStatement MemberReference e StatementExpression MethodInvocation progressMgr nextPhase StatementExpression MethodInvocation ThreadUtils checkIfInterrupted StatementExpression MethodInvocation inputStream StatementExpression MethodInvocation p postLoad ReturnStatement MemberReference p CatchClause CatchClauseParameter InterruptedException e ThrowStatement MemberReference e CatchClause CatchClauseParameter OpenException e ThrowStatement MemberReference e CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e CatchClause CatchClauseParameter SAXException e ThrowStatement ClassCreator ReferenceType OpenException MemberReference e	1
MethodDeclaration Modifier public ReferenceType String getPriority LocalVariableDeclaration ReferenceType String VariableDeclarator s MemberReference TodoTokenTable STRING_PRIO_HIGH SwitchStatement MethodInvocation item getPriority SwitchStatementCase MemberReference ToDoItem HIGH_PRIORITY StatementExpression Assignment MemberReference s MemberReference TodoTokenTable STRING_PRIO_HIGH = BreakStatement SwitchStatementCase MemberReference ToDoItem MED_PRIORITY StatementExpression Assignment MemberReference s MemberReference TodoTokenTable = BreakStatement SwitchStatementCase MemberReference ToDoItem LOW_PRIORITY StatementExpression Assignment MemberReference s MemberReference TodoTokenTable = BreakStatement ReturnStatement MethodInvocation MemberReference s encode	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation TargetManager MethodInvocation navigateBackward getInstance	0
MethodDeclaration Modifier public ReferenceType MBeanNotificationInfo getNotificationInfo ReturnStatement MethodInvocation notifier getNotificationInfo	0
MethodDeclaration Modifier public ReferenceType Vector LocalVariableDeclaration ReferenceType Vector VariableDeclarator result ClassCreator ReferenceType Vector LocalVariableDeclaration ReferenceType ListModel VariableDeclarator list MethodInvocation getModel ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation list getSize MemberReference ++ i BlockStatement StatementExpression MethodInvocation result MethodInvocation list MemberReference i getElementAt add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public popupMenuWillBecomeVisible FormalParameter ReferenceType PopupMenuEvent ev IfStatement BinaryOperation && BinaryOperation && MethodInvocation MemberReference ! modelValid MemberReference ! processingWillBecomeVisible BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference modelValid Literal true = LocalVariableDeclaration ReferenceType JComboBox VariableDeclarator list Cast ReferenceType JComboBox MethodInvocation ev getSource StatementExpression Assignment MemberReference processingWillBecomeVisible Literal true = TryStatement StatementExpression MethodInvocation list MethodInvocation MemberReference list Literal true setPopupVisible StatementExpression Assignment MemberReference processingWillBecomeVisible Literal false =	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean StatementExpression Assignment This MemberReference Literal true = StatementExpression Assignment This MemberReference Literal false = StatementExpression Assignment This MemberReference Literal false = ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType String VariableDeclarator Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator Literal null LocalVariableDeclaration ReferenceType UMLComboBox VariableDeclarator box Cast ReferenceType UMLComboBox MemberReference source LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation box getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference t isATagDefinition getFacade BlockStatement StatementExpression Assignment MemberReference MemberReference t = StatementExpression Assignment MemberReference Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference getType getFacade = StatementExpression Assignment MemberReference Cast ReferenceType String MethodInvocation box getSelectedItem = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation ! MemberReference equals BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference getExtensionMechanismsHelper	0
MethodDeclaration Modifier public FormalParameter ReferenceType String statusText StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ArgoEventTypes This MemberReference statusText	0
MethodDeclaration Modifier public ReferenceType Transition ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public Annotation Override ReferenceType ReturnStatement MethodInvocation getTheInstance	0
MethodDeclaration Modifier public FormalParameter ReferenceType e IfStatement BinaryOperation == MethodInvocation e getSource MemberReference bboxField BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier public ReferenceType String getLanguage FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType EList TypeArgument ReferenceType String VariableDeclarator langs Literal null IfStatement BinaryOperation instanceof MemberReference handle ReferenceType OpaqueExpression BlockStatement StatementExpression Assignment MemberReference langs Cast ReferenceType OpaqueExpression MemberReference handle = IfStatement BinaryOperation instanceof MemberReference handle ReferenceType OpaqueBehavior BlockStatement StatementExpression Assignment MemberReference langs Cast ReferenceType OpaqueBehavior MemberReference handle = BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal must be instance of Literal " or got " MemberReference handle ReturnStatement TernaryExpression BinaryOperation < MethodInvocation langs size Literal 1 Literal null MethodInvocation langs Literal 0 get	1
MethodDeclaration Modifier public Annotation Override addKnowledgeType FormalParameter ReferenceType String type ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation getOffenders BlockStatement IfStatement BinaryOperation instanceof MemberReference dm ReferenceType Highlightable BlockStatement StatementExpression Cast ReferenceType Highlightable MemberReference dm	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public add FormalParameter BasicType int arg0 FormalParameter ReferenceType ProjectMember arg1 ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType String ReturnStatement MethodInvocation impl	0
MethodDeclaration Modifier public ReferenceType Project FormalParameter Modifier final BasicType boolean LocalVariableDeclaration Modifier final ReferenceType Command VariableDeclarator cmd ClassCreator ReferenceType MethodDeclaration Modifier public Annotation Override ReferenceType Object execute StatementExpression MethodInvocation Model MethodInvocation getPump StatementExpression Assignment MemberReference creatingCurrentProject Literal true = StatementExpression MethodInvocation LOG Literal "making empty profile project" info LocalVariableDeclaration ReferenceType Project VariableDeclarator newProject ClassCreator ReferenceType MemberReference Project StatementExpression MethodInvocation MemberReference newProject IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator d MethodInvocation MemberReference newProject StatementExpression MethodInvocation MemberReference newProject StatementExpression MethodInvocation newProject MemberReference d StatementExpression Assignment MemberReference creatingCurrentProject Literal false = StatementExpression MethodInvocation MemberReference newProject StatementExpression MethodInvocation Model MethodInvocation getPump ReturnStatement Literal null StatementExpression MethodInvocation cmd execute StatementExpression MethodInvocation currentProject MethodInvocation MemberReference cmd StatementExpression MethodInvocation Literal false ReturnStatement MemberReference currentProject	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String desc ReturnStatement MethodInvocation ClassCreator MethodInvocation parse ReferenceType MemberReference desc	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType DropTargetDragEvent dropTargetEvent IfStatement BinaryOperation == BinaryOperation & MethodInvocation dropTargetEvent getDropAction MemberReference DnDConstants ACTION_COPY_OR_MOVE Literal 0 BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Point VariableDeclarator pt MethodInvocation dropTargetEvent getLocation LocalVariableDeclaration ReferenceType TreePath VariableDeclarator path MethodInvocation MemberReference pt x MemberReference pt y getPathForLocation IfStatement BinaryOperation == MemberReference path Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation path MemberReference sourcePath equals BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object profile IfStatement BinaryOperation instanceof MemberReference profile ReferenceType Profile BlockStatement IfStatement Cast ReferenceType Profile MemberReference profile BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Model BlockStatement StatementExpression Cast ReferenceType Model MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Profile BlockStatement StatementExpression Cast ReferenceType Profile MemberReference handle LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType VariableDeclarator iter Cast ReferenceType Profile MemberReference profile WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator p MethodInvocation iter next IfStatement BinaryOperation instanceof MemberReference p ReferenceType Profile BlockStatement StatementExpression MethodInvocation MemberReference handle MemberReference p	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object element IfStatement BinaryOperation instanceof MemberReference element ReferenceType NamedElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of ReturnStatement Cast ReferenceType NamedElement MemberReference element	0
MethodDeclaration Modifier public ReferenceType TargetListener ReturnStatement Cast ReferenceType MethodInvocation getDocument	0
MethodDeclaration Modifier public final setDouble FormalParameter ReferenceType ConfigurationKey key FormalParameter BasicType double value StatementExpression MethodInvocation MemberReference key MethodInvocation Double MemberReference value toString	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType String ReturnStatement MethodInvocation Boolean MethodInvocation toString	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation MemberReference kind equals	0
MethodDeclaration Modifier protected ReferenceType Object getUmlActions TryStatement LocalVariableDeclaration Modifier final ReferenceType Document VariableDeclarator doc MethodInvocation getDocument LocalVariableDeclaration Modifier final ReferenceType Element VariableDeclarator element MethodInvocation MethodInvocation doc getDocumentElement Literal getElement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator size MethodInvocation element MethodInvocation getLength getChildNodes StatementExpression Assignment MemberReference nameByMetaType ClassCreator ReferenceType HashMap TypeArgument ReferenceType Class TypeArgument ? TypeArgument ReferenceType String MemberReference size = StatementExpression Assignment MemberReference metaTypeByName ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Class TypeArgument ? MemberReference size = StatementExpression MethodInvocation MemberReference element MemberReference nameByMetaType MemberReference metaTypeByName populateClassMaps LocalVariableDeclaration Modifier final ReferenceType Element VariableDeclarator toolbarElement MethodInvocation MethodInvocation doc getDocumentElement Literal "toolbar" getElement ReturnStatement MethodInvocation MemberReference toolbarElement getToolbarActions CatchClause CatchClauseParameter DOMException e StatementExpression MethodInvocation LOG Literal "" MemberReference e error CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG Literal "" MemberReference e error CatchClause CatchClauseParameter ParserConfigurationException e StatementExpression MethodInvocation LOG Literal "" MemberReference e error CatchClause CatchClauseParameter SAXException e StatementExpression MethodInvocation LOG Literal "" MemberReference e error ReturnStatement Literal null	1
MethodDeclaration Modifier public setTitle FormalParameter ReferenceType String t StatementExpression Assignment MemberReference title MemberReference t =	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal "edgeClass" MethodInvocation Model MethodInvocation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Class getColumnClass FormalParameter BasicType int c IfStatement BinaryOperation && BinaryOperation >= MemberReference c Literal 0 BinaryOperation < MemberReference c MethodInvocation getLanguagesCount BlockStatement ReturnStatement ClassReference ReferenceType Boolean IfStatement BinaryOperation == MemberReference c MethodInvocation getLanguagesCount BlockStatement ReturnStatement ClassReference ReferenceType String ReturnStatement ClassReference ReferenceType String	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public addPackageContext FormalParameter ReferenceType Object mPackage StatementExpression Assignment MemberReference context ClassCreator ReferenceType MemberReference context MemberReference mPackage =	0
MethodDeclaration Modifier public ReferenceType String getUmlVersion ReturnStatement Literal	0
MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference text getCoreHelper	0
MethodDeclaration Modifier private ReferenceType Message FormalParameter ReferenceType Collection TypeArgument ReferenceType Message c FormalParameter ReferenceType Message m LocalVariableDeclaration ReferenceType Message VariableDeclarator last Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Message VariableDeclarator msg MemberReference c BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference msg Literal null BinaryOperation != MemberReference msg MemberReference m BlockStatement StatementExpression Assignment MemberReference last MemberReference msg = ReturnStatement MemberReference last	0
MethodDeclaration Modifier private StatementExpression Assignment MemberReference slider ClassCreator ReferenceType MemberReference VERTICAL MemberReference MINIMUM_ZOOM MemberReference MAXIMUM_ZOOM MemberReference MINIMUM_ZOOM = StatementExpression MethodInvocation slider Literal true StatementExpression MethodInvocation slider Literal 25 StatementExpression MethodInvocation slider Literal 5 StatementExpression MethodInvocation slider Literal true StatementExpression MethodInvocation slider Literal true LocalVariableDeclaration BasicType int VariableDeclarator sliderBaseWidth MethodInvocation slider MemberReference width getPreferredSize StatementExpression MethodInvocation slider Literal true ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator components MethodInvocation slider MethodInvocation elements getLabelTable MethodInvocation components hasMoreElements BlockStatement StatementExpression Cast ReferenceType Component MethodInvocation components nextElement StatementExpression MethodInvocation slider MethodInvocation Translator Literal localize setToolTipText StatementExpression MethodInvocation slider ClassCreator ReferenceType MethodDeclaration Modifier public stateChanged FormalParameter ReferenceType e StatementExpression MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator labelWidth BinaryOperation + MethodInvocation slider MethodInvocation MethodInvocation String MemberReference MAXIMUM_ZOOM valueOf stringWidth MemberReference LABEL_FONT getFontMetrics Literal 6 StatementExpression MethodInvocation slider ClassCreator ReferenceType Dimension BinaryOperation + MemberReference sliderBaseWidth MemberReference labelWidth MemberReference setPreferredSize StatementExpression Assignment MemberReference currentValue ClassCreator ReferenceType JTextField Literal 5 = StatementExpression MethodInvocation currentValue MemberReference JLabel CENTER setHorizontalAlignment StatementExpression MethodInvocation currentValue MemberReference LABEL_FONT setFont StatementExpression MethodInvocation currentValue MethodInvocation Translator Literal localize setToolTipText StatementExpression MethodInvocation StatementExpression MethodInvocation currentValue ClassCreator ReferenceType ActionListener MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation addActionListener StatementExpression MethodInvocation currentValue ClassCreator ReferenceType MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType e StatementExpression MethodInvocation LocalVariableDeclaration ReferenceType VariableDeclarator currentValuePanel ClassCreator ReferenceType ClassCreator ReferenceType MemberReference CENTER Literal 0 Literal 0 StatementExpression MethodInvocation currentValuePanel MemberReference currentValue add LocalVariableDeclaration ReferenceType VariableDeclarator zoomPanel ClassCreator ReferenceType ClassCreator ReferenceType Literal 0 Literal 0 StatementExpression MethodInvocation zoomPanel MemberReference slider MemberReference CENTER add StatementExpression MethodInvocation zoomPanel MemberReference currentValuePanel MemberReference add StatementExpression MethodInvocation MemberReference zoomPanel	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Object source FormalParameter ReferenceType Object path FormalParameter BasicType int FormalParameter ReferenceType Object children LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList LocalVariableDeclaration ReferenceType VariableDeclarator e Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType BlockStatement IfStatement BinaryOperation == MemberReference e Literal null BlockStatement StatementExpression Assignment MemberReference e ClassCreator ReferenceType MemberReference source MemberReference path MemberReference MemberReference children = StatementExpression Cast ReferenceType MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Transition BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator trs Cast ReferenceType Transition MemberReference handle IfStatement MethodInvocation trs isEmpty BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation trs Literal 0 get	1
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unused" ReferenceType Dimension FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h FormalParameter BasicType boolean FormalParameter BasicType int rowHeight ReturnStatement MethodInvocation getMinimumSize	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier public ReferenceType DataType buildDataType FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Object owner IfStatement BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType Class BinaryOperation instanceof MemberReference owner ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The owner must be instance of Literal " or UML2 Class or LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType DataType VariableDeclarator dataType MethodInvocation IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation dataType MemberReference name setName IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType BlockStatement StatementExpression MethodInvocation dataType Cast ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType MemberReference owner setPackage IfStatement BinaryOperation instanceof MemberReference owner ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType Class BlockStatement StatementExpression Cast ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType Class MemberReference owner IfStatement BinaryOperation instanceof MemberReference owner ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference owner StatementExpression MethodInvocation MethodInvocation MemberReference dataType add LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the data type by #" StatementExpression MethodInvocation MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get MemberReference owner ReturnStatement Cast ReferenceType DataType MethodInvocation run MethodInvocation Literal 0 get	0
MethodDeclaration Modifier public ReferenceType String getTabKey ReturnStatement Literal	0
MethodDeclaration Modifier private ReferenceType ExpressionNode ConsumeBinary FormalParameter BasicType int startOp FeatureNotSupportedException LocalVariableDeclaration ReferenceType ExpressionNode VariableDeclarator result Literal null IfStatement BinaryOperation || BinaryOperation == MethodInvocation exprStack size Literal 0 BinaryOperation > MemberReference ArraySelector Cast BasicType int MethodInvocation tokens MemberReference id BinaryOperation - MemberReference index Literal 2 get precedence Literal 0 BlockStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseExpressionSegment WhileStatement BinaryOperation > MemberReference ArraySelector Cast BasicType int MemberReference curtok id precedence MemberReference ArraySelector Cast BasicType int MemberReference startOp precedence BlockStatement StatementExpression MethodInvocation ParseExpressionSegment StatementExpression Assignment MemberReference result MethodInvocation exprStack pop = BlockStatement StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType BinaryExpression VariableDeclarator bNode ClassCreator ReferenceType BinaryExpression MemberReference startOp StatementExpression Assignment MemberReference bNode Left MethodInvocation exprStack pop = StatementExpression MethodInvocation exprStack MemberReference bNode push StatementExpression MethodInvocation ParseExpressionSegment WhileStatement BinaryOperation > MemberReference ArraySelector Cast BasicType int MemberReference curtok id precedence MemberReference ArraySelector Cast BasicType int MemberReference startOp precedence BlockStatement StatementExpression MethodInvocation ParseExpressionSegment StatementExpression Assignment MemberReference bNode Right MethodInvocation exprStack pop = ReturnStatement MemberReference result	1
MethodDeclaration Modifier public BasicType boolean addAll FormalParameter ReferenceType Collection TypeArgument ReferenceType ProjectMember extends arg0 ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public Annotation Override setSourceFigNode FormalParameter ReferenceType FigNode fn IfStatement BinaryOperation || BinaryOperation instanceof MemberReference fn ReferenceType BinaryOperation instanceof MemberReference fn ReferenceType FigNodeAssociation BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The source of an association class link can " Literal be a StatementExpression SuperMethodInvocation MemberReference fn setSourceFigNode	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType node StatementExpression MethodInvocation MemberReference node LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator vars ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String IfStatement BinaryOperation != MethodInvocation node getName Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getName StatementExpression MethodInvocation vars MethodInvocation node MethodInvocation toString MethodInvocation trim getName add BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator temp MethodInvocation node MethodInvocation toArray ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference temp length MemberReference ++ i BlockStatement StatementExpression Cast ReferenceType PDeclaratorTail MemberReference ArraySelector MemberReference i temp StatementExpression MethodInvocation vars Cast ReferenceType MemberReference ArraySelector MemberReference i temp add StatementExpression Assignment MemberReference val MemberReference vars = IfStatement BinaryOperation != MethodInvocation node getDeclaratorTypeDeclaration Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getDeclaratorTypeDeclaration IfStatement BinaryOperation != MethodInvocation node Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply StatementExpression MethodInvocation MemberReference node outAStandardDeclarator	1
MethodDeclaration Modifier public ReferenceType Type FormalParameter ReferenceType String name FormalParameter ReferenceType Type OclTypeException ReturnStatement MethodInvocation MemberReference name MemberReference Literal false	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation outlineFig MemberReference col setLineColor StatementExpression MethodInvocation MemberReference col setLineColor	0
MethodDeclaration Modifier protected LocalVariableDeclaration BasicType int VariableDeclarator style MethodInvocation LocalVariableDeclaration ReferenceType Font VariableDeclarator f MethodInvocation MethodInvocation MemberReference style getFont getSettings StatementExpression MethodInvocation MemberReference f setFont StatementExpression MethodInvocation This	0
MethodDeclaration Modifier protected FormalParameter ReferenceType PrintWriter writer FormalParameter ReferenceType File file SaveException TryStatement LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader ClassCreator ReferenceType BufferedReader ClassCreator ReferenceType InputStreamReader ClassCreator ReferenceType FileInputStream MemberReference file MethodInvocation Argo getEncoding LocalVariableDeclaration ReferenceType String VariableDeclarator line MethodInvocation reader readLine WhileStatement BinaryOperation && BinaryOperation != MemberReference line Literal null BinaryOperation || MethodInvocation line Literal "<?xml " startsWith MethodInvocation line Literal "<!DOCTYPE " startsWith BlockStatement StatementExpression Assignment MemberReference line MethodInvocation reader readLine = WhileStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression MemberReference MethodInvocation MemberReference line println writer StatementExpression Assignment MemberReference line MethodInvocation reader readLine = StatementExpression MethodInvocation reader close CatchClause CatchClauseParameter FileNotFoundException e ThrowStatement ClassCreator ReferenceType SaveException MemberReference e CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType SaveException MemberReference e	1
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object getAttribute FormalParameter ReferenceType String key ReturnStatement MethodInvocation attributes MemberReference key get	0
MethodDeclaration Modifier public FormalParameter ReferenceType ToDoListEvent StatementExpression MethodInvocation LOG Literal debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation getToDoList = ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MethodInvocation Designer MethodInvocation getDecisionModel MethodInvocation BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator nMatchingItems Literal 0 StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference = ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement MethodInvocation ! item MemberReference BlockStatement ContinueStatement StatementExpression MemberReference ++ nMatchingItems IfStatement BinaryOperation == MemberReference nMatchingItems Literal 0 BlockStatement ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator ArrayCreator BasicType int MemberReference nMatchingItems LocalVariableDeclaration ReferenceType Object VariableDeclarator children ArrayCreator ReferenceType Object MemberReference nMatchingItems StatementExpression Assignment MemberReference nMatchingItems Literal 0 = ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement MethodInvocation ! item MemberReference BlockStatement ContinueStatement StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems MethodInvocation MemberReference MemberReference item = StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems children MemberReference item = StatementExpression MemberReference ++ nMatchingItems StatementExpression MethodInvocation This MemberReference path MemberReference MemberReference children	0
MethodDeclaration Modifier private ReferenceType String generateClassifierAttributes FormalParameter ReferenceType Object modelElement IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAClassifier getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Classifier required" LocalVariableDeclaration ReferenceType String VariableDeclarator sClsAttr Literal "" IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAClass getFacade BlockStatement StatementExpression Assignment MemberReference sClsAttr BinaryOperation + MemberReference INDENT Literal "// ATTRIBUTES += LocalVariableDeclaration ReferenceType Collection VariableDeclarator colAttributes MethodInvocation Model MethodInvocation MemberReference modelElement getAttributes getFacade IfStatement BinaryOperation != MemberReference colAttributes Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator itAttributes MethodInvocation colAttributes iterator WhileStatement MethodInvocation itAttributes hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator attr MethodInvocation itAttributes next StatementExpression Assignment MemberReference sClsAttr Literal "\n" += LocalVariableDeclaration ReferenceType PHPDocumentor VariableDeclarator objPHPDoc Literal null TryStatement StatementExpression Assignment MemberReference objPHPDoc ClassCreator ReferenceType PHPDocumentor MemberReference attr = CatchClause CatchClauseParameter Exception exp StatementExpression MethodInvocation LOG BinaryOperation + Literal "Generating attribute DocBlock FAILED: " MethodInvocation exp getMessage error IfStatement BinaryOperation != MemberReference objPHPDoc Literal null BlockStatement StatementExpression Assignment MemberReference sClsAttr MethodInvocation objPHPDoc MemberReference INDENT toString += StatementExpression Assignment MemberReference sClsAttr BinaryOperation + BinaryOperation + MemberReference INDENT MethodInvocation MemberReference attr Literal false generateAttribute Literal "\n" += StatementExpression Assignment MemberReference sClsAttr Literal "\n" += ReturnStatement MemberReference sClsAttr	1
MethodDeclaration Modifier public ReferenceType Object getExpression FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String language FormalParameter ReferenceType String body LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation modelImpl MethodInvocation MethodInvocation MethodInvocation MemberReference language MemberReference body getUmlPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object source FormalParameter ReferenceType Object ns IfStatement BinaryOperation instanceof MemberReference source ReferenceType UmlPackage BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "source" IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "namespace" LocalVariableDeclaration ReferenceType UmlPackage VariableDeclarator p MethodInvocation StatementExpression Cast ReferenceType Namespace MemberReference ns StatementExpression MethodInvocation Cast ReferenceType UmlPackage MemberReference source MemberReference p ReturnStatement MemberReference p	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MemberReference element MethodInvocation Model MethodInvocation MethodInvocation getTarget getTop getFacade	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent lse IfStatement MethodInvocation lse getValueIsAdjusting BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator selPers Literal null IfStatement BinaryOperation > MethodInvocation size Literal 0 BlockStatement StatementExpression Assignment MemberReference selPers MethodInvocation getSelectedValue = LocalVariableDeclaration ReferenceType Object VariableDeclarator Literal null IfStatement BinaryOperation > MethodInvocation size Literal 0 BlockStatement StatementExpression Assignment MemberReference MethodInvocation getSelectedValue = StatementExpression MethodInvocation BinaryOperation && BinaryOperation != MemberReference selPers Literal null BinaryOperation != MemberReference Literal null setEnabled	0
MethodDeclaration Modifier protected ReferenceType Action FormalParameter Modifier final ReferenceType Object aggregation FormalParameter Modifier final BasicType boolean unidirectional LocalVariableDeclaration ReferenceType String VariableDeclarator label IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getComposite MemberReference aggregation BlockStatement StatementExpression Assignment MemberReference label Literal = IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference aggregation BlockStatement StatementExpression Assignment MemberReference label Literal "aggregation" = BlockStatement StatementExpression Assignment MemberReference label Literal "association" = IfStatement MemberReference unidirectional BlockStatement StatementExpression Assignment MemberReference label BinaryOperation + Literal MemberReference label = StatementExpression Assignment MemberReference label BinaryOperation + Literal "button.new-" MemberReference label = ReturnStatement ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation MemberReference unidirectional MemberReference label	0
MethodDeclaration Modifier public ReferenceType Object addInterface FormalParameter BasicType long modifiers FormalParameter ReferenceType String name FormalParameter ReferenceType String parent IfStatement BinaryOperation != MethodInvocation ele BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MemberReference parent Literal "." MemberReference name get Literal null BlockStatement ReturnStatement MethodInvocation ele BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MemberReference parent Literal "." MemberReference name get LocalVariableDeclaration BasicType short VariableDeclarator cmod MethodInvocation ModifierMap MemberReference modifiers getUmlModifierForVisibility LocalVariableDeclaration ReferenceType Object VariableDeclarator mInterface MethodInvocation Model MethodInvocation getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference mInterface MemberReference name setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference mInterface MethodInvocation ele BinaryOperation + MemberReference MemberReference parent get setNamespace getCoreHelper StatementExpression MethodInvocation MemberReference mInterface MemberReference cmod setVisibility StatementExpression MethodInvocation Model MethodInvocation MemberReference mInterface Literal false setRoot getCoreHelper StatementExpression MethodInvocation ele BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MemberReference parent Literal "." MemberReference name MemberReference mInterface put ReturnStatement MemberReference mInterface	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier public Annotation Override BasicType int getLineWidth ReturnStatement MethodInvocation cover getLineWidth	0
MethodDeclaration Modifier final static protected setMnemonic FormalParameter ReferenceType JButton b FormalParameter ReferenceType String key LocalVariableDeclaration ReferenceType String VariableDeclarator m MethodInvocation Translator MemberReference key localize IfStatement BinaryOperation == MemberReference m Literal null BlockStatement ReturnStatement IfStatement BinaryOperation == MethodInvocation m length Literal 1 BlockStatement StatementExpression MethodInvocation b MethodInvocation m Literal 0 charAt setMnemonic	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ActivityNode	0
MethodDeclaration Modifier public ReferenceType List FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of	0
MethodDeclaration Modifier protected addCallout FormalParameter BasicType int coNum FormalParameter ReferenceType Node node FormalParameter BasicType int defaultColumn LocalVariableDeclaration ReferenceType Element VariableDeclarator area Cast ReferenceType Element MemberReference node LocalVariableDeclaration ReferenceType String VariableDeclarator units Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator coords Literal null IfStatement MethodInvocation area Literal hasAttribute BlockStatement StatementExpression Assignment MemberReference units MethodInvocation area Literal getAttribute = IfStatement MethodInvocation area Literal "coords" hasAttribute BlockStatement StatementExpression Assignment MemberReference coords MethodInvocation area Literal "coords" getAttribute = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference units Literal null MethodInvocation ! units Literal "linecolumn" equalsIgnoreCase MethodInvocation ! units Literal "linerange" equalsIgnoreCase BlockStatement StatementExpression MethodInvocation System.out Literal "Only linecolumn and linerange units are supported" println ReturnStatement IfStatement BinaryOperation == MemberReference coords Literal null BlockStatement StatementExpression MethodInvocation System.out Literal "Coords must be specified" println ReturnStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference coords LocalVariableDeclaration BasicType int VariableDeclarator tokenCount Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator c1 Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator c2 Literal 0 WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression MemberReference ++ tokenCount IfStatement BinaryOperation > MemberReference tokenCount Literal 2 BlockStatement StatementExpression MethodInvocation System.out Literal "Unparseable coordinates" println ReturnStatement TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation st nextToken LocalVariableDeclaration BasicType int VariableDeclarator coord MethodInvocation Integer MemberReference token parseInt StatementExpression Assignment MemberReference c2 MemberReference coord = IfStatement BinaryOperation == MemberReference tokenCount Literal 1 BlockStatement StatementExpression Assignment MemberReference c1 MemberReference coord = CatchClause CatchClauseParameter NumberFormatException e StatementExpression MethodInvocation System.out Literal "Unparseable coordinate" println ReturnStatement IfStatement BinaryOperation == MemberReference calloutCount MemberReference callout length BlockStatement LocalVariableDeclaration ReferenceType Callout VariableDeclarator bigger ArrayCreator ReferenceType Callout BinaryOperation + MemberReference calloutCount Literal 10 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference callout length MemberReference ++ count BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference count bigger MemberReference ArraySelector MemberReference count callout = StatementExpression Assignment MemberReference callout MemberReference bigger = IfStatement BinaryOperation == MemberReference tokenCount Literal 2 BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference units Literal null MethodInvocation units Literal "linerange" equalsIgnoreCase BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count MemberReference c1 BinaryOperation <= MemberReference count MemberReference c2 MemberReference ++ count BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ calloutCount callout ClassCreator ReferenceType Callout MemberReference coNum MemberReference area MemberReference count MemberReference defaultColumn = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ calloutCount callout ClassCreator ReferenceType Callout MemberReference coNum MemberReference area MemberReference c1 MemberReference c2 = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ calloutCount callout ClassCreator ReferenceType Callout MemberReference coNum MemberReference area MemberReference c1 MemberReference defaultColumn =	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Classifier getChildren FormalParameter ReferenceType Object element IfStatement BinaryOperation instanceof MemberReference element ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "'element' must be instance of Classifier" LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Classifier VariableDeclarator results ClassCreator ReferenceType HashSet TypeArgument ReferenceType Classifier LocalVariableDeclaration ReferenceType LinkedList TypeArgument ReferenceType Classifier VariableDeclarator classifiers ClassCreator ReferenceType LinkedList TypeArgument ReferenceType Classifier StatementExpression MethodInvocation classifiers Cast ReferenceType Classifier MemberReference element add WhileStatement MethodInvocation ! classifiers isEmpty BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator c MethodInvocation classifiers removeFirst IfStatement MethodInvocation results MemberReference c contains BlockStatement BreakStatement StatementExpression MethodInvocation results MemberReference c add ForStatement EnhancedForControl VariableDeclaration ReferenceType DirectedRelationship VariableDeclarator d MethodInvocation c MemberReference UMLPackage.Literals BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Element VariableDeclarator e MethodInvocation d getSources BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference e ReferenceType Classifier MethodInvocation ! results MemberReference e contains BlockStatement StatementExpression MethodInvocation classifiers Cast ReferenceType Classifier MemberReference e add StatementExpression MethodInvocation results MemberReference element remove ReturnStatement MemberReference results	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType AbstractArgoJPanel ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public ReferenceType Collection getAllModelElementsOfKind FormalParameter ReferenceType Object nsa FormalParameter ReferenceType Object type IfStatement BinaryOperation instanceof MemberReference nsa ReferenceType Element BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Element LocalVariableDeclaration ReferenceType Class VariableDeclarator theType Literal null IfStatement BinaryOperation instanceof MemberReference type ReferenceType String BlockStatement TryStatement StatementExpression Assignment MemberReference theType MethodInvocation Class Cast ReferenceType String MemberReference type forName = CatchClause CatchClauseParameter ClassNotFoundException e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MemberReference e IfStatement BinaryOperation instanceof MemberReference type ReferenceType Class BlockStatement StatementExpression Assignment MemberReference theType Cast ReferenceType Class MemberReference type = BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "type must be instance of Class or String" IfStatement ClassReference ! MethodInvocation MemberReference theType isAssignableFrom ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "type must represent an LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Element VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Element ForStatement EnhancedForControl VariableDeclaration ReferenceType Element VariableDeclarator element Cast ReferenceType Namespace MemberReference nsa BlockStatement IfStatement MethodInvocation theType MethodInvocation element getClass isAssignableFrom BlockStatement StatementExpression MethodInvocation result MemberReference element add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public static ReferenceType Object getInnerMostEnclosingNamespace FormalParameter ReferenceType Object me IfStatement MethodInvocation Model MethodInvocation MemberReference me isAFeature getFacade BlockStatement StatementExpression Assignment MemberReference me MethodInvocation Model MethodInvocation MemberReference me getOwner getFacade = IfStatement MethodInvocation ! Model MethodInvocation MemberReference me isANamespace getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement MemberReference me	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType UmlAssociation FormalParameter ReferenceType Object oclassifier LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType UmlAssociation VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType UmlAssociation TryStatement IfStatement BinaryOperation instanceof MemberReference oclassifier ReferenceType Classifier BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator end MethodInvocation Model MethodInvocation MemberReference oclassifier getAssociationEnds getFacade BlockStatement StatementExpression MethodInvocation result Cast ReferenceType AssociationEnd MemberReference end add CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization BlockStatement ReturnStatement Cast ReferenceType Generalization MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Expected a Got a " MethodInvocation handle MethodInvocation getName getClass	1
MethodDeclaration Modifier public static BasicType boolean isNull FormalParameter ReferenceType Object attribute ReturnStatement MethodInvocation Model MethodInvocation MemberReference attribute MemberReference getFacade	0
MethodDeclaration Modifier public static ReferenceType getSingleton ReturnStatement MemberReference singleton	0
MethodDeclaration Modifier public Annotation Override BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object target StatementExpression Assignment MemberReference target TernaryExpression BinaryOperation instanceof MemberReference target ReferenceType Fig Cast ReferenceType Fig MemberReference target MemberReference target = ReturnStatement MethodInvocation Model MethodInvocation MemberReference target isAModelElement getFacade	1
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "Not a UML2 model element"	0
MethodDeclaration Modifier public removeAllElements LocalVariableDeclaration BasicType int VariableDeclarator startIndex Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator endIndex MethodInvocation Math Literal 0 BinaryOperation - MethodInvocation objects size Literal 1 max StatementExpression MethodInvocation objects clear StatementExpression Assignment MemberReference selectedObject Literal null = StatementExpression MethodInvocation This MemberReference startIndex MemberReference endIndex fireIntervalRemoved	0
MethodDeclaration Modifier private FormalParameter ReferenceType panel StatementExpression MethodInvocation panel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize add LocalVariableDeclaration ReferenceType String VariableDeclarator enc MethodInvocation Configuration MemberReference Argo KEY_INPUT_SOURCE_ENCODING getString IfStatement BinaryOperation || BinaryOperation == MemberReference enc Literal null MethodInvocation enc MethodInvocation Literal "" equals trim BlockStatement StatementExpression Assignment MemberReference enc MethodInvocation System Literal "file.encoding" getProperty = IfStatement MethodInvocation enc Literal startsWith BlockStatement StatementExpression Assignment MemberReference enc BinaryOperation + Literal MethodInvocation enc Literal 2 substring = StatementExpression Assignment MemberReference ClassCreator ReferenceType JComboBox MethodInvocation Charset MethodInvocation keySet MethodInvocation toArray = StatementExpression MethodInvocation MemberReference enc setSelectedItem StatementExpression MethodInvocation panel MemberReference add	0
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getAssociationClass getMetaTypes	0
MethodDeclaration Modifier public drop FormalParameter ReferenceType DropTargetDropEvent dropTargetDropEvent StatementExpression MethodInvocation LOG Literal ... " debug StatementExpression MethodInvocation hoverTimer stop StatementExpression MethodInvocation MethodInvocation ghostRectangle getBounds repaint IfStatement MethodInvocation ! MemberReference dropTargetDropEvent isDropAcceptable BlockStatement StatementExpression MethodInvocation dropTargetDropEvent rejectDrop ReturnStatement TryStatement LocalVariableDeclaration ReferenceType Transferable VariableDeclarator tr MethodInvocation dropTargetDropEvent getTransferable LocalVariableDeclaration ReferenceType Point VariableDeclarator loc MethodInvocation dropTargetDropEvent getLocation LocalVariableDeclaration ReferenceType TreePath VariableDeclarator destinationPath MethodInvocation MemberReference loc x MemberReference loc y getPathForLocation IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Drop location: x=" MemberReference loc x Literal " y=" MemberReference loc y debug IfStatement MethodInvocation ! MemberReference destinationPath MemberReference tr isValidDrag BlockStatement StatementExpression MethodInvocation dropTargetDropEvent rejectDrop ReturnStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator modelElements Cast ReferenceType Collection MethodInvocation tr MemberReference TransferableModelElements UML_COLLECTION_FLAVOR getTransferData IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal data = " MemberReference modelElements debug LocalVariableDeclaration ReferenceType Object VariableDeclarator dest Cast ReferenceType DefaultMutableTreeNode MethodInvocation destinationPath getLastPathComponent LocalVariableDeclaration ReferenceType Object VariableDeclarator src Cast ReferenceType DefaultMutableTreeNode MethodInvocation sourcePath getLastPathComponent LocalVariableDeclaration BasicType int VariableDeclarator action MethodInvocation dropTargetDropEvent getDropAction LocalVariableDeclaration BasicType boolean VariableDeclarator BinaryOperation == MemberReference action MemberReference DnDConstants ACTION_COPY LocalVariableDeclaration BasicType boolean VariableDeclarator moveAction BinaryOperation == MemberReference action MemberReference DnDConstants IfStatement BinaryOperation || MemberReference moveAction MemberReference BlockStatement StatementExpression MethodInvocation dropTargetDropEvent rejectDrop ReturnStatement IfStatement MethodInvocation Model MethodInvocation MemberReference dest isAUMLElement getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference dest isReadOnly getModelManagementHelper BlockStatement StatementExpression MethodInvocation dropTargetDropEvent rejectDrop ReturnStatement IfStatement MethodInvocation Model MethodInvocation MemberReference src isAUMLElement getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference src isReadOnly getModelManagementHelper BlockStatement StatementExpression MethodInvocation dropTargetDropEvent rejectDrop ReturnStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator newTargets ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object TryStatement StatementExpression MethodInvocation dropTargetDropEvent MemberReference action acceptDrop ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator me MemberReference modelElements BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference me isAUMLElement getFacade BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference me isReadOnly getModelManagementHelper BlockStatement ContinueStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + TernaryExpression MemberReference moveAction Literal "move " Literal " MemberReference me debug IfStatement MethodInvocation Model MethodInvocation MemberReference me MemberReference dest isValidNamespace getCoreHelper BlockStatement IfStatement MemberReference moveAction BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference me MemberReference dest setNamespace getCoreHelper StatementExpression MethodInvocation newTargets MemberReference me add IfStatement MemberReference BlockStatement TryStatement StatementExpression MethodInvocation newTargets MethodInvocation Model MethodInvocation MemberReference me MemberReference dest copy add CatchClause CatchClauseParameter RuntimeException e StatementExpression MethodInvocation LOG Literal "Exception" MemberReference e error IfStatement BinaryOperation instanceof MemberReference me ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator d Cast ReferenceType MemberReference me IfStatement MethodInvocation d MemberReference dest BlockStatement IfStatement MethodInvocation d MemberReference dest BlockStatement StatementExpression MethodInvocation ExplorerEventAdaptor MethodInvocation MemberReference src modelElementChanged getInstance StatementExpression MethodInvocation ExplorerEventAdaptor MethodInvocation MemberReference dest modelElementChanged getInstance StatementExpression MethodInvocation MemberReference destinationPath StatementExpression MethodInvocation MemberReference destinationPath expandPath StatementExpression MethodInvocation newTargets MemberReference me add IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference me isAFeature getFacade MethodInvocation Model MethodInvocation MemberReference dest isAClassifier getFacade BlockStatement IfStatement MemberReference moveAction BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference me getOwner getFacade MemberReference me getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference dest MemberReference me getCoreHelper StatementExpression MethodInvocation newTargets MemberReference me add IfStatement MemberReference BlockStatement StatementExpression MethodInvocation newTargets MethodInvocation Model MethodInvocation MemberReference me MemberReference dest copy add StatementExpression MethodInvocation dropTargetDropEvent MethodInvocation Literal true dropComplete getDropTargetContext StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference newTargets setTargets getInstance CatchClause CatchClauseParameter StatementExpression MethodInvocation LOG Literal "drop debug StatementExpression MethodInvocation dropTargetDropEvent rejectDrop StatementExpression MethodInvocation dropTargetDropEvent MethodInvocation Literal true dropComplete getDropTargetContext CatchClause CatchClauseParameter IOException io StatementExpression MethodInvocation LOG Literal "drop debug StatementExpression MethodInvocation dropTargetDropEvent rejectDrop CatchClause CatchClauseParameter UnsupportedFlavorException ufe StatementExpression MethodInvocation LOG Literal "drop debug StatementExpression MethodInvocation dropTargetDropEvent rejectDrop	1
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType This	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType UMLComboBox VariableDeclarator box Cast ReferenceType UMLComboBox MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation box getSelectedItem IfStatement BinaryOperation != MemberReference o Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference o getPath getStateMachinesHelper IfStatement BinaryOperation != MemberReference name Literal null StatementExpression MethodInvocation Model MethodInvocation MethodInvocation box getTarget MemberReference name getStateMachinesHelper	1
MethodDeclaration Modifier public updateProgress FormalParameter BasicType int value StatementExpression MethodInvocation progress MemberReference value setValue	0
MethodDeclaration Modifier private ReferenceType String generateMethodBody FormalParameter ReferenceType Object op IfStatement BinaryOperation != MemberReference op Literal null BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 80 LocalVariableDeclaration ReferenceType Collection VariableDeclarator methods MethodInvocation MethodInvocation MemberReference op getMethods getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation methods iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator method Literal null LocalVariableDeclaration BasicType boolean VariableDeclarator methodFound Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator tv MethodInvocation MemberReference op MemberReference ALL_BUT_DOC_TAGS generateTaggedValues LocalVariableDeclaration ReferenceType String VariableDeclarator operationIndent TernaryExpression BinaryOperation == MemberReference generatorPass MemberReference HEADER_PASS MemberReference indent Literal "" IfStatement BinaryOperation > MethodInvocation tv length Literal 0 BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference tv append MethodInvocation MemberReference LINE_SEPARATOR append MemberReference operationIndent append StatementExpression MethodInvocation sb MethodInvocation MemberReference operationIndent append MethodInvocation Literal "{" append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation MemberReference op MemberReference operationIndent append WhileStatement BinaryOperation && BinaryOperation != MemberReference i Literal null MethodInvocation i hasNext BlockStatement StatementExpression Assignment MemberReference method MethodInvocation i next = IfStatement BinaryOperation != MemberReference method Literal null BlockStatement IfStatement BinaryOperation && BinaryOperation != MethodInvocation MethodInvocation MemberReference method getBody getFacade Literal null MemberReference methodFound BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator body MethodInvocation MethodInvocation MemberReference method getBody getFacade StatementExpression MethodInvocation sb MethodInvocation MethodInvocation MemberReference body getBody getFacade append StatementExpression Assignment MemberReference methodFound Literal true = BreakStatement IfStatement MemberReference ! methodFound BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator returnParams MethodInvocation MethodInvocation MemberReference op getReturnParameters getCoreHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator rp IfStatement BinaryOperation == MethodInvocation returnParams size Literal 0 BlockStatement StatementExpression Assignment MemberReference rp Literal null = BlockStatement StatementExpression Assignment MemberReference rp MethodInvocation returnParams MethodInvocation next iterator = IfStatement BinaryOperation > MethodInvocation returnParams size Literal 1 BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "C++ generator only handles one return parameter" Literal " - Found " MethodInvocation returnParams size Literal " for " MethodInvocation MethodInvocation MemberReference op getName getFacade warn IfStatement BinaryOperation != MemberReference rp Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation MethodInvocation MemberReference rp getType getFacade StatementExpression MethodInvocation sb MethodInvocation MemberReference returnType generateDefaultReturnStatement append StatementExpression MethodInvocation sb MethodInvocation Literal "}" append MethodInvocation MemberReference LINE_SEPARATOR append MethodInvocation MethodInvocation MemberReference op MemberReference operationIndent append MemberReference operationIndent append ReturnStatement MethodInvocation sb toString ReturnStatement MethodInvocation Literal null generateDefaultReturnStatement	1
MethodDeclaration Modifier private cancel IfStatement BinaryOperation != MemberReference dialog Literal null BlockStatement StatementExpression MethodInvocation dialog Literal false setVisible StatementExpression Assignment MemberReference returnValue MemberReference JOptionPane CANCEL_OPTION =	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier public BasicType boolean isAFinalState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public addNotify StatementExpression SuperMethodInvocation addNotify StatementExpression MethodInvocation list This addKeyListener	0
MethodDeclaration Modifier public ReferenceType DataType buildDataType FormalParameter ReferenceType String name FormalParameter ReferenceType Object owner LocalVariableDeclaration ReferenceType DataType VariableDeclarator dt MethodInvocation StatementExpression MethodInvocation dt MemberReference name setName IfStatement BinaryOperation instanceof MemberReference owner ReferenceType Namespace BlockStatement StatementExpression MethodInvocation dt Cast ReferenceType Namespace MemberReference owner setNamespace ReturnStatement MemberReference dt	0
MethodDeclaration Modifier public ReferenceType Object getTarget ReturnStatement MemberReference listTarget	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public ReferenceType Operation createOperation ReturnStatement MethodInvocation createOperation	0
MethodDeclaration Modifier public ReferenceType org ReferenceType xml ReferenceType sax ReferenceType Attributes getAttributes ReturnStatement MemberReference _attributes	0
MethodDeclaration Modifier public BasicType boolean isAActionState FormalParameter ReferenceType Object handle ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType makePanel FormalParameter BasicType int newStep SwitchStatement MemberReference newStep SwitchStatementCase Literal 1 IfStatement BinaryOperation == MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference step1 ClassCreator ReferenceType WizStepChoice This MemberReference instructions MethodInvocation = StatementExpression MethodInvocation step1 MethodInvocation setTarget ReturnStatement MemberReference step1 ReturnStatement Literal null	1
MethodDeclaration Modifier protected Annotation Override BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType boolean isAModel FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Model	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getPseudostate getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public translate FormalParameter BasicType int dx FormalParameter BasicType int dy StatementExpression SuperMethodInvocation MemberReference dx MemberReference dy translate LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor IfStatement BinaryOperation != MemberReference ce Literal null BlockStatement LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel MethodInvocation ce MethodInvocation This getSelectionManager IfStatement BinaryOperation instanceof MemberReference sel ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference sel	1
MethodDeclaration Modifier public Annotation Override write FormalParameter BasicType int b IOException IfStatement MemberReference BlockStatement StatementExpression MethodInvocation out MemberReference b write BlockStatement StatementExpression MethodInvocation Cast BasicType byte MemberReference b put StatementExpression MethodInvocation MethodInvocation position limit LocalVariableDeclaration ReferenceType VariableDeclarator result MethodInvocation decoder MemberReference MemberReference Literal false decode IfStatement MethodInvocation result isError BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Unknown character decoding error" IfStatement BinaryOperation == MethodInvocation position MethodInvocation limit BlockStatement StatementExpression MethodInvocation	1
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference model getModelManagementHelper addAll ReturnStatement MemberReference ret	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType CallConcurrencyKind	0
MethodDeclaration Modifier public static ReferenceType GenCompositeClasses2 getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference notationLanguage MemberReference =	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Object FormalParameter ReferenceType Object artifact ThrowStatement ClassCreator ReferenceType NotImplementedException Literal artifacts have no with elements"	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Object target StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation Model MethodInvocation getMetaTypes Cast ReferenceType String Literal null addClassModelEventListener getPump	0
MethodDeclaration Modifier public ReferenceType LayoutedObject getInstance FormalParameter ReferenceType Object f IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigComment BlockStatement ReturnStatement ClassCreator ReferenceType Cast ReferenceType FigComment MemberReference f IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigNodeModelElement BlockStatement ReturnStatement ClassCreator ReferenceType ClassdiagramNode Cast ReferenceType FigNode MemberReference f IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigGeneralization BlockStatement ReturnStatement ClassCreator ReferenceType Cast ReferenceType FigGeneralization MemberReference f IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigAbstraction BlockStatement ReturnStatement ClassCreator ReferenceType ClassdiagramRealizationEdge Cast ReferenceType FigAbstraction MemberReference f IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigAssociation BlockStatement ReturnStatement ClassCreator ReferenceType ClassdiagramAssociationEdge Cast ReferenceType FigAssociation MemberReference f IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigEdgeNote BlockStatement ReturnStatement ClassCreator ReferenceType ClassdiagramNoteEdge Cast ReferenceType FigEdgeNote MemberReference f StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal not know to " MethodInvocation f MethodInvocation getName getClass Literal standard debug ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation impl MemberReference MemberReference modelElement	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType ArgoDiagram diagram ReturnStatement MethodInvocation MethodInvocation diagram getName	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public static ReferenceType ImageIcon lookupIconResource FormalParameter ReferenceType String resource FormalParameter ReferenceType String desc ReturnStatement MethodInvocation MemberReference resource MemberReference desc lookupIconResource	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr StatementExpression SuperMethodInvocation MemberReference handle MemberReference expr StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public FormalParameter ReferenceType item StatementExpression MethodInvocation items MemberReference item remove	0
MethodDeclaration Modifier public setParent FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parent StatementExpression MethodInvocation impl MemberReference handle MemberReference parent setParent	0
MethodDeclaration Modifier private BasicType int getMinimumHeight FormalParameter Modifier final ReferenceType Component comp ReturnStatement Cast BasicType int MethodInvocation comp MethodInvocation getHeight getMinimumSize	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setMultiplicity getComponent	0
MethodDeclaration Modifier private ReferenceType ReturnStatement FeatureNotSupportedException LocalVariableDeclaration ReferenceType ReturnStatement VariableDeclarator node ClassCreator ReferenceType ReturnStatement StatementExpression MethodInvocation advance IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi BlockStatement StatementExpression MethodInvocation advance BlockStatement StatementExpression Assignment MemberReference node MethodInvocation ParseExpression = StatementExpression MethodInvocation MemberReference TokenID Semi AssertAndAdvance ReturnStatement MemberReference node	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value IfStatement Cast ReferenceType Boolean MemberReference value BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement MethodInvocation Model MethodInvocation getOrdered getOrderingKind getCoreHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement MethodInvocation Model MethodInvocation getOrderingKind getCoreHelper	0
MethodDeclaration Modifier public ReferenceType Element getOwner FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType Element MemberReference handle	1
MethodDeclaration Modifier private static ReferenceType List TypeArgument ReferenceType String toList FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String map LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator entry MethodInvocation map entrySet BlockStatement StatementExpression MethodInvocation list ArrayCreator ReferenceType String ArrayInitializer MethodInvocation entry getKey MethodInvocation entry getValue add ReturnStatement MemberReference list	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator tr MemberReference dm LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation Model MethodInvocation MemberReference tr getTarget getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation Model MethodInvocation MemberReference tr getSource getFacade IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference target getKind getFacade MethodInvocation Model MethodInvocation getJoin getPseudostateKind getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference source isAState getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	0
MethodDeclaration Modifier public ReferenceType Critic FormalParameter BasicType int row LocalVariableDeclaration ReferenceType VariableDeclarator model Cast ReferenceType MethodInvocation getModel ReturnStatement MethodInvocation model MemberReference row	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter ReferenceType Object element FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object region IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Vertex BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Expected a got a " MemberReference handle LocalVariableDeclaration ReferenceType Vertex VariableDeclarator vertex Cast ReferenceType Vertex MemberReference handle IfStatement BinaryOperation instanceof MemberReference region ReferenceType State BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Region VariableDeclarator regions Cast ReferenceType State MemberReference region IfStatement MethodInvocation regions isEmpty BlockStatement StatementExpression Assignment MemberReference region MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation getRegion getMetaTypes MemberReference region buildNode getUmlFactory = BlockStatement StatementExpression Assignment MemberReference region MethodInvocation regions Literal 0 get = IfStatement BinaryOperation || BinaryOperation == MemberReference region Literal null BinaryOperation instanceof MemberReference region ReferenceType Region BlockStatement IfStatement BinaryOperation && BinaryOperation != MethodInvocation vertex getContainer Literal null BinaryOperation != MemberReference region Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Setting ignore delete for " MemberReference vertex info LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation Model getPump StatementExpression MethodInvocation Cast ReferenceType Vertex MemberReference handle BlockStatement StatementExpression MethodInvocation vertex Cast ReferenceType Region MemberReference region ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Expected a State or Region, got a " MemberReference handle	1
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase ReturnStatement Literal "CSharp Notation and SwitchStatementCase ReturnStatement Literal SwitchStatementCase ReturnStatement Literal - 280 $" SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "Not a UML2 model element"	0
MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object node IfStatement BinaryOperation instanceof MemberReference node ReferenceType ToDoList BlockStatement ReturnStatement Literal false IfStatement BinaryOperation instanceof MemberReference node ReferenceType KnowledgeTypeNode BlockStatement LocalVariableDeclaration ReferenceType KnowledgeTypeNode VariableDeclarator ktn Cast ReferenceType KnowledgeTypeNode MemberReference node LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator itemList MethodInvocation Designer MethodInvocation getToDoList MethodInvocation SynchronizedStatement MemberReference itemList ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference itemList BlockStatement IfStatement MethodInvocation item MethodInvocation ktn getName BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType GeneralizableElement getSubtypes FormalParameter ReferenceType Object cls IfStatement BinaryOperation instanceof MemberReference cls ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType GeneralizableElement VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType GeneralizableElement TryStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Generalization VariableDeclarator MethodInvocation Model MethodInvocation MemberReference cls getSpecializations getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Generalization VariableDeclarator gen MemberReference BlockStatement StatementExpression MethodInvocation result MethodInvocation gen getChild add CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public redo StatementExpression MethodInvocation npSettings MemberReference showem StatementExpression MethodInvocation MemberReference key MemberReference ! showem MemberReference showem fireNotationEvent	0
MethodDeclaration Modifier public BasicType boolean isAOperation FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation	0
MethodDeclaration Modifier private StatementExpression MethodInvocation MemberReference JFileChooser FILES_AND_DIRECTORIES setFileSelectionMode StatementExpression MethodInvocation Literal true setMultiSelectionEnabled StatementExpression MethodInvocation MethodInvocation getCurrentDirectory setSelectedFile	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Message VariableDeclarator message Cast ReferenceType Message MemberReference handle ReturnStatement MethodInvocation message	0
MethodDeclaration Modifier public Annotation Deprecated Annotation Override BasicType boolean ReturnStatement MethodInvocation isFilled	1
MethodDeclaration Modifier private StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MethodInvocation getInitialX Literal 2 BinaryOperation + MethodInvocation getInitialY Literal 2 BinaryOperation - MethodInvocation getInitialWidth Literal 4 MethodInvocation MethodInvocation getBounds MemberReference height getNameFig setBounds getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig StatementExpression Assignment MemberReference internal ClassCreator ReferenceType FigText BinaryOperation + MethodInvocation getInitialX Literal 2 BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getInitialY Literal 2 MemberReference Literal 4 BinaryOperation - MethodInvocation getInitialWidth Literal 4 BinaryOperation - MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getInitialY Literal 2 MemberReference Literal 4 = StatementExpression MethodInvocation internal MethodInvocation MethodInvocation MemberReference Font PLAIN getFont getSettings setFont StatementExpression MethodInvocation internal MemberReference StatementExpression MethodInvocation internal Literal 0 setLineWidth StatementExpression MethodInvocation internal Literal false setFilled StatementExpression MethodInvocation internal Literal true StatementExpression MethodInvocation internal MemberReference FigText INSERT StatementExpression MethodInvocation internal MemberReference FigText	1
MethodDeclaration Modifier public FormalParameter ReferenceType Class c FormalParameter ReferenceType p ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator panel MemberReference tabPanelList BlockStatement IfStatement BinaryOperation instanceof MemberReference panel ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference panel	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String s IfStatement BinaryOperation == MemberReference s Literal null BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ArgoEventTypes This Literal "" BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ArgoEventTypes This MethodInvocation Translator MemberReference s localize	1
MethodDeclaration Modifier public doSave FormalParameter ReferenceType Project project FormalParameter ReferenceType File file SaveException InterruptedException LocalVariableDeclaration ReferenceType ProgressMgr VariableDeclarator progressMgr ClassCreator ReferenceType ProgressMgr StatementExpression MethodInvocation progressMgr Literal 4 setNumberOfPhases StatementExpression MethodInvocation progressMgr nextPhase LocalVariableDeclaration ReferenceType File VariableDeclarator lastArchiveFile ClassCreator ReferenceType File BinaryOperation + MethodInvocation file getAbsolutePath Literal "~" LocalVariableDeclaration ReferenceType File VariableDeclarator tempFile Literal null TryStatement StatementExpression Assignment MemberReference tempFile MethodInvocation MemberReference file createTempFile = CatchClause CatchClauseParameter FileNotFoundException e ThrowStatement ClassCreator ReferenceType SaveException Literal "Failed to archive the previous file version" MemberReference e CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType SaveException Literal "Failed to archive the previous file version" MemberReference e LocalVariableDeclaration ReferenceType BufferedWriter VariableDeclarator writer Literal null TryStatement StatementExpression MethodInvocation project MemberReference file StatementExpression MethodInvocation project MethodInvocation ApplicationVersion getVersion setVersion StatementExpression MethodInvocation project MemberReference PERSISTENCE_VERSION setPersistenceVersion LocalVariableDeclaration ReferenceType ZipOutputStream VariableDeclarator stream ClassCreator ReferenceType ZipOutputStream ClassCreator ReferenceType FileOutputStream MemberReference file StatementExpression Assignment MemberReference writer ClassCreator ReferenceType BufferedWriter ClassCreator ReferenceType OutputStreamWriter MemberReference stream Literal "UTF-8" = LocalVariableDeclaration ReferenceType ZipEntry VariableDeclarator zipEntry ClassCreator ReferenceType ZipEntry BinaryOperation + MethodInvocation PersistenceManager MethodInvocation MemberReference project getInstance MemberReference FileConstants StatementExpression MethodInvocation stream MemberReference zipEntry putNextEntry LocalVariableDeclaration ReferenceType Hashtable VariableDeclarator templates MethodInvocation TemplateReader MethodInvocation MemberReference read getInstance LocalVariableDeclaration ReferenceType OCLExpander VariableDeclarator expander ClassCreator ReferenceType OCLExpander MemberReference templates StatementExpression MethodInvocation expander MemberReference writer MemberReference project expand StatementExpression MethodInvocation writer flush StatementExpression MethodInvocation stream closeEntry LocalVariableDeclaration BasicType int VariableDeclarator counter Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation project MethodInvocation size getMembers LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator names ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ProjectMember VariableDeclarator projectMember MethodInvocation project MethodInvocation MemberReference i get getMembers IfStatement MethodInvocation ! projectMember getType BlockStatement IfStatement MethodInvocation LOG isInfoEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Saving member: " MethodInvocation project MethodInvocation MemberReference i get MethodInvocation getZipName getMembers info LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation projectMember getZipName LocalVariableDeclaration ReferenceType String VariableDeclarator originalName MemberReference name WhileStatement MethodInvocation names MemberReference name contains BlockStatement StatementExpression Assignment MemberReference name BinaryOperation + MemberReference ++ counter MemberReference originalName = StatementExpression MethodInvocation names MemberReference name add StatementExpression MethodInvocation stream ClassCreator ReferenceType ZipEntry MemberReference name putNextEntry LocalVariableDeclaration ReferenceType MemberFilePersister VariableDeclarator persister MethodInvocation MemberReference projectMember getMemberFilePersister StatementExpression MethodInvocation persister MemberReference projectMember MemberReference stream save StatementExpression MethodInvocation stream flush StatementExpression MethodInvocation stream closeEntry ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType ProjectMember VariableDeclarator projectMember MethodInvocation project MethodInvocation MemberReference i get getMembers IfStatement MethodInvocation projectMember MethodInvocation Literal "xmi" equalsIgnoreCase getType BlockStatement IfStatement MethodInvocation LOG isInfoEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Saving member of type: " MethodInvocation project MethodInvocation MemberReference i get MethodInvocation getType getMembers info StatementExpression MethodInvocation stream ClassCreator ReferenceType ZipEntry MethodInvocation projectMember getZipName putNextEntry LocalVariableDeclaration ReferenceType OldModelMemberFilePersister VariableDeclarator persister ClassCreator ReferenceType OldModelMemberFilePersister StatementExpression MethodInvocation persister MemberReference projectMember MemberReference stream save StatementExpression MethodInvocation stream flush IfStatement MethodInvocation lastArchiveFile exists BlockStatement StatementExpression MethodInvocation lastArchiveFile delete IfStatement BinaryOperation && MethodInvocation tempFile exists MethodInvocation ! lastArchiveFile exists BlockStatement StatementExpression MethodInvocation tempFile MemberReference lastArchiveFile renameTo IfStatement MethodInvocation tempFile exists BlockStatement StatementExpression MethodInvocation tempFile delete StatementExpression MethodInvocation progressMgr nextPhase CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG Literal "Exception occured during save attempt" MemberReference e error TryStatement StatementExpression MethodInvocation writer close CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation file delete StatementExpression MethodInvocation tempFile MemberReference file renameTo ThrowStatement ClassCreator ReferenceType SaveException MemberReference e TryStatement StatementExpression MethodInvocation writer close CatchClause CatchClauseParameter IOException ex StatementExpression MethodInvocation LOG Literal "Failed to close save output writer" MemberReference ex error	1
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration BasicType int VariableDeclarator w MemberReference nameDim width LocalVariableDeclaration BasicType int VariableDeclarator h MemberReference nameDim height StatementExpression Assignment MemberReference w MethodInvocation Math MemberReference MemberReference w max = StatementExpression Assignment MemberReference h MethodInvocation Math MemberReference MemberReference h max = ReturnStatement ClassCreator ReferenceType Dimension MemberReference w MemberReference h	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation StatementExpression MethodInvocation LOG Literal loading done" info	0
MethodDeclaration resolve FormalParameter ReferenceType Collection TypeArgument ReferenceType T items IfStatement BinaryOperation && MethodInvocation unresolvedItems isEmpty MethodInvocation items isEmpty BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType T VariableDeclarator allUnresolvedItems ClassCreator ReferenceType HashSet TypeArgument ReferenceType T StatementExpression MethodInvocation allUnresolvedItems MemberReference items addAll StatementExpression MethodInvocation allUnresolvedItems MemberReference unresolvedItems addAll IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG MethodInvocation Literal "Attempt to resolve the following MemberReference allUnresolvedItems items2Msg debug LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType T VariableDeclarator MethodInvocation MemberReference allUnresolvedItems internalResolve StatementExpression MethodInvocation allUnresolvedItems MemberReference removeAll StatementExpression MethodInvocation unresolvedItems clear StatementExpression MethodInvocation unresolvedItems MemberReference allUnresolvedItems addAll IfStatement MethodInvocation ! unresolvedItems isEmpty BlockStatement StatementExpression MethodInvocation LOG MethodInvocation Literal "The following items were left unresolved after attempt:\n" MemberReference unresolvedItems items2Msg warn	1
MethodDeclaration Modifier public Annotation Override ReferenceType String getLabel IfStatement BinaryOperation == MemberReference objects Literal null BlockStatement ReturnStatement MemberReference label LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder LocalVariableDeclaration BasicType int VariableDeclarator j Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation label length MemberReference ++ i BlockStatement IfStatement BinaryOperation == MethodInvocation label MemberReference i charAt Literal '#' BlockStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference ArraySelector MemberReference j objects toString append StatementExpression MemberReference ++ j BlockStatement StatementExpression MethodInvocation sb MethodInvocation label MemberReference i charAt append ReturnStatement MethodInvocation sb toString	0
MethodDeclaration Modifier private FormalParameter ReferenceType Rectangle bounds StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation Literal true StatementExpression MethodInvocation MethodInvocation MethodInvocation StatementExpression MethodInvocation MethodInvocation Literal true setVisible StatementExpression MethodInvocation MethodInvocation MethodInvocation MethodInvocation getMinimumSize MemberReference height getNameFig StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation StatementExpression MethodInvocation Literal true setFilled StatementExpression MethodInvocation MemberReference FILL_COLOR setFillColor StatementExpression MethodInvocation MemberReference LINE_COLOR setLineColor StatementExpression MethodInvocation MemberReference setLineWidth IfStatement BinaryOperation != MemberReference bounds Literal null BlockStatement StatementExpression MethodInvocation MemberReference bounds x MemberReference bounds y setLocation StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation MethodInvocation getBounds setBounds StatementExpression MethodInvocation Literal true	0
MethodDeclaration Modifier public ReferenceType AbstractAction ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object trans FormalParameter ReferenceType String IfStatement BinaryOperation instanceof MemberReference trans ReferenceType Transition BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sm MethodInvocation MemberReference trans getStateMachine LocalVariableDeclaration ReferenceType Object VariableDeclarator context MethodInvocation Model MethodInvocation MemberReference sm getContext getFacade LocalVariableDeclaration ReferenceType Classifier VariableDeclarator classifier Literal null IfStatement BinaryOperation instanceof MemberReference context ReferenceType Classifier BlockStatement StatementExpression Assignment MemberReference classifier Cast ReferenceType Classifier MemberReference context = IfStatement BinaryOperation instanceof MemberReference context ReferenceType BehavioralFeature BlockStatement StatementExpression Assignment MemberReference classifier Cast ReferenceType BehavioralFeature MemberReference context = IfStatement BinaryOperation != MemberReference classifier Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Feature VariableDeclarator features MethodInvocation classifier getFeature ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator f MemberReference features BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType Operation BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator on MethodInvocation f getName IfStatement MethodInvocation on MemberReference equals BlockStatement ReturnStatement MemberReference f LocalVariableDeclaration ReferenceType Namespace VariableDeclarator pack Literal null IfStatement BinaryOperation instanceof MemberReference context ReferenceType UmlPackage BlockStatement StatementExpression Assignment MemberReference pack Cast ReferenceType Namespace MemberReference context = BlockStatement IfStatement BinaryOperation != MemberReference classifier Literal null BlockStatement LocalVariableDeclaration ReferenceType Namespace VariableDeclarator parent Literal null StatementExpression Assignment MemberReference parent MethodInvocation classifier getNamespace = WhileStatement BinaryOperation instanceof MemberReference parent ReferenceType Classifier BlockStatement IfStatement BinaryOperation == MethodInvocation parent getNamespace Literal null BlockStatement BreakStatement StatementExpression Assignment MemberReference parent MethodInvocation parent getNamespace = IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement StatementExpression Assignment MemberReference pack MemberReference parent = IfStatement BinaryOperation != MemberReference pack Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator mes MethodInvocation pack ForStatement EnhancedForControl VariableDeclaration ReferenceType ModelElement VariableDeclarator me MemberReference mes BlockStatement IfStatement BinaryOperation instanceof MemberReference me ReferenceType Classifier BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator Cast ReferenceType Classifier MemberReference me LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Feature VariableDeclarator features MethodInvocation getFeature ForStatement EnhancedForControl VariableDeclaration ReferenceType Feature VariableDeclarator f MemberReference features BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType Operation BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator on MethodInvocation f getName IfStatement MethodInvocation on MemberReference equals BlockStatement ReturnStatement MemberReference f CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean disable ReturnStatement Literal false	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object elem ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference elem getFacade BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getAction getFacade MemberReference elem	0
MethodDeclaration Modifier private FormalParameter ReferenceType List TypeArgument ReferenceType String FormalParameter ReferenceType Action LocalVariableDeclaration ReferenceType Enumeration VariableDeclarator en MethodInvocation getElements WhileStatement MethodInvocation en hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType AbstractButton VariableDeclarator button Cast ReferenceType AbstractButton MethodInvocation en nextElement StatementExpression MethodInvocation MemberReference button remove StatementExpression MethodInvocation removeAll StatementExpression MethodInvocation ClassCreator ReferenceType add ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator MemberReference BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator button ClassCreator ReferenceType MemberReference ArraySelector Literal 0 StatementExpression MethodInvocation button MemberReference addActionListener LocalVariableDeclaration ReferenceType String VariableDeclarator actionCommand MemberReference ArraySelector Literal 1 StatementExpression MethodInvocation button MemberReference actionCommand setActionCommand StatementExpression MethodInvocation button MethodInvocation LookAndFeelMgr MethodInvocation getStandardFont getInstance setFont StatementExpression MethodInvocation MemberReference button add StatementExpression MethodInvocation MemberReference button add	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated Annotation Override ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object namespace ReturnStatement MethodInvocation MemberReference namespace Literal null createDiagram	1
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType CallAction BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent e IfStatement BinaryOperation instanceof MemberReference e ReferenceType AttributeChangeEvent BlockStatement TryStatement IfStatement MethodInvocation MemberReference e isValidEvent BlockStatement StatementExpression MethodInvocation rebuildModelList CatchClause CatchClauseParameter InvalidElementException iee ReturnStatement IfStatement BinaryOperation instanceof MemberReference e ReferenceType AddAssociationEvent BlockStatement IfStatement MethodInvocation MemberReference e isValidEvent BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference e getChangedElement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator tempList ClassCreator ReferenceType ArrayList Cast ReferenceType Collection MemberReference o LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation tempList iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o2 MethodInvocation it next StatementExpression MethodInvocation MemberReference o2 addElement BlockStatement StatementExpression MethodInvocation MemberReference o addElement IfStatement BinaryOperation instanceof MemberReference e ReferenceType RemoveAssociationEvent BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator valid Literal false IfStatement BinaryOperation instanceof MethodInvocation MemberReference e getChangedElement ReferenceType Collection BlockStatement StatementExpression Assignment MemberReference valid MethodInvocation MethodInvocation MemberReference e getChangedElement contains = BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MethodInvocation MemberReference e getChangedElement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator StatementExpression Assignment MemberReference valid Literal true = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement MethodInvocation ! MemberReference o contains BlockStatement StatementExpression Assignment MemberReference valid Literal false = BreakStatement IfStatement MemberReference valid BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation MemberReference e getChangedElement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Collection BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it Cast ReferenceType Collection MemberReference o WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation it next StatementExpression MethodInvocation MemberReference removeElement BlockStatement StatementExpression MethodInvocation MemberReference o removeElement	1
MethodDeclaration Modifier public ReferenceType Object getOwner ReturnStatement MethodInvocation getNamespace	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object appleEvent IfStatement BinaryOperation != MemberReference appleEvent Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator MethodInvocation appleEvent MethodInvocation Literal Cast ReferenceType Class Literal null getDeclaredMethod getClass LocalVariableDeclaration ReferenceType String VariableDeclarator filename Cast ReferenceType String MethodInvocation MemberReference appleEvent Cast ReferenceType Object Literal null invoke StatementExpression This MemberReference targetMethod MethodInvocation This MemberReference targetObject ArrayCreator ReferenceType Object ArrayInitializer MemberReference filename invoke CatchClause CatchClauseParameter Exception ex ReturnStatement Literal true	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Message getMessages FormalParameter ReferenceType Object handle TryStatement IfStatement MethodInvocation MemberReference handle BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement ReturnStatement MethodInvocation MethodInvocation getCollaborations MethodInvocation MethodInvocation Cast ReferenceType Action MemberReference handle getMessage MemberReference handle getRefOutermostPackage CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	1
MethodDeclaration Modifier public static ReferenceType ReturnStatement ArrayCreator ReferenceType ArrayInitializer MemberReference ENGLISH MemberReference ClassCreator ReferenceType Literal "es" Literal "" MemberReference GERMAN MemberReference ClassCreator ReferenceType Literal Literal "" ClassCreator ReferenceType Literal "pt" Literal "" ClassCreator ReferenceType Literal "pt" Literal ClassCreator ReferenceType Literal Literal "" MemberReference MemberReference TRADITIONAL_CHINESE MemberReference UK	1
MethodDeclaration Modifier protected ReferenceType Object getUmlActions LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator actions ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation actions MethodInvocation MethodInvocation Model MethodInvocation getState getMetaTypes getNodeAction add StatementExpression MethodInvocation actions MethodInvocation MethodInvocation Model MethodInvocation getTransition getMetaTypes getEdgeAction add StatementExpression MethodInvocation actions Literal null add StatementExpression MethodInvocation actions MethodInvocation MethodInvocation Model MethodInvocation getPseudostateKind add StatementExpression MethodInvocation actions MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes getNodeAction add StatementExpression MethodInvocation actions MethodInvocation MethodInvocation Model MethodInvocation getPseudostateKind add StatementExpression MethodInvocation actions MethodInvocation MethodInvocation Model MethodInvocation getPseudostateKind add StatementExpression MethodInvocation actions MethodInvocation MethodInvocation Model MethodInvocation getJunction getPseudostateKind add StatementExpression MethodInvocation actions MethodInvocation MethodInvocation Model MethodInvocation getChoice getPseudostateKind add StatementExpression MethodInvocation actions MethodInvocation MethodInvocation Model MethodInvocation getFork getPseudostateKind add StatementExpression MethodInvocation actions MethodInvocation MethodInvocation Model MethodInvocation getJoin getPseudostateKind add StatementExpression MethodInvocation actions MethodInvocation MethodInvocation Model MethodInvocation getPseudostateKind add StatementExpression MethodInvocation actions MethodInvocation MethodInvocation Model MethodInvocation getDeepHistory getPseudostateKind add ReturnStatement MethodInvocation actions toArray	0
MethodDeclaration Modifier public windowOpened FormalParameter ReferenceType WindowEvent e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Attribute LocalVariableDeclaration ReferenceType Attribute VariableDeclarator MethodInvocation MethodInvocation getAttribute MethodInvocation getCorePackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object theTarget StatementExpression Assignment MemberReference target MemberReference theTarget =	0
MethodDeclaration Modifier public Annotation Deprecated setChangeability FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ck ThrowStatement ClassCreator ReferenceType NotImplementedException	1
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Generalization FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement Cast ReferenceType Classifier MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MemberReference element isAUseCase getFacade	0
MethodDeclaration Modifier public ReferenceType Parameter FormalParameter Modifier final ReferenceType Object o FormalParameter Modifier final ReferenceType Object type IfStatement BinaryOperation instanceof MemberReference o ReferenceType BehavioralFeature BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The parameter must be attached to a IfStatement BinaryOperation instanceof MemberReference type ReferenceType Type BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The type of the parameter must be instance of Type." LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Parameter VariableDeclarator param MethodInvocation StatementExpression MethodInvocation param Cast ReferenceType Type MemberReference type StatementExpression MethodInvocation param BinaryOperation + Literal Cast ReferenceType BehavioralFeature MemberReference o setName StatementExpression Cast ReferenceType BehavioralFeature MemberReference o StatementExpression MethodInvocation MethodInvocation MemberReference param add LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the parameter by #" StatementExpression MethodInvocation MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get MemberReference o ReturnStatement Cast ReferenceType Parameter MethodInvocation run MethodInvocation Literal 0 get	1
MethodDeclaration Modifier protected StatementExpression MethodInvocation MemberReference MethodInvocation Integer MemberReference valueOf addToken StatementExpression MethodInvocation MemberReference MethodInvocation Integer MemberReference valueOf addToken StatementExpression MethodInvocation MemberReference MethodInvocation Integer MemberReference valueOf addToken StatementExpression MethodInvocation MemberReference MethodInvocation Integer MemberReference valueOf addToken StatementExpression MethodInvocation MemberReference MethodInvocation Integer MemberReference valueOf addToken	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType org ReferenceType argouml ReferenceType util ReferenceType p SynchronizedStatement MemberReference list ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference list BlockStatement IfStatement MethodInvocation p MemberReference o evaluate BlockStatement ReturnStatement MemberReference o ReturnStatement Literal null	0
MethodDeclaration Modifier public final selection_statement RecognitionException TokenStreamException SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_if BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_if match StatementExpression MethodInvocation MemberReference LPAREN match StatementExpression MethodInvocation expression StatementExpression MethodInvocation MemberReference RPAREN match StatementExpression MethodInvocation statement BlockStatement IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference LITERAL_else MethodInvocation _tokenSet_59 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_else match StatementExpression MethodInvocation statement IfStatement BinaryOperation && MethodInvocation MethodInvocation Literal 1 LA member MethodInvocation MethodInvocation Literal 2 LA member BlockStatement BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BreakStatement SwitchStatementCase LITERAL_switch BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_switch match StatementExpression MethodInvocation MemberReference LPAREN match StatementExpression MethodInvocation expression StatementExpression MethodInvocation MemberReference RPAREN match StatementExpression MethodInvocation statement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Property getQualifiers FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Property BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType Property MemberReference handle	0
MethodDeclaration Modifier public BasicType boolean isConcurrent LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement ReturnStatement Literal false ReturnStatement MethodInvocation Model MethodInvocation MemberReference owner isConcurrent getFacade	0
MethodDeclaration Modifier public ReferenceType Object getClassifier ReturnStatement MemberReference classifier	0
MethodDeclaration Modifier public FormalParameter ReferenceType ProfileConfiguration pc IfStatement BinaryOperation != This MemberReference profileConfiguration MemberReference pc BlockStatement IfStatement BinaryOperation != This MemberReference profileConfiguration Literal null BlockStatement StatementExpression This MemberReference members MethodInvocation This MemberReference profileConfiguration remove StatementExpression Assignment This MemberReference profileConfiguration MemberReference pc = StatementExpression MethodInvocation members MemberReference pc add StatementExpression MethodInvocation ProfileFacade MemberReference pc	0
MethodDeclaration Modifier protected ReferenceType Fig createBigPortFig LocalVariableDeclaration ReferenceType Fig VariableDeclarator b ClassCreator ReferenceType FigRect MemberReference MemberReference Literal 0 Literal 0 MemberReference LINE_COLOR MemberReference FILL_COLOR ReturnStatement MemberReference b	1
MethodDeclaration Modifier private ReferenceType str2Decision FormalParameter ReferenceType String token LocalVariableDeclaration ReferenceType VariableDeclarator decision Literal null IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal "codegen" equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal "instantiation" equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal "modularity" equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision PATTERNS = IfStatement MethodInvocation token Literal "plannedextensions" equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = IfStatement MethodInvocation token Literal equals BlockStatement StatementExpression Assignment MemberReference decision MemberReference UMLDecision = ReturnStatement MemberReference decision	1
MethodDeclaration Modifier public ReferenceType ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Profile getProfiles ReturnStatement MemberReference profiles	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object kind ReturnStatement MethodInvocation impl MemberReference kind	0
MethodDeclaration Modifier public addParameter FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object parameter IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType Parameter BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MethodInvocation Cast ReferenceType BehavioralFeature MemberReference handle MemberReference index Cast ReferenceType Parameter MemberReference parameter Literal the element to the owner #" MemberReference parameter MemberReference handle execute getCommandStack	1
MethodDeclaration Modifier protected ReferenceType String getProperty ReturnStatement MethodInvocation document getProperty	0
MethodDeclaration ReferenceType Object FormalParameter BasicType short modifiers FormalParameter ReferenceType List TypeArgument ReferenceType String typeParameters FormalParameter ReferenceType String returnType FormalParameter ReferenceType String name FormalParameter ReferenceType List TypeArgument ReferenceType ParameterDeclaration parameters FormalParameter ReferenceType String javadoc FormalParameter BasicType boolean forceIt IfStatement BinaryOperation && BinaryOperation != MemberReference typeParameters Literal null BinaryOperation > MethodInvocation typeParameters size Literal 0 BlockStatement StatementExpression MethodInvocation Literal "type parameters not supported on operation return type" MemberReference name logError LocalVariableDeclaration ReferenceType Object VariableDeclarator mOperation MethodInvocation MemberReference name getOperation StatementExpression MethodInvocation parseState MemberReference mOperation feature StatementExpression MethodInvocation Model MethodInvocation MemberReference mOperation BinaryOperation > BinaryOperation & MemberReference modifiers MemberReference JavaParser ACC_ABSTRACT Literal 0 setAbstract getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference mOperation BinaryOperation > BinaryOperation & MemberReference modifiers MemberReference JavaParser ACC_FINAL Literal 0 getCoreHelper IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mOperation Literal false setRoot getCoreHelper StatementExpression MethodInvocation MemberReference mOperation MemberReference modifiers setOwnerScope StatementExpression MethodInvocation MemberReference mOperation MemberReference modifiers setVisibility IfStatement BinaryOperation > BinaryOperation & MemberReference modifiers MemberReference JavaParser ACC_SYNCHRONIZED Literal 0 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mOperation MethodInvocation Model MethodInvocation getGuarded getConcurrencyKind setConcurrency getCoreHelper IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference mOperation getFacade MethodInvocation Model MethodInvocation getGuarded getConcurrencyKind BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mOperation MethodInvocation Model MethodInvocation getSequential getConcurrencyKind setConcurrency getCoreHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference mOperation getParameters MethodInvocation toArray getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator parameter MemberReference c BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mOperation MemberReference parameter getCoreHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator mParameter LocalVariableDeclaration ReferenceType String VariableDeclarator typeName LocalVariableDeclaration ReferenceType Object VariableDeclarator mClassifier Literal null IfStatement BinaryOperation || BinaryOperation == MemberReference returnType Literal null BinaryOperation && Literal MethodInvocation MemberReference returnType equals "void" MethodInvocation name MethodInvocation Model MethodInvocation MethodInvocation parseState getClassifier getName getFacade equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mOperation MethodInvocation MemberReference mOperation Literal "create" Literal "BehavioralFeature" getStereotype addStereotype getCoreHelper StatementExpression MethodInvocation ProjectManager MethodInvocation updateRoots getManager BlockStatement TryStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation MethodInvocation MethodInvocation MemberReference returnType getClassifierName Literal false MemberReference javaProfile get MemberReference returnType getContext = CatchClause CatchClauseParameter ClassifierNotFoundException e IfStatement BinaryOperation && BinaryOperation && MemberReference forceIt BinaryOperation != MemberReference returnType Literal null BinaryOperation != MemberReference model Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Modeller.java: " Literal "forced creation of unknown classifier " MemberReference returnType info LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference returnType getPackageName LocalVariableDeclaration ReferenceType String VariableDeclarator classifierName MethodInvocation MemberReference returnType getClassifierName LocalVariableDeclaration ReferenceType Object VariableDeclarator mPackage TernaryExpression BinaryOperation > MethodInvocation packageName length Literal 0 MethodInvocation MemberReference packageName Literal false getPackage MemberReference model StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference mPackage MemberReference classifierName lookupIn getFacade = IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference classifierName MemberReference mPackage buildClass getCoreFactory = StatementExpression MethodInvocation newElements MemberReference mClassifier add BlockStatement StatementExpression MethodInvocation MemberReference returnType Literal "operation return type" warnClassifierNotFound IfStatement BinaryOperation != MemberReference mClassifier Literal null BlockStatement StatementExpression Assignment MemberReference mParameter MethodInvocation MemberReference mOperation MemberReference mClassifier = ForStatement EnhancedForControl VariableDeclaration ReferenceType ParameterDeclaration VariableDeclarator parameter MemberReference parameters BlockStatement StatementExpression Assignment MemberReference typeName MethodInvocation parameter getType = IfStatement MethodInvocation typeName Literal "..." endsWith BlockStatement StatementExpression MethodInvocation Literal "Unsupported variable length parameter list notation" MethodInvocation parameter getName logError StatementExpression Assignment MemberReference mClassifier Literal null = TryStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation MethodInvocation MethodInvocation MemberReference typeName getClassifierName Literal false MemberReference javaProfile get MemberReference typeName getContext = CatchClause CatchClauseParameter ClassifierNotFoundException e IfStatement BinaryOperation && BinaryOperation && MemberReference forceIt BinaryOperation != MemberReference typeName Literal null BinaryOperation != MemberReference model Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Modeller.java: " Literal "forced creation of unknown classifier " MemberReference typeName info LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference typeName getPackageName LocalVariableDeclaration ReferenceType String VariableDeclarator classifierName MethodInvocation MemberReference typeName getClassifierName LocalVariableDeclaration ReferenceType Object VariableDeclarator mPackage TernaryExpression BinaryOperation > MethodInvocation packageName length Literal 0 MethodInvocation MemberReference packageName Literal false getPackage MemberReference model StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference mPackage MemberReference classifierName lookupIn getFacade = IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference classifierName MemberReference mPackage buildClass getCoreFactory = StatementExpression MethodInvocation newElements MemberReference mClassifier add BlockStatement StatementExpression MethodInvocation MemberReference typeName Literal "operation warnClassifierNotFound IfStatement BinaryOperation != MemberReference mClassifier Literal null BlockStatement StatementExpression Assignment MemberReference mParameter MethodInvocation MemberReference mOperation MemberReference mClassifier MethodInvocation parameter getName = IfStatement MethodInvocation ! Model MethodInvocation MemberReference mClassifier isAClassifier getFacade BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Modeller.java: a valid type for a parameter " Literal "could not be resolved:\n " Literal "In file: " MemberReference fileName Literal ", for operation: " MethodInvocation Model MethodInvocation MemberReference mOperation getName getFacade Literal ", for parameter: " MethodInvocation Model MethodInvocation MemberReference mParameter getName getFacade logError StatementExpression MethodInvocation MemberReference mOperation MemberReference javadoc addDocumentationTag ReturnStatement MemberReference mOperation	1
MethodDeclaration Modifier public StatementExpression MethodInvocation events clear	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public ReferenceType Collection ReturnStatement MethodInvocation impl	0
MethodDeclaration Modifier static protected BasicType boolean getBoolean FormalParameter ReferenceType ConfigurationKey key ReturnStatement MethodInvocation Configuration MemberReference key Literal false getBoolean	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Generalization getGeneralizations FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType GeneralizableElement BlockStatement ReturnStatement Cast ReferenceType GeneralizableElement MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType Object StatementExpression MethodInvocation MemberReference handle MemberReference MemberReference	0
MethodDeclaration Modifier private setTarget StatementExpression MethodInvocation targetFollower MethodInvocation targetFollower shouldBeEnabled setEnabled	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elem MemberReference target LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation MemberReference elem IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference setTarget getInstance	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation Cast ReferenceType MemberReference handle getStimulus MemberReference handle getRefOutermostPackage ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier private ReferenceType String generateTaggedValue FormalParameter ReferenceType Object tv FormalParameter BasicType int tagSelection IfStatement BinaryOperation == MemberReference tv Literal null ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation MethodInvocation MethodInvocation MemberReference tv getValueOfTag getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator tagName MethodInvocation MethodInvocation MemberReference tv getTagOfTag getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference s Literal null BinaryOperation == MethodInvocation s length Literal 0 MethodInvocation s Literal "/** */" equals BinaryOperation == MemberReference tagName Literal null BinaryOperation != MethodInvocation tagName Literal "include" indexOf Literal - 1 BinaryOperation != MethodInvocation tagName Literal "_incl" indexOf Literal - 1 BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation && BinaryOperation == MemberReference tagSelection MemberReference DOC_COMMENT_TAGS MethodInvocation MemberReference tagName isDocCommentTag BlockStatement ReturnStatement BinaryOperation + MethodInvocation MemberReference tagName generateDocComment4Tag MemberReference s IfStatement BinaryOperation || BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference tagSelection MemberReference ALL_BUT_DOC_TAGS MethodInvocation MemberReference tagName isDocCommentTag MethodInvocation tagName Literal "documentation" equals MethodInvocation tagName Literal "javadocs" equals BinaryOperation == MemberReference tagSelection MemberReference BlockStatement ReturnStatement BinaryOperation + BinaryOperation + MemberReference tagName Literal "=" MemberReference s BlockStatement ReturnStatement Literal ""	1
MethodDeclaration Modifier public ReferenceType Namespace FormalParameter ReferenceType Object ns1 FormalParameter ReferenceType Object ns2 IfStatement BinaryOperation || BinaryOperation instanceof MemberReference ns1 ReferenceType Namespace BinaryOperation instanceof MemberReference ns2 ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "ns1 and ns2 must be instances of Namespace" LocalVariableDeclaration ReferenceType Namespace VariableDeclarator result Literal null LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Namespace VariableDeclarator l1 ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Namespace StatementExpression MethodInvocation l1 Cast ReferenceType Namespace MemberReference ns1 add StatementExpression MethodInvocation l1 Cast ReferenceType Namespace MemberReference ns1 addAll LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Namespace VariableDeclarator l2 ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Namespace StatementExpression MethodInvocation l2 Cast ReferenceType Namespace MemberReference ns2 add StatementExpression MethodInvocation l2 Cast ReferenceType Namespace MemberReference ns2 addAll LocalVariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MethodInvocation l1 size Literal 1 LocalVariableDeclaration BasicType int VariableDeclarator j BinaryOperation - MethodInvocation l2 size Literal 1 WhileStatement BinaryOperation && BinaryOperation >= MemberReference i Literal 0 BinaryOperation >= MemberReference j Literal 0 BlockStatement IfStatement BinaryOperation == MethodInvocation l1 MemberReference i get MethodInvocation l2 MemberReference j get BlockStatement StatementExpression Assignment MemberReference result MethodInvocation l1 MemberReference i get = StatementExpression MemberReference -- i StatementExpression MemberReference -- j BlockStatement BreakStatement ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType Container parent LocalVariableDeclaration BasicType int VariableDeclarator Literal 1 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation parent getComponentCount IfStatement MemberReference ! BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement IfStatement BinaryOperation instanceof MethodInvocation parent MemberReference i getComponent ReferenceType BlockStatement StatementExpression MemberReference ++ ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean isSynch FormalParameter ReferenceType Object handle TryStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e CatchClause CatchClauseParameter ClassCastException e ThrowStatement ClassCreator ReferenceType IllegalArgumentException MemberReference e	0
MethodDeclaration BasicType int getRightMargin ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference verboseDocs MemberReference =	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation == MethodInvocation e getSource MethodInvocation getOkButton BlockStatement StatementExpression MethodInvocation	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference f getNamespace getFacade IfStatement MethodInvocation ! MemberReference ns MemberReference dsgr predicate BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference ns computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier protected ReferenceType Fig ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fig MethodInvocation BlockStatement IfStatement BinaryOperation instanceof MemberReference fig ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference fig ReturnStatement MethodInvocation ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation getTarget getInstantiation getCommonBehaviorHelper IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation ret MemberReference add ReturnStatement MemberReference ret	0
MethodDeclaration Modifier private BasicType int FormalParameter Modifier final ReferenceType Component comp ReturnStatement Cast BasicType int MethodInvocation comp MethodInvocation getHeight getPreferredSize	0
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator trigger MethodInvocation Model MethodInvocation MemberReference modelElement getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator guard MethodInvocation Model MethodInvocation MemberReference modelElement getGuard getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator effect MethodInvocation Model MethodInvocation MemberReference modelElement getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator t MethodInvocation MemberReference trigger LocalVariableDeclaration ReferenceType String VariableDeclarator g MethodInvocation MemberReference guard LocalVariableDeclaration ReferenceType String VariableDeclarator e MethodInvocation NotationUtilityUml MemberReference effect generateActionSequence IfStatement BinaryOperation > MethodInvocation g length Literal 0 BlockStatement StatementExpression Assignment MemberReference t BinaryOperation + BinaryOperation + Literal " [" MemberReference g Literal "]" += IfStatement BinaryOperation > MethodInvocation e length Literal 0 BlockStatement StatementExpression Assignment MemberReference t BinaryOperation + Literal " / " MemberReference e += ReturnStatement MemberReference t	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public setMultiplicity FormalParameter Modifier final ReferenceType Object handle FormalParameter ReferenceType String arg IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A was expected" IfStatement BinaryOperation || BinaryOperation == MemberReference arg Literal null MethodInvocation arg Literal "" equals BlockStatement LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MemberReference handle StatementExpression Cast ReferenceType MemberReference handle StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Removing the multiplicity from element #" MemberReference handle execute getCommandStack ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference arg StatementExpression MethodInvocation MemberReference handle MemberReference ArraySelector Literal 0 MemberReference ArraySelector Literal 1 setMultiplicity	0
MethodDeclaration Modifier public ReferenceType DocumentFragment doSomething FormalParameter ReferenceType NodeIterator rtf StatementExpression MethodInvocation System.out BinaryOperation + Literal "Got here 2: " MemberReference rtf println LocalVariableDeclaration ReferenceType DocumentFragment VariableDeclarator df Cast ReferenceType DocumentFragment MethodInvocation rtf nextNode LocalVariableDeclaration ReferenceType Element VariableDeclarator node Cast ReferenceType Element MethodInvocation df getFirstChild StatementExpression MethodInvocation System.out BinaryOperation + Literal MemberReference node println StatementExpression MethodInvocation System.out BinaryOperation + Literal "namesp uri: " MethodInvocation node getNamespaceURI println StatementExpression MethodInvocation System.out BinaryOperation + Literal "local name: " MethodInvocation node getLocalName println ReturnStatement MemberReference df	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Permission FormalParameter ReferenceType Object client IfStatement BinaryOperation instanceof MemberReference client ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "invalid argument" LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Permission VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Permission TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Dependency VariableDeclarator dependency Cast ReferenceType ModelElement MemberReference client BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference dependency ReferenceType Permission MethodInvocation Cast ReferenceType Permission MemberReference dependency hasImportStereotype BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Permission MemberReference dependency add CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation ! Model MethodInvocation MemberReference parent getFacade BlockStatement ReturnStatement MemberReference Collections EMPTY_SET LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation == MemberReference p Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_SET LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType ArgoDiagram VariableDeclarator res ClassCreator ReferenceType HashSet TypeArgument ReferenceType ArgoDiagram ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator d MethodInvocation p getDiagramList BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference d ReferenceType UMLCollaborationDiagram BinaryOperation == Cast ReferenceType UMLCollaborationDiagram MemberReference d MemberReference parent BlockStatement StatementExpression MethodInvocation res MemberReference d add IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference d ReferenceType SequenceDiagram BinaryOperation == MethodInvocation Model MethodInvocation MemberReference parent getFacade Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference parent getFacade Literal null BinaryOperation == MemberReference parent Cast ReferenceType SequenceDiagram MemberReference d BlockStatement StatementExpression MethodInvocation res MemberReference d add ReturnStatement MemberReference res	1
MethodDeclaration Modifier private static ReferenceType Collection TypeArgument ReferenceType Object getAllProfilePackages FormalParameter ReferenceType Object model LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getPackage getMetaTypes getAllModelElementsOfKind getModelManagementHelper LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference col BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isAPackage getFacade MethodInvocation Model MethodInvocation MemberReference element Literal "profile" hasStereotype getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation ret MemberReference element add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getReceiver getFacade MemberReference element	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString ReturnStatement MemberReference name	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter TryStatement IfStatement BinaryOperation instanceof MemberReference parameter ReferenceType TemplateParameter BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or parameter: " MemberReference parameter	1
MethodDeclaration Modifier public ReferenceType Object getAbstraction ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object elem ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference elem isAClassifier getFacade BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getInstantiation getCommonBehaviorHelper MemberReference elem	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String language FormalParameter ReferenceType String body ReturnStatement MethodInvocation MemberReference language MemberReference body	0
MethodDeclaration Modifier public final save FormalParameter ReferenceType Project project FormalParameter ReferenceType File file SaveException InterruptedException StatementExpression MethodInvocation MemberReference project MemberReference file StatementExpression MethodInvocation MemberReference project MemberReference file doSave StatementExpression MethodInvocation MemberReference project MemberReference file	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_48 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal - Literal 255L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public setEnabled FormalParameter BasicType boolean b StatementExpression MethodInvocation dummyAction MemberReference b setEnabled	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String c StatementExpression Assignment MemberReference MemberReference c =	0
MethodDeclaration Modifier public ReferenceType getFigNodeStrategy ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener FormalParameter ReferenceType NotificationFilter filter FormalParameter ReferenceType Object handback ListenerNotFoundException StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference handback removeNotificationListener	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference INSTANCE	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionCreatePseudostate MethodInvocation Model MethodInvocation getFork getPseudostateKind Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType String getColumnName FormalParameter BasicType int col ReturnStatement MemberReference ArraySelector MemberReference col columnNames	1
MethodDeclaration Modifier public ReferenceType Collection getProfilePackages ProfileException ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation ! Model MethodInvocation MemberReference parent isALink getFacade BlockStatement ReturnStatement MemberReference Collections EMPTY_SET ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade	1
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType Component childComp IfStatement MethodInvocation MemberReference childComp BlockStatement ReturnStatement Literal 0 BlockStatement ReturnStatement MethodInvocation MemberReference childComp getMinimumHeight	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType CallAction	0
MethodDeclaration Modifier public feature FormalParameter ReferenceType Object feature StatementExpression MethodInvocation obsoleteFeatures MemberReference feature remove	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object classifier FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator conns MethodInvocation Model MethodInvocation MemberReference classifier getAssociationEnds getFacade IfStatement BinaryOperation == MemberReference conns Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration BasicType int VariableDeclarator compositeCount Literal 0 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator assocEnds MethodInvocation conns iterator WhileStatement MethodInvocation assocEnds hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator myEnd MethodInvocation assocEnds next IfStatement MethodInvocation Model MethodInvocation MemberReference myEnd Literal getCoreHelper BlockStatement ContinueStatement IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference myEnd getLower getFacade Literal 0 BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MethodInvocation Model MethodInvocation MemberReference myEnd getAssociation getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference asc Literal null MethodInvocation Model MethodInvocation MemberReference asc getCoreHelper BlockStatement StatementExpression MemberReference ++ compositeCount IfStatement BinaryOperation > MemberReference compositeCount Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public FormalParameter BasicType int n StatementExpression MethodInvocation BinaryOperation + MemberReference n MethodInvocation getRank	0
MethodDeclaration doCopyAttribute FormalParameter ReferenceType Attribute source FormalParameter ReferenceType Attribute target StatementExpression MethodInvocation target MethodInvocation setMultiplicity StatementExpression MethodInvocation target MethodInvocation source getChangeability setChangeability StatementExpression MethodInvocation target MethodInvocation source getTargetScope setTargetScope StatementExpression MethodInvocation target MethodInvocation source getType StatementExpression MethodInvocation MemberReference source MemberReference target	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public handleStartElement FormalParameter ReferenceType XMLElement e TryStatement SwitchStatement MethodInvocation tokens MethodInvocation e getName Literal true toToken SwitchStatementCase MemberReference TodoTokenTable MemberReference TodoTokenTable TOKEN_DESCRIPTION MemberReference TodoTokenTable MemberReference TodoTokenTable MemberReference TodoTokenTable MemberReference TodoTokenTable BreakStatement SwitchStatementCase MemberReference TodoTokenTable StatementExpression MethodInvocation MemberReference e BreakStatement SwitchStatementCase MemberReference TodoTokenTable StatementExpression MethodInvocation MemberReference e BreakStatement SwitchStatementCase MemberReference TodoTokenTable StatementExpression MethodInvocation MemberReference e BreakStatement SwitchStatementCase MemberReference TodoTokenTable StatementExpression MethodInvocation MemberReference e handleResolvedCritics BreakStatement SwitchStatementCase MemberReference TodoTokenTable StatementExpression MethodInvocation MemberReference e BreakStatement SwitchStatementCase StatementExpression MethodInvocation LOG BinaryOperation + Literal "WARNING: unknown tag:" MethodInvocation e getName warn BreakStatement CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation LOG Literal "Exception in startelement" MemberReference ex error	1
MethodDeclaration Modifier public ReferenceType MBeanNotificationInfo getNotificationInfo ReturnStatement MethodInvocation notifier getNotificationInfo	0
MethodDeclaration Modifier public mousePressed FormalParameter ReferenceType MouseEvent me IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement StatementExpression MethodInvocation UndoManager MethodInvocation This addMementoLock getInstance StatementExpression Assignment MemberReference modelElement MethodInvocation Model MethodInvocation MemberReference metaType MethodInvocation diagram getOwner buildNode getUmlFactory = StatementExpression MethodInvocation LOG BinaryOperation + Literal "Created " MemberReference modelElement info StatementExpression MethodInvocation start StatementExpression Assignment MemberReference editor MethodInvocation Globals curEditor = LocalVariableDeclaration ReferenceType Layer VariableDeclarator lay MethodInvocation editor MethodInvocation getActiveLayer getLayerManager StatementExpression Assignment MemberReference MethodInvocation MemberReference lay MemberReference modelElement MethodInvocation diagram getDiagramSettings createDiagramElement = StatementExpression MethodInvocation MemberReference me mouseMoved StatementExpression MethodInvocation me consume	1
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator Cast ReferenceType FigMessage MethodInvocation StatementExpression MethodInvocation MethodInvocation FigMessage MethodInvocation MemberReference get setSelectedItem	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object t StatementExpression Assignment This MemberReference listTarget MemberReference t =	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MethodInvocation Collections emptySet	1
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String in IfStatement BinaryOperation == MethodInvocation MemberReference in Literal null BlockStatement StatementExpression Assignment MemberReference in BinaryOperation + Literal "." MethodInvocation += ReturnStatement MemberReference in	0
MethodDeclaration Modifier public ReferenceType Object getDefaultReturnType ReturnStatement MethodInvocation ModelUtils Literal "void" MethodInvocation MethodInvocation iterator MethodInvocation next getModel	0
MethodDeclaration Modifier public BasicType boolean isSynch FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType CallAction BlockStatement ReturnStatement Cast ReferenceType CallAction MemberReference handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getClassifier getMetaTypes	0
MethodDeclaration Modifier public synchronized ReferenceType Object LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation MethodInvocation iterator getTargets WhileStatement MethodInvocation iter hasNext BlockStatement IfStatement BinaryOperation != MethodInvocation MethodInvocation iter next Literal null BlockStatement StatementExpression MemberReference ++ i IfStatement BinaryOperation > MemberReference i Literal 1 BlockStatement BreakStatement IfStatement BinaryOperation == MemberReference i Literal 1 BlockStatement ReturnStatement MemberReference modelTarget ReturnStatement Literal null	0
MethodDeclaration Modifier protected ReferenceType FormalParameter ReferenceType String ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator d MemberReference decisions BlockStatement IfStatement MethodInvocation MethodInvocation d getName equals BlockStatement ReturnStatement MemberReference d ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType p1 StatementExpression MethodInvocation model MethodInvocation getText setLanguage	0
MethodDeclaration Modifier public ReferenceType Object getParameter FormalParameter ReferenceType Object handle FormalParameter BasicType int n LocalVariableDeclaration ReferenceType Collection VariableDeclarator collection MethodInvocation MemberReference handle getParameters IfStatement BinaryOperation instanceof MemberReference collection ReferenceType List BlockStatement ReturnStatement Cast ReferenceType List MemberReference collection ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation outlineFig isFilled	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType AssociationEnd BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator ae Cast ReferenceType AssociationEnd MemberReference elem LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator assoc MethodInvocation ae getAssociation IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference assoc Literal null BinaryOperation != MethodInvocation assoc getConnection Literal null BinaryOperation == MethodInvocation assoc MethodInvocation size getConnection Literal 2 BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference assoc delete getUmlFactory StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage MethodInvocation ae refOutermostPackage deleteCollection getUmlHelper	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Include	0
MethodDeclaration Modifier public final StatementExpression MethodInvocation This	0
MethodDeclaration Modifier public ReferenceType Object getFeature FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MemberReference obsoleteFeatures BlockStatement IfStatement MethodInvocation name MethodInvocation Model MethodInvocation MemberReference getName getFacade equals BlockStatement ReturnStatement MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String ReturnStatement MemberReference memberList	0
MethodDeclaration Modifier public setMultiplicity FormalParameter Modifier final ReferenceType Object handle FormalParameter ReferenceType String arg StatementExpression MethodInvocation ClassCreator ReferenceType StringSetter MethodDeclaration Modifier public set FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setMultiplicity getComponent MemberReference arg MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference handle getMultiplicity getFacade toString getFacade createCommand	1
MethodDeclaration Modifier public final statement_list RecognitionException TokenStreamException BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _cnt308 Literal 0 DoStatement _loop308 Literal true BlockStatement IfStatement MethodInvocation _tokenSet_59 MethodInvocation Literal 1 LA member BlockStatement StatementExpression MethodInvocation statement BlockStatement IfStatement BinaryOperation >= MemberReference _cnt308 Literal 1 BlockStatement BreakStatement _loop308 BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MemberReference ++ _cnt308	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae IfStatement BinaryOperation && BinaryOperation != MemberReference Globals clipBoard Literal null MethodInvocation ! Globals.clipBoard isEmpty BlockStatement BlockStatement IfStatement BinaryOperation && MethodInvocation ! isSystemClipBoardEmpty BinaryOperation != MemberReference textSource Literal null BlockStatement StatementExpression MethodInvocation textSource	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Binding	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement MethodInvocation getText	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier public setValue FormalParameter ReferenceType Object tabValues StatementExpression Assignment MemberReference MethodInvocation getExpression = StatementExpression MethodInvocation IfStatement BinaryOperation == MemberReference tabValues Literal null BlockStatement IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference delete getUmlFactory StatementExpression Assignment MemberReference Literal null = StatementExpression MethodInvocation MemberReference BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference tabValues StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference setInitialValue getCoreHelper StatementExpression MethodInvocation	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element isATagDefinition getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getTagDefinitions MethodInvocation MemberReference element contains getFacade	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation MemberReference w setLineWidth	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent lse IfStatement MethodInvocation lse getValueIsAdjusting BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation getSelectedValue StatementExpression MethodInvocation BinaryOperation != MemberReference Literal null setEnabled	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object o ReturnStatement MethodInvocation impl MemberReference o	0
MethodDeclaration Modifier public static register FormalParameter ReferenceType Critic cr LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator MethodInvocation cr getCriticizedDesignMaterials ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator meta MemberReference BlockStatement StatementExpression MethodInvocation MemberReference cr MemberReference meta register	0
MethodDeclaration addAttribute FormalParameter ReferenceType ClassNode FormalParameter ReferenceType FieldNode fn FormalParameter ReferenceType String cPackage LocalVariableDeclaration BasicType short VariableDeclarator modifiers MethodInvocation ModifierMap MemberReference fn modifiers getUmlModifierForVisibility LocalVariableDeclaration ReferenceType String VariableDeclarator typeSpec MethodInvocation MemberReference fn.type.Identifier Identifier MemberReference fn.type.Identifier.Identifier length buildToParent LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation MethodInvocation fn.names MemberReference Identifier Literal 0 get MethodInvocation fn.names MemberReference Identifier MemberReference length Literal 0 get buildToParent LocalVariableDeclaration ReferenceType String VariableDeclarator initializer Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator docs Literal "" LocalVariableDeclaration BasicType boolean VariableDeclarator forceIt Literal false LocalVariableDeclaration ReferenceType String VariableDeclarator multiplicity Literal "1_1" LocalVariableDeclaration ReferenceType Object VariableDeclarator mClassifier Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator className BinaryOperation + BinaryOperation + MemberReference cPackage Literal "." MemberReference ArraySelector Literal 0 Identifier LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation ele BinaryOperation + MemberReference TAG_CLASS MemberReference className get IfStatement BinaryOperation != MemberReference typeSpec Literal null BlockStatement IfStatement BinaryOperation && MemberReference ! arraysAsDatatype BinaryOperation != MethodInvocation typeSpec Literal '[' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference typeSpec MethodInvocation typeSpec Literal 0 MethodInvocation typeSpec Literal '[' indexOf substring = StatementExpression Assignment MemberReference multiplicity Literal "1_N" = StatementExpression Assignment MemberReference mClassifier MethodInvocation MemberReference typeSpec MemberReference cPackage getStoredDataType = LocalVariableDeclaration ReferenceType Object VariableDeclarator mAttribute MethodInvocation MemberReference cls MemberReference mClassifier MemberReference name StatementExpression MethodInvocation MemberReference mAttribute MemberReference modifiers setOwnerScope StatementExpression MethodInvocation MemberReference mAttribute MemberReference modifiers setVisibility StatementExpression MethodInvocation Model MethodInvocation MemberReference mAttribute MemberReference multiplicity setMultiplicity getCoreHelper IfStatement BinaryOperation != MemberReference initializer Literal null BlockStatement StatementExpression Assignment MemberReference initializer MethodInvocation initializer Literal '\n' Literal ' ' replace = StatementExpression Assignment MemberReference initializer MethodInvocation initializer Literal '\t' Literal ' ' replace = LocalVariableDeclaration ReferenceType Object VariableDeclarator newInitialValue MethodInvocation Model MethodInvocation Literal "CSharp" MemberReference initializer getDataTypesFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference mAttribute MemberReference newInitialValue setInitialValue getCoreHelper IfStatement BinaryOperation > BinaryOperation & MemberReference modifiers MemberReference CSharpConstants ACC_FINAL Literal 0 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mAttribute Literal true setReadOnly getCoreHelper IfStatement MethodInvocation Model MethodInvocation MemberReference mAttribute isReadOnly getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mAttribute Literal true setReadOnly getCoreHelper	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object root StatementExpression Assignment MemberReference critiquerThread ClassCreator ReferenceType Thread This Literal = StatementExpression MethodInvocation critiquerThread Literal true setDaemon StatementExpression MethodInvocation critiquerThread BinaryOperation - MethodInvocation Thread MethodInvocation getPriority currentThread Literal 1 setPriority StatementExpression MethodInvocation critiquerThread start StatementExpression Assignment MemberReference MemberReference root =	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public Annotation Override critique FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr ForStatement EnhancedForControl VariableDeclaration ReferenceType Critic VariableDeclarator c MemberReference critics BlockStatement IfStatement BinaryOperation && MethodInvocation c isActive MethodInvocation c MemberReference dm MemberReference dsgr predicate BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item MethodInvocation c MemberReference dm MemberReference dsgr toDoItem StatementExpression MethodInvocation MemberReference item MemberReference dm MemberReference dsgr ReturnStatement	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType LinkedList TypeArgument ReferenceType String VariableDeclarator list ClassCreator ReferenceType LinkedList TypeArgument ReferenceType String MethodInvocation Model MethodInvocation MethodInvocation getTarget getBaseClasses getFacade StatementExpression MethodInvocation Collections MemberReference list sort ReturnStatement MemberReference list	0
MethodDeclaration Modifier private StatementExpression MethodInvocation MethodInvocation getNameFig ClassCreator ReferenceType PathItemPlacement This MethodInvocation getNameFig Literal 50 Literal 10 StatementExpression MethodInvocation MethodInvocation MemberReference LINE_COLOR setLineColor getFig StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation Literal false StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType makePanel FormalParameter BasicType int newStep SwitchStatement MemberReference newStep SwitchStatementCase Literal 1 IfStatement BinaryOperation == MemberReference step1 Literal null BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator names ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation mes size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation mes MemberReference i get StatementExpression MethodInvocation names MethodInvocation Model MethodInvocation MemberReference me getName getFacade add StatementExpression Assignment MemberReference step1 ClassCreator ReferenceType This MemberReference instructions MemberReference names = ReturnStatement MemberReference step1 SwitchStatementCase ReturnStatement Literal null	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object sender IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Message BinaryOperation || BinaryOperation instanceof MemberReference sender ReferenceType ClassifierRole BinaryOperation == MemberReference sender Literal null BlockStatement StatementExpression Cast ReferenceType Message MemberReference handle ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation instanceof MemberReference sender ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference sender	0
MethodDeclaration Modifier private static ReferenceType String getDescription FormalParameter ReferenceType Object FormalParameter ReferenceType Object assocEnd FormalParameter BasicType int LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference getType getFacade getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator endName MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference assocEnd getType getFacade getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation == MethodInvocation length Literal 0 BlockStatement StatementExpression Assignment MemberReference MethodInvocation Translator Literal localize = IfStatement BinaryOperation || BinaryOperation == MemberReference endName Literal null BinaryOperation == MethodInvocation endName length Literal 0 BlockStatement StatementExpression Assignment MemberReference endName MethodInvocation Translator Literal localize = IfStatement BinaryOperation == MemberReference MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MemberReference MemberReference endName IfStatement BinaryOperation == MemberReference MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MemberReference endName MemberReference BlockStatement ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType Collection getNewElements ReturnStatement MemberReference newElements	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference event MemberReference listener fireNotationEventInternal	0
MethodDeclaration * Display the diagram which contains the given list of targets and * to make them * @param targets Collection of targets to */ Modifier public static FormalParameter ReferenceType List targets IfStatement BinaryOperation || BinaryOperation == MemberReference targets Literal null BinaryOperation == MethodInvocation targets size Literal 0 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator first MethodInvocation targets Literal 0 get IfStatement BinaryOperation && BinaryOperation instanceof MemberReference first ReferenceType ArgoDiagram BinaryOperation > MethodInvocation targets size Literal 1 BlockStatement StatementExpression MethodInvocation MemberReference first setTarget StatementExpression MethodInvocation MethodInvocation targets Literal 1 get setTarget ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference first ReferenceType ArgoDiagram BinaryOperation == MethodInvocation targets size Literal 1 BlockStatement StatementExpression MethodInvocation MemberReference first setTarget ReturnStatement LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager IfStatement BinaryOperation == MemberReference project Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ArgoDiagram VariableDeclarator diagrams MethodInvocation project getDiagramList LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getTarget getInstance IfStatement BinaryOperation && BinaryOperation instanceof MemberReference target ReferenceType ArgoDiagram BinaryOperation == Cast ReferenceType ArgoDiagram MemberReference target MethodInvocation targets size BlockStatement StatementExpression MethodInvocation MemberReference first setTarget ReturnStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator bestDiagram Literal null LocalVariableDeclaration BasicType int VariableDeclarator bestNumContained Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator d MemberReference diagrams BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator nc MethodInvocation d MemberReference targets IfStatement BinaryOperation > MemberReference nc MemberReference bestNumContained BlockStatement StatementExpression Assignment MemberReference bestNumContained MemberReference nc = StatementExpression Assignment MemberReference bestDiagram MemberReference d = IfStatement BinaryOperation == MemberReference nc MethodInvocation targets size BlockStatement BreakStatement IfStatement BinaryOperation != MemberReference bestDiagram Literal null BlockStatement IfStatement MethodInvocation ! DiagramUtils MethodInvocation MemberReference bestDiagram equals getActiveDiagram BlockStatement StatementExpression MethodInvocation MemberReference bestDiagram setTarget StatementExpression MethodInvocation MemberReference first setTarget IfStatement MethodInvocation project MethodInvocation MemberReference first contains BlockStatement StatementExpression MethodInvocation MemberReference first setTarget LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation TargetManager MethodInvocation getInstance IfStatement BinaryOperation instanceof MemberReference f ReferenceType Fig BlockStatement StatementExpression MethodInvocation Globals MethodInvocation Cast ReferenceType Fig MemberReference f curEditor	1
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator figs Cast ReferenceType List TypeArgument ReferenceType Fig MethodInvocation Literal IfStatement BinaryOperation == MemberReference figs Literal null BlockStatement LocalVariableDeclaration ReferenceType SelectionManager VariableDeclarator sm MethodInvocation ce getSelectionManager IfStatement MethodInvocation sm BlockStatement StatementExpression MethodInvocation Globals MethodInvocation Translator Literal localize ReturnStatement StatementExpression Assignment MemberReference figs MethodInvocation sm getFigs = IfStatement BinaryOperation == MemberReference figs Literal null BlockStatement ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation figs size IfStatement BinaryOperation == MemberReference size Literal 0 BlockStatement ReturnStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fi MethodInvocation figs MemberReference i get IfStatement BinaryOperation && MethodInvocation fi BinaryOperation || BinaryOperation == MethodInvocation fi getEnclosedFigs Literal null BinaryOperation == MethodInvocation fi MethodInvocation size getEnclosedFigs Literal 0 BlockStatement StatementExpression MethodInvocation fi MethodInvocation fi getMinimumSize setSize StatementExpression MethodInvocation Globals MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MemberReference fi localize StatementExpression MethodInvocation fi endTrans	1
MethodDeclaration Modifier public static ReferenceType ProjectFactory getInstance ReturnStatement MemberReference INSTANCE	0
MethodDeclaration Modifier public Annotation Override BasicType boolean canAddNode FormalParameter ReferenceType Object node IfStatement BinaryOperation == MemberReference node Literal null BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference node isAAssociation getFacade MethodInvocation ! Model MethodInvocation MemberReference node isANaryAssociation getFacade BlockStatement ReturnStatement Literal false IfStatement MethodInvocation MemberReference node containsNode BlockStatement ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference node isAAssociation getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation Model MethodInvocation MemberReference node getConnections getFacade LocalVariableDeclaration BasicType boolean VariableDeclarator canAdd Literal true ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator end MemberReference ends BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation Model MethodInvocation MemberReference end getClassifier getFacade IfStatement MethodInvocation ! MemberReference classifier containsNode BlockStatement StatementExpression Assignment MemberReference canAdd Literal false = BreakStatement ReturnStatement MemberReference canAdd ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation Model getFacade MethodInvocation Model getFacade MethodInvocation Model getFacade MethodInvocation Model getFacade MethodInvocation Model getFacade MethodInvocation Model getFacade BinaryOperation || MethodInvocation Model MethodInvocation MemberReference node isAComponentInstance getFacade MethodInvocation Model getFacade	1
MethodDeclaration Modifier public ReferenceType ToDoItem get FormalParameter BasicType int index ReturnStatement MethodInvocation items MemberReference index get	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement Literal ", "	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String getLanguages ReturnStatement MethodInvocation Collections ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String MethodInvocation modules keySet	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object StatementExpression MethodInvocation impl MemberReference elem MemberReference	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType MouseEvent me StatementExpression SuperMethodInvocation MemberReference me StatementExpression Assignment MemberReference useComposite MethodInvocation me isShiftDown =	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String s StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ArgoEventTypes This MethodInvocation Translator MemberReference s localize	1
MethodDeclaration Modifier protected Annotation Override LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator machine MethodInvocation Model MethodInvocation MethodInvocation getOwner getSubmachine getFacade IfStatement BinaryOperation != MemberReference machine Literal null BlockStatement StatementExpression Assignment MemberReference s MethodInvocation Model MethodInvocation MemberReference machine getName getFacade = IfStatement BinaryOperation == MemberReference s Literal null BlockStatement StatementExpression Assignment MemberReference s Literal "" = StatementExpression MethodInvocation MethodInvocation MemberReference s setText getNameFig	0
MethodDeclaration Modifier private addJavadocTagContents FormalParameter ReferenceType Object me FormalParameter ReferenceType String sTagName FormalParameter ReferenceType String sTagData IfStatement BinaryOperation || BinaryOperation == MemberReference sTagData length Literal 0 BinaryOperation == MemberReference ArraySelector Literal 0 sTagData Literal null BlockStatement StatementExpression MethodInvocation LOG Literal addJavadocTagContents with no tag data!" debug ReturnStatement LocalVariableDeclaration BasicType int VariableDeclarator colonPos TernaryExpression BinaryOperation != MemberReference sTagData Literal null MemberReference ArraySelector Literal 0 MethodInvocation Literal ':' indexOf sTagData Literal - 1 IfStatement BinaryOperation && BinaryOperation != MemberReference colonPos Literal - 1 BinaryOperation || BinaryOperation || Literal "invariant" Literal "pre-condition" Literal BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sContext MethodInvocation OCLUtil MemberReference me LocalVariableDeclaration ReferenceType String VariableDeclarator name MemberReference ArraySelector Literal 0 MethodInvocation Literal 0 MemberReference colonPos substring sTagData LocalVariableDeclaration ReferenceType String VariableDeclarator body Literal null IfStatement MethodInvocation sTagName Literal "invariant" equals BlockStatement StatementExpression Assignment MemberReference body BinaryOperation + BinaryOperation + MemberReference sContext Literal " inv " MemberReference sTagData = IfStatement MethodInvocation sTagName Literal "pre-condition" equals BlockStatement StatementExpression Assignment MemberReference body BinaryOperation + BinaryOperation + MemberReference sContext Literal " pre " MemberReference sTagData = BlockStatement StatementExpression Assignment MemberReference body BinaryOperation + BinaryOperation + MemberReference sContext Literal " post " MemberReference sTagData = LocalVariableDeclaration ReferenceType Object VariableDeclarator bexpr MethodInvocation Model MethodInvocation Literal "OCL" MemberReference body createBooleanExpression getDataTypesFactory LocalVariableDeclaration ReferenceType Object VariableDeclarator mc MethodInvocation Model MethodInvocation MemberReference name MemberReference bexpr getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference me MemberReference mc addConstraint getCoreHelper IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference me getNamespace getFacade Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference me getNamespace getFacade MemberReference mc addOwnedElement getCoreHelper BlockStatement IfStatement Literal MethodInvocation MemberReference sTagName equals "stereotype" BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation MemberReference me MemberReference sTagName getTaggedValue IfStatement BinaryOperation != MemberReference tv Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sStereotype MethodInvocation Model MethodInvocation MemberReference tv getValueOfTag getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference sStereotype Literal null BinaryOperation > MethodInvocation sStereotype length Literal 0 BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 sTagData BinaryOperation + BinaryOperation + MemberReference sStereotype Literal ',' MemberReference ArraySelector Literal 0 sTagData = LocalVariableDeclaration ReferenceType HashSet TypeArgument ReferenceType String VariableDeclarator stSet ClassCreator ReferenceType HashSet TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference ArraySelector Literal 0 sTagData Literal ", " WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression MethodInvocation stSet MethodInvocation st MethodInvocation trim nextToken add LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType String VariableDeclarator iter MethodInvocation stSet iterator WhileStatement MethodInvocation iter hasNext BlockStatement IfStatement BinaryOperation > MethodInvocation sb length Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal ',' append StatementExpression MethodInvocation sb MethodInvocation iter next append StatementExpression Assignment MemberReference ArraySelector Literal 0 sTagData MethodInvocation sb toString = StatementExpression MethodInvocation MemberReference me MemberReference sTagName MemberReference sTagData buildTaggedValue	1
MethodDeclaration Modifier public ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType Class buildClass FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType Class VariableDeclarator clazz MethodInvocation createClass IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation clazz MemberReference name setName ReturnStatement MemberReference clazz	0
MethodDeclaration Modifier public ReferenceType List ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Object getStimulus ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation = ReturnStatement MemberReference	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setTargetScope getComponent	0
MethodDeclaration Modifier public Annotation Override ReferenceType DefaultTypeStrategy getDefaultTypeStrategy ReturnStatement ClassCreator ReferenceType MethodInvocation getProfileModels	0
MethodDeclaration Modifier public buildModel LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement BinaryOperation && BinaryOperation != MemberReference target Literal null MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference target isRoot getFacade setSelected BlockStatement StatementExpression MethodInvocation Literal false setSelected	0
MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType Object base StatementExpression Cast ReferenceType MethodInvocation getGraphModel StatementExpression MethodInvocation MemberReference base setNamespace StatementExpression MethodInvocation damage ReturnStatement Literal true	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Enumeration BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier private BasicType boolean isFileReadonly FormalParameter ReferenceType File file TryStatement ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference file Literal null BinaryOperation && MethodInvocation file exists MethodInvocation ! file canWrite BinaryOperation && MethodInvocation ! file exists MethodInvocation ! file createNewFile CatchClause CatchClauseParameter IOException ReturnStatement Literal true	1
MethodDeclaration Modifier public static ReferenceType KeyStroke decodeKeyStroke FormalParameter ReferenceType String strKeyStroke AssertStatement BinaryOperation != MemberReference strKeyStroke Literal null LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator tokenizer ClassCreator ReferenceType StringTokenizer MemberReference strKeyStroke MemberReference KeyEventUtils MODIFIER_JOINER LocalVariableDeclaration BasicType int VariableDeclarator modifiers Literal 0 WhileStatement MethodInvocation tokenizer hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nextElement Cast ReferenceType String MethodInvocation tokenizer nextElement IfStatement MethodInvocation tokenizer hasMoreTokens BlockStatement StatementExpression Assignment MemberReference modifiers MethodInvocation MemberReference nextElement decodeModifier |= BlockStatement TryStatement LocalVariableDeclaration ReferenceType Field VariableDeclarator f ClassReference MethodInvocation BinaryOperation + Literal "VK_" MemberReference nextElement getField ReferenceType KeyEvent ReturnStatement MethodInvocation KeyStroke MethodInvocation f Literal null getInt MemberReference modifiers getKeyStroke CatchClause CatchClauseParameter Exception exc StatementExpression MethodInvocation LOG BinaryOperation + Literal " MemberReference exc error ReturnStatement Literal null	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier private BasicType boolean equal FormalParameter ReferenceType Expression expr1 FormalParameter ReferenceType Expression expr2 IfStatement BinaryOperation == MemberReference expr1 Literal null BlockStatement IfStatement BinaryOperation == MemberReference expr2 Literal null BlockStatement ReturnStatement Literal true BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement MethodInvocation expr1 MemberReference expr2 equals	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType AbstractArgoJPanel ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public static ReferenceType ConfigurationKey makeKey FormalParameter ReferenceType String k1 FormalParameter ReferenceType String k2 ReturnStatement ClassCreator ReferenceType MemberReference k1 MemberReference k2	0
MethodDeclaration Modifier public ReferenceType Object getSourcePort FormalParameter ReferenceType Object edge IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement ReturnStatement Cast ReferenceType CommentEdge MemberReference edge IfStatement BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference edge getFacade MethodInvocation Model MethodInvocation MemberReference edge isATransition getFacade MethodInvocation Model MethodInvocation MemberReference edge isAAssociationEnd getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference edge getSource getUmlHelper IfStatement MethodInvocation Model MethodInvocation MemberReference edge isALink getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference edge getSource getCommonBehaviorHelper StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + This MethodInvocation getClass MethodInvocation toString Literal ": getSourcePort(" MethodInvocation edge toString Literal ") - can't handle" error ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object IfStatement BinaryOperation != MemberReference resolver Literal null BlockStatement LocalVariableDeclaration ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator globalXmiIdToObjectMap ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object MethodInvocation resolver LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator idToObjectMaps MethodInvocation resolver LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator entrySet Literal null SynchronizedStatement MemberReference idToObjectMaps StatementExpression Assignment MemberReference entrySet ClassCreator ReferenceType HashSet TypeArgument ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object MethodInvocation idToObjectMaps entrySet = ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator entry MemberReference entrySet BlockStatement StatementExpression MethodInvocation entry ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object MethodInvocation entry getValue setValue ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator entry MemberReference entrySet BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator xmiIdPrefix TernaryExpression MethodInvocation entry MethodInvocation MethodInvocation getTempXMIFileURIPrefix startsWith getKey Literal "" BinaryOperation + MethodInvocation entry getKey Literal "#" ForStatement EnhancedForControl VariableDeclaration ReferenceType Entry TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator innerMapEntry MethodInvocation entry MethodInvocation entrySet getValue BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator id BinaryOperation + MemberReference xmiIdPrefix MethodInvocation innerMapEntry getKey IfStatement MethodInvocation ! globalXmiIdToObjectMap MemberReference id containsKey BlockStatement StatementExpression MethodInvocation globalXmiIdToObjectMap MemberReference id MethodInvocation innerMapEntry getValue put ReturnStatement MemberReference globalXmiIdToObjectMap ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Object getDefaultValue FormalParameter ReferenceType Object handle ReturnStatement Cast ReferenceType Parameter MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAPackage getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getNamespace getFacade	0
MethodDeclaration Modifier public ReferenceType Extend FormalParameter Modifier final ReferenceType Object extendedCase FormalParameter Modifier final ReferenceType Object extension FormalParameter Modifier final ReferenceType Object extensionLocation IfStatement BinaryOperation || BinaryOperation instanceof MemberReference extendedCase ReferenceType BinaryOperation instanceof MemberReference extension ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation && BinaryOperation != MemberReference extensionLocation Literal null BinaryOperation instanceof MemberReference extensionLocation ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation && BinaryOperation != MemberReference extensionLocation Literal null Cast ReferenceType MemberReference extensionLocation BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal must to " MemberReference extendedCase LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator ep IfStatement BinaryOperation == MemberReference extensionLocation Literal null BlockStatement StatementExpression Assignment MemberReference ep MethodInvocation = StatementExpression Cast ReferenceType MemberReference extendedCase BlockStatement StatementExpression Assignment MemberReference ep Cast ReferenceType MemberReference extensionLocation = LocalVariableDeclaration ReferenceType Extend VariableDeclarator extend MethodInvocation createExtend StatementExpression MethodInvocation extend Cast ReferenceType MemberReference extendedCase StatementExpression MethodInvocation extend Cast ReferenceType MemberReference extension StatementExpression MethodInvocation extend MethodInvocation MemberReference ep add StatementExpression MethodInvocation MethodInvocation MemberReference extend add StatementExpression MethodInvocation MethodInvocation MemberReference ep add LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the extend for the that extends the through #" StatementExpression MethodInvocation modelImpl MethodInvocation getCommandStack MethodInvocation MemberReference cmd execute StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get MemberReference extension MemberReference extendedCase MethodInvocation run MethodInvocation Literal 1 get ReturnStatement Cast ReferenceType Extend MethodInvocation run MethodInvocation Literal 0 get	0
MethodDeclaration Modifier public Annotation Override setValueAt FormalParameter ReferenceType Object aValue FormalParameter BasicType int rowIndex FormalParameter BasicType int columnIndex IfStatement BinaryOperation == MemberReference columnIndex MethodInvocation getLanguagesCount BlockStatement ReturnStatement IfStatement BinaryOperation >= MemberReference columnIndex MethodInvocation getColumnCount BlockStatement ReturnStatement IfStatement BinaryOperation instanceof MemberReference aValue ReferenceType Boolean BlockStatement ReturnStatement LocalVariableDeclaration BasicType boolean VariableDeclarator val Cast ReferenceType Boolean MemberReference aValue LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation classes MemberReference rowIndex get IfStatement BinaryOperation && BinaryOperation >= MemberReference columnIndex Literal 0 BinaryOperation < MemberReference columnIndex MethodInvocation getLanguagesCount BlockStatement IfStatement MemberReference val BlockStatement StatementExpression MemberReference ArraySelector MemberReference columnIndex MethodInvocation MemberReference cls add checked BlockStatement StatementExpression MemberReference ArraySelector MemberReference columnIndex MethodInvocation MemberReference cls remove checked IfStatement BinaryOperation && MemberReference val MethodInvocation ! MethodInvocation getOkButton BlockStatement StatementExpression MethodInvocation MethodInvocation Literal true setEnabled getOkButton IfStatement BinaryOperation && BinaryOperation && MemberReference ! val MethodInvocation MethodInvocation getOkButton BinaryOperation == MethodInvocation MethodInvocation size Literal 0 BlockStatement StatementExpression MethodInvocation MethodInvocation Literal false setEnabled getOkButton	1
MethodDeclaration Modifier private BasicType boolean isBetween FormalParameter Modifier final BasicType int val FormalParameter Modifier final ReferenceType FigMessage message1 FormalParameter Modifier final ReferenceType FigMessage message2 IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MemberReference message1 Literal null BinaryOperation >= MemberReference val MethodInvocation message1 MemberReference y getFirstPoint BinaryOperation || BinaryOperation == MemberReference message2 Literal null BinaryOperation <= MemberReference val MethodInvocation message2 MemberReference y getFirstPoint BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter BasicType char chars FormalParameter BasicType int start FormalParameter BasicType int length TransformerException StatementExpression MethodInvocation rtfEmitter MemberReference chars MemberReference start MemberReference length	0
MethodDeclaration Modifier public ReferenceType Object getOperation FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator feature MemberReference obsoleteFeatures BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference feature isAOperation getFacade MethodInvocation name MethodInvocation Model MethodInvocation MemberReference feature getName getFacade equals BlockStatement ReturnStatement MemberReference feature ReturnStatement Literal null	0
MethodDeclaration Modifier protected ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation getCommonBehaviorFactory	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Include FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Element	0
MethodDeclaration Modifier private StatementExpression MethodInvocation Literal false setVisible StatementExpression MethodInvocation dispose	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade	0
MethodDeclaration Modifier public static FormalParameter BasicType int v StatementExpression Assignment MemberReference vGap MemberReference v =	0
MethodDeclaration Modifier public ReferenceType InputSource resolveEntity FormalParameter ReferenceType String publicId FormalParameter ReferenceType String systemId SAXException TryStatement LocalVariableDeclaration ReferenceType URL VariableDeclarator testIt ClassCreator ReferenceType URL MemberReference systemId LocalVariableDeclaration ReferenceType InputSource VariableDeclarator s ClassCreator ReferenceType InputSource MethodInvocation testIt openStream ReturnStatement MemberReference s CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "NOTE: Could not open DTD " MemberReference systemId Literal " due to exception" info LocalVariableDeclaration ReferenceType String VariableDeclarator dtdName MethodInvocation systemId BinaryOperation + MethodInvocation systemId Literal '/' lastIndexOf Literal 1 substring LocalVariableDeclaration ReferenceType String VariableDeclarator dtdPath BinaryOperation + Literal MemberReference dtdName LocalVariableDeclaration ReferenceType InputStream VariableDeclarator is ClassReference MethodInvocation MemberReference dtdPath getResourceAsStream ReferenceType IfStatement BinaryOperation == MemberReference is Literal null BlockStatement TryStatement StatementExpression Assignment MemberReference is ClassCreator ReferenceType FileInputStream MethodInvocation dtdPath Literal 1 substring = CatchClause CatchClauseParameter Exception ex ThrowStatement ClassCreator ReferenceType SAXException MemberReference e ReturnStatement ClassCreator ReferenceType InputSource MemberReference is	1
MethodDeclaration FormalParameter ReferenceType Operation source FormalParameter ReferenceType Operation target StatementExpression MethodInvocation target MethodInvocation source isAbstract setAbstract StatementExpression MethodInvocation target MethodInvocation source isLeaf StatementExpression MethodInvocation target MethodInvocation source isRoot setRoot StatementExpression MethodInvocation target MethodInvocation source setConcurrency StatementExpression MethodInvocation target MethodInvocation source StatementExpression MethodInvocation MemberReference source MemberReference target	0
MethodDeclaration Modifier public BasicType int getRowCount ReturnStatement MethodInvocation MethodInvocation MethodInvocation size getInstance	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier public ReferenceType getUmlFactory IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This = ReturnStatement MemberReference	0
MethodDeclaration Modifier public setRecurrence FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr StatementExpression MethodInvocation impl MemberReference handle MemberReference expr setRecurrence	0
MethodDeclaration Modifier private ReferenceType LocalVariableDeclaration ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage VariableDeclarator MethodInvocation modelImpl getUmlPackage IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal null TryStatement ReturnStatement MethodInvocation getModelManagement CatchClause CatchClauseParameter InvalidObjectException e ReturnStatement Literal null	0
MethodDeclaration Modifier private static FormalParameter ReferenceType JMenu LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation ClassCreator ReferenceType ReorderAction MethodInvocation Translator Literal localize MethodInvocation Literal MemberReference ReorderAction add StatementExpression MethodInvocation MemberReference Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation ClassCreator ReferenceType ReorderAction MethodInvocation Translator Literal localize MethodInvocation Literal MemberReference ReorderAction add StatementExpression MethodInvocation MemberReference Literal send setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation ClassCreator ReferenceType ReorderAction MethodInvocation Translator Literal localize MethodInvocation Literal MemberReference ReorderAction add StatementExpression MethodInvocation MemberReference Literal to setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation ClassCreator ReferenceType ReorderAction MethodInvocation Translator Literal localize MethodInvocation Literal MemberReference ReorderAction add StatementExpression MethodInvocation MemberReference Literal send to back" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAClass getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Override BasicType boolean FormalParameter ReferenceType Object base ReturnStatement MethodInvocation Model MethodInvocation MemberReference base getFacade	0
MethodDeclaration Modifier private FormalParameter ReferenceType ns LocalVariableDeclaration ReferenceType String VariableDeclarator parent MethodInvocation MemberReference Identifier MemberReference length buildToParent ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassNode VariableDeclarator MemberReference ns Classes BlockStatement IfStatement BinaryOperation == MemberReference Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference Modifiers MemberReference ArraySelector BinaryOperation - MemberReference length Literal 1 Identifier MemberReference parent addClass IfStatement BinaryOperation == MemberReference Literal 1 BlockStatement StatementExpression MethodInvocation MemberReference MemberReference parent StatementExpression MethodInvocation MemberReference MemberReference parent addProperties StatementExpression MethodInvocation MemberReference MemberReference parent StatementExpression MethodInvocation MemberReference MemberReference ns buildGeneralization ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MemberReference ns Interfaces BlockStatement IfStatement BinaryOperation == MemberReference Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference Modifiers MemberReference ArraySelector BinaryOperation - MemberReference length Literal 1 Identifier MemberReference parent addInterface IfStatement BinaryOperation == MemberReference Literal 1 BlockStatement StatementExpression MethodInvocation MemberReference MemberReference parent	0
MethodDeclaration Modifier private ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Collection TypeArgument ReferenceType String buildTypeMap FormalParameter ReferenceType ModelPackage extent LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator names ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Collection TypeArgument ReferenceType String ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator metaclass MethodInvocation extent MethodInvocation refAllOfClass getMofClass BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator element Cast ReferenceType ModelElement MemberReference metaclass LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation element getName IfStatement MethodInvocation names MemberReference name containsKey BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Found duplicate class '" MemberReference name Literal "' in metamodel" error BlockStatement StatementExpression MethodInvocation names MemberReference name MethodInvocation MemberReference extent MemberReference element getSubtypes put ReturnStatement MemberReference names	1
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator vec ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation vec MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade addAll ReturnStatement MemberReference vec	0
MethodDeclaration BasicType int LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 LocalVariableDeclaration ReferenceType Point VariableDeclarator points MethodInvocation MethodInvocation getPoints getFig IfStatement BinaryOperation > MemberReference points length Literal 0 BlockStatement StatementExpression Assignment MemberReference MemberReference ArraySelector Literal 0 MemberReference y points = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getInterface getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public StatementExpression MethodInvocation MemberReference target setTarget	0
MethodDeclaration Modifier public Annotation Override BasicType int getLineWidth ReturnStatement MethodInvocation head getLineWidth	0
MethodDeclaration Modifier public ReferenceType ToDoPerspective ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean getConfiguredToolbarAppearance FormalParameter ReferenceType String toolbarName LocalVariableDeclaration ReferenceType ConfigurationKey VariableDeclarator key MethodInvocation Configuration Literal MemberReference toolbarName makeKey LocalVariableDeclaration ReferenceType String VariableDeclarator visibilityAsString MethodInvocation Configuration MemberReference key getString ReturnStatement TernaryExpression MethodInvocation visibilityAsString Literal "false" equals Literal false Literal true	1
MethodDeclaration Modifier public setProject FormalParameter ReferenceType Project p StatementExpression Assignment MemberReference project MemberReference p =	0
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType This	0
MethodDeclaration Modifier public handleResetToDefault StatementExpression MethodInvocation userFullname MethodInvocation Configuration MemberReference Argo getString setText StatementExpression MethodInvocation userEmail MethodInvocation Configuration MemberReference Argo getString setText	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getNamespace getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public Annotation Override mousePressed FormalParameter ReferenceType MouseEvent me IfStatement MethodInvocation me isPopupTrigger BlockStatement StatementExpression MethodInvocation me consume StatementExpression MethodInvocation MemberReference me showPopupMenu	0
MethodDeclaration Modifier public setBody FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr StatementExpression MethodInvocation impl MemberReference handle MemberReference expr setBody	0
MethodDeclaration Modifier public ReferenceType Object execute StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference objectToRemove getExtensionMechanismsHelper ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File file IfStatement MethodInvocation file isDirectory BlockStatement ReturnStatement Literal true IfStatement MethodInvocation file isFile BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation file MethodInvocation toLowerCase getName LocalVariableDeclaration ReferenceType String VariableDeclarator validEndings ArrayInitializer Literal ".xmi" Literal ".xml" Literal ".xmi.zip" Literal ".xml.zip" ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator ending MemberReference validEndings BlockStatement IfStatement MethodInvocation filename MemberReference ending endsWith BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public static ReferenceType Point FormalParameter ReferenceType Rectangle rect FormalParameter BasicType int ReturnStatement MethodInvocation MemberReference rect MemberReference Literal 0 Literal 0	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getPseudostate getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier private IfStatement BinaryOperation && BinaryOperation != MemberReference properties Literal null BinaryOperation != MethodInvocation getOwner Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation getOwner MemberReference properties addModelEventListener getPump	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation cover MemberReference w setLineWidth	0
MethodDeclaration * or the of the classifier role for a given * and object * TODO: this method and use it in the implementation of * to be defined method usage of this method in this */ Modifier private LocalVariableDeclaration ReferenceType VariableDeclarator lexer Literal null LocalVariableDeclaration ReferenceType VariableDeclarator tokens Literal null LocalVariableDeclaration ReferenceType JavaParser VariableDeclarator parser Literal null StatementExpression MethodInvocation calls clear StatementExpression MethodInvocation types clear IfStatement BinaryOperation != MemberReference modeller Literal null BlockStatement StatementExpression MethodInvocation modeller StatementExpression MethodInvocation modeller TryStatement StatementExpression Assignment MemberReference lexer ClassCreator ReferenceType ClassCreator ReferenceType BinaryOperation + BinaryOperation + Literal '{' MethodInvocation MemberReference operation getBody Literal '}' = StatementExpression Assignment MemberReference tokens ClassCreator ReferenceType MemberReference lexer = StatementExpression Assignment MemberReference parser ClassCreator ReferenceType JavaParser MemberReference tokens = StatementExpression MethodInvocation parser MemberReference modeller StatementExpression MethodInvocation parser MemberReference JavaParser CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation LOG Literal "Parser not so no more generation of MemberReference ex warn IfStatement BinaryOperation && BinaryOperation != MemberReference modeller Literal null BinaryOperation != MemberReference parser Literal null BlockStatement TryStatement StatementExpression MethodInvocation parser block CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation LOG Literal "Parsing method body MemberReference ex debug LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator methodCalls MethodInvocation modeller IfStatement BinaryOperation != MemberReference methodCalls Literal null BlockStatement StatementExpression MethodInvocation calls MemberReference methodCalls addAll IfStatement BinaryOperation != MethodInvocation modeller Literal null BlockStatement StatementExpression MethodInvocation types MethodInvocation modeller putAll	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType FragmentValue getResultTreeFragment ReturnStatement MemberReference rtf	0
MethodDeclaration Modifier private RecoverFromError FormalParameter ReferenceType String message FormalParameter BasicType int id FeatureNotSupportedException LocalVariableDeclaration ReferenceType String VariableDeclarator msg BinaryOperation + BinaryOperation + BinaryOperation + Literal "Error: Expected " MemberReference id Literal " found: " MemberReference curtok id IfStatement BinaryOperation != MemberReference message Literal null StatementExpression Assignment MemberReference msg BinaryOperation + MemberReference message MemberReference msg = StatementExpression MethodInvocation MemberReference msg ReportError IfStatement BinaryOperation == MemberReference id Literal 20 BlockStatement StatementExpression Assignment MemberReference success Literal false = ThrowStatement ClassCreator ReferenceType FeatureNotSupportedException Literal not supported" StatementExpression MethodInvocation advance	1
MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value getComponent	0
MethodDeclaration Modifier public BasicType boolean LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation TargetManager MethodInvocation getTarget getInstance IfStatement BinaryOperation && BinaryOperation != MemberReference o Literal null MethodInvocation Model MethodInvocation MemberReference o isAAssociationEnd getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator ascEnds MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference o getAssociation getFacade getConnections getFacade ReturnStatement BinaryOperation > MethodInvocation ascEnds size Literal 2 ReturnStatement Literal false	1
MethodDeclaration Modifier private setTarget FormalParameter ReferenceType Object t IfStatement BinaryOperation instanceof MemberReference t ReferenceType ArgoDiagram BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation field Cast ReferenceType ArgoDiagram MemberReference t setText StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier protected moveIntoComponent FormalParameter ReferenceType Fig newEncloser LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator component MethodInvocation newEncloser getOwner LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator owner MethodInvocation getOwner AssertStatement MethodInvocation Model MethodInvocation MemberReference component isAComponent getFacade AssertStatement MethodInvocation Model MethodInvocation MemberReference owner isAUMLElement getFacade IfStatement MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal "1" startsWith getFacade BlockStatement LocalVariableDeclaration Modifier final ReferenceType Collection VariableDeclarator er1 MethodInvocation Model MethodInvocation MemberReference owner getElementResidences getFacade LocalVariableDeclaration Modifier final ReferenceType Collection VariableDeclarator er2 MethodInvocation Model MethodInvocation MemberReference component getResidentElements getFacade LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false LocalVariableDeclaration Modifier final ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator common ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object MemberReference er1 StatementExpression MethodInvocation common MemberReference er2 ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator elementResidence MemberReference common BlockStatement IfStatement MemberReference ! found BlockStatement StatementExpression Assignment MemberReference found Literal true = BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference elementResidence delete getUmlFactory IfStatement MemberReference ! found BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference owner MemberReference component buildElementResidence getCoreFactory BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace MethodInvocation Model MethodInvocation MemberReference component getNamespace getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator deps MethodInvocation Model MethodInvocation MemberReference owner getClientDependencies getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator cr MemberReference deps BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference cr getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator supps MethodInvocation Model MethodInvocation MemberReference cr getSuppliers getFacade ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator supp MemberReference supps BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator comp MethodInvocation Model MethodInvocation MemberReference cr getSuppliers getFacade IfStatement BinaryOperation == MemberReference supp MemberReference component BlockStatement ReturnStatement TryStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation getMetaTypes MemberReference owner Literal null MemberReference component Literal null Literal null MemberReference namespace getUmlFactory CatchClause CatchClauseParameter IllegalModelElementConnectionException e StatementExpression MethodInvocation LOG Literal "Exception" MemberReference e error	1
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation cover MemberReference col setLineColor	0
MethodDeclaration Modifier public ReferenceType Object getGuarded ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public ReferenceType Property FormalParameter ReferenceType Object type IfStatement BinaryOperation instanceof MemberReference type ReferenceType Type BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "The type of the attribute must" Literal " be instance of Type." LocalVariableDeclaration ReferenceType Property VariableDeclarator property MethodInvocation StatementExpression MethodInvocation property Cast ReferenceType Type MemberReference type ReturnStatement MemberReference property	0
MethodDeclaration Modifier private updateMinimumHeight LocalVariableDeclaration BasicType int VariableDeclarator yMax MethodInvocation getY LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType FigEdge VariableDeclarator figsEdges MethodInvocation LocalVariableDeclaration ReferenceType FigMessage VariableDeclarator MethodInvocation IfStatement BinaryOperation && BinaryOperation == MethodInvocation figsEdges size Literal 1 BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference minimumHeight BinaryOperation + BinaryOperation + MethodInvocation headFig MemberReference height getMinimumSize MemberReference offset Literal 10 = BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator fig MemberReference figsEdges BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation instanceof MemberReference fig ReferenceType FigMessage BinaryOperation != Cast ReferenceType FigMessage MemberReference fig Literal null BinaryOperation != Cast ReferenceType FigMessage MemberReference fig Literal null BinaryOperation > Cast ReferenceType FigMessage MemberReference fig MemberReference yMax BlockStatement StatementExpression Assignment MemberReference yMax Cast ReferenceType FigMessage MemberReference fig = StatementExpression Assignment MemberReference minimumHeight BinaryOperation + BinaryOperation - MemberReference yMax MethodInvocation getY Literal 10 =	1
MethodDeclaration Modifier public Annotation Override ReferenceType Selection makeSelection LocalVariableDeclaration ReferenceType Object VariableDeclarator pstate MethodInvocation getOwner LocalVariableDeclaration ReferenceType Selection VariableDeclarator sel Literal null IfStatement BinaryOperation != MemberReference pstate Literal null BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal "1" startsWith getFacade MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference pstate getContainer getFacade getStateMachine getFacade getFacade BlockStatement StatementExpression Assignment MemberReference sel ClassCreator ReferenceType SelectionActionState This = StatementExpression Cast ReferenceType SelectionActionState MemberReference sel BlockStatement StatementExpression Assignment MemberReference sel ClassCreator ReferenceType SelectionState This = StatementExpression Cast ReferenceType SelectionState MemberReference sel ReturnStatement MemberReference sel	0
MethodDeclaration Modifier private FormalParameter ReferenceType String dir StatementExpression MethodInvocation LOG BinaryOperation + Literal "Looking for Profiles in " MemberReference dir info LocalVariableDeclaration ReferenceType File VariableDeclarator extensionDir ClassCreator ReferenceType File MemberReference dir IfStatement MethodInvocation extensionDir isDirectory BlockStatement LocalVariableDeclaration ReferenceType File VariableDeclarator files MethodInvocation extensionDir ClassCreator ReferenceType JarFileFilter listFiles ForStatement EnhancedForControl VariableDeclaration ReferenceType File VariableDeclarator file MemberReference files BlockStatement LocalVariableDeclaration ReferenceType JarFile VariableDeclarator jarfile Literal null TryStatement StatementExpression Assignment MemberReference jarfile ClassCreator ReferenceType JarFile MemberReference file = IfStatement BinaryOperation != MemberReference jarfile Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Looking for Profiles in the Jar " MethodInvocation jarfile getName info LocalVariableDeclaration ReferenceType ClassLoader VariableDeclarator classloader ClassCreator ReferenceType URLClassLoader ArrayCreator ReferenceType URL ArrayInitializer MethodInvocation file MethodInvocation toURL toURI StatementExpression MethodInvocation MethodInvocation jarfile getManifest MemberReference file MemberReference classloader loadProfilesFromJarFile CatchClause CatchClauseParameter IOException ioe StatementExpression MethodInvocation LOG BinaryOperation + Literal "Cannot open Jar file " MemberReference file MemberReference ioe debug	1
MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 IfStatement BinaryOperation == MemberReference o1 Literal null BlockStatement IfStatement BinaryOperation == MemberReference o2 Literal null BlockStatement ReturnStatement Literal 0 ReturnStatement Literal - 1 IfStatement BinaryOperation == MemberReference o2 Literal null BlockStatement ReturnStatement Literal 1 IfStatement MethodInvocation o1 MemberReference o2 equals BlockStatement ReturnStatement Literal 0 IfStatement BinaryOperation instanceof MemberReference o1 ReferenceType String BlockStatement IfStatement BinaryOperation instanceof MemberReference o2 ReferenceType String BlockStatement ReturnStatement MethodInvocation collator Cast ReferenceType String MemberReference o1 Cast ReferenceType String MemberReference o2 compare IfStatement MethodInvocation Model MethodInvocation MemberReference o2 isAUMLElement getFacade BlockStatement ReturnStatement Literal - 1 IfStatement BinaryOperation && BinaryOperation instanceof MemberReference o2 ReferenceType String MethodInvocation Model MethodInvocation MemberReference o1 isAUMLElement getFacade BlockStatement ReturnStatement Literal 1 LocalVariableDeclaration ReferenceType String VariableDeclarator name1 VariableDeclarator name2 TryStatement StatementExpression Assignment MemberReference name1 MethodInvocation Model MethodInvocation MemberReference o1 getName getFacade = StatementExpression Assignment MemberReference name2 MethodInvocation Model MethodInvocation MemberReference o2 getName getFacade = CatchClause CatchClauseParameter IllegalArgumentException e ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Model element or String required" Literal "\n - o1 = " TernaryExpression BinaryOperation == MemberReference o1 Literal null Literal "(null)" MethodInvocation o1 toString Literal "\n - o2 = " TernaryExpression BinaryOperation == MemberReference o2 Literal null Literal "(null)" MethodInvocation o2 toString IfStatement BinaryOperation && BinaryOperation != MemberReference name1 Literal null BinaryOperation != MemberReference name2 Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator comparison MethodInvocation collator MemberReference name1 MemberReference name2 compare IfStatement BinaryOperation != MemberReference comparison Literal 0 BlockStatement ReturnStatement MemberReference comparison ReturnStatement MethodInvocation MemberReference o1 MemberReference o2 comparePaths	1
MethodDeclaration Modifier public static FormalParameter ReferenceType URL url StatementExpression MethodInvocation MethodInvocation url toString	0
MethodDeclaration Modifier protected FormalParameter ReferenceType String theEventName StatementExpression Assignment MemberReference MemberReference theEventName =	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType boolean active IfStatement BinaryOperation instanceof MemberReference handle ReferenceType UmlClass BlockStatement StatementExpression Cast ReferenceType UmlClass MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private BasicType boolean FormalParameter BasicType boolean FormalParameter ReferenceType String IfStatement MemberReference BlockStatement IfStatement BinaryOperation != MethodInvocation Literal "header" indexOf Literal - 1 BlockStatement ReturnStatement BinaryOperation == MemberReference generatorPass MemberReference HEADER_PASS BlockStatement ReturnStatement BinaryOperation == MemberReference generatorPass MemberReference SOURCE_PASS ReturnStatement BinaryOperation == MemberReference generatorPass MemberReference HEADER_PASS	0
MethodDeclaration Modifier public ReferenceType String LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator report ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation members iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType ProjectMember VariableDeclarator member Cast ReferenceType ProjectMember MethodInvocation it next StatementExpression MethodInvocation report MethodInvocation member append ReturnStatement MethodInvocation report toString	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation MethodInvocation MemberReference element contains	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference name setTitle	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object FormalParameter ReferenceType Object IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement IfStatement BinaryOperation instanceof MemberReference ReferenceType Classifier BlockStatement StatementExpression Cast ReferenceType MemberReference ReturnStatement IfStatement BinaryOperation == MemberReference Literal null StatementExpression Cast ReferenceType MemberReference ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference Literal ", value:" MemberReference	1
MethodDeclaration Modifier public static ReferenceType getStateMachinesHelper ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Deprecated setChangeability FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object ck StatementExpression MethodInvocation impl MemberReference handle MemberReference ck setChangeability	1
MethodDeclaration Modifier public ReferenceType List getInEdges FormalParameter ReferenceType Object port IfStatement MethodInvocation Model MethodInvocation MemberReference port isAClassifierRole getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator cr MemberReference port LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation Model MethodInvocation MemberReference cr getAssociationEnds getFacade IfStatement BinaryOperation == MemberReference ends Literal null BlockStatement ReturnStatement MemberReference Collections EMPTY_LIST LocalVariableDeclaration ReferenceType List VariableDeclarator result ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator end MemberReference ends BlockStatement StatementExpression MethodInvocation result MethodInvocation Model MethodInvocation MemberReference end getAssociation getFacade add ReturnStatement MemberReference Collections EMPTY_LIST	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object ns StatementExpression SuperMethodInvocation MemberReference ns StatementExpression MethodInvocation MemberReference ns	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public static ReferenceType URL getURLs FormalParameter ReferenceType String path LocalVariableDeclaration ReferenceType java ReferenceType util ReferenceType List TypeArgument ReferenceType URL VariableDeclarator urlList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType URL LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference path Literal ";" WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation st nextToken TryStatement StatementExpression MethodInvocation urlList ClassCreator MethodInvocation toURI MethodInvocation toURL ReferenceType File MemberReference token add CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation LOG MemberReference e error LocalVariableDeclaration ReferenceType URL VariableDeclarator urls ArrayCreator ReferenceType URL MethodInvocation urlList size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference urls length MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i urls MethodInvocation urlList MemberReference i get = ReturnStatement MemberReference urls	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String name StatementExpression MethodInvocation LOG BinaryOperation + Literal has been but is " Literal "not implemented yet!" warn ReturnStatement Literal false	0
MethodDeclaration Modifier public Annotation Override BasicType boolean canAddEdge FormalParameter ReferenceType Object edge IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ReturnStatement Literal false IfStatement MethodInvocation MemberReference edge containsEdge BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator end0 Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator end1 Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference edge getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator conns MethodInvocation Model MethodInvocation MemberReference edge getConnections getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation conns iterator IfStatement BinaryOperation < MethodInvocation conns size Literal 2 BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEndRole0 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEndRole1 MethodInvocation iter next IfStatement BinaryOperation || BinaryOperation == MemberReference associationEndRole0 Literal null BinaryOperation == MemberReference associationEndRole1 Literal null BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference end0 MethodInvocation Model MethodInvocation MemberReference associationEndRole0 getFacade = StatementExpression Assignment MemberReference end1 MethodInvocation Model MethodInvocation MemberReference associationEndRole1 getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAAssociationRole getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator conns MethodInvocation Model MethodInvocation MemberReference edge getConnections getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation conns iterator IfStatement BinaryOperation < MethodInvocation conns size Literal 2 BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEndRole0 MethodInvocation iter next LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEndRole1 MethodInvocation iter next IfStatement BinaryOperation || BinaryOperation == MemberReference associationEndRole0 Literal null BinaryOperation == MemberReference associationEndRole1 Literal null BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference end0 MethodInvocation Model MethodInvocation MemberReference associationEndRole0 getType getFacade = StatementExpression Assignment MemberReference end1 MethodInvocation Model MethodInvocation MemberReference associationEndRole1 getType getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isAGeneralization getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator gen MemberReference edge StatementExpression Assignment MemberReference end0 MethodInvocation Model MethodInvocation MemberReference gen getGeneral getFacade = StatementExpression Assignment MemberReference end1 MethodInvocation Model MethodInvocation MemberReference gen getSpecific getFacade = IfStatement MethodInvocation Model MethodInvocation MemberReference edge isADependency getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator clients MethodInvocation Model MethodInvocation MemberReference edge getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator suppliers MethodInvocation Model MethodInvocation MemberReference edge getSuppliers getFacade IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference clients Literal null MethodInvocation clients isEmpty BinaryOperation == MemberReference suppliers Literal null MethodInvocation suppliers isEmpty BlockStatement ReturnStatement Literal false StatementExpression Assignment MemberReference end0 MethodInvocation clients MethodInvocation next iterator = StatementExpression Assignment MemberReference end1 MethodInvocation suppliers MethodInvocation next iterator = IfStatement BinaryOperation instanceof MemberReference edge ReferenceType CommentEdge BlockStatement StatementExpression Assignment MemberReference end0 Cast ReferenceType CommentEdge MemberReference edge = StatementExpression Assignment MemberReference end1 Cast ReferenceType CommentEdge MemberReference edge = BlockStatement ReturnStatement Literal false IfStatement BinaryOperation || BinaryOperation == MemberReference end0 Literal null BinaryOperation == MemberReference end1 Literal null BlockStatement StatementExpression MethodInvocation LOG Literal "Edge rejected. Its ends are not attached to anything" error ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation ! MemberReference end0 containsNode MethodInvocation ! MemberReference end0 containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Edge rejected. Its source end is attached to " MemberReference end0 Literal " but this is not in the graph model" error ReturnStatement Literal false IfStatement BinaryOperation && MethodInvocation ! MemberReference end1 containsNode MethodInvocation ! MemberReference end1 containsEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Edge rejected. Its destination end is attached to " MemberReference end1 Literal " but this is not in the graph model" error ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public StatementExpression SuperMethodInvocation StatementExpression MethodInvocation setText	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection stereotypes StatementExpression SuperMethodInvocation MemberReference modelElement MemberReference stereotypes StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dm getKind getFacade IfStatement MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getPseudostateKind getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference dm getFacade LocalVariableDeclaration BasicType int VariableDeclarator TernaryExpression BinaryOperation == MemberReference Literal null Literal 0 MethodInvocation size IfStatement BinaryOperation > MemberReference Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator associationClass MethodInvocation createAssociationClass LocalVariableDeclaration ReferenceType Property VariableDeclarator MethodInvocation LocalVariableDeclaration ReferenceType Property VariableDeclarator MethodInvocation StatementExpression MethodInvocation Cast ReferenceType Type MemberReference end2 StatementExpression MethodInvocation Cast ReferenceType Type MemberReference end1 StatementExpression MethodInvocation MemberReference associationClass StatementExpression MethodInvocation MemberReference associationClass StatementExpression Cast ReferenceType Type MemberReference end1 IfStatement BinaryOperation == MethodInvocation Cast ReferenceType Type MemberReference end1 getOwnedAttributes Literal null BlockStatement StatementExpression MethodInvocation associationClass MethodInvocation MemberReference add getOwnedAttributes BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference add Cast ReferenceType Type MemberReference end1 getOwnedAttributes IfStatement BinaryOperation == MethodInvocation Cast ReferenceType Type MemberReference end2 getOwnedAttributes Literal null BlockStatement StatementExpression MethodInvocation associationClass MethodInvocation MemberReference add getOwnedAttributes BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference add Cast ReferenceType Type MemberReference end2 getOwnedAttributes StatementExpression MethodInvocation MethodInvocation MemberReference associationClass add	0
MethodDeclaration Modifier public FormalParameter ReferenceType ComponentEvent e StatementExpression MethodInvocation Literal null	0
MethodDeclaration Modifier private fireNotationEvent FormalParameter ReferenceType ConfigurationKey key FormalParameter BasicType int oldValue FormalParameter BasicType int newValue StatementExpression MethodInvocation MemberReference key MethodInvocation Integer MemberReference oldValue toString MethodInvocation Integer MemberReference newValue toString fireNotationEvent	0
MethodDeclaration Modifier protected ReferenceType String getProperty LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade IfStatement BinaryOperation <= MemberReference Literal 0 BlockStatement ReturnStatement Literal "*" BlockStatement ReturnStatement MethodInvocation String MemberReference valueOf	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MethodInvocation historyManager	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType LiteralBoolean	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e getNewTarget Literal false setTarget StatementExpression MethodInvocation MemberReference e	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public Annotation Override ReferenceType URL toURL FormalParameter ReferenceType String systemId IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "attempting to resolve '" MemberReference systemId Literal "'" debug LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator suffix MethodInvocation MemberReference systemId LocalVariableDeclaration ReferenceType String VariableDeclarator exts Literal LocalVariableDeclaration ReferenceType String VariableDeclarator suffixWithExt MethodInvocation suffix MemberReference exts Literal "" replaceAll LocalVariableDeclaration ReferenceType URL VariableDeclarator modelUrl MethodInvocation MemberReference suffixWithExt get IfStatement BinaryOperation == MemberReference modelUrl Literal null BlockStatement IfStatement MethodInvocation public2SystemIds MemberReference systemId containsKey BlockStatement StatementExpression Assignment MemberReference modelUrl MethodInvocation MethodInvocation public2SystemIds MemberReference systemId get getValidURL = IfStatement BinaryOperation == MemberReference modelUrl Literal null BlockStatement StatementExpression Assignment MemberReference modelUrl MethodInvocation MethodInvocation MemberReference systemId getValidURL = IfStatement BinaryOperation == MemberReference modelUrl Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator modelUrlAsString MethodInvocation MemberReference suffix IfStatement BinaryOperation || BinaryOperation == MemberReference modelUrlAsString Literal null Literal MethodInvocation MemberReference modelUrlAsString equals "" BlockStatement StatementExpression Assignment MemberReference modelUrl MethodInvocation MemberReference modelUrlAsString getValidURL = IfStatement BinaryOperation == MemberReference modelUrl Literal null BlockStatement StatementExpression Assignment MemberReference modelUrl MethodInvocation MemberReference systemId findModelUrlOnClasspath = IfStatement BinaryOperation == MemberReference modelUrl Literal null BlockStatement StatementExpression Assignment MemberReference modelUrl SuperMethodInvocation MemberReference systemId toURL = IfStatement BinaryOperation != MemberReference modelUrl Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Referenced model '" MemberReference modelUrl Literal "'" info StatementExpression MethodInvocation MemberReference suffixWithExt MemberReference modelUrl put StatementExpression MethodInvocation pendingProfiles MemberReference systemId MemberReference modelUrl put LocalVariableDeclaration ReferenceType String VariableDeclarator relativeUri MemberReference systemId TryStatement IfStatement BinaryOperation != MemberReference baseUri Literal null BlockStatement StatementExpression Assignment MemberReference relativeUri MethodInvocation baseUri MethodInvocation toString MethodInvocation modelUrl toURI = IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal " system ID " MemberReference systemId Literal " modelUrl " MemberReference modelUrl Literal "\n as " MemberReference relativeUri debug BlockStatement StatementExpression Assignment MemberReference relativeUri MemberReference systemId = CatchClause CatchClauseParameter URISyntaxException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error system ID " MemberReference systemId MemberReference e error StatementExpression Assignment MemberReference relativeUri MemberReference systemId = StatementExpression MethodInvocation reverseUrlMap MethodInvocation modelUrl toString MemberReference relativeUri put StatementExpression MethodInvocation reverseUrlMap MemberReference systemId MemberReference relativeUri put BlockStatement ReturnStatement MemberReference modelUrl	1
MethodDeclaration Modifier public static ReferenceType getSingleton ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean StatementExpression SuperMethodInvocation Literal false setFilled	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation setTarget	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Classifier FormalParameter ReferenceType Object role IfStatement BinaryOperation == MemberReference role Literal null BlockStatement ReturnStatement MethodInvocation Collections emptySet IfStatement BinaryOperation instanceof MemberReference role ReferenceType ClassifierRole BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Classifier VariableDeclarator roles ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Classifier TryStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType AssociationEnd VariableDeclarator associationEnds MethodInvocation Model MethodInvocation MemberReference role getAssociationEnds getFacade IfStatement MethodInvocation ! associationEnds isEmpty BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end MemberReference associationEnds BlockStatement IfStatement BinaryOperation instanceof MemberReference end ReferenceType AssociationEndRole BlockStatement LocalVariableDeclaration ReferenceType UmlAssociation VariableDeclarator assoc MethodInvocation end getAssociation ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end2 MethodInvocation assoc getConnection BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator classifier MethodInvocation end2 getParticipant IfStatement BinaryOperation && BinaryOperation != MemberReference classifier MemberReference role BinaryOperation instanceof MemberReference classifier ReferenceType ClassifierRole BlockStatement StatementExpression MethodInvocation roles MemberReference classifier add CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference roles	1
MethodDeclaration Modifier public Annotation Override ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MethodInvocation BinaryOperation | BinaryOperation | MemberReference ABSTRACT MemberReference LEAF MemberReference ROOT buildModifierPopUp add ReturnStatement MemberReference popUpActions	1
MethodDeclaration Modifier protected BasicType int getInitialX ReturnStatement Literal 0	0
MethodDeclaration Modifier protected buildModelList IfStatement MethodInvocation ! isEmpty BlockStatement StatementExpression MethodInvocation removeAllElements	0
MethodDeclaration Modifier public ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object IfStatement BinaryOperation == MemberReference resource Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator map ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType EObject VariableDeclarator it MethodInvocation resource getAllContents WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType EObject VariableDeclarator o MethodInvocation it next StatementExpression MethodInvocation map MethodInvocation resource MemberReference o MemberReference o put ReturnStatement MemberReference map	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNode FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent getNamespace getFacade ReturnStatement MethodInvocation Model MethodInvocation Literal "" MemberReference ns getCoreFactory	0
MethodDeclaration Modifier private ReferenceType PPNode parsePreprocessorDirective FeatureNotSupportedException LocalVariableDeclaration ReferenceType PPNode VariableDeclarator result Literal null LocalVariableDeclaration BasicType int VariableDeclarator startLine MemberReference lineCount StatementExpression Assignment MemberReference inPPDirective Literal true = StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType IdentifierExpression VariableDeclarator ie MethodInvocation parseIdentifierOrKeyword LocalVariableDeclaration ReferenceType String VariableDeclarator ppKind MemberReference ie ArraySelector Literal 0 Identifier LocalVariableDeclaration BasicType byte VariableDeclarator id MemberReference PreprocessorID Empty IfStatement MethodInvocation preprocessor MemberReference ppKind containsKey BlockStatement StatementExpression Assignment MemberReference id MethodInvocation preprocessor MemberReference ppKind get = BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + Literal must be valid rather than \"" MemberReference ppKind Literal "\"." ReportError SwitchStatement MemberReference id SwitchStatementCase MemberReference PreprocessorID Define LocalVariableDeclaration ReferenceType IdentifierExpression VariableDeclarator def MethodInvocation parseIdentifierOrKeyword IfStatement MethodInvocation ! ppDefs MemberReference def ArraySelector Literal 0 Identifier containsKey BlockStatement StatementExpression MethodInvocation ppDefs MemberReference def ArraySelector Literal 0 Identifier MemberReference PreprocessorID Empty put StatementExpression Assignment MemberReference result ClassCreator ReferenceType PPDefineNode MemberReference def = BreakStatement SwitchStatementCase MemberReference PreprocessorID LocalVariableDeclaration ReferenceType IdentifierExpression VariableDeclarator undef MethodInvocation parseIdentifierOrKeyword IfStatement MethodInvocation ppDefs MemberReference undef ArraySelector Literal 0 Identifier containsKey BlockStatement StatementExpression MethodInvocation ppDefs MemberReference undef ArraySelector Literal 0 Identifier remove StatementExpression Assignment MemberReference result ClassCreator ReferenceType PPDefineNode MemberReference undef = BreakStatement SwitchStatementCase MemberReference PreprocessorID If IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID LParen BlockStatement StatementExpression MethodInvocation advance LocalVariableDeclaration BasicType int VariableDeclarator startCount MemberReference lineCount StatementExpression Assignment MemberReference ppCondition Literal false = LocalVariableDeclaration ReferenceType IdentifierExpression VariableDeclarator ifexpr MethodInvocation parseIdentifierOrKeyword IfStatement MethodInvocation ppDefs MemberReference ifexpr ArraySelector Literal 0 Identifier containsKey BlockStatement StatementExpression Assignment MemberReference ppCondition Literal true = IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID RParen BlockStatement StatementExpression MethodInvocation advance IfStatement BinaryOperation == MemberReference ppCondition Literal false BlockStatement StatementExpression MethodInvocation SkipToElseOrEndIf BreakStatement SwitchStatementCase MemberReference PreprocessorID StatementExpression MethodInvocation MemberReference startLine SkipToEOL BreakStatement SwitchStatementCase MemberReference PreprocessorID Else IfStatement BinaryOperation == MemberReference ppCondition Literal true BlockStatement StatementExpression MethodInvocation SkipToElseOrEndIf BreakStatement SwitchStatementCase MemberReference PreprocessorID StatementExpression Assignment MemberReference result ClassCreator ReferenceType = StatementExpression Assignment MemberReference ppCondition Literal false = BreakStatement SwitchStatementCase MemberReference PreprocessorID Line StatementExpression MethodInvocation MemberReference startLine SkipToEOL BreakStatement SwitchStatementCase MemberReference PreprocessorID Error StatementExpression MethodInvocation MemberReference startLine SkipToEOL BreakStatement SwitchStatementCase MemberReference PreprocessorID StatementExpression MethodInvocation MemberReference startLine SkipToEOL BreakStatement SwitchStatementCase MemberReference PreprocessorID Region StatementExpression MethodInvocation MemberReference startLine SkipToEOL BreakStatement SwitchStatementCase MemberReference PreprocessorID StatementExpression MethodInvocation MemberReference startLine SkipToEOL BreakStatement SwitchStatementCase MemberReference PreprocessorID Pragma StatementExpression MethodInvocation MemberReference startLine SkipToEOL BreakStatement SwitchStatementCase BreakStatement StatementExpression Assignment MemberReference inPPDirective Literal false = ReturnStatement MemberReference result	1
MethodDeclaration Modifier private FormalParameter ReferenceType Object expression LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget AssertStatement BinaryOperation || BinaryOperation == MemberReference expression Literal null MethodInvocation Model MethodInvocation MemberReference expression getFacade StatementExpression MethodInvocation Model MethodInvocation MemberReference target Literal null setInitialValue getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference expression setInitialValue getCoreHelper	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType VariableDeclarator dialog ClassCreator ReferenceType StatementExpression MethodInvocation dialog Literal true setVisible	0
MethodDeclaration Modifier private parseStruct FeatureNotSupportedException LocalVariableDeclaration ReferenceType StructNode VariableDeclarator node ClassCreator ReferenceType StructNode StatementExpression MethodInvocation typeStack MemberReference node push StatementExpression MethodInvocation namespaceStack MemberReference Structs MethodInvocation MemberReference node add peek LocalVariableDeclaration BasicType long VariableDeclarator structMask Cast BasicType long MemberReference Modifier IfStatement BinaryOperation != BinaryOperation & Cast BasicType long MemberReference curmods MemberReference structMask Cast BasicType long MemberReference Modifier Empty StatementExpression MethodInvocation Literal contains illegal modifiers" ReportError IfStatement BinaryOperation > MethodInvocation curAttributes size Literal 0 BlockStatement StatementExpression Assignment MemberReference node attributes MemberReference curAttributes = StatementExpression Assignment MemberReference curAttributes ClassCreator ReferenceType NodeCollection TypeArgument ReferenceType AttributeNode = StatementExpression Assignment MemberReference node Modifiers MemberReference curmods = StatementExpression Assignment MemberReference curmods MemberReference Modifier Empty = StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference node Name MethodInvocation parseQualifiedIdentifier = IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Colon BlockStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation node.BaseClasses MethodInvocation parseType add WhileStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Comma BlockStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation node.BaseClasses MethodInvocation parseType add StatementExpression MethodInvocation MemberReference TokenID LCurly AssertAndAdvance WhileStatement BinaryOperation != MemberReference curtok id MemberReference TokenID RCurly BlockStatement StatementExpression MethodInvocation parseClassMember StatementExpression MethodInvocation MemberReference TokenID RCurly AssertAndAdvance StatementExpression MethodInvocation typeStack pop	1
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation || Literal MethodInvocation MethodInvocation evt getPropertyName equals "taggedValue" Literal MethodInvocation MethodInvocation evt getPropertyName equals "referenceTag" BlockStatement StatementExpression MethodInvocation ClassCreator ReferenceType TableModelEvent This fireTableChanged IfStatement BinaryOperation && BinaryOperation instanceof MemberReference evt ReferenceType DeleteInstanceEvent BinaryOperation == MethodInvocation evt getSource MemberReference target BlockStatement StatementExpression MethodInvocation Literal null setTarget	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object objects IfStatement MethodInvocation ! MemberReference label MemberReference objects isValid BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The label is not compatible with the of objects" StatementExpression Assignment This MemberReference objects MemberReference objects = StatementExpression MethodInvocation modelImpl MethodInvocation ClassCreator ReferenceType MemberReference Literal false Literal false getModelEventPump	1
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType Object me IfStatement MethodInvocation ! Model MethodInvocation MemberReference me isAUMLElement getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator d MemberReference diagrams BlockStatement StatementExpression Assignment MemberReference MethodInvocation d MethodInvocation MemberReference me getLayer += ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object target StatementExpression Assignment MemberReference target TernaryExpression BinaryOperation instanceof MemberReference target ReferenceType Fig Cast ReferenceType Fig MemberReference target MemberReference target = ReturnStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference target isAClass getFacade MethodInvocation Model MethodInvocation MemberReference target isAFeature getFacade	1
MethodDeclaration Modifier private addTargetListener FormalParameter ReferenceType TargetListener listener StatementExpression MethodInvocation listenerList ClassReference ReferenceType TargetListener MemberReference listener add	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object role TryStatement IfStatement BinaryOperation instanceof MemberReference role ReferenceType ClassifierRole BlockStatement ReturnStatement MethodInvocation Cast ReferenceType ClassifierRole MemberReference role IfStatement BinaryOperation instanceof MemberReference role ReferenceType BlockStatement ReturnStatement MethodInvocation Cast ReferenceType MemberReference role BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Illegal type " MemberReference role CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType VariableDeclarator jFontChooser ClassCreator ReferenceType MethodInvocation ArgoFrame getFrame MemberReference MemberReference MemberReference StatementExpression MethodInvocation jFontChooser Literal true setVisible IfStatement MethodInvocation jFontChooser isOk BlockStatement StatementExpression Assignment MemberReference MethodInvocation jFontChooser = StatementExpression Assignment MemberReference MethodInvocation jFontChooser =	0
MethodDeclaration Modifier public ReferenceType Object connect FormalParameter ReferenceType Object fromPort FormalParameter ReferenceType Object toPort FormalParameter ReferenceType Object edgeType LocalVariableDeclaration ReferenceType Editor VariableDeclarator curEditor MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType ModeManager VariableDeclarator modeManager MethodInvocation curEditor LocalVariableDeclaration ReferenceType Mode VariableDeclarator mode MethodInvocation modeManager top LocalVariableDeclaration ReferenceType Dictionary VariableDeclarator args MethodInvocation mode LocalVariableDeclaration ReferenceType Object VariableDeclarator style MethodInvocation args Literal "aggregation" get LocalVariableDeclaration ReferenceType Boolean VariableDeclarator unidirectional Cast ReferenceType Boolean MethodInvocation args Literal get LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation MethodInvocation getModel getProject LocalVariableDeclaration ReferenceType Object VariableDeclarator connection MethodInvocation MemberReference edgeType MemberReference fromPort MemberReference style MemberReference toPort Literal null MemberReference unidirectional MemberReference model IfStatement BinaryOperation == MemberReference connection Literal null BlockStatement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Cannot make a " MemberReference edgeType Literal " between a " MethodInvocation fromPort MethodInvocation getName getClass Literal " and a " MethodInvocation toPort MethodInvocation getName getClass debug ReturnStatement Literal null StatementExpression MethodInvocation MemberReference connection addEdge IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Connection type" MemberReference edgeType Literal " between a " MethodInvocation fromPort MethodInvocation getName getClass Literal " and a " MethodInvocation toPort MethodInvocation getName getClass debug ReturnStatement MemberReference connection	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public ReferenceType Fig getPortFig FormalParameter ReferenceType Object port ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType MouseEvent me StatementExpression MethodInvocation me consume	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator vec ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator trigger MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade IfStatement BinaryOperation != MemberReference trigger Literal null BlockStatement StatementExpression MethodInvocation vec MemberReference trigger add ReturnStatement MemberReference vec	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration ReferenceType Dimension VariableDeclarator internalDim MethodInvocation MethodInvocation getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator includeDim MethodInvocation include getMinimumSize LocalVariableDeclaration BasicType int VariableDeclarator h BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference MemberReference nameDim height MemberReference MemberReference includeDim height MemberReference MemberReference internalDim height MemberReference LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MethodInvocation Math MemberReference nameDim width MemberReference internalDim width max BinaryOperation * Literal 2 MemberReference LocalVariableDeclaration BasicType int VariableDeclarator w MethodInvocation Math MemberReference BinaryOperation + MemberReference includeDim width Literal 50 max ReturnStatement ClassCreator ReferenceType Dimension MemberReference w MemberReference h	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color col StatementExpression MethodInvocation head MemberReference col setLineColor	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation cover isFilled	0
MethodDeclaration Modifier public static FormalParameter ReferenceType pcl StatementExpression MethodInvocation config MemberReference pcl	0
MethodDeclaration Modifier static protected BasicType int getPopupAddOffset ReturnStatement MemberReference popupAddOffset	0
MethodDeclaration Modifier public static ReferenceType NotationSettings getDefaultSettings ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType UmlClass createClass FormalParameter ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage extent LocalVariableDeclaration ReferenceType UmlClass VariableDeclarator myClass MethodInvocation extent MethodInvocation MethodInvocation getCore StatementExpression SuperMethodInvocation MemberReference myClass ReturnStatement MemberReference myClass	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType UMLCheckBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLCheckBox2 VariableDeclarator source Cast ReferenceType UMLCheckBox2 MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation source getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target isAClass getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference target StatementExpression MethodInvocation Model MethodInvocation MemberReference m MethodInvocation source isSelected getCoreHelper	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter Modifier final ReferenceType Object element FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types	0
MethodDeclaration Modifier private BasicType boolean ReturnStatement BinaryOperation < MemberReference currentTarget BinaryOperation - MethodInvocation history size Literal 1	0
MethodDeclaration Modifier public StatementExpression MethodInvocation System.err Literal " use big println StatementExpression MethodInvocation System.err Literal " use println	0
MethodDeclaration Modifier public final ctor_body RecognitionException TokenStreamException BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase COLON BlockStatement StatementExpression MethodInvocation ctor_initializer BreakStatement SwitchStatementCase LCURLY BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation compound_statement	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType State BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation instanceof MemberReference ReferenceType BlockStatement StatementExpression Cast ReferenceType State MemberReference handle ReturnStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Transition BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation instanceof MemberReference ReferenceType BlockStatement StatementExpression Cast ReferenceType Transition MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String h StatementExpression Assignment MemberReference MemberReference h =	0
MethodDeclaration Modifier private ReferenceType FigText getBodyText ReturnStatement MemberReference bodyText	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment MemberReference multiSelect MemberReference =	0
MethodDeclaration Modifier private ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation getTargetFollower = ReturnStatement MemberReference	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object newOwner FormalParameter ReferenceType Object oldV StatementExpression MethodInvocation MemberReference oldV MemberReference newOwner updateListeners	1
MethodDeclaration Modifier public BasicType boolean isAConcurrentRegion FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType CompositeState BinaryOperation != MethodInvocation MemberReference handle getContainer Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference handle getContainer isConcurrent CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal false	1
MethodDeclaration Modifier private ReferenceType createGraphModel IfStatement BinaryOperation instanceof MethodInvocation getGraphModel ReferenceType BlockStatement ReturnStatement Cast ReferenceType MethodInvocation getGraphModel BlockStatement ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier private static printUsage StatementExpression MethodInvocation System.err Literal "Usage: [options] println StatementExpression MethodInvocation System.err Literal " println StatementExpression MethodInvocation System.err Literal " display this information" println StatementExpression MethodInvocation LookAndFeelMgr MethodInvocation getInstance StatementExpression MethodInvocation System.err Literal " don't display at startup" println StatementExpression MethodInvocation System.err Literal " don't reload last file" println StatementExpression MethodInvocation System.err Literal " <arg> command to perform on startup" println StatementExpression MethodInvocation System.err Literal " -batch don't start GUI" println StatementExpression MethodInvocation System.err Literal " -locale <arg> set the locale println StatementExpression MethodInvocation System.err Literal "" println StatementExpression MethodInvocation System.err BinaryOperation + Literal "You can also set java settings which " Literal "the behaviour of println StatementExpression MethodInvocation System.err BinaryOperation + Literal " ArgoUML " Literal "more memory for large println StatementExpression MethodInvocation System.err Literal "\n\n" println	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType String VariableDeclarator myName MethodInvocation Model MethodInvocation MemberReference dm getName getFacade IfStatement BinaryOperation || BinaryOperation == MemberReference myName Literal null MethodInvocation myName Literal "" equals BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr MemberReference myName IfStatement BinaryOperation || BinaryOperation == MemberReference nameStr Literal null BinaryOperation == MethodInvocation nameStr length Literal 0 BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation nameStr length ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration BasicType char VariableDeclarator c MethodInvocation nameStr MemberReference i charAt IfStatement MethodInvocation ! Character MemberReference c isLowerCase BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public Annotation Override paint FormalParameter ReferenceType Graphics g StatementExpression SuperMethodInvocation MemberReference g paint LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation Globals MethodInvocation getSelectionManager MethodInvocation MethodInvocation size curEditor IfStatement BinaryOperation == MemberReference Literal 1 BlockStatement LocalVariableDeclaration ReferenceType FigEdge VariableDeclarator edge Cast ReferenceType FigEdge MethodInvocation getContent IfStatement BinaryOperation instanceof MemberReference edge ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference edge ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator strategy MethodInvocation edge BlockStatement StatementExpression MethodInvocation strategy MemberReference g paint	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType DiagramElement createDiagramElement FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Rectangle bounds LocalVariableDeclaration ReferenceType FigNodeModelElement VariableDeclarator figNode Literal null LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation getDiagramSettings IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAActor getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigActor MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAUseCase getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigUseCase MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAComment getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigComment MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement isAPackage getFacade BlockStatement IfStatement BinaryOperation && MethodInvocation ! Model MethodInvocation MemberReference modelElement isAModel getFacade MethodInvocation ! Model MethodInvocation MemberReference modelElement isASubsystem getFacade BlockStatement StatementExpression Assignment MemberReference figNode ClassCreator ReferenceType FigPackage MemberReference modelElement MemberReference bounds MemberReference settings = IfStatement BinaryOperation != MemberReference figNode Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Model element " MemberReference modelElement Literal " converted to " MemberReference figNode debug BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Dropped object NOT added " MemberReference figNode debug ReturnStatement MemberReference figNode	1
MethodDeclaration Modifier static protected FormalParameter ReferenceType Object me FormalParameter ReferenceType String text ParseException LocalVariableDeclaration ReferenceType MyTokenizer VariableDeclarator st LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator path Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator name Literal null LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator stereotype Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator token TryStatement StatementExpression Assignment MemberReference st ClassCreator ReferenceType MyTokenizer MemberReference text Literal = WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference token MethodInvocation st nextToken = IfStatement BinaryOperation || Literal MethodInvocation MemberReference token equals "<<" Literal MethodInvocation MemberReference token equals "«" BlockStatement IfStatement BinaryOperation != MemberReference stereotype Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.model-element-name.twin-stereotypes" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex StatementExpression Assignment MemberReference stereotype ClassCreator ReferenceType StringBuilder = WhileStatement Literal true BlockStatement StatementExpression Assignment MemberReference token MethodInvocation st nextToken = IfStatement BinaryOperation || Literal MethodInvocation MemberReference token equals ">>" Literal MethodInvocation MemberReference token equals "»" BlockStatement BreakStatement StatementExpression MethodInvocation stereotype MemberReference token append IfStatement Literal MethodInvocation MemberReference token equals "::" BlockStatement IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name trim = IfStatement BinaryOperation && BinaryOperation != MemberReference path Literal null BinaryOperation || BinaryOperation == MemberReference name Literal null Literal MethodInvocation MemberReference name equals "" BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.model-element-name.anon-qualifiers" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex IfStatement BinaryOperation == MemberReference path Literal null BlockStatement StatementExpression Assignment MemberReference path ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String = IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation path MemberReference name add StatementExpression Assignment MemberReference name Literal null = BlockStatement IfStatement BinaryOperation != MemberReference name Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.model-element-name.twin-names" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation st getTokenIndex StatementExpression Assignment MemberReference name MemberReference token = CatchClause CatchClauseParameter NoSuchElementException nsee LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.model-element-name.unexpected-name-element" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize MethodInvocation text length CatchClause CatchClauseParameter ParseException pre ThrowStatement MemberReference pre IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name trim = IfStatement BinaryOperation && BinaryOperation != MemberReference path Literal null BinaryOperation || BinaryOperation == MemberReference name Literal null Literal MethodInvocation MemberReference name equals "" BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.model-element-name.must-end-with-name" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name Literal "+" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation trim Literal 1 substring = StatementExpression MethodInvocation Model MethodInvocation MemberReference me MethodInvocation Model MethodInvocation getPublic getVisibilityKind setVisibility getCoreHelper IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name Literal "-" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation trim Literal 1 substring = StatementExpression MethodInvocation Model MethodInvocation MemberReference me MethodInvocation Model MethodInvocation getPrivate getVisibilityKind setVisibility getCoreHelper IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name Literal "#" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation trim Literal 1 substring = StatementExpression MethodInvocation Model MethodInvocation MemberReference me MethodInvocation Model MethodInvocation getProtected getVisibilityKind setVisibility getCoreHelper IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation name Literal "~" startsWith BlockStatement StatementExpression Assignment MemberReference name MethodInvocation name MethodInvocation trim Literal 1 substring = StatementExpression MethodInvocation Model MethodInvocation MemberReference me MethodInvocation Model MethodInvocation getPackage getVisibilityKind setVisibility getCoreHelper IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference me MemberReference name setName getCoreHelper StatementExpression MethodInvocation StereotypeUtility MemberReference me MemberReference stereotype Literal false dealWithStereotypes IfStatement BinaryOperation != MemberReference path Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator nspe MethodInvocation Model MethodInvocation MemberReference path MethodInvocation Model MethodInvocation MemberReference me getRoot getFacade getElement getModelManagementHelper IfStatement BinaryOperation || BinaryOperation == MemberReference nspe Literal null MethodInvocation ! Model getFacade BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.model-element-name.namespace-unresolved" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 IfStatement MethodInvocation ! Model MethodInvocation MemberReference me MemberReference nspe isValidNamespace getCoreHelper BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal "parsing.error.model-element-name.namespace-invalid" ThrowStatement ClassCreator ReferenceType ParseException MethodInvocation Translator MemberReference msg localize Literal 0 StatementExpression MethodInvocation Model MethodInvocation MemberReference nspe MemberReference me addOwnedElement getCoreHelper	1
MethodDeclaration Modifier public addFile FormalParameter ReferenceType File f MalformedURLException StatementExpression MethodInvocation MethodInvocation f MethodInvocation toURL toURI addURL	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType Object source ReturnStatement MethodInvocation Model MethodInvocation MemberReference source getOwner getFacade	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed StatementExpression MethodInvocation Literal false	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String FormalParameter ReferenceType Object element ReturnStatement MethodInvocation MethodInvocation MemberReference equals MemberReference element getUMLClassName	0
MethodDeclaration Modifier public undo StatementExpression MethodInvocation modelCommand undo	0
MethodDeclaration Modifier public ReferenceType Element getArea ReturnStatement MemberReference area	0
MethodDeclaration Modifier public remove LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator contents ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Fig MethodInvocation MethodInvocation getContents getLayer LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation contents size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation contents MemberReference i get StatementExpression MethodInvocation f removeFromDiagram StatementExpression MethodInvocation Literal "remove" Literal null Literal null firePropertyChange StatementExpression SuperMethodInvocation remove	1
MethodDeclaration Modifier public BasicType boolean isActive FormalParameter ReferenceType Object handle ReturnStatement Cast ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType Class MemberReference handle	1
MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType Profile ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Profile MethodInvocation ProfileFacade MethodInvocation getManager	0
MethodDeclaration Modifier public mouseExited FormalParameter ReferenceType MouseEvent e IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation MethodInvocation Cursor MemberReference Cursor DEFAULT_CURSOR getPredefinedCursor setCursor	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateVertex getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier protected ReferenceType Action getActionUniComposition IfStatement BinaryOperation == MemberReference actionUniComposition Literal null BlockStatement StatementExpression Assignment MemberReference actionUniComposition MethodInvocation MethodInvocation Model MethodInvocation getComposite Literal true Literal makeCreateAssociationAction = ReturnStatement MemberReference actionUniComposition	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator link Cast ReferenceType MemberReference handle IfStatement BinaryOperation == MemberReference link Literal null BlockStatement ReturnStatement MethodInvocation Collections emptyList LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType VariableDeclarator allEnds MethodInvocation link getConnection IfStatement BinaryOperation == MemberReference allEnds Literal null BlockStatement ReturnStatement MethodInvocation Collections emptyList StatementExpression Assignment MemberReference allEnds ClassCreator ReferenceType ArrayList TypeArgument ReferenceType MemberReference allEnds = StatementExpression MethodInvocation allEnds MemberReference handle remove ReturnStatement MemberReference allEnds CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	1
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression SuperMethodInvocation MemberReference w setLineWidth	1
MethodDeclaration Modifier private ReferenceType FigText getBodyText ReturnStatement MemberReference bodyText	0
MethodDeclaration Modifier protected Annotation Override setText StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getOwner getName getFacade setText	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle FormalParameter ReferenceType String type ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration ReferenceType Collection TypeArgument ReferenceType T getMatches FormalParameter ReferenceType String key FormalParameter ReferenceType String subkey LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType T VariableDeclarator results ClassCreator ReferenceType ArrayList TypeArgument ReferenceType T LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType T VariableDeclarator entry MethodInvocation registry MemberReference key get IfStatement BinaryOperation != MemberReference entry Literal null BlockStatement IfStatement MethodInvocation entry MemberReference subkey containsKey BlockStatement StatementExpression MethodInvocation results MethodInvocation entry MemberReference subkey get addAll IfStatement MethodInvocation entry Literal "" containsKey BlockStatement StatementExpression MethodInvocation results MethodInvocation entry Literal "" get addAll ReturnStatement MemberReference results	1
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator stereo MethodInvocation getTarget LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation LocalVariableDeclaration ReferenceType Set VariableDeclarator toBeRemoved ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference selected BlockStatement IfStatement MethodInvocation MemberReference o contains BlockStatement StatementExpression MethodInvocation toBeRemoved MemberReference o remove BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference stereo MemberReference o addBaseClass getExtensionMechanismsHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference toBeRemoved BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference stereo MemberReference o getExtensionMechanismsHelper	1
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration BasicType int getRightMargin ReturnStatement BinaryOperation + MemberReference MemberReference	0
MethodDeclaration Modifier public init StatementExpression MethodInvocation ActionAdjustSnap init StatementExpression MethodInvocation init	0
MethodDeclaration Modifier public ReferenceType getMetaTypes ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object getAssociationRole FormalParameter ReferenceType Object FormalParameter ReferenceType Object ReturnStatement MethodInvocation impl MemberReference MemberReference getAssociationRole	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator stereo MethodInvocation getTarget LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MethodInvocation LocalVariableDeclaration ReferenceType Set VariableDeclarator toBeRemoved ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object MemberReference ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference selected BlockStatement IfStatement MethodInvocation MemberReference o contains BlockStatement StatementExpression MethodInvocation toBeRemoved MemberReference o remove BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference stereo MemberReference o addBaseClass getExtensionMechanismsHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference toBeRemoved BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference stereo MemberReference o getExtensionMechanismsHelper	1
MethodDeclaration Modifier public setSources FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection specifications IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Flow BlockStatement StatementExpression MethodInvocation Cast ReferenceType Flow MemberReference handle MemberReference specifications update ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference source ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation instanceof MemberReference target ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException StatementExpression MethodInvocation MemberReference source MemberReference target	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Wizard w IfStatement BinaryOperation instanceof MemberReference w ReferenceType WizMEName BlockStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MethodInvocation w LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation item MethodInvocation Literal 0 get getOffenders LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MemberReference me getName getFacade StatementExpression Assignment MemberReference MethodInvocation MemberReference = LocalVariableDeclaration ReferenceType String VariableDeclarator ins SuperMethodInvocation getInstructions StatementExpression Cast ReferenceType WizMEName MemberReference w StatementExpression Cast ReferenceType WizMEName MemberReference w	0
MethodDeclaration Modifier private FormalParameter ReferenceType StringTokenizer st FormalParameter BasicType int count ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement IfStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression MethodInvocation st nextToken	0
MethodDeclaration Modifier private ReferenceType InputSource FormalParameter ReferenceType String styles FormalParameter ReferenceType InputSource input XmiException LocalVariableDeclaration ReferenceType SAXTransformerFactory VariableDeclarator stf Cast ReferenceType SAXTransformerFactory MethodInvocation TransformerFactory newInstance TryStatement LocalVariableDeclaration ReferenceType SAXParserFactory VariableDeclarator spf MethodInvocation SAXParserFactory newInstance LocalVariableDeclaration ReferenceType SAXParser VariableDeclarator parser MethodInvocation spf newSAXParser LocalVariableDeclaration ReferenceType VariableDeclarator last MethodInvocation parser getXMLReader ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference styles length MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator xsltFileName BinaryOperation + MemberReference STYLE_PATH MemberReference ArraySelector MemberReference i styles LocalVariableDeclaration ReferenceType URL VariableDeclarator xsltUrl MethodInvocation MethodInvocation MemberReference xsltFileName getResource getClass IfStatement BinaryOperation == MemberReference xsltUrl Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IOException BinaryOperation + Literal "Error opening XSLT style : " MemberReference xsltFileName LocalVariableDeclaration ReferenceType StreamSource VariableDeclarator xsltStreamSource ClassCreator ReferenceType StreamSource MethodInvocation xsltUrl openStream StatementExpression MethodInvocation xsltStreamSource MethodInvocation xsltUrl toExternalForm setSystemId LocalVariableDeclaration ReferenceType VariableDeclarator filter MethodInvocation stf MemberReference xsltStreamSource StatementExpression MethodInvocation filter MemberReference last setParent StatementExpression Assignment MemberReference last MemberReference filter = LocalVariableDeclaration ReferenceType SAXSource VariableDeclarator transformSource ClassCreator ReferenceType SAXSource MemberReference last MemberReference input LocalVariableDeclaration ReferenceType File VariableDeclarator tmpFile MethodInvocation File MemberReference TEMP_XMI_FILE_PREFIX Literal ".xmi" createTempFile StatementExpression MethodInvocation tmpFile deleteOnExit LocalVariableDeclaration ReferenceType StreamResult VariableDeclarator result ClassCreator ReferenceType StreamResult ClassCreator ReferenceType FileOutputStream MemberReference tmpFile LocalVariableDeclaration ReferenceType Transformer VariableDeclarator transformer MethodInvocation stf newTransformer StatementExpression MethodInvocation transformer MemberReference transformSource MemberReference result transform ReturnStatement ClassCreator ReferenceType InputSource ClassCreator ReferenceType FileInputStream MemberReference tmpFile CatchClause CatchClauseParameter SAXException e ThrowStatement ClassCreator ReferenceType XmiException MemberReference e CatchClause CatchClauseParameter ParserConfigurationException e ThrowStatement ClassCreator ReferenceType XmiException MemberReference e CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType XmiException MemberReference e CatchClause CatchClauseParameter e ThrowStatement ClassCreator ReferenceType XmiException MemberReference e CatchClause CatchClauseParameter TransformerException e ThrowStatement ClassCreator ReferenceType XmiException MemberReference e	1
MethodDeclaration Modifier public Annotation Override ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions ReturnStatement MemberReference popUpActions	1
MethodDeclaration Modifier public FormalParameter ReferenceType Critic c StatementExpression MethodInvocation critics MemberReference c remove	0
MethodDeclaration Modifier public BasicType boolean canFinish ReturnStatement Literal true	0
MethodDeclaration Modifier private parseOperatorDecl FormalParameter ReferenceType TypeNode type FeatureNotSupportedException LocalVariableDeclaration ReferenceType VariableDeclarator node ClassCreator ReferenceType IfStatement BinaryOperation > MethodInvocation curAttributes size Literal 0 BlockStatement StatementExpression Assignment MemberReference node attributes MemberReference curAttributes = StatementExpression Assignment MemberReference curAttributes ClassCreator ReferenceType NodeCollection TypeArgument ReferenceType AttributeNode = LocalVariableDeclaration BasicType long VariableDeclarator mask Cast BasicType long MemberReference Modifier IfStatement BinaryOperation != BinaryOperation & Cast BasicType long MemberReference curmods MemberReference mask Cast BasicType long MemberReference Modifier Empty StatementExpression MethodInvocation Literal "operator declaration contains illegal modifiers" ReportError StatementExpression Assignment MemberReference node modifiers MemberReference curmods = StatementExpression Assignment MemberReference curmods MemberReference Modifier Empty = IfStatement BinaryOperation && BinaryOperation == MemberReference type Literal null BinaryOperation == MemberReference curtok id MemberReference TokenID Explicit BlockStatement StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference node isExplicit Literal true = StatementExpression MethodInvocation MemberReference TokenID Operator AssertAndAdvance StatementExpression Assignment MemberReference type MethodInvocation parseType = IfStatement BinaryOperation && BinaryOperation == MemberReference type Literal null BinaryOperation == MemberReference curtok id MemberReference TokenID Implicit BlockStatement StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference node isImplicit Literal true = StatementExpression MethodInvocation MemberReference TokenID Operator AssertAndAdvance StatementExpression Assignment MemberReference type MethodInvocation parseType = BlockStatement StatementExpression MethodInvocation MemberReference TokenID Operator AssertAndAdvance StatementExpression Assignment MemberReference node operator MemberReference curtok id = StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType NodeCollection TypeArgument ReferenceType ParamDeclNode VariableDeclarator paramList MethodInvocation parseParamList IfStatement BinaryOperation || BinaryOperation == MethodInvocation paramList size Literal 0 BinaryOperation > MethodInvocation paramList size Literal 2 BlockStatement StatementExpression MethodInvocation Literal "operator declarations must only have one or two parameters." ReportError StatementExpression Assignment MemberReference node MethodInvocation paramList Literal 0 get = IfStatement BinaryOperation == MethodInvocation paramList size Literal 2 BlockStatement StatementExpression Assignment MemberReference node MethodInvocation paramList Literal 1 get = StatementExpression MethodInvocation MemberReference node statements parseBlock	1
MethodDeclaration Modifier public FormalParameter BasicType int index IfStatement BinaryOperation < MemberReference index MethodInvocation getRowCount BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference index MemberReference index setSelectionInterval getSelectionModel	0
MethodDeclaration Modifier private static ReferenceType Profile FormalParameter ReferenceType String SAXException LocalVariableDeclaration ReferenceType Profile VariableDeclarator profile StatementExpression Assignment MemberReference profile MethodInvocation ProfileFacade MethodInvocation MemberReference getManager = IfStatement BinaryOperation == MemberReference profile Literal null BlockStatement StatementExpression Assignment MemberReference profile MethodInvocation ProfileFacade MethodInvocation MemberReference getManager = IfStatement BinaryOperation == MemberReference profile Literal null BlockStatement ThrowStatement ClassCreator ReferenceType SAXException BinaryOperation + BinaryOperation + Literal "Plugin profile \"" MemberReference Literal "\" is not available in Literal null ReturnStatement MemberReference profile	0
MethodDeclaration Modifier public Annotation Override BasicType int FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child IfStatement BinaryOperation && MemberReference flat BinaryOperation == MemberReference parent MethodInvocation getRoot BlockStatement ReturnStatement MethodInvocation MemberReference child indexOf ReturnStatement SuperMethodInvocation MemberReference parent MemberReference child	0
MethodDeclaration Modifier protected ReferenceType Object createEvent FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation Model MethodInvocation MemberReference ns getStateMachinesFactory	0
MethodDeclaration addAnnotation FormalParameter ReferenceType String name StatementExpression MethodInvocation Literal "Java 5 annotations not supported" BinaryOperation + Literal "@" MemberReference name logError	1
MethodDeclaration Modifier protected FormalParameter ReferenceType Point p1 FormalParameter ReferenceType Point p2 FormalParameter BasicType int theOffset FormalParameter ReferenceType Point res LocalVariableDeclaration BasicType int VariableDeclarator recipnumerator BinaryOperation * BinaryOperation - MemberReference p1 x MemberReference p2 x Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator recipdenominator BinaryOperation - MemberReference p1 y MemberReference p2 y IfStatement BinaryOperation && BinaryOperation == MemberReference recipdenominator Literal 0 BinaryOperation == MemberReference recipnumerator Literal 0 BlockStatement ReturnStatement LocalVariableDeclaration BasicType double VariableDeclarator len MethodInvocation Math BinaryOperation + BinaryOperation * MemberReference recipnumerator MemberReference recipnumerator BinaryOperation * MemberReference recipdenominator MemberReference recipdenominator sqrt LocalVariableDeclaration BasicType int VariableDeclarator dx Cast BasicType int BinaryOperation / BinaryOperation * MemberReference recipdenominator MemberReference theOffset MemberReference len LocalVariableDeclaration BasicType int VariableDeclarator dy Cast BasicType int BinaryOperation / BinaryOperation * MemberReference recipnumerator MemberReference theOffset MemberReference len StatementExpression Assignment MemberReference res x MethodInvocation Math MemberReference dx abs += StatementExpression Assignment MemberReference res y MethodInvocation Math MemberReference dy abs -= LocalVariableDeclaration BasicType int VariableDeclarator width BinaryOperation / MethodInvocation getWidth Literal 2 IfStatement BinaryOperation != MemberReference recipnumerator Literal 0 BlockStatement LocalVariableDeclaration BasicType double VariableDeclarator slope BinaryOperation / Cast BasicType double MemberReference recipdenominator Cast BasicType double MemberReference recipnumerator LocalVariableDeclaration BasicType double VariableDeclarator factor MethodInvocation MemberReference slope StatementExpression Assignment MemberReference res x BinaryOperation * MethodInvocation Math MemberReference factor abs MemberReference width += BlockStatement StatementExpression Assignment MemberReference res x MemberReference width +=	1
MethodDeclaration Modifier public layout LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig MethodInvocation getUnderlyingFig LocalVariableDeclaration BasicType int VariableDeclarator centerHigh MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator centerLow MethodInvocation LocalVariableDeclaration BasicType int VariableDeclarator difference BinaryOperation - MemberReference centerHigh MemberReference centerLow IfStatement BinaryOperation < MethodInvocation Math MemberReference difference abs MemberReference EPSILON BlockStatement StatementExpression MethodInvocation fig BinaryOperation + MemberReference centerLow BinaryOperation + BinaryOperation / MemberReference difference Literal 2 BinaryOperation % MemberReference difference Literal 2 Cast BasicType int MethodInvocation low getLocation addPoint StatementExpression MethodInvocation fig BinaryOperation - MemberReference centerHigh BinaryOperation / MemberReference difference Literal 2 BinaryOperation + MethodInvocation high MemberReference y getLocation MethodInvocation high MemberReference height getSize addPoint BlockStatement StatementExpression MethodInvocation fig MemberReference centerLow Cast BasicType int MethodInvocation low getLocation addPoint IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Point: x: " MemberReference centerLow Literal " y: " MethodInvocation low MemberReference y getLocation debug StatementExpression MethodInvocation MethodInvocation BinaryOperation - MemberReference centerHigh MemberReference difference MethodInvocation getDownGap addPoint getUnderlyingFig StatementExpression MethodInvocation MethodInvocation MemberReference centerHigh MethodInvocation getDownGap addPoint getUnderlyingFig IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Point: x: " BinaryOperation - MemberReference centerHigh MemberReference difference Literal " y: " MethodInvocation getDownGap debug StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Point: x: " MemberReference centerHigh Literal " y: " MethodInvocation getDownGap debug StatementExpression MethodInvocation fig MemberReference centerHigh BinaryOperation + MethodInvocation high MemberReference y getLocation MethodInvocation high MemberReference height getSize addPoint IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal x: " MemberReference centerHigh Literal " y: " BinaryOperation + MethodInvocation high MemberReference y getLocation MethodInvocation high MemberReference height getSize debug StatementExpression MethodInvocation fig Literal false setFilled StatementExpression MethodInvocation MethodInvocation MethodInvocation getUnderlyingFig	1
MethodDeclaration Modifier private setVisibility FormalParameter ReferenceType Object element FormalParameter BasicType short modifiers IfStatement BinaryOperation > BinaryOperation & MemberReference modifiers MemberReference Literal 0 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element MethodInvocation Model MethodInvocation getPublic getVisibilityKind setVisibility getCoreHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element MethodInvocation Model MethodInvocation getPackage getVisibilityKind setVisibility getCoreHelper	0
MethodDeclaration Modifier protected ReferenceType Action getActionAggregation IfStatement BinaryOperation == MemberReference actionAggregation Literal null BlockStatement StatementExpression Assignment MemberReference actionAggregation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetAddAssociationMode MethodInvocation Model MethodInvocation Literal false Literal = ReturnStatement MemberReference actionAggregation	0
MethodDeclaration Modifier protected LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation getProject LocalVariableDeclaration ReferenceType VariableDeclarator defaults MethodInvocation project LocalVariableDeclaration ReferenceType Object VariableDeclarator attr MethodInvocation Model MethodInvocation MethodInvocation getCompartmentType MethodInvocation getOwner Literal null MemberReference defaults buildNode getUmlFactory StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference attr setTarget getInstance	0
MethodDeclaration ReferenceType Object getAttribute ReturnStatement MemberReference attr	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Literal "href" getAttribute IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation Literal "href"	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement isSynch getFacade	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference MemberReference	0
MethodDeclaration Modifier public ReferenceType Property ReturnStatement MethodInvocation createProperty	0
MethodDeclaration Modifier public ReferenceType ListSet TypeArgument ReferenceType T transitiveClosure FormalParameter ReferenceType org ReferenceType argouml ReferenceType util ReferenceType cg ReturnStatement MethodInvocation MemberReference cg MemberReference MethodInvocation getInstance transitiveClosure	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation cover getLineColor	0
MethodDeclaration Modifier public ReferenceType Vector TypeArgument ReferenceType OffenderXMLHelper LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator in MethodInvocation item LocalVariableDeclaration ReferenceType Vector TypeArgument ReferenceType OffenderXMLHelper VariableDeclarator out IfStatement BinaryOperation == MemberReference in Literal null BlockStatement ReturnStatement Literal null StatementExpression Assignment MemberReference out ClassCreator ReferenceType Vector TypeArgument ReferenceType OffenderXMLHelper = ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator elem MemberReference in BlockStatement TryStatement LocalVariableDeclaration ReferenceType OffenderXMLHelper VariableDeclarator helper ClassCreator ReferenceType OffenderXMLHelper MemberReference elem StatementExpression MethodInvocation out MemberReference helper addElement CatchClause CatchClauseParameter ClassCastException cce ReturnStatement MemberReference out	1
MethodDeclaration Modifier public Annotation Override ReferenceType Vector TypeArgument ReferenceType Fig getEnclosedFigs ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Color getLineColor ReturnStatement MethodInvocation cover getLineColor	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object connection StatementExpression MethodInvocation impl MemberReference handle MemberReference connection	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType boolean flag StatementExpression MethodInvocation impl MemberReference handle MemberReference flag	0
MethodDeclaration Modifier public setMaximumProgress FormalParameter BasicType int max StatementExpression MethodInvocation progress MemberReference max	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated FormalParameter ReferenceType Object owner IfStatement BinaryOperation != MemberReference owner MethodInvocation getOwner BlockStatement ThrowStatement ClassCreator ReferenceType UnsupportedOperationException Literal "Owner must be set in constructor and left unchanged"	1
MethodDeclaration Modifier public startElement FormalParameter ReferenceType String uri FormalParameter ReferenceType String localname FormalParameter ReferenceType String name FormalParameter ReferenceType Attributes atts SAXException IfStatement MethodInvocation MemberReference name BlockStatement LocalVariableDeclaration ReferenceType XMLElement VariableDeclarator element MethodInvocation MemberReference name MemberReference atts createXmlElement IfStatement MethodInvocation LOG isDebugEnabled BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator buf ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation buf MethodInvocation MemberReference name append MethodInvocation Literal ' ' append MethodInvocation MemberReference element append Literal " append ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation atts getLength MemberReference ++ i BlockStatement StatementExpression MethodInvocation buf MethodInvocation MethodInvocation atts MemberReference i getLocalName append MethodInvocation Literal ' ' append MethodInvocation MethodInvocation atts MemberReference i getValue append Literal " ATT: " append StatementExpression MethodInvocation LOG MethodInvocation buf toString debug StatementExpression Assignment MemberReference ArraySelector MemberReference ++ nElements elements MemberReference element = StatementExpression MethodInvocation MemberReference element handleStartElement	1
MethodDeclaration Modifier public ReferenceType UmlClass buildClass FormalParameter Modifier final ReferenceType Object owner LocalVariableDeclaration ReferenceType VariableDeclarator command ClassCreator ReferenceType FieldDeclaration Modifier private ReferenceType UmlClass VariableDeclarator cl MethodDeclaration Modifier public ReferenceType UmlClass execute IfStatement BinaryOperation == MemberReference owner Literal null BlockStatement StatementExpression Assignment MemberReference cl MethodInvocation createClass = BlockStatement StatementExpression Assignment MemberReference cl MethodInvocation MethodInvocation MemberReference owner createClass = StatementExpression MethodInvocation MemberReference cl initClass ReturnStatement MemberReference cl MethodDeclaration Modifier public undo TryStatement StatementExpression MethodInvocation cl refDelete CatchClause CatchClauseParameter InvalidObjectException e StatementExpression MethodInvocation LOG BinaryOperation + Literal already deleted " MemberReference cl warn MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal false LocalVariableDeclaration ReferenceType UmlClass VariableDeclarator clazz Cast ReferenceType UmlClass MethodInvocation org.argouml.model.Model MemberReference command execute IfStatement BinaryOperation instanceof MemberReference owner ReferenceType Namespace BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference clazz MemberReference owner setNamespace getCoreHelper ReturnStatement MemberReference clazz	1
MethodDeclaration Modifier private FormalParameter ReferenceType panel FormalParameter ReferenceType Object target FormalParameter ReferenceType ControlData prop LocalVariableDeclaration ReferenceType VariableDeclarator document Literal null IfStatement Literal MethodInvocation MethodInvocation prop getPropertyName equals "name" BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference target getFacade BlockStatement StatementExpression Assignment MemberReference target MethodInvocation Model MethodInvocation MemberReference target getParameter getFacade = StatementExpression Assignment MemberReference document ClassCreator ReferenceType MethodInvocation prop getPropertyName MemberReference target = IfStatement Literal MethodInvocation MethodInvocation prop getPropertyName equals BlockStatement StatementExpression Assignment MemberReference document ClassCreator ReferenceType MethodInvocation prop getPropertyName MemberReference target = IfStatement Literal MethodInvocation MethodInvocation prop getPropertyName equals "location" BlockStatement StatementExpression Assignment MemberReference document ClassCreator ReferenceType MethodInvocation prop getPropertyName MemberReference target = IfStatement Literal MethodInvocation MethodInvocation prop getPropertyName equals BlockStatement StatementExpression Assignment MemberReference document ClassCreator ReferenceType MethodInvocation prop getPropertyName MemberReference target = IfStatement BinaryOperation != MemberReference document Literal null BlockStatement LocalVariableDeclaration ReferenceType JTextField VariableDeclarator ClassCreator ReferenceType MemberReference document StatementExpression MethodInvocation MemberReference panel MethodInvocation Translator MethodInvocation prop getLabel localize MemberReference MemberReference target addControl	0
MethodDeclaration Modifier public Annotation Override removeNotify StatementExpression MethodInvocation model This removeChangeListener StatementExpression SuperMethodInvocation removeNotify	1
MethodDeclaration Modifier public save FormalParameter ReferenceType ProjectMember member FormalParameter ReferenceType OutputStream stream SaveException LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator w TryStatement StatementExpression Assignment MemberReference w ClassCreator ReferenceType PrintWriter ClassCreator ReferenceType OutputStreamWriter MemberReference stream Literal "UTF-8" = CatchClause CatchClauseParameter UnsupportedEncodingException e1 ThrowStatement ClassCreator ReferenceType SaveException Literal "UTF-8 encoding not supported on MemberReference e1 StatementExpression MethodInvocation MemberReference member MemberReference w saveProjectMember StatementExpression MethodInvocation w flush	1
MethodDeclaration Modifier public ReferenceType Dimension FormalParameter ReferenceType Container parent SynchronizedStatement MethodInvocation parent getTreeLock LocalVariableDeclaration Modifier final ReferenceType Insets VariableDeclarator insets MethodInvocation parent getInsets LocalVariableDeclaration BasicType int VariableDeclarator minimumHeight BinaryOperation + MemberReference insets top MemberReference insets bottom LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation parent getComponentCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Component VariableDeclarator childComp MethodInvocation parent MemberReference i getComponent IfStatement BinaryOperation instanceof MemberReference childComp ReferenceType JLabel BlockStatement LocalVariableDeclaration Modifier final ReferenceType JLabel VariableDeclarator jlabel Cast ReferenceType JLabel MemberReference childComp StatementExpression Assignment MemberReference childComp MethodInvocation jlabel = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator childHeight MethodInvocation Math MethodInvocation MemberReference childComp getMinimumHeight MethodInvocation MemberReference jlabel getMinimumHeight max StatementExpression Assignment MemberReference minimumHeight BinaryOperation + MemberReference childHeight This MemberReference += ReturnStatement ClassCreator ReferenceType Dimension Literal 0 MemberReference minimumHeight	0
MethodDeclaration Modifier public setText FormalParameter ReferenceType String text StatementExpression MethodInvocation theTextField MemberReference text setText	0
MethodDeclaration Modifier public FormalParameter ReferenceType ToDoListEvent StatementExpression MethodInvocation LOG Literal debug LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator items MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 2 StatementExpression Assignment MemberReference ArraySelector Literal 0 path MethodInvocation Designer MethodInvocation getToDoList = ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MethodInvocation BlockStatement StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference = LocalVariableDeclaration BasicType int VariableDeclarator nMatchingItems Literal 0 SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation != MethodInvocation item getPriority MethodInvocation getPriority BlockStatement ContinueStatement StatementExpression MemberReference ++ nMatchingItems IfStatement BinaryOperation == MemberReference nMatchingItems Literal 0 BlockStatement ContinueStatement LocalVariableDeclaration BasicType int VariableDeclarator ArrayCreator BasicType int MemberReference nMatchingItems LocalVariableDeclaration ReferenceType Object VariableDeclarator children ArrayCreator ReferenceType Object MemberReference nMatchingItems StatementExpression Assignment MemberReference nMatchingItems Literal 0 = SynchronizedStatement MemberReference items ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference items BlockStatement IfStatement BinaryOperation != MethodInvocation item getPriority MethodInvocation getPriority BlockStatement ContinueStatement StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems MethodInvocation MemberReference MemberReference item = StatementExpression Assignment MemberReference ArraySelector MemberReference nMatchingItems children MemberReference item = StatementExpression MemberReference ++ nMatchingItems StatementExpression MethodInvocation This MemberReference path MemberReference MemberReference children	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType Classifier VariableDeclarator classifier Cast ReferenceType Classifier MemberReference cls IfStatement BinaryOperation == MemberReference classifier Literal null BlockStatement ReturnStatement MethodInvocation Collections emptyList LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Dependency VariableDeclarator clientDependency MethodInvocation classifier getClientDependency BlockStatement IfStatement BinaryOperation instanceof MemberReference clientDependency ReferenceType BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference clientDependency ForStatement EnhancedForControl VariableDeclaration ReferenceType Stereotype VariableDeclarator stereo MethodInvocation getStereotype BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference stereo Literal null MethodInvocation CoreFactory.REALIZE_STEREOTYPE MethodInvocation stereo getName equals MethodInvocation stereo MethodInvocation Literal "Abstraction" contains getBaseClass BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation getSupplier BlockStatement IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement StatementExpression MethodInvocation result Cast ReferenceType MemberReference add CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target IfStatement BinaryOperation instanceof MemberReference source ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation instanceof MemberReference target ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException StatementExpression MethodInvocation MemberReference source MemberReference target	0
MethodDeclaration Modifier private static openProject FormalParameter ReferenceType SimpleTimer st FormalParameter ReferenceType splash FormalParameter ReferenceType ProjectBrowser FormalParameter ReferenceType URL urlToOpen IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash Literal 40 updateProgress StatementExpression MethodInvocation st Literal "open project" mark StatementExpression MethodInvocation Designer disableCritiquing StatementExpression MethodInvocation Designer clearCritiquing LocalVariableDeclaration ReferenceType Project VariableDeclarator project Literal null IfStatement BinaryOperation != MemberReference urlToOpen Literal null BlockStatement IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MemberReference projectName StatementExpression MethodInvocation splash MethodInvocation Translator Literal MemberReference msgArgs LocalVariableDeclaration ReferenceType String VariableDeclarator filename MethodInvocation urlToOpen getFile LocalVariableDeclaration ReferenceType File VariableDeclarator file ClassCreator ReferenceType File MemberReference filename StatementExpression MethodInvocation System.err BinaryOperation + Literal "The url of the file to open is " MemberReference urlToOpen println StatementExpression MethodInvocation System.err BinaryOperation + Literal "The filename is " MemberReference filename println StatementExpression MethodInvocation System.err BinaryOperation + Literal "The file is " MemberReference file println StatementExpression MethodInvocation System.err BinaryOperation + Literal = " MethodInvocation file exists println StatementExpression Assignment MemberReference project MethodInvocation MemberReference file Literal true Literal null loadProject2 = BlockStatement IfStatement BinaryOperation != MemberReference splash Literal null BlockStatement StatementExpression MethodInvocation splash MethodInvocation Translator Literal localize IfStatement BinaryOperation == MemberReference project Literal null BlockStatement StatementExpression Assignment MemberReference project MethodInvocation ProjectManager MethodInvocation Literal true makeEmptyProject getManager = StatementExpression MethodInvocation ProjectManager MethodInvocation MemberReference project getManager StatementExpression MethodInvocation project Literal false setDirty StatementExpression MethodInvocation st Literal "set project" mark StatementExpression MethodInvocation Designer enableCritiquing	1
MethodDeclaration Modifier public ReferenceType Element ReturnStatement MethodInvocation document	0
MethodDeclaration Modifier protected IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Owner of [" This MethodInvocation toString Literal "/" This MethodInvocation getClass Literal "] is null." warn StatementExpression MethodInvocation LOG Literal "I warn ReturnStatement IfStatement BinaryOperation != MemberReference stereotypeFigProfileIcon Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fig MethodInvocation getFigs BlockStatement StatementExpression Cast ReferenceType Fig MemberReference fig StatementExpression This MethodInvocation MemberReference stereotypeFigProfileIcon removeFig StatementExpression Assignment MemberReference stereotypeFigProfileIcon Literal null = IfStatement BinaryOperation != MemberReference originalNameFig Literal null BlockStatement StatementExpression This MethodInvocation MemberReference originalNameFig setNameFig StatementExpression Assignment MemberReference originalNameFig Literal null = ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator icon MemberReference BlockStatement StatementExpression This MethodInvocation MemberReference icon removeFig StatementExpression MethodInvocation clear LocalVariableDeclaration BasicType int VariableDeclarator practicalView MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation getOwner LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereos MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade LocalVariableDeclaration BasicType boolean VariableDeclarator hiding BinaryOperation == MemberReference practicalView MemberReference DiagramAppearance STEREOTYPE_VIEW_SMALL_ICON IfStatement BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference hiding IfStatement BinaryOperation == MemberReference practicalView MemberReference DiagramAppearance STEREOTYPE_VIEW_BIG_ICON BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator replaceIcon Literal null IfStatement BinaryOperation == MethodInvocation stereos size Literal 1 BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator stereo MethodInvocation stereos MethodInvocation next iterator StatementExpression Assignment MemberReference replaceIcon MethodInvocation MethodInvocation getProfileConfiguration MethodInvocation getFigNodeStrategy MethodInvocation MemberReference stereo getIconForStereotype getProject = IfStatement BinaryOperation != MemberReference replaceIcon Literal null BlockStatement StatementExpression Assignment MemberReference stereotypeFigProfileIcon ClassCreator ReferenceType MemberReference settings MemberReference replaceIcon MethodInvocation getName = StatementExpression MethodInvocation stereotypeFigProfileIcon MethodInvocation getOwner StatementExpression MethodInvocation stereotypeFigProfileIcon MethodInvocation MethodInvocation getLocation getBigPort setLocation StatementExpression MethodInvocation MemberReference stereotypeFigProfileIcon addFig StatementExpression Assignment MemberReference originalNameFig This MethodInvocation getNameFig = LocalVariableDeclaration Modifier final ReferenceType FigText VariableDeclarator labelFig MethodInvocation stereotypeFigProfileIcon StatementExpression MethodInvocation MemberReference labelFig setNameFig StatementExpression MethodInvocation labelFig This addPropertyChangeListener StatementExpression MethodInvocation MethodInvocation MethodInvocation stereotypeFigProfileIcon getBounds setBounds getBigPort ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator fig MethodInvocation getFigs BlockStatement StatementExpression Cast ReferenceType Fig MemberReference fig IfStatement BinaryOperation == MemberReference practicalView MemberReference DiagramAppearance STEREOTYPE_VIEW_SMALL_ICON BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator i BinaryOperation - BinaryOperation - BinaryOperation + This MethodInvocation getX This MethodInvocation getWidth MemberReference Literal 2 ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereo MemberReference stereos BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator icon MethodInvocation MethodInvocation getProfileConfiguration MethodInvocation getFigNodeStrategy MethodInvocation MemberReference stereo getIconForStereotype getProject IfStatement BinaryOperation != MemberReference icon Literal null BlockStatement LocalVariableDeclaration ReferenceType FigImage VariableDeclarator fimg ClassCreator ReferenceType FigImage MemberReference i BinaryOperation + This MethodInvocation getBigPort MethodInvocation getY Literal 2 MemberReference icon StatementExpression MethodInvocation fimg MemberReference BinaryOperation / BinaryOperation * MethodInvocation icon Literal null getHeight MemberReference MethodInvocation icon Literal null getWidth setSize StatementExpression MethodInvocation MemberReference fimg addFig StatementExpression MethodInvocation MemberReference fimg add StatementExpression Assignment MemberReference i BinaryOperation - MemberReference Literal 2 -= StatementExpression MethodInvocation This MethodInvocation getWidth StatementExpression MethodInvocation StatementExpression MethodInvocation damage StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation redraw	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object elem ReturnStatement BinaryOperation && BinaryOperation && MethodInvocation Model MethodInvocation MemberReference elem isAMessage getFacade BinaryOperation == MethodInvocation Model MethodInvocation MemberReference elem getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade BinaryOperation == MethodInvocation Model MethodInvocation MemberReference elem getActivator getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget getActivator getFacade	0
MethodDeclaration Modifier public clear FormalParameter ReferenceType Class codeCreatorClass StatementExpression MethodInvocation MethodInvocation clear MemberReference codeCreatorClass	0
MethodDeclaration Modifier public ReferenceType Color getFillColor ReturnStatement MethodInvocation cover getFillColor	0
MethodDeclaration Modifier protected buildModelList LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator c ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MethodInvocation getTarget getIncomings getFacade IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget isAState getFacade BlockStatement LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator i ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MethodInvocation getTarget getInternalTransitions getFacade StatementExpression MethodInvocation c MemberReference i removeAll StatementExpression MethodInvocation MemberReference c setAllElements	0
MethodDeclaration Modifier private ReferenceType Multiplicity FormalParameter ReferenceType String sarg LocalVariableDeclaration BasicType boolean VariableDeclarator allDigits Literal true ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation sarg length MemberReference ++ i BlockStatement IfStatement MethodInvocation ! Character MethodInvocation sarg MemberReference i charAt isDigit BlockStatement StatementExpression Assignment MemberReference allDigits Literal false = IfStatement BinaryOperation || BinaryOperation || MemberReference allDigits BinaryOperation > MethodInvocation sarg Literal '.' indexOf Literal - 1 BinaryOperation > MethodInvocation sarg Literal ',' indexOf Literal - 1 BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference sarg createMultiplicityInternal getDataTypesFactoryInternal BlockStatement IfStatement Literal MethodInvocation MemberReference sarg equals "1_N" BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation Literal 1 Literal - 1 createMultiplicityInternal getDataTypesFactoryInternal BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation Literal 1 Literal 1 createMultiplicityInternal getDataTypesFactoryInternal	1
MethodDeclaration Modifier public ReferenceType Collection getResidentElements FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType CompositeState BinaryOperation instanceof MemberReference ReferenceType StateVertex BlockStatement StatementExpression Cast ReferenceType CompositeState MemberReference handle ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference	1
MethodDeclaration Modifier public FormalParameter ReferenceType TableDefinition table StatementExpression Assignment This MemberReference table MemberReference table =	0
MethodDeclaration Modifier public ReferenceType Collection getTagDefinitions FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BlockStatement ReturnStatement Cast ReferenceType Stereotype MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public BasicType boolean disable ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType ToDoListListener l StatementExpression MethodInvocation listenerList ClassReference ReferenceType ToDoListListener MemberReference l remove	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation MemberReference element contains getFacade	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection features StatementExpression SuperMethodInvocation MemberReference handle MemberReference features StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation cover MemberReference w setLineWidth	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator diagram MethodInvocation DiagramUtils getActiveDiagram LocalVariableDeclaration ReferenceType VariableDeclarator IfStatement BinaryOperation instanceof MemberReference diagram ReferenceType UMLClassDiagram BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MemberReference diagram = IfStatement BinaryOperation instanceof MemberReference diagram ReferenceType UMLActivityDiagram BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType MemberReference diagram = BlockStatement ReturnStatement StatementExpression MethodInvocation layout StatementExpression MethodInvocation diagram damage	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Critic c FormalParameter ReferenceType Designer d ReturnStatement MethodInvocation c	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigPartition VariableDeclarator figClone Cast ReferenceType FigPartition SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType FigRect MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone Cast ReferenceType FigLine MethodInvocation it next = StatementExpression Assignment MemberReference figClone Cast ReferenceType FigLine MethodInvocation it next = StatementExpression Assignment MemberReference figClone Cast ReferenceType FigLine MethodInvocation it next = StatementExpression Assignment MemberReference figClone Cast ReferenceType FigLine MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier private StatementExpression MethodInvocation Literal Literal addTranslation StatementExpression MethodInvocation Literal Literal addTranslation StatementExpression MethodInvocation Literal Literal addTranslation StatementExpression MethodInvocation Literal Literal addTranslation StatementExpression MethodInvocation Literal Literal addTranslation StatementExpression MethodInvocation Literal Literal addTranslation StatementExpression MethodInvocation Literal Literal addTranslation StatementExpression MethodInvocation Literal Literal addTranslation StatementExpression MethodInvocation Literal Literal addTranslation StatementExpression MethodInvocation Literal Literal addTranslation StatementExpression MethodInvocation Literal Literal addTranslation StatementExpression MethodInvocation Literal Literal addTranslation	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object base ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType String VariableDeclarator list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String StatementExpression MethodInvocation list Literal "OpaqueExpression" add StatementExpression MethodInvocation list Literal "LiteralString" add StatementExpression MethodInvocation list Literal "LiteralBoolean" add ReturnStatement MemberReference list	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ProjectMember getMembers StatementExpression MethodInvocation LOG BinaryOperation + Literal "Getting the members there are " MethodInvocation members size info ReturnStatement MemberReference members	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object container StatementExpression MethodInvocation MemberReference container MemberReference handle addOwnedElement	1
MethodDeclaration Modifier public Annotation Override LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator dm MethodInvocation getOffenders BlockStatement IfStatement BinaryOperation instanceof MemberReference dm ReferenceType Highlightable BlockStatement StatementExpression Cast ReferenceType Highlightable MemberReference dm IfStatement BinaryOperation != MemberReference p Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator MethodInvocation p MethodInvocation iterator MemberReference dm WhileStatement MethodInvocation hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation next IfStatement BinaryOperation instanceof MemberReference f ReferenceType Highlightable BlockStatement StatementExpression Cast ReferenceType Highlightable MemberReference f	0
MethodDeclaration Modifier public static ReferenceType LocalVariableDeclaration ReferenceType Designer VariableDeclarator dsgr MethodInvocation Designer IfStatement BinaryOperation == MemberReference dsgr Literal null BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation dsgr	0
MethodDeclaration ReferenceType Object FormalParameter ReferenceType Object t LocalVariableDeclaration ReferenceType Object VariableDeclarator v MethodInvocation Model MethodInvocation MemberReference t getVisibility getFacade ReturnStatement TernaryExpression BinaryOperation == MemberReference v Literal null MethodInvocation Model MethodInvocation getPublic getVisibilityKind MemberReference v	1
MethodDeclaration Modifier public ReferenceType Object getOwner FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType Fig BlockStatement IfStatement BinaryOperation != Cast ReferenceType Fig MemberReference o Literal null BlockStatement StatementExpression Assignment MemberReference o Cast ReferenceType Fig MemberReference o = ReturnStatement MemberReference o	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int i ReturnStatement MethodInvocation Model MethodInvocation getUMLClass getMetaTypes	0
MethodDeclaration Modifier public static ReferenceType makeLanguage FormalParameter ReferenceType String theName FormalParameter ReferenceType String FormalParameter ReferenceType theIcon LocalVariableDeclaration ReferenceType VariableDeclarator lang StatementExpression Assignment MemberReference lang MethodInvocation MethodInvocation MemberReference theName getInstance = IfStatement BinaryOperation == MemberReference lang Literal null BlockStatement StatementExpression Assignment MemberReference lang ClassCreator ReferenceType MemberReference theName MemberReference MemberReference theIcon = ReturnStatement MemberReference lang	0
MethodDeclaration Modifier private ReferenceType String generateChangeability FormalParameter ReferenceType Object op IfStatement MethodInvocation Model MethodInvocation MemberReference op isLeaf getFacade BlockStatement ReturnStatement Literal " " BlockStatement ReturnStatement Literal ""	0
MethodDeclaration Modifier public vetoableChange FormalParameter ReferenceType PropertyChangeEvent pce IfStatement Literal MethodInvocation MethodInvocation pce getPropertyName equals "ownedElement" BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator oldOwned Cast ReferenceType List MethodInvocation pce getOldValue LocalVariableDeclaration ReferenceType Object VariableDeclarator eo MethodInvocation pce getNewValue LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation Model MethodInvocation MemberReference eo getModelElement getFacade IfStatement MethodInvocation oldOwned MemberReference eo contains BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "model removed " MemberReference me debug IfStatement MethodInvocation Model MethodInvocation MemberReference me isAClassifier getFacade BlockStatement StatementExpression MethodInvocation MemberReference me removeNode IfStatement MethodInvocation Model MethodInvocation MemberReference me isAMessage getFacade BlockStatement StatementExpression MethodInvocation MemberReference me removeNode IfStatement MethodInvocation Model MethodInvocation MemberReference me isAAssociation getFacade BlockStatement StatementExpression MethodInvocation MemberReference me removeEdge BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "model added " MemberReference me debug	1
MethodDeclaration Modifier private error FormalParameter ReferenceType Object node StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unknown error processing OCL Exp: " MemberReference node Literal " Val: " MemberReference val error StatementExpression Assignment MemberReference val Literal null = ThrowStatement ClassCreator ReferenceType RuntimeException	1
MethodDeclaration Modifier public FormalParameter BasicType int lower StatementExpression Assignment This MemberReference lower MemberReference lower =	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent event IfStatement BinaryOperation == MethodInvocation event getSource MemberReference multiplicityComboBox BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator item Cast ReferenceType String MethodInvocation multiplicityComboBox getSelectedItem LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation multiplicityComboBox getTarget LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference target getMultiplicity getFacade toString getFacade IfStatement MethodInvocation ! MemberReference item equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference item setMultiplicity getCoreHelper	0
MethodDeclaration Modifier public BasicType int getTokenIndex ReturnStatement MemberReference tokIdx	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException	0
MethodDeclaration Modifier public BasicType boolean isACallAction FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType CallAction	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getClassifier getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier private ReferenceType String items2Msg FormalParameter ReferenceType String preface FormalParameter ReferenceType Collection TypeArgument ReferenceType T items LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator msg ClassCreator ReferenceType StringBuffer MemberReference preface ForStatement EnhancedForControl VariableDeclaration ReferenceType T VariableDeclarator item MemberReference items BlockStatement StatementExpression MethodInvocation msg Literal "\t" append StatementExpression MethodInvocation msg MethodInvocation item toString append StatementExpression MethodInvocation msg Literal "\n" append ReturnStatement MethodInvocation msg toString	1
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation IfStatement BinaryOperation != MemberReference notationProviderBody Literal null BlockStatement StatementExpression MethodInvocation bodyText MethodInvocation notationProviderBody MethodInvocation getOwner MethodInvocation getNotationSettings toString setText StatementExpression MethodInvocation StatementExpression MethodInvocation MethodInvocation getBounds setBounds	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation MethodInvocation e getNewTarget setTarget	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation == MethodInvocation e getSource MemberReference BlockStatement StatementExpression MethodInvocation MethodInvocation getText ReturnStatement IfStatement BinaryOperation == MethodInvocation e getSource MemberReference BlockStatement StatementExpression MethodInvocation LOG Literal "TODO: debug ReturnStatement IfStatement BinaryOperation == MethodInvocation e getSource MemberReference BlockStatement StatementExpression MethodInvocation LOG Literal "TODO: debug ReturnStatement IfStatement BinaryOperation == MethodInvocation e getSource MemberReference BlockStatement StatementExpression MethodInvocation target StatementExpression MethodInvocation target Literal true setEnabled StatementExpression MethodInvocation table repaint ReturnStatement IfStatement BinaryOperation == MethodInvocation e getSource MemberReference BlockStatement StatementExpression MethodInvocation table Literal true StatementExpression MethodInvocation Literal false setEnabled StatementExpression MethodInvocation LOG BinaryOperation + Literal "unknown src in " MethodInvocation e getSource debug	1
MethodDeclaration Modifier private ReferenceType Object getModel IfStatement BinaryOperation != MemberReference model Literal null BlockStatement ReturnStatement MemberReference model ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator userModel MethodInvocation MethodInvocation getUserDefinedModelList getProject BlockStatement IfStatement MethodInvocation ! MethodInvocation MemberReference userModel isReadOnly getModelManagementHelper BlockStatement StatementExpression Assignment MemberReference model MemberReference userModel = ReturnStatement MemberReference model ThrowStatement ClassCreator ReferenceType IllegalStateException Literal "An editable user model wasn't found!"	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType ConfigurationKey key ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation key getKey Literal "false" getValue equals MethodInvocation key getKey Literal "true" getValue	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Element	0
MethodDeclaration Modifier private ReferenceType Point FormalParameter ReferenceType FigNode fig LocalVariableDeclaration ReferenceType Point VariableDeclarator center MethodInvocation fig getCenter ReturnStatement ClassCreator ReferenceType Point BinaryOperation + MemberReference center x BinaryOperation / MethodInvocation fig getWidth Literal 2 MemberReference center y	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object getExpression ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getInitialValue getFacade	0
MethodDeclaration Modifier public FormalParameter BasicType int max StatementExpression Assignment MemberReference MemberReference max =	0
MethodDeclaration Modifier public StatementExpression MethodInvocation MethodInvocation getOwner initNotationProviders StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation damage	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object classifier IfStatement BinaryOperation instanceof MemberReference classifier ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of Classifier" ReturnStatement Cast ReferenceType Classifier MemberReference classifier	0
MethodDeclaration Modifier private ReferenceType String formatExtensionPoint FormalParameter ReferenceType Object value LocalVariableDeclaration ReferenceType NotationSettings VariableDeclarator settings MethodInvocation getNotationSettings LocalVariableDeclaration ReferenceType NotationProvider VariableDeclarator notationProvider MethodInvocation NotationProviderFactory2 MethodInvocation MemberReference NotationProviderFactory2 MemberReference value MethodInvocation Notation MethodInvocation settings getInstance LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation notationProvider MemberReference value MemberReference settings toString ReturnStatement MemberReference name	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public static ReferenceType NodeSetValue numberLines FormalParameter ReferenceType Context context FormalParameter ReferenceType NodeSetValue rtf_ns LocalVariableDeclaration ReferenceType FragmentValue VariableDeclarator rtf Cast ReferenceType FragmentValue MemberReference rtf_ns StatementExpression MethodInvocation MemberReference context setupLineNumbering TryStatement LocalVariableDeclaration ReferenceType LineCountEmitter VariableDeclarator lcEmitter ClassCreator ReferenceType LineCountEmitter StatementExpression MethodInvocation rtf MemberReference lcEmitter LocalVariableDeclaration BasicType int VariableDeclarator numLines MethodInvocation lcEmitter lineCount LocalVariableDeclaration BasicType int VariableDeclarator listingModulus TernaryExpression BinaryOperation < MemberReference numLines MemberReference modulus Literal 1 MemberReference modulus LocalVariableDeclaration BasicType double VariableDeclarator log10numLines BinaryOperation / MethodInvocation Math MemberReference numLines log MethodInvocation Math Literal 10 log LocalVariableDeclaration BasicType int VariableDeclarator listingWidth TernaryExpression BinaryOperation < MemberReference width BinaryOperation + MemberReference log10numLines Literal 1 Cast BasicType int MethodInvocation Math BinaryOperation + MemberReference log10numLines Literal 1 floor MemberReference width LocalVariableDeclaration ReferenceType Controller VariableDeclarator controller MethodInvocation context getController LocalVariableDeclaration ReferenceType NamePool VariableDeclarator namePool MethodInvocation controller getNamePool LocalVariableDeclaration ReferenceType NumberLinesEmitter VariableDeclarator nlEmitter ClassCreator ReferenceType NumberLinesEmitter MemberReference controller MemberReference namePool MemberReference startinglinenumber MemberReference listingModulus MemberReference listingWidth MemberReference separator MemberReference foStylesheet StatementExpression MethodInvocation rtf MemberReference nlEmitter ReturnStatement MethodInvocation nlEmitter getResultTreeFragment CatchClause CatchClauseParameter TransformerException e StatementExpression MethodInvocation System.out Literal "Transformer Exception in println ReturnStatement MemberReference rtf	1
MethodDeclaration Modifier private BasicType boolean FormalParameter Modifier final ReferenceType FigMessage FormalParameter Modifier final ReferenceType FigMessage ReturnStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MethodInvocation MethodInvocation BinaryOperation == MethodInvocation getSourceFigNode MethodInvocation getSourceFigNode	0
MethodDeclaration Modifier public BasicType int getPlacementHint ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object getMultiplicity ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public ReferenceType FigNode getFigNodeFor FormalParameter ReferenceType GraphModel gm FormalParameter ReferenceType Layer lay FormalParameter ReferenceType Object node FormalParameter ReferenceType Map styleAttributes LocalVariableDeclaration ReferenceType FigNode VariableDeclarator figNode Literal null AssertStatement BinaryOperation != MemberReference node Literal null LocalVariableDeclaration ReferenceType Diagram VariableDeclarator diag Cast ReferenceType LayerPerspective MemberReference lay IfStatement BinaryOperation && BinaryOperation instanceof MemberReference diag ReferenceType UMLDiagram Cast ReferenceType UMLDiagram MemberReference diag BlockStatement StatementExpression Assignment MemberReference figNode Cast ReferenceType FigNode Cast ReferenceType UMLDiagram MemberReference diag = BlockStatement StatementExpression MethodInvocation LOG Literal "TODO: CollabDiagramRenderer error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Node is not a recognised Received " MethodInvocation node MethodInvocation getName getClass StatementExpression MethodInvocation lay MemberReference figNode add ReturnStatement MemberReference figNode	1
MethodDeclaration Modifier private updateImportClassloader LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator pathList MethodInvocation JavaImportSettings MethodInvocation getPathList getInstance LocalVariableDeclaration ReferenceType URL VariableDeclarator urls ArrayCreator ReferenceType URL MethodInvocation pathList size LocalVariableDeclaration BasicType int VariableDeclarator i Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator path MemberReference pathList BlockStatement TryStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ i urls ClassCreator MethodInvocation toURI MethodInvocation toURL ReferenceType File MemberReference path = CatchClause CatchClauseParameter MalformedURLException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Bad path in classpath " MemberReference path error TryStatement StatementExpression MethodInvocation ImportClassLoader MemberReference urls getInstance StatementExpression MethodInvocation ImportClassLoader MethodInvocation getInstance CatchClause CatchClauseParameter MalformedURLException e	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType ClassifierRole	0
MethodDeclaration ForStatement EnhancedForControl VariableDeclaration ReferenceType Resource VariableDeclarator resource MethodInvocation MethodInvocation getResources getResourceSet BlockStatement StatementExpression MethodInvocation MemberReference resource	0
MethodDeclaration Modifier public final base_specifier RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType String VariableDeclarator Literal "" StatementExpression MethodInvocation m BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_virtual BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_virtual match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_public LITERAL_protected LITERAL_private BlockStatement StatementExpression MethodInvocation access_specifier BreakStatement SwitchStatementCase ID SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression Assignment MemberReference MethodInvocation qualified_type = IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m MemberReference Literal true baseSpecifier BreakStatement SwitchStatementCase ID SCOPE BlockStatement StatementExpression Assignment MemberReference MethodInvocation qualified_type = IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m MemberReference Literal false baseSpecifier BreakStatement SwitchStatementCase IfStatement BinaryOperation && BinaryOperation && BinaryOperation >= MethodInvocation Literal 1 LA MemberReference LITERAL_public BinaryOperation <= MethodInvocation Literal 1 LA MemberReference LITERAL_private BinaryOperation == MethodInvocation Literal 2 LA MemberReference LITERAL_virtual BlockStatement StatementExpression MethodInvocation access_specifier StatementExpression MethodInvocation MemberReference LITERAL_virtual match StatementExpression Assignment MemberReference MethodInvocation qualified_type = IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m MemberReference Literal true baseSpecifier IfStatement BinaryOperation && BinaryOperation && BinaryOperation >= MethodInvocation Literal 1 LA MemberReference LITERAL_public BinaryOperation <= MethodInvocation Literal 1 LA MemberReference LITERAL_private BinaryOperation || BinaryOperation == MethodInvocation Literal 2 LA MemberReference ID BinaryOperation == MethodInvocation Literal 2 LA MemberReference SCOPE BlockStatement StatementExpression MethodInvocation access_specifier StatementExpression Assignment MemberReference MethodInvocation qualified_type = IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m MemberReference Literal false baseSpecifier BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m	1
MethodDeclaration Modifier public endDocument TransformerException StatementExpression MethodInvocation rtfEmitter endDocument	0
MethodDeclaration Modifier public Annotation Deprecated setMultiplicity FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object arg StatementExpression MethodInvocation impl MemberReference handle MemberReference arg setMultiplicity	1
MethodDeclaration Modifier protected Annotation SuppressWarnings Literal "deprecation" Annotation Deprecated ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getProjectSettings MethodInvocation getDefaultDiagramSettings getManager ReturnStatement MethodInvocation MemberReference namespace MemberReference settings createDiagram	1
MethodDeclaration Modifier private FormalParameter ReferenceType panel LocalVariableDeclaration ReferenceType JLabel VariableDeclarator ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference add StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation Translator Literal localize = StatementExpression MethodInvocation MemberReference add StatementExpression Assignment MemberReference ClassCreator ReferenceType MethodInvocation Translator Literal localize = LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Configuration MemberReference Argo getString IfStatement Literal MethodInvocation MemberReference equals "0" BlockStatement StatementExpression MethodInvocation Literal true setSelected IfStatement Literal MethodInvocation MemberReference equals "1" BlockStatement StatementExpression MethodInvocation Literal true setSelected BlockStatement StatementExpression MethodInvocation Literal true setSelected StatementExpression MethodInvocation MemberReference add StatementExpression MethodInvocation panel MemberReference add StatementExpression MethodInvocation panel MemberReference add StatementExpression MethodInvocation panel MemberReference add StatementExpression MethodInvocation panel MemberReference add	0
MethodDeclaration Modifier public ReferenceType Object getGeneralization FormalParameter ReferenceType Object child FormalParameter ReferenceType Object parent ReturnStatement MethodInvocation impl MemberReference child MemberReference parent getGeneralization	0
MethodDeclaration Modifier protected ReferenceType Object FormalParameter ReferenceType MutableGraphModel gm FormalParameter ReferenceType Object newNode ReturnStatement MethodInvocation MemberReference gm MemberReference newNode MemberReference BOTTOM	0
MethodDeclaration Modifier public ReferenceType Collection parseFile FormalParameter ReferenceType InputStream is FormalParameter ReferenceType String fileName ImportException LocalVariableDeclaration BasicType int VariableDeclarator lastSlash MethodInvocation fileName Literal '/' lastIndexOf IfStatement BinaryOperation != MemberReference lastSlash Literal - 1 BlockStatement StatementExpression Assignment MemberReference fileName MethodInvocation fileName BinaryOperation + MemberReference lastSlash Literal 1 substring = LocalVariableDeclaration ReferenceType VariableDeclarator parser ClassCreator ReferenceType ClassCreator ReferenceType ClassCreator ReferenceType BufferedInputStream MemberReference is LocalVariableDeclaration ReferenceType VariableDeclarator modeller ClassCreator ReferenceType MethodInvocation currentProject getModel MemberReference fileName TryStatement StatementExpression MethodInvocation parser MemberReference modeller specification CatchClause CatchClauseParameter RecognitionException e ThrowStatement ClassCreator ReferenceType ImportException BinaryOperation + Literal "File: " MemberReference fileName MemberReference e CatchClause CatchClauseParameter TokenStreamException e ThrowStatement ClassCreator ReferenceType ImportException BinaryOperation + Literal "File: " MemberReference fileName MemberReference e ReturnStatement MethodInvocation modeller getNewElements	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isASubmachineState getFacade BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference parent getSubmachine getFacade add ReturnStatement MemberReference list ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public BasicType boolean isPublic FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator elem Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation MethodInvocation elem getVisibility equals ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation	0
MethodDeclaration Modifier public ReferenceType Collection ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getActions getFacade	0
MethodDeclaration Modifier public FormalParameter ReferenceType ConstraintChangeListener StatementExpression MethodInvocation ClassReference ReferenceType ConstraintChangeListener MemberReference remove	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType String IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation > MethodInvocation MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment This MemberReference MethodInvocation trim = ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier static ReferenceType Object FormalParameter ReferenceType Collection collection FormalParameter BasicType int index IfStatement BinaryOperation instanceof MemberReference collection ReferenceType List BlockStatement ReturnStatement Cast ReferenceType List MemberReference collection IfStatement BinaryOperation || BinaryOperation >= MemberReference index MethodInvocation collection size BinaryOperation < MemberReference index Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IndexOutOfBoundsException LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation collection iterator ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference index MemberReference ++ i BlockStatement StatementExpression MethodInvocation it next ReturnStatement MethodInvocation it next	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean canAddNode FormalParameter ReferenceType Object node IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference node Literal null MethodInvocation ! Model MethodInvocation MemberReference node isAModelElement getFacade MethodInvocation MemberReference node containsNode BlockStatement ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference node isAComment getFacade BlockStatement ReturnStatement Literal true IfStatement BinaryOperation || MethodInvocation Model MethodInvocation MemberReference node isAStateVertex getFacade MethodInvocation Model MethodInvocation MemberReference node getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference node getStateMachine getStateMachinesHelper IfStatement BinaryOperation || BinaryOperation == MemberReference Literal null BinaryOperation == MemberReference MethodInvocation BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public BasicType boolean isAInterface FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType ForeignKeyDefinition getForeignKeyDefinitions FormalParameter ReferenceType Object relation LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ForeignKeyDefinition VariableDeclarator fkDefs ClassCreator ReferenceType HashSet TypeArgument ReferenceType ForeignKeyDefinition ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator assocEnd MethodInvocation Model MethodInvocation MemberReference relation getAssociationEnds getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference assocEnd getOtherAssociationEnds getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator otherAssocEnd MethodInvocation MethodInvocation next iterator LocalVariableDeclaration ReferenceType ForeignKeyDefinition VariableDeclarator fkDef MethodInvocation MemberReference relation MemberReference assocEnd MemberReference otherAssocEnd getFkDef IfStatement BinaryOperation != MemberReference fkDef Literal null BlockStatement StatementExpression MethodInvocation fkDefs MemberReference fkDef add ReturnStatement MemberReference fkDefs	1
MethodDeclaration Modifier public Annotation Override addEdge FormalParameter ReferenceType Object edge IfStatement MethodInvocation ! MemberReference edge canAddEdge BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MemberReference edge add getEdges StatementExpression MethodInvocation MemberReference edge fireEdgeAdded	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getRoot StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference model MethodInvocation Model MethodInvocation getClassifier getMetaTypes getModelManagementHelper addAll LocalVariableDeclaration Modifier final ReferenceType ProfileConfiguration VariableDeclarator profileConfiguration MethodInvocation p getProfileConfiguration LocalVariableDeclaration Modifier final ReferenceType ModelManagementHelper VariableDeclarator mmh MethodInvocation Model getModelManagementHelper LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator classifierMetaType MethodInvocation Model MethodInvocation getClassifier getMetaTypes ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator profile MethodInvocation profileConfiguration getProfiles BlockStatement TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator topPackage MethodInvocation profile getProfilePackages BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference topPackage isAModel getFacade BlockStatement StatementExpression MethodInvocation list MethodInvocation mmh MemberReference topPackage MemberReference classifierMetaType addAll CatchClause CatchClauseParameter ProfileException e StatementExpression MethodInvocation LOG Literal "Exception" MemberReference e error ReturnStatement MemberReference list	1
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType ArgoDiagram createDiagram FormalParameter ReferenceType Object namespace IfStatement MethodInvocation ! Model MethodInvocation MemberReference namespace isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "No namespace as argument" error StatementExpression MethodInvocation LOG MemberReference namespace error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "The argument " MemberReference namespace Literal "is not a namespace." ReturnStatement MethodInvocation DiagramFactory MethodInvocation MemberReference Deployment MemberReference namespace Literal null createDiagram getInstance	0
MethodDeclaration Modifier public ReferenceType Object getCompositeState ReturnStatement ClassReference ReferenceType State	0
MethodDeclaration Modifier private static ReferenceType ProjectBrowser FormalParameter ReferenceType SimpleTimer st FormalParameter ReferenceType splash LocalVariableDeclaration ReferenceType ProjectBrowser VariableDeclarator Literal null StatementExpression MethodInvocation st Literal model mark StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference splash Literal 5 Literal updateProgress StatementExpression MethodInvocation st Literal the profile mark StatementExpression ClassCreator MethodInvocation init ReferenceType StatementExpression MethodInvocation st Literal mark StatementExpression Assignment MemberReference MethodInvocation MemberReference splash = StatementExpression MethodInvocation st Literal mark StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation st Literal mark StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem ReturnStatement MemberReference	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Object FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType List VariableDeclarator MethodInvocation MethodInvocation MemberReference getFacade LocalVariableDeclaration ReferenceType List VariableDeclarator MethodInvocation MethodInvocation MemberReference getFacade IfStatement BinaryOperation == MethodInvocation size MethodInvocation size BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator MethodInvocation iterator LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it2 MethodInvocation iterator WhileStatement MethodInvocation hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter1 MethodInvocation next LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter2 MethodInvocation it2 next IfStatement MethodInvocation ! MemberReference parameter1 MemberReference parameter2 BlockStatement ReturnStatement Literal false BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType getCollaborationsFactory IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This = ReturnStatement MemberReference	0
MethodDeclaration Modifier public synchronized FormalParameter ReferenceType String goalName FormalParameter BasicType int priority LocalVariableDeclaration ReferenceType VariableDeclarator g ClassCreator ReferenceType MemberReference goalName MemberReference priority StatementExpression MethodInvocation goals MemberReference g remove StatementExpression MethodInvocation goals MemberReference g add	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object role FormalParameter ReferenceType Collection bases IfStatement BinaryOperation || BinaryOperation == MemberReference role Literal null BinaryOperation == MemberReference bases Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "In either the role " Literal "or the collection bases is " Literal "null" StatementExpression MethodInvocation Cast ReferenceType ClassifierRole MemberReference role MemberReference bases update	0
MethodDeclaration Modifier public updateProgress FormalParameter Modifier final BasicType int i StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation progress MemberReference i setValue IfStatement MethodInvocation BlockStatement IfStatement MemberReference BlockStatement StatementExpression MethodInvocation cancelButton MethodInvocation Translator Literal localize setText BlockStatement StatementExpression MethodInvocation close invokeLater	1
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent lse IfStatement MethodInvocation lse getValueIsAdjusting BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation availableList getSelectedValue StatementExpression MethodInvocation BinaryOperation != MemberReference Literal null setEnabled	0
MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType FigMessage getMessagesBelow FormalParameter ReferenceType FigMessage figMessage LocalVariableDeclaration Modifier final ReferenceType List TypeArgument ReferenceType FigMessage VariableDeclarator messagesBelow ClassCreator ReferenceType ArrayList TypeArgument ReferenceType FigMessage ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation MethodInvocation getLayerManager MethodInvocation getContents getEditor BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference f ReferenceType FigMessage BinaryOperation != MemberReference f MemberReference figMessage BlockStatement LocalVariableDeclaration ReferenceType FigMessage VariableDeclarator fm Cast ReferenceType FigMessage MemberReference f IfStatement BinaryOperation >= MethodInvocation fm MemberReference y getFirstPoint MethodInvocation figMessage MemberReference y getFirstPoint BlockStatement StatementExpression MethodInvocation messagesBelow Cast ReferenceType FigMessage MemberReference f add ReturnStatement MemberReference messagesBelow	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType Dependency	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType BinaryOperation || BinaryOperation == MemberReference value Literal null BinaryOperation instanceof MemberReference value ReferenceType Action BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or value: " MemberReference value	0
MethodDeclaration Modifier private ParseExpressionSegment FeatureNotSupportedException LocalVariableDeclaration ReferenceType ExpressionNode VariableDeclarator tempNode Literal null LocalVariableDeclaration BasicType int VariableDeclarator startToken MemberReference curtok id SwitchStatement MemberReference curtok id SwitchStatementCase MemberReference TokenID NullLiteral StatementExpression MethodInvocation exprStack ClassCreator ReferenceType push StatementExpression MethodInvocation advance BreakStatement SwitchStatementCase MemberReference TokenID TrueLiteral StatementExpression MethodInvocation exprStack ClassCreator ReferenceType BooleanPrimitive Literal true push StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID FalseLiteral StatementExpression MethodInvocation exprStack ClassCreator ReferenceType BooleanPrimitive Literal false push StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID IntLiteral StatementExpression MethodInvocation exprStack ClassCreator ReferenceType IntegralPrimitive MethodInvocation strings MemberReference curtok data get MemberReference IntegralType Int push StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID UIntLiteral StatementExpression MethodInvocation exprStack ClassCreator ReferenceType IntegralPrimitive MethodInvocation strings MemberReference curtok data get MemberReference IntegralType UInt push StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID LongLiteral StatementExpression MethodInvocation exprStack ClassCreator ReferenceType IntegralPrimitive MethodInvocation strings MemberReference curtok data get MemberReference IntegralType Long push StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID ULongLiteral StatementExpression MethodInvocation exprStack ClassCreator ReferenceType IntegralPrimitive MethodInvocation strings MemberReference curtok data get MemberReference IntegralType ULong push StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID RealLiteral StatementExpression MethodInvocation exprStack ClassCreator ReferenceType MethodInvocation strings MemberReference curtok data get push StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID CharLiteral StatementExpression MethodInvocation exprStack ClassCreator ReferenceType MethodInvocation strings MemberReference curtok data get push StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID StringLiteral LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation strings MemberReference curtok data get StatementExpression MethodInvocation exprStack ClassCreator ReferenceType StringPrimitive MemberReference push StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID Bool MemberReference TokenID Byte MemberReference TokenID Char MemberReference TokenID Decimal MemberReference TokenID Double MemberReference TokenID Float MemberReference TokenID Int MemberReference TokenID Long MemberReference TokenID Object MemberReference TokenID SByte MemberReference TokenID Short MemberReference TokenID String MemberReference TokenID UInt MemberReference TokenID ULong MemberReference TokenID UShort LocalVariableDeclaration ReferenceType IdentifierExpression VariableDeclarator qe MethodInvocation parseQualifiedIdentifier StatementExpression MethodInvocation exprStack MemberReference qe push StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID Plus StatementExpression Assignment MemberReference tempNode MethodInvocation MemberReference startToken ConsumeBinary = IfStatement BinaryOperation != MemberReference tempNode Literal null BlockStatement StatementExpression MethodInvocation exprStack ClassCreator ReferenceType UnaryExpression MemberReference startToken MemberReference tempNode push BreakStatement SwitchStatementCase MemberReference TokenID Minus StatementExpression Assignment MemberReference tempNode MethodInvocation MemberReference startToken ConsumeBinary = IfStatement BinaryOperation != MemberReference tempNode Literal null BlockStatement StatementExpression MethodInvocation exprStack ClassCreator ReferenceType UnaryExpression MemberReference startToken MemberReference tempNode push BreakStatement SwitchStatementCase MemberReference TokenID Is MemberReference TokenID As MemberReference TokenID Star MemberReference TokenID Slash MemberReference TokenID Percent MemberReference TokenID ShiftLeft MemberReference TokenID ShiftRight MemberReference TokenID Less MemberReference TokenID Greater MemberReference TokenID LessEqual MemberReference TokenID GreaterEqual MemberReference TokenID EqualEqual MemberReference TokenID NotEqual MemberReference TokenID BAnd MemberReference TokenID MemberReference TokenID BOr MemberReference TokenID And MemberReference TokenID Or StatementExpression MethodInvocation MemberReference startToken ConsumeBinary BreakStatement SwitchStatementCase MemberReference TokenID Not MemberReference TokenID Tilde MemberReference TokenID PlusPlus MemberReference TokenID MinusMinus StatementExpression MethodInvocation MemberReference startToken ConsumeUnary BreakStatement SwitchStatementCase MemberReference TokenID Question LocalVariableDeclaration ReferenceType ExpressionNode VariableDeclarator condTest MethodInvocation exprStack pop StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType ExpressionNode VariableDeclarator cond1 MethodInvocation MemberReference TokenID Colon ParseExpression StatementExpression MethodInvocation MemberReference TokenID Colon AssertAndAdvance LocalVariableDeclaration ReferenceType ExpressionNode VariableDeclarator cond2 MethodInvocation ParseExpression StatementExpression MethodInvocation exprStack ClassCreator ReferenceType ConditionalExpression MemberReference condTest MemberReference cond1 MemberReference cond2 push BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseExpressionSegment StatementExpression MethodInvocation exprStack ClassCreator ReferenceType MethodInvocation exprStack pop push BreakStatement SwitchStatementCase MemberReference TokenID Out StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseExpressionSegment StatementExpression MethodInvocation exprStack ClassCreator ReferenceType MethodInvocation exprStack pop push BreakStatement SwitchStatementCase MemberReference TokenID This StatementExpression MethodInvocation exprStack MethodInvocation parseQualifiedIdentifier push StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID Void StatementExpression MethodInvocation advance StatementExpression MethodInvocation exprStack ClassCreator ReferenceType push BreakStatement SwitchStatementCase MemberReference TokenID Base StatementExpression MethodInvocation advance LocalVariableDeclaration BasicType int VariableDeclarator newToken MemberReference curtok id IfStatement BinaryOperation == MemberReference newToken MemberReference TokenID Dot BlockStatement StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType String VariableDeclarator baseIdent MethodInvocation strings MemberReference curtok data get LocalVariableDeclaration ReferenceType IdentifierExpression VariableDeclarator ide ClassCreator ReferenceType IdentifierExpression ArrayCreator ReferenceType String ArrayInitializer MemberReference baseIdent StatementExpression MethodInvocation advance StatementExpression MethodInvocation exprStack ClassCreator ReferenceType BaseAccessExpression MemberReference ide push IfStatement BinaryOperation == MemberReference newToken MemberReference TokenID LBracket BlockStatement StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType ExpressionList VariableDeclarator MethodInvocation MemberReference TokenID RBracket ParseExpressionList StatementExpression MethodInvocation exprStack ClassCreator ReferenceType BaseAccessExpression MemberReference push StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference TokenID LParen AssertAndAdvance StatementExpression MethodInvocation exprStack ClassCreator ReferenceType MethodInvocation MemberReference TokenID RParen ParseExpression push StatementExpression MethodInvocation MemberReference TokenID RParen AssertAndAdvance StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID Checked StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference TokenID LParen AssertAndAdvance StatementExpression MethodInvocation ParseExpressionSegment StatementExpression MethodInvocation exprStack ClassCreator ReferenceType MethodInvocation exprStack pop push StatementExpression MethodInvocation MemberReference TokenID RParen AssertAndAdvance StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID Unchecked StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference TokenID LParen AssertAndAdvance StatementExpression MethodInvocation ParseExpressionSegment StatementExpression MethodInvocation exprStack ClassCreator ReferenceType UncheckedExpression MethodInvocation exprStack pop push StatementExpression MethodInvocation MemberReference TokenID RParen AssertAndAdvance StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID Equal MemberReference TokenID PlusEqual MemberReference TokenID MinusEqual MemberReference TokenID StarEqual MemberReference TokenID SlashEqual MemberReference TokenID PercentEqual MemberReference TokenID BAndEqual MemberReference TokenID BOrEqual MemberReference TokenID BXorEqual MemberReference TokenID ShiftLeftEqual MemberReference TokenID ShiftRightEqual LocalVariableDeclaration BasicType int VariableDeclarator op MemberReference curtok id StatementExpression MethodInvocation advance IfStatement BinaryOperation && BinaryOperation && BinaryOperation > MethodInvocation exprStack size Literal 0 BinaryOperation instanceof MethodInvocation exprStack peek ReferenceType PrimaryExpression BinaryOperation instanceof MethodInvocation exprStack peek ReferenceType UnaryCastExpression BlockStatement StatementExpression MethodInvocation Literal hand of assignment must be a ReportError LocalVariableDeclaration ReferenceType ExpressionNode VariableDeclarator assignVar MethodInvocation exprStack pop LocalVariableDeclaration ReferenceType ExpressionNode VariableDeclarator MethodInvocation ParseExpression StatementExpression MethodInvocation exprStack ClassCreator ReferenceType MemberReference op MemberReference assignVar MemberReference push BreakStatement SwitchStatementCase MemberReference TokenID LCurly StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType ArrayInitializerExpression VariableDeclarator aie ClassCreator ReferenceType ArrayInitializerExpression StatementExpression MethodInvocation exprStack MemberReference aie push StatementExpression Assignment MemberReference aie Expressions MethodInvocation MemberReference TokenID RCurly ParseExpressionList = BreakStatement SwitchStatementCase MemberReference TokenID New StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType TypeNode VariableDeclarator MethodInvocation parseType IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID LParen BlockStatement StatementExpression MethodInvocation advance LocalVariableDeclaration ReferenceType ExpressionList VariableDeclarator newList MethodInvocation MemberReference TokenID RParen ParseExpressionList StatementExpression MethodInvocation exprStack ClassCreator ReferenceType ObjectCreationExpression MemberReference MemberReference newList push IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID LBracket BlockStatement StatementExpression MethodInvocation MemberReference ParseArrayCreation StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID Ident LocalVariableDeclaration BasicType boolean VariableDeclarator isDecl MethodInvocation IfStatement MemberReference isDecl BlockStatement StatementExpression MethodInvocation ParseLocalDeclaration BlockStatement StatementExpression MethodInvocation exprStack MethodInvocation parseQualifiedIdentifier push StatementExpression MethodInvocation ParseContinuingPrimary BreakStatement SwitchStatementCase MemberReference TokenID LParen StatementExpression MethodInvocation advance StatementExpression MethodInvocation ParseCastOrGroup BreakStatement SwitchStatementCase StatementExpression MethodInvocation MemberReference TokenID CharLiteral AssertAndAdvance BreakStatement	1
MethodDeclaration Modifier private ReferenceType String generateClassifier FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator returnValue ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator start MethodInvocation MemberReference cls generateClassifierStart IfStatement BinaryOperation && BinaryOperation != MemberReference start Literal null BinaryOperation > MethodInvocation start length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator body MethodInvocation MemberReference cls generateClassifierBody LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator end MethodInvocation MemberReference cls generateClassifierEnd StatementExpression MethodInvocation returnValue MethodInvocation start toString append IfStatement BinaryOperation && BinaryOperation != MemberReference body Literal null BinaryOperation > MethodInvocation body length Literal 0 BlockStatement StatementExpression MethodInvocation returnValue MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation returnValue MemberReference body append IfStatement MemberReference lfBeforeCurly BlockStatement StatementExpression MethodInvocation returnValue MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation returnValue TernaryExpression BinaryOperation != MemberReference end Literal null MethodInvocation end toString Literal "" append ReturnStatement MethodInvocation returnValue toString	1
MethodDeclaration Modifier private ReferenceType Object FormalParameter ReferenceType String name FormalParameter ReferenceType Object mClassifier LocalVariableDeclaration ReferenceType Object VariableDeclarator mAssociationEnd Literal null ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation Model MethodInvocation MemberReference mClassifier getAssociationEnds MethodInvocation iterator getFacade MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation i next LocalVariableDeclaration ReferenceType Object VariableDeclarator assoc MethodInvocation Model MethodInvocation MemberReference ae getAssociation getFacade IfStatement BinaryOperation && BinaryOperation && MethodInvocation name MethodInvocation Model MethodInvocation MemberReference ae getName getFacade equals BinaryOperation == MethodInvocation Model MethodInvocation MemberReference assoc getConnections MethodInvocation size getFacade Literal 2 BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference ae getFacade getType getFacade MethodInvocation parseState getClassifier BlockStatement StatementExpression Assignment MemberReference mAssociationEnd MemberReference ae = IfStatement BinaryOperation && BinaryOperation == MemberReference mAssociationEnd Literal null MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newName MethodInvocation MethodInvocation parseState getClassifier MemberReference mClassifier LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation MemberReference newName MethodInvocation parseState getClassifier MemberReference mClassifier StatementExpression Assignment MemberReference mAssociationEnd MethodInvocation Model MethodInvocation MemberReference mClassifier MemberReference getFacade = ReturnStatement MemberReference mAssociationEnd	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "This is not a UML1.4 class"	0
MethodDeclaration Modifier private FormalParameter BasicType int tab LocalVariableDeclaration ReferenceType VariableDeclarator t MethodInvocation MemberReference tab get IfStatement BinaryOperation instanceof MemberReference t ReferenceType AbstractArgoJPanel BlockStatement IfStatement BinaryOperation != Cast ReferenceType AbstractArgoJPanel MemberReference t Literal null BlockStatement StatementExpression MethodInvocation MemberReference tab remove StatementExpression MethodInvocation location BinaryOperation + Literal "In Tab: " Cast ReferenceType AbstractArgoJPanel MemberReference t removeItem	1
MethodDeclaration Modifier private addDocumentationTag FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String sJavaDocs IfStatement BinaryOperation && BinaryOperation != MemberReference sJavaDocs Literal null BinaryOperation >= MethodInvocation sJavaDocs MethodInvocation length trim Literal 5 BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sbPureDocs ClassCreator ReferenceType StringBuffer Literal 80 LocalVariableDeclaration ReferenceType String VariableDeclarator sCurrentTagName Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator sCurrentTagData Literal null LocalVariableDeclaration BasicType int VariableDeclarator nStartPos Literal 3 LocalVariableDeclaration BasicType boolean VariableDeclarator fHadAsterisk Literal true WhileStatement BinaryOperation < MemberReference nStartPos MethodInvocation sJavaDocs length BlockStatement SwitchStatement MethodInvocation sJavaDocs MemberReference nStartPos charAt SwitchStatementCase Literal '*' StatementExpression Assignment MemberReference fHadAsterisk Literal true = StatementExpression MemberReference ++ nStartPos BreakStatement SwitchStatementCase Literal ' ' Literal '\t' IfStatement MemberReference ! fHadAsterisk BlockStatement StatementExpression MemberReference ++ nStartPos BreakStatement SwitchStatementCase LocalVariableDeclaration BasicType int VariableDeclarator j MemberReference nStartPos WhileStatement BinaryOperation && BinaryOperation < MemberReference j MethodInvocation sJavaDocs length BinaryOperation || BinaryOperation == MethodInvocation sJavaDocs MemberReference j charAt Literal ' ' BinaryOperation == MethodInvocation sJavaDocs MemberReference j charAt Literal '\t' BlockStatement StatementExpression MemberReference ++ j IfStatement BinaryOperation < MemberReference j MethodInvocation sJavaDocs length BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator nTemp MethodInvocation sJavaDocs Literal '\n' MemberReference nStartPos indexOf IfStatement BinaryOperation == MemberReference nTemp Literal - 1 BlockStatement StatementExpression Assignment MemberReference nTemp MethodInvocation sJavaDocs length = BlockStatement StatementExpression MemberReference ++ nTemp IfStatement BinaryOperation != MemberReference sCurrentTagName Literal null BlockStatement StatementExpression MethodInvocation sbPureDocs MethodInvocation sJavaDocs MemberReference nStartPos MemberReference nTemp substring append StatementExpression Assignment MemberReference sCurrentTagData BinaryOperation + Literal " " MethodInvocation sJavaDocs MemberReference nStartPos MemberReference nTemp substring += BlockStatement StatementExpression MethodInvocation sbPureDocs MethodInvocation sJavaDocs MemberReference nStartPos MemberReference nTemp substring append StatementExpression Assignment MemberReference nStartPos MemberReference nTemp = StatementExpression Assignment MemberReference fHadAsterisk Literal false = StatementExpression Assignment MemberReference sJavaDocs MethodInvocation sbPureDocs toString = StatementExpression Assignment MemberReference sJavaDocs MethodInvocation MemberReference sJavaDocs = StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement MethodInvocation Model MethodInvocation MemberReference Argo MemberReference sJavaDocs buildTaggedValue getExtensionMechanismsFactory addTaggedValue getExtensionMechanismsHelper	1
MethodDeclaration Modifier public final FormalParameter ReferenceType ConfigurationKey key FormalParameter ReferenceType p IfStatement BinaryOperation != MemberReference pcl Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal MethodInvocation key getKey Literal ")" debug StatementExpression MethodInvocation pcl MethodInvocation key getKey MemberReference p	1
MethodDeclaration Modifier public ReferenceType Set TypeArgument ReferenceType ResolvedCritic ReturnStatement MemberReference	0
MethodDeclaration Modifier public final mLESSTHANOREQUALTO FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference LESSTHANOREQUALTO = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal "<=" match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize ReturnStatement ClassCreator ReferenceType Dimension Literal 180 Literal 80	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator tr MemberReference dm LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation Model MethodInvocation MemberReference tr getFacade LocalVariableDeclaration ReferenceType Object VariableDeclarator sv MethodInvocation Model MethodInvocation MemberReference tr getSource getFacade IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference sv getKind getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getFork getPseudostateKind getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration BasicType boolean VariableDeclarator hasTrigger BinaryOperation && BinaryOperation && BinaryOperation != MemberReference t Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference t getName getFacade Literal null BinaryOperation > MethodInvocation Model MethodInvocation MemberReference t getName MethodInvocation length getFacade Literal 0 IfStatement MemberReference hasTrigger BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ns ReturnStatement MethodInvocation impl MemberReference ns	0
MethodDeclaration Modifier public BasicType boolean StatementExpression MethodInvocation LOG Literal has been chosen on a Mac" info ReturnStatement MethodInvocation ProjectBrowser MethodInvocation getInstance	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType SubmachineState	0
MethodDeclaration Modifier public ReferenceType pop LocalVariableDeclaration ReferenceType VariableDeclarator item SuperMethodInvocation pop IfStatement BinaryOperation || BinaryOperation == MethodInvocation size Literal 0 MethodInvocation ! MethodInvocation peek BlockStatement StatementExpression MethodInvocation Literal Literal false ReturnStatement MemberReference item	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier protected FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation e MethodInvocation trim getText TryStatement StatementExpression MethodInvocation MethodInvocation Integer MemberReference parseInt setFontSize CatchClause CatchClauseParameter NumberFormatException e1 StatementExpression MethodInvocation LOG Literal while parsing Font MemberReference e1 error	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object StatementExpression MethodInvocation impl MemberReference handle MemberReference	0
MethodDeclaration Modifier public BasicType int LA FormalParameter BasicType int i IfStatement BinaryOperation == MemberReference i Literal 0 BlockStatement ReturnStatement Literal 0 IfStatement BinaryOperation < MemberReference i Literal 0 BlockStatement StatementExpression MemberReference ++ i IfStatement BinaryOperation < BinaryOperation - BinaryOperation + MemberReference p MemberReference i Literal 1 Literal 0 BlockStatement IfStatement BinaryOperation >= BinaryOperation - BinaryOperation + MemberReference p MemberReference i Literal 1 MemberReference data length BlockStatement ReturnStatement BinaryOperation + BinaryOperation & MemberReference ArraySelector BinaryOperation - BinaryOperation + MemberReference p MemberReference i Literal 1 data Literal 0xff Literal 4	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object target ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Object getMethod FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator MemberReference obsoleteFeatures BlockStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference getFacade MethodInvocation name MethodInvocation Model MethodInvocation MemberReference getName getFacade equals BlockStatement ReturnStatement MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier public static ReferenceType ImageIcon lookupIconResource FormalParameter ReferenceType String resource FormalParameter ReferenceType String desc FormalParameter ReferenceType ClassLoader loader StatementExpression Assignment MemberReference resource MethodInvocation MemberReference resource = IfStatement MethodInvocation MemberReference resource BlockStatement ReturnStatement Cast ReferenceType ImageIcon MethodInvocation MemberReference resource get LocalVariableDeclaration ReferenceType ImageIcon VariableDeclarator res Literal null LocalVariableDeclaration ReferenceType java ReferenceType net ReferenceType URL VariableDeclarator imgURL MethodInvocation MemberReference resource MemberReference loader IfStatement BinaryOperation != MemberReference imgURL Literal null BlockStatement StatementExpression Assignment MemberReference res ClassCreator ReferenceType ImageIcon MemberReference imgURL MemberReference desc = SynchronizedStatement MemberReference StatementExpression MethodInvocation MemberReference resource MemberReference res put ReturnStatement MemberReference res	0
MethodDeclaration Modifier protected Annotation Override FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int w FormalParameter BasicType int h IfStatement BinaryOperation == MethodInvocation getNameFig Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator oldBounds MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration BasicType int VariableDeclarator adjacentindex Literal - 1 LocalVariableDeclaration ReferenceType List VariableDeclarator regionsList Literal null LocalVariableDeclaration BasicType int VariableDeclarator index Literal 0 IfStatement BinaryOperation != MethodInvocation getEnclosingFig Literal null BlockStatement StatementExpression Assignment MemberReference x MemberReference oldBounds x = StatementExpression Assignment MemberReference w MemberReference oldBounds width = LocalVariableDeclaration ReferenceType FigCompositeState VariableDeclarator f Cast ReferenceType FigCompositeState MethodInvocation getEnclosingFig StatementExpression Assignment MemberReference regionsList MethodInvocation f getEnclosedFigs = StatementExpression Assignment MemberReference index MethodInvocation regionsList This indexOf = IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MemberReference curHandle index Literal 0 BinaryOperation == MemberReference curHandle index Literal 2 BinaryOperation > MemberReference index Literal 0 BlockStatement StatementExpression Assignment MemberReference adjacentindex BinaryOperation - MemberReference index Literal 1 = IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MemberReference curHandle index Literal 5 BinaryOperation == MemberReference curHandle index Literal 7 BinaryOperation < MemberReference index BinaryOperation - MethodInvocation regionsList size Literal 1 BlockStatement StatementExpression Assignment MemberReference adjacentindex BinaryOperation + MemberReference index Literal 1 = IfStatement BinaryOperation <= MemberReference h MethodInvocation MemberReference height getMinimumSize BlockStatement IfStatement BinaryOperation <= MemberReference h MemberReference oldBounds height BlockStatement StatementExpression Assignment MemberReference h MemberReference oldBounds height = StatementExpression Assignment MemberReference y MemberReference oldBounds y = IfStatement BinaryOperation == MemberReference adjacentindex Literal - 1 BlockStatement StatementExpression Assignment MemberReference x MemberReference oldBounds x = StatementExpression Assignment MemberReference y MemberReference oldBounds y = StatementExpression Assignment MemberReference h MemberReference oldBounds height = IfStatement BinaryOperation > MemberReference w MethodInvocation f MemberReference width getBounds BlockStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator fR MethodInvocation f getBounds StatementExpression MethodInvocation f MemberReference fR x MemberReference fR y BinaryOperation + MemberReference w Literal 6 MemberReference fR height setBounds BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator hIncrement BinaryOperation - MemberReference oldBounds height MemberReference h LocalVariableDeclaration ReferenceType FigConcurrentRegion VariableDeclarator adjacentFig Cast ReferenceType FigConcurrentRegion MethodInvocation regionsList MemberReference adjacentindex get IfStatement BinaryOperation <= BinaryOperation + MethodInvocation adjacentFig MemberReference height getBounds MemberReference hIncrement MethodInvocation adjacentFig MemberReference height getMinimumSize BlockStatement StatementExpression Assignment MemberReference y MemberReference oldBounds y = StatementExpression Assignment MemberReference h MemberReference oldBounds height = BlockStatement IfStatement BinaryOperation || BinaryOperation == MemberReference curHandle index Literal 0 BinaryOperation == MemberReference curHandle index Literal 2 BlockStatement StatementExpression Cast ReferenceType FigConcurrentRegion MethodInvocation regionsList MemberReference adjacentindex get IfStatement BinaryOperation || BinaryOperation == MemberReference curHandle index Literal 5 BinaryOperation == MemberReference curHandle index Literal 7 BlockStatement StatementExpression Cast ReferenceType FigConcurrentRegion MethodInvocation regionsList MemberReference adjacentindex get StatementExpression MethodInvocation MemberReference x MemberReference y BinaryOperation + MemberReference x MemberReference w MemberReference y setShape StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MemberReference BinaryOperation + MemberReference y MemberReference BinaryOperation - MemberReference w BinaryOperation * Literal 2 MemberReference MemberReference nameDim height setBounds getNameFig StatementExpression MethodInvocation MethodInvocation BinaryOperation + MemberReference x MemberReference BinaryOperation + BinaryOperation + BinaryOperation + MemberReference y MemberReference nameDim height MemberReference MemberReference BinaryOperation - MemberReference w BinaryOperation * Literal 2 MemberReference BinaryOperation - BinaryOperation - BinaryOperation - BinaryOperation - MemberReference h MemberReference nameDim height MemberReference MemberReference MemberReference setBounds StatementExpression MethodInvocation MethodInvocation MemberReference x MemberReference y MemberReference w MemberReference h setBounds getBigPort StatementExpression MethodInvocation cover MemberReference x MemberReference y MemberReference w MemberReference h setBounds StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation Literal MemberReference oldBounds MethodInvocation getBounds	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object elem FormalParameter ReferenceType Object extend StatementExpression MethodInvocation impl MemberReference elem MemberReference extend	0
MethodDeclaration Modifier private addElementListeners FormalParameter ReferenceType Set TypeArgument ReferenceType Object listenerSet ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator listener MemberReference listenerSet BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator property MemberReference ArraySelector Literal 1 listener IfStatement BinaryOperation == MemberReference property Literal null BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 listener IfStatement BinaryOperation instanceof MemberReference property ReferenceType String BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 listener Cast ReferenceType String MemberReference property IfStatement BinaryOperation instanceof MemberReference property ReferenceType String BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 listener Cast ReferenceType String MemberReference property BlockStatement ThrowStatement ClassCreator ReferenceType RuntimeException Literal "Internal error in addElementListeners"	1
MethodDeclaration Modifier public BasicType int getIconWidth ReturnStatement Literal 9	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionCreatePseudostate MethodInvocation Model MethodInvocation getDeepHistory getPseudostateKind Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override BasicType boolean doesAccept FormalParameter ReferenceType Object objectToAccept IfStatement BinaryOperation instanceof MemberReference objectToAccept ReferenceType CommentEdge BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAClass getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAInterface getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAModel getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isASubsystem getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAPackage getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAComment getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAAssociation getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAEnumeration getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isADataType getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAStereotype getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAException getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isASignal getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAActor getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAUseCase getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAObject getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isANodeInstance getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAComponentInstance getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isANode getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAComponent getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAAssociationEnd getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isADependency getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAGeneralization getFacade BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object source FormalParameter ReferenceType Object target IfStatement BinaryOperation || BinaryOperation instanceof MemberReference source ReferenceType ModelElement BinaryOperation instanceof MemberReference target ReferenceType ModelElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it Cast ReferenceType ModelElement MemberReference source LocalVariableDeclaration ReferenceType Collection VariableDeclarator Cast ReferenceType ModelElement MemberReference target StatementExpression MethodInvocation clear WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression MethodInvocation MethodInvocation Cast ReferenceType TaggedValue MethodInvocation it next add	0
MethodDeclaration Modifier public Annotation Override ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator ClassCreator ReferenceType ArgoJMenu Literal StatementExpression MethodInvocation ClassCreator ReferenceType add StatementExpression MethodInvocation ClassCreator ReferenceType add StatementExpression MethodInvocation MethodInvocation add StatementExpression MethodInvocation MethodInvocation add StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MemberReference add LocalVariableDeclaration ReferenceType ArgoJMenu VariableDeclarator ClassCreator ReferenceType ArgoJMenu Literal ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator action MethodInvocation getActions BlockStatement StatementExpression MethodInvocation MemberReference action add IfStatement BinaryOperation > MethodInvocation getComponentCount Literal 0 BlockStatement StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MemberReference add StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MethodInvocation BinaryOperation | BinaryOperation | MemberReference ABSTRACT MemberReference LEAF MemberReference ROOT buildModifierPopUp add StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MethodInvocation buildVisibilityPopUp add ReturnStatement MemberReference popUpActions	1
MethodDeclaration Modifier private ReferenceType Object IfStatement BinaryOperation && BinaryOperation == MemberReference Literal null BinaryOperation != MethodInvocation Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation getModelElement = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Model createModel LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression MethodInvocation modelImpl LocalVariableDeclaration ReferenceType Model VariableDeclarator myModel MethodInvocation MethodInvocation getModel MethodInvocation createModel StatementExpression SuperMethodInvocation MemberReference myModel ReturnStatement MemberReference myModel	1
MethodDeclaration Modifier public addInterface FormalParameter ReferenceType Object FormalParameter BasicType boolean StatementExpression MethodInvocation MemberReference MemberReference addClassifier	0
MethodDeclaration Modifier public Annotation Override BasicType boolean LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget ReturnStatement BinaryOperation && BinaryOperation != MemberReference t Literal null BinaryOperation == MethodInvocation Model MethodInvocation MemberReference t getGuard getFacade Literal null	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference theKindsObject	0
MethodDeclaration Modifier public ReferenceType Signal ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Command FormalParameter ReferenceType Object modelElement ReturnStatement ClassCreator ReferenceType MemberReference modelElement	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unchecked" ReferenceType Collection FormalParameter ReferenceType Object root LocalVariableDeclaration ReferenceType Collection VariableDeclarator c ClassCreator ReferenceType HashSet StatementExpression MethodInvocation c MethodInvocation Model MethodInvocation MemberReference root MethodInvocation Model MethodInvocation getPackage getMetaTypes getModelManagementHelper add StatementExpression MethodInvocation c MethodInvocation Model MethodInvocation MemberReference root MethodInvocation Model MethodInvocation getClassifier getMetaTypes getModelManagementHelper add ReturnStatement MemberReference c	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object value StatementExpression MethodInvocation Model MethodInvocation MemberReference modelElement Cast ReferenceType Boolean MemberReference value getCoreHelper	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getUMLClass getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Set TypeArgument ReferenceType Critic StatementExpression Assignment This MemberReference critics MemberReference =	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier private rerouteAssociation FormalParameter ReferenceType Object newNode FormalParameter ReferenceType Object oldNode FormalParameter ReferenceType Object edge FormalParameter BasicType boolean isSource IfStatement BinaryOperation || MethodInvocation ! Model getFacade MethodInvocation ! Model getFacade BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator otherNode Literal null IfStatement MemberReference isSource BlockStatement StatementExpression Assignment MemberReference otherNode MethodInvocation Model MethodInvocation MemberReference edge getCoreHelper = BlockStatement StatementExpression Assignment MemberReference otherNode MethodInvocation Model MethodInvocation MemberReference edge getSource getCoreHelper = IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference newNode isAInterface getFacade MethodInvocation Model MethodInvocation MemberReference otherNode isAInterface getFacade BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator edgeAssoc MemberReference edge LocalVariableDeclaration ReferenceType Object VariableDeclarator theEnd Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator theOtherEnd Literal null LocalVariableDeclaration ReferenceType Collection VariableDeclarator connections MethodInvocation Model MethodInvocation MemberReference edgeAssoc getConnections getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation connections iterator IfStatement MemberReference isSource BlockStatement StatementExpression Assignment MemberReference theEnd MethodInvocation iter next = StatementExpression Assignment MemberReference theOtherEnd MethodInvocation iter next = BlockStatement StatementExpression Assignment MemberReference theOtherEnd MethodInvocation iter next = StatementExpression Assignment MemberReference theEnd MethodInvocation iter next = StatementExpression MethodInvocation Model MethodInvocation MemberReference theEnd MemberReference newNode getCoreHelper	1
MethodDeclaration Modifier public ReferenceType Object getValueAt FormalParameter BasicType int row FormalParameter BasicType int col IfStatement BinaryOperation || BinaryOperation < MemberReference row Literal 0 BinaryOperation >= MemberReference row MethodInvocation size BlockStatement ReturnStatement Literal "bad row!" IfStatement BinaryOperation || BinaryOperation < MemberReference col Literal 0 BinaryOperation >= MemberReference col TernaryExpression MemberReference showInDiagramColumn Literal 4 Literal 3 BlockStatement ReturnStatement Literal "bad LocalVariableDeclaration ReferenceType Object VariableDeclarator rowObj MethodInvocation MemberReference row get IfStatement BinaryOperation instanceof MemberReference rowObj ReferenceType Diagram BlockStatement LocalVariableDeclaration ReferenceType Diagram VariableDeclarator d Cast ReferenceType Diagram MemberReference rowObj SwitchStatement MemberReference col SwitchStatementCase Literal 0 IfStatement BinaryOperation instanceof MemberReference d ReferenceType UMLDiagram BlockStatement ReturnStatement Cast ReferenceType UMLDiagram MemberReference d ReturnStatement Literal null SwitchStatementCase Literal 1 ReturnStatement MethodInvocation d getName SwitchStatementCase Literal 2 ReturnStatement TernaryExpression MemberReference showInDiagramColumn MethodInvocation Translator Literal "dialog.find.not-applicable" localize MethodInvocation MemberReference d SwitchStatementCase Literal 3 ReturnStatement MethodInvocation MemberReference d SwitchStatementCase IfStatement MethodInvocation Model MethodInvocation MemberReference rowObj isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Diagram VariableDeclarator d Literal null IfStatement BinaryOperation != MemberReference diagrams Literal null BlockStatement StatementExpression Assignment MemberReference d MethodInvocation diagrams MemberReference row get = SwitchStatement MemberReference col SwitchStatementCase Literal 0 ReturnStatement MethodInvocation Model MethodInvocation MemberReference rowObj getUMLClassName getFacade SwitchStatementCase Literal 1 ReturnStatement MethodInvocation Model MethodInvocation MemberReference rowObj getName getFacade SwitchStatementCase Literal 2 ReturnStatement TernaryExpression BinaryOperation == MemberReference d Literal null MethodInvocation Translator Literal "dialog.find.not-applicable" localize MethodInvocation d getName SwitchStatementCase Literal 3 ReturnStatement Literal "docs" SwitchStatementCase SwitchStatement MemberReference col SwitchStatementCase Literal 0 IfStatement BinaryOperation == MemberReference rowObj Literal null BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator clsName MethodInvocation rowObj MethodInvocation getName getClass LocalVariableDeclaration BasicType int VariableDeclarator lastDot MethodInvocation clsName Literal "." lastIndexOf ReturnStatement MethodInvocation clsName BinaryOperation + MemberReference lastDot Literal 1 substring SwitchStatementCase Literal 1 ReturnStatement Literal "" SwitchStatementCase Literal 2 ReturnStatement Literal SwitchStatementCase Literal 3 ReturnStatement Literal "docs" SwitchStatementCase ReturnStatement Literal "unknown!"	1
MethodDeclaration Modifier private IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation state MethodInvocation MethodInvocation getOwner MethodInvocation getNotationSettings toString setText	0
MethodDeclaration Modifier private ReferenceType UMLValueSpecificationValueField createField FormalParameter ReferenceType String sType IfStatement BinaryOperation != MemberReference scrollPane Literal null BlockStatement StatementExpression MethodInvocation MemberReference scrollPane remove LocalVariableDeclaration ReferenceType UMLValueSpecificationValueField VariableDeclarator ret Literal null TryStatement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator oClass MethodInvocation Class BinaryOperation + Literal MemberReference sType forName LocalVariableDeclaration ReferenceType Constructor TypeArgument ? VariableDeclarator constructeur MethodInvocation oClass ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType UMLValueSpecificationModel ClassReference BasicType boolean getConstructor StatementExpression Assignment MemberReference ret Cast ReferenceType UMLValueSpecificationValueField MethodInvocation constructeur ArrayCreator ReferenceType Object ArrayInitializer MemberReference model Literal true newInstance = CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Unknow type " MemberReference sType Literal " : " MemberReference e MemberReference e error ReturnStatement Literal null StatementExpression Assignment MemberReference scrollPane MethodInvocation ret getComponent = LocalVariableDeclaration ReferenceType VariableDeclarator c ClassCreator ReferenceType StatementExpression Assignment MemberReference c fill MemberReference BOTH = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c gridwidth MemberReference RELATIVE = StatementExpression Assignment MemberReference c gridwidth MemberReference RELATIVE = StatementExpression Assignment MemberReference c weightx Literal 1 = StatementExpression Assignment MemberReference c weighty Literal 1 = StatementExpression MethodInvocation MemberReference scrollPane MemberReference c add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type LocalVariableDeclaration ReferenceType Object VariableDeclarator kind MethodInvocation Model MethodInvocation MemberReference modelElement getKind getFacade IfStatement BinaryOperation == MemberReference kind Literal null BlockStatement ReturnStatement Literal null IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getDirectionKind equals BlockStatement ReturnStatement MemberReference IN IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getInOutParameter getDirectionKind equals BlockStatement ReturnStatement MemberReference INOUT IfStatement MethodInvocation kind MethodInvocation Model MethodInvocation getOutParameter getDirectionKind equals BlockStatement ReturnStatement MemberReference OUT BlockStatement ReturnStatement MemberReference RETURN	0
MethodDeclaration Modifier public ReferenceType Object getMetaType IfStatement BinaryOperation > MethodInvocation metaTypes size Literal 0 BlockStatement ReturnStatement MethodInvocation metaTypes Literal 0 get ReturnStatement MethodInvocation getterSetterManager MemberReference propertyName getMetaType	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object collaboration TryStatement IfStatement BinaryOperation == MemberReference collaboration Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "A null collaboration was supplied" IfStatement MethodInvocation ! Model getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Expected a The type received was " MethodInvocation collaboration MethodInvocation getName getClass CatchClause CatchClauseParameter IllegalArgumentException e StatementExpression MethodInvocation LOG Literal "Illegal to MemberReference e error ThrowStatement MemberReference e StatementExpression MethodInvocation MemberReference collaboration	0
MethodDeclaration Modifier public BasicType boolean isValidElement FormalParameter Modifier final ReferenceType Object element FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation MethodInvocation MemberReference element contains MemberReference element MemberReference types	0
MethodDeclaration Modifier protected FormalParameter ReferenceType Object element FormalParameter ReferenceType String property StatementExpression MethodInvocation listeners ArrayCreator ReferenceType Object ArrayInitializer MemberReference element MemberReference property add StatementExpression MethodInvocation Model MethodInvocation This MemberReference element MemberReference property addModelEventListener getPump	0
MethodDeclaration Modifier public load FormalParameter ReferenceType Project project FormalParameter ReferenceType InputStream inputStream OpenException StatementExpression MethodInvocation MemberReference project ClassCreator ReferenceType InputSource MemberReference inputStream load	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object handle FormalParameter ReferenceType String propertyName FormalParameter ReferenceType Class TypeArgument ? type LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation MemberReference propertyName get IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement MethodInvocation MemberReference handle MemberReference type get ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getUMLClass getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "Not a UML2 model element"	0
MethodDeclaration Modifier protected FormalParameter BasicType boolean events StatementExpression Assignment This MemberReference fireListEvents MemberReference events =	0
MethodDeclaration Modifier public Annotation Override ReferenceType Color getLineColor ReturnStatement MethodInvocation getLineColor	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType Iterator childIterator FormalParameter ReferenceType Object o LocalVariableDeclaration ReferenceType Object VariableDeclarator c MemberReference o LocalVariableDeclaration ReferenceType Collection VariableDeclarator specs ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference c getSpecializations getFacade IfStatement BinaryOperation == MemberReference specs Literal null BlockStatement ReturnStatement MethodInvocation Collections MethodInvocation iterator emptySet LocalVariableDeclaration ReferenceType List VariableDeclarator specClasses ClassCreator ReferenceType ArrayList MethodInvocation specs size ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator g MemberReference specs BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ge MethodInvocation Model MethodInvocation MemberReference g getSpecific getFacade IfStatement BinaryOperation != MemberReference ge Literal null BlockStatement StatementExpression MethodInvocation specClasses MemberReference ge add ReturnStatement MethodInvocation specClasses iterator	1
MethodDeclaration ReferenceType String generateCpp FormalParameter ReferenceType Object o StatementExpression Assignment MemberReference generatorPass MemberReference SOURCE_PASS = LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation MethodInvocation Literal 1 substring MemberReference o Literal null Literal "/" generateRelativePackage IfStatement BinaryOperation > MethodInvocation name length Literal 0 StatementExpression Assignment MemberReference name Literal "/" += StatementExpression Assignment MemberReference name BinaryOperation + MethodInvocation MethodInvocation MemberReference o getName getFacade Literal ".cpp" += LocalVariableDeclaration ReferenceType String VariableDeclarator ret MethodInvocation MemberReference o MemberReference name generateFileAsString StatementExpression MethodInvocation StatementExpression Assignment MemberReference generatorPass MemberReference NONE_PASS = ReturnStatement MemberReference ret	1
MethodDeclaration Modifier private StatementExpression Assignment MemberReference generate MethodInvocation ClassCreator ReferenceType JMenu MethodInvocation Literal menuLocalize add = StatementExpression MethodInvocation MemberReference generate Literal setMnemonic LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation generate ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation generate ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference Literal all classes" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation generate addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation generate ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference Literal code for project" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation generate ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference Literal for project code generation" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator	0
MethodDeclaration BasicType boolean ReturnStatement MemberReference ArraySelector Literal 6 t	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object context ReturnStatement Literal false	0
MethodDeclaration Modifier public FormalParameter ReferenceType String path StatementExpression MethodInvocation modelImpl MemberReference path	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator vec ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Collection VariableDeclarator events MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade IfStatement BinaryOperation != MemberReference events Literal null BlockStatement StatementExpression MethodInvocation vec MemberReference events addAll ReturnStatement MemberReference vec	0
MethodDeclaration Modifier protected FormalParameter Modifier final ReferenceType SuffixFilter StatementExpression Assignment MemberReference MemberReference =	0
MethodDeclaration Modifier protected ReferenceType String getDialogTitle ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType DiagramElement ReturnStatement MemberReference	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType KeyboardFocusManager VariableDeclarator focusManager MethodInvocation KeyboardFocusManager getCurrentKeyboardFocusManager LocalVariableDeclaration ReferenceType Component VariableDeclarator focusOwner MethodInvocation focusManager getFocusOwner IfStatement BinaryOperation instanceof MemberReference focusOwner ReferenceType FigTextEditor BlockStatement StatementExpression Cast ReferenceType FigTextEditor MemberReference focusOwner IfStatement BinaryOperation instanceof MemberReference focusOwner ReferenceType JTable BlockStatement LocalVariableDeclaration ReferenceType JTable VariableDeclarator table Cast ReferenceType JTable MemberReference focusOwner IfStatement MethodInvocation table BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator ce MethodInvocation table getCellEditor IfStatement BinaryOperation != MemberReference ce Literal null BlockStatement StatementExpression MethodInvocation ce LocalVariableDeclaration Modifier final ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator selectedValues MethodInvocation MethodInvocation getSelectedValues StatementExpression MethodInvocation p MethodInvocation Arrays MemberReference selectedValues asList moveToTrash	1
MethodDeclaration Modifier public ReferenceType Object getExpression ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation TargetManager MethodInvocation getTarget getInstance getCondition getFacade	0
MethodDeclaration Modifier public ReferenceType Stereotype buildStereotype FormalParameter Modifier final ReferenceType String name FormalParameter Modifier final ReferenceType Object namespace LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereo MethodInvocation StatementExpression MethodInvocation stereo MemberReference name setName IfStatement BinaryOperation instanceof MemberReference namespace ReferenceType BlockStatement StatementExpression MethodInvocation stereo Cast ReferenceType MemberReference namespace setPackage StatementExpression MethodInvocation MethodInvocation MemberReference stereo add LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Build a StatementExpression MethodInvocation MethodInvocation MemberReference cmd execute getCommandStack ReturnStatement Cast ReferenceType Stereotype MethodInvocation run MethodInvocation Literal 0 get	0
MethodDeclaration Modifier public ReferenceType Command ReturnStatement MethodInvocation getterSetterManager MemberReference propertyName MemberReference umlElement	0
MethodDeclaration Modifier public ReferenceType Object getTransition FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines MethodInvocation MethodInvocation Cast ReferenceType Action MemberReference handle getTransition MemberReference handle getRefOutermostPackage CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase ReturnStatement Literal Team" SwitchStatementCase ReturnStatement Literal for adding property on SwitchStatementCase ReturnStatement Literal "Not yet." SwitchStatementCase ReturnStatement Literal SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier private BasicType boolean isReadOnly TryStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getOwner isReadOnly getModelManagementHelper CatchClause CatchClauseParameter InvalidElementException e ReturnStatement Literal true	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Operation BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem LocalVariableDeclaration ReferenceType Operation VariableDeclarator oper Cast ReferenceType Operation MemberReference elem StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage MethodInvocation oper refOutermostPackage deleteCollection getUmlHelper StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage MethodInvocation oper refOutermostPackage deleteCollection getUmlHelper	0
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType StatementExpression MethodInvocation Literal true setVisible	0
MethodDeclaration Modifier private static FormalParameter ReferenceType Editor editor FormalParameter ReferenceType thisFig FormalParameter ReferenceType Layer lay StatementExpression MethodInvocation thisFig MethodInvocation thisFig LocalVariableDeclaration ReferenceType MutableGraphModel VariableDeclarator mutableGraphModel Cast ReferenceType MutableGraphModel MethodInvocation editor getGraphModel StatementExpression MethodInvocation mutableGraphModel MethodInvocation thisFig getOwner addNode LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator drawingArea MethodInvocation ProjectBrowser MethodInvocation MethodInvocation getBounds getInstance StatementExpression MethodInvocation thisFig makeEdgePort LocalVariableDeclaration ReferenceType VariableDeclarator tee MethodInvocation thisFig getEdgePort StatementExpression MethodInvocation thisFig LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation tee getX LocalVariableDeclaration BasicType int VariableDeclarator y MethodInvocation tee getY LocalVariableDeclaration ReferenceType DiagramSettings VariableDeclarator settings Cast ReferenceType ArgoDiagram Cast ReferenceType LayerPerspective MemberReference lay StatementExpression MethodInvocation LOG Literal "Creating Class box for association class" info LocalVariableDeclaration ReferenceType FigClassAssociationClass VariableDeclarator figNode ClassCreator ReferenceType FigClassAssociationClass MethodInvocation thisFig getOwner ClassCreator ReferenceType Rectangle MemberReference x MemberReference y Literal 0 Literal 0 MemberReference settings StatementExpression Assignment MemberReference y BinaryOperation - MemberReference y MemberReference DISTANCE = IfStatement BinaryOperation < MemberReference y Literal 0 BlockStatement StatementExpression Assignment MemberReference y BinaryOperation + BinaryOperation + MethodInvocation tee getY MethodInvocation figNode getHeight MemberReference DISTANCE = IfStatement BinaryOperation > BinaryOperation + MemberReference x MethodInvocation figNode getWidth MethodInvocation drawingArea getWidth BlockStatement StatementExpression Assignment MemberReference x BinaryOperation - MethodInvocation tee getX MemberReference DISTANCE = StatementExpression MethodInvocation figNode MemberReference x MemberReference y setLocation StatementExpression MethodInvocation lay MemberReference figNode add LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType MemberReference figNode MemberReference thisFig MemberReference settings StatementExpression MethodInvocation lay MemberReference add StatementExpression MethodInvocation damage StatementExpression MethodInvocation figNode damage	1
MethodDeclaration Modifier public parse FormalParameter Modifier final ReferenceType Object umlMessage FormalParameter Modifier final ReferenceType String text TryStatement StatementExpression MethodInvocation MemberReference umlMessage MemberReference text CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator msg Literal LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ArgoEventTypes This MethodInvocation Translator MemberReference msg MemberReference args	0
MethodDeclaration Modifier public ReferenceType String getName FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType Class TypeArgument ? VariableDeclarator clazz IfStatement BinaryOperation instanceof MemberReference modelElement ReferenceType Class BlockStatement StatementExpression Assignment MemberReference clazz Cast ReferenceType Class TypeArgument ? MemberReference modelElement = BlockStatement StatementExpression Assignment MemberReference clazz MethodInvocation modelElement getClass = LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation clazz getName LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation + MethodInvocation name Literal '.' lastIndexOf Literal 1 IfStatement MethodInvocation name Literal true MemberReference Literal Literal 0 Literal 3 regionMatches BlockStatement StatementExpression Assignment MemberReference Literal 3 += LocalVariableDeclaration BasicType int VariableDeclarator endName MethodInvocation name Literal '$' MemberReference indexOf IfStatement BinaryOperation < MemberReference endName Literal 0 BlockStatement StatementExpression Assignment MemberReference endName MethodInvocation name length = ReturnStatement MethodInvocation name MemberReference MemberReference endName substring	0
MethodDeclaration Modifier private ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator content ClassCreator ReferenceType StatementExpression MethodInvocation content ClassCreator ReferenceType GridBagLayout setLayout LocalVariableDeclaration ReferenceType VariableDeclarator constraints ClassCreator ReferenceType StatementExpression Assignment MemberReference constraints anchor MemberReference WEST = StatementExpression Assignment MemberReference constraints fill MemberReference HORIZONTAL = StatementExpression Assignment MemberReference constraints gridx Literal 0 = StatementExpression Assignment MemberReference constraints gridy Literal 0 = StatementExpression Assignment MemberReference constraints insets ClassCreator ReferenceType Insets Literal 2 Literal 2 Literal 2 Literal 2 = StatementExpression MethodInvocation content ClassCreator ReferenceType JLabel Literal MemberReference constraints add StatementExpression Assignment MemberReference constraints gridy Literal 1 = StatementExpression Assignment MemberReference ClassCreator ReferenceType JComboBox = StatementExpression MethodInvocation Literal select calls of this addItem StatementExpression MethodInvocation Literal calls automatically with a chosen addItem StatementExpression MethodInvocation This StatementExpression MethodInvocation content MemberReference MemberReference constraints add StatementExpression Assignment MemberReference MethodInvocation = StatementExpression Assignment MemberReference MethodInvocation = StatementExpression Assignment MemberReference constraints gridy Literal 2 = StatementExpression Assignment MemberReference changingPanel ClassCreator ReferenceType ClassCreator ReferenceType Literal 0 Literal 0 = StatementExpression MethodInvocation changingPanel MemberReference MemberReference CENTER add StatementExpression MethodInvocation content MemberReference changingPanel MemberReference constraints add ReturnStatement MemberReference content	0
MethodDeclaration Modifier public Annotation Override ReferenceType Point getClosestPoint FormalParameter ReferenceType Point anotherPt LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer MemberReference r x BinaryOperation + MemberReference r x MemberReference BinaryOperation + MemberReference r x MemberReference r width BinaryOperation + MemberReference r x MemberReference r width BinaryOperation - BinaryOperation + MemberReference r x MemberReference r width MemberReference MemberReference r x MemberReference r x LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer BinaryOperation + MemberReference r y MemberReference MemberReference r y MemberReference r y BinaryOperation - BinaryOperation + MemberReference r y MemberReference r height MemberReference BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference r height BinaryOperation + MemberReference r y MemberReference LocalVariableDeclaration ReferenceType Point VariableDeclarator p MethodInvocation Geometry MemberReference MemberReference Literal 7 MemberReference anotherPt ptClosestTo ReturnStatement MemberReference p	1
MethodDeclaration Modifier public BasicType int FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType int ReturnStatement MemberReference	0
MethodDeclaration Modifier private advance FeatureNotSupportedException LocalVariableDeclaration BasicType boolean VariableDeclarator skipping Literal true DoStatement MemberReference skipping BlockStatement IfStatement BinaryOperation < MemberReference index MethodInvocation tokens size BlockStatement StatementExpression Assignment MemberReference curtok MethodInvocation tokens MemberReference index get = BlockStatement StatementExpression Assignment MemberReference curtok MemberReference EOF = StatementExpression MemberReference ++ index SwitchStatement MemberReference curtok id SwitchStatementCase MemberReference TokenID SingleComment BreakStatement SwitchStatementCase MemberReference TokenID MultiComment LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation strings MethodInvocation Literal "\n" split MemberReference curtok data get StatementExpression Assignment MemberReference lineCount BinaryOperation - MemberReference s length Literal 1 += BreakStatement SwitchStatementCase MemberReference TokenID Newline StatementExpression MemberReference ++ lineCount BreakStatement SwitchStatementCase MemberReference TokenID Hash IfStatement MemberReference ! inPPDirective BlockStatement StatementExpression MethodInvocation parsePreprocessorDirective IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference curtok id MemberReference TokenID Newline BinaryOperation != MemberReference curtok id MemberReference TokenID SingleComment BinaryOperation != MemberReference curtok id MemberReference TokenID MultiComment BinaryOperation != MemberReference curtok id MemberReference TokenID Hash BlockStatement StatementExpression Assignment MemberReference skipping Literal false = IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Hash BlockStatement StatementExpression MemberReference -- index BlockStatement StatementExpression Assignment MemberReference skipping Literal false = BreakStatement SwitchStatementCase StatementExpression Assignment MemberReference skipping Literal false = BreakStatement	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object object IfStatement BinaryOperation instanceof MemberReference object ReferenceType UMLActivityDiagram BlockStatement ReturnStatement ClassCreator ReferenceType ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean isAModel FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Model	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object abase FormalParameter ReferenceType Object aninclusion ReturnStatement MethodInvocation impl MemberReference abase MemberReference aninclusion	0
MethodDeclaration Modifier protected FormalParameter BasicType boolean allowed StatementExpression Assignment This MemberReference removeFromDiagram MemberReference allowed =	0
MethodDeclaration Modifier private parsePossibleAttributes FormalParameter BasicType boolean FeatureNotSupportedException WhileStatement BinaryOperation == MemberReference curtok id MemberReference TokenID LBracket BlockStatement StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference curmods MethodInvocation parseAttributeModifiers = IfStatement BinaryOperation && MemberReference BinaryOperation == MemberReference curmods MemberReference Modifier BlockStatement BlockStatement LocalVariableDeclaration BasicType long VariableDeclarator attribMask MemberReference ~ Modifier IfStatement BinaryOperation != BinaryOperation & Cast BasicType long MemberReference curmods MemberReference attribMask Cast BasicType long MemberReference Modifier Empty StatementExpression MethodInvocation Literal contains illegal modifiers." ReportError LocalVariableDeclaration BasicType long VariableDeclarator curAttribMods MemberReference curmods StatementExpression Assignment MemberReference curmods MemberReference Modifier Empty = IfStatement BinaryOperation != MemberReference curAttribMods MemberReference Modifier Empty BlockStatement StatementExpression MethodInvocation MemberReference TokenID Colon AssertAndAdvance LocalVariableDeclaration ReferenceType AttributeNode VariableDeclarator node ClassCreator ReferenceType AttributeNode StatementExpression MethodInvocation curAttributes MemberReference node add StatementExpression Assignment MemberReference node Modifiers MemberReference curAttribMods = WhileStatement BinaryOperation && BinaryOperation != MemberReference curtok id MemberReference TokenID RBracket BinaryOperation != MemberReference curtok id MemberReference TokenID Eof BlockStatement StatementExpression Assignment MemberReference node Name MethodInvocation parseQualifiedIdentifier = IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID LParen BlockStatement StatementExpression MethodInvocation advance WhileStatement BinaryOperation && BinaryOperation != MemberReference curtok id MemberReference TokenID RParen BinaryOperation != MemberReference curtok id MemberReference TokenID Eof BlockStatement LocalVariableDeclaration ReferenceType AttributeArgumentNode VariableDeclarator aNode ClassCreator ReferenceType AttributeArgumentNode IfStatement BinaryOperation && BinaryOperation && BinaryOperation > MethodInvocation tokens size BinaryOperation + MemberReference index Literal 2 BinaryOperation == MemberReference curtok id MemberReference TokenID Ident BinaryOperation == MethodInvocation tokens MemberReference id MemberReference index get MemberReference TokenID Equal BlockStatement StatementExpression Assignment MemberReference aNode ArgumentName MethodInvocation parseQualifiedIdentifier = StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference aNode Expression MethodInvocation ParseExpression = StatementExpression MethodInvocation MemberReference aNode add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Comma BlockStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference TokenID RParen AssertAndAdvance IfStatement BinaryOperation && BinaryOperation && BinaryOperation > MethodInvocation tokens size BinaryOperation + MemberReference index Literal 2 BinaryOperation == MemberReference curtok id MemberReference TokenID Comma BinaryOperation != MethodInvocation tokens MemberReference id MemberReference index get MemberReference TokenID RBracket BlockStatement StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference node ClassCreator ReferenceType AttributeNode = StatementExpression MethodInvocation curAttributes MemberReference node add StatementExpression Assignment MemberReference node Modifiers MemberReference curAttribMods = IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Comma BlockStatement StatementExpression MethodInvocation advance StatementExpression MethodInvocation MemberReference TokenID RBracket AssertAndAdvance	1
MethodDeclaration Modifier private ReferenceType ThrowNode parseThrow FeatureNotSupportedException LocalVariableDeclaration ReferenceType ThrowNode VariableDeclarator node ClassCreator ReferenceType ThrowNode StatementExpression MethodInvocation advance IfStatement BinaryOperation != MemberReference curtok id MemberReference TokenID Semi BlockStatement StatementExpression Assignment MemberReference node ThrowExpression MethodInvocation ParseExpression = IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Semi StatementExpression MethodInvocation advance ReturnStatement MemberReference node	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object artifact ReturnStatement MethodInvocation impl MemberReference artifact	0
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType FigNode getFigNodeFor FormalParameter ReferenceType Object node FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter ReferenceType Map styleAttributes ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType ListModel ReturnStatement MethodInvocation list getModel	0
MethodDeclaration Modifier private ReferenceType String generateAllParts FormalParameter ReferenceType StringBuffer parts LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference ALL_PARTS length MemberReference ++ i BlockStatement IfStatement BinaryOperation > MemberReference ArraySelector MemberReference i MethodInvocation toString MethodInvocation trim MethodInvocation length parts Literal 0 BlockStatement IfStatement BinaryOperation != MemberReference generatorPass MemberReference SOURCE_PASS BlockStatement IfStatement BinaryOperation != MemberReference i Literal 0 StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MethodInvocation MemberReference ArraySelector MemberReference i PART_NAME append MethodInvocation Literal ':' append Literal ' ' append StatementExpression MethodInvocation sb MemberReference LINE_SEPARATOR append StatementExpression MethodInvocation sb MemberReference ArraySelector MemberReference i parts append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public windowClosing FormalParameter ReferenceType WindowEvent e StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation close	0
MethodDeclaration Modifier public setParameter FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object parameter StatementExpression MethodInvocation impl MemberReference handle MemberReference parameter setParameter	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation cover isFilled	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Action VariableDeclarator toolbarTools ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Action LocalVariableDeclaration ReferenceType JMenu VariableDeclarator file ClassCreator ReferenceType JMenu MethodInvocation Literal "File" menuLocalize StatementExpression MethodInvocation MemberReference file add StatementExpression MethodInvocation MemberReference file Literal "File" setMnemonic LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator newItem MethodInvocation file ClassCreator ReferenceType ActionNew add StatementExpression MethodInvocation MemberReference newItem Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference newItem MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionNew add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator newProfileItem MethodInvocation file ClassCreator ReferenceType ActionNewProfile add StatementExpression MethodInvocation MemberReference newProfileItem Literal "New Profile" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference newProfileItem Literal null assignAccelerator StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionNewProfile add StatementExpression Assignment MemberReference ClassCreator ReferenceType ActionOpenProject = LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator openProjectItem MethodInvocation file MemberReference add StatementExpression MethodInvocation MemberReference openProjectItem Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference openProjectItem MemberReference ShortcutMgr ACTION_OPEN_PROJECT assignAccelerator StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionOpenProject add StatementExpression MethodInvocation file addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator saveProjectItem MethodInvocation file MethodInvocation ProjectBrowser MethodInvocation getInstance add StatementExpression MethodInvocation MemberReference saveProjectItem Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference saveProjectItem MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation toolbarTools MethodInvocation ProjectBrowser getInstance add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator saveProjectAsItem MethodInvocation file ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference saveProjectAsItem Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference saveProjectAsItem MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator revertToSavedItem MethodInvocation file ClassCreator ReferenceType ActionRevertToSaved add StatementExpression MethodInvocation MemberReference revertToSavedItem Literal To setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference revertToSavedItem MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation file addSeparator StatementExpression MethodInvocation ShortcutMgr MethodInvocation file ClassCreator ReferenceType add MemberReference ShortcutMgr ACTION_IMPORT_XMI assignAccelerator StatementExpression MethodInvocation ShortcutMgr MethodInvocation file ClassCreator ReferenceType add MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator importFromSources MethodInvocation file MethodInvocation getInstance add StatementExpression MethodInvocation MemberReference importFromSources Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference importFromSources MemberReference ShortcutMgr ACTION_IMPORT_FROM_SOURCES assignAccelerator StatementExpression MethodInvocation file addSeparator LocalVariableDeclaration ReferenceType Action VariableDeclarator a ClassCreator ReferenceType StatementExpression MethodInvocation toolbarTools MemberReference a add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator pageSetupItem MethodInvocation file ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference pageSetupItem Literal "PageSetup" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference pageSetupItem MemberReference ShortcutMgr assignAccelerator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator printItem MethodInvocation file ClassCreator ReferenceType ActionPrint add StatementExpression MethodInvocation MemberReference printItem Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference printItem MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation toolbarTools ClassCreator ReferenceType ActionPrint add LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator saveGraphicsItem MethodInvocation file ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference saveGraphicsItem Literal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference saveGraphicsItem MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation ShortcutMgr MethodInvocation file ClassCreator ReferenceType ActionSaveAllGraphics add MemberReference ShortcutMgr assignAccelerator StatementExpression MethodInvocation file addSeparator LocalVariableDeclaration ReferenceType JMenu VariableDeclarator Cast ReferenceType JMenu MethodInvocation file ClassCreator MethodInvocation getMenu ReferenceType add StatementExpression MethodInvocation MemberReference Literal setMnemonic LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator propertiesItem MethodInvocation file ClassCreator ReferenceType add StatementExpression MethodInvocation MemberReference propertiesItem Literal "Properties" setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference propertiesItem MemberReference ShortcutMgr ACTION_PROJECT_SETTINGS assignAccelerator StatementExpression MethodInvocation file addSeparator StatementExpression Assignment MemberReference mruList ClassCreator ReferenceType LastRecentlyUsedMenuList MemberReference file = StatementExpression Assignment MemberReference exitAction ClassCreator ReferenceType ActionExit = IfStatement MethodInvocation ! OsUtil BlockStatement StatementExpression MethodInvocation file addSeparator LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator exitItem MethodInvocation file MemberReference exitAction add StatementExpression MethodInvocation MemberReference exitItem Literal setMnemonic StatementExpression MethodInvocation exitItem MethodInvocation KeyStroke MemberReference KeyEvent VK_F4 MemberReference InputEvent ALT_MASK getKeyStroke StatementExpression Assignment MemberReference fileToolbar ClassCreator MethodInvocation createToolBar ReferenceType ToolBarFactory MemberReference toolbarTools = StatementExpression MethodInvocation fileToolbar MethodInvocation Translator Literal localize setName StatementExpression MethodInvocation fileToolbar Literal true setFloatable	1
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize ReturnStatement ClassCreator ReferenceType Dimension Literal 100 Literal 100	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement MethodInvocation Model MethodInvocation MemberReference target isAActor getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager StatementExpression MethodInvocation TargetManager MethodInvocation MethodInvocation Model MethodInvocation MemberReference target MemberReference model setTarget getInstance StatementExpression SuperMethodInvocation MemberReference e actionPerformed	0
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_2 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayCreator BasicType long Literal 8 StatementExpression Assignment MemberReference ArraySelector Literal 0 data Literal - = ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 1 BinaryOperation <= MemberReference i Literal 3 MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference i data Literal - 1L = ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType Object buildNode FormalParameter ReferenceType Object elementType IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getUMLClass BlockStatement ReturnStatement MethodInvocation MethodInvocation buildClass getCore IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getInterface BlockStatement ReturnStatement MethodInvocation MethodInvocation buildInterface getCore IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getDataType BlockStatement ReturnStatement MethodInvocation MethodInvocation getCore IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getPackage BlockStatement ReturnStatement MethodInvocation MethodInvocation getModelManagement IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getModel BlockStatement ReturnStatement MethodInvocation MethodInvocation createModel getModelManagement IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getInstance BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Attempt to instantiate abstract type" IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getModelManagement IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getActivityGraphs IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getPseudostate BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getActivityGraphs IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getActivityGraphs IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getActivityGraphs IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getActivityGraphs IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getStubState BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getCompositeState BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getSynchState BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getState BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Attempt to instantiate abstract type" IfStatement BinaryOperation == MemberReference elementType MethodInvocation modelImpl MethodInvocation getMetaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getCollaborations IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getComponent BlockStatement ReturnStatement MethodInvocation MethodInvocation createComponent getCore IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getComponentInstance BlockStatement ReturnStatement MethodInvocation MethodInvocation IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getNode BlockStatement ReturnStatement MethodInvocation MethodInvocation createNode getCore IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getObject BlockStatement ReturnStatement MethodInvocation MethodInvocation IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getCore IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getNamespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Attempt to instantiate abstract type" IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getOperation BlockStatement ReturnStatement MethodInvocation MethodInvocation createOperation getCore IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation getCore IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getStereotype BlockStatement ReturnStatement MethodInvocation MethodInvocation getExtensionMechanisms IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getAttribute BlockStatement ReturnStatement MethodInvocation MethodInvocation getCore IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes BlockStatement ReturnStatement MethodInvocation MethodInvocation IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getException BlockStatement ReturnStatement MethodInvocation MethodInvocation IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getTransition BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines IfStatement BinaryOperation == MemberReference elementType MethodInvocation metaTypes getTransition BlockStatement ReturnStatement MethodInvocation MethodInvocation getStateMachines ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "Attempted to create unsupported model element type: " MemberReference elementType	1
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation instanceof MethodInvocation evt getSource ReferenceType Action BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator a Cast ReferenceType Action MethodInvocation evt getSource IfStatement BinaryOperation && MemberReference ! blockEvents MethodInvocation evt MethodInvocation Literal "popped" equals getPropertyName BlockStatement StatementExpression Assignment MemberReference blockEvents Literal true = StatementExpression MethodInvocation a Literal "popped" MethodInvocation Boolean Literal false valueOf putValue StatementExpression Assignment MemberReference blockEvents Literal false = StatementExpression MethodInvocation Configuration MemberReference key Cast ReferenceType String MethodInvocation a MemberReference Action NAME getValue setString	1
MethodDeclaration Modifier final protected Annotation Override FormalParameter ReferenceType Fig f FormalParameter ReferenceType Attributes attrList SAXException IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigGroup BlockStatement LocalVariableDeclaration ReferenceType FigGroup VariableDeclarator group Cast ReferenceType FigGroup MemberReference f LocalVariableDeclaration ReferenceType String VariableDeclarator clsNameBounds MethodInvocation attrList Literal "description" getValue IfStatement BinaryOperation != MemberReference clsNameBounds Literal null BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference clsNameBounds Literal " IfStatement MethodInvocation st hasMoreElements BlockStatement StatementExpression MethodInvocation st nextToken IfStatement MethodInvocation st hasMoreElements BlockStatement StatementExpression MethodInvocation st nextToken IfStatement MethodInvocation st hasMoreElements BlockStatement StatementExpression MethodInvocation st nextToken IfStatement MethodInvocation st hasMoreElements BlockStatement StatementExpression MethodInvocation st nextToken IfStatement MethodInvocation st hasMoreElements BlockStatement StatementExpression MethodInvocation st nextToken LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType String VariableDeclarator attributeMap MethodInvocation MemberReference st interpretStyle StatementExpression MethodInvocation MemberReference group MemberReference attributeMap setStyleAttributes LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation attrList Literal "name" getValue IfStatement BinaryOperation && BinaryOperation != MemberReference name Literal null MethodInvocation ! name Literal "" equals BlockStatement StatementExpression MethodInvocation MemberReference f MemberReference name StatementExpression MethodInvocation MemberReference f MemberReference attrList LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator href MethodInvocation attrList Literal "href" getValue IfStatement BinaryOperation && BinaryOperation != MemberReference href Literal null MethodInvocation ! href Literal "" equals BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation MemberReference href findOwner IfStatement BinaryOperation == MemberReference modelElement Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Can't find href of " MemberReference href error ThrowStatement ClassCreator ReferenceType SAXException BinaryOperation + BinaryOperation + Literal "Found href of " MemberReference href Literal " with no matching element in model" IfStatement BinaryOperation != MethodInvocation f getOwner MemberReference modelElement BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigEdge BlockStatement StatementExpression MethodInvocation modelElementsByFigEdge Cast ReferenceType FigEdge MemberReference f MemberReference modelElement put BlockStatement StatementExpression MethodInvocation f MemberReference modelElement BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Ignoring href on " MethodInvocation f MethodInvocation getName getClass Literal " as already set" debug	1
MethodDeclaration Modifier public FormalParameter ReferenceType List figs StatementExpression MethodInvocation Literal MemberReference figs setArg	0
MethodDeclaration Modifier private ReferenceType Object findNamespace FormalParameter ReferenceType String nsName FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MethodInvocation getModel getAllNamespaces getModelManagementHelper LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator ns Literal null WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tmpNs MethodInvocation it next IfStatement MethodInvocation nsName MethodInvocation MethodInvocation MemberReference tmpNs getName getFacade equals BlockStatement IfStatement BinaryOperation == MethodInvocation MethodInvocation MemberReference tmpNs getNamespace getFacade MemberReference BlockStatement StatementExpression Assignment MemberReference ns MemberReference tmpNs = BreakStatement ReturnStatement MemberReference ns	1
MethodDeclaration Modifier public add FormalParameter BasicType int arg0 FormalParameter ReferenceType T arg1 SynchronizedStatement MemberReference mutex IfStatement MethodInvocation ! set MemberReference arg1 contains BlockStatement StatementExpression MethodInvocation list MemberReference arg0 MemberReference arg1 add	0
MethodDeclaration Modifier public setTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator tv MethodInvocation modelImpl MethodInvocation MemberReference handle getTaggedValuesCollection getFacade IfStatement MethodInvocation ! tv isEmpty BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator tvs ClassCreator ReferenceType ArrayList MemberReference tv ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator value MemberReference tvs BlockStatement IfStatement MethodInvocation ! MemberReference value contains BlockStatement StatementExpression MethodInvocation tv MemberReference value remove ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator value MemberReference BlockStatement IfStatement MethodInvocation ! tv MemberReference value contains BlockStatement StatementExpression MethodInvocation tv MemberReference value add ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference	0
MethodDeclaration Modifier public BasicType boolean isExclusive ReturnStatement MemberReference exclusive	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object IfStatement BinaryOperation == MemberReference Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "An element must be supplied" IfStatement MethodInvocation Model MethodInvocation MemberReference isAComment getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "An element cannot be a StatementExpression Assignment This MemberReference annotatedElement MemberReference =	0
MethodDeclaration Modifier public ReferenceType UmlException ReturnStatement ClassCreator ReferenceType This	0
MethodDeclaration Modifier public setBody FormalParameter ReferenceType String body LocalVariableDeclaration ReferenceType Object VariableDeclarator expression MethodInvocation getExpression LocalVariableDeclaration BasicType boolean VariableDeclarator mustChange Literal true IfStatement BinaryOperation != MemberReference expression Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator oldValue MethodInvocation Model MethodInvocation MemberReference expression getBody IfStatement BinaryOperation && BinaryOperation != MemberReference oldValue Literal null MethodInvocation oldValue MemberReference body equals BlockStatement StatementExpression Assignment MemberReference mustChange Literal false = IfStatement MemberReference mustChange BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator lang Literal null IfStatement BinaryOperation != MemberReference expression Literal null BlockStatement StatementExpression Assignment MemberReference lang MethodInvocation Model MethodInvocation MemberReference expression getLanguage = IfStatement BinaryOperation == MemberReference lang Literal null BlockStatement StatementExpression Assignment MemberReference lang MemberReference EMPTYSTRING = StatementExpression MethodInvocation MemberReference lang MemberReference body	0
MethodDeclaration Modifier public Annotation Override BasicType boolean isFilled ReturnStatement MethodInvocation isFilled	0
MethodDeclaration Modifier public Annotation Override ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public BasicType boolean add FormalParameter ReferenceType T arg0 SynchronizedStatement MemberReference mutex LocalVariableDeclaration BasicType boolean VariableDeclarator result MethodInvocation set MemberReference arg0 contains IfStatement MemberReference ! result BlockStatement StatementExpression MethodInvocation set MemberReference arg0 add StatementExpression MethodInvocation list MemberReference arg0 add ReturnStatement MemberReference ! result	0
MethodDeclaration Modifier public read FormalParameter ReferenceType String filename TryStatement StatementExpression MethodInvocation LOG Literal "Start reading" debug LocalVariableDeclaration ReferenceType FileReader VariableDeclarator f ClassCreator ReferenceType FileReader MemberReference filename LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator fr ClassCreator ReferenceType BufferedReader MemberReference f LocalVariableDeclaration ReferenceType String VariableDeclarator line Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator content Literal "" LocalVariableDeclaration BasicType boolean VariableDeclarator inSection Literal false WhileStatement BinaryOperation != MemberReference line Literal null BlockStatement StatementExpression Assignment MemberReference line MethodInvocation fr readLine = IfStatement BinaryOperation != MemberReference line Literal null BlockStatement IfStatement MemberReference inSection BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sectionId MethodInvocation MemberReference line getSectionId IfStatement BinaryOperation != MemberReference sectionId Literal null BlockStatement StatementExpression Assignment MemberReference inSection Literal false = StatementExpression MethodInvocation mAry MemberReference sectionId MemberReference content put StatementExpression Assignment MemberReference content Literal "" = BlockStatement StatementExpression Assignment MemberReference content BinaryOperation + MemberReference line Literal "\n" += BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator sectionId MethodInvocation MemberReference line getSectionId IfStatement BinaryOperation != MemberReference sectionId Literal null BlockStatement StatementExpression Assignment MemberReference inSection Literal true = StatementExpression MethodInvocation fr close CatchClause CatchClauseParameter IOException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Error: " MethodInvocation e toString debug	1
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement toString	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType FormalParameter ReferenceType Object ausecase IfStatement BinaryOperation instanceof MemberReference ausecase ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MemberReference ausecase TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Include VariableDeclarator include MethodInvocation getInclude BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation include getBase StatementExpression MethodInvocation result MemberReference add CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier private final static ReferenceType String generatePackagePath FormalParameter ReferenceType Object modelElement IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference modelElement Literal null MethodInvocation ! Model MethodInvocation MemberReference modelElement isANamespace getFacade BinaryOperation == MethodInvocation Model MethodInvocation MemberReference modelElement getNamespace getFacade Literal null BlockStatement ReturnStatement Literal null IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference modelElement MethodInvocation Model MethodInvocation MemberReference modelElement getNamespace getFacade = IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference modelElement getNamespace getFacade Literal null BlockStatement ReturnStatement Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator sPackagePath MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade WhileStatement BinaryOperation != Assignment MemberReference modelElement MethodInvocation Model MethodInvocation MemberReference modelElement getNamespace getFacade = Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference modelElement getNamespace getFacade Literal null BlockStatement StatementExpression Assignment MemberReference sPackagePath BinaryOperation + BinaryOperation + MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade MemberReference FILE_SEPARATOR MemberReference sPackagePath = ReturnStatement MemberReference sPackagePath	1
MethodDeclaration Modifier public ReferenceType getDataTypesFactory ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType getMenuTextFont ReturnStatement MemberReference	1
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType p1 StatementExpression MethodInvocation model MethodInvocation getText setBody	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getUMLClass getMetaTypes add StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getInterface getMetaTypes add StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getAssociationClass getMetaTypes add StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getOperation getMetaTypes add StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getParameter getMetaTypes add StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getState getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public setSpecifications FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection specifications IfStatement BinaryOperation instanceof MemberReference handle ReferenceType AssociationEnd BlockStatement StatementExpression Cast ReferenceType AssociationEnd MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	0
MethodDeclaration Modifier public ReferenceType Object getReceiver FormalParameter ReferenceType Object handle LocalVariableDeclaration ReferenceType Message VariableDeclarator message Cast ReferenceType Message MemberReference handle LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation message ReturnStatement MethodInvocation MethodInvocation Literal 0 get	0
MethodDeclaration Modifier public ReferenceType EnumerationLiteral LocalVariableDeclaration ReferenceType EnumerationLiteral VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCorePackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType ToDoItem item LocalVariableDeclaration ReferenceType Object VariableDeclarator path ArrayCreator ReferenceType Object Literal 3 LocalVariableDeclaration ReferenceType Object VariableDeclarator category Literal null LocalVariableDeclaration BasicType int VariableDeclarator size MethodInvocation MemberReference root getChildCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference size MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference category MethodInvocation MemberReference root MemberReference i getChild = IfStatement BinaryOperation != MethodInvocation MemberReference category MemberReference item Literal - 1 BlockStatement BreakStatement IfStatement BinaryOperation == MemberReference category Literal null BlockStatement ReturnStatement StatementExpression Assignment MemberReference ArraySelector Literal 0 path MemberReference root = StatementExpression Assignment MemberReference ArraySelector Literal 1 path MemberReference category = StatementExpression Assignment MemberReference ArraySelector Literal 2 path MemberReference item = LocalVariableDeclaration ReferenceType TreePath VariableDeclarator ClassCreator ReferenceType TreePath MemberReference path StatementExpression MethodInvocation tree MemberReference expandPath StatementExpression MethodInvocation tree MemberReference scrollPathToVisible StatementExpression MethodInvocation tree MemberReference setSelectionPath	0
MethodDeclaration Modifier public Annotation Override setEnclosingFig FormalParameter ReferenceType Fig encloser LocalVariableDeclaration ReferenceType LayerPerspective VariableDeclarator lp Cast ReferenceType LayerPerspective MethodInvocation getLayer IfStatement BinaryOperation == MemberReference lp Literal null BlockStatement ReturnStatement StatementExpression SuperMethodInvocation MemberReference encloser setEnclosingFig LocalVariableDeclaration ReferenceType FigVertex VariableDeclarator vertex Cast ReferenceType FigVertex MemberReference encloser IfStatement BinaryOperation != MemberReference vertex Literal null BlockStatement StatementExpression MethodInvocation vertex This addConnector BlockStatement LocalVariableDeclaration ReferenceType FigVertex VariableDeclarator previousVertex Cast ReferenceType FigVertex MethodInvocation IfStatement BinaryOperation != MemberReference previousVertex Literal null StatementExpression MethodInvocation previousVertex This removeConnector	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator selected Cast ReferenceType UMLComboBox MemberReference source LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference target isACallAction getFacade MethodInvocation Model MethodInvocation MemberReference selected isAOperation getFacade BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference target getOperation getFacade MemberReference selected BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference selected setOperation getCommonBehaviorHelper	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public final abstract_declarator RecognitionException TokenStreamException SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID LITERAL__stdcall LITERAL___stdcall STAR AMPERSAND SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation ptr_operator StatementExpression MethodInvocation abstract_declarator BreakStatement SwitchStatementCase LPAREN BlockStatement StatementExpression MethodInvocation MemberReference LPAREN match StatementExpression MethodInvocation abstract_declarator StatementExpression MethodInvocation MemberReference RPAREN match BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _cnt277 Literal 0 DoStatement _loop277 Literal true BlockStatement IfStatement BinaryOperation || BinaryOperation == MethodInvocation Literal 1 LA MemberReference LPAREN BinaryOperation == MethodInvocation Literal 1 LA MemberReference LSQUARE BlockStatement StatementExpression MethodInvocation abstract_declarator_suffix BlockStatement IfStatement BinaryOperation >= MemberReference _cnt277 Literal 1 BlockStatement BreakStatement _loop277 BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MemberReference ++ _cnt277 BreakStatement SwitchStatementCase LSQUARE BlockStatement BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _cnt280 Literal 0 DoStatement _loop280 Literal true BlockStatement IfStatement BinaryOperation == MethodInvocation Literal 1 LA MemberReference LSQUARE BlockStatement StatementExpression MethodInvocation MemberReference LSQUARE match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ID StringLiteral LITERAL__declspec LITERAL___declspec LPAREN LITERAL_const_cast LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void OPERATOR LITERAL_this LITERAL_true LITERAL_false OCTALINT STAR AMPERSAND TILDE PLUS MINUS PLUSPLUS MINUSMINUS LITERAL_sizeof SCOPE LITERAL_dynamic_cast LITERAL_static_cast LITERAL_reinterpret_cast NOT LITERAL_new LITERAL_delete DECIMALINT HEXADECIMALINT CharLiteral FLOATONE FLOATTWO BlockStatement StatementExpression MethodInvocation constant_expression BreakStatement SwitchStatementCase RSQUARE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RSQUARE match BlockStatement IfStatement BinaryOperation >= MemberReference _cnt280 Literal 1 BlockStatement BreakStatement _loop280 BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MemberReference ++ _cnt280 BreakStatement SwitchStatementCase GREATERTHAN ASSIGNEQUAL COMMA RPAREN ELLIPSIS BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getTop getFacade addElement	0
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation Literal "remove" Literal null Literal null StatementExpression MethodInvocation notifier ClassCreator ReferenceType Literal "remove" This Literal 0 sendNotification	0
MethodDeclaration Modifier public ReferenceType JToolBar getFileToolbar ReturnStatement MemberReference fileToolbar	0
MethodDeclaration Modifier private copyMember FormalParameter ReferenceType File file FormalParameter ReferenceType String tag FormalParameter ReferenceType String outputEncoding FormalParameter ReferenceType PrintWriter writer IOException MalformedURLException UnsupportedEncodingException LocalVariableDeclaration ReferenceType ZipInputStream VariableDeclarator zis MethodInvocation MethodInvocation MemberReference file toURL BinaryOperation + Literal "." MemberReference tag openZipStreamAt IfStatement BinaryOperation != MemberReference zis Literal null BlockStatement LocalVariableDeclaration ReferenceType InputStreamReader VariableDeclarator isr ClassCreator ReferenceType InputStreamReader MemberReference zis MemberReference outputEncoding LocalVariableDeclaration ReferenceType BufferedReader VariableDeclarator reader ClassCreator ReferenceType BufferedReader MemberReference isr LocalVariableDeclaration ReferenceType String VariableDeclarator firstLine MethodInvocation reader readLine IfStatement MethodInvocation firstLine Literal "<?xml" startsWith BlockStatement StatementExpression MethodInvocation reader readLine BlockStatement StatementExpression MethodInvocation writer MemberReference firstLine println StatementExpression MethodInvocation MemberReference reader MemberReference writer readerToWriter StatementExpression MethodInvocation zis close StatementExpression MethodInvocation reader close	1
MethodDeclaration Modifier protected ReferenceType Collection LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation getOwner ReturnStatement MethodInvocation Model MethodInvocation MemberReference cls getFacade	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object mClassifier StatementExpression MethodInvocation obsoleteInnerClasses MemberReference mClassifier remove	0
MethodDeclaration Modifier public ReferenceType org ReferenceType xml ReferenceType sax ReferenceType Attributes getAttributes ReturnStatement MemberReference _attributes	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType String FormalParameter ReferenceType Object m ReturnStatement MethodInvocation modelImpl MethodInvocation MemberReference m getName getMetaTypes	1
MethodDeclaration Modifier public FormalParameter ReferenceType IdentifierExpression aliasName StatementExpression Assignment MemberReference Literal true = StatementExpression Assignment This MemberReference aliasName MemberReference aliasName =	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType String classifierName FormalParameter BasicType boolean interfacesOnly ClassifierNotFoundException IfStatement BinaryOperation && MethodInvocation classifierName MethodInvocation Model MethodInvocation MemberReference mClassifier getName getFacade equals BinaryOperation || MemberReference ! interfacesOnly MethodInvocation Model MethodInvocation MemberReference mClassifier isAInterface getFacade BlockStatement ReturnStatement MemberReference mClassifier BlockStatement IfStatement BinaryOperation != MethodInvocation getContext Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation MemberReference classifierName MemberReference interfacesOnly get getContext BlockStatement ReturnStatement Literal null	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getContext getFacade	0
MethodDeclaration Modifier public FormalParameter ReferenceType String diagramName StatementExpression Assignment MemberReference MemberReference diagramName =	0
MethodDeclaration Modifier static FormalParameter ReferenceType group StatementExpression Assignment MemberReference myGroup MemberReference group =	0
MethodDeclaration Modifier public mousePressed FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Point VariableDeclarator MethodInvocation me getPoint LocalVariableDeclaration ReferenceType Fig VariableDeclarator underMouse MethodInvocation editor MemberReference IfStatement BinaryOperation instanceof MemberReference underMouse ReferenceType FigEdge BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator figList Cast ReferenceType FigEdge MemberReference underMouse ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator fig MemberReference figList BlockStatement IfStatement MethodInvocation fig MemberReference contains BlockStatement StatementExpression MethodInvocation me consume StatementExpression Assignment MemberReference dragFig MemberReference fig = StatementExpression Assignment MemberReference MethodInvocation fig getCenter = StatementExpression Assignment MemberReference BinaryOperation - MemberReference x MemberReference x = StatementExpression Assignment MemberReference BinaryOperation - MemberReference y MemberReference y = StatementExpression Assignment MemberReference figEdge Cast ReferenceType FigEdge MemberReference underMouse = BreakStatement	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator sel MethodInvocation getSelectedValue IfStatement BinaryOperation != MemberReference sel Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator msgArgs ArrayInitializer MethodInvocation sel toString LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator Cast ReferenceType ExplorerPerspective MemberReference sel StatementExpression MethodInvocation MemberReference Literal 0 insertElementAt StatementExpression MethodInvocation MemberReference Literal true setSelectedValue StatementExpression MethodInvocation	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 1080863911105790464L Literal 18014398509481984L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public FormalParameter ReferenceType Set set IfStatement BinaryOperation || BinaryOperation == MemberReference set Literal null BinaryOperation == MethodInvocation set size Literal 0 BlockStatement StatementExpression Assignment MemberReference MemberReference Collections EMPTY_SET = BlockStatement StatementExpression Assignment MemberReference MemberReference set =	1
MethodDeclaration Modifier public Annotation Deprecated setTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType String tag FormalParameter ReferenceType String value IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType TaggedValue VariableDeclarator tv Cast ReferenceType TaggedValue MethodInvocation modelImpl MethodInvocation MemberReference handle MemberReference tag getTaggedValue getFacade IfStatement BinaryOperation == MemberReference tv Literal null BlockStatement StatementExpression Assignment MemberReference tv Cast ReferenceType TaggedValue MethodInvocation modelImpl MethodInvocation MemberReference tag MemberReference value buildTaggedValue getExtensionMechanismsFactory = StatementExpression Cast ReferenceType ModelElement MemberReference handle BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference tv ArrayCreator ReferenceType String ArrayInitializer MemberReference value getExtensionMechanismsHelper ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference handle	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType String s StatementExpression Assignment MemberReference instructions MemberReference s =	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement IfStatement Cast ReferenceType MemberReference handle BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getOrdered getOrderingKind BlockStatement ReturnStatement MethodInvocation modelImpl MethodInvocation getOrderingKind ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier protected ReferenceType FigNode getFigNodeForAssociationEnd FormalParameter Modifier final ReferenceType ArgoDiagram diagram FormalParameter Modifier final ReferenceType Object associationEnd LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator element StatementExpression Assignment MemberReference element MethodInvocation Model MethodInvocation MemberReference associationEnd getClassifier getFacade = ReturnStatement MethodInvocation MethodInvocation diagram getLayer MemberReference element getNodePresentationFor	0
MethodDeclaration Modifier public FormalParameter ReferenceType WindowEvent e StatementExpression MethodInvocation	0
MethodDeclaration Modifier private ReferenceType FormalParameter BasicType boolean FormalParameter BasicType boolean FormalParameter BasicType boolean fill LocalVariableDeclaration ReferenceType VariableDeclarator gbc ClassCreator ReferenceType StatementExpression Assignment MemberReference gbc gridx MemberReference RELATIVE = StatementExpression Assignment MemberReference gbc gridy MemberReference RELATIVE = StatementExpression Assignment MemberReference gbc gridwidth MemberReference REMAINDER = StatementExpression Assignment MemberReference gbc Literal 1 = StatementExpression Assignment MemberReference gbc weightx Literal 1.0 = StatementExpression Assignment MemberReference gbc weighty Literal 0.0 = StatementExpression Assignment MemberReference gbc anchor MemberReference NORTHWEST = StatementExpression Assignment MemberReference gbc fill TernaryExpression MemberReference fill MemberReference HORIZONTAL MemberReference NONE = StatementExpression Assignment MemberReference gbc insets ClassCreator ReferenceType Insets TernaryExpression MemberReference Literal 5 Literal 0 Literal 5 TernaryExpression MemberReference Literal 5 Literal 0 Literal 5 = StatementExpression Assignment MemberReference gbc Literal 0 = StatementExpression Assignment MemberReference gbc Literal 0 = ReturnStatement MemberReference gbc	0
MethodDeclaration Modifier final BasicType float getFloatValue ReturnStatement Cast ReferenceType Float MemberReference object	0
MethodDeclaration Modifier public run ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference stereos BlockStatement LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MemberReference o LocalVariableDeclaration ReferenceType EObject VariableDeclarator eo MethodInvocation element MemberReference stereotype IfStatement MethodInvocation element MemberReference stereotype BlockStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference stereotype BlockStatement StatementExpression MethodInvocation MemberReference eo remove	0
MethodDeclaration Modifier public Annotation Override hitHandle FormalParameter ReferenceType Rectangle cursor FormalParameter ReferenceType Handle h StatementExpression SuperMethodInvocation MemberReference cursor MemberReference h hitHandle LocalVariableDeclaration BasicType int VariableDeclarator cx MethodInvocation MethodInvocation getX getContent LocalVariableDeclaration BasicType int VariableDeclarator cy MethodInvocation MethodInvocation getY getContent LocalVariableDeclaration BasicType int VariableDeclarator cw MethodInvocation MethodInvocation getWidth getContent LocalVariableDeclaration BasicType int VariableDeclarator ch MethodInvocation MethodInvocation getHeight getContent IfStatement BinaryOperation == MemberReference h index Literal - 1 BlockStatement IfStatement MethodInvocation BinaryOperation - BinaryOperation + MemberReference cx MemberReference cw BinaryOperation / MethodInvocation addIcon getIconWidth Literal 2 BinaryOperation + MemberReference cy Literal 25 BinaryOperation + MethodInvocation addIcon getIconWidth Literal 5 BinaryOperation + MethodInvocation addIcon getIconHeight Literal 3 MemberReference cursor hitBelow BlockStatement StatementExpression Assignment MemberReference h index MemberReference = IfStatement MethodInvocation BinaryOperation - BinaryOperation + MemberReference cx MemberReference cw BinaryOperation / MethodInvocation addIcon getIconWidth Literal 2 BinaryOperation + MemberReference cy MemberReference ch BinaryOperation + MethodInvocation addIcon getIconWidth Literal 3 BinaryOperation + MethodInvocation addIcon getIconHeight Literal 5 MemberReference cursor hitAbove BlockStatement StatementExpression Assignment MemberReference h index MemberReference =	1
MethodDeclaration Modifier private static BasicType double getSlope FormalParameter ReferenceType Point p1 FormalParameter ReferenceType Point p2 LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation - MemberReference p2 y MemberReference p1 y LocalVariableDeclaration BasicType int VariableDeclarator BinaryOperation - MemberReference p2 x MemberReference p1 x LocalVariableDeclaration BasicType double VariableDeclarator theta IfStatement BinaryOperation == MemberReference Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference Literal 0 BlockStatement ReturnStatement Literal 0 IfStatement BinaryOperation < MemberReference Literal 0 BlockStatement StatementExpression Assignment MemberReference theta BinaryOperation / BinaryOperation * MemberReference Math PI Literal 3 Literal 2 = BlockStatement StatementExpression Assignment MemberReference theta BinaryOperation / MemberReference Math PI Literal 2 = BlockStatement StatementExpression Assignment MemberReference theta MethodInvocation Math BinaryOperation / Cast BasicType double MemberReference Cast BasicType double MemberReference = IfStatement BinaryOperation < MemberReference Literal 0 BlockStatement StatementExpression Assignment MemberReference theta MemberReference Math PI += IfStatement BinaryOperation < MemberReference theta Literal 0 BlockStatement StatementExpression Assignment MemberReference theta BinaryOperation * MemberReference Math PI Literal 2 += ReturnStatement MemberReference theta	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType Object target FormalParameter Modifier final ReferenceType panel FormalParameter Modifier final ReferenceType ControlData prop Exception IfStatement Literal MethodInvocation MethodInvocation prop getControlType equals "text" BlockStatement StatementExpression MethodInvocation MemberReference panel MemberReference target MemberReference prop IfStatement Literal MethodInvocation MethodInvocation prop getControlType equals BlockStatement StatementExpression MethodInvocation MemberReference panel MemberReference target MemberReference prop buildComboPanel IfStatement Literal MethodInvocation MethodInvocation prop getControlType equals "checkgroup" BlockStatement StatementExpression MethodInvocation MemberReference panel MemberReference target MemberReference prop IfStatement Literal MethodInvocation MethodInvocation prop getControlType equals BlockStatement StatementExpression MethodInvocation MemberReference panel MemberReference target MemberReference prop buildOptionBox IfStatement Literal MethodInvocation MethodInvocation prop getControlType equals "singlerow" BlockStatement StatementExpression MethodInvocation MemberReference panel MemberReference target MemberReference prop IfStatement Literal MethodInvocation MethodInvocation prop getControlType equals "list" BlockStatement StatementExpression MethodInvocation MemberReference panel MemberReference target MemberReference prop IfStatement Literal MethodInvocation MethodInvocation prop getControlType equals BlockStatement StatementExpression MethodInvocation MemberReference panel MemberReference target MemberReference prop buildTextArea IfStatement Literal MethodInvocation MethodInvocation prop getControlType equals "separator" BlockStatement StatementExpression MethodInvocation panel MethodInvocation add	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Token parse LocalVariableDeclaration ReferenceType Matcher VariableDeclarator m MethodInvocation Pattern MethodInvocation MemberReference desc matcher Literal compile IfStatement MethodInvocation m matches BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token CLASS_NAME MethodInvocation m Literal 2 group add StatementExpression Assignment MemberReference desc MethodInvocation desc MethodInvocation m MethodInvocation length Literal 0 group substring = ReturnStatement MemberReference result StatementExpression Assignment MemberReference m MethodInvocation Pattern MethodInvocation MemberReference desc matcher Literal compile = IfStatement MethodInvocation m matches BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token Literal "[]" add StatementExpression Assignment MemberReference desc MethodInvocation desc Literal 1 substring = StatementExpression MethodInvocation parse StatementExpression Assignment MemberReference m MethodInvocation Pattern MethodInvocation MemberReference desc matcher Literal compile = IfStatement MethodInvocation m matches BlockStatement StatementExpression MethodInvocation result ClassCreator ReferenceType Token MemberReference Token MethodInvocation m Literal 1 group add StatementExpression Assignment MemberReference desc MethodInvocation desc Literal 1 substring = ReturnStatement MemberReference result IfStatement BinaryOperation == MethodInvocation desc length Literal 0 BlockStatement ReturnStatement MemberReference result ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + MemberReference desc Literal " is not a	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType SignalEvent BlockStatement ReturnStatement Cast ReferenceType SignalEvent MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal should be a SignalEvent or	0
MethodDeclaration Modifier protected ReferenceType ListSet computeOffenders FormalParameter ReferenceType Object dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offenderResult ClassCreator ReferenceType ListSet IfStatement MethodInvocation Model MethodInvocation MemberReference dm isANamespace getFacade BlockStatement LocalVariableDeclaration ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator names ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator name1Object MethodInvocation Model MethodInvocation MemberReference dm getOwnedElements getFacade BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MemberReference name1Object getFacade BlockStatement ContinueStatement IfStatement MethodInvocation Model MethodInvocation MemberReference name1Object isAGeneralization getFacade BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference name1Object getName getFacade IfStatement BinaryOperation == MemberReference name Literal null BlockStatement ContinueStatement IfStatement Literal MethodInvocation MemberReference name equals "" BlockStatement ContinueStatement IfStatement MethodInvocation names MemberReference name containsKey BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator offender MethodInvocation names MemberReference name get IfStatement MethodInvocation ! offenderResult MemberReference offender contains BlockStatement StatementExpression MethodInvocation offenderResult MemberReference offender add StatementExpression MethodInvocation offenderResult MemberReference name1Object add StatementExpression MethodInvocation names MemberReference name MemberReference name1Object put ReturnStatement MemberReference offenderResult	1
MethodDeclaration Modifier public BasicType boolean isAState FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType State	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unchecked" ReferenceType List getDebugInfo LocalVariableDeclaration ReferenceType List VariableDeclarator info ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation info Literal "Event Listeners" add ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator entrySet MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry Cast ReferenceType Map ReferenceType Entry MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator item MethodInvocation entry MethodInvocation toString getKey LocalVariableDeclaration ReferenceType List VariableDeclarator modelElementNode MethodInvocation MethodInvocation MemberReference item newDebugNode StatementExpression MethodInvocation info MemberReference modelElementNode add LocalVariableDeclaration ReferenceType Map VariableDeclarator propertyMap Cast ReferenceType Map MethodInvocation entry getValue ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator propertyIterator MethodInvocation propertyMap MethodInvocation iterator entrySet MethodInvocation propertyIterator hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator propertyEntry Cast ReferenceType Map ReferenceType Entry MethodInvocation propertyIterator next LocalVariableDeclaration ReferenceType List VariableDeclarator propertyNode MethodInvocation MethodInvocation propertyEntry MethodInvocation toString getKey newDebugNode StatementExpression MethodInvocation modelElementNode MemberReference propertyNode add LocalVariableDeclaration ReferenceType List VariableDeclarator listenerList Cast ReferenceType List MethodInvocation propertyEntry getValue ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator listIt MethodInvocation listenerList iterator MethodInvocation listIt hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator listener MethodInvocation listIt next LocalVariableDeclaration ReferenceType List VariableDeclarator listenerNode MethodInvocation MethodInvocation listener MethodInvocation getName getClass newDebugNode StatementExpression MethodInvocation propertyNode MemberReference listenerNode add ReturnStatement MemberReference info	1
MethodDeclaration Modifier private setTheme FormalParameter ReferenceType MetalTheme theme LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation IfStatement BinaryOperation || BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation MemberReference METAL_LAF_CLASS_NAME equals BinaryOperation && BinaryOperation == MemberReference Literal null MethodInvocation defaultLafClass MemberReference METAL_LAF_CLASS_NAME equals BlockStatement TryStatement StatementExpression MethodInvocation MetalLookAndFeel MemberReference theme StatementExpression MethodInvocation UIManager MemberReference METAL_LAF_CLASS_NAME setLookAndFeel CatchClause CatchClauseParameter UnsupportedLookAndFeelException e StatementExpression MethodInvocation LOG MemberReference e error CatchClause CatchClauseParameter ClassNotFoundException e StatementExpression MethodInvocation LOG MemberReference e error CatchClause CatchClauseParameter InstantiationException e StatementExpression MethodInvocation LOG MemberReference e error CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation LOG MemberReference e error	1
MethodDeclaration Modifier public ReferenceType getLanguage ReturnStatement MemberReference language	0
MethodDeclaration Modifier public ReferenceType Object getTaggedValue ReturnStatement ClassReference ReferenceType TaggedValue	0
MethodDeclaration Modifier private FormalParameter BasicType int wid LocalVariableDeclaration BasicType int VariableDeclarator i BinaryOperation - BinaryOperation - BinaryOperation + This MethodInvocation getX MemberReference wid MemberReference Literal 2 ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator MemberReference BlockStatement StatementExpression MethodInvocation MemberReference i BinaryOperation + This MethodInvocation getBigPort MethodInvocation getY Literal 2 setLocation StatementExpression Assignment MemberReference i BinaryOperation - MemberReference Literal 2 -= StatementExpression MethodInvocation MethodInvocation BinaryOperation * MethodInvocation size BinaryOperation + MemberReference Literal 5 getNameFig	0
MethodDeclaration Modifier public BasicType boolean isPackage ReturnStatement BinaryOperation instanceof MethodInvocation ReferenceType FigPackage	0
MethodDeclaration Modifier public finished StatementExpression MethodInvocation StatementExpression MethodInvocation ArgoFrame MethodInvocation MethodInvocation Cursor MemberReference Cursor DEFAULT_CURSOR getPredefinedCursor setCursor getFrame	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter BasicType int index FormalParameter ReferenceType Object parameter StatementExpression SuperMethodInvocation MemberReference handle MemberReference index MemberReference parameter StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Profile ReturnStatement MethodInvocation Collections MemberReference	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setChangeability getComponent	0
MethodDeclaration Modifier public ReferenceType Action getAction ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Transition getTransitions FormalParameter ReferenceType Object handle FormalParameter BasicType boolean includeInternals IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Transition VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Transition StatementExpression MethodInvocation result Cast ReferenceType MemberReference handle addAll IfStatement MemberReference includeInternals BlockStatement LocalVariableDeclaration ReferenceType State VariableDeclarator top Cast ReferenceType MemberReference handle IfStatement BinaryOperation && BinaryOperation != MemberReference top Literal null BinaryOperation instanceof MemberReference top ReferenceType CompositeState BlockStatement LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType StateVertex VariableDeclarator subs MethodInvocation MemberReference top getAllSubStates ForStatement EnhancedForControl VariableDeclaration ReferenceType StateVertex VariableDeclarator sub MemberReference subs BlockStatement IfStatement BinaryOperation instanceof MemberReference sub ReferenceType State BlockStatement StatementExpression MethodInvocation result Cast ReferenceType State MemberReference sub addAll ReturnStatement MemberReference result ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Argument is not a statemachine"	1
MethodDeclaration Modifier public remove FormalParameter BasicType int offs FormalParameter BasicType int len BadLocationException StatementExpression SuperMethodInvocation MemberReference offs MemberReference len remove StatementExpression MethodInvocation MethodInvocation Literal 0 MethodInvocation getLength getText setPropertyInternal	1
MethodDeclaration Modifier public setTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public FormalParameter ReferenceType e LocalVariableDeclaration ReferenceType Object VariableDeclarator addedTargets MethodInvocation e ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference addedTargets length Literal 1 BinaryOperation >= MemberReference i Literal 0 MemberReference -- i BlockStatement StatementExpression MethodInvocation MemberReference ArraySelector MemberReference i addedTargets	0
MethodDeclaration Modifier public StatementExpression MethodInvocation methodCalls clear	0
MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType SqlCodeCreator LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType SqlCodeCreator VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType SqlCodeCreator LocalVariableDeclaration ReferenceType SqlCreatorLoader VariableDeclarator ClassCreator ReferenceType SqlCreatorLoader LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ReferenceType SqlCodeCreator VariableDeclarator classes MethodInvocation getCodeCreators ForStatement EnhancedForControl VariableDeclaration ReferenceType Class TypeArgument ReferenceType SqlCodeCreator VariableDeclarator c MemberReference classes BlockStatement TryStatement LocalVariableDeclaration ReferenceType SqlCodeCreator VariableDeclarator MethodInvocation c newInstance StatementExpression MethodInvocation result MemberReference add CatchClause CatchClauseParameter InstantiationException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "Exception while instantiating a SqlCodeCreator " MethodInvocation c getName MemberReference e error CatchClause CatchClauseParameter IllegalAccessException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Exception while accessing the constructor of a " Literal " MethodInvocation c getName MemberReference e error ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType String FormalParameter BasicType int type SwitchStatement MemberReference type SwitchStatementCase ReturnStatement Literal "Java SwitchStatementCase ReturnStatement MemberReference JavaModuleGlobals SwitchStatementCase ReturnStatement MemberReference JavaModuleGlobals SwitchStatementCase MemberReference ModuleInterface ReturnStatement MemberReference JavaModuleGlobals SwitchStatementCase ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean isProtected FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator elem Cast ReferenceType ModelElement MemberReference handle ReturnStatement MethodInvocation MethodInvocation elem getVisibility equals ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public Annotation Deprecated FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf	1
MethodDeclaration Modifier public static BasicType boolean ReturnStatement MethodInvocation System Literal "java.vendor" getProperty	0
MethodDeclaration Modifier public setAggregation1 FormalParameter Modifier final ReferenceType Object handle FormalParameter ReferenceType Object StatementExpression MethodInvocation ClassCreator ReferenceType ObjectSetter MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setAggregation1 getComponent MemberReference MethodInvocation Model MethodInvocation MemberReference handle getFacade createCommand	1
MethodDeclaration Modifier public ReferenceType getMenuTextFont ReturnStatement MemberReference	1
MethodDeclaration Modifier protected BasicType boolean isValidEvent FormalParameter ReferenceType PropertyChangeEvent e LocalVariableDeclaration BasicType boolean VariableDeclarator valid Literal false IfStatement BinaryOperation instanceof MethodInvocation MemberReference e getChangedElement ReferenceType Collection BlockStatement IfStatement BinaryOperation || BinaryOperation && BinaryOperation == MethodInvocation e getNewValue Literal null BinaryOperation != MethodInvocation e getOldValue Literal null MethodInvocation MethodInvocation MemberReference e getChangedElement isValidElement BlockStatement StatementExpression Assignment MemberReference valid Literal true = BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MethodInvocation MemberReference e getChangedElement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation col iterator IfStatement MethodInvocation ! col isEmpty BlockStatement StatementExpression Assignment MemberReference valid Literal true = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement MethodInvocation ! MemberReference o isValidElement BlockStatement StatementExpression Assignment MemberReference valid Literal false = BreakStatement BlockStatement IfStatement BinaryOperation && BinaryOperation instanceof MethodInvocation e getOldValue ReferenceType Collection Cast ReferenceType Collection MethodInvocation e getOldValue BlockStatement StatementExpression Assignment MemberReference valid Literal true = ReturnStatement MemberReference valid	1
MethodDeclaration Modifier public final mSEMICOLON FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference SEMICOLON = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal ';' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public ReferenceType push FormalParameter ReferenceType item StatementExpression SuperMethodInvocation MemberReference item push StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference MemberReference item StatementExpression MethodInvocation MemberReference MethodInvocation size ReturnStatement MemberReference item	1
MethodDeclaration Modifier protected Annotation Override fireIntervalAdded FormalParameter ReferenceType Object source FormalParameter BasicType int index0 FormalParameter BasicType int index1 IfStatement BinaryOperation && MemberReference fireListEvents MemberReference ! buildingModel BlockStatement StatementExpression SuperMethodInvocation MemberReference source MemberReference index0 MemberReference index1 fireIntervalAdded	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation offs Literal 0 get LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference f getNamespace getFacade IfStatement MethodInvocation ! MemberReference ns MemberReference dsgr predicate BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference ns computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier public final optor_simple_tokclass RecognitionException TokenStreamException BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase PLUS BlockStatement StatementExpression MethodInvocation MemberReference PLUS match BreakStatement SwitchStatementCase MINUS BlockStatement StatementExpression MethodInvocation MemberReference MINUS match BreakStatement SwitchStatementCase STAR BlockStatement StatementExpression MethodInvocation MemberReference STAR match BreakStatement SwitchStatementCase DIVIDE BlockStatement StatementExpression MethodInvocation MemberReference DIVIDE match BreakStatement SwitchStatementCase MOD BlockStatement StatementExpression MethodInvocation MemberReference MOD match BreakStatement SwitchStatementCase BITWISEXOR BlockStatement StatementExpression MethodInvocation MemberReference BITWISEXOR match BreakStatement SwitchStatementCase AMPERSAND BlockStatement StatementExpression MethodInvocation MemberReference AMPERSAND match BreakStatement SwitchStatementCase BITWISEOR BlockStatement StatementExpression MethodInvocation MemberReference BITWISEOR match BreakStatement SwitchStatementCase TILDE BlockStatement StatementExpression MethodInvocation MemberReference TILDE match BreakStatement SwitchStatementCase NOT BlockStatement StatementExpression MethodInvocation MemberReference NOT match BreakStatement SwitchStatementCase SHIFTLEFT BlockStatement StatementExpression MethodInvocation MemberReference SHIFTLEFT match BreakStatement SwitchStatementCase SHIFTRIGHT BlockStatement StatementExpression MethodInvocation MemberReference SHIFTRIGHT match BreakStatement SwitchStatementCase ASSIGNEQUAL BlockStatement StatementExpression MethodInvocation MemberReference ASSIGNEQUAL match BreakStatement SwitchStatementCase TIMESEQUAL BlockStatement StatementExpression MethodInvocation MemberReference TIMESEQUAL match BreakStatement SwitchStatementCase DIVIDEEQUAL BlockStatement StatementExpression MethodInvocation MemberReference DIVIDEEQUAL match BreakStatement SwitchStatementCase MODEQUAL BlockStatement StatementExpression MethodInvocation MemberReference MODEQUAL match BreakStatement SwitchStatementCase PLUSEQUAL BlockStatement StatementExpression MethodInvocation MemberReference PLUSEQUAL match BreakStatement SwitchStatementCase MINUSEQUAL BlockStatement StatementExpression MethodInvocation MemberReference MINUSEQUAL match BreakStatement SwitchStatementCase SHIFTLEFTEQUAL BlockStatement StatementExpression MethodInvocation MemberReference SHIFTLEFTEQUAL match BreakStatement SwitchStatementCase SHIFTRIGHTEQUAL BlockStatement StatementExpression MethodInvocation MemberReference SHIFTRIGHTEQUAL match BreakStatement SwitchStatementCase BITWISEANDEQUAL BlockStatement StatementExpression MethodInvocation MemberReference BITWISEANDEQUAL match BreakStatement SwitchStatementCase BITWISEXOREQUAL BlockStatement StatementExpression MethodInvocation MemberReference BITWISEXOREQUAL match BreakStatement SwitchStatementCase BITWISEOREQUAL BlockStatement StatementExpression MethodInvocation MemberReference BITWISEOREQUAL match BreakStatement SwitchStatementCase EQUAL BlockStatement StatementExpression MethodInvocation MemberReference EQUAL match BreakStatement SwitchStatementCase NOTEQUAL BlockStatement StatementExpression MethodInvocation MemberReference NOTEQUAL match BreakStatement SwitchStatementCase LESSTHAN BlockStatement StatementExpression MethodInvocation MemberReference LESSTHAN match BreakStatement SwitchStatementCase GREATERTHAN BlockStatement StatementExpression MethodInvocation MemberReference GREATERTHAN match BreakStatement SwitchStatementCase LESSTHANOREQUALTO BlockStatement StatementExpression MethodInvocation MemberReference LESSTHANOREQUALTO match BreakStatement SwitchStatementCase GREATERTHANOREQUALTO BlockStatement StatementExpression MethodInvocation MemberReference GREATERTHANOREQUALTO match BreakStatement SwitchStatementCase OR BlockStatement StatementExpression MethodInvocation MemberReference OR match BreakStatement SwitchStatementCase AND BlockStatement StatementExpression MethodInvocation MemberReference AND match BreakStatement SwitchStatementCase PLUSPLUS BlockStatement StatementExpression MethodInvocation MemberReference PLUSPLUS match BreakStatement SwitchStatementCase MINUSMINUS BlockStatement StatementExpression MethodInvocation MemberReference MINUSMINUS match BreakStatement SwitchStatementCase COMMA BlockStatement StatementExpression MethodInvocation MemberReference COMMA match BreakStatement SwitchStatementCase POINTERTO BlockStatement StatementExpression MethodInvocation MemberReference POINTERTO match BreakStatement SwitchStatementCase POINTERTOMBR BlockStatement StatementExpression MethodInvocation MemberReference POINTERTOMBR match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation MemberReference event updateLayout CatchClause CatchClauseParameter InvalidElementException e IfStatement MethodInvocation LOG isDebugEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "event = " MethodInvocation event MethodInvocation getName getClass debug StatementExpression MethodInvocation LOG BinaryOperation + Literal = " MethodInvocation event getSource debug StatementExpression MethodInvocation LOG BinaryOperation + Literal = " MethodInvocation event getOldValue debug StatementExpression MethodInvocation LOG BinaryOperation + Literal "name = " MethodInvocation event getPropertyName debug StatementExpression MethodInvocation LOG BinaryOperation + Literal "updateLayout method accessed " Literal "deleted element " MemberReference e debug	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType Fig f LocalVariableDeclaration ReferenceType Fig VariableDeclarator encloser MethodInvocation f getEnclosingFig IfStatement BinaryOperation == MemberReference encloser Literal null BlockStatement ReturnStatement Literal null ReturnStatement MethodInvocation MemberReference encloser getId	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent evt IfStatement MethodInvocation pmw isCanceled BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation timer stop	0
MethodDeclaration Modifier private ReferenceType Object getStereotype FormalParameter ReferenceType Object FormalParameter ReferenceType String LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereotypes MethodInvocation MethodInvocation MemberReference getStereotypes getExtensionMechanismsHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereotype MemberReference stereotypes BlockStatement IfStatement MethodInvocation MethodInvocation MethodInvocation MemberReference stereotype getName getFacade equals BlockStatement ReturnStatement MemberReference stereotype ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override ReferenceType ReturnStatement MethodInvocation ClClassName getTheInstance	0
MethodDeclaration Modifier public ReferenceType Element getRoot FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement MethodInvocation Cast ReferenceType Element MemberReference handle	0
MethodDeclaration Modifier public itemStateChanged FormalParameter ReferenceType ItemEvent event IfStatement BinaryOperation == MethodInvocation event getSource MemberReference cbLang BlockStatement IfStatement BinaryOperation == MethodInvocation event getStateChange MemberReference ItemEvent SELECTED BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator newLang Cast ReferenceType MethodInvocation cbLang getSelectedItem IfStatement MethodInvocation ! newLang MemberReference langName equals BlockStatement StatementExpression Assignment MemberReference langName MemberReference newLang = StatementExpression MethodInvocation IfStatement BinaryOperation == MethodInvocation event getSource MemberReference cbFiles BlockStatement IfStatement BinaryOperation == MethodInvocation event getStateChange MemberReference ItemEvent SELECTED BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator newFile Cast ReferenceType String MethodInvocation cbFiles getSelectedItem IfStatement MethodInvocation ! newFile MemberReference fileName equals BlockStatement StatementExpression Assignment MemberReference fileName MemberReference newFile = StatementExpression SuperMethodInvocation MethodInvocation getTarget setTarget	1
MethodDeclaration Modifier public static ReferenceType Object getAction FormalParameter ReferenceType String role FormalParameter ReferenceType Object t IfStatement MethodInvocation role MemberReference Roles equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getExit getFacade IfStatement MethodInvocation role MemberReference Roles equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getEntry getFacade IfStatement MethodInvocation role MemberReference Roles DO equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getDoActivity getFacade IfStatement MethodInvocation role MemberReference Roles equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getAction getFacade IfStatement MethodInvocation role MemberReference Roles EFFECT equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getFacade IfStatement MethodInvocation role MemberReference Roles equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getActions getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object getElementAt FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Object VariableDeclarator result Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation iterator WhileStatement BinaryOperation >= MemberReference index Literal 0 BlockStatement IfStatement MethodInvocation it hasNext BlockStatement StatementExpression Assignment MemberReference result MethodInvocation it next = BlockStatement ThrowStatement ClassCreator ReferenceType ArrayIndexOutOfBoundsException StatementExpression MemberReference -- index ReturnStatement MemberReference result	1
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getClassifier getMetaTypes	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Operation VariableDeclarator operation MethodInvocation createOperation StatementExpression MethodInvocation MethodInvocation MemberReference operation add Cast ReferenceType Type MemberReference cls StatementExpression MethodInvocation operation Literal "return" Cast ReferenceType Type MemberReference returnType createReturnResult IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation operation MemberReference name setName BlockStatement StatementExpression MethodInvocation operation Literal "newOperation" setName StatementExpression MethodInvocation MethodInvocation MemberReference operation add	1
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation setTarget	0
MethodDeclaration Modifier public ReferenceType Property ReturnStatement MethodInvocation createProperty	0
MethodDeclaration Modifier public Annotation Override setNamespace FormalParameter ReferenceType Object handle IfStatement MethodInvocation ! Model MethodInvocation MemberReference handle isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Illegal argument. Object " MemberReference handle Literal " is not a namespace" error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "Illegal argument. Object " MemberReference handle Literal " is not a namespace" LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference handle StatementExpression SuperMethodInvocation MemberReference m setNamespace LocalVariableDeclaration ReferenceType UseCaseDiagramGraphModel VariableDeclarator gm Cast ReferenceType UseCaseDiagramGraphModel MethodInvocation getGraphModel StatementExpression MethodInvocation gm MemberReference m LocalVariableDeclaration ReferenceType LayerPerspective VariableDeclarator lay ClassCreator ReferenceType LayerPerspectiveMutable MethodInvocation Model MethodInvocation MemberReference m getName getFacade MemberReference gm LocalVariableDeclaration ReferenceType UseCaseDiagramRenderer VariableDeclarator rend ClassCreator ReferenceType UseCaseDiagramRenderer StatementExpression MethodInvocation lay MemberReference rend setGraphNodeRenderer StatementExpression MethodInvocation lay MemberReference rend setGraphEdgeRenderer StatementExpression MethodInvocation MemberReference lay setLayer	1
MethodDeclaration Modifier protected Annotation Override ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator workingIcons ArrayCreator ReferenceType MemberReference icons length StatementExpression MethodInvocation System MemberReference icons Literal 0 MemberReference workingIcons Literal 0 MemberReference icons length arraycopy IfStatement BinaryOperation instanceof MethodInvocation Globals MethodInvocation getGraphModel curEditor ReferenceType DeploymentDiagramGraphModel BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference TOP MemberReference BASE workingIcons Literal null = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference BOTTOM MemberReference BASE workingIcons Literal null = IfStatement MemberReference useComposite BlockStatement StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference LEFT MemberReference BASE workingIcons MemberReference = StatementExpression Assignment MemberReference ArraySelector BinaryOperation - MemberReference RIGHT MemberReference BASE workingIcons MemberReference = IfStatement MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation getOwner getContent isReadOnly getModelManagementHelper BlockStatement ReturnStatement ArrayCreator ReferenceType ArrayInitializer Literal null MemberReference inherit Literal null Literal null Literal null ReturnStatement MemberReference workingIcons	0
MethodDeclaration Modifier private StatementExpression MethodInvocation MemberReference FILL_COLOR setFillColor StatementExpression SuperMethodInvocation Literal false setFilled StatementExpression MethodInvocation MemberReference FigText END_EDITING StatementExpression MethodInvocation MemberReference FigText END_EDITING StatementExpression MethodInvocation Literal 0 setLineWidth StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation setTarget	0
MethodDeclaration Modifier public static ReferenceType Action buildGridAction FormalParameter Modifier final ReferenceType String property FormalParameter Modifier final BasicType int spacing FormalParameter Modifier final BasicType boolean paintLines FormalParameter Modifier final BasicType boolean paintDots FormalParameter Modifier final ReferenceType String id FormalParameter Modifier final BasicType int key LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Translator MemberReference property localize LocalVariableDeclaration ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Comparable VariableDeclarator map1 ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType Comparable Literal 4 StatementExpression MethodInvocation map1 Literal MethodInvocation Integer MemberReference spacing valueOf put StatementExpression MethodInvocation map1 Literal MethodInvocation Boolean MemberReference paintLines valueOf put StatementExpression MethodInvocation map1 Literal MethodInvocation Boolean MemberReference paintDots valueOf put LocalVariableDeclaration ReferenceType Action VariableDeclarator action ClassCreator ReferenceType MemberReference map1 MemberReference name StatementExpression MethodInvocation action Literal "ID" MemberReference id putValue StatementExpression MethodInvocation action Literal "shortcut" MethodInvocation KeyStroke MemberReference key MemberReference getKeyStroke putValue ReturnStatement MemberReference action	1
MethodDeclaration Modifier public ReferenceType Object getRoot ReturnStatement MemberReference root	0
MethodDeclaration Modifier public ReferenceType String getBody ReturnStatement MethodInvocation getText	0
MethodDeclaration Modifier public ReferenceType String getParsingHelp ReturnStatement Literal	0
MethodDeclaration Modifier private ReferenceType Fig FormalParameter ReferenceType Object element IfStatement BinaryOperation == MemberReference element Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Can't search for a null LocalVariableDeclaration ReferenceType List VariableDeclarator contents MethodInvocation MethodInvocation getLayer getContentsNoEdges LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation contents size ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator figIndex Literal 0 BinaryOperation < MemberReference figIndex MemberReference MemberReference ++ figIndex BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator fig Cast ReferenceType Fig MethodInvocation contents MemberReference figIndex get IfStatement BinaryOperation == MethodInvocation fig getOwner MemberReference element BlockStatement ReturnStatement MemberReference fig ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "Can't find a FigNode " MethodInvocation Model MethodInvocation MemberReference element getName getFacade	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unchecked" ReferenceType Object invokeFeature FormalParameter ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object vt FormalParameter ReferenceType Object subject FormalParameter ReferenceType String feature FormalParameter ReferenceType String type FormalParameter ReferenceType Object parameters IfStatement BinaryOperation == MemberReference subject Literal null BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference subject ReferenceType Collection BlockStatement IfStatement MethodInvocation type Literal "->" equals BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator ns ClassCreator ReferenceType HashSet StatementExpression MethodInvocation ns MemberReference subject add StatementExpression Assignment MemberReference subject MemberReference ns = IfStatement BinaryOperation instanceof MemberReference subject ReferenceType Collection BlockStatement IfStatement MethodInvocation type Literal "->" equals BlockStatement IfStatement MethodInvocation feature MethodInvocation trim MethodInvocation Literal "select" equals toString BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator vars Cast ReferenceType List TypeArgument ReferenceType String MemberReference ArraySelector Literal 0 parameters LocalVariableDeclaration ReferenceType Object VariableDeclarator exp MemberReference ArraySelector Literal 1 parameters LocalVariableDeclaration ReferenceType LambdaEvaluator VariableDeclarator eval Cast ReferenceType LambdaEvaluator MemberReference ArraySelector Literal 2 parameters LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation Cast ReferenceType Collection MemberReference subject cloneCollection LocalVariableDeclaration ReferenceType List VariableDeclarator remove ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType String VariableDeclarator varName MethodInvocation vars Literal 0 get LocalVariableDeclaration ReferenceType Object VariableDeclarator oldVal MethodInvocation vt MemberReference varName get ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference col BlockStatement StatementExpression MethodInvocation vt MemberReference varName MemberReference object put LocalVariableDeclaration ReferenceType Object VariableDeclarator res MethodInvocation eval MemberReference vt MemberReference exp evaluate IfStatement BinaryOperation && BinaryOperation instanceof MemberReference res ReferenceType Boolean Cast ReferenceType Boolean MemberReference res BlockStatement BlockStatement StatementExpression MethodInvocation remove MemberReference object add StatementExpression MethodInvocation col MemberReference remove removeAll StatementExpression MethodInvocation vt MemberReference varName MemberReference oldVal put ReturnStatement MemberReference col IfStatement MethodInvocation feature MethodInvocation trim MethodInvocation Literal equals toString BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator vars Cast ReferenceType ArrayList TypeArgument ReferenceType String MemberReference ArraySelector Literal 0 parameters LocalVariableDeclaration ReferenceType Object VariableDeclarator exp MemberReference ArraySelector Literal 1 parameters LocalVariableDeclaration ReferenceType LambdaEvaluator VariableDeclarator eval Cast ReferenceType LambdaEvaluator MemberReference ArraySelector Literal 2 parameters LocalVariableDeclaration ReferenceType Collection VariableDeclarator col MethodInvocation Cast ReferenceType Collection MemberReference subject cloneCollection LocalVariableDeclaration ReferenceType List VariableDeclarator remove ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType String VariableDeclarator varName MethodInvocation vars Literal 0 get LocalVariableDeclaration ReferenceType Object VariableDeclarator oldVal MethodInvocation vt MemberReference varName get ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference col BlockStatement StatementExpression MethodInvocation vt MemberReference varName MemberReference object put LocalVariableDeclaration ReferenceType Object VariableDeclarator res MethodInvocation eval MemberReference vt MemberReference exp evaluate IfStatement BinaryOperation && BinaryOperation instanceof MemberReference res ReferenceType Boolean Cast ReferenceType Boolean MemberReference res BlockStatement StatementExpression MethodInvocation remove MemberReference object add StatementExpression MethodInvocation col MemberReference remove removeAll StatementExpression MethodInvocation vt MemberReference varName MemberReference oldVal put ReturnStatement MemberReference col IfStatement MethodInvocation feature MethodInvocation trim MethodInvocation Literal equals toString BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator vars Cast ReferenceType ArrayList TypeArgument ReferenceType String MemberReference ArraySelector Literal 0 parameters LocalVariableDeclaration ReferenceType Object VariableDeclarator exp MemberReference ArraySelector Literal 1 parameters LocalVariableDeclaration ReferenceType LambdaEvaluator VariableDeclarator eval Cast ReferenceType LambdaEvaluator MemberReference ArraySelector Literal 2 parameters ReturnStatement MethodInvocation MemberReference vt Cast ReferenceType Collection MemberReference subject MemberReference vars MemberReference exp MemberReference eval IfStatement MethodInvocation feature MethodInvocation trim MethodInvocation Literal equals toString BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator vars Cast ReferenceType ArrayList TypeArgument ReferenceType String MemberReference ArraySelector Literal 0 parameters LocalVariableDeclaration ReferenceType Object VariableDeclarator exp MemberReference ArraySelector Literal 1 parameters LocalVariableDeclaration ReferenceType LambdaEvaluator VariableDeclarator eval Cast ReferenceType LambdaEvaluator MemberReference ArraySelector Literal 2 parameters LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MemberReference subject LocalVariableDeclaration ReferenceType Bag VariableDeclarator res ClassCreator ReferenceType HashBag LocalVariableDeclaration ReferenceType String VariableDeclarator varName MethodInvocation vars Literal 0 get LocalVariableDeclaration ReferenceType Object VariableDeclarator oldVal MethodInvocation vt MemberReference varName get ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference col BlockStatement StatementExpression MethodInvocation vt MemberReference varName MemberReference object put LocalVariableDeclaration ReferenceType Object VariableDeclarator val MethodInvocation eval MemberReference vt MemberReference exp evaluate StatementExpression MethodInvocation res MemberReference val add StatementExpression MethodInvocation vt MemberReference varName MemberReference oldVal put ReturnStatement MemberReference res IfStatement MethodInvocation feature MethodInvocation trim MethodInvocation Literal equals toString BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator vars Cast ReferenceType ArrayList TypeArgument ReferenceType String MemberReference ArraySelector Literal 0 parameters LocalVariableDeclaration ReferenceType Object VariableDeclarator exp MemberReference ArraySelector Literal 1 parameters LocalVariableDeclaration ReferenceType LambdaEvaluator VariableDeclarator eval Cast ReferenceType LambdaEvaluator MemberReference ArraySelector Literal 2 parameters LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MemberReference subject LocalVariableDeclaration ReferenceType String VariableDeclarator varName MethodInvocation vars Literal 0 get LocalVariableDeclaration ReferenceType Object VariableDeclarator oldVal MethodInvocation vt MemberReference varName get ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference col BlockStatement StatementExpression MethodInvocation vt MemberReference varName MemberReference object put LocalVariableDeclaration ReferenceType Object VariableDeclarator val MethodInvocation eval MemberReference vt MemberReference exp evaluate IfStatement BinaryOperation && BinaryOperation instanceof MemberReference val ReferenceType Boolean Cast ReferenceType Boolean MemberReference val BlockStatement ReturnStatement Literal true StatementExpression MethodInvocation vt MemberReference varName MemberReference oldVal put ReturnStatement Literal false IfStatement MethodInvocation feature MethodInvocation trim MethodInvocation Literal equals toString BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator vars Cast ReferenceType ArrayList TypeArgument ReferenceType String MemberReference ArraySelector Literal 0 parameters LocalVariableDeclaration ReferenceType Object VariableDeclarator exp MemberReference ArraySelector Literal 1 parameters LocalVariableDeclaration ReferenceType LambdaEvaluator VariableDeclarator eval Cast ReferenceType LambdaEvaluator MemberReference ArraySelector Literal 2 parameters LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MemberReference subject LocalVariableDeclaration ReferenceType Bag TypeArgument ReferenceType Object VariableDeclarator res ClassCreator ReferenceType HashBag TypeArgument ReferenceType Object LocalVariableDeclaration ReferenceType String VariableDeclarator varName MethodInvocation vars Literal 0 get LocalVariableDeclaration ReferenceType Object VariableDeclarator oldVal MethodInvocation vt MemberReference varName get ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference col BlockStatement StatementExpression MethodInvocation vt MemberReference varName MemberReference object put LocalVariableDeclaration ReferenceType Object VariableDeclarator val MethodInvocation eval MemberReference vt MemberReference exp evaluate StatementExpression MethodInvocation res MemberReference val add IfStatement BinaryOperation > MethodInvocation res MemberReference val count Literal 1 BlockStatement ReturnStatement Literal false StatementExpression MethodInvocation vt MemberReference varName MemberReference oldVal put ReturnStatement Literal true IfStatement MethodInvocation feature MethodInvocation trim MethodInvocation Literal "one" equals toString BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator vars Cast ReferenceType ArrayList TypeArgument ReferenceType String MemberReference ArraySelector Literal 0 parameters LocalVariableDeclaration ReferenceType Object VariableDeclarator exp MemberReference ArraySelector Literal 1 parameters LocalVariableDeclaration ReferenceType LambdaEvaluator VariableDeclarator eval Cast ReferenceType LambdaEvaluator MemberReference ArraySelector Literal 2 parameters LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MemberReference subject LocalVariableDeclaration ReferenceType String VariableDeclarator varName MethodInvocation vars Literal 0 get LocalVariableDeclaration ReferenceType Object VariableDeclarator oldVal MethodInvocation vt MemberReference varName get LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference col BlockStatement StatementExpression MethodInvocation vt MemberReference varName MemberReference object put LocalVariableDeclaration ReferenceType Object VariableDeclarator val MethodInvocation eval MemberReference vt MemberReference exp evaluate IfStatement BinaryOperation && BinaryOperation instanceof MemberReference val ReferenceType Boolean Cast ReferenceType Boolean MemberReference val BlockStatement IfStatement MemberReference ! found BlockStatement StatementExpression Assignment MemberReference found Literal true = BlockStatement ReturnStatement Literal false StatementExpression MethodInvocation vt MemberReference varName MemberReference oldVal put ReturnStatement MemberReference found IfStatement MethodInvocation feature MethodInvocation trim MethodInvocation Literal "any" equals toString BlockStatement LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType String VariableDeclarator vars Cast ReferenceType ArrayList TypeArgument ReferenceType String MemberReference ArraySelector Literal 0 parameters LocalVariableDeclaration ReferenceType Object VariableDeclarator exp MemberReference ArraySelector Literal 1 parameters LocalVariableDeclaration ReferenceType LambdaEvaluator VariableDeclarator eval Cast ReferenceType LambdaEvaluator MemberReference ArraySelector Literal 2 parameters LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MemberReference subject LocalVariableDeclaration ReferenceType String VariableDeclarator varName MethodInvocation vars Literal 0 get LocalVariableDeclaration ReferenceType Object VariableDeclarator oldVal MethodInvocation vt MemberReference varName get ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference col BlockStatement StatementExpression MethodInvocation vt MemberReference varName MemberReference object put LocalVariableDeclaration ReferenceType Object VariableDeclarator val MethodInvocation eval MemberReference vt MemberReference exp evaluate IfStatement BinaryOperation && BinaryOperation instanceof MemberReference val ReferenceType Boolean Cast ReferenceType Boolean MemberReference val BlockStatement ReturnStatement MemberReference object StatementExpression MethodInvocation vt MemberReference varName MemberReference oldVal put ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference subject ReferenceType Collection BlockStatement IfStatement MethodInvocation type Literal "->" equals BlockStatement IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement Cast ReferenceType Collection MemberReference subject IfStatement MethodInvocation feature Literal "includes" equals BlockStatement ReturnStatement Cast ReferenceType Collection MemberReference subject IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement Cast ReferenceType Collection MemberReference subject IfStatement MethodInvocation feature Literal "count" equals BlockStatement ReturnStatement ClassCreator MethodInvocation MemberReference ArraySelector Literal 0 parameters count ReferenceType HashBag TypeArgument ReferenceType Object Cast ReferenceType Collection MemberReference subject IfStatement MethodInvocation feature Literal equals BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MemberReference ArraySelector Literal 0 parameters ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference col BlockStatement IfStatement Cast ReferenceType Collection MemberReference subject BlockStatement ReturnStatement Literal false ReturnStatement Literal true IfStatement MethodInvocation feature Literal equals BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MemberReference ArraySelector Literal 0 parameters ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference col BlockStatement IfStatement Cast ReferenceType Collection MemberReference subject BlockStatement ReturnStatement Literal false ReturnStatement Literal true IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement Cast ReferenceType Collection MemberReference subject IfStatement MethodInvocation feature Literal "notEmpty" equals BlockStatement ReturnStatement Cast ReferenceType Collection MemberReference subject IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object Cast ReferenceType Collection MemberReference subject IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement ClassCreator ReferenceType HashBag TypeArgument ReferenceType Object Cast ReferenceType Collection MemberReference subject IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object Cast ReferenceType Collection MemberReference subject IfStatement MethodInvocation feature Literal equals BlockStatement LocalVariableDeclaration ReferenceType Integer VariableDeclarator sum Literal 0 LocalVariableDeclaration ReferenceType Collection VariableDeclarator col Cast ReferenceType Collection MemberReference subject ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator object MemberReference col BlockStatement StatementExpression Assignment MemberReference sum Cast ReferenceType Integer MemberReference object += ReturnStatement MemberReference sum IfStatement MethodInvocation feature Literal equals BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator copy MethodInvocation Cast ReferenceType Collection MemberReference subject cloneCollection StatementExpression MethodInvocation copy Cast ReferenceType Collection MemberReference ArraySelector Literal 0 parameters addAll ReturnStatement MemberReference copy IfStatement MethodInvocation feature Literal equals BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator copy MethodInvocation Cast ReferenceType Collection MemberReference subject cloneCollection StatementExpression MethodInvocation copy MemberReference ArraySelector Literal 0 parameters add ReturnStatement MemberReference copy IfStatement MethodInvocation feature Literal "prepend" equals BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator copy MethodInvocation Cast ReferenceType Collection MemberReference subject cloneCollection IfStatement BinaryOperation instanceof MemberReference copy ReferenceType List BlockStatement StatementExpression Cast ReferenceType List MemberReference copy BlockStatement StatementExpression MethodInvocation copy MemberReference ArraySelector Literal 0 parameters add ReturnStatement MemberReference copy IfStatement BinaryOperation instanceof MemberReference subject ReferenceType List BlockStatement IfStatement MethodInvocation type Literal "->" equals BlockStatement IfStatement MethodInvocation feature Literal equals BlockStatement ReturnStatement Cast ReferenceType List MemberReference subject IfStatement MethodInvocation feature Literal "first" equals BlockStatement ReturnStatement Cast ReferenceType List MemberReference subject IfStatement MethodInvocation feature Literal "last" equals BlockStatement ReturnStatement Cast ReferenceType List MemberReference subject IfStatement BinaryOperation instanceof MemberReference subject ReferenceType Set BlockStatement IfStatement MethodInvocation type Literal "->" equals BlockStatement IfStatement MethodInvocation feature Literal equals BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator c1 Cast ReferenceType Set MemberReference subject LocalVariableDeclaration ReferenceType Set VariableDeclarator c2 Cast ReferenceType Set MemberReference ArraySelector Literal 0 parameters LocalVariableDeclaration ReferenceType Set VariableDeclarator r ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference c1 BlockStatement IfStatement MethodInvocation c2 MemberReference o contains BlockStatement StatementExpression MethodInvocation r MemberReference o add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference c2 BlockStatement IfStatement MethodInvocation c1 MemberReference o contains BlockStatement StatementExpression MethodInvocation r MemberReference o add ReturnStatement MemberReference r IfStatement MethodInvocation feature Literal "including" equals BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator copy Cast ReferenceType Set MethodInvocation Cast ReferenceType Set MemberReference subject cloneCollection StatementExpression MethodInvocation copy MemberReference ArraySelector Literal 0 parameters add ReturnStatement MemberReference copy IfStatement MethodInvocation feature Literal equals BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator copy Cast ReferenceType Set MethodInvocation Cast ReferenceType Set MemberReference subject cloneCollection StatementExpression MethodInvocation copy MemberReference ArraySelector Literal 0 parameters remove ReturnStatement MemberReference copy IfStatement MethodInvocation feature Literal equals BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator c1 Cast ReferenceType Set MemberReference subject LocalVariableDeclaration ReferenceType Set VariableDeclarator c2 Cast ReferenceType Set MemberReference ArraySelector Literal 0 parameters LocalVariableDeclaration ReferenceType Set VariableDeclarator r ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference c1 BlockStatement IfStatement MethodInvocation ! c2 MemberReference o contains BlockStatement StatementExpression MethodInvocation r MemberReference o add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference c2 BlockStatement IfStatement MethodInvocation ! c1 MemberReference o contains BlockStatement StatementExpression MethodInvocation r MemberReference o add ReturnStatement MemberReference r IfStatement BinaryOperation instanceof MemberReference subject ReferenceType Bag BlockStatement IfStatement MethodInvocation type Literal "->" equals BlockStatement IfStatement MethodInvocation feature Literal "count" equals BlockStatement ReturnStatement Cast ReferenceType Bag MemberReference subject ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle FormalParameter ReferenceType String type LocalVariableDeclaration ReferenceType ValueSpecification VariableDeclarator newValueSpecification Literal null IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Property BlockStatement LocalVariableDeclaration ReferenceType Property VariableDeclarator property Cast ReferenceType Property MemberReference handle LocalVariableDeclaration ReferenceType Object VariableDeclarator tabValues Literal null IfStatement MethodInvocation type Literal "LiteralBoolean" equals BlockStatement StatementExpression Assignment MemberReference newValueSpecification Cast ReferenceType ValueSpecification MethodInvocation MethodInvocation UMLPackage.eINSTANCE create = IfStatement MethodInvocation type Literal equals BlockStatement StatementExpression Assignment MemberReference newValueSpecification Cast ReferenceType ValueSpecification MethodInvocation MethodInvocation UMLPackage.eINSTANCE create = IfStatement MethodInvocation type Literal "LiteralString" equals BlockStatement StatementExpression Assignment MemberReference newValueSpecification Cast ReferenceType ValueSpecification MethodInvocation MethodInvocation UMLPackage.eINSTANCE create = StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType String ArrayInitializer Literal "" = IfStatement MethodInvocation type Literal equals BlockStatement StatementExpression Assignment MemberReference newValueSpecification Cast ReferenceType ValueSpecification MethodInvocation MethodInvocation UMLPackage.eINSTANCE getLiteralUnlimitedNatural create = StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType String ArrayInitializer Literal "0" = IfStatement MethodInvocation type Literal equals BlockStatement StatementExpression Assignment MemberReference newValueSpecification Cast ReferenceType ValueSpecification MethodInvocation MethodInvocation UMLPackage.eINSTANCE create = StatementExpression Assignment MemberReference tabValues ArrayCreator ReferenceType String ArrayInitializer Literal "0" = IfStatement MethodInvocation type Literal "OpaqueExpression" equals BlockStatement StatementExpression Assignment MemberReference newValueSpecification Cast ReferenceType ValueSpecification MethodInvocation MethodInvocation UMLPackage.eINSTANCE create = StatementExpression MethodInvocation MemberReference newValueSpecification Literal "" setLanguage StatementExpression MethodInvocation MemberReference newValueSpecification Literal "" setBody IfStatement BinaryOperation != MemberReference tabValues Literal null BlockStatement StatementExpression MethodInvocation MemberReference newValueSpecification MemberReference tabValues IfStatement BinaryOperation != MemberReference newValueSpecification Literal null BlockStatement StatementExpression MethodInvocation property MemberReference newValueSpecification ReturnStatement MemberReference newValueSpecification	1
MethodDeclaration Modifier private static ReferenceType Object getType FormalParameter ReferenceType Object target LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference target getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference type getFacade BlockStatement StatementExpression Assignment MemberReference type MethodInvocation Model MethodInvocation MemberReference type getType getFacade = ReturnStatement MemberReference type	0
MethodDeclaration Modifier public Annotation Override BasicType boolean canAddNode FormalParameter ReferenceType Object node IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference node isAAssociation getFacade MethodInvocation ! Model MethodInvocation MemberReference node isANaryAssociation getFacade BlockStatement StatementExpression MethodInvocation LOG Literal "A binary association cannot be added as a node" debug ReturnStatement Literal false IfStatement BinaryOperation && SuperMethodInvocation MemberReference node canAddNode MethodInvocation ! MemberReference node containsNode BlockStatement ReturnStatement Literal true IfStatement MethodInvocation MemberReference node containsNode BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Addition of node of type " MethodInvocation node MethodInvocation getName getClass Literal " rejected because its already in the graph model" error ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference node isAAssociation getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator ends MethodInvocation Model MethodInvocation MemberReference node getConnections getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation ends iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier MethodInvocation Model MethodInvocation MethodInvocation iter next getClassifier getFacade IfStatement MethodInvocation ! MemberReference classifier containsNode BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "Addition of node of type " MethodInvocation node MethodInvocation getName getClass Literal " rejected because it is connected to a " Literal that is not in the error ReturnStatement Literal false ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference node isAModel getFacade BlockStatement ReturnStatement Literal false IfStatement MethodInvocation Model MethodInvocation MemberReference node isAClassifierRole getFacade BlockStatement ReturnStatement Literal false ReturnStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference node isAClassifier getFacade MethodInvocation Model MethodInvocation MemberReference node isAPackage getFacade MethodInvocation Model MethodInvocation MemberReference node isAStereotype getFacade MethodInvocation Model MethodInvocation MemberReference node isASignal getFacade MethodInvocation Model MethodInvocation MemberReference node isAInstance getFacade	1
MethodDeclaration Modifier public BasicType boolean isUtility FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation ClassReference ReferenceType MethodInvocation Model MethodInvocation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType UmlClass buildClass FormalParameter ReferenceType String name FormalParameter ReferenceType Object owner LocalVariableDeclaration ReferenceType UmlClass VariableDeclarator clazz MethodInvocation buildClass StatementExpression MethodInvocation clazz MemberReference name setName IfStatement BinaryOperation instanceof MemberReference owner ReferenceType Namespace BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference clazz MemberReference owner setNamespace getCoreHelper ReturnStatement MemberReference clazz	0
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation Literal "remove" Literal null Literal null StatementExpression MethodInvocation notifier ClassCreator ReferenceType Literal "remove" This Literal 0 sendNotification	0
MethodDeclaration Modifier synchronized FormalParameter Modifier final ReferenceType List TypeArgument ReferenceType FigMessage messages StatementExpression MethodInvocation StatementExpression MethodInvocation Collections MemberReference messages ClassCreator ReferenceType sort StatementExpression Assignment MemberReference activations MethodInvocation MemberReference messages createStandardActivations = StatementExpression Assignment MemberReference MethodInvocation MemberReference messages createStackedActivations = StatementExpression MethodInvocation MemberReference activations StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation	1
MethodDeclaration Modifier public static ReferenceType String getVisibility FormalParameter ReferenceType Fig f IfStatement MethodInvocation f isVisible BlockStatement ReturnStatement Literal null ReturnStatement Literal "0"	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object clone LocalVariableDeclaration ReferenceType FigSubactivityState VariableDeclarator figClone Cast ReferenceType FigSubactivityState SuperMethodInvocation clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation figClone MethodInvocation iterator getFigs StatementExpression MethodInvocation figClone Cast ReferenceType MethodInvocation it next setBigPort StatementExpression Assignment MemberReference figClone cover Cast ReferenceType MethodInvocation it next = StatementExpression MethodInvocation figClone Cast ReferenceType FigText MethodInvocation it next setNameFig ReturnStatement MemberReference figClone	1
MethodDeclaration Modifier public ReferenceType MBeanNotificationInfo getNotificationInfo ReturnStatement MethodInvocation notifier getNotificationInfo	0
MethodDeclaration Modifier public ReferenceType Include LocalVariableDeclaration ReferenceType Include VariableDeclarator MethodInvocation modelImpl MethodInvocation MethodInvocation getInclude MethodInvocation getUmlPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier static ReferenceType KeyStroke FormalParameter ReferenceType KeyStroke keyStroke ReturnStatement MethodInvocation duplicate MemberReference keyStroke get	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType UMLCheckBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLCheckBox2 VariableDeclarator source Cast ReferenceType UMLCheckBox2 MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation source getTarget IfStatement BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference target isAGeneralizableElement getFacade MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade MethodInvocation Model MethodInvocation MemberReference target getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MethodInvocation source isSelected setAbstract getCoreHelper	0
MethodDeclaration Modifier private sortJListModel FormalParameter ReferenceType JList list LocalVariableDeclaration ReferenceType DefaultListModel VariableDeclarator model Cast ReferenceType DefaultListModel MethodInvocation list getModel LocalVariableDeclaration ReferenceType List VariableDeclarator all ClassCreator ReferenceType ArrayList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation model getSize MemberReference ++ i BlockStatement StatementExpression MethodInvocation all MethodInvocation model MemberReference i getElementAt add StatementExpression MethodInvocation model clear StatementExpression MethodInvocation Collections MemberReference all ClassCreator ReferenceType Comparator MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType Object o1 FormalParameter ReferenceType Object o2 ReturnStatement MethodInvocation o1 MethodInvocation MethodInvocation o2 toString compareTo toString sort ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator obj MemberReference all BlockStatement StatementExpression MethodInvocation model MemberReference obj addElement	1
MethodDeclaration Modifier public StatementExpression MethodInvocation parseState StatementExpression MethodInvocation parseState StatementExpression Assignment MemberReference parseState MethodInvocation pop =	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType JPopupMenu popup FormalParameter BasicType int index ReturnStatement Literal false	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt StatementExpression Cast ReferenceType MethodInvocation getDocument	0
MethodDeclaration Modifier protected ReferenceType ImportInterface getCurrentModule ReturnStatement MemberReference currentModule	0
MethodDeclaration Modifier private ReferenceType Action getActionAggregation IfStatement BinaryOperation == MemberReference actionAggregation Literal null BlockStatement StatementExpression Assignment MemberReference actionAggregation ClassCreator ReferenceType RadioAction ClassCreator ReferenceType MethodInvocation Model MethodInvocation Literal false Literal = ReturnStatement MemberReference actionAggregation	0
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Object oldTarget StatementExpression SuperMethodInvocation MemberReference oldTarget ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator classifier MemberReference BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference classifier Literal "feature" removeModelEventListener getPump StatementExpression MethodInvocation clear	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType PropertyChangeEvent pce StatementExpression MethodInvocation StatementExpression MethodInvocation endTrans	0
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter BasicType boolean showVisibility FormalParameter BasicType boolean useGuillemets IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator derived Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference DERIVED_TAG getTaggedValue getFacade IfStatement BinaryOperation != MemberReference tv Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tag MethodInvocation Model MethodInvocation MemberReference tv getValueOfTag getFacade IfStatement Literal MethodInvocation MemberReference tag equalsIgnoreCase "true" BlockStatement StatementExpression Assignment MemberReference derived Literal "/" = LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name Literal "" = LocalVariableDeclaration ReferenceType String VariableDeclarator visibility Literal "" IfStatement MemberReference showVisibility BlockStatement StatementExpression Assignment MemberReference visibility MethodInvocation NotationUtilityUml MemberReference modelElement generateVisibility2 = IfStatement BinaryOperation < MethodInvocation name length Literal 1 BlockStatement StatementExpression Assignment MemberReference visibility Literal "" = LocalVariableDeclaration ReferenceType String VariableDeclarator stereoString MethodInvocation NotationUtilityUml MemberReference modelElement MemberReference useGuillemets generateStereotype IfStatement BinaryOperation > MethodInvocation stereoString length Literal 0 BlockStatement StatementExpression Assignment MemberReference stereoString Literal " " += ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MemberReference derived MemberReference stereoString MemberReference visibility MemberReference name	1
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation MethodInvocation MethodInvocation MethodInvocation Cast ReferenceType Classifier MemberReference handle getInstance MemberReference handle getRefOutermostPackage CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public ReferenceType String getTaggedValueValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation MemberReference handle MemberReference name getTaggedValue IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal "" ReturnStatement MethodInvocation MemberReference getValueOfTag CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MemberReference	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier private BasicType int newPosition FormalParameter BasicType int index FormalParameter BasicType int size FormalParameter ReferenceType LocalVariableDeclaration Modifier final BasicType int VariableDeclarator IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression Assignment MemberReference BinaryOperation + MemberReference index Literal 1 = IfStatement BinaryOperation == MemberReference MemberReference BlockStatement StatementExpression Assignment MemberReference BinaryOperation - MemberReference index Literal 1 = IfStatement BinaryOperation == MemberReference MemberReference TOP BlockStatement StatementExpression Assignment MemberReference Literal 0 = IfStatement BinaryOperation == MemberReference MemberReference BOTTOM BlockStatement StatementExpression Assignment MemberReference MemberReference size = BlockStatement StatementExpression Assignment MemberReference Literal 0 = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement BinaryOperation || BinaryOperation == MethodInvocation Model MethodInvocation MemberReference dm getName getFacade Literal null Literal "" BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isType getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation Model MethodInvocation MemberReference dm isUtility getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation MemberReference dm Literal 0 findChangeableInstanceAttributeInInherited BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	1
MethodDeclaration Modifier public final mSTAR FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference STAR = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal '*' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public BasicType int IfStatement BinaryOperation == MemberReference Literal null BlockStatement IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement ReturnStatement MethodInvocation parent BlockStatement ReturnStatement Literal 0 ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object getComponentInstance FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public ReferenceType Element lookupIn FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer MemberReference name LocalVariableDeclaration ReferenceType Namespace VariableDeclarator ns Cast ReferenceType Namespace MemberReference handle ForStatement ForControl BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator idx MethodInvocation sb Literal "::" indexOf IfStatement BinaryOperation != MemberReference idx Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType NamedElement VariableDeclarator subspace MethodInvocation MemberReference ns MethodInvocation sb Literal 0 MemberReference idx substring IfStatement BinaryOperation instanceof MemberReference subspace ReferenceType Namespace BlockStatement StatementExpression Assignment MemberReference ns Cast ReferenceType Namespace MemberReference subspace = StatementExpression MethodInvocation sb Literal 0 BinaryOperation + MemberReference idx Literal 2 delete ContinueStatement BlockStatement BreakStatement LocalVariableDeclaration ReferenceType NamedElement VariableDeclarator e MethodInvocation MemberReference ns MethodInvocation sb toString ReturnStatement MemberReference e ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType Component getListCellRendererComponent FormalParameter ReferenceType JList list FormalParameter ReferenceType Object value FormalParameter BasicType int index FormalParameter BasicType boolean isSelected FormalParameter BasicType boolean cellHasFocus LocalVariableDeclaration ReferenceType JLabel VariableDeclarator label Cast ReferenceType JLabel SuperMethodInvocation MemberReference list MemberReference value MemberReference index MemberReference isSelected MemberReference cellHasFocus getListCellRendererComponent StatementExpression MethodInvocation label BinaryOperation + BinaryOperation + Literal MethodInvocation label getText Literal "</html>" setText ReturnStatement MemberReference label	0
MethodDeclaration Modifier protected ReferenceType String getProperty LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Collection VariableDeclarator comments MemberReference Collections EMPTY_LIST IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget isAModelElement getFacade BlockStatement StatementExpression Assignment MemberReference comments MethodInvocation Model MethodInvocation MethodInvocation getTarget getComments getFacade = ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation comments iterator MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation i next LocalVariableDeclaration ReferenceType String VariableDeclarator s IfStatement MemberReference useBody BlockStatement StatementExpression Assignment MemberReference s Cast ReferenceType String MethodInvocation Model MethodInvocation MemberReference c getBody getFacade = BlockStatement StatementExpression Assignment MemberReference s MethodInvocation Model MethodInvocation MemberReference c getName getFacade = IfStatement BinaryOperation == MemberReference s Literal null BlockStatement StatementExpression Assignment MemberReference s Literal "" = StatementExpression MethodInvocation sb MemberReference s append StatementExpression MethodInvocation sb Literal " // " append IfStatement BinaryOperation > MethodInvocation sb length Literal 4 BlockStatement ReturnStatement MethodInvocation sb MethodInvocation toString Literal 0 BinaryOperation - MethodInvocation sb length Literal 4 substring BlockStatement ReturnStatement Literal ""	1
MethodDeclaration deleteSignal FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Signal BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem LocalVariableDeclaration ReferenceType Signal VariableDeclarator signal Cast ReferenceType Signal MemberReference elem StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage MethodInvocation signal refOutermostPackage deleteCollection getUmlHelper StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage MethodInvocation signal refOutermostPackage deleteCollection getUmlHelper	1
MethodDeclaration Modifier public Annotation Override modelChanged FormalParameter ReferenceType UmlChangeEvent evt IfStatement MethodInvocation Model MethodInvocation MethodInvocation evt getSource isATagDefinition getFacade BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Got event " MethodInvocation evt toString debug StatementExpression MethodInvocation IfStatement Literal MethodInvocation MethodInvocation evt getPropertyName equals "stereotype" BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Got stereotype event " MethodInvocation evt toString debug StatementExpression MethodInvocation BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Got other event " MethodInvocation evt toString debug	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Collaboration BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal should be a LocalVariableDeclaration ReferenceType CollaborationUse VariableDeclarator collabUse Cast ReferenceType Collaboration MemberReference handle ReturnStatement TernaryExpression BinaryOperation == MemberReference collabUse Literal null Literal null MethodInvocation collabUse getOwner	1
MethodDeclaration Modifier public addPropertyChangeListener FormalParameter ReferenceType arg0 StatementExpression MethodInvocation dummyAction MemberReference arg0 addPropertyChangeListener	0
MethodDeclaration Modifier public Annotation Deprecated init StatementExpression MethodInvocation Literal true MethodInvocation Configuration Literal Literal makeKey init StatementExpression MethodInvocation diaDefault	0
MethodDeclaration Modifier public ReferenceType String getTaggedValueValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation MemberReference handle MemberReference name getTaggedValue ReturnStatement TernaryExpression BinaryOperation != MemberReference tv Literal null MethodInvocation tv toString Literal ""	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Designer VariableDeclarator dsgr MethodInvocation Designer StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation SubsystemUtility ClassCreator ReferenceType initSubsystem StatementExpression MethodInvocation init StatementExpression MethodInvocation dsgr MethodInvocation Literal lookupIconResource StatementExpression MethodInvocation dsgr MethodInvocation Configuration MemberReference Argo getString StatementExpression MethodInvocation Configuration MemberReference Argo MemberReference dsgr LocalVariableDeclaration ReferenceType Project VariableDeclarator p MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager StatementExpression MethodInvocation dsgr MemberReference p StatementExpression MethodInvocation dsgr ClassCreator ReferenceType ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation p getUserDefinedModelList BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference dsgr MemberReference model addModelEventListener getPump StatementExpression MethodInvocation LOG Literal thread" info StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision PATTERNS startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation dsgr MethodInvocation MemberReference UMLDecision startConsidering getDecisionModel StatementExpression MethodInvocation Designer Literal true	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public mouseClicked FormalParameter ReferenceType MouseEvent e LocalVariableDeclaration BasicType int VariableDeclarator row MethodInvocation tree MethodInvocation e getX MethodInvocation e getY getRowForLocation LocalVariableDeclaration ReferenceType TreePath VariableDeclarator path MethodInvocation tree MethodInvocation e getX MethodInvocation e getY getPathForLocation IfStatement BinaryOperation != MemberReference row Literal - 1 BlockStatement IfStatement BinaryOperation >= MethodInvocation e getClickCount Literal 2 BlockStatement StatementExpression MethodInvocation MemberReference row MemberReference path BlockStatement StatementExpression MethodInvocation MemberReference row MemberReference path StatementExpression MethodInvocation e consume	0
MethodDeclaration Modifier private setNullable FormalParameter ReferenceType TableDefinition tableDef FormalParameter ReferenceType List TypeArgument ReferenceType String columnNames FormalParameter BasicType boolean nullable ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator name MemberReference columnNames BlockStatement StatementExpression MethodInvocation tableDef MethodInvocation MethodInvocation Boolean MemberReference nullable valueOf setNullable MemberReference name	0
MethodDeclaration Modifier public ReferenceType Collection getActivatedMessages FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Message BlockStatement ReturnStatement MethodInvocation MethodInvocation getCollaborations MethodInvocation MethodInvocation Cast ReferenceType Message MemberReference handle getMessage MemberReference handle getRefOutermostPackage CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public ReferenceType Collection ReturnStatement MemberReference	0
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType VariableDeclarator dm MethodInvocation Designer MethodInvocation getDecisionModel LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator decs MethodInvocation dm LocalVariableDeclaration ReferenceType GridBagLayout VariableDeclarator gb ClassCreator ReferenceType GridBagLayout StatementExpression MethodInvocation MemberReference gb setLayout StatementExpression MethodInvocation MethodInvocation BorderFactory Literal 5 Literal 5 Literal 5 Literal 5 createEmptyBorder setBorder LocalVariableDeclaration ReferenceType VariableDeclarator c ClassCreator ReferenceType StatementExpression Assignment MemberReference c fill MemberReference BOTH = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression Assignment MemberReference c weighty Literal 0.0 = StatementExpression Assignment MemberReference c Literal 3 = StatementExpression Assignment MemberReference c Literal 3 = StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = LocalVariableDeclaration ReferenceType JLabel VariableDeclarator decTitleLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal "label.decision" localize StatementExpression MethodInvocation gb MemberReference decTitleLabel MemberReference c setConstraints StatementExpression MethodInvocation MemberReference decTitleLabel add StatementExpression Assignment MemberReference c gridy Literal 0 = StatementExpression Assignment MemberReference c gridx Literal 2 = StatementExpression Assignment MemberReference c gridwidth Literal 8 = LocalVariableDeclaration ReferenceType JLabel VariableDeclarator priLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize StatementExpression MethodInvocation gb MemberReference priLabel MemberReference c setConstraints StatementExpression MethodInvocation MemberReference priLabel add StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c gridx Literal 2 = StatementExpression Assignment MemberReference c gridwidth Literal 2 = LocalVariableDeclaration ReferenceType JLabel VariableDeclarator offLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize StatementExpression MethodInvocation gb MemberReference offLabel MemberReference c setConstraints StatementExpression MethodInvocation MemberReference offLabel add StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c gridx Literal 4 = StatementExpression Assignment MemberReference c gridwidth Literal 2 = LocalVariableDeclaration ReferenceType JLabel VariableDeclarator lowLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize StatementExpression MethodInvocation gb MemberReference lowLabel MemberReference c setConstraints StatementExpression MethodInvocation MemberReference lowLabel add StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c gridx Literal 6 = StatementExpression Assignment MemberReference c gridwidth Literal 2 = LocalVariableDeclaration ReferenceType JLabel VariableDeclarator mediumLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize StatementExpression MethodInvocation gb MemberReference mediumLabel MemberReference c setConstraints StatementExpression MethodInvocation MemberReference mediumLabel add StatementExpression Assignment MemberReference c gridy Literal 1 = StatementExpression Assignment MemberReference c gridx Literal 8 = StatementExpression Assignment MemberReference c gridwidth Literal 2 = LocalVariableDeclaration ReferenceType JLabel VariableDeclarator highLabel ClassCreator ReferenceType JLabel MethodInvocation Translator Literal localize StatementExpression MethodInvocation gb MemberReference highLabel MemberReference c setConstraints StatementExpression MethodInvocation MemberReference highLabel add StatementExpression Assignment MemberReference c gridy Literal 2 = ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator d MemberReference decs BlockStatement LocalVariableDeclaration ReferenceType JLabel VariableDeclarator ClassCreator ReferenceType JLabel MethodInvocation d getName LocalVariableDeclaration ReferenceType JLabel VariableDeclarator ClassCreator ReferenceType JLabel MethodInvocation MethodInvocation d getPriority LocalVariableDeclaration ReferenceType VariableDeclarator decSlide ClassCreator ReferenceType MemberReference SwingConstants HORIZONTAL Literal 1 Literal 4 TernaryExpression BinaryOperation == MethodInvocation d getPriority Literal 0 Literal 4 MethodInvocation d getPriority StatementExpression MethodInvocation decSlide Literal true StatementExpression MethodInvocation decSlide Literal 1 StatementExpression MethodInvocation decSlide Literal true StatementExpression MethodInvocation decSlide Literal true StatementExpression MethodInvocation decSlide This LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation decSlide getPreferredSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator ClassCreator ReferenceType Dimension BinaryOperation / MemberReference width Literal 2 MemberReference height StatementExpression MethodInvocation decSlide MemberReference setSize StatementExpression MethodInvocation decSlide MemberReference setPreferredSize StatementExpression MethodInvocation MemberReference decSlide MemberReference d put StatementExpression MethodInvocation MemberReference decSlide MemberReference put StatementExpression Assignment MemberReference c gridx Literal 0 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c Literal 3 = StatementExpression MethodInvocation gb MemberReference MemberReference c setConstraints StatementExpression MethodInvocation MemberReference add StatementExpression Assignment MemberReference c gridx Literal 1 = StatementExpression Assignment MemberReference c gridwidth Literal 1 = StatementExpression Assignment MemberReference c weightx Literal 0.0 = StatementExpression Assignment MemberReference c Literal 0 = StatementExpression MethodInvocation gb MemberReference MemberReference c setConstraints StatementExpression MethodInvocation MemberReference add StatementExpression Assignment MemberReference c gridx Literal 2 = StatementExpression Assignment MemberReference c gridwidth Literal 8 = StatementExpression Assignment MemberReference c weightx Literal 1.0 = StatementExpression MethodInvocation gb MemberReference decSlide MemberReference c setConstraints StatementExpression MethodInvocation MemberReference decSlide add StatementExpression MemberReference ++ c gridy	1
MethodDeclaration Modifier public static ReferenceType ActionPaste getInstance ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Project VariableDeclarator project MethodInvocation ProjectManager MethodInvocation getCurrentProject getManager LocalVariableDeclaration ReferenceType Object VariableDeclarator newElement MethodInvocation Model MethodInvocation MemberReference metaType MethodInvocation getTarget MemberReference property MethodInvocation project buildNode getUmlFactory StatementExpression MethodInvocation TargetManager MethodInvocation MemberReference newElement setTarget getInstance	1
MethodDeclaration Modifier public Annotation Override ReferenceType String expand FormalParameter ReferenceType String res FormalParameter ReferenceType Object dm LocalVariableDeclaration BasicType int VariableDeclarator searchPos Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator matchPos MethodInvocation res MemberReference OCLEvaluator OCL_START MemberReference searchPos indexOf WhileStatement BinaryOperation != MemberReference matchPos Literal - 1 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator endExpr MethodInvocation res MemberReference OCLEvaluator OCL_END BinaryOperation + MemberReference matchPos Literal 1 indexOf LocalVariableDeclaration ReferenceType String VariableDeclarator expr MethodInvocation res BinaryOperation + MemberReference matchPos MethodInvocation length MemberReference endExpr substring LocalVariableDeclaration ReferenceType String VariableDeclarator evalStr Literal null TryStatement StatementExpression Assignment MemberReference evalStr MethodInvocation MethodInvocation MemberReference dm MemberReference expr getInstance = CatchClause CatchClauseParameter ExpansionException e StatementExpression MethodInvocation LOG Literal "Failed to evaluate critic expression" MemberReference e error CatchClause CatchClauseParameter InvalidElementException e StatementExpression Assignment MemberReference evalStr MethodInvocation Translator Literal "misc.name.deleted" localize = StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal MemberReference expr Literal "' = '" MemberReference evalStr Literal "'" debug StatementExpression Assignment MemberReference res BinaryOperation + BinaryOperation + MethodInvocation res Literal 0 MemberReference matchPos substring MemberReference evalStr MethodInvocation res BinaryOperation + MemberReference endExpr MethodInvocation length substring = StatementExpression Assignment MemberReference searchPos BinaryOperation + MemberReference endExpr Literal 1 = StatementExpression Assignment MemberReference matchPos MethodInvocation res MemberReference OCLEvaluator OCL_START MemberReference searchPos indexOf = ReturnStatement MemberReference res	1
MethodDeclaration Modifier public removeChangeListener FormalParameter ReferenceType l StatementExpression MethodInvocation listenerList ClassReference ReferenceType MemberReference l remove StatementExpression MethodInvocation LOG Literal debug	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public BasicType boolean isConcurrent FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle FormalParameter ReferenceType String type ReturnStatement MethodInvocation impl MemberReference handle MemberReference type	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public load FormalParameter ReferenceType Project project FormalParameter ReferenceType InputStream inputStream OpenException StatementExpression MethodInvocation MemberReference project ClassCreator ReferenceType InputSource MemberReference inputStream load	0
MethodDeclaration Modifier public BasicType boolean isASubsystem FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Component Literal false	1
MethodDeclaration Modifier public ReferenceType Object getMethod ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "Not a UML2 model element"	0
MethodDeclaration Modifier public static FormalParameter Modifier final ReferenceType JDialog dialog LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation dialog getRootPane StatementExpression MethodInvocation MethodInvocation MethodInvocation KeyStroke MemberReference KeyEvent VK_ESCAPE Literal 0 getKeyStroke MemberReference put MemberReference JComponent WHEN_IN_FOCUSED_WINDOW getInputMap StatementExpression MethodInvocation MethodInvocation MemberReference ClassCreator ReferenceType AbstractAction FieldDeclaration Modifier private final static BasicType long VariableDeclarator Literal 0 MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent evt StatementExpression MethodInvocation dialog dispose put getActionMap	0
MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType Generalization VariableDeclarator generalization MethodInvocation StatementExpression MethodInvocation generalization Cast ReferenceType Classifier MemberReference parent StatementExpression MethodInvocation generalization Cast ReferenceType Classifier MemberReference child StatementExpression MethodInvocation MethodInvocation MemberReference generalization add	0
MethodDeclaration Modifier final protected disableTag FormalParameter BasicType int iTagType IllegalArgumentException SwitchStatement MemberReference iTagType SwitchStatementCase TAG_TYPE_ACCESS StatementExpression MethodInvocation tmTags Literal "access" remove BreakStatement SwitchStatementCase TAG_TYPE_AUTHOR StatementExpression MethodInvocation tmTags Literal "author" remove BreakStatement SwitchStatementCase TAG_TYPE_STATIC StatementExpression MethodInvocation tmTags Literal "static" remove BreakStatement SwitchStatementCase TAG_TYPE_VERSION StatementExpression MethodInvocation tmTags Literal "version" remove BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + MemberReference iTagType Literal " is not a valid tag type for	1
MethodDeclaration Modifier public ReferenceType Object getDataType ReturnStatement ClassReference ReferenceType DataType	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType StructuralFeature	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int index LocalVariableDeclaration ReferenceType Editor VariableDeclarator curEditor MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType ModeManager VariableDeclarator modeManager MethodInvocation curEditor LocalVariableDeclaration ReferenceType Mode VariableDeclarator mode MethodInvocation modeManager top StatementExpression MethodInvocation mode Literal Literal true setArg ReturnStatement MethodInvocation Model MethodInvocation getAssociationRole getMetaTypes	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Action getActions LocalVariableDeclaration Modifier final ReferenceType List TypeArgument ReferenceType Action VariableDeclarator actions ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Action LocalVariableDeclaration Modifier final ReferenceType JPopupMenu VariableDeclarator popup ClassCreator ReferenceType JPopupMenu StatementExpression MethodInvocation MemberReference popup Literal 0 LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator elements MethodInvocation popup ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator element MemberReference elements BlockStatement IfStatement BinaryOperation instanceof MemberReference element ReferenceType JMenuItem BlockStatement StatementExpression MethodInvocation actions Cast ReferenceType JMenuItem MemberReference element add ReturnStatement MemberReference actions	0
MethodDeclaration Modifier public buildModel IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator associationEnd MethodInvocation getTarget StatementExpression MethodInvocation MethodInvocation Model MethodInvocation MemberReference associationEnd isStatic getFacade setSelected	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MemberReference dm LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator namesSeen ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String LocalVariableDeclaration ReferenceType Collection VariableDeclarator str MethodInvocation Model MethodInvocation MemberReference cls getFeatures getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator features MethodInvocation str iterator WhileStatement MethodInvocation features hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation features next IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator sf MemberReference o LocalVariableDeclaration ReferenceType String VariableDeclarator sfName MethodInvocation Model MethodInvocation MemberReference sf getName getFacade IfStatement Literal MethodInvocation MemberReference sfName equals "" BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr MemberReference sfName IfStatement BinaryOperation == MethodInvocation nameStr length Literal 0 BlockStatement ContinueStatement StatementExpression MethodInvocation namesSeen MemberReference nameStr add LocalVariableDeclaration ReferenceType Collection VariableDeclarator assocEnds MethodInvocation Model MethodInvocation MemberReference cls getAssociationEnds getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator myEnds MethodInvocation assocEnds iterator WhileStatement MethodInvocation myEnds hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator myAe MethodInvocation myEnds next LocalVariableDeclaration ReferenceType Object VariableDeclarator asc MethodInvocation Model MethodInvocation MemberReference myAe getAssociation getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator conn MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference asc isAAssociationRole getFacade BlockStatement StatementExpression Assignment MemberReference conn MethodInvocation Model MethodInvocation MemberReference asc getConnections getFacade = IfStatement BinaryOperation == MemberReference conn Literal null BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator ascEnds MethodInvocation conn iterator WhileStatement MethodInvocation ascEnds hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation ascEnds next IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference ae getType getFacade MemberReference cls BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator aeName MethodInvocation Model MethodInvocation MemberReference ae getName getFacade IfStatement Literal MethodInvocation MemberReference aeName equals "" BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType String VariableDeclarator aeNameStr MemberReference aeName IfStatement BinaryOperation || BinaryOperation == MemberReference aeNameStr Literal null BinaryOperation == MethodInvocation aeNameStr length Literal 0 BlockStatement ContinueStatement IfStatement MethodInvocation namesSeen MemberReference aeNameStr contains BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Permission	0
MethodDeclaration Modifier public ReferenceType Object getTarget ReturnStatement MemberReference target	0
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement BinaryOperation instanceof MemberReference parent ReferenceType ProfileConfiguration BlockStatement ReturnStatement Cast ReferenceType ProfileConfiguration MemberReference parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae LocalVariableDeclaration ReferenceType Frame VariableDeclarator frame MethodInvocation ArgoFrame getFrame LocalVariableDeclaration ReferenceType VariableDeclarator ClassCreator ReferenceType Literal true LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation getSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator MethodInvocation frame getSize IfStatement BinaryOperation > MemberReference width BinaryOperation / MemberReference width Literal 2 BlockStatement StatementExpression MethodInvocation BinaryOperation / MemberReference width Literal 2 BinaryOperation + MemberReference height Literal 45 setSize BlockStatement StatementExpression MethodInvocation MemberReference width BinaryOperation + MemberReference height Literal 45 setSize StatementExpression MethodInvocation MemberReference frame StatementExpression MethodInvocation Literal true setVisible	0
MethodDeclaration Modifier public doAction FormalParameter BasicType int oldStep SwitchStatement MemberReference oldStep SwitchStatementCase Literal 1 LocalVariableDeclaration ReferenceType String VariableDeclarator newName MethodInvocation getSuggestion IfStatement BinaryOperation != MemberReference step1 Literal null BlockStatement StatementExpression Assignment MemberReference newName MethodInvocation step1 getText = LocalVariableDeclaration ReferenceType Object VariableDeclarator me MethodInvocation getModelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getDefaultReturnType getManager StatementExpression MethodInvocation Model MethodInvocation MemberReference me MemberReference returnType MemberReference newName buildOperation2 getCoreFactory BreakStatement	1
MethodDeclaration Modifier public BasicType boolean isAComment FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType String name FormalParameter BasicType boolean interfacesOnly ClassifierNotFoundException ReturnStatement MethodInvocation MemberReference name MemberReference interfacesOnly Literal null get	0
MethodDeclaration Modifier public addSuccessor FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Message BinaryOperation instanceof MemberReference ReferenceType Message BlockStatement StatementExpression Cast ReferenceType Message MemberReference ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType ActionListener l StatementExpression MethodInvocation theTextField MemberReference l	0
MethodDeclaration Modifier public FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf	1
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType RefObject convertAndLoadUml13 FormalParameter ReferenceType String systemId FormalParameter ReferenceType RefPackage extent FormalParameter ReferenceType XMIReader xmiReader FormalParameter ReferenceType InputSource input FileNotFoundException UmlException IOException MalformedXMIException StatementExpression MethodInvocation LOG BinaryOperation + Literal file doesn't appear to be - " Literal "attempting conversion" info LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator transformFiles ArrayCreator ReferenceType String ArrayInitializer Literal Literal StatementExpression Assignment MemberReference unknownElement Literal false = LocalVariableDeclaration ReferenceType InputSource VariableDeclarator xformedInput MethodInvocation MemberReference transformFiles MemberReference input serialTransform StatementExpression MethodInvocation xformedInput MethodInvocation input getPublicId setPublicId ReturnStatement MethodInvocation xmiReader MethodInvocation xformedInput getByteStream MethodInvocation xformedInput getSystemId MemberReference extent read	1
MethodDeclaration Modifier protected setTarget FormalParameter Modifier final ReferenceType Object theNewTarget AssertStatement BinaryOperation == MethodInvocation getTarget Literal null AssertStatement MethodInvocation Model getFacade StatementExpression Assignment MemberReference listTarget MemberReference theNewTarget = StatementExpression MethodInvocation Model MethodInvocation This MemberReference listTarget MemberReference addModelEventListener getPump StatementExpression MethodInvocation MemberReference listTarget StatementExpression MethodInvocation rebuildModelList	1
MethodDeclaration Modifier public modelElementAdded FormalParameter ReferenceType Object node StatementExpression MethodInvocation Cast ReferenceType MethodInvocation getRoot MemberReference node	0
MethodDeclaration Modifier public close StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation Literal false setVisible StatementExpression MethodInvocation dispose invokeLater	1
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType boolean hasMoreElements ReturnStatement MethodInvocation hasMoreTokens	0
MethodDeclaration Modifier public BasicType boolean isSingleton FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle Literal	0
MethodDeclaration Modifier public FormalParameter Modifier final BasicType boolean showem IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MemberReference MemberReference showem BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Memento VariableDeclarator ClassCreator ReferenceType Memento MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference MemberReference showem = MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference MemberReference ! showem = StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType TaggedValue VariableDeclarator tv Cast ReferenceType ModelElement MemberReference handle BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator type MethodInvocation tv getType IfStatement BinaryOperation && BinaryOperation != MemberReference type Literal null MethodInvocation GENERATED_TAG MethodInvocation type equals BlockStatement ReturnStatement Literal false ReturnStatement Literal true CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean	0
MethodDeclaration Modifier public ReferenceType Object getOwner FormalParameter ReferenceType NotationProvider ReturnStatement MethodInvocation getOwner	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean IfStatement BinaryOperation == MemberReference Literal null BlockStatement IfStatement BinaryOperation != MemberReference parent Literal null BlockStatement ReturnStatement MethodInvocation parent BlockStatement ReturnStatement Literal false ReturnStatement MemberReference	0
MethodDeclaration Modifier private setSelection FormalParameter ReferenceType Object targets StatementExpression Assignment MemberReference Literal true = StatementExpression This MethodInvocation clearSelection StatementExpression MethodInvocation MemberReference targets StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public BasicType boolean isExclusive ReturnStatement MemberReference exclusive	0
MethodDeclaration Modifier public ReferenceType File FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference ImportInterface getTaggedValue getFacade IfStatement BinaryOperation != MemberReference tv Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation Model MethodInvocation MemberReference tv getValueOfTag getFacade IfStatement BinaryOperation != MemberReference Literal null BlockStatement ReturnStatement ClassCreator ReferenceType File MemberReference ReturnStatement Literal null	0
MethodDeclaration Modifier private FormalParameter ReferenceType Object notifier FormalParameter ReferenceType listener FormalParameter ReferenceType String propertyNames FormalParameter ReferenceType Map TypeArgument ReferenceType Object TypeArgument ReferenceType List TypeArgument ReferenceType Listener register IfStatement BinaryOperation || BinaryOperation == MemberReference notifier Literal null BinaryOperation == MemberReference listener Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException BinaryOperation + Literal "The model and the " Literal "listener must be SynchronizedStatement MemberReference mutex LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Listener VariableDeclarator list MethodInvocation register MemberReference notifier get LocalVariableDeclaration BasicType boolean VariableDeclarator found Literal false IfStatement BinaryOperation == MemberReference list Literal null BlockStatement StatementExpression Assignment MemberReference list ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Listener = StatementExpression MethodInvocation register MemberReference notifier MemberReference list put BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Listener VariableDeclarator l MemberReference list BlockStatement IfStatement BinaryOperation == MethodInvocation l getListener MemberReference listener BlockStatement StatementExpression MethodInvocation l MemberReference propertyNames setProperties StatementExpression Assignment MemberReference found Literal true = BreakStatement IfStatement MemberReference ! found BlockStatement StatementExpression MethodInvocation list ClassCreator ReferenceType Listener MemberReference listener MemberReference propertyNames add	1
MethodDeclaration Modifier public FormalParameter ReferenceType per IfStatement BinaryOperation || BinaryOperation == MemberReference perspectives Literal null MethodInvocation ! perspectives MemberReference per contains BlockStatement ReturnStatement StatementExpression MethodInvocation combo MemberReference per setSelectedItem StatementExpression MemberReference ++	1
MethodDeclaration Modifier public ReferenceType String getExtension ReturnStatement Literal "zip"	0
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation Literal "remove" Literal null Literal null StatementExpression MethodInvocation notifier ClassCreator ReferenceType Literal "remove" This Literal 0 sendNotification	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final ReferenceType Collection elems IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of IfStatement BinaryOperation == MemberReference elems Literal null BlockStatement ThrowStatement ClassCreator ReferenceType NullPointerException Literal must be ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference elems BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "the collection must contain " Literal instances of LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MemberReference handle ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference elems BlockStatement StatementExpression Cast ReferenceType MemberReference handle StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Set for the #" MethodInvocation elems size MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier private ParseLocalDeclaration FeatureNotSupportedException LocalVariableDeclaration ReferenceType IdentifierExpression VariableDeclarator declIdentifier MethodInvocation parseQualifiedIdentifier LocalVariableDeclaration ReferenceType IType VariableDeclarator type Cast ReferenceType IType MethodInvocation exprStack pop LocalVariableDeclaration ReferenceType LocalDeclarationStatement VariableDeclarator lnode ClassCreator ReferenceType LocalDeclarationStatement StatementExpression MethodInvocation lnode.Identifiers MemberReference declIdentifier add IfStatement MemberReference isLocalConst BlockStatement StatementExpression Assignment MemberReference lnode IsConstant Literal true = StatementExpression Assignment MemberReference isLocalConst Literal false = StatementExpression Assignment MemberReference lnode Type MemberReference type = WhileStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference curtok id MemberReference TokenID Eof BinaryOperation != MemberReference curtok id MemberReference TokenID Semi BinaryOperation != MemberReference curtok id MemberReference TokenID RParen BlockStatement WhileStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Comma BlockStatement StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference declIdentifier MethodInvocation parseQualifiedIdentifier = StatementExpression MethodInvocation lnode.Identifiers MemberReference declIdentifier add IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Equal BlockStatement StatementExpression MethodInvocation advance StatementExpression Assignment MemberReference lnode RightSide MethodInvocation MemberReference TokenID Comma ParseExpression = IfStatement BinaryOperation == MemberReference curtok id MemberReference TokenID Comma BlockStatement StatementExpression MethodInvocation exprStack MemberReference lnode push StatementExpression Assignment MemberReference lnode ClassCreator ReferenceType LocalDeclarationStatement = StatementExpression Assignment MemberReference lnode Type MemberReference type = StatementExpression MethodInvocation exprStack MemberReference lnode push	1
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType char c IfStatement BinaryOperation == MemberReference c Literal '\n' BlockStatement StatementExpression Assignment MemberReference Literal true = ReturnStatement Literal true IfStatement BinaryOperation == MemberReference c Literal '\r' BlockStatement StatementExpression Assignment MemberReference Literal true = ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier static protected initializeHash StatementExpression Assignment MemberReference unitHash ClassCreator ReferenceType Hashtable = StatementExpression MethodInvocation unitHash Literal "in" ClassCreator ReferenceType Float MemberReference pixelsPerInch put StatementExpression MethodInvocation unitHash Literal "cm" ClassCreator ReferenceType Float BinaryOperation / MemberReference pixelsPerInch Literal 2.54 put StatementExpression MethodInvocation unitHash Literal "mm" ClassCreator ReferenceType Float BinaryOperation / MemberReference pixelsPerInch Literal 25.4 put StatementExpression MethodInvocation unitHash Literal "pc" ClassCreator ReferenceType Float BinaryOperation * BinaryOperation / MemberReference pixelsPerInch Literal 72 Literal 12 put StatementExpression MethodInvocation unitHash Literal "pt" ClassCreator ReferenceType Float BinaryOperation / MemberReference pixelsPerInch Literal 72 put StatementExpression MethodInvocation unitHash Literal "px" ClassCreator ReferenceType Float Literal 1 put	1
MethodDeclaration Modifier public ReferenceType List getPorts FormalParameter ReferenceType Object nodeOrEdge LocalVariableDeclaration ReferenceType List VariableDeclarator res ClassCreator ReferenceType ArrayList IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isANode getFacade BlockStatement StatementExpression MethodInvocation res MemberReference nodeOrEdge add IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isANodeInstance getFacade BlockStatement StatementExpression MethodInvocation res MemberReference nodeOrEdge add IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAComponent getFacade BlockStatement StatementExpression MethodInvocation res MemberReference nodeOrEdge add IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAComponentInstance getFacade BlockStatement StatementExpression MethodInvocation res MemberReference nodeOrEdge add IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAClass getFacade BlockStatement StatementExpression MethodInvocation res MemberReference nodeOrEdge add IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAInterface getFacade BlockStatement StatementExpression MethodInvocation res MemberReference nodeOrEdge add IfStatement MethodInvocation Model MethodInvocation MemberReference nodeOrEdge isAObject getFacade BlockStatement StatementExpression MethodInvocation res MemberReference nodeOrEdge add ReturnStatement MemberReference res	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f StatementExpression MethodInvocation MethodInvocation Literal true getFig	0
MethodDeclaration Modifier public final BasicType boolean setDescription FormalParameter ReferenceType String sBlockDesc IfStatement BinaryOperation && BinaryOperation != MemberReference sBlockDesc Literal null BinaryOperation > MethodInvocation sBlockDesc MethodInvocation length trim Literal 0 BlockStatement StatementExpression Assignment MemberReference sDescription MethodInvocation sBlockDesc trim = ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType FigClassAssociationClass getAssociationClass LocalVariableDeclaration ReferenceType VariableDeclarator figEdgeLink Literal null LocalVariableDeclaration ReferenceType List VariableDeclarator edges Literal null LocalVariableDeclaration ReferenceType VariableDeclarator figEdgePort This MethodInvocation getEdgePort IfStatement BinaryOperation != MemberReference figEdgePort Literal null BlockStatement StatementExpression Assignment MemberReference edges MethodInvocation figEdgePort = IfStatement BinaryOperation != MemberReference edges Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation edges iterator BinaryOperation && MethodInvocation it hasNext BinaryOperation == MemberReference figEdgeLink Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement StatementExpression Assignment MemberReference figEdgeLink Cast ReferenceType MemberReference o = LocalVariableDeclaration ReferenceType FigNode VariableDeclarator figClassBox Literal null IfStatement BinaryOperation != MemberReference figEdgeLink Literal null BlockStatement StatementExpression Assignment MemberReference figClassBox MethodInvocation figEdgeLink = IfStatement BinaryOperation instanceof MemberReference figClassBox ReferenceType FigClassAssociationClass BlockStatement StatementExpression Assignment MemberReference figClassBox MethodInvocation figEdgeLink getSourceFigNode = ReturnStatement Cast ReferenceType FigClassAssociationClass MemberReference figClassBox	0
MethodDeclaration Modifier public BasicType long getPosition ReturnStatement MemberReference position	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object expr IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Action BinaryOperation || BinaryOperation == MemberReference expr Literal null BinaryOperation instanceof MemberReference expr ReferenceType ActionExpression BlockStatement LocalVariableDeclaration ReferenceType Action VariableDeclarator a Cast ReferenceType Action MemberReference handle LocalVariableDeclaration ReferenceType ActionExpression VariableDeclarator MethodInvocation a getScript LocalVariableDeclaration ReferenceType ActionExpression VariableDeclarator Cast ReferenceType ActionExpression MemberReference expr IfStatement MethodInvocation MemberReference MemberReference equal BlockStatement ReturnStatement StatementExpression MethodInvocation a MemberReference IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MemberReference delete getUmlFactory ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference expr	0
MethodDeclaration Modifier public ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr ReturnStatement ClassCreator ReferenceType ToDoItem This MemberReference dm MemberReference dsgr	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object sig ThrowStatement ClassCreator ReferenceType NotYetImplementedException	1
MethodDeclaration Modifier private LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator ClassCreator ReferenceType ArrayList TypeArgument ReferenceType StatementExpression MethodInvocation MethodInvocation PerspectiveManager MethodInvocation getInstance addAll StatementExpression MethodInvocation Collections MemberReference ClassCreator ReferenceType Comparator TypeArgument ReferenceType MethodDeclaration Modifier public BasicType int compare FormalParameter ReferenceType o1 FormalParameter ReferenceType o2 ReturnStatement MethodInvocation o1 MethodInvocation MethodInvocation o2 toString compareTo toString sort LocalVariableDeclaration ReferenceType ExplorerPerspective VariableDeclarator selPers Cast ReferenceType ExplorerPerspective MethodInvocation getSelectedValue IfStatement BinaryOperation != MemberReference selPers Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MethodInvocation selPers BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator MemberReference BlockStatement IfStatement MethodInvocation MethodInvocation MethodInvocation toString equals toString BlockStatement StatementExpression MethodInvocation MemberReference remove BreakStatement StatementExpression MethodInvocation clear ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator rule MemberReference BlockStatement StatementExpression MethodInvocation MemberReference rule addElement StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String getTabKey ReturnStatement Literal	0
MethodDeclaration Modifier public BasicType boolean contains FormalParameter ReferenceType Object o ReturnStatement MethodInvocation map MemberReference o containsKey	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType AbstractArgoJPanel ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public Annotation Deprecated diagramFontChanged FormalParameter ReferenceType ArgoDiagramAppearanceEvent e StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation redraw	1
MethodDeclaration Modifier public addInterface FormalParameter ReferenceType String name FormalParameter BasicType short modifiers FormalParameter ReferenceType List TypeArgument ReferenceType String interfaces FormalParameter ReferenceType String javadoc StatementExpression MethodInvocation MemberReference name MemberReference modifiers MemberReference EMPTY_STRING_LIST MemberReference interfaces MemberReference javadoc Literal false addInterface	1
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter ReferenceType String text FormalParameter ReferenceType String name FormalParameter ReferenceType Object ns FormalParameter ReferenceType Object trans LocalVariableDeclaration ReferenceType Object VariableDeclarator evt MethodInvocation Model MethodInvocation MemberReference ns getStateMachinesFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference evt MemberReference text setName getCoreHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation Model MethodInvocation MemberReference trans MemberReference text getStateMachinesHelper IfStatement BinaryOperation != MemberReference op Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference evt MemberReference op setOperation getCommonBehaviorHelper ReturnStatement MemberReference evt	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent e StatementExpression MethodInvocation BinaryOperation > MethodInvocation MethodInvocation getSelectedIndex Literal 0 setEnabled	0
MethodDeclaration Modifier private readerToWriter FormalParameter ReferenceType Reader reader FormalParameter ReferenceType Writer writer IOException LocalVariableDeclaration BasicType int VariableDeclarator ch WhileStatement BinaryOperation != Assignment MemberReference ch MethodInvocation reader read = Literal - 1 BlockStatement IfStatement BinaryOperation == MemberReference ch Literal 0xFFFF BlockStatement StatementExpression MethodInvocation LOG Literal out 0xFFFF from save file" info IfStatement BinaryOperation == MemberReference ch Literal 8 BlockStatement StatementExpression MethodInvocation LOG Literal out from save file" info BlockStatement StatementExpression MethodInvocation writer MemberReference ch write	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference element getFacade BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade MemberReference element	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb LocalVariableDeclaration ReferenceType String VariableDeclarator comma Literal "" ForStatement EnhancedForControl VariableDeclaration ReferenceType ExpressionNode VariableDeclarator node MemberReference expressions BlockStatement StatementExpression MethodInvocation sb MemberReference comma append StatementExpression Assignment MemberReference comma Literal ", " = StatementExpression MethodInvocation node MemberReference sb ToSource	1
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier public BasicType int getEventType ReturnStatement MemberReference	0
MethodDeclaration Modifier public init StatementExpression MethodInvocation NotationProviderFactory2 getInstance	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean enable IfStatement BinaryOperation == MemberReference myLang Literal null BlockStatement StatementExpression Assignment MemberReference myLang MethodInvocation BinaryOperation + MemberReference MemberReference version MethodInvocation MemberReference lookupIconResource makeLanguage = StatementExpression MethodInvocation MethodInvocation MemberReference myLang ClassCreator ReferenceType MemberReference version getInstance StatementExpression MethodInvocation ReturnStatement Literal true	0
MethodDeclaration Modifier static ReferenceType String generateParameter FormalParameter ReferenceType Object parameter LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator s ClassCreator ReferenceType StringBuffer StatementExpression MethodInvocation s MethodInvocation MethodInvocation Model MethodInvocation MemberReference parameter getKind getFacade generateKind append IfStatement BinaryOperation > MethodInvocation s length Literal 0 BlockStatement StatementExpression MethodInvocation s Literal " " append StatementExpression MethodInvocation s MethodInvocation Model MethodInvocation MemberReference parameter getName getFacade append LocalVariableDeclaration ReferenceType String VariableDeclarator classRef MethodInvocation MethodInvocation Model MethodInvocation MemberReference parameter getType getFacade generateClassifierRef IfStatement BinaryOperation > MethodInvocation classRef length Literal 0 BlockStatement StatementExpression MethodInvocation s Literal " : " append StatementExpression MethodInvocation s MemberReference classRef append LocalVariableDeclaration ReferenceType String VariableDeclarator defaultValue MethodInvocation MethodInvocation Model MethodInvocation MemberReference parameter getDefaultValue getFacade generateExpression IfStatement BinaryOperation > MethodInvocation defaultValue length Literal 0 BlockStatement StatementExpression MethodInvocation s Literal " = " append StatementExpression MethodInvocation s MemberReference defaultValue append ReturnStatement MethodInvocation s toString	1
MethodDeclaration Modifier public addConstraint FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object mc IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference mc ReferenceType Constraint BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference mc	0
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType String name ClassifierNotFoundException ReturnStatement MethodInvocation MemberReference name Literal false get	0
MethodDeclaration Modifier public setMultiplicity FormalParameter Modifier final ReferenceType Object handle FormalParameter BasicType int lower FormalParameter BasicType int upper LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator lowerStr IfStatement BinaryOperation == MemberReference lower Literal - 1 BlockStatement StatementExpression Assignment MemberReference lowerStr Literal "*" = BlockStatement StatementExpression Assignment MemberReference lowerStr MethodInvocation Integer MemberReference lower toString = LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator upperStr IfStatement BinaryOperation == MemberReference upper Literal - 1 BlockStatement StatementExpression Assignment MemberReference upperStr Literal "*" = BlockStatement StatementExpression Assignment MemberReference upperStr MethodInvocation Integer MemberReference lower toString = StatementExpression MethodInvocation MemberReference handle BinaryOperation + BinaryOperation + MemberReference lowerStr Literal ".." MemberReference upperStr setMultiplicity	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier private BasicType boolean isPredecessorMsg FormalParameter ReferenceType Object pre FormalParameter ReferenceType Object FormalParameter BasicType int md LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation Model MethodInvocation MemberReference getPredecessors MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MethodInvocation it next IfStatement BinaryOperation == MemberReference m MemberReference pre BlockStatement ReturnStatement Literal true IfStatement BinaryOperation && BinaryOperation > MemberReference md Literal 0 MethodInvocation MemberReference pre MemberReference m BinaryOperation - MemberReference md Literal 1 isPredecessorMsg BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public parse FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType String text TryStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference text CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator msg Literal LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ArgoEventTypes This MethodInvocation Translator MemberReference msg MemberReference args	0
MethodDeclaration Modifier protected ReferenceType Action getApplyStereotypeActions LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator elements ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation != MemberReference owner Literal null BlockStatement StatementExpression MethodInvocation elements MemberReference owner add ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation TargetManager MethodInvocation getTargets getInstance BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator element Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference o isAUMLElement getFacade BlockStatement StatementExpression Assignment MemberReference element MemberReference o = IfStatement BinaryOperation instanceof MemberReference o ReferenceType Fig BlockStatement StatementExpression Assignment MemberReference element Cast ReferenceType Fig MemberReference o = IfStatement BinaryOperation && BinaryOperation != MemberReference element Literal null BinaryOperation != MemberReference element MemberReference owner BlockStatement StatementExpression MethodInvocation elements MemberReference element add ReturnStatement MethodInvocation StereotypeUtility MemberReference elements getApplyStereotypeActions	1
MethodDeclaration Modifier public ReferenceType Object getRegion ReturnStatement ClassReference ReferenceType Region	0
MethodDeclaration Modifier public BasicType boolean isAActor FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier private ReferenceType String generateSpecification FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" LocalVariableDeclaration ReferenceType Collection VariableDeclarator realizations MethodInvocation Model MethodInvocation MemberReference cls getCoreHelper IfStatement BinaryOperation == MethodInvocation realizations size Literal 0 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType Iterator VariableDeclarator clsEnum MethodInvocation realizations iterator WhileStatement MethodInvocation clsEnum hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator i MethodInvocation clsEnum next StatementExpression Assignment MemberReference s MethodInvocation MemberReference i generateClassifierRef += IfStatement MethodInvocation clsEnum hasNext BlockStatement StatementExpression Assignment MemberReference s Literal ", " += ReturnStatement MemberReference s	1
MethodDeclaration Modifier public Annotation Override BasicType boolean isCellEditable FormalParameter BasicType int row FormalParameter BasicType int col ReturnStatement Literal true	0
MethodDeclaration update LocalVariableDeclaration ReferenceType String VariableDeclarator oldText MethodInvocation getText LocalVariableDeclaration ReferenceType String VariableDeclarator newText MethodInvocation model getBody IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference oldText Literal null BinaryOperation == MemberReference newText Literal null MethodInvocation ! oldText MemberReference newText equals BlockStatement IfStatement BinaryOperation != MemberReference oldText MemberReference newText BlockStatement StatementExpression MethodInvocation MemberReference newText setText	1
MethodDeclaration Modifier public static ReferenceType Set TypeArgument ReferenceType Object getAvailableStereotypes FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType List VariableDeclarator paths ClassCreator ReferenceType HashSet TypeArgument ReferenceType List LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator availableStereotypes ClassCreator ReferenceType TreeSet TypeArgument ReferenceType Object ClassCreator ReferenceType PathComparator IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator models MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModels getManager LocalVariableDeclaration ReferenceType Collection VariableDeclarator topLevelModels MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModels getManager LocalVariableDeclaration ReferenceType Collection VariableDeclarator topLevelStereotypes MethodInvocation MemberReference topLevelModels getTopLevelStereotypes LocalVariableDeclaration ReferenceType Collection VariableDeclarator validTopLevelStereotypes ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation MemberReference availableStereotypes MemberReference paths MethodInvocation Model MethodInvocation MemberReference models MemberReference modelElement getAllPossibleStereotypes getExtensionMechanismsHelper addAllUniqueModelElementsFrom ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator stereotype MemberReference topLevelStereotypes BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference stereotype getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation validTopLevelStereotypes MemberReference stereotype add StatementExpression MethodInvocation MemberReference availableStereotypes MemberReference paths MemberReference validTopLevelStereotypes addAllUniqueModelElementsFrom LocalVariableDeclaration ReferenceType Object VariableDeclarator namespace MethodInvocation Model MethodInvocation MemberReference modelElement getNamespace getFacade IfStatement BinaryOperation != MemberReference namespace Literal null BlockStatement WhileStatement Literal true BlockStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference paths MemberReference availableStereotypes MemberReference namespace getApplicableStereotypesInNamespace LocalVariableDeclaration ReferenceType Object VariableDeclarator newNamespace MethodInvocation Model MethodInvocation MemberReference namespace getNamespace getFacade IfStatement BinaryOperation == MemberReference newNamespace Literal null BlockStatement BreakStatement StatementExpression Assignment MemberReference namespace MemberReference newNamespace = StatementExpression MethodInvocation MemberReference availableStereotypes MemberReference paths MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getProfileConfiguration MethodInvocation MemberReference modelElement getManager addAllUniqueModelElementsFrom ReturnStatement MemberReference availableStereotypes	1
MethodDeclaration Modifier public final function_direct_declarator RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType String VariableDeclarator q Literal "" BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LPAREN BlockStatement StatementExpression MethodInvocation MemberReference LPAREN match StatementExpression Assignment MemberReference q MethodInvocation qualified_id = IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference q MemberReference CPPvariables QI_FUN declaratorID StatementExpression MethodInvocation MemberReference RPAREN match BreakStatement SwitchStatementCase ID OPERATOR LITERAL_this LITERAL_true LITERAL_false SCOPE BlockStatement StatementExpression Assignment MemberReference q MethodInvocation qualified_id = IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference q MemberReference CPPvariables QI_FUN declaratorID BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression MethodInvocation m MemberReference q StatementExpression MethodInvocation MemberReference LPAREN match BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_typedef LITERAL_enum ID LITERAL_inline LITERAL_extern LITERAL__inline LITERAL___inline LITERAL_virtual LITERAL_explicit LITERAL_friend LITERAL__stdcall LITERAL___stdcall LITERAL__declspec LITERAL___declspec LPAREN LITERAL_typename LITERAL_auto LITERAL_register LITERAL_static LITERAL_mutable LITERAL_const LITERAL_const_cast LITERAL_volatile LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void LITERAL_class LITERAL_struct LITERAL_union OPERATOR LITERAL_this LITERAL_true LITERAL_false STAR AMPERSAND TILDE ELLIPSIS SCOPE LITERAL__cdecl LITERAL___cdecl LITERAL__near LITERAL___near LITERAL__far LITERAL___far LITERAL___interrupt LITERAL_pascal LITERAL__pascal LITERAL___pascal BlockStatement StatementExpression MethodInvocation parameter_list BreakStatement SwitchStatementCase RPAREN BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MethodInvocation MemberReference RPAREN match BlockStatement DoStatement _loop232 Literal true BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation >= MethodInvocation Literal 1 LA MemberReference LITERAL_const BinaryOperation <= MethodInvocation Literal 1 LA MemberReference LITERAL_volatile MethodInvocation _tokenSet_47 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation type_qualifier BlockStatement BreakStatement _loop232 BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase ASSIGNEQUAL BlockStatement StatementExpression MethodInvocation MemberReference ASSIGNEQUAL match StatementExpression MethodInvocation MemberReference OCTALINT match BreakStatement SwitchStatementCase LITERAL_typedef LITERAL_enum ID LCURLY SEMICOLON LITERAL_inline LITERAL_extern LITERAL__inline LITERAL___inline LITERAL_virtual LITERAL_explicit LITERAL_friend LITERAL__stdcall LITERAL___stdcall LITERAL__declspec LITERAL___declspec LITERAL_typename LITERAL_auto LITERAL_register LITERAL_static LITERAL_mutable LITERAL_const LITERAL_const_cast LITERAL_volatile LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void LITERAL_class LITERAL_struct LITERAL_union LITERAL_throw LITERAL_using SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_throw BlockStatement StatementExpression MethodInvocation exception_specification BreakStatement SwitchStatementCase LITERAL_typedef LITERAL_enum ID LCURLY SEMICOLON LITERAL_inline LITERAL_extern LITERAL__inline LITERAL___inline LITERAL_virtual LITERAL_explicit LITERAL_friend LITERAL__stdcall LITERAL___stdcall LITERAL__declspec LITERAL___declspec LITERAL_typename LITERAL_auto LITERAL_register LITERAL_static LITERAL_mutable LITERAL_const LITERAL_const_cast LITERAL_volatile LITERAL_char LITERAL_wchar_t LITERAL_bool LITERAL_short LITERAL_int Literal 44 Literal 45 Literal 46 LITERAL_long LITERAL_signed LITERAL_unsigned LITERAL_float LITERAL_double LITERAL_void LITERAL_class LITERAL_struct LITERAL_union LITERAL_using SCOPE BlockStatement BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object ns ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAEnumeration getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add StatementExpression MethodInvocation set MethodInvocation Model MethodInvocation MemberReference parent getEnumerationLiterals getFacade addAll ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public Annotation Override ReferenceType Class getWizardClass FormalParameter ReferenceType ToDoItem item ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier private ReferenceType String generateHeaderPackageStart FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 80 IfStatement BinaryOperation != MemberReference actualNamespace Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator lastSearch MemberReference actualNamespace ForStatement ForControl VariableDeclaration ReferenceType Object VariableDeclarator fromSearch MemberReference actualNamespace BinaryOperation != MemberReference fromSearch Literal null Assignment MemberReference lastSearch MethodInvocation MemberReference fromSearch getNamespaceWithoutModel = BlockStatement StatementExpression Assignment MemberReference fromSearch MemberReference lastSearch = LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator contPath ClassCreator ReferenceType StringBuffer Literal 80 LocalVariableDeclaration ReferenceType Object VariableDeclarator toSearch MethodInvocation MemberReference cls getNamespaceWithoutModel ForStatement ForControl BinaryOperation && BinaryOperation != MemberReference toSearch Literal null BinaryOperation != MemberReference toSearch MemberReference fromSearch Assignment MemberReference toSearch MethodInvocation MemberReference toSearch getNamespaceWithoutModel = BlockStatement StatementExpression MethodInvocation contPath Literal 0 MethodInvocation MemberReference toSearch generateHeaderPackageStartSingle insert IfStatement BinaryOperation == MemberReference toSearch MemberReference fromSearch BlockStatement StatementExpression MethodInvocation sb MethodInvocation contPath toString append BreakStatement StatementExpression MethodInvocation sb MethodInvocation MemberReference fromSearch generateHeaderPackageEndSingle append BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Object VariableDeclarator toSearch MethodInvocation MemberReference cls getNamespaceWithoutModel BinaryOperation != MemberReference toSearch Literal null Assignment MemberReference toSearch MethodInvocation MemberReference toSearch getNamespaceWithoutModel = BlockStatement StatementExpression MethodInvocation sb Literal 0 MethodInvocation MemberReference toSearch generateHeaderPackageStartSingle insert StatementExpression Assignment MemberReference actualNamespace MethodInvocation MemberReference cls getNamespaceWithoutModel = ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference extensionPointsFigCompartment Literal null BlockStatement StatementExpression Assignment MemberReference extensionPointsFigCompartment ClassCreator ReferenceType MethodInvocation getOwner MemberReference MethodInvocation getSettings = ReturnStatement MemberReference extensionPointsFigCompartment	0
MethodDeclaration * See for more info on */ Modifier public Annotation Override mouseClicked FormalParameter ReferenceType MouseEvent me IfStatement MemberReference ! BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator owner MethodInvocation getOwner IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference owner isAModelElement getFacade MethodInvocation ! Model MethodInvocation MemberReference owner isReadOnly getModelManagementHelper BlockStatement StatementExpression Assignment MemberReference Literal true = BlockStatement StatementExpression MethodInvocation LOG Literal "not ready to edit debug ReturnStatement IfStatement MethodInvocation me isConsumed BlockStatement ReturnStatement IfStatement BinaryOperation && BinaryOperation >= MethodInvocation me getClickCount Literal 2 BinaryOperation || MethodInvocation me isPopupTrigger BinaryOperation == MethodInvocation me getModifiers MemberReference InputEvent BUTTON3_MASK BlockStatement IfStatement BinaryOperation == MethodInvocation getOwner Literal null BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation ClassCreator ReferenceType Rectangle BinaryOperation - MethodInvocation me getX Literal 2 BinaryOperation - MethodInvocation me getY Literal 2 Literal 4 Literal 4 IfStatement BinaryOperation instanceof MemberReference f ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference f StatementExpression MethodInvocation me consume	0
MethodDeclaration Modifier protected LocalVariableDeclaration Modifier final ReferenceType Rectangle VariableDeclarator bounds MethodInvocation getBounds StatementExpression MethodInvocation MethodInvocation MemberReference bounds setBounds getBorder StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType Rectangle BinaryOperation + MemberReference bounds x MethodInvocation getLeftMargin BinaryOperation + MemberReference bounds y MethodInvocation getTopMargin BinaryOperation - MemberReference bounds width BinaryOperation + MethodInvocation getLeftMargin MethodInvocation getRightMargin BinaryOperation - MemberReference bounds height BinaryOperation + MethodInvocation getTopMargin MethodInvocation getBottomMargin setBounds	0
MethodDeclaration Modifier public FormalParameter ReferenceType String IfStatement BinaryOperation && BinaryOperation != MemberReference fontName Literal null MethodInvocation fontName MemberReference equals BlockStatement ReturnStatement StatementExpression Assignment MemberReference fontName MemberReference = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation = ReturnStatement MemberReference	0
MethodDeclaration Modifier private initializeEditingDomain LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation System Literal "eUML.resources" getProperty LocalVariableDeclaration ReferenceType BasicCommandStack VariableDeclarator commandStack ClassCreator ReferenceType BasicCommandStack MethodDeclaration Modifier protected Annotation Override handleError FormalParameter ReferenceType Exception exception StatementExpression SuperMethodInvocation MemberReference exception handleError ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference exception LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType VariableDeclarator factories ClassCreator ReferenceType ArrayList TypeArgument ReferenceType StatementExpression MethodInvocation factories ClassCreator ReferenceType add StatementExpression MethodInvocation factories ClassCreator ReferenceType UMLItemProviderAdapterFactory add StatementExpression MethodInvocation factories ClassCreator ReferenceType add StatementExpression MethodInvocation factories ClassCreator ReferenceType add LocalVariableDeclaration ReferenceType ComposedAdapterFactory VariableDeclarator adapterFactory ClassCreator ReferenceType ComposedAdapterFactory MemberReference factories StatementExpression Assignment MemberReference ClassCreator ReferenceType UML2AdapterFactoryEditingDomain MemberReference adapterFactory MemberReference commandStack MemberReference = LocalVariableDeclaration ReferenceType ResourceSet VariableDeclarator resourceSet MethodInvocation getResourceSet LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType Object VariableDeclarator extensionToFactoryMap MethodInvocation resourceSet MethodInvocation getResourceFactoryRegistry LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType URI TypeArgument ReferenceType URI VariableDeclarator uriMap MethodInvocation resourceSet MethodInvocation getURIMap IfStatement BinaryOperation != MemberReference path Literal null BlockStatement TryStatement LocalVariableDeclaration ReferenceType FileInputStream VariableDeclarator in ClassCreator ReferenceType FileInputStream MemberReference path StatementExpression MethodInvocation in close CatchClause CatchClauseParameter IOException e ThrowStatement ClassCreator ReferenceType RuntimeException MemberReference e StatementExpression Assignment MemberReference path MethodInvocation path Literal '\\' Literal '/' replace = LocalVariableDeclaration ReferenceType URI VariableDeclarator uri MethodInvocation URI BinaryOperation + BinaryOperation + Literal "jar:file:" MemberReference path Literal "!/" createURI StatementExpression MethodInvocation LOG BinaryOperation + Literal "eUML.resource URI " MemberReference uri debug LocalVariableDeclaration ReferenceType VariableDeclarator packageRegistry MethodInvocation resourceSet StatementExpression MethodInvocation packageRegistry MemberReference UMLPackage eNS_URI MemberReference UMLPackage eINSTANCE put StatementExpression MethodInvocation packageRegistry MemberReference EcorePackage eNS_URI MemberReference EcorePackage eINSTANCE put StatementExpression MethodInvocation packageRegistry MemberReference XMI212UMLResource MemberReference UMLPackage eINSTANCE put StatementExpression MethodInvocation packageRegistry MemberReference XMI212UMLResource MemberReference UMLPackage eINSTANCE put StatementExpression MethodInvocation packageRegistry MemberReference XMI212UMLResource MemberReference UMLPackage eINSTANCE put StatementExpression MethodInvocation packageRegistry MemberReference XMI212UMLResource MemberReference UMLPackage eINSTANCE put StatementExpression MethodInvocation packageRegistry MemberReference XMI212UMLResource MemberReference UMLPackage eINSTANCE put StatementExpression MethodInvocation packageRegistry MemberReference XMI212UMLResource UML_METAMODEL_NS_URI MemberReference UMLPackage eINSTANCE put StatementExpression MethodInvocation packageRegistry MemberReference XMI212UMLResource UML_METAMODEL_URI MemberReference UMLPackage eINSTANCE put StatementExpression MethodInvocation packageRegistry MemberReference UML_METAMODEL_NS_URI MemberReference UMLPackage eINSTANCE put StatementExpression MethodInvocation packageRegistry Literal MemberReference UMLPackage eINSTANCE put StatementExpression MethodInvocation extensionToFactoryMap MemberReference UMLResource FILE_EXTENSION MemberReference INSTANCE put StatementExpression MethodInvocation uriMap MethodInvocation URI MemberReference UMLResource createURI MethodInvocation uri MethodInvocation Literal "" appendSegment Literal appendSegment put StatementExpression MethodInvocation uriMap MethodInvocation URI MemberReference UMLResource createURI MethodInvocation uri MethodInvocation Literal "" appendSegment Literal appendSegment put StatementExpression MethodInvocation uriMap MethodInvocation URI MemberReference UMLResource createURI MethodInvocation uri MethodInvocation Literal "" appendSegment Literal "profiles" appendSegment put StatementExpression MethodInvocation extensionToFactoryMap MemberReference UML22UMLResource FILE_EXTENSION MemberReference INSTANCE put StatementExpression MethodInvocation extensionToFactoryMap MemberReference XMI2UMLResource FILE_EXTENSION MemberReference INSTANCE put StatementExpression MethodInvocation uriMap MethodInvocation getURIMap putAll StatementExpression MethodInvocation uriMap MethodInvocation getURIMap putAll	1
MethodDeclaration Modifier protected ReferenceType FigText getNameFig ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType DiagramElement ReturnStatement Literal null	0
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType List VariableDeclarator ret ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator model MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation getModelElement getMetaTypes StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation MemberReference model MemberReference getAllModelElementsOfKind getModelManagementHelper addAll StatementExpression MethodInvocation ret MethodInvocation getTarget remove ReturnStatement MemberReference ret	0
MethodDeclaration Modifier private ReferenceType FormalParameter ReferenceType Project p ImportException TryStatement LocalVariableDeclaration ReferenceType VariableDeclarator modeler ClassCreator ReferenceType MemberReference p IfStatement MethodInvocation LOG isDebugEnabled BlockStatement LocalVariableDeclaration ReferenceType InvocationHandler VariableDeclarator handler ClassCreator ReferenceType MemberReference modeler StatementExpression Assignment MemberReference modeler Cast ReferenceType MethodInvocation Proxy ClassReference MethodInvocation getClassLoader ReferenceType ArrayCreator ReferenceType Class ArrayInitializer ClassReference ReferenceType MemberReference handler newProxyInstance = ReturnStatement MemberReference modeler CatchClause CatchClauseParameter ProfileException e ThrowStatement ClassCreator ReferenceType ImportException Literal "Exception thrown while creating the C++ MemberReference e	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object container StatementExpression MethodInvocation impl MemberReference handle MemberReference container	0
MethodDeclaration Modifier private final BasicType boolean setTag FormalParameter ReferenceType String sTagName FormalParameter ReferenceType String sTagValue IllegalArgumentException IfStatement MethodInvocation sTagName Literal "documentation" equals BlockStatement ReturnStatement MethodInvocation MemberReference sTagValue setDescription IfStatement MethodInvocation sTagName Literal "access" equals BlockStatement ReturnStatement MethodInvocation MemberReference TAG_TYPE_ACCESS MemberReference sTagValue setTag IfStatement MethodInvocation sTagName Literal "abstract" equals BlockStatement ReturnStatement MethodInvocation MemberReference TAG_TYPE_ABSTRACT MemberReference sTagValue setTag IfStatement MethodInvocation sTagName Literal "author" equals BlockStatement ReturnStatement MethodInvocation MemberReference TAG_TYPE_AUTHOR MemberReference sTagValue setTag IfStatement MethodInvocation sTagName Literal "deprecated" equals BlockStatement ReturnStatement MethodInvocation MemberReference TAG_TYPE_DEPRECATED MemberReference sTagValue setTag IfStatement MethodInvocation sTagName Literal "package" equals BlockStatement ReturnStatement MethodInvocation MemberReference TAG_TYPE_PACKAGE MemberReference sTagValue setTag IfStatement MethodInvocation sTagName Literal "return" equals BlockStatement ReturnStatement MethodInvocation MemberReference TAG_TYPE_RETURN MemberReference sTagValue setTag IfStatement MethodInvocation sTagName Literal "see" equals BlockStatement ReturnStatement MethodInvocation MemberReference TAG_TYPE_SEE MemberReference sTagValue setTag IfStatement MethodInvocation sTagName Literal "since" equals BlockStatement ReturnStatement MethodInvocation MemberReference TAG_TYPE_SINCE MemberReference sTagValue setTag IfStatement MethodInvocation sTagName Literal "static" equals BlockStatement ReturnStatement MethodInvocation MemberReference TAG_TYPE_STATIC MemberReference sTagValue setTag IfStatement MethodInvocation sTagName Literal "subpackage" equals BlockStatement ReturnStatement MethodInvocation MemberReference TAG_TYPE_SUBPACKAGE MemberReference sTagValue setTag IfStatement MethodInvocation sTagName Literal "var" equals BlockStatement ReturnStatement MethodInvocation MemberReference TAG_TYPE_VAR MemberReference sTagValue setTag IfStatement MethodInvocation sTagName Literal "version" equals BlockStatement ReturnStatement MethodInvocation MemberReference TAG_TYPE_VERSION MemberReference sTagValue setTag BlockStatement IfStatement BinaryOperation && BinaryOperation && MethodInvocation ! sTagName Literal equals MethodInvocation ! sTagName Literal equals MethodInvocation ! sTagName Literal "volatile" equals BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal not set value '" MemberReference sTagValue Literal "' for tag '" MemberReference sTagName Literal "'" ReturnStatement Literal true	1
MethodDeclaration Modifier private ReferenceType Object getPackage FormalParameter ReferenceType String name FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType Object VariableDeclarator mPackage MethodInvocation MemberReference name MemberReference IfStatement BinaryOperation == MemberReference mPackage Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MemberReference model LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference name Literal "." WhileStatement MethodInvocation st hasMoreTokens BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation st nextToken StatementExpression Assignment MemberReference mPackage MethodInvocation Model MethodInvocation MemberReference MemberReference lookupIn getFacade = IfStatement BinaryOperation || BinaryOperation == MemberReference mPackage Literal null MethodInvocation ! Model MethodInvocation MemberReference mPackage isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference mPackage MethodInvocation Model MethodInvocation MethodInvocation MemberReference = StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference mPackage addOwnedElement getCoreHelper StatementExpression MethodInvocation newElements MemberReference mPackage add StatementExpression Assignment MemberReference MemberReference mPackage = ReturnStatement MemberReference mPackage	0
MethodDeclaration Modifier public Annotation Override StatementExpression SuperMethodInvocation StatementExpression MethodInvocation Literal "remove" Literal null Literal null StatementExpression MethodInvocation notifier ClassCreator ReferenceType Literal "remove" This Literal 0 sendNotification	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType Enumeration	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement toString	0
MethodDeclaration Modifier public FormalParameter BasicType boolean StatementExpression Assignment This MemberReference MemberReference = StatementExpression MethodInvocation Configuration MemberReference MemberReference setBoolean	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public static StatementExpression MethodInvocation init	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType List TypeArgument ReferenceType ClassdiagramNode nodes LocalVariableDeclaration BasicType int VariableDeclarator left Literal LocalVariableDeclaration BasicType int VariableDeclarator right Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference nodes BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator x MethodInvocation node MemberReference x getLocation StatementExpression Assignment MemberReference left MethodInvocation Math MemberReference left MemberReference x min = StatementExpression Assignment MemberReference right MethodInvocation Math MemberReference right BinaryOperation + MemberReference x MethodInvocation node MemberReference width getSize max = ReturnStatement BinaryOperation / BinaryOperation + MemberReference right MemberReference left Literal 2	0
MethodDeclaration Modifier public set FormalParameter ReferenceType String value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setMultiplicity getComponent	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation impl MemberReference handle	0
MethodDeclaration Modifier public static ReferenceType GUI getInstance ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object template FormalParameter ReferenceType Object parameter FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier private ReferenceType Object buildNewCallAction FormalParameter ReferenceType String s LocalVariableDeclaration ReferenceType Object VariableDeclarator a MethodInvocation Model MethodInvocation getCommonBehaviorFactory LocalVariableDeclaration ReferenceType Object VariableDeclarator ae MethodInvocation Model MethodInvocation MemberReference LANGUAGE MemberReference s getDataTypesFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference a MemberReference ae getCommonBehaviorHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference a Literal "anon" setName getCoreHelper ReturnStatement MemberReference a	1
MethodDeclaration Modifier private ReferenceType String generateHeader FormalParameter ReferenceType Object cls FormalParameter ReferenceType String pathname FormalParameter ReferenceType String packagePath LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + Literal "// " MethodInvocation pathname Literal '\\' Literal '/' replace Literal "\n\n" += StatementExpression Assignment MemberReference s MethodInvocation MemberReference cls MemberReference packagePath generateImports += IfStatement BinaryOperation > MethodInvocation packagePath length Literal 0 BlockStatement StatementExpression Assignment MemberReference s BinaryOperation + BinaryOperation + Literal "namespace " MemberReference packagePath Literal " {\n" += StatementExpression Assignment MemberReference s Literal "\n" += ReturnStatement MemberReference s	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType newView IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null BinaryOperation == MemberReference MemberReference newView BlockStatement ReturnStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator oldValue MemberReference LocalVariableDeclaration ReferenceType Memento VariableDeclarator ClassCreator ReferenceType Memento MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference MemberReference newView = MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference MemberReference oldValue = StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAUseCase getFacade BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade MemberReference o	0
MethodDeclaration Modifier public BasicType boolean shouldBeEnabled FormalParameter ReferenceType Object newTarget ReturnStatement BinaryOperation instanceof MemberReference newTarget ReferenceType ArgoDiagram	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference predicate	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object param FormalParameter ReferenceType String isReference StatementExpression MethodInvocation MemberReference MemberReference TV_NAME_REFERENCE MemberReference param MemberReference isReference	0
MethodDeclaration Modifier public BasicType int getIconHeight ReturnStatement Literal 0	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier protected ReferenceType getComponent ReturnStatement MemberReference impl	0
MethodDeclaration Modifier private init StatementExpression MethodInvocation This	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement getAssociationEnds getFacade	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Stereotype BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType Stereotype MemberReference elem deleteCollection getUmlHelper StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType Stereotype MemberReference elem deleteCollection getUmlHelper	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType e StatementExpression MethodInvocation MemberReference e	1
MethodDeclaration Modifier public ReferenceType getStateMachinesFactory IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object getOwner FormalParameter ReferenceType NotationProvider ReturnStatement MethodInvocation getOwner	0
MethodDeclaration Modifier public FormalParameter BasicType boolean b StatementExpression Assignment MemberReference flat Literal false = IfStatement MemberReference b BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference flat MemberReference b =	0
MethodDeclaration Modifier public synchronized undo LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator command MethodInvocation undoStack pop StatementExpression MethodInvocation command undo IfStatement MethodInvocation ! command BlockStatement StatementExpression MethodInvocation clear StatementExpression MethodInvocation MemberReference command push	0
MethodDeclaration Modifier public undo StatementExpression MethodInvocation npSettings MemberReference ! showem setShowVisibilities StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent	0
MethodDeclaration Modifier public static ReferenceType ProfileManager getManager IfStatement BinaryOperation == MemberReference manager Literal null BlockStatement StatementExpression MethodInvocation Literal ReturnStatement MemberReference manager	0
MethodDeclaration Modifier public ReferenceType Object getReturnParameter ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType String name FormalParameter ReferenceType Object owner FormalParameter ReferenceType Object namespace ReturnStatement MethodInvocation MemberReference name MemberReference owner MemberReference namespace Literal null	0
MethodDeclaration Modifier public Annotation Override paint FormalParameter ReferenceType Graphics g LocalVariableDeclaration Modifier final ReferenceType Fig VariableDeclarator fig MethodInvocation getContent IfStatement MethodInvocation MethodInvocation getContent BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation g MethodInvocation Globals MethodInvocation MemberReference fig setColor StatementExpression MethodInvocation g BinaryOperation - MemberReference cx BinaryOperation / MemberReference Literal 2 BinaryOperation - MemberReference cy BinaryOperation / MemberReference Literal 2 MemberReference MemberReference fillRect StatementExpression MethodInvocation g BinaryOperation - BinaryOperation + MemberReference cx MemberReference cw BinaryOperation / MemberReference Literal 2 BinaryOperation - MemberReference cy BinaryOperation / MemberReference Literal 2 MemberReference MemberReference fillRect StatementExpression MethodInvocation g BinaryOperation - MemberReference cx BinaryOperation / MemberReference Literal 2 BinaryOperation - BinaryOperation + MemberReference cy MemberReference ch BinaryOperation / MemberReference Literal 2 MemberReference MemberReference fillRect StatementExpression MethodInvocation g BinaryOperation - BinaryOperation + MemberReference cx MemberReference cw BinaryOperation / MemberReference Literal 2 BinaryOperation - BinaryOperation + MemberReference cy MemberReference ch BinaryOperation / MemberReference Literal 2 MemberReference MemberReference fillRect BlockStatement LocalVariableDeclaration Modifier final BasicType int VariableDeclarator x MethodInvocation fig getX LocalVariableDeclaration Modifier final BasicType int VariableDeclarator y MethodInvocation fig getY LocalVariableDeclaration Modifier final BasicType int VariableDeclarator w MethodInvocation fig getWidth LocalVariableDeclaration Modifier final BasicType int VariableDeclarator h MethodInvocation fig getHeight StatementExpression MethodInvocation g MethodInvocation Globals MethodInvocation MemberReference fig setColor StatementExpression MethodInvocation g BinaryOperation - MemberReference x MemberReference BORDER_WIDTH BinaryOperation - MemberReference y MemberReference BORDER_WIDTH BinaryOperation - BinaryOperation + MemberReference w BinaryOperation * MemberReference BORDER_WIDTH Literal 2 Literal 1 BinaryOperation - BinaryOperation + MemberReference h BinaryOperation * MemberReference BORDER_WIDTH Literal 2 Literal 1 StatementExpression MethodInvocation g BinaryOperation - BinaryOperation - MemberReference x MemberReference BORDER_WIDTH Literal 1 BinaryOperation - BinaryOperation - MemberReference y MemberReference BORDER_WIDTH Literal 1 BinaryOperation - BinaryOperation + BinaryOperation + MemberReference w BinaryOperation * MemberReference BORDER_WIDTH Literal 2 Literal 2 Literal 1 BinaryOperation - BinaryOperation + BinaryOperation + MemberReference h BinaryOperation * MemberReference BORDER_WIDTH Literal 2 Literal 2 Literal 1 StatementExpression MethodInvocation g BinaryOperation - MemberReference x MemberReference BinaryOperation - MemberReference y MemberReference MemberReference MemberReference fillRect StatementExpression MethodInvocation g BinaryOperation + MemberReference x MemberReference w BinaryOperation - MemberReference y MemberReference MemberReference MemberReference fillRect StatementExpression MethodInvocation g BinaryOperation - MemberReference x MemberReference BinaryOperation + MemberReference y MemberReference h MemberReference MemberReference fillRect StatementExpression MethodInvocation g BinaryOperation + MemberReference x MemberReference w BinaryOperation + MemberReference y MemberReference h MemberReference MemberReference fillRect	0
MethodDeclaration Modifier public ReferenceType ReturnStatement ClassCreator ReferenceType	0
MethodDeclaration Modifier protected FormalParameter ReferenceType XMLElement e LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation e MethodInvocation trim getText StatementExpression MethodInvocation project MemberReference setDescription	0
MethodDeclaration Modifier public run TryStatement StatementExpression MethodInvocation removeFromDiagram CatchClause CatchClauseParameter InvalidElementException e StatementExpression MethodInvocation LOG BinaryOperation + Literal "updateLayout method accessed " Literal "deleted element" MemberReference e error	0
MethodDeclaration Modifier public Annotation Override BasicType int getLineWidth ReturnStatement MethodInvocation head getLineWidth	0
MethodDeclaration Modifier public BasicType boolean LocalVariableDeclaration ReferenceType String VariableDeclarator flags MethodInvocation Configuration MemberReference Argo KEY_IMPORT_GENERAL_SETTINGS_FLAGS getString IfStatement BinaryOperation && BinaryOperation != MemberReference flags Literal null BinaryOperation > MethodInvocation flags length Literal 0 BlockStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference flags Literal "," StatementExpression MethodInvocation MemberReference st Literal 1 IfStatement BinaryOperation && MethodInvocation st hasMoreTokens MethodInvocation st MethodInvocation Literal "false" equals nextToken BlockStatement ReturnStatement Literal false ReturnStatement Literal true	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object getNewNodeType FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getMetaTypes	0
MethodDeclaration Modifier protected Annotation Override initNotationProviders FormalParameter ReferenceType Object IfStatement BinaryOperation != MemberReference notationProviderBody Literal null BlockStatement StatementExpression MethodInvocation notationProviderBody StatementExpression SuperMethodInvocation MemberReference initNotationProviders LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation Notation MethodInvocation MethodInvocation getNotationSettings IfStatement MethodInvocation Model MethodInvocation MemberReference isAState getFacade BlockStatement StatementExpression Assignment MemberReference notationProviderBody MethodInvocation NotationProviderFactory2 MethodInvocation MemberReference NotationProviderFactory2 MemberReference This MemberReference getInstance =	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement getFacade	0
MethodDeclaration Modifier static protected ReferenceType String FormalParameter ReferenceType Object obj IfStatement MethodInvocation Model MethodInvocation MemberReference obj isAUMLElement getFacade BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference obj ReferenceType IItemUID BlockStatement LocalVariableDeclaration ReferenceType ItemUID VariableDeclarator uid ClassCreator ReferenceType ItemUID StatementExpression Cast ReferenceType IItemUID MemberReference obj ReturnStatement MethodInvocation uid toString LocalVariableDeclaration ReferenceType Class VariableDeclarator params ArrayCreator ReferenceType Class Literal 1 LocalVariableDeclaration ReferenceType Object VariableDeclarator mparam StatementExpression Assignment MemberReference ArraySelector Literal 0 params MemberReference = TryStatement LocalVariableDeclaration ReferenceType Method VariableDeclarator m MethodInvocation obj MethodInvocation Literal MemberReference params getMethod getClass StatementExpression Assignment MemberReference mparam ArrayCreator ReferenceType Object Literal 1 = StatementExpression Assignment MemberReference ArraySelector Literal 0 mparam ClassCreator ReferenceType ItemUID = StatementExpression MethodInvocation m MemberReference obj MemberReference mparam invoke CatchClause CatchClauseParameter NoSuchMethodException nsme ReturnStatement Literal null CatchClause CatchClauseParameter SecurityException se ReturnStatement Literal null CatchClause CatchClauseParameter InvocationTargetException tie StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "setItemUID for " MethodInvocation obj getClass Literal " threw" MemberReference tie error ReturnStatement Literal null CatchClause CatchClauseParameter IllegalAccessException iace ReturnStatement Literal null CatchClause CatchClauseParameter IllegalArgumentException iare StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "setItemUID for " MethodInvocation obj getClass Literal " takes strange parameter" MemberReference iare error ReturnStatement Literal null CatchClause CatchClauseParameter StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "setItemUID for " MethodInvocation obj getClass Literal " threw" MemberReference error ReturnStatement Literal null ReturnStatement MemberReference ArraySelector Literal 0 MethodInvocation toString mparam	1
MethodDeclaration Modifier public FormalParameter ReferenceType Point newPoint LocalVariableDeclaration BasicType int VariableDeclarator MethodInvocation MemberReference newPoint StatementExpression MethodInvocation MemberReference ArraySelector Literal 0 StatementExpression MethodInvocation MemberReference ArraySelector Literal 1	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator k MethodInvocation Model MethodInvocation MemberReference dm getKind getFacade IfStatement MethodInvocation ! Model MethodInvocation MemberReference k MethodInvocation Model MethodInvocation getJoin getPseudostateKind getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference dm getFacade LocalVariableDeclaration ReferenceType Collection VariableDeclarator MethodInvocation Model MethodInvocation MemberReference dm getIncomings getFacade LocalVariableDeclaration BasicType int VariableDeclarator TernaryExpression BinaryOperation == MemberReference Literal null Literal 0 MethodInvocation size LocalVariableDeclaration BasicType int VariableDeclarator TernaryExpression BinaryOperation == MemberReference Literal null Literal 0 MethodInvocation size IfStatement BinaryOperation > MemberReference Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND IfStatement BinaryOperation == MemberReference Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	0
MethodDeclaration Modifier public ReferenceType Operation buildOperation2 FormalParameter ReferenceType Object cls FormalParameter ReferenceType Object returnType FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Operation VariableDeclarator oper MethodInvocation MemberReference cls MemberReference returnType IfStatement BinaryOperation != MemberReference oper Literal null BlockStatement StatementExpression MethodInvocation oper MemberReference name setName ReturnStatement MemberReference oper	0
MethodDeclaration Modifier private ReferenceType JLabel createLabelFor FormalParameter ReferenceType String label FormalParameter ReferenceType Component comp LocalVariableDeclaration ReferenceType JLabel VariableDeclarator jlabel ClassCreator ReferenceType JLabel MethodInvocation Translator MemberReference label localize StatementExpression MethodInvocation jlabel MethodInvocation Translator MemberReference label localize setToolTipText StatementExpression MethodInvocation jlabel MemberReference setFont StatementExpression MethodInvocation jlabel MemberReference comp setLabelFor ReturnStatement MemberReference jlabel	0
MethodDeclaration Modifier private ReferenceType Object getStereotype FormalParameter ReferenceType Object me FormalParameter ReferenceType String name FormalParameter ReferenceType String baseClass LocalVariableDeclaration ReferenceType Collection VariableDeclarator models MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModels getManager LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereos MethodInvocation Model MethodInvocation MemberReference models MemberReference me getAllPossibleStereotypes getExtensionMechanismsHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator stereotype Literal null IfStatement BinaryOperation && BinaryOperation != MemberReference stereos Literal null BinaryOperation > MethodInvocation stereos size Literal 0 BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation stereos iterator WhileStatement MethodInvocation iter hasNext BlockStatement StatementExpression Assignment MemberReference stereotype MethodInvocation iter next = IfStatement MethodInvocation Model MethodInvocation MemberReference stereotype MemberReference name MemberReference baseClass isStereotypeInh getExtensionMechanismsHelper BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Returning the existing stereotype of <<" MethodInvocation Model MethodInvocation MemberReference stereotype getName getFacade Literal ">>" info ReturnStatement MemberReference stereotype IfStatement BinaryOperation != MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not find " Literal "a suitable stereotype for " MethodInvocation Model MethodInvocation MemberReference me getName getFacade Literal " - stereotype: <<" MemberReference name Literal ">> base: " MemberReference baseClass Literal Literal "Check if environment variable " Literal "is correctly set." StatementExpression Assignment MemberReference stereotype MethodInvocation MemberReference name getUML1Stereotype = IfStatement BinaryOperation != MemberReference stereotype Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference stereotype MemberReference me addBaseClass getExtensionMechanismsHelper ReturnStatement MemberReference stereotype ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Could not find " Literal "a suitable stereotype for " MethodInvocation Model MethodInvocation MemberReference me getName getFacade Literal " - stereotype: <<" MemberReference name Literal ">> base: " MemberReference baseClass	1
MethodDeclaration Modifier public static register FormalParameter ReferenceType Critic cr FormalParameter ReferenceType Object clazz StatementExpression MethodInvocation MemberReference cr Cast ReferenceType Class MemberReference clazz register	0
MethodDeclaration Modifier public Annotation Override addNode FormalParameter ReferenceType Object node StatementExpression MethodInvocation LOG Literal "adding node" debug IfStatement MethodInvocation ! MemberReference node canAddNode BlockStatement ReturnStatement StatementExpression MethodInvocation MethodInvocation MemberReference node add getNodes IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference node isAUMLElement getFacade BinaryOperation == MethodInvocation Model MethodInvocation MemberReference node getNamespace getFacade Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getHomeModel MemberReference node addOwnedElement getCoreHelper StatementExpression MethodInvocation MemberReference node fireNodeAdded	1
MethodDeclaration Modifier public addComment FormalParameter ReferenceType Object element FormalParameter ReferenceType Object IfStatement BinaryOperation && BinaryOperation instanceof MemberReference element ReferenceType ModelElement BinaryOperation instanceof MemberReference ReferenceType BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference element ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal " MemberReference element	0
MethodDeclaration Modifier protected ReferenceType Collection ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getOwner getEnumerationLiterals getFacade	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType String values IfStatement BinaryOperation instanceof MemberReference handle ReferenceType TaggedValue BlockStatement LocalVariableDeclaration ReferenceType TaggedValue VariableDeclarator tv Cast ReferenceType TaggedValue MemberReference handle LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType String VariableDeclarator MethodInvocation tv StatementExpression MethodInvocation clear StatementExpression MethodInvocation Collections MemberReference MemberReference values addAll	0
MethodDeclaration Modifier public BasicType boolean isAggregate FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation AggregationKind.SHARED_LITERAL Cast ReferenceType Property MemberReference handle equals	1
MethodDeclaration Modifier public setAbstract FormalParameter Modifier final ReferenceType Object handle FormalParameter Modifier final BasicType boolean isAbstract IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Classifier BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal must be instance " Literal "of Classifier or LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement StatementExpression Cast ReferenceType Classifier MemberReference handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BehavioralFeature BlockStatement StatementExpression Cast ReferenceType BehavioralFeature MemberReference handle StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal "Set isAbstract to for #" MemberReference isAbstract MemberReference handle execute getCommandStack	0
MethodDeclaration Modifier private dispatch FormalParameter ReferenceType Container theAWTContainer LocalVariableDeclaration BasicType int VariableDeclarator count MethodInvocation theAWTContainer getComponentCount LocalVariableDeclaration ReferenceType Component VariableDeclarator component ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference count MemberReference ++ i BlockStatement StatementExpression Assignment MemberReference component MethodInvocation theAWTContainer MemberReference i getComponent = IfStatement BinaryOperation instanceof MemberReference component ReferenceType Container BlockStatement StatementExpression MethodInvocation Cast ReferenceType Container MemberReference component dispatch IfStatement BinaryOperation && BinaryOperation instanceof MemberReference component ReferenceType UMLUserInterfaceComponent MethodInvocation component isVisible BlockStatement SwitchStatement MemberReference SwitchStatementCase TARGET_CHANGED_ADD StatementExpression Cast ReferenceType UMLUserInterfaceComponent MemberReference component BreakStatement SwitchStatementCase TARGET_REASSERTED StatementExpression Cast ReferenceType UMLUserInterfaceComponent MemberReference component BreakStatement	1
MethodDeclaration Modifier public ReferenceType String ReturnStatement MethodInvocation diagram	0
MethodDeclaration Modifier public ReferenceType String getBody FormalParameter ReferenceType Object ReturnStatement MethodInvocation impl MemberReference getBody	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation Model MethodInvocation Literal "" Literal "" createBooleanExpression getDataTypesFactory	0
MethodDeclaration Modifier public ReferenceType IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType This = ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override setReadOnly FormalParameter Modifier final ReferenceType Object handle FormalParameter BasicType boolean flag StatementExpression MethodInvocation ClassCreator ReferenceType BooleanSetter MethodDeclaration Modifier public set FormalParameter BasicType boolean value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setReadOnly getComponent MemberReference flag MethodInvocation Model MethodInvocation MemberReference handle isReadOnly getFacade createCommand	1
MethodDeclaration BasicType int getLeftMargin ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Object model IfStatement BinaryOperation || BinaryOperation instanceof MemberReference model ReferenceType Element BinaryOperation instanceof MemberReference modelElement ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal and model must be instances of LocalVariableDeclaration ReferenceType Collection VariableDeclarator result ClassCreator ReferenceType ArrayList IfStatement MethodInvocation MemberReference modelElement MemberReference model isValidNamespace BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Namespace MemberReference model add LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator helper MethodInvocation modelImpl getModelManagementHelper ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation helper MemberReference model ClassReference ReferenceType Namespace getAllModelElementsOfKind BlockStatement IfStatement MethodInvocation MemberReference modelElement MemberReference o isValidNamespace BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Namespace MemberReference o add ReturnStatement MemberReference result	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public IfStatement BinaryOperation == MemberReference obsoleteFeatures Literal null BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator feature MemberReference obsoleteFeatures BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference classifier MemberReference feature getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference feature delete getUmlFactory	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier private BasicType int LocalVariableDeclaration BasicType int VariableDeclarator practicalView MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator modelElement MethodInvocation getOwner IfStatement BinaryOperation != MemberReference modelElement Literal null BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator stereotypeCount MethodInvocation IfStatement BinaryOperation == MethodInvocation MemberReference DiagramAppearance STEREOTYPE_VIEW_BIG_ICON BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator figNodeStrategy MethodInvocation MethodInvocation getProfileConfiguration MethodInvocation getFigNodeStrategy getProject LocalVariableDeclaration ReferenceType Iterator TypeArgument ReferenceType FigStereotype VariableDeclarator figsIterator MethodInvocation MethodInvocation MethodInvocation iterator LocalVariableDeclaration ReferenceType Object VariableDeclarator owner TernaryExpression MethodInvocation figsIterator hasNext MethodInvocation figsIterator MethodInvocation getOwner next Literal null IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation != MemberReference stereotypeCount Literal 1 BinaryOperation == MemberReference figNodeStrategy Literal null BinaryOperation == MemberReference owner Literal null BinaryOperation && BinaryOperation == MemberReference stereotypeCount Literal 1 BinaryOperation == MethodInvocation figNodeStrategy MemberReference owner getIconForStereotype Literal null BlockStatement StatementExpression Assignment MemberReference practicalView MemberReference DiagramAppearance STEREOTYPE_VIEW_TEXTUAL = ReturnStatement MemberReference practicalView	1
MethodDeclaration Modifier public BasicType boolean isAsynchronous FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Action BlockStatement TryStatement ReturnStatement Cast ReferenceType Action MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentBoolean	0
MethodDeclaration Modifier protected Annotation Override BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier public ReferenceType TokenCollection lex IOException ImportInterface.ImportException StatementExpression Assignment MemberReference tokens ClassCreator ReferenceType TokenCollection = StatementExpression Assignment MemberReference StringLiterals ClassCreator ReferenceType ArrayList TypeArgument ReferenceType String = LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator sb ClassCreator ReferenceType StringBuilder LocalVariableDeclaration BasicType int VariableDeclarator loc Literal 0 StatementExpression Assignment MemberReference c MethodInvocation src read = WhileStatement BinaryOperation != MemberReference c Literal - 1 BlockStatement SwitchStatement MemberReference c SwitchStatementCase Literal - 1 BlockStatement BreakStatement SwitchStatementCase Cast BasicType int Literal '\t' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = WhileStatement BinaryOperation == MemberReference c Cast BasicType int Literal '\t' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal ' ' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = WhileStatement BinaryOperation == MemberReference c Cast BasicType int Literal ' ' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '\r' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '\n' StatementExpression Assignment MemberReference c MethodInvocation src read = StatementExpression MemberReference ++ curLine StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Newline add BreakStatement SwitchStatementCase Cast BasicType int Literal '\n' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = StatementExpression MemberReference ++ curLine StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Newline add BreakStatement SwitchStatementCase Cast BasicType int Literal '@' Cast BasicType int Literal '\'' Cast BasicType int Literal '"' BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator isVerbatim Literal false IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '@' BlockStatement StatementExpression Assignment MemberReference isVerbatim Literal true = StatementExpression Assignment MemberReference c MethodInvocation src read = StatementExpression Assignment MemberReference sb ClassCreator ReferenceType StringBuilder = LocalVariableDeclaration BasicType int VariableDeclarator quote MemberReference c LocalVariableDeclaration BasicType boolean VariableDeclarator isSingleQuote BinaryOperation == MemberReference c Cast BasicType int Literal '\'' StatementExpression Assignment MemberReference c MethodInvocation src read = WhileStatement BinaryOperation != MemberReference c Literal - 1 BlockStatement IfStatement BinaryOperation && BinaryOperation == MemberReference c Cast BasicType int Literal '\\' MemberReference ! isVerbatim BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = SwitchStatement MemberReference c SwitchStatementCase Literal - 1 BlockStatement StatementExpression Assignment MemberReference brokenInnerLoop1 Literal true = BreakStatement SwitchStatementCase Literal 0 BlockStatement StatementExpression MethodInvocation sb Literal '\0' append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal 'b' BlockStatement StatementExpression MethodInvocation sb Literal '\b' append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal 'f' BlockStatement StatementExpression MethodInvocation sb Literal '\f' append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal 'n' BlockStatement StatementExpression MethodInvocation sb Literal '\n' append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal 'r' BlockStatement StatementExpression MethodInvocation sb Literal '\r' append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal 't' BlockStatement StatementExpression MethodInvocation sb Literal '\t' append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '\\' BlockStatement StatementExpression MethodInvocation sb Literal '\\' append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '\'' BlockStatement StatementExpression MethodInvocation sb Literal '\'' append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '\"' BlockStatement StatementExpression MethodInvocation sb Literal append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append BreakStatement IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '\"' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation && BinaryOperation == MemberReference c Cast BasicType int Literal '\"' MemberReference isVerbatim BlockStatement StatementExpression MethodInvocation sb Literal append StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement MemberReference isSingleQuote BlockStatement StatementExpression MethodInvocation sb Literal '\"' append BlockStatement BreakStatement BlockStatement IfStatement BinaryOperation == MemberReference c MemberReference quote BlockStatement BreakStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement MemberReference brokenInnerLoop1 BlockStatement StatementExpression Assignment MemberReference brokenInnerLoop1 Literal false = StatementExpression Assignment MemberReference brokenInnerLoop2 Literal true = BreakStatement IfStatement MemberReference brokenInnerLoop2 BlockStatement StatementExpression Assignment MemberReference brokenInnerLoop1 Literal false = StatementExpression Assignment MemberReference brokenInnerLoop2 Literal false = BreakStatement IfStatement BinaryOperation != MemberReference c Literal - 1 BlockStatement IfStatement BinaryOperation == MemberReference c MemberReference quote BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = StatementExpression Assignment MemberReference loc MethodInvocation StringLiterals size = StatementExpression MethodInvocation StringLiterals MethodInvocation sb toString add IfStatement BinaryOperation == MemberReference quote Literal '"' StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID StringLiteral MemberReference loc add StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID CharLiteral MemberReference loc add BreakStatement SwitchStatementCase Cast BasicType int Literal '!' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID NotEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Not add BreakStatement SwitchStatementCase Cast BasicType int Literal '#' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Hash add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '$' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Dollar add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '%' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID PercentEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Percent add BreakStatement SwitchStatementCase Cast BasicType int Literal '&' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID BAndEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '&' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID And add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID BAnd add BreakStatement SwitchStatementCase Cast BasicType int Literal '(' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID LParen add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal ')' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID RParen add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '*' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID StarEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Star add BreakStatement SwitchStatementCase Cast BasicType int Literal '+' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID PlusEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '+' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID PlusPlus add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Plus add BreakStatement SwitchStatementCase Cast BasicType int Literal ',' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Comma add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '-' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID MinusEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '-' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID MinusMinus add StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '>' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID MinusGreater add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Minus add BreakStatement SwitchStatementCase Cast BasicType int Literal '/' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID SlashEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '/' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = StatementExpression Assignment MemberReference sb ClassCreator ReferenceType StringBuilder = WhileStatement BinaryOperation && BinaryOperation != MemberReference c Literal '\n' BinaryOperation != MemberReference c Literal '\r' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = LocalVariableDeclaration BasicType int VariableDeclarator index This MemberReference StringLiterals MethodInvocation size StatementExpression This MemberReference StringLiterals MethodInvocation MethodInvocation sb toString add StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID SingleComment MemberReference index add IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '*' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = StatementExpression Assignment MemberReference sb ClassCreator ReferenceType StringBuilder = ForStatement ForControl BlockStatement IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '*' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation == MemberReference c Literal - 1 BinaryOperation == MemberReference c Cast BasicType int Literal '/' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement BlockStatement StatementExpression MethodInvocation sb Literal '*' append StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Literal - 1 BlockStatement BreakStatement BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = LocalVariableDeclaration BasicType int VariableDeclarator index This MemberReference StringLiterals MethodInvocation size StatementExpression This MemberReference StringLiterals MethodInvocation MethodInvocation sb toString add StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID MultiComment MemberReference index add BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Slash add BreakStatement SwitchStatementCase Cast BasicType int Literal ':' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal ':' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Colon add BreakStatement SwitchStatementCase Cast BasicType int Literal ';' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Semi add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '<' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID LessEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '<' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID ShiftLeftEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID ShiftLeft add BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Less add BreakStatement SwitchStatementCase Cast BasicType int Literal '=' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID EqualEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Equal add BreakStatement SwitchStatementCase Cast BasicType int Literal '>' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID GreaterEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '>' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID ShiftRightEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID ShiftRight add BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Greater add BreakStatement SwitchStatementCase Cast BasicType int Literal '?' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '?' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Question add BreakStatement SwitchStatementCase Cast BasicType int Literal '[' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID LBracket add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '\\' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal ']' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID RBracket add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '^' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID BXorEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Not add BreakStatement SwitchStatementCase Cast BasicType int Literal '`' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '{' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID LCurly add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '|' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '=' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID BOrEqual add StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '|' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Or add StatementExpression Assignment MemberReference c MethodInvocation src read = BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID BOr add BreakStatement SwitchStatementCase Cast BasicType int Literal '}' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID RCurly add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '~' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Tilde add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '0' Cast BasicType int Literal '1' Cast BasicType int Literal '2' Cast BasicType int Literal '3' Cast BasicType int Literal '4' Cast BasicType int Literal '5' Cast BasicType int Literal '6' Cast BasicType int Literal '7' Cast BasicType int Literal '8' Cast BasicType int Literal '9' Cast BasicType int Literal '.' BlockStatement StatementExpression Assignment MemberReference sb ClassCreator ReferenceType StringBuilder = LocalVariableDeclaration BasicType int VariableDeclarator numKind MemberReference TokenID IntLiteral LocalVariableDeclaration BasicType boolean VariableDeclarator isReal Literal false IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '.' BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation < MemberReference c Literal '0' BinaryOperation > MemberReference c Literal '9' BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Dot add BreakStatement BlockStatement StatementExpression MethodInvocation sb Literal '.' append StatementExpression Assignment MemberReference numKind MemberReference TokenID RealLiteral = StatementExpression Assignment MemberReference isReal Literal true = LocalVariableDeclaration BasicType boolean VariableDeclarator isNum Literal true IfStatement BinaryOperation == MemberReference c Cast BasicType int Literal '0' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation == MemberReference c Cast BasicType int Literal 'x' BinaryOperation == MemberReference c Cast BasicType int Literal 'X' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference isNum Literal true = WhileStatement MemberReference isNum BlockStatement StatementExpression Assignment MemberReference c MethodInvocation src read = SwitchStatement MemberReference c SwitchStatementCase Cast BasicType int Literal '0' Cast BasicType int Literal '1' Cast BasicType int Literal '2' Cast BasicType int Literal '3' Cast BasicType int Literal '4' Cast BasicType int Literal '5' Cast BasicType int Literal '6' Cast BasicType int Literal '7' Cast BasicType int Literal '8' Cast BasicType int Literal '9' Cast BasicType int Literal 'A' Cast BasicType int Literal 'B' Cast BasicType int Literal 'C' Cast BasicType int Literal 'D' Cast BasicType int Literal 'E' Cast BasicType int Literal 'F' Cast BasicType int Literal 'a' Cast BasicType int Literal 'b' Cast BasicType int Literal 'c' Cast BasicType int Literal 'd' Cast BasicType int Literal 'e' Cast BasicType int Literal 'f' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append BreakStatement SwitchStatementCase BlockStatement StatementExpression Assignment MemberReference isNum Literal false = BreakStatement IfStatement BinaryOperation || BinaryOperation == MemberReference c Cast BasicType int Literal 'l' BinaryOperation == MemberReference c Cast BasicType int Literal 'L' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = StatementExpression Assignment MemberReference numKind MemberReference TokenID LongLiteral = IfStatement BinaryOperation || BinaryOperation == MemberReference c Cast BasicType int Literal 'u' BinaryOperation == MemberReference c Cast BasicType int Literal 'U' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference numKind MemberReference TokenID ULongLiteral = StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation == MemberReference c Cast BasicType int Literal 'u' BinaryOperation == MemberReference c Cast BasicType int Literal 'U' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference numKind MemberReference TokenID UIntLiteral = StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation == MemberReference c Cast BasicType int Literal 'l' BinaryOperation == MemberReference c Cast BasicType int Literal 'L' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference numKind MemberReference TokenID ULongLiteral = StatementExpression Assignment MemberReference c MethodInvocation src read = StatementExpression Assignment MemberReference loc This MemberReference StringLiterals MethodInvocation size = StatementExpression This MemberReference StringLiterals MethodInvocation MethodInvocation sb toString add StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference numKind MemberReference loc add BreakStatement StatementExpression Assignment MemberReference isNum Literal true = WhileStatement MemberReference isNum BlockStatement SwitchStatement MemberReference c SwitchStatementCase Cast BasicType int Literal '0' Cast BasicType int Literal '1' Cast BasicType int Literal '2' Cast BasicType int Literal '3' Cast BasicType int Literal '4' Cast BasicType int Literal '5' Cast BasicType int Literal '6' Cast BasicType int Literal '7' Cast BasicType int Literal '8' Cast BasicType int Literal '9' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal '.' BlockStatement IfStatement MemberReference isReal BlockStatement StatementExpression Assignment MemberReference numKind MemberReference TokenID RealLiteral = StatementExpression Assignment MemberReference loc This MemberReference StringLiterals MethodInvocation size = StatementExpression This MemberReference StringLiterals MethodInvocation MethodInvocation sb toString add StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference numKind MemberReference loc add StatementExpression Assignment MemberReference brokenInnerLoop1 Literal true = BreakStatement StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation < MemberReference c Cast BasicType int Literal '0' BinaryOperation > MemberReference c Cast BasicType int Literal '9' BlockStatement StatementExpression Assignment MemberReference loc This MemberReference StringLiterals MethodInvocation size = StatementExpression This MemberReference StringLiterals MethodInvocation MethodInvocation sb toString add StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference numKind MemberReference loc add StatementExpression Assignment MemberReference brokenInnerLoop1 Literal true = BreakStatement BlockStatement StatementExpression MethodInvocation sb Literal '.' append StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference numKind MemberReference TokenID RealLiteral = StatementExpression Assignment MemberReference isReal Literal true = StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase BlockStatement StatementExpression Assignment MemberReference isNum Literal false = BreakStatement IfStatement MemberReference brokenInnerLoop1 BlockStatement StatementExpression Assignment MemberReference brokenInnerLoop1 Literal false = StatementExpression Assignment MemberReference brokenInnerLoop2 Literal true = BreakStatement IfStatement MemberReference brokenInnerLoop2 BlockStatement StatementExpression Assignment MemberReference brokenInnerLoop1 Literal false = StatementExpression Assignment MemberReference brokenInnerLoop2 Literal false = BreakStatement IfStatement BinaryOperation || BinaryOperation == MemberReference c Cast BasicType int Literal 'e' BinaryOperation == MemberReference c Cast BasicType int Literal 'E' BlockStatement StatementExpression Assignment MemberReference numKind MemberReference TokenID RealLiteral = StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation == MemberReference c Literal '+' BinaryOperation == MemberReference c Literal '-' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = StatementExpression Assignment MemberReference isNum Literal true = WhileStatement MemberReference isNum BlockStatement SwitchStatement MemberReference c SwitchStatementCase Cast BasicType int Literal '0' Cast BasicType int Literal '1' Cast BasicType int Literal '2' Cast BasicType int Literal '3' Cast BasicType int Literal '4' Cast BasicType int Literal '5' Cast BasicType int Literal '6' Cast BasicType int Literal '7' Cast BasicType int Literal '8' Cast BasicType int Literal '9' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase BlockStatement StatementExpression Assignment MemberReference isNum Literal false = BreakStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation == MemberReference c Cast BasicType int Literal 'd' BinaryOperation == MemberReference c Cast BasicType int Literal 'D' BinaryOperation == MemberReference c Cast BasicType int Literal 'f' BinaryOperation == MemberReference c Cast BasicType int Literal 'F' BinaryOperation == MemberReference c Cast BasicType int Literal 'm' BinaryOperation == MemberReference c Cast BasicType int Literal 'M' BlockStatement StatementExpression Assignment MemberReference numKind MemberReference TokenID RealLiteral = StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation == MemberReference c Cast BasicType int Literal 'l' BinaryOperation == MemberReference c Cast BasicType int Literal 'L' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference numKind MemberReference TokenID LongLiteral = StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation == MemberReference c Cast BasicType int Literal 'u' BinaryOperation == MemberReference c Cast BasicType int Literal 'U' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference numKind MemberReference TokenID ULongLiteral = StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation == MemberReference c Cast BasicType int Literal 'u' BinaryOperation == MemberReference c Cast BasicType int Literal 'U' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference numKind MemberReference TokenID UIntLiteral = StatementExpression Assignment MemberReference c MethodInvocation src read = IfStatement BinaryOperation || BinaryOperation == MemberReference c Cast BasicType int Literal 'l' BinaryOperation == MemberReference c Cast BasicType int Literal 'L' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference numKind MemberReference TokenID ULongLiteral = StatementExpression Assignment MemberReference c MethodInvocation src read = StatementExpression Assignment MemberReference loc This MemberReference StringLiterals MethodInvocation size = StatementExpression This MemberReference StringLiterals MethodInvocation MethodInvocation sb toString add StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference numKind MemberReference loc add StatementExpression Assignment MemberReference isNum Literal false = BreakStatement SwitchStatementCase BlockStatement SwitchStatement MemberReference c SwitchStatementCase Cast BasicType int Literal 'a' Cast BasicType int Literal 'b' Cast BasicType int Literal 'c' Cast BasicType int Literal 'd' Cast BasicType int Literal 'e' Cast BasicType int Literal 'f' Cast BasicType int Literal 'g' Cast BasicType int Literal 'h' Cast BasicType int Literal 'i' Cast BasicType int Literal 'j' Cast BasicType int Literal 'k' Cast BasicType int Literal 'l' Cast BasicType int Literal 'm' Cast BasicType int Literal 'n' Cast BasicType int Literal 'o' Cast BasicType int Literal 'p' Cast BasicType int Literal 'q' Cast BasicType int Literal 'r' Cast BasicType int Literal 's' Cast BasicType int Literal 't' Cast BasicType int Literal 'u' Cast BasicType int Literal 'v' Cast BasicType int Literal 'w' Cast BasicType int Literal 'x' Cast BasicType int Literal 'y' Cast BasicType int Literal 'z' Cast BasicType int Literal 'A' Cast BasicType int Literal 'B' Cast BasicType int Literal 'C' Cast BasicType int Literal 'D' Cast BasicType int Literal 'E' Cast BasicType int Literal 'F' Cast BasicType int Literal 'G' Cast BasicType int Literal 'H' Cast BasicType int Literal 'I' Cast BasicType int Literal 'J' Cast BasicType int Literal 'K' Cast BasicType int Literal 'L' Cast BasicType int Literal 'M' Cast BasicType int Literal 'N' Cast BasicType int Literal 'O' Cast BasicType int Literal 'P' Cast BasicType int Literal 'Q' Cast BasicType int Literal 'R' Cast BasicType int Literal 'S' Cast BasicType int Literal 'T' Cast BasicType int Literal 'U' Cast BasicType int Literal 'V' Cast BasicType int Literal 'W' Cast BasicType int Literal 'X' Cast BasicType int Literal 'Y' Cast BasicType int Literal 'Z' Cast BasicType int Literal '_' BlockStatement StatementExpression Assignment MemberReference sb ClassCreator ReferenceType StringBuilder = StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = LocalVariableDeclaration BasicType boolean VariableDeclarator endIdent Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator possibleKeyword Literal true WhileStatement BinaryOperation && BinaryOperation != MemberReference c Literal - 1 MemberReference ! endIdent BlockStatement SwitchStatement MemberReference c SwitchStatementCase Cast BasicType int Literal 'a' Cast BasicType int Literal 'b' Cast BasicType int Literal 'c' Cast BasicType int Literal 'd' Cast BasicType int Literal 'e' Cast BasicType int Literal 'f' Cast BasicType int Literal 'g' Cast BasicType int Literal 'h' Cast BasicType int Literal 'i' Cast BasicType int Literal 'j' Cast BasicType int Literal 'k' Cast BasicType int Literal 'l' Cast BasicType int Literal 'm' Cast BasicType int Literal 'n' Cast BasicType int Literal 'o' Cast BasicType int Literal 'p' Cast BasicType int Literal 'q' Cast BasicType int Literal 'r' Cast BasicType int Literal 's' Cast BasicType int Literal 't' Cast BasicType int Literal 'u' Cast BasicType int Literal 'v' Cast BasicType int Literal 'w' Cast BasicType int Literal 'x' Cast BasicType int Literal 'y' Cast BasicType int Literal 'z' BlockStatement StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase Cast BasicType int Literal 'A' Cast BasicType int Literal 'B' Cast BasicType int Literal 'C' Cast BasicType int Literal 'D' Cast BasicType int Literal 'E' Cast BasicType int Literal 'F' Cast BasicType int Literal 'G' Cast BasicType int Literal 'H' Cast BasicType int Literal 'I' Cast BasicType int Literal 'J' Cast BasicType int Literal 'K' Cast BasicType int Literal 'L' Cast BasicType int Literal 'M' Cast BasicType int Literal 'N' Cast BasicType int Literal 'O' Cast BasicType int Literal 'P' Cast BasicType int Literal 'Q' Cast BasicType int Literal 'R' Cast BasicType int Literal 'S' Cast BasicType int Literal 'T' Cast BasicType int Literal 'U' Cast BasicType int Literal 'V' Cast BasicType int Literal 'W' Cast BasicType int Literal 'X' Cast BasicType int Literal 'Y' Cast BasicType int Literal 'Z' Cast BasicType int Literal '_' Cast BasicType int Literal '0' Cast BasicType int Literal '1' Cast BasicType int Literal '2' Cast BasicType int Literal '3' Cast BasicType int Literal '4' Cast BasicType int Literal '5' Cast BasicType int Literal '6' Cast BasicType int Literal '7' Cast BasicType int Literal '8' Cast BasicType int Literal '9' BlockStatement StatementExpression Assignment MemberReference possibleKeyword Literal false = StatementExpression MethodInvocation sb Cast BasicType char MemberReference c append StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement SwitchStatementCase BlockStatement StatementExpression Assignment MemberReference endIdent Literal true = BreakStatement LocalVariableDeclaration ReferenceType String VariableDeclarator identText MethodInvocation sb toString LocalVariableDeclaration BasicType boolean VariableDeclarator TernaryExpression MemberReference possibleKeyword MethodInvocation keywords MemberReference identText containsKey Literal false IfStatement MemberReference BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MethodInvocation keywords MemberReference identText get add BlockStatement StatementExpression Assignment MemberReference loc This MemberReference StringLiterals MethodInvocation size = StatementExpression This MemberReference StringLiterals MethodInvocation MemberReference identText add StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Ident MemberReference loc add BreakStatement SwitchStatementCase BlockStatement StatementExpression MethodInvocation tokens ClassCreator ReferenceType Token MemberReference TokenID Invalid add StatementExpression Assignment MemberReference c MethodInvocation src read = BreakStatement BreakStatement ReturnStatement MemberReference tokens	1
MethodDeclaration Modifier public FormalParameter ReferenceType listener StatementExpression MethodInvocation graph MemberReference listener	0
MethodDeclaration Modifier private swingInvoke FormalParameter ReferenceType Runnable task IfStatement MethodInvocation SwingUtilities isEventDispatchThread BlockStatement StatementExpression MethodInvocation task run BlockStatement StatementExpression MethodInvocation SwingUtilities MemberReference task invokeLater	0
MethodDeclaration Modifier public update FormalParameter ReferenceType o FormalParameter ReferenceType Object arg StatementExpression MethodInvocation table repaint	0
MethodDeclaration Modifier public BasicType boolean hasStereotype FormalParameter ReferenceType Object handle FormalParameter ReferenceType String name ReturnStatement MethodInvocation impl MemberReference handle MemberReference name hasStereotype	0
MethodDeclaration Modifier static protected ReferenceType Object FormalParameter ReferenceType Object namespace LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference target isAUMLElement getFacade MethodInvocation Model MethodInvocation MemberReference target isReadOnly getModelManagementHelper BlockStatement StatementExpression Assignment MemberReference target MemberReference namespace = LocalVariableDeclaration ReferenceType Object VariableDeclarator collaboration Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference target isAOperation getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference target getOwner getFacade getNamespace getFacade StatementExpression Assignment MemberReference collaboration MethodInvocation Model MethodInvocation MemberReference ns MemberReference target getCollaborationsFactory = IfStatement MethodInvocation Model MethodInvocation MemberReference target isAClassifier getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade StatementExpression Assignment MemberReference collaboration MethodInvocation Model MethodInvocation MemberReference ns MemberReference target getCollaborationsFactory = BlockStatement StatementExpression Assignment MemberReference collaboration MethodInvocation Model MethodInvocation getCollaborationsFactory = IfStatement MethodInvocation Model MethodInvocation MemberReference target isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference namespace MemberReference target = BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference target isAModelElement getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference target getNamespace getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference ns isANamespace getFacade BlockStatement StatementExpression Assignment MemberReference namespace MemberReference ns = StatementExpression MethodInvocation Model MethodInvocation MemberReference collaboration MemberReference namespace setNamespace getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference collaboration Literal setName getCoreHelper ReturnStatement MemberReference collaboration	1
MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text IfStatement MethodInvocation text Literal "" equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget Literal 0 getStateMachinesHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation Integer MethodInvocation intValue MemberReference text valueOf getStateMachinesHelper	1
MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference MemberReference newWidth =	0
MethodDeclaration Modifier private build FormalParameter ReferenceType panel FormalParameter ReferenceType Object target StatementExpression MethodInvocation panel removeAll IfStatement BinaryOperation == MemberReference target Literal null BlockStatement ReturnStatement TryStatement LocalVariableDeclaration ReferenceType SwingUIFactory VariableDeclarator builder ClassCreator ReferenceType SwingUIFactory StatementExpression MethodInvocation builder MemberReference target MemberReference panel CatchClause CatchClauseParameter Exception e StatementExpression MethodInvocation LOG Literal "Exception" MemberReference e error	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BinaryOperation instanceof MemberReference ReferenceType Flow BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference	0
MethodDeclaration Modifier protected ReferenceType Object IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getOwner getCommonBehaviorHelper ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType AssociationEnd buildAssociationEnd FormalParameter ReferenceType Object assoc FormalParameter ReferenceType String name FormalParameter ReferenceType Object type FormalParameter ReferenceType Object multi FormalParameter ReferenceType Object stereo FormalParameter BasicType boolean navigable FormalParameter ReferenceType Object order FormalParameter ReferenceType Object aggregation FormalParameter ReferenceType Object scope FormalParameter ReferenceType Object changeable FormalParameter ReferenceType Object visibility IfStatement BinaryOperation && BinaryOperation != MemberReference multi Literal null BinaryOperation instanceof MemberReference multi ReferenceType Multiplicity BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference aggregation Literal null MethodInvocation aggregation MemberReference AggregationKindEnum equals BinaryOperation != MemberReference multi Literal null BinaryOperation > MethodInvocation MethodInvocation Cast ReferenceType Multiplicity MemberReference multi getMaxUpper Literal 1 Literal 0 BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "aggregation is composite " Literal "and multiplicity > 1" LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator ae MethodInvocation MemberReference assoc MemberReference name MemberReference type MemberReference stereo MemberReference navigable MemberReference order MemberReference aggregation MemberReference scope MemberReference changeable MemberReference visibility buildAssociationEndInternal IfStatement BinaryOperation == MemberReference multi Literal null BlockStatement StatementExpression MethodInvocation ae MethodInvocation setMultiplicity IfStatement BinaryOperation instanceof MemberReference multi ReferenceType Multiplicity BlockStatement StatementExpression MethodInvocation ae Cast ReferenceType Multiplicity MemberReference multi setMultiplicity IfStatement BinaryOperation instanceof MemberReference multi ReferenceType String BlockStatement LocalVariableDeclaration ReferenceType Multiplicity VariableDeclarator m MethodInvocation modelImpl MethodInvocation Cast ReferenceType String MemberReference multi createMultiplicityInternal getDataTypesFactoryInternal StatementExpression MethodInvocation ae MemberReference m setMultiplicity ReturnStatement MemberReference ae	1
MethodDeclaration Modifier public FormalParameter ReferenceType String StatementExpression Assignment This MemberReference MemberReference =	0
MethodDeclaration Modifier public FormalParameter ReferenceType PropertyChangeEvent pce IfStatement BinaryOperation != MemberReference stylePanel Literal null BlockStatement StatementExpression MethodInvocation stylePanel MemberReference pce	0
MethodDeclaration Modifier protected FormalParameter BasicType int FormalParameter ReferenceType Object mcOld FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation getListenerList LocalVariableDeclaration ReferenceType ConstraintChangeEvent VariableDeclarator cce Literal null ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType ConstraintChangeListener BlockStatement IfStatement BinaryOperation == MemberReference cce Literal null BlockStatement StatementExpression Assignment MemberReference cce ClassCreator ReferenceType ConstraintChangeEvent This MemberReference ClassCreator ReferenceType CR MemberReference mcOld MemberReference ClassCreator ReferenceType CR MemberReference MemberReference = StatementExpression Cast ReferenceType ConstraintChangeListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners	0
MethodDeclaration Modifier public ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement MethodInvocation settings MethodInvocation settings MethodInvocation settings MethodInvocation settings isShowVisibilities MethodInvocation settings isUseGuillemets toString	0
MethodDeclaration Modifier private FormalParameter Modifier final ReferenceType List TypeArgument ReferenceType FigActivation ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType FigActivation VariableDeclarator MemberReference BlockStatement StatementExpression MethodInvocation MethodInvocation getFillColor setFillColor StatementExpression MethodInvocation MemberReference addFig	0
MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference MemberReference ! showem = StatementExpression Assignment MemberReference showPropertiesSet MemberReference oldValid =	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter Modifier final ReferenceType Object modelElement FormalParameter Modifier final ReferenceType Collection TypeArgument ReferenceType Class TypeArgument ? types ReturnStatement MethodInvocation Model MethodInvocation MemberReference modelElement getParameters getFacade	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType CmdCreateNode MethodInvocation Model MethodInvocation getObject getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation modelImpl MethodInvocation getActivityGraphs MethodInvocation MethodInvocation getUmlPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation getTarget getOwner getFacade MemberReference o	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MemberReference org.eclipse.uml2.uml.PseudostateKind	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Iterator VariableDeclarator attrs MethodInvocation Model MethodInvocation MemberReference dm getAttributes MethodInvocation iterator getFacade WhileStatement MethodInvocation attrs hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator attr MethodInvocation attrs next IfStatement MethodInvocation ! Model getFacade BlockStatement ContinueStatement IfStatement BinaryOperation == MethodInvocation Model MethodInvocation MemberReference attr getType getFacade MemberReference dm BlockStatement ReturnStatement MemberReference NO_PROBLEM ReturnStatement MemberReference PROBLEM_FOUND	0
MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setAggregation1 getComponent	0
MethodDeclaration Modifier public ReferenceType AssociationEnd FormalParameter ReferenceType Object type FormalParameter ReferenceType Object assoc IfStatement BinaryOperation instanceof MemberReference type ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException IfStatement BinaryOperation instanceof MemberReference assoc ReferenceType UmlAssociation BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType AssociationEnd VariableDeclarator end Cast ReferenceType Collection TypeArgument ReferenceType AssociationEnd MethodInvocation Model MethodInvocation MemberReference type getAssociationEnds getFacade BlockStatement IfStatement Cast ReferenceType UmlAssociation MemberReference assoc BlockStatement ReturnStatement MemberReference end CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null	0
MethodDeclaration Modifier public FormalParameter ReferenceType Fig f LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator figs ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Fig Literal 1 StatementExpression MethodInvocation figs MemberReference f add StatementExpression MethodInvocation Literal MemberReference figs setArg	1
MethodDeclaration Modifier public Annotation Override ReferenceType Point connectionPoint FormalParameter ReferenceType Point anotherPt ReturnStatement MethodInvocation MethodInvocation MemberReference anotherPt connectionPoint getBigPort	0
MethodDeclaration Modifier public removeUndoableEditListener FormalParameter ReferenceType UndoableEditListener listener StatementExpression MethodInvocation document MemberReference listener removeUndoableEditListener	0
MethodDeclaration Modifier public Annotation Override ReferenceType Dimension getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator stereoDim MethodInvocation MethodInvocation getMinimumSize LocalVariableDeclaration ReferenceType Dimension VariableDeclarator nameDim MethodInvocation MethodInvocation getMinimumSize getNameFig LocalVariableDeclaration BasicType int VariableDeclarator h MethodInvocation Math BinaryOperation - BinaryOperation + MemberReference stereoDim height MemberReference nameDim height MemberReference BinaryOperation * Literal 4 MemberReference FINGER_HEIGHT max LocalVariableDeclaration BasicType int VariableDeclarator w BinaryOperation + MethodInvocation Math MemberReference stereoDim width MemberReference nameDim width max MemberReference FINGER_WIDTH ReturnStatement ClassCreator ReferenceType Dimension MemberReference w MemberReference h	0
MethodDeclaration Modifier private applyReadOnlyStereotype FormalParameter ReferenceType Object property LocalVariableDeclaration ReferenceType Object VariableDeclarator mSt MethodInvocation ele BinaryOperation + BinaryOperation + BinaryOperation + MemberReference TAG_STEREOTYPE Literal "DefaultNamespace" Literal "." Literal "CSharp_Property_ro" get IfStatement BinaryOperation != MemberReference mSt Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference property MemberReference mSt addStereotype getCoreHelper	1
MethodDeclaration Modifier protected buildModelList StatementExpression MethodInvocation removeAllElements LocalVariableDeclaration ReferenceType Object VariableDeclarator stateMachine Literal null IfStatement MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getContainer getFacade isASubmachineState getFacade BlockStatement StatementExpression Assignment MemberReference stateMachine MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MethodInvocation getTarget getContainer getFacade getSubmachine getFacade = IfStatement BinaryOperation != MemberReference stateMachine Literal null BlockStatement LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator v Cast ReferenceType ArrayList MethodInvocation Model MethodInvocation MethodInvocation Model MethodInvocation MemberReference stateMachine getTop getFacade getStateMachinesHelper LocalVariableDeclaration ReferenceType ArrayList VariableDeclarator v2 Cast ReferenceType ArrayList MethodInvocation v clone LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation v2 iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement MethodInvocation ! MemberReference o isValidElement BlockStatement StatementExpression MethodInvocation v MemberReference o remove StatementExpression MethodInvocation MemberReference v	0
MethodDeclaration Modifier public setBody FormalParameter ReferenceType Object handle FormalParameter ReferenceType String body IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Operation BlockStatement LocalVariableDeclaration ReferenceType OpaqueBehavior VariableDeclarator methodImpl Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator impl Cast ReferenceType Operation MemberReference handle BlockStatement IfStatement BinaryOperation instanceof MemberReference impl ReferenceType OpaqueBehavior BlockStatement StatementExpression Assignment MemberReference methodImpl Cast ReferenceType OpaqueBehavior MemberReference impl = BreakStatement IfStatement BinaryOperation == MemberReference methodImpl Literal null BlockStatement StatementExpression Assignment MemberReference methodImpl MethodInvocation = StatementExpression MethodInvocation methodImpl Cast ReferenceType Operation MemberReference handle StatementExpression Cast ReferenceType Operation MemberReference handle IfStatement MethodInvocation methodImpl BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator bodyIndex Literal 0 ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator language MethodInvocation methodImpl getLanguages BlockStatement IfStatement Literal MethodInvocation MemberReference language equals "java" BlockStatement StatementExpression MethodInvocation methodImpl MethodInvocation MemberReference bodyIndex MemberReference body set getBodies ReturnStatement StatementExpression MemberReference ++ bodyIndex StatementExpression MethodInvocation methodImpl MethodInvocation Literal "java" add getLanguages StatementExpression MethodInvocation methodImpl MethodInvocation MemberReference body add getBodies ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException	1
MethodDeclaration Modifier private FormalParameter ReferenceType Object newOwner FormalParameter ReferenceType Object oldV StatementExpression This MethodInvocation MethodInvocation getOwner MemberReference newOwner updateListeners IfStatement BinaryOperation != MemberReference oldV Literal null BlockStatement StatementExpression MethodInvocation MemberReference oldV	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal - 8070450533321769056L Literal - Literal 16383L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public FormalParameter ReferenceType String identifier IfStatement MethodInvocation ! ignore BlockStatement AssertStatement MethodInvocation MethodInvocation MethodInvocation contextStack peek isAOperation getFacade StatementExpression MethodInvocation MethodInvocation MethodInvocation contextStack peek MemberReference identifier setName getCoreHelper	0
MethodDeclaration Modifier public ReferenceType String toString ReturnStatement Literal	0
MethodDeclaration Modifier private ReferenceType Attributes copyAttributes FormalParameter ReferenceType Element node LocalVariableDeclaration ReferenceType AttributesImpl VariableDeclarator attrs ClassCreator ReferenceType AttributesImpl LocalVariableDeclaration ReferenceType NamedNodeMap VariableDeclarator nnm MethodInvocation node getAttributes ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MethodInvocation nnm getLength MemberReference ++ count BlockStatement LocalVariableDeclaration ReferenceType Attr VariableDeclarator attr Cast ReferenceType Attr MethodInvocation nnm MemberReference count item LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation attr getName IfStatement BinaryOperation || MethodInvocation name Literal "xmlns:" startsWith MethodInvocation name Literal equals BlockStatement BlockStatement StatementExpression MethodInvocation attrs MethodInvocation attr getNamespaceURI MethodInvocation attr getName MethodInvocation attr getName Literal "CDATA" MethodInvocation attr getValue addAttribute ReturnStatement MemberReference attrs	1
MethodDeclaration Modifier public FormalParameter ReferenceType String LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation MemberReference IfStatement BinaryOperation != MemberReference index Literal - 1 BlockStatement StatementExpression MethodInvocation tabs MemberReference index setSelectedIndex	0
MethodDeclaration Modifier public static setString FormalParameter ReferenceType ConfigurationKey key FormalParameter ReferenceType String newValue StatementExpression MethodInvocation config MemberReference key MemberReference newValue setString	0
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getMethod getMetaTypes	0
MethodDeclaration Modifier public BasicType boolean addAll FormalParameter ReferenceType Collection TypeArgument ReferenceType T extends arg0 ReturnStatement MethodInvocation list MemberReference arg0 addAll	0
MethodDeclaration Modifier public static ReferenceType ActionAddExtensionPoint singleton IfStatement BinaryOperation == MemberReference singleton Literal null BlockStatement StatementExpression Assignment MemberReference singleton ClassCreator ReferenceType ActionAddExtensionPoint = StatementExpression MethodInvocation TargetManager MethodInvocation ClassCreator ReferenceType TargetListener MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation setTarget MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation setTarget MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation setTarget MethodDeclaration Modifier private setTarget StatementExpression MethodInvocation singleton MethodInvocation singleton shouldBeEnabled setEnabled addTargetListener getInstance StatementExpression MethodInvocation singleton MethodInvocation singleton shouldBeEnabled setEnabled ReturnStatement MemberReference singleton	1
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier private LocalVariableDeclaration Modifier final ReferenceType Rectangle VariableDeclarator MethodInvocation MethodInvocation getContent StatementExpression Assignment MemberReference cx MemberReference x = StatementExpression Assignment MemberReference cy MemberReference y = StatementExpression Assignment MemberReference cw MemberReference width = StatementExpression Assignment MemberReference ch MemberReference height =	0
MethodDeclaration FormalParameter ReferenceType Object theType StatementExpression MethodInvocation LOG BinaryOperation + Literal "Got the type: " MemberReference theType debug StatementExpression Assignment MemberReference type MemberReference theType =	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType ModelElement getContents FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier final protected enableTag FormalParameter BasicType int iTagType IllegalArgumentException SwitchStatement MemberReference iTagType SwitchStatementCase TAG_TYPE_ACCESS StatementExpression MethodInvocation tmTags Literal "access" ClassCreator ReferenceType AccessTag put BreakStatement SwitchStatementCase TAG_TYPE_ABSTRACT StatementExpression MethodInvocation tmTags Literal "abstract" ClassCreator ReferenceType AbstractTag put BreakStatement SwitchStatementCase TAG_TYPE_AUTHOR StatementExpression MethodInvocation tmTags Literal "author" ClassCreator ReferenceType AuthorTag put BreakStatement SwitchStatementCase TAG_TYPE_DEPRECATED StatementExpression MethodInvocation tmTags Literal "deprecated" ClassCreator ReferenceType DeprecatedTag put BreakStatement SwitchStatementCase TAG_TYPE_PACKAGE StatementExpression MethodInvocation tmTags Literal "package" ClassCreator ReferenceType PackageTag put BreakStatement SwitchStatementCase TAG_TYPE_PARAM StatementExpression MethodInvocation tmTags Literal "param" ClassCreator ReferenceType ParamList put BreakStatement SwitchStatementCase TAG_TYPE_RETURN StatementExpression MethodInvocation tmTags Literal "return" ClassCreator ReferenceType ReturnTag put BreakStatement SwitchStatementCase TAG_TYPE_SEE StatementExpression MethodInvocation tmTags Literal "see" ClassCreator ReferenceType SeeTag put BreakStatement SwitchStatementCase TAG_TYPE_SINCE StatementExpression MethodInvocation tmTags Literal "since" ClassCreator ReferenceType SinceTag put BreakStatement SwitchStatementCase TAG_TYPE_STATIC StatementExpression MethodInvocation tmTags Literal "static" ClassCreator ReferenceType StaticTag put BreakStatement SwitchStatementCase TAG_TYPE_SUBPACKAGE StatementExpression MethodInvocation tmTags Literal "subpackage" ClassCreator ReferenceType SubpackageTag put BreakStatement SwitchStatementCase TAG_TYPE_VAR StatementExpression MethodInvocation tmTags Literal "var" ClassCreator ReferenceType VarTag put BreakStatement SwitchStatementCase TAG_TYPE_VERSION StatementExpression MethodInvocation tmTags Literal "version" ClassCreator ReferenceType VersionTag put BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + MemberReference iTagType Literal " is not a valid tag type for	1
MethodDeclaration Modifier private ReferenceType String generateOperationPrefix FormalParameter ReferenceType Object op LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal 80 IfStatement BinaryOperation != MemberReference generatorPass MemberReference SOURCE_PASS BlockStatement IfStatement BinaryOperation && MethodInvocation MethodInvocation MemberReference op isLeaf getFacade MethodInvocation ! MethodInvocation MemberReference op isRoot getFacade BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + MemberReference op Literal " is leaf but not " Literal "C++ can't handle this warn StatementExpression MethodInvocation LOG Literal " Ignoring the attribute" warn IfStatement BinaryOperation || BinaryOperation && BinaryOperation && MethodInvocation ! MethodInvocation MemberReference op isLeaf getFacade MethodInvocation ! MethodInvocation MemberReference op getFacade MethodInvocation getFacade MethodInvocation getFacade BlockStatement StatementExpression MethodInvocation sb Literal "virtual " append StatementExpression MethodInvocation sb MethodInvocation MemberReference op generateScope append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getEvent getMetaTypes	0
MethodDeclaration Modifier private ReferenceType String getDate LocalVariableDeclaration ReferenceType VariableDeclarator cal ClassCreator ReferenceType LocalVariableDeclaration ReferenceType DateFormat VariableDeclarator df StatementExpression Assignment MemberReference df MethodInvocation DateFormat MemberReference DateFormat DEFAULT getDateInstance = ReturnStatement MethodInvocation df MethodInvocation cal getTime format	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unchecked" FormalParameter ReferenceType node LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Object VariableDeclarator col Literal null StatementExpression MethodInvocation MemberReference node inALiteralCollection IfStatement BinaryOperation != MethodInvocation node getCollectionKind Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getCollectionKind LocalVariableDeclaration ReferenceType String VariableDeclarator kind MethodInvocation node MethodInvocation toString MethodInvocation trim getCollectionKind IfStatement MethodInvocation kind Literal equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference col ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object = IfStatement MethodInvocation kind Literal "Sequence" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference col ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object = IfStatement MethodInvocation kind Literal equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference col ClassCreator ReferenceType HashBag TypeArgument ReferenceType Object = IfStatement BinaryOperation != MethodInvocation node getLBrace Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getLBrace IfStatement BinaryOperation != MethodInvocation node getExpressionListOrRange Literal null BlockStatement StatementExpression Assignment MemberReference val Literal null = StatementExpression MethodInvocation node MethodInvocation This apply getExpressionListOrRange StatementExpression MethodInvocation col Cast ReferenceType Collection TypeArgument ReferenceType Object MemberReference val addAll IfStatement BinaryOperation != MethodInvocation node getRBrace Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getRBrace StatementExpression Assignment MemberReference val MemberReference col = StatementExpression MethodInvocation MemberReference node	1
MethodDeclaration Modifier public BasicType boolean isAAssociationEnd FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Property BinaryOperation != Cast ReferenceType Property MemberReference handle Literal null	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed IfStatement BinaryOperation instanceof MethodInvocation e getSource ReferenceType UMLCheckBox2 BlockStatement LocalVariableDeclaration ReferenceType UMLCheckBox2 VariableDeclarator source Cast ReferenceType UMLCheckBox2 MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation source getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference target getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator m MemberReference target StatementExpression MethodInvocation Model MethodInvocation MemberReference m MethodInvocation source isSelected getCoreHelper	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Rectangle getTrapRects FormalParameter ReferenceType Fig draggedFig IfStatement BinaryOperation instanceof MemberReference draggedFig ReferenceType BlockStatement LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType Rectangle VariableDeclarator rects ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Rectangle Literal 1 StatementExpression MethodInvocation rects MethodInvocation MethodInvocation getBounds getBigPort add ReturnStatement MemberReference rects BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator regions MethodInvocation Model MethodInvocation MethodInvocation getOwner getRegions getStateMachinesHelper LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType Rectangle VariableDeclarator rects ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Rectangle MethodInvocation regions size IfStatement MethodInvocation regions isEmpty BlockStatement StatementExpression MethodInvocation rects MethodInvocation regionCompartment getBounds add BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation regionCompartment getFigs BlockStatement StatementExpression MethodInvocation rects MethodInvocation f getBounds add ReturnStatement MemberReference rects	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object m IfStatement BinaryOperation == MemberReference m Literal null BlockStatement ReturnStatement Literal "" ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getName getFacade generateName Literal "::" MethodInvocation MethodInvocation Model MethodInvocation MemberReference m getAction getFacade generateAction	0
MethodDeclaration Modifier public ReferenceType ArgoDiagram getDiagram FormalParameter ReferenceType String name ForStatement EnhancedForControl VariableDeclaration ReferenceType ArgoDiagram VariableDeclarator ad MemberReference diagrams BlockStatement IfStatement BinaryOperation && BinaryOperation != MethodInvocation ad getName Literal null MethodInvocation ad MethodInvocation MemberReference name equals getName BlockStatement ReturnStatement MemberReference ad IfStatement BinaryOperation && BinaryOperation != MethodInvocation ad Literal null MethodInvocation ad MethodInvocation toString MethodInvocation MemberReference name equals BlockStatement ReturnStatement MemberReference ad ReturnStatement Literal null	0
MethodDeclaration Modifier public setIcon FormalParameter ReferenceType i IfStatement BinaryOperation != MemberReference i Literal null BlockStatement StatementExpression MethodInvocation imageIconLabel MemberReference i setIcon StatementExpression MethodInvocation imageIconLabel MethodInvocation BorderFactory Literal 0 Literal 2 Literal 0 Literal 2 createEmptyBorder setBorder BlockStatement StatementExpression MethodInvocation imageIconLabel Literal null setIcon StatementExpression MethodInvocation imageIconLabel Literal null setBorder StatementExpression MethodInvocation imageIconLabel StatementExpression MethodInvocation validate StatementExpression MethodInvocation repaint	0
MethodDeclaration Modifier public final assigned_type_name RecognitionException TokenStreamException LocalVariableDeclaration ReferenceType String VariableDeclarator s Literal "" BlockStatement IfStatement BinaryOperation && BinaryOperation || BinaryOperation == MethodInvocation Literal 1 LA MemberReference ID BinaryOperation == MethodInvocation Literal 1 LA MemberReference SCOPE MethodInvocation MethodInvocation Literal 2 LA member BlockStatement StatementExpression Assignment MemberReference s MethodInvocation qualified_type = StatementExpression MethodInvocation abstract_declarator IfStatement BinaryOperation && MethodInvocation _tokenSet_55 MethodInvocation Literal 1 LA member MethodInvocation MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation simple_type_specifier StatementExpression MethodInvocation abstract_declarator BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public static BasicType int FormalParameter ReferenceType String s ReturnStatement BinaryOperation << Literal 1 BinaryOperation % MethodInvocation s hashCode Literal 62	0
MethodDeclaration Modifier public Annotation Deprecated setTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType String tag FormalParameter ReferenceType String value StatementExpression MethodInvocation impl MemberReference handle MemberReference tag MemberReference value setTaggedValue	1
MethodDeclaration Modifier public final constant RecognitionException TokenStreamException SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase OCTALINT BlockStatement StatementExpression MethodInvocation MemberReference OCTALINT match BreakStatement SwitchStatementCase DECIMALINT BlockStatement StatementExpression MethodInvocation MemberReference DECIMALINT match BreakStatement SwitchStatementCase HEXADECIMALINT BlockStatement StatementExpression MethodInvocation MemberReference HEXADECIMALINT match BreakStatement SwitchStatementCase CharLiteral BlockStatement StatementExpression MethodInvocation MemberReference CharLiteral match BreakStatement SwitchStatementCase StringLiteral BlockStatement BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _cnt468 Literal 0 DoStatement _loop468 Literal true BlockStatement IfStatement BinaryOperation == MethodInvocation Literal 1 LA MemberReference StringLiteral BlockStatement StatementExpression MethodInvocation MemberReference StringLiteral match BlockStatement IfStatement BinaryOperation >= MemberReference _cnt468 Literal 1 BlockStatement BreakStatement _loop468 BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename StatementExpression MemberReference ++ _cnt468 BreakStatement SwitchStatementCase FLOATONE BlockStatement StatementExpression MethodInvocation MemberReference FLOATONE match BreakStatement SwitchStatementCase FLOATTWO BlockStatement StatementExpression MethodInvocation MemberReference FLOATTWO match BreakStatement SwitchStatementCase LITERAL_true BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_true match BreakStatement SwitchStatementCase LITERAL_false BlockStatement StatementExpression MethodInvocation MemberReference LITERAL_false match BreakStatement SwitchStatementCase BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType ToDoListEvent StatementExpression MethodInvocation ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run IfStatement BinaryOperation instanceof MemberReference ReferenceType ToDoListListener BlockStatement StatementExpression Cast ReferenceType ToDoListListener MemberReference swingInvoke	1
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression SuperMethodInvocation Literal 0 setLineWidth	0
MethodDeclaration Modifier public printStackTrace StatementExpression SuperMethodInvocation printStackTrace IfStatement BinaryOperation && BinaryOperation instanceof MethodInvocation getCause ReferenceType SAXException BinaryOperation != Cast ReferenceType SAXException MethodInvocation getCause Literal null BlockStatement StatementExpression Cast ReferenceType SAXException MethodInvocation getCause	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType FigText ReturnStatement MemberReference label	0
MethodDeclaration Modifier public BasicType boolean isReturn FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation MemberReference handle	0
MethodDeclaration Modifier private ReferenceType Context getContext FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Context VariableDeclarator context MethodInvocation parseState getContext LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference name getPackageName LocalVariableDeclaration ReferenceType Object VariableDeclarator pkg MemberReference model IfStatement Literal ! MethodInvocation MemberReference packageName equals "" BlockStatement StatementExpression Assignment MemberReference pkg MethodInvocation MemberReference packageName Literal true getPackage = LocalVariableDeclaration ReferenceType String VariableDeclarator classifierName MethodInvocation name MethodInvocation packageName length substring IfStatement BinaryOperation == MethodInvocation classifierName Literal 0 charAt Literal '.' BlockStatement StatementExpression Assignment MemberReference classifierName MethodInvocation classifierName Literal 1 substring = StatementExpression Assignment MemberReference classifierName MethodInvocation MemberReference classifierName stripVarargAndGenerics = LocalVariableDeclaration BasicType int VariableDeclarator lastDot MethodInvocation classifierName Literal '.' lastIndexOf IfStatement BinaryOperation != MemberReference lastDot Literal - 1 BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator clsName MethodInvocation classifierName Literal 0 MemberReference lastDot substring LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation MemberReference pkg MemberReference clsName getClass StatementExpression Assignment MemberReference context ClassCreator ReferenceType MethodInvocation context getContext MemberReference cls MemberReference pkg BinaryOperation + MemberReference clsName Literal '$' = IfStatement Literal ! MethodInvocation MemberReference packageName equals "" BlockStatement StatementExpression Assignment MemberReference context ClassCreator ReferenceType MemberReference context MemberReference pkg = ReturnStatement MemberReference context	1
MethodDeclaration Modifier public ReferenceType Object getExtend ReturnStatement ClassReference ReferenceType Extend	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionCreatePseudostate MethodInvocation Model MethodInvocation getPseudostateKind Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter BasicType int rowNum StatementExpression Assignment This MemberReference MemberReference rowNum = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public setVisibility FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object visibility IfStatement BinaryOperation instanceof MemberReference visibility ReferenceType BlockStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement StatementExpression Cast ReferenceType ModelElement MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference handle ReturnStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ElementImport BlockStatement StatementExpression Cast ReferenceType ElementImport MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference visibility	0
MethodDeclaration Modifier public BasicType boolean isCellEditable FormalParameter BasicType int row FormalParameter BasicType int col ReturnStatement BinaryOperation && BinaryOperation == MemberReference col Literal 1 BinaryOperation < MemberReference row MemberReference elements length	1
MethodDeclaration Modifier public Annotation Override BasicType boolean equals FormalParameter ReferenceType Object o IfStatement BinaryOperation instanceof MemberReference o ReferenceType Pair BlockStatement LocalVariableDeclaration ReferenceType Pair VariableDeclarator p Cast ReferenceType Pair MemberReference o IfStatement BinaryOperation && BinaryOperation == MemberReference p MemberReference BinaryOperation == MemberReference p listener MemberReference listener BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration BasicType int getRightMargin ReturnStatement MemberReference	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object message TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Message BinaryOperation instanceof MemberReference message ReferenceType Message BlockStatement StatementExpression Cast ReferenceType Message MemberReference handle ReturnStatement CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or message: " MemberReference message	0
MethodDeclaration Modifier public ReferenceType Collection getExtentElements FormalParameter ReferenceType String name ReturnStatement MethodInvocation MemberReference name	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public static ReferenceType JFileChooser LocalVariableDeclaration ReferenceType JFileChooser VariableDeclarator fileChooser ClassCreator ReferenceType JFileChooser StatementExpression MethodInvocation fileChooser MemberReference JFileChooser FILES_AND_DIRECTORIES setFileSelectionMode StatementExpression MethodInvocation fileChooser Literal true setMultiSelectionEnabled StatementExpression MethodInvocation fileChooser ClassCreator ReferenceType FileFilter MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType File file LocalVariableDeclaration ReferenceType String VariableDeclarator s MethodInvocation file MethodInvocation toLowerCase getName ReturnStatement BinaryOperation || MethodInvocation file isDirectory BinaryOperation && MethodInvocation file isFile BinaryOperation || BinaryOperation || BinaryOperation || BinaryOperation || MethodInvocation s Literal ".xmi" endsWith MethodInvocation s Literal ".xml" endsWith MethodInvocation s Literal ".uml" endsWith MethodInvocation s Literal ".xmi.zip" endsWith MethodInvocation s Literal ".xml.zip" endsWith MethodDeclaration Modifier public ReferenceType String getDescription ReturnStatement Literal setFileFilter ReturnStatement MemberReference fileChooser	0
MethodDeclaration Modifier public Annotation Override ReferenceType DefaultTypeStrategy getDefaultTypeStrategy ReturnStatement ClassCreator ReferenceType DefaultTypeStrategy MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation ModelUtils Literal "int" MethodInvocation MethodInvocation iterator MethodInvocation next getModel MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation ModelUtils Literal "int" MethodInvocation MethodInvocation iterator MethodInvocation next getModel MethodDeclaration Modifier public ReferenceType Object getDefaultReturnType ReturnStatement MethodInvocation ModelUtils Literal "void" MethodInvocation MethodInvocation iterator MethodInvocation next getModel	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal 18014398509481984L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier private addCallout FormalParameter BasicType int coNum FormalParameter ReferenceType Node node FormalParameter BasicType int defaultColumn LocalVariableDeclaration ReferenceType Element VariableDeclarator area Cast ReferenceType Element MemberReference node LocalVariableDeclaration ReferenceType String VariableDeclarator units MethodInvocation area Literal getAttribute LocalVariableDeclaration ReferenceType String VariableDeclarator otherUnits MethodInvocation area Literal getAttribute LocalVariableDeclaration ReferenceType String VariableDeclarator coords MethodInvocation area Literal "coords" getAttribute LocalVariableDeclaration BasicType int VariableDeclarator type Literal 0 LocalVariableDeclaration ReferenceType String VariableDeclarator Literal null IfStatement BinaryOperation || BinaryOperation == MemberReference units Literal null MethodInvocation units Literal "linecolumn" equals BlockStatement StatementExpression Assignment MemberReference type MemberReference Callout LINE_COLUMN = IfStatement MethodInvocation units Literal "linerange" equals BlockStatement StatementExpression Assignment MemberReference type MemberReference Callout LINE_RANGE = IfStatement MethodInvocation units Literal equals BlockStatement StatementExpression Assignment MemberReference type MemberReference Callout = IfStatement MethodInvocation units Literal equals BlockStatement StatementExpression Assignment MemberReference type MemberReference Callout = BlockStatement StatementExpression Assignment MemberReference type MemberReference Callout OTHER = StatementExpression Assignment MemberReference MemberReference otherUnits = IfStatement BinaryOperation && BinaryOperation != MemberReference type MemberReference Callout LINE_COLUMN BinaryOperation != MemberReference type MemberReference Callout LINE_RANGE BlockStatement StatementExpression MethodInvocation System.out Literal "Only linecolumn and linerange units are supported" println ReturnStatement IfStatement BinaryOperation == MemberReference coords Literal null BlockStatement StatementExpression MethodInvocation System.out Literal "Coords must be specified" println ReturnStatement LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference coords LocalVariableDeclaration BasicType int VariableDeclarator tokenCount Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator c1 Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator c2 Literal 0 WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression MemberReference ++ tokenCount IfStatement BinaryOperation > MemberReference tokenCount Literal 2 BlockStatement StatementExpression MethodInvocation System.out Literal "Unparseable coordinates" println ReturnStatement TryStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation st nextToken LocalVariableDeclaration BasicType int VariableDeclarator coord MethodInvocation Integer MemberReference token parseInt StatementExpression Assignment MemberReference c2 MemberReference coord = IfStatement BinaryOperation == MemberReference tokenCount Literal 1 BlockStatement StatementExpression Assignment MemberReference c1 MemberReference coord = CatchClause CatchClauseParameter NumberFormatException e StatementExpression MethodInvocation System.out Literal "Unparseable coordinate" println ReturnStatement IfStatement BinaryOperation == MemberReference calloutCount MemberReference callout length BlockStatement LocalVariableDeclaration ReferenceType Callout VariableDeclarator bigger ArrayCreator ReferenceType Callout BinaryOperation + MemberReference calloutCount Literal 10 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference callout length MemberReference ++ count BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference count bigger MemberReference ArraySelector MemberReference count callout = StatementExpression Assignment MemberReference callout MemberReference bigger = IfStatement BinaryOperation == MemberReference tokenCount Literal 2 BlockStatement IfStatement BinaryOperation == MemberReference type MemberReference Callout LINE_RANGE BlockStatement ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count MemberReference c1 BinaryOperation <= MemberReference count MemberReference c2 MemberReference ++ count BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ calloutCount callout ClassCreator ReferenceType Callout MemberReference coNum MemberReference area MemberReference count MemberReference defaultColumn MemberReference type = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ calloutCount callout ClassCreator ReferenceType Callout MemberReference coNum MemberReference area MemberReference c1 MemberReference c2 MemberReference type = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ calloutCount callout ClassCreator ReferenceType Callout MemberReference coNum MemberReference area MemberReference c1 MemberReference defaultColumn MemberReference type =	1
MethodDeclaration Modifier public ReferenceType Token nextToken TokenStreamException LocalVariableDeclaration ReferenceType Token VariableDeclarator theRetToken Literal null ForStatement tryAgain ForControl BlockStatement LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _ttype MemberReference Token StatementExpression MethodInvocation TryStatement TryStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase Literal ',' BlockStatement StatementExpression MethodInvocation Literal true mCOMMA StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal '?' BlockStatement StatementExpression MethodInvocation Literal true mQUESTIONMARK StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal ';' BlockStatement StatementExpression MethodInvocation Literal true mSEMICOLON StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal '(' BlockStatement StatementExpression MethodInvocation Literal true mLPAREN StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal ')' BlockStatement StatementExpression MethodInvocation Literal true mRPAREN StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal '[' BlockStatement StatementExpression MethodInvocation Literal true mLSQUARE StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal ']' BlockStatement StatementExpression MethodInvocation Literal true mRSQUARE StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal '{' BlockStatement StatementExpression MethodInvocation Literal true mLCURLY StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal '}' BlockStatement StatementExpression MethodInvocation Literal true mRCURLY StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal '~' BlockStatement StatementExpression MethodInvocation Literal true mTILDE StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal '\t' Literal '\n' Literal Literal '\r' Literal ' ' Literal '\\' BlockStatement StatementExpression MethodInvocation Literal true mWhitespace StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal '#' BlockStatement StatementExpression MethodInvocation Literal true mDIRECTIVE StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal '\'' BlockStatement StatementExpression MethodInvocation Literal true mCharLiteral StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal '"' BlockStatement StatementExpression MethodInvocation Literal true mStringLiteral StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase Literal 'A' Literal 'B' Literal 'C' Literal 'D' Literal 'E' Literal 'F' Literal 'G' Literal 'H' Literal 'I' Literal 'J' Literal 'K' Literal 'L' Literal 'M' Literal 'N' Literal 'O' Literal 'P' Literal 'Q' Literal 'R' Literal 'S' Literal 'T' Literal 'U' Literal 'V' Literal 'W' Literal 'X' Literal 'Y' Literal 'Z' Literal '_' Literal 'a' Literal 'b' Literal 'c' Literal 'd' Literal 'e' Literal 'f' Literal 'g' Literal 'h' Literal 'i' Literal 'j' Literal 'k' Literal 'l' Literal 'm' Literal 'n' Literal 'o' Literal 'p' Literal 'q' Literal 'r' Literal 's' Literal 't' Literal 'u' Literal 'v' Literal 'w' Literal 'x' Literal 'y' Literal 'z' BlockStatement StatementExpression MethodInvocation Literal true mID StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BreakStatement SwitchStatementCase IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '>' BinaryOperation == MethodInvocation Literal 2 LA Literal '>' BinaryOperation == MethodInvocation Literal 3 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mSHIFTRIGHTEQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '<' BinaryOperation == MethodInvocation Literal 2 LA Literal '<' BinaryOperation == MethodInvocation Literal 3 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mSHIFTLEFTEQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '-' BinaryOperation == MethodInvocation Literal 2 LA Literal '>' BinaryOperation == MethodInvocation Literal 3 LA Literal '*' BlockStatement StatementExpression MethodInvocation Literal true mPOINTERTOMBR StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '-' BinaryOperation == MethodInvocation Literal 2 LA Literal '>' Literal true BlockStatement StatementExpression MethodInvocation Literal true mPOINTERTO StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '=' BinaryOperation == MethodInvocation Literal 2 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mEQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '!' BinaryOperation == MethodInvocation Literal 2 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mNOTEQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '<' BinaryOperation == MethodInvocation Literal 2 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mLESSTHANOREQUALTO StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '>' BinaryOperation == MethodInvocation Literal 2 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mGREATERTHANOREQUALTO StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '/' BinaryOperation == MethodInvocation Literal 2 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mDIVIDEEQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '+' BinaryOperation == MethodInvocation Literal 2 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mPLUSEQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '+' BinaryOperation == MethodInvocation Literal 2 LA Literal '+' BlockStatement StatementExpression MethodInvocation Literal true mPLUSPLUS StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '-' BinaryOperation == MethodInvocation Literal 2 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mMINUSEQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '-' BinaryOperation == MethodInvocation Literal 2 LA Literal '-' BlockStatement StatementExpression MethodInvocation Literal true mMINUSMINUS StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '*' BinaryOperation == MethodInvocation Literal 2 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mTIMESEQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '%' BinaryOperation == MethodInvocation Literal 2 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mMODEQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '>' BinaryOperation == MethodInvocation Literal 2 LA Literal '>' Literal true BlockStatement StatementExpression MethodInvocation Literal true mSHIFTRIGHT StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '<' BinaryOperation == MethodInvocation Literal 2 LA Literal '<' Literal true BlockStatement StatementExpression MethodInvocation Literal true mSHIFTLEFT StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '&' BinaryOperation == MethodInvocation Literal 2 LA Literal '&' BlockStatement StatementExpression MethodInvocation Literal true mAND StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '|' BinaryOperation == MethodInvocation Literal 2 LA Literal '|' BlockStatement StatementExpression MethodInvocation Literal true mOR StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '&' BinaryOperation == MethodInvocation Literal 2 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mBITWISEANDEQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '|' BinaryOperation == MethodInvocation Literal 2 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mBITWISEOREQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '^' BinaryOperation == MethodInvocation Literal 2 LA Literal '=' BlockStatement StatementExpression MethodInvocation Literal true mBITWISEXOREQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '.' BinaryOperation == MethodInvocation Literal 2 LA Literal '*' BlockStatement StatementExpression MethodInvocation Literal true mDOTMBR StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal ':' BinaryOperation == MethodInvocation Literal 2 LA Literal ':' BlockStatement StatementExpression MethodInvocation Literal true mSCOPE StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '/' BinaryOperation == MethodInvocation Literal 2 LA Literal '*' BlockStatement StatementExpression MethodInvocation Literal true mComment StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '/' BinaryOperation == MethodInvocation Literal 2 LA Literal '/' BlockStatement StatementExpression MethodInvocation Literal true mCPPComment StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '=' Literal true BlockStatement StatementExpression MethodInvocation Literal true mASSIGNEQUAL StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal ':' Literal true BlockStatement StatementExpression MethodInvocation Literal true mCOLON StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '<' Literal true BlockStatement StatementExpression MethodInvocation Literal true mLESSTHAN StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '>' Literal true BlockStatement StatementExpression MethodInvocation Literal true mGREATERTHAN StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '/' Literal true BlockStatement StatementExpression MethodInvocation Literal true mDIVIDE StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '+' Literal true BlockStatement StatementExpression MethodInvocation Literal true mPLUS StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '-' Literal true BlockStatement StatementExpression MethodInvocation Literal true mMINUS StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '*' Literal true BlockStatement StatementExpression MethodInvocation Literal true mSTAR StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '%' Literal true BlockStatement StatementExpression MethodInvocation Literal true mMOD StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '!' Literal true BlockStatement StatementExpression MethodInvocation Literal true mNOT StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '&' Literal true BlockStatement StatementExpression MethodInvocation Literal true mAMPERSAND StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '|' Literal true BlockStatement StatementExpression MethodInvocation Literal true mBITWISEOR StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '^' Literal true BlockStatement StatementExpression MethodInvocation Literal true mBITWISEXOR StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = IfStatement BinaryOperation && MethodInvocation _tokenSet_0 MethodInvocation Literal 1 LA member Literal true BlockStatement StatementExpression MethodInvocation Literal true mNumber StatementExpression Assignment MemberReference theRetToken MemberReference _returnToken = BlockStatement IfStatement BinaryOperation == MethodInvocation Literal 1 LA MemberReference EOF_CHAR BlockStatement StatementExpression MethodInvocation StatementExpression Assignment MemberReference _returnToken MethodInvocation MemberReference Token makeToken = BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltForCharException Cast BasicType char MethodInvocation Literal 1 LA MethodInvocation getFilename MethodInvocation getLine MethodInvocation getColumn IfStatement BinaryOperation == MemberReference _returnToken Literal null ContinueStatement tryAgain StatementExpression Assignment MemberReference _ttype MethodInvocation _returnToken getType = StatementExpression Assignment MemberReference _ttype MethodInvocation MemberReference _ttype testLiteralsTable = StatementExpression MethodInvocation _returnToken MemberReference _ttype ReturnStatement MemberReference _returnToken CatchClause CatchClauseParameter RecognitionException e ThrowStatement ClassCreator ReferenceType MemberReference e CatchClause CatchClauseParameter CharStreamException cse IfStatement BinaryOperation instanceof MemberReference cse ReferenceType CharStreamIOException BlockStatement ThrowStatement ClassCreator ReferenceType Cast ReferenceType CharStreamIOException MemberReference cse BlockStatement ThrowStatement ClassCreator ReferenceType TokenStreamException MethodInvocation cse getMessage	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public Annotation Override ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType NotationSettings settings ReturnStatement MethodInvocation MemberReference modelElement MethodInvocation settings isUseGuillemets toString	0
MethodDeclaration Modifier public IfStatement BinaryOperation instanceof MemberReference target ReferenceType ToDoItem BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item Cast ReferenceType ToDoItem MemberReference target LocalVariableDeclaration ReferenceType String VariableDeclarator urlString MethodInvocation item StatementExpression MethodInvocation MemberReference urlString	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public FormalParameter ReferenceType String parent FormalParameter ReferenceType MethodNode mn FormalParameter ReferenceType String cPackage LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation mn.names MemberReference Identifier ArraySelector Literal 0 Literal 0 get LocalVariableDeclaration ReferenceType String VariableDeclarator className BinaryOperation + BinaryOperation + MemberReference cPackage Literal "." MemberReference parent LocalVariableDeclaration ReferenceType String VariableDeclarator id BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference TAG_OP MemberReference className Literal "." MemberReference name MethodInvocation MemberReference mn getParameterTypeString IfStatement BinaryOperation != MethodInvocation ele MemberReference id get Literal null BlockStatement ReturnStatement LocalVariableDeclaration BasicType short VariableDeclarator cmod MethodInvocation ModifierMap MemberReference mn modifiers getUmlModifierForVisibility LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation ele BinaryOperation + MemberReference TAG_CLASS MemberReference className get LocalVariableDeclaration ReferenceType Object VariableDeclarator classifier Literal null LocalVariableDeclaration ReferenceType String VariableDeclarator temp MethodInvocation MemberReference mn.type.Identifier Identifier MemberReference mn.type.Identifier.Identifier length buildToParent StatementExpression Assignment MemberReference classifier MethodInvocation MemberReference temp MemberReference cPackage getStoredDataType = LocalVariableDeclaration ReferenceType Object VariableDeclarator mOperation MethodInvocation Model MethodInvocation MemberReference cls MemberReference classifier MemberReference name buildOperation2 getCoreFactory StatementExpression MethodInvocation MemberReference mOperation MemberReference cmod setVisibility StatementExpression MethodInvocation Model MethodInvocation MemberReference mOperation BinaryOperation > BinaryOperation & MemberReference cmod MemberReference CSharpConstants ACC_ABSTRACT Literal 0 setAbstract getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference mOperation BinaryOperation > BinaryOperation & MemberReference cmod MemberReference CSharpConstants ACC_FINAL Literal 0 getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference mOperation Literal false setRoot getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference mOperation BinaryOperation > BinaryOperation & MemberReference cmod MemberReference CSharpConstants ACC_STATIC Literal 0 getCoreHelper LocalVariableDeclaration ReferenceType Object VariableDeclarator parameter Literal null IfStatement BinaryOperation != MemberReference mn params Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType ParamDeclNode VariableDeclarator p MemberReference mn params BlockStatement StatementExpression Assignment MemberReference classifier Literal null = StatementExpression Assignment MemberReference classifier MethodInvocation MethodInvocation MemberReference p.type.Identifier Identifier MemberReference p.type.Identifier.Identifier length buildToParent MemberReference cPackage getStoredDataType = StatementExpression Assignment MemberReference parameter MethodInvocation Model MethodInvocation MemberReference mOperation MemberReference classifier getCoreFactory = StatementExpression MethodInvocation Model MethodInvocation MemberReference parameter MemberReference p name setName getCoreHelper StatementExpression MethodInvocation ele MemberReference id MemberReference mOperation put	1
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Boolean showAssociationName FormalParameter BasicType boolean FormalParameter BasicType boolean showPath FormalParameter BasicType boolean showVisibility FormalParameter BasicType boolean useGuillemets IfStatement BinaryOperation == MemberReference showAssociationName MemberReference Boolean FALSE BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator derived Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator tv MethodInvocation Model MethodInvocation MemberReference modelElement MemberReference DERIVED_TAG getTaggedValue getFacade IfStatement BinaryOperation != MemberReference tv Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator tag MethodInvocation Model MethodInvocation MemberReference tv getValueOfTag getFacade IfStatement Literal MethodInvocation MemberReference tag equalsIgnoreCase "true" BlockStatement StatementExpression Assignment MemberReference derived Literal "/" = LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer Literal "" StatementExpression MethodInvocation sb MemberReference derived append IfStatement MemberReference BlockStatement StatementExpression MethodInvocation sb MethodInvocation NotationUtilityUml MemberReference modelElement MemberReference useGuillemets generateStereotype append IfStatement MemberReference showVisibility BlockStatement StatementExpression MethodInvocation sb MethodInvocation NotationUtilityUml MemberReference modelElement generateVisibility2 append StatementExpression MethodInvocation sb Literal " " append IfStatement MemberReference showPath BlockStatement StatementExpression MethodInvocation sb MethodInvocation NotationUtilityUml MemberReference modelElement generatePath append IfStatement BinaryOperation != MemberReference name Literal null BlockStatement StatementExpression MethodInvocation sb MemberReference name append ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean StatementExpression SuperMethodInvocation MemberReference setFilled StatementExpression MethodInvocation MethodInvocation Literal false setFilled getBigPort StatementExpression MethodInvocation MethodInvocation Literal false setFilled getNameFig StatementExpression MethodInvocation MethodInvocation Literal false setFilled	0
MethodDeclaration Modifier private StatementExpression Assignment MemberReference ClassCreator ReferenceType JTextField = StatementExpression Assignment MemberReference ClassCreator ReferenceType DefaultListModel = StatementExpression Assignment MemberReference ClassCreator ReferenceType JList MemberReference = StatementExpression Assignment MemberReference ClassCreator ReferenceType DefaultListModel = StatementExpression Assignment MemberReference ClassCreator ReferenceType JList MemberReference = StatementExpression Assignment MemberReference ClassCreator ReferenceType DefaultListModel = StatementExpression Assignment MemberReference ClassCreator ReferenceType JList MemberReference = StatementExpression MethodInvocation MethodInvocation BorderFactory MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX createEmptyBorder setBorder StatementExpression MethodInvocation MethodInvocation BorderFactory MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX createEmptyBorder setBorder StatementExpression MethodInvocation MethodInvocation BorderFactory MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX MemberReference INSET_PX createEmptyBorder setBorder StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier private final static BasicType long LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal - 1054405279954763753L Literal 511L Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier private addDependency FormalParameter ReferenceType Object dep FormalParameter BasicType boolean predecl IfStatement BinaryOperation == MemberReference generatorPass MemberReference NONE_PASS BlockStatement ReturnStatement IfStatement BinaryOperation && MethodInvocation ! getFacade MethodInvocation ! getFacade BlockStatement ReturnStatement IfStatement BinaryOperation && MemberReference predecl MethodInvocation ! includeCls MemberReference dep contains BlockStatement IfStatement BinaryOperation == MemberReference generatorPass MemberReference HEADER_PASS BlockStatement StatementExpression MethodInvocation predeclCls MemberReference dep add BlockStatement IfStatement MethodInvocation predeclCls MemberReference dep contains BlockStatement StatementExpression MethodInvocation predeclCls MemberReference dep remove IfStatement MethodInvocation includeCls MemberReference dep add BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation MethodInvocation MemberReference getNamespace getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation MethodInvocation MemberReference dep getName getFacade LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation MemberReference dep MemberReference ns Literal "/" generateRelativePackage LocalVariableDeclaration ReferenceType Set VariableDeclarator inc MemberReference localInc IfStatement MethodInvocation path Literal "/" startsWith BlockStatement StatementExpression Assignment MemberReference path MethodInvocation path Literal 1 substring = StatementExpression Assignment MemberReference inc MemberReference extInc = IfStatement BinaryOperation > MethodInvocation path length Literal 0 BlockStatement StatementExpression MethodInvocation inc BinaryOperation + BinaryOperation + BinaryOperation + MemberReference path Literal "/" MemberReference name Literal ".h" add BlockStatement StatementExpression MethodInvocation inc BinaryOperation + MemberReference name Literal ".h" add	1
MethodDeclaration Modifier public FormalParameter ReferenceType node LocalVariableDeclaration ReferenceType Object VariableDeclarator left MemberReference val StatementExpression Assignment MemberReference val Literal null = StatementExpression MethodInvocation MemberReference node inALogicalExpressionTail IfStatement BinaryOperation != MethodInvocation node getLogicalOperator Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getLogicalOperator IfStatement BinaryOperation != MethodInvocation node getRelationalExpression Literal null BlockStatement StatementExpression MethodInvocation node MethodInvocation This apply getRelationalExpression LocalVariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation node getLogicalOperator LocalVariableDeclaration ReferenceType Object VariableDeclarator right MemberReference val StatementExpression Assignment MemberReference val Literal null = IfStatement BinaryOperation != MemberReference op Literal null BlockStatement IfStatement BinaryOperation instanceof MemberReference op ReferenceType BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference left Literal null BinaryOperation instanceof MemberReference left ReferenceType Boolean Cast ReferenceType Boolean MemberReference left BlockStatement StatementExpression Assignment MemberReference val Literal false = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference right Literal null BinaryOperation instanceof MemberReference right ReferenceType Boolean Cast ReferenceType Boolean MemberReference right BlockStatement StatementExpression Assignment MemberReference val Literal false = BlockStatement StatementExpression Assignment MemberReference val BinaryOperation && MethodInvocation MemberReference left MemberReference node asBoolean MethodInvocation MemberReference right MemberReference node asBoolean = IfStatement BinaryOperation instanceof MemberReference op ReferenceType BlockStatement StatementExpression Assignment MemberReference val BinaryOperation || MethodInvocation ! MemberReference left MemberReference node asBoolean MethodInvocation MemberReference right MemberReference node asBoolean = IfStatement BinaryOperation instanceof MemberReference op ReferenceType BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference left Literal null BinaryOperation instanceof MemberReference left ReferenceType Boolean Cast ReferenceType Boolean MemberReference left BlockStatement StatementExpression Assignment MemberReference val Literal true = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference right Literal null BinaryOperation instanceof MemberReference right ReferenceType Boolean Cast ReferenceType Boolean MemberReference right BlockStatement StatementExpression Assignment MemberReference val Literal true = BlockStatement StatementExpression Assignment MemberReference val BinaryOperation || MethodInvocation MemberReference left MemberReference node asBoolean MethodInvocation MemberReference right MemberReference node asBoolean = IfStatement BinaryOperation instanceof MemberReference op ReferenceType AXorLogicalOperator BlockStatement StatementExpression Assignment MemberReference val BinaryOperation ^ MethodInvocation ! MemberReference left MemberReference node asBoolean MethodInvocation MemberReference right MemberReference node asBoolean = BlockStatement StatementExpression MethodInvocation MemberReference node error BlockStatement StatementExpression MethodInvocation MemberReference node error StatementExpression MethodInvocation MemberReference node	1
MethodDeclaration Modifier public static ReferenceType Object getAction FormalParameter ReferenceType String role FormalParameter ReferenceType Object t IfStatement MethodInvocation role MemberReference Roles equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getExit getFacade IfStatement MethodInvocation role MemberReference Roles equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getEntry getFacade IfStatement MethodInvocation role MemberReference Roles DO equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getDoActivity getFacade IfStatement MethodInvocation role MemberReference Roles equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getAction getFacade IfStatement MethodInvocation role MemberReference Roles EFFECT equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getFacade IfStatement MethodInvocation role MemberReference Roles equals BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference t getActions getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object getInOutParameter ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference success	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier private ReferenceType Object addClassifier FormalParameter ReferenceType Object newClassifier FormalParameter ReferenceType String name FormalParameter BasicType short modifiers FormalParameter ReferenceType String javadoc FormalParameter ReferenceType List TypeArgument ReferenceType String typeParameters LocalVariableDeclaration ReferenceType Object VariableDeclarator mClassifier LocalVariableDeclaration ReferenceType Object VariableDeclarator mNamespace IfStatement BinaryOperation != MethodInvocation parseState getClassifier Literal null BlockStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MethodInvocation parseState getClassifier MemberReference name lookupIn getFacade = StatementExpression Assignment MemberReference mNamespace MethodInvocation parseState getClassifier = BlockStatement StatementExpression MethodInvocation parseState StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference currentPackage MemberReference name lookupIn getFacade = StatementExpression Assignment MemberReference mNamespace MemberReference currentPackage = IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement IfStatement MethodInvocation LOG isInfoEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Created new classifier for " MemberReference name info StatementExpression Assignment MemberReference mClassifier MemberReference newClassifier = StatementExpression MethodInvocation Model MethodInvocation MemberReference mClassifier MemberReference name setName getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference mClassifier MemberReference mNamespace setNamespace getCoreHelper StatementExpression MethodInvocation newElements MemberReference mClassifier add BlockStatement IfStatement MethodInvocation LOG isInfoEnabled BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Found existing classifier for " MemberReference name info StatementExpression MethodInvocation MemberReference mClassifier StatementExpression MethodInvocation parseState MemberReference mClassifier IfStatement BinaryOperation == MethodInvocation parseState getClassifier Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference mClassifier getElementResidences MethodInvocation isEmpty getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference MemberReference mClassifier getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference MethodInvocation parseState getArtifact getCoreHelper BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator artifact MethodInvocation parseState getArtifact LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference artifact getCoreHelper IfStatement MethodInvocation ! c MemberReference mClassifier contains BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation Model MethodInvocation MemberReference mClassifier getCoreFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference artifact MemberReference getCoreHelper StatementExpression MethodInvocation MemberReference parseState push StatementExpression Assignment MemberReference parseState ClassCreator ReferenceType ParseState MemberReference parseState MemberReference mClassifier MemberReference currentPackage = StatementExpression MethodInvocation MemberReference mClassifier MemberReference modifiers setVisibility IfStatement BinaryOperation <= MethodInvocation getLevel Literal 0 BlockStatement StatementExpression MethodInvocation MemberReference mClassifier MemberReference javadoc addDocumentationTag StatementExpression MethodInvocation MemberReference mClassifier MemberReference typeParameters ReturnStatement MemberReference mClassifier	1
MethodDeclaration Modifier private TryStatement LocalVariableDeclaration ReferenceType JFileChooser VariableDeclarator chooser ClassCreator ReferenceType JFileChooser Cast ReferenceType String MethodInvocation outputDirectoryComboBox MethodInvocation getSelectedItem getModel IfStatement BinaryOperation == MemberReference chooser Literal null BlockStatement StatementExpression Assignment MemberReference chooser ClassCreator ReferenceType JFileChooser = StatementExpression MethodInvocation chooser Literal true setFileHidingEnabled StatementExpression MethodInvocation chooser Literal false setMultiSelectionEnabled StatementExpression MethodInvocation chooser MemberReference JFileChooser DIRECTORIES_ONLY setFileSelectionMode StatementExpression MethodInvocation chooser MethodInvocation Translator Literal localize setDialogTitle StatementExpression MethodInvocation chooser This MethodInvocation Translator Literal localize showDialog IfStatement Literal ! MethodInvocation MethodInvocation chooser MethodInvocation getPath getSelectedFile equals "" BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation chooser MethodInvocation getPath getSelectedFile StatementExpression MethodInvocation outputDirectoryComboBox MemberReference path addItem StatementExpression MethodInvocation outputDirectoryComboBox MethodInvocation MemberReference path setSelectedItem getModel CatchClause CatchClauseParameter Exception StatementExpression MethodInvocation LOG Literal cancel" info	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean enable ReturnStatement Literal true	0
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr ThrowStatement ClassCreator ReferenceType UnsupportedOperationException	0
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference theInstance	0
MethodDeclaration addImport FormalParameter ReferenceType String name FormalParameter BasicType boolean forceIt IfStatement BinaryOperation == MethodInvocation getLevel Literal 0 BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference name getPackageName IfStatement BinaryOperation || BinaryOperation == MemberReference packageName Literal null Literal MethodInvocation MemberReference packageName equals "" BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal skipped - unable to get package name for " MemberReference name warn ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator classifierName MethodInvocation MemberReference name getClassifierName LocalVariableDeclaration ReferenceType Object VariableDeclarator mPackage MethodInvocation MemberReference packageName Literal true getPackage IfStatement MethodInvocation classifierName Literal "*" equals BlockStatement StatementExpression MethodInvocation parseState MemberReference mPackage addPackageContext LocalVariableDeclaration ReferenceType Object VariableDeclarator srcFile MethodInvocation parseState getArtifact StatementExpression MethodInvocation MemberReference mPackage MemberReference srcFile buildImport BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mClassifier Literal null TryStatement StatementExpression Assignment MemberReference mClassifier ClassCreator MethodInvocation MemberReference classifierName Literal false MemberReference javaProfile get ReferenceType Literal null MemberReference mPackage = CatchClause CatchClauseParameter ClassifierNotFoundException e IfStatement BinaryOperation && BinaryOperation && MemberReference forceIt BinaryOperation != MemberReference classifierName Literal null BinaryOperation != MemberReference mPackage Literal null BlockStatement StatementExpression Assignment MemberReference mPackage TernaryExpression BinaryOperation > MethodInvocation packageName length Literal 0 MethodInvocation MemberReference packageName Literal false getPackage MemberReference model = StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference mPackage MemberReference classifierName lookupIn getFacade = IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Modeller.java: " Literal "forced creation of unknown classifier " MemberReference classifierName info StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference classifierName MemberReference mPackage buildClass getCoreFactory = StatementExpression MethodInvocation newElements MemberReference mClassifier add BlockStatement StatementExpression MethodInvocation MemberReference classifierName Literal "an imported classifier" warnClassifierNotFound IfStatement BinaryOperation != MemberReference mClassifier Literal null BlockStatement StatementExpression MethodInvocation parseState MemberReference mClassifier LocalVariableDeclaration ReferenceType Object VariableDeclarator srcFile MethodInvocation parseState getArtifact StatementExpression MethodInvocation MemberReference mClassifier MemberReference srcFile buildImport	1
MethodDeclaration Modifier private addTargetListener FormalParameter ReferenceType TargetListener listener StatementExpression MethodInvocation listenerList ClassReference ReferenceType TargetListener MemberReference listener add	0
MethodDeclaration Modifier public FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType Object annotatedElement IfStatement BinaryOperation instanceof MemberReference annotatedElement ReferenceType Element BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run StatementExpression Cast ReferenceType MemberReference StatementExpression MethodInvocation MethodInvocation ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the to the element #" MemberReference MemberReference annotatedElement execute getCommandStack	0
MethodDeclaration Modifier public ReferenceType String FormalParameter ReferenceType String key ReturnStatement MethodInvocation Translator MemberReference key localize	0
MethodDeclaration Modifier public Annotation Override ReferenceType String FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType ToDoItem VariableDeclarator item MethodInvocation MethodInvocation me getX MethodInvocation me getY hitClarifier LocalVariableDeclaration ReferenceType String VariableDeclarator tip Literal "" IfStatement BinaryOperation && BinaryOperation != MemberReference item Literal null MethodInvocation Globals MethodInvocation getSelectionManager MethodInvocation This curEditor BlockStatement StatementExpression Assignment MemberReference tip BinaryOperation + MethodInvocation item Literal " " = IfStatement BinaryOperation != MethodInvocation getOwner Literal null BlockStatement StatementExpression Assignment MemberReference tip MethodInvocation Model MethodInvocation MethodInvocation getOwner getFacade = BlockStatement StatementExpression Assignment MemberReference tip MethodInvocation toString = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference tip Literal null BinaryOperation > MethodInvocation tip length Literal 0 MethodInvocation ! tip Literal " " endsWith BlockStatement StatementExpression Assignment MemberReference tip Literal " " += ReturnStatement MemberReference tip	1
MethodDeclaration Modifier public static ReferenceType Object getAttributeForName FormalParameter ReferenceType Object relation FormalParameter ReferenceType String attributeName LocalVariableDeclaration ReferenceType Object VariableDeclarator attribute Literal null LocalVariableDeclaration ReferenceType Collection VariableDeclarator attributes MethodInvocation Model MethodInvocation MemberReference relation getAttributes getFacade ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation attributes iterator MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator attr MethodInvocation it next IfStatement MethodInvocation Model MethodInvocation MemberReference attr getName MethodInvocation MemberReference attributeName equals getFacade BlockStatement StatementExpression Assignment MemberReference attribute MemberReference attr = BreakStatement ReturnStatement MemberReference attribute	1
MethodDeclaration Modifier public ReferenceType Selection makeSelection ReturnStatement ClassCreator ReferenceType This	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Object getNewElements ReturnStatement MemberReference newElements	0
MethodDeclaration Modifier protected ReferenceType Object getSelectedModelElement IfStatement BinaryOperation != MethodInvocation getTarget Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getPowertype getFacade ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override setFilled FormalParameter BasicType boolean f StatementExpression MethodInvocation cover MemberReference f setFilled	0
MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text TryStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference text CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ArgoEventTypes This MethodInvocation Translator MemberReference msg MemberReference args	0
MethodDeclaration Modifier public FormalParameter ReferenceType String name StatementExpression MethodInvocation MemberReference name add	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType BlockStatement ReturnStatement Cast ReferenceType MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object assoc TryStatement IfStatement BinaryOperation && BinaryOperation instanceof MemberReference handle ReferenceType Classifier BinaryOperation instanceof MemberReference assoc ReferenceType UmlAssociation BlockStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator classifier Cast ReferenceType Classifier MemberReference handle LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator MemberReference classifier getAssociationEnds WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType AssociationEnd VariableDeclarator end Cast ReferenceType AssociationEnd MethodInvocation it next IfStatement Cast ReferenceType UmlAssociation MemberReference assoc BlockStatement ReturnStatement MemberReference end ReturnStatement Literal null ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " MemberReference assoc CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae IfStatement BinaryOperation == MemberReference textSource Literal null BlockStatement IfStatement MethodInvocation BlockStatement LocalVariableDeclaration ReferenceType CutAction VariableDeclarator cmd ClassCreator ReferenceType CutAction MethodInvocation Translator Literal localize StatementExpression MethodInvocation cmd MemberReference ae actionPerformed BlockStatement StatementExpression MethodInvocation textSource cut IfStatement BinaryOperation || BinaryOperation && MethodInvocation isSystemClipBoardEmpty BinaryOperation == MemberReference Globals clipBoard Literal null MethodInvocation Globals.clipBoard isEmpty BlockStatement StatementExpression MethodInvocation ActionPaste MethodInvocation Literal false setEnabled getInstance BlockStatement StatementExpression MethodInvocation ActionPaste MethodInvocation Literal true setEnabled getInstance	1
MethodDeclaration Modifier private ReferenceType FigNode getFigNode FormalParameter ReferenceType String figId IllegalStateException IfStatement MethodInvocation figId Literal "." contains BlockStatement StatementExpression Assignment MemberReference figId MethodInvocation figId Literal 0 MethodInvocation figId Literal '.' indexOf substring = LocalVariableDeclaration ReferenceType FigEdgeModelElement VariableDeclarator edge Cast ReferenceType FigEdgeModelElement MethodInvocation MemberReference figId findFig IfStatement BinaryOperation == MemberReference edge Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalStateException BinaryOperation + Literal "Can't find a FigNode with id " MemberReference figId StatementExpression MethodInvocation edge makeEdgePort ReturnStatement MethodInvocation edge getEdgePort BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator f MethodInvocation MemberReference figId findFig IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigNode BlockStatement ReturnStatement Cast ReferenceType FigNode MemberReference f BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal " MemberReference figId Literal " is not a node, edge ignored" error ReturnStatement Literal null	1
MethodDeclaration Modifier public final ReferenceType String ReturnStatement Literal	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getPseudostate getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration ReferenceType Object getOwner ReturnStatement MemberReference owner	0
MethodDeclaration Modifier public addParameter FormalParameter ReferenceType Object objectFlowState FormalParameter ReferenceType Object parameter StatementExpression Cast ReferenceType MemberReference objectFlowState	0
MethodDeclaration Annotation Override ReferenceType FormalParameter ReferenceType Object owner FormalParameter ReferenceType Rectangle bounds FormalParameter ReferenceType DiagramSettings settings ReturnStatement ClassCreator ReferenceType MemberReference owner MemberReference bounds MemberReference settings	0
MethodDeclaration Modifier private StatementExpression MethodInvocation figNodes clear LocalVariableDeclaration ReferenceType HashMap TypeArgument ReferenceType Fig TypeArgument ReferenceType List TypeArgument ReferenceType ClassdiagramInheritanceEdge VariableDeclarator figParentEdges ClassCreator ReferenceType HashMap TypeArgument ReferenceType Fig TypeArgument ReferenceType List TypeArgument ReferenceType ClassdiagramInheritanceEdge ForStatement EnhancedForControl VariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator node MemberReference layoutedClassNodes BlockStatement StatementExpression MethodInvocation node MethodInvocation clear getUpNodes StatementExpression MethodInvocation node MethodInvocation clear getDownNodes StatementExpression MethodInvocation figNodes MethodInvocation node MemberReference node put ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator edge MemberReference BlockStatement LocalVariableDeclaration ReferenceType Fig VariableDeclarator parentFig MethodInvocation edge LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator child MethodInvocation figNodes MethodInvocation edge getSourceFigNode get LocalVariableDeclaration ReferenceType ClassdiagramNode VariableDeclarator parent MethodInvocation figNodes MemberReference parentFig get IfStatement BinaryOperation instanceof MemberReference edge ReferenceType ClassdiagramInheritanceEdge BlockStatement IfStatement BinaryOperation && BinaryOperation != MemberReference parent Literal null BinaryOperation != MemberReference child Literal null BlockStatement StatementExpression MethodInvocation parent MemberReference child StatementExpression MethodInvocation child MemberReference parent addUplink LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ClassdiagramInheritanceEdge VariableDeclarator edgeList MethodInvocation figParentEdges MemberReference parentFig get IfStatement BinaryOperation == MemberReference edgeList Literal null BlockStatement StatementExpression Assignment MemberReference edgeList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ClassdiagramInheritanceEdge = StatementExpression MethodInvocation figParentEdges MemberReference parentFig MemberReference edgeList put StatementExpression MethodInvocation edgeList Cast ReferenceType ClassdiagramInheritanceEdge MemberReference edge add BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Edge with missing " MemberReference edge error IfStatement BinaryOperation instanceof MemberReference edge ReferenceType ClassdiagramNoteEdge BlockStatement IfStatement MethodInvocation parent isComment BlockStatement StatementExpression MethodInvocation parent MemberReference child addUplink IfStatement MethodInvocation child isComment BlockStatement StatementExpression MethodInvocation child MemberReference parent addUplink BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Unexpected for edge: " MemberReference edge error IfStatement BinaryOperation instanceof MemberReference edge ReferenceType ClassdiagramAssociationEdge BlockStatement BlockStatement StatementExpression MethodInvocation LOG Literal "Unsupported edge type" error	1
MethodDeclaration Modifier public final mBITWISEXOREQUAL FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference BITWISEXOREQUAL = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal "^=" match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier private ReferenceType String generateAttributeParameterModifier FormalParameter ReferenceType Object attr FormalParameter ReferenceType String def LocalVariableDeclaration BasicType int VariableDeclarator modType MethodInvocation MemberReference attr getAttributeModifierType IfStatement BinaryOperation || BinaryOperation == MemberReference modType MemberReference NORMAL_MOD BinaryOperation == MemberReference modType Literal - 1 BlockStatement IfStatement MethodInvocation ! MethodInvocation MemberReference attr isAAssociationClass getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation MethodInvocation MemberReference attr getType getFacade IfStatement BinaryOperation == MemberReference type Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + MemberReference attr Literal " has no type!" error ReturnStatement Literal "" IfStatement BinaryOperation || MethodInvocation MethodInvocation MemberReference type isAbstract getFacade MethodInvocation MethodInvocation MemberReference type isAInterface getFacade BlockStatement IfStatement BinaryOperation == MemberReference modType MemberReference NORMAL_MOD BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal no reference or pointer " Literal warn StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + Literal "\t" MemberReference type Literal " cannot be " Literal "using reference" warn StatementExpression Assignment MemberReference modType MemberReference REFERENCE_MOD = IfStatement BinaryOperation == MemberReference modType MemberReference NORMAL_MOD BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation == MemberReference modType MemberReference REFERENCE_MOD BlockStatement ReturnStatement Literal "&" IfStatement BinaryOperation == MemberReference modType MemberReference POINTER_MOD BlockStatement ReturnStatement Literal "*" IfStatement BinaryOperation == MethodInvocation def length Literal 0 BlockStatement IfStatement BinaryOperation && MethodInvocation MethodInvocation MemberReference attr isAParameter getFacade BinaryOperation || MethodInvocation MethodInvocation getOutParameter MethodInvocation MethodInvocation MethodInvocation MemberReference attr getKind getFacade equals getDirectionKind MethodInvocation MethodInvocation getInOutParameter MethodInvocation MethodInvocation MethodInvocation MemberReference attr getKind getFacade equals getDirectionKind BlockStatement ReturnStatement Literal "&" ReturnStatement MemberReference def	1
MethodDeclaration Modifier private FormalParameter ReferenceType Project project FormalParameter ReferenceType Object model LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Profile VariableDeclarator c MethodInvocation project MethodInvocation getProfiles getProfileConfiguration IfStatement BinaryOperation != MemberReference c Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Profile VariableDeclarator p MemberReference c BlockStatement TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator profile MethodInvocation p getProfilePackages BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference model MemberReference profile getExtensionMechanismsHelper CatchClause CatchClauseParameter ProfileException pe StatementExpression MethodInvocation LOG BinaryOperation + Literal "Failed to get profile packages from profile " MethodInvocation p warn	1
MethodDeclaration Modifier public FormalParameter ReferenceType e StatementExpression MethodInvocation setTarget	0
MethodDeclaration Modifier public BasicType int showDialog FormalParameter ReferenceType Component parent LocalVariableDeclaration ReferenceType Frame VariableDeclarator frame TernaryExpression BinaryOperation instanceof MemberReference parent ReferenceType Frame Cast ReferenceType Frame MemberReference parent Cast ReferenceType Frame MethodInvocation SwingUtilities ClassReference ReferenceType Frame MemberReference parent StatementExpression Assignment MemberReference dialog ClassCreator ReferenceType JDialog MemberReference frame MemberReference title Literal true = LocalVariableDeclaration ReferenceType Container VariableDeclarator contentPane MethodInvocation dialog getContentPane StatementExpression MethodInvocation contentPane ClassCreator ReferenceType setLayout StatementExpression MethodInvocation contentPane This MemberReference CENTER add StatementExpression MethodInvocation dialog MemberReference WindowConstants DO_NOTHING_ON_CLOSE setDefaultCloseOperation StatementExpression MethodInvocation dialog ClassCreator ReferenceType MethodDeclaration Modifier public windowClosing FormalParameter ReferenceType WindowEvent we StatementExpression MethodInvocation cancel StatementExpression MethodInvocation dialog pack StatementExpression MethodInvocation dialog MemberReference parent StatementExpression MethodInvocation dialog Literal true setVisible ReturnStatement MemberReference returnValue	0
MethodDeclaration Modifier public ReferenceType Collection getAllSubStates FormalParameter ReferenceType Object ThrowStatement ClassCreator ReferenceType NotYetImplementedException	0
MethodDeclaration Modifier public final BasicType boolean setTag FormalParameter BasicType int iTagType FormalParameter ReferenceType String sTagValue IllegalArgumentException LocalVariableDeclaration ReferenceType Tag VariableDeclarator objTag Literal null SwitchStatement MemberReference iTagType SwitchStatementCase TAG_TYPE_ACCESS StatementExpression Assignment MemberReference objTag Cast ReferenceType AccessTag MethodInvocation tmTags Literal "access" get = BreakStatement SwitchStatementCase TAG_TYPE_ABSTRACT StatementExpression Assignment MemberReference objTag Cast ReferenceType AbstractTag MethodInvocation tmTags Literal "abstract" get = BreakStatement SwitchStatementCase TAG_TYPE_AUTHOR StatementExpression Assignment MemberReference objTag Cast ReferenceType AuthorTag MethodInvocation tmTags Literal "author" get = BreakStatement SwitchStatementCase TAG_TYPE_DEPRECATED StatementExpression Assignment MemberReference objTag Cast ReferenceType DeprecatedTag MethodInvocation tmTags Literal "deprecated" get = BreakStatement SwitchStatementCase TAG_TYPE_PACKAGE StatementExpression Assignment MemberReference objTag Cast ReferenceType PackageTag MethodInvocation tmTags Literal "package" get = BreakStatement SwitchStatementCase TAG_TYPE_RETURN StatementExpression Assignment MemberReference objTag Cast ReferenceType ReturnTag MethodInvocation tmTags Literal "return" get = BreakStatement SwitchStatementCase TAG_TYPE_SEE StatementExpression Assignment MemberReference objTag Cast ReferenceType SeeTag MethodInvocation tmTags Literal "see" get = BreakStatement SwitchStatementCase TAG_TYPE_SINCE StatementExpression Assignment MemberReference objTag Cast ReferenceType SinceTag MethodInvocation tmTags Literal "since" get = BreakStatement SwitchStatementCase TAG_TYPE_STATIC StatementExpression Assignment MemberReference objTag Cast ReferenceType StaticTag MethodInvocation tmTags Literal "static" get = BreakStatement SwitchStatementCase TAG_TYPE_SUBPACKAGE StatementExpression Assignment MemberReference objTag Cast ReferenceType SubpackageTag MethodInvocation tmTags Literal "subpackage" get = BreakStatement SwitchStatementCase TAG_TYPE_VAR StatementExpression Assignment MemberReference objTag Cast ReferenceType VarTag MethodInvocation tmTags Literal "var" get = BreakStatement SwitchStatementCase TAG_TYPE_VERSION StatementExpression Assignment MemberReference objTag Cast ReferenceType VersionTag MethodInvocation tmTags Literal "version" get = BreakStatement SwitchStatementCase ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal not set value '" MemberReference sTagValue Literal "' for tag type " MemberReference iTagType IfStatement BinaryOperation != MemberReference objTag Literal null BlockStatement ReturnStatement MethodInvocation objTag MemberReference sTagValue setContent ReturnStatement Literal false	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object expression StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget Literal null getCommonBehaviorHelper StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference expression getCommonBehaviorHelper	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object predecessor IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation != MemberReference handle Literal null BinaryOperation instanceof MemberReference handle ReferenceType Message BinaryOperation != MemberReference predecessor Literal null BinaryOperation instanceof MemberReference predecessor ReferenceType Message BlockStatement StatementExpression Cast ReferenceType Message MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference predecessor	1
MethodDeclaration Modifier private create FormalParameter ReferenceType Object modelElement Exception StatementExpression MethodInvocation MemberReference modelElement MemberReference create	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Mode FormalParameter ReferenceType String instructions ReturnStatement ClassCreator ReferenceType This MemberReference instructions	0
MethodDeclaration Modifier public static ReferenceType FormalParameter BasicType int x FormalParameter BasicType int y FormalParameter BasicType int width FormalParameter BasicType int height LocalVariableDeclaration ReferenceType VariableDeclarator gbc MethodInvocation MemberReference x MemberReference y MemberReference width MemberReference height StatementExpression Assignment MemberReference gbc fill MemberReference BOTH = StatementExpression Assignment MemberReference gbc insets MemberReference = ReturnStatement MemberReference gbc	0
MethodDeclaration Modifier public Annotation Override initialiseListener FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation MemberReference modelElement ArrayCreator ReferenceType String ArrayInitializer Literal "name" Literal "visibility" Literal "stereotype" Literal "taggedValue" LocalVariableDeclaration ReferenceType Collection VariableDeclarator stereotypes MethodInvocation Model MethodInvocation MemberReference modelElement getStereotypes getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation stereotypes iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation iter next StatementExpression MethodInvocation MemberReference ArrayCreator ReferenceType String ArrayInitializer Literal "name" Literal "remove" ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator uml MethodInvocation Model MethodInvocation MemberReference modelElement getTaggedValuesCollection getFacade BlockStatement StatementExpression MethodInvocation MemberReference uml	0
MethodDeclaration Modifier public mouseExited FormalParameter ReferenceType MouseEvent e StatementExpression MethodInvocation MethodInvocation Cursor MemberReference Cursor DEFAULT_CURSOR getPredefinedCursor setCursor	0
MethodDeclaration Modifier public FormalParameter ReferenceType String showem StatementExpression MethodInvocation MethodInvocation Boolean MethodInvocation booleanValue MemberReference showem valueOf	1
MethodDeclaration Modifier private loadDependentProfilesUml1 FormalParameter ReferenceType Object pkg LocalVariableDeclaration ReferenceType String VariableDeclarator dependencyListStr MethodInvocation Model MethodInvocation MemberReference pkg Literal getTaggedValueValue getFacade LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference dependencyListStr Literal " LocalVariableDeclaration ReferenceType String VariableDeclarator dependencyName Literal null WhileStatement MethodInvocation st hasMoreTokens BlockStatement StatementExpression Assignment MemberReference dependencyName MethodInvocation st nextToken = IfStatement BinaryOperation != MemberReference dependencyName Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Adding dependency " MemberReference dependencyName debug LocalVariableDeclaration ReferenceType Profile VariableDeclarator profile MethodInvocation profileManager MemberReference dependencyName IfStatement BinaryOperation != MemberReference profile Literal null BlockStatement StatementExpression MethodInvocation MemberReference profile addProfileDependency BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "The profile \"" MemberReference displayName Literal "\" has a dependency named \"" MemberReference dependencyName Literal "\" which isn't warn	1
MethodDeclaration Modifier private ReferenceType Object getGeneralization FormalParameter ReferenceType Object mPackage FormalParameter ReferenceType Object parent FormalParameter ReferenceType Object child LocalVariableDeclaration ReferenceType Object VariableDeclarator mGeneralization MethodInvocation Model MethodInvocation MemberReference child MemberReference parent getGeneralization getFacade IfStatement BinaryOperation == MemberReference mGeneralization Literal null BlockStatement StatementExpression Assignment MemberReference mGeneralization MethodInvocation Model MethodInvocation MemberReference child MemberReference parent buildGeneralization getCoreFactory = StatementExpression MethodInvocation newElements MemberReference mGeneralization add IfStatement BinaryOperation != MemberReference mGeneralization Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mGeneralization MemberReference mPackage setNamespace getCoreHelper ReturnStatement MemberReference mGeneralization	0
MethodDeclaration Modifier private ReferenceType StringBuffer printToBuffer FormalParameter ReferenceType Exception e LocalVariableDeclaration ReferenceType StringWriter VariableDeclarator sw ClassCreator ReferenceType StringWriter LocalVariableDeclaration ReferenceType PrintWriter VariableDeclarator pw ClassCreator ReferenceType java ReferenceType io ReferenceType PrintWriter MemberReference sw StatementExpression MethodInvocation e MemberReference pw printStackTrace ReturnStatement MethodInvocation sw getBuffer	1
MethodDeclaration Modifier public ReferenceType Collection getTaggedValuesCollection FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType ModelElement BlockStatement ReturnStatement Cast ReferenceType ModelElement MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentCollection	0
MethodDeclaration Modifier public valueChanged FormalParameter ReferenceType ListSelectionEvent e IfStatement BinaryOperation != MethodInvocation jlstFamilies getSelectedValue Literal null BlockStatement StatementExpression Assignment MemberReference Cast ReferenceType String MethodInvocation jlstFamilies getSelectedValue = StatementExpression MethodInvocation	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unchecked" ReferenceType Collection FormalParameter ReferenceType Object root ReturnStatement MethodInvocation Model MethodInvocation MemberReference root MethodInvocation Model MethodInvocation getPackage getMetaTypes getModelManagementHelper	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f StatementExpression MethodInvocation Literal true	0
MethodDeclaration Modifier private BasicType boolean findChangeableInstanceAttributeInInherited FormalParameter ReferenceType Object dm FormalParameter BasicType int depth LocalVariableDeclaration ReferenceType Iterator VariableDeclarator attribs MethodInvocation Model MethodInvocation MemberReference dm getAttributes MethodInvocation iterator getFacade WhileStatement MethodInvocation attribs hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator attr MethodInvocation attribs next IfStatement BinaryOperation && MethodInvocation ! Model MethodInvocation MemberReference attr isStatic getFacade MethodInvocation ! Model MethodInvocation MemberReference attr isReadOnly getFacade BlockStatement ReturnStatement Literal true IfStatement BinaryOperation > MemberReference depth MemberReference BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation Model MethodInvocation MemberReference dm getGeneralizations MethodInvocation iterator getFacade WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation Model MethodInvocation MethodInvocation iter next getGeneral getFacade IfStatement BinaryOperation == MemberReference parent MemberReference dm BlockStatement ContinueStatement IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference parent isAClassifier getFacade MethodInvocation MemberReference parent BinaryOperation + MemberReference depth Literal 1 findChangeableInstanceAttributeInInherited BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier private ReportError FormalParameter ReferenceType String message StatementExpression MethodInvocation System.out BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + MemberReference message Literal " in token " MemberReference index Literal " [" MemberReference curtok id Literal "]" println	1
MethodDeclaration Modifier private BasicType int FormalParameter ReferenceType File file IOException ReturnStatement MethodInvocation MethodInvocation size MemberReference file Literal getEntryNames	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType PseudostateKind	0
MethodDeclaration Modifier public updateMainTask FormalParameter ReferenceType String name StatementExpression MethodInvocation MemberReference name updateMainTask	0
MethodDeclaration Modifier public Annotation Override ReferenceType Object execute StatementExpression MethodInvocation Model MethodInvocation getPump StatementExpression Assignment MemberReference creatingCurrentProject Literal true = StatementExpression MethodInvocation LOG Literal "making empty profile project" info LocalVariableDeclaration ReferenceType Project VariableDeclarator newProject ClassCreator ReferenceType MemberReference Project StatementExpression MethodInvocation MemberReference newProject IfStatement MemberReference BlockStatement LocalVariableDeclaration ReferenceType ArgoDiagram VariableDeclarator d MethodInvocation MemberReference newProject StatementExpression MethodInvocation MemberReference newProject StatementExpression MethodInvocation newProject MemberReference d StatementExpression Assignment MemberReference creatingCurrentProject Literal false = StatementExpression MethodInvocation MemberReference newProject StatementExpression MethodInvocation Model MethodInvocation getPump ReturnStatement Literal null	0
MethodDeclaration Modifier static ReferenceType String generateAction FormalParameter ReferenceType Object umlAction LocalVariableDeclaration ReferenceType Collection VariableDeclarator c LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it LocalVariableDeclaration ReferenceType String VariableDeclarator s LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator p LocalVariableDeclaration BasicType boolean VariableDeclarator first IfStatement BinaryOperation == MemberReference umlAction Literal null BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator script MethodInvocation Model MethodInvocation MemberReference umlAction getScript getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference script Literal null BinaryOperation != MethodInvocation Model MethodInvocation MemberReference script getBody getFacade Literal null BlockStatement StatementExpression Assignment MemberReference s MethodInvocation Model MethodInvocation MemberReference script getBody MethodInvocation toString getFacade = BlockStatement StatementExpression Assignment MemberReference s Literal "" = StatementExpression Assignment MemberReference p ClassCreator ReferenceType StringBuilder = StatementExpression Assignment MemberReference c MethodInvocation Model MethodInvocation MemberReference umlAction getFacade = IfStatement BinaryOperation != MemberReference c Literal null BlockStatement StatementExpression Assignment MemberReference it MethodInvocation c iterator = StatementExpression Assignment MemberReference first Literal true = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator arg MethodInvocation it next IfStatement MemberReference ! first BlockStatement StatementExpression MethodInvocation p Literal ", " append IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference arg getValue getFacade Literal null BlockStatement StatementExpression MethodInvocation p MethodInvocation MethodInvocation Model MethodInvocation MemberReference arg getValue getFacade generateExpression append StatementExpression Assignment MemberReference first Literal false = IfStatement BinaryOperation && BinaryOperation == MethodInvocation s length Literal 0 BinaryOperation == MethodInvocation p length Literal 0 BlockStatement ReturnStatement Literal "" IfStatement BinaryOperation == MethodInvocation p length Literal 0 BlockStatement ReturnStatement MemberReference s ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MemberReference s Literal " (" MemberReference p Literal ")"	1
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object modelElement ReturnStatement MethodInvocation Model MethodInvocation MethodInvocation getProfileModels MemberReference modelElement getAllPossibleStereotypes getExtensionMechanismsHelper	0
MethodDeclaration Modifier public Annotation Override ReferenceType Collection getChildren FormalParameter Modifier final ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStereotype getFacade BlockStatement LocalVariableDeclaration Modifier final ReferenceType List VariableDeclarator list ClassCreator ReferenceType ArrayList IfStatement BinaryOperation && BinaryOperation != MethodInvocation Model MethodInvocation MemberReference parent getTagDefinitions getFacade Literal null BinaryOperation > MethodInvocation Model MethodInvocation MemberReference parent getTagDefinitions MethodInvocation size getFacade Literal 0 BlockStatement StatementExpression MethodInvocation list MethodInvocation Model MethodInvocation MemberReference parent getTagDefinitions getFacade addAll ReturnStatement MemberReference list ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public Annotation Override setLineColor FormalParameter ReferenceType Color c StatementExpression MethodInvocation MemberReference c setLineColor	0
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType ModuleInterface ReturnStatement MethodInvocation Collections MethodInvocation moduleStatus keySet	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Component BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem	0
MethodDeclaration Modifier public LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation table MethodInvocation Literal 0 getColumn LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation table MethodInvocation Literal 1 getColumn StatementExpression MethodInvocation Literal 50 StatementExpression MethodInvocation Literal 150 StatementExpression MethodInvocation Literal 150 StatementExpression MethodInvocation Literal 250 StatementExpression MethodInvocation Literal 550 StatementExpression MethodInvocation Literal 550 StatementExpression MethodInvocation table	0
MethodDeclaration BasicType int LocalVariableDeclaration BasicType int VariableDeclarator Literal 0 LocalVariableDeclaration ReferenceType Point VariableDeclarator points MethodInvocation MethodInvocation getPoints getFig IfStatement BinaryOperation > MemberReference points length Literal 0 BlockStatement StatementExpression Assignment MemberReference MemberReference ArraySelector BinaryOperation - MemberReference points length Literal 1 MemberReference y points = ReturnStatement MemberReference	0
MethodDeclaration Modifier public simpleTypeSpecifier FormalParameter ReferenceType List sts IfStatement MethodInvocation ! ignore BlockStatement LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator stsString ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation sts iterator WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation stsString MethodInvocation Literal " " append MethodInvocation i MethodInvocation toString next append StatementExpression MethodInvocation LOG BinaryOperation + Literal "In simpleTypeSpecifier, stsString = " MemberReference stsString debug LocalVariableDeclaration ReferenceType Object VariableDeclarator theType MethodInvocation MethodInvocation stsString MethodInvocation trim toString IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MemberReference theType LocalVariableDeclaration ReferenceType Object VariableDeclarator contextModelElement MethodInvocation contextStack peek IfStatement MethodInvocation MethodInvocation MemberReference contextModelElement isAOperation getFacade BlockStatement AssertStatement BinaryOperation != MemberReference operationModeler Literal null BinaryOperation + BinaryOperation + Literal "operationModeler is null in the context of operation " MethodInvocation MethodInvocation MemberReference contextModelElement getName getFacade Literal "." StatementExpression MethodInvocation operationModeler MemberReference theType IfStatement MethodInvocation MethodInvocation MemberReference contextModelElement isAClass getFacade BlockStatement IfStatement MethodInvocation MethodInvocation MemberReference contextModelElement isAParameter getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference contextModelElement MemberReference theType getCoreHelper IfStatement BinaryOperation || MethodInvocation MethodInvocation MemberReference contextModelElement isAModel getFacade MethodInvocation MethodInvocation MemberReference contextModelElement isANamespace getFacade BlockStatement IfStatement BinaryOperation != MemberReference typedefModeler Literal null BlockStatement StatementExpression MethodInvocation typedefModeler MemberReference theType	1
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Collection selected LocalVariableDeclaration ReferenceType Object VariableDeclarator trans MethodInvocation getTarget IfStatement BinaryOperation || BinaryOperation == MemberReference selected Literal null BinaryOperation == MethodInvocation selected size Literal 0 BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference trans Literal null getStateMachinesHelper BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference trans MethodInvocation selected MethodInvocation next iterator getStateMachinesHelper	1
MethodDeclaration Modifier public Annotation Deprecated BasicType boolean ReturnStatement MethodInvocation ! diaDefault	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object trans IfStatement BinaryOperation instanceof MemberReference trans ReferenceType Transition BlockStatement ReturnStatement Cast ReferenceType Transition MemberReference trans ThrowStatement ClassCreator ReferenceType IllegalArgumentException	0
MethodDeclaration Modifier protected buildModelList LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation TargetManager MethodInvocation getModelTarget getInstance LocalVariableDeclaration ReferenceType Collection VariableDeclarator ops ClassCreator ReferenceType ArrayList IfStatement MethodInvocation Model MethodInvocation MemberReference target isACallAction getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MethodInvocation Model MethodInvocation MemberReference target getModelElementContainer getFacade WhileStatement MethodInvocation ! Model MethodInvocation MemberReference ns isAPackage getFacade BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation MemberReference ns getModelElementContainer getFacade = IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement BreakStatement IfStatement MethodInvocation Model MethodInvocation MemberReference ns isANamespace getFacade BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference ns MethodInvocation Model MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind getModelManagementHelper LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator WhileStatement MethodInvocation i hasNext BlockStatement StatementExpression MethodInvocation ops MethodInvocation Model MethodInvocation MethodInvocation i next getOperations getFacade addAll LocalVariableDeclaration ReferenceType Object VariableDeclarator current MethodInvocation Model MethodInvocation MemberReference target getOperation getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference current isAOperation getFacade BlockStatement IfStatement MethodInvocation ! ops MemberReference current contains BlockStatement StatementExpression MethodInvocation ops MemberReference current add StatementExpression MethodInvocation MemberReference ops	1
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "unchecked" ReferenceType List getDebugInfo LocalVariableDeclaration ReferenceType List VariableDeclarator info ClassCreator ReferenceType ArrayList StatementExpression MethodInvocation info Literal "Event Listeners" add ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator entrySet MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator entry Cast ReferenceType Map ReferenceType Entry MethodInvocation it next LocalVariableDeclaration ReferenceType String VariableDeclarator item MethodInvocation entry MethodInvocation toString getKey LocalVariableDeclaration ReferenceType List VariableDeclarator modelElementNode MethodInvocation MemberReference item newDebugNode StatementExpression MethodInvocation info MemberReference modelElementNode add LocalVariableDeclaration ReferenceType List VariableDeclarator listenerList Cast ReferenceType List MethodInvocation entry getValue LocalVariableDeclaration ReferenceType Map TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType String VariableDeclarator map ClassCreator ReferenceType HashMap TypeArgument ReferenceType String TypeArgument ReferenceType List TypeArgument ReferenceType String ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator listIt MethodInvocation listenerList iterator MethodInvocation listIt hasNext BlockStatement LocalVariableDeclaration ReferenceType Listener VariableDeclarator listener Cast ReferenceType Listener MethodInvocation listIt next IfStatement BinaryOperation != MethodInvocation listener getProperties Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType String VariableDeclarator MethodInvocation listener getProperties BlockStatement IfStatement MethodInvocation ! map MemberReference containsKey BlockStatement StatementExpression MethodInvocation map MemberReference ClassCreator ReferenceType LinkedList TypeArgument ReferenceType String put StatementExpression MethodInvocation map MethodInvocation MethodInvocation listener MethodInvocation getClass MethodInvocation getName getListener add MemberReference get BlockStatement IfStatement MethodInvocation ! map Literal "" containsKey BlockStatement StatementExpression MethodInvocation map Literal "" ClassCreator ReferenceType LinkedList TypeArgument ReferenceType String put StatementExpression MethodInvocation map MethodInvocation MethodInvocation listener MethodInvocation getClass MethodInvocation getName getListener add Literal "" get ForStatement EnhancedForControl VariableDeclaration ReferenceType Map ReferenceType Entry VariableDeclarator o MethodInvocation map entrySet BlockStatement StatementExpression MethodInvocation modelElementNode Cast ReferenceType String MethodInvocation o getKey add StatementExpression MethodInvocation modelElementNode Cast ReferenceType List TypeArgument ReferenceType String MethodInvocation o getValue add ReturnStatement MemberReference info	1
MethodDeclaration Modifier protected Annotation Override setProperty FormalParameter ReferenceType String text LocalVariableDeclaration ReferenceType Object VariableDeclarator target MethodInvocation getTarget IfStatement Literal MethodInvocation MemberReference fieldName equals "name" BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference target MemberReference text setName getCoreHelper	1
MethodDeclaration Modifier public Annotation Override ReferenceType Object FormalParameter BasicType int x FormalParameter BasicType int y LocalVariableDeclaration ReferenceType Object VariableDeclarator o SuperMethodInvocation MemberReference x MemberReference y IfStatement BinaryOperation != MemberReference o Literal null BlockStatement ReturnStatement MemberReference o IfStatement MethodInvocation ClassCreator ReferenceType Rectangle ClassCreator ReferenceType Dimension MemberReference x MemberReference y BlockStatement ReturnStatement MethodInvocation getOwner ReturnStatement Literal null	0
MethodDeclaration Modifier private FormalParameter BasicType boolean value LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Fig VariableDeclarator figs MethodInvocation ce MethodInvocation getFigs getSelectionManager ForStatement EnhancedForControl VariableDeclaration ReferenceType Fig VariableDeclarator f MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference f StatementExpression MethodInvocation f damage	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation Expression MemberReference sb ToSource StatementExpression MethodInvocation sb Literal ";" append StatementExpression This MethodInvocation MemberReference sb NewLine	1
MethodDeclaration Modifier public setTarget FormalParameter ReferenceType Object theTarget StatementExpression Assignment MemberReference target MemberReference theTarget =	0
MethodDeclaration Modifier public Annotation Override ReferenceType String getDescription LocalVariableDeclaration ReferenceType Object VariableDeclarator s ArrayInitializer MemberReference desc ReturnStatement MethodInvocation Translator Literal MemberReference s	0
MethodDeclaration Modifier private parseStateExitAction FormalParameter ReferenceType Object st FormalParameter ReferenceType String s IfStatement BinaryOperation > MethodInvocation s Literal "/" indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference s MethodInvocation s MethodInvocation trim BinaryOperation + MethodInvocation s Literal "/" indexOf Literal 1 substring = LocalVariableDeclaration ReferenceType Object VariableDeclarator oldExit MethodInvocation Model MethodInvocation MemberReference st getExit getFacade IfStatement BinaryOperation == MemberReference oldExit Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference st MethodInvocation MemberReference s buildNewCallAction getStateMachinesHelper BlockStatement StatementExpression MethodInvocation MemberReference oldExit MemberReference s	1
MethodDeclaration Modifier public ReferenceType Collection getChildren FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAModelElement getFacade BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference parent getBehaviors getFacade ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement BinaryOperation || MethodInvocation ! Model getFacade MethodInvocation Model MethodInvocation MemberReference dm isAAssociation getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Object VariableDeclarator me MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference me computeOffenders IfStatement BinaryOperation > MethodInvocation offs size Literal 1 BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	0
MethodDeclaration Modifier private BasicType double FormalParameter BasicType double x ReturnStatement BinaryOperation / BinaryOperation / BinaryOperation - MethodInvocation Math MemberReference x exp MethodInvocation Math MemberReference - x exp Literal 2 BinaryOperation / BinaryOperation + MethodInvocation Math MemberReference x exp MethodInvocation Math MemberReference - x exp Literal 2	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_7 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal 288019269919178752L Literal Literal 0L Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public ReferenceType List getEdges IfStatement BinaryOperation != MethodInvocation getGraphModel Literal null BlockStatement ReturnStatement MethodInvocation MethodInvocation getEdges getGraphModel ReturnStatement SuperMethodInvocation getEdges	0
MethodDeclaration Modifier public undo StatementExpression MethodInvocation npSettings MemberReference ! showem StatementExpression MethodInvocation MemberReference key MemberReference showem MemberReference ! showem fireNotationEvent	0
MethodDeclaration Modifier private static ReferenceType String generateKind FormalParameter ReferenceType Object kind LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator s ClassCreator ReferenceType StringBuffer IfStatement BinaryOperation || BinaryOperation == MemberReference kind Literal null BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getDirectionKind BlockStatement StatementExpression MethodInvocation s Literal "" append IfStatement BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getInOutParameter getDirectionKind BlockStatement StatementExpression MethodInvocation s Literal append IfStatement BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getReturnParameter getDirectionKind BlockStatement IfStatement BinaryOperation == MemberReference kind MethodInvocation Model MethodInvocation getOutParameter getDirectionKind BlockStatement StatementExpression MethodInvocation s Literal "out" append ReturnStatement MethodInvocation s toString	1
MethodDeclaration Modifier protected IfStatement MethodInvocation ! isCheckSize BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator bbox MethodInvocation getBounds LocalVariableDeclaration ReferenceType Dimension VariableDeclarator minSize MethodInvocation getMinimumSize StatementExpression Assignment MemberReference bbox width MethodInvocation Math MemberReference bbox width MemberReference minSize width max = StatementExpression Assignment MemberReference bbox height MethodInvocation Math MemberReference bbox height MemberReference minSize height max = StatementExpression MethodInvocation MemberReference bbox x MemberReference bbox y MemberReference bbox width MemberReference bbox height setBounds	1
MethodDeclaration Modifier public ReferenceType Include FormalParameter ReferenceType Object abase FormalParameter ReferenceType Object aninclusion IfStatement BinaryOperation || BinaryOperation instanceof MemberReference abase ReferenceType BinaryOperation instanceof MemberReference aninclusion ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType MemberReference abase	0
MethodDeclaration Modifier public ReferenceType Dimension FormalParameter ReferenceType Container parent SynchronizedStatement MethodInvocation parent getTreeLock LocalVariableDeclaration Modifier final ReferenceType Insets VariableDeclarator insets MethodInvocation parent getInsets LocalVariableDeclaration BasicType int VariableDeclarator preferredWidth Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator preferredHeight Literal 0 LocalVariableDeclaration BasicType int VariableDeclarator widestLabel Literal 0 LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation parent getComponentCount ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference MemberReference ++ i BlockStatement LocalVariableDeclaration ReferenceType Component VariableDeclarator childComp MethodInvocation parent MemberReference i getComponent IfStatement BinaryOperation && MethodInvocation childComp isVisible BinaryOperation instanceof MemberReference childComp ReferenceType BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator childHeight MethodInvocation MemberReference childComp IfStatement BinaryOperation instanceof MemberReference childComp ReferenceType JLabel BlockStatement LocalVariableDeclaration Modifier final ReferenceType JLabel VariableDeclarator jlabel Cast ReferenceType JLabel MemberReference childComp StatementExpression Assignment MemberReference widestLabel MethodInvocation Math MemberReference widestLabel MethodInvocation MemberReference jlabel max = StatementExpression Assignment MemberReference childComp MethodInvocation jlabel = LocalVariableDeclaration Modifier final BasicType int VariableDeclarator MethodInvocation MemberReference childComp StatementExpression Assignment MemberReference preferredWidth MethodInvocation Math MemberReference preferredWidth MemberReference max = StatementExpression Assignment MemberReference childHeight MethodInvocation Math MemberReference childHeight MethodInvocation MemberReference jlabel min = StatementExpression Assignment MemberReference preferredHeight BinaryOperation + MemberReference childHeight This MemberReference += StatementExpression Assignment MemberReference preferredWidth BinaryOperation + BinaryOperation + MemberReference insets left MemberReference widestLabel MemberReference insets right += StatementExpression Assignment MemberReference preferredHeight BinaryOperation + MemberReference insets top MemberReference insets bottom += ReturnStatement ClassCreator ReferenceType Dimension BinaryOperation + BinaryOperation + BinaryOperation + MemberReference insets left MemberReference widestLabel MemberReference preferredWidth MemberReference insets right MemberReference preferredHeight	0
MethodDeclaration Modifier public Annotation Override BasicType boolean doesAccept FormalParameter ReferenceType Object objectToAccept IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAClassifier getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAComment getFacade BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public ReferenceType ZipEntry getNextEntry IOException ReturnStatement MethodInvocation in getNextEntry	0
MethodDeclaration Modifier protected setProperty FormalParameter ReferenceType String text IfStatement MethodInvocation Model MethodInvocation MethodInvocation getTarget getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MethodInvocation getTarget MemberReference text getCommonBehaviorHelper	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType SuffixFilter LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType SuffixFilter VariableDeclarator c ClassCreator ReferenceType ArrayList TypeArgument ReferenceType SuffixFilter StatementExpression MethodInvocation c MemberReference add StatementExpression MethodInvocation c MemberReference otherFilters addAll ReturnStatement MemberReference c	0
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model MethodInvocation MemberReference dm isAAssociationClass getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator participants MethodInvocation Model MethodInvocation MemberReference dm getConnections getFacade IfStatement BinaryOperation == MemberReference participants Literal null BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation participants iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation iter next IfStatement MethodInvocation Model MethodInvocation MemberReference isAAssociationEnd getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator type MethodInvocation Model MethodInvocation MemberReference getType getFacade IfStatement MethodInvocation Model MethodInvocation MemberReference type isAAssociationClass getFacade BlockStatement ReturnStatement MemberReference PROBLEM_FOUND ReturnStatement MemberReference NO_PROBLEM	0
MethodDeclaration Modifier public removeModelEventListener LocalVariableDeclaration ReferenceType Collection VariableDeclarator bases MethodInvocation Model MethodInvocation MethodInvocation getTarget getBases getFacade LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation bases iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation it next StatementExpression MethodInvocation Model MethodInvocation This MemberReference base Literal "ownedElement" removeModelEventListener getPump StatementExpression MethodInvocation Model MethodInvocation This MethodInvocation getTarget Literal "base" removeModelEventListener getPump	0
MethodDeclaration Modifier private BasicType boolean isSomeSubvertexOf FormalParameter ReferenceType Object subject FormalParameter ReferenceType Object composite LocalVariableDeclaration ReferenceType Object VariableDeclarator c MemberReference subject WhileStatement BinaryOperation != MemberReference c Literal null BlockStatement IfStatement BinaryOperation == MemberReference c MemberReference composite BlockStatement ReturnStatement Literal true StatementExpression Assignment MemberReference c MethodInvocation Model MethodInvocation MemberReference c getContainer getFacade = ReturnStatement Literal false	1
MethodDeclaration Modifier static protected ReferenceType String correctRoundingError FormalParameter ReferenceType String widths LocalVariableDeclaration BasicType int VariableDeclarator totalWidth Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference widths length MemberReference ++ count BlockStatement TryStatement LocalVariableDeclaration BasicType int VariableDeclarator width MethodInvocation Integer MemberReference ArraySelector MemberReference count widths parseInt StatementExpression Assignment MemberReference totalWidth MemberReference width += CatchClause CatchClauseParameter NumberFormatException nfe LocalVariableDeclaration BasicType float VariableDeclarator totalError BinaryOperation - Literal 100 MemberReference totalWidth LocalVariableDeclaration BasicType float VariableDeclarator columnError BinaryOperation / MemberReference totalError MemberReference widths length LocalVariableDeclaration BasicType float VariableDeclarator error Literal 0 ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator count Literal 0 BinaryOperation < MemberReference count MemberReference widths length MemberReference ++ count BlockStatement TryStatement LocalVariableDeclaration BasicType int VariableDeclarator width MethodInvocation Integer MemberReference ArraySelector MemberReference count widths parseInt StatementExpression Assignment MemberReference error BinaryOperation + MemberReference error MemberReference columnError = IfStatement BinaryOperation >= MemberReference error Literal 1.0 BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator adj Cast BasicType int MethodInvocation Math MethodInvocation Math MemberReference error floor round StatementExpression Assignment MemberReference error BinaryOperation - MemberReference error Cast BasicType float MethodInvocation Math MemberReference error floor = StatementExpression Assignment MemberReference width BinaryOperation + MemberReference width MemberReference adj = StatementExpression Assignment MemberReference ArraySelector MemberReference count widths BinaryOperation + MethodInvocation Integer MemberReference width toString Literal "%" = BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference count widths BinaryOperation + MethodInvocation Integer MemberReference width toString Literal "%" = CatchClause CatchClauseParameter NumberFormatException nfe ReturnStatement MemberReference widths	1
MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object node IfStatement BinaryOperation instanceof MemberReference node ReferenceType ToDoList BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ToDoItem VariableDeclarator itemList MethodInvocation Designer MethodInvocation getToDoList MethodInvocation SynchronizedStatement MemberReference itemList ForStatement EnhancedForControl VariableDeclaration ReferenceType ToDoItem VariableDeclarator item MemberReference itemList BlockStatement IfStatement MethodInvocation item MethodInvocation MemberReference node contains getOffenders BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier protected ReferenceType List LocalVariableDeclaration ReferenceType Object VariableDeclarator t MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference t getFacade BlockStatement ReturnStatement ClassCreator ReferenceType ArrayList MethodInvocation Model MethodInvocation MemberReference t getParameters getFacade ReturnStatement ClassCreator ReferenceType ArrayList	0
MethodDeclaration Modifier public ReferenceType Command FormalParameter ReferenceType Object modelElement ReturnStatement ClassCreator ReferenceType MemberReference modelElement	0
MethodDeclaration Modifier public clearDialogs LocalVariableDeclaration ReferenceType Window VariableDeclarator windows MethodInvocation ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MemberReference windows length MemberReference ++ i BlockStatement IfStatement BinaryOperation instanceof MemberReference ArraySelector MemberReference i windows ReferenceType BlockStatement StatementExpression MemberReference ArraySelector MemberReference i MethodInvocation dispose windows StatementExpression MethodInvocation MethodInvocation reset getInstance	0
MethodDeclaration Modifier public parse FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType String text TryStatement StatementExpression MethodInvocation MemberReference modelElement MemberReference text CatchClause CatchClauseParameter ParseException pe LocalVariableDeclaration ReferenceType String VariableDeclarator msg Literal LocalVariableDeclaration ReferenceType Object VariableDeclarator args ArrayInitializer MethodInvocation pe getLocalizedMessage MethodInvocation Integer MethodInvocation pe getErrorOffset valueOf StatementExpression MethodInvocation ClassCreator ReferenceType MemberReference ArgoEventTypes This MethodInvocation Translator MemberReference msg MemberReference args	0
MethodDeclaration Modifier public FormalParameter ReferenceType ImportInterface module StatementExpression Assignment MemberReference currentModule MemberReference module =	0
MethodDeclaration Modifier public static ReferenceType String ReturnStatement MethodInvocation MethodInvocation getInstance	0
MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference status	0
MethodDeclaration Modifier public selectAll StatementExpression SuperMethodInvocation selectAll	1
MethodDeclaration Modifier public BasicType boolean isAStimulus FormalParameter ReferenceType Object handle ReturnStatement Literal false	1
MethodDeclaration Modifier private FormalParameter ReferenceType LocalVariableDeclaration ReferenceType Object VariableDeclarator listeners MethodInvocation listenerList getListenerList ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i BinaryOperation - MemberReference listeners length Literal 2 BinaryOperation >= MemberReference i Literal 0 Assignment MemberReference i Literal 2 -= BlockStatement TryStatement IfStatement BinaryOperation == MemberReference ArraySelector MemberReference i listeners ClassReference ReferenceType TargetListener BlockStatement StatementExpression Cast ReferenceType TargetListener MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners CatchClause CatchClauseParameter RuntimeException e StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "While calling for " MemberReference Literal " in " MemberReference ArraySelector BinaryOperation + MemberReference i Literal 1 listeners Literal " an error is MemberReference e error StatementExpression MethodInvocation e printStackTrace	1
MethodDeclaration Modifier private ReferenceType String generatePath FormalParameter ReferenceType Object cls LocalVariableDeclaration ReferenceType String VariableDeclarator packagePath MethodInvocation MemberReference cls Literal null MemberReference CodeGenerator FILE_SEPARATOR generateRelativePackage StatementExpression Assignment MemberReference packagePath MethodInvocation packagePath Literal 1 substring = ReturnStatement MemberReference packagePath	0
MethodDeclaration Modifier public BasicType boolean isAComponentInstance FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	0
MethodDeclaration Modifier public final statement RecognitionException TokenStreamException BlockStatement SwitchStatement MethodInvocation Literal 1 LA SwitchStatementCase LITERAL_case BlockStatement StatementExpression MethodInvocation case_statement BreakStatement SwitchStatementCase LITERAL_default BlockStatement StatementExpression MethodInvocation default_statement BreakStatement SwitchStatementCase LCURLY BlockStatement StatementExpression MethodInvocation compound_statement BreakStatement SwitchStatementCase LITERAL_if LITERAL_switch BlockStatement StatementExpression MethodInvocation selection_statement BreakStatement SwitchStatementCase LITERAL_while LITERAL_do LITERAL_for BlockStatement StatementExpression MethodInvocation iteration_statement BreakStatement SwitchStatementCase LITERAL_goto LITERAL_continue LITERAL_break LITERAL_return BlockStatement StatementExpression MethodInvocation jump_statement BreakStatement SwitchStatementCase SEMICOLON BlockStatement StatementExpression MethodInvocation MemberReference SEMICOLON match BreakStatement SwitchStatementCase LITERAL_try BlockStatement StatementExpression MethodInvocation try_block BreakStatement SwitchStatementCase LITERAL_throw BlockStatement StatementExpression MethodInvocation throw_statement BreakStatement SwitchStatementCase LITERAL__asm LITERAL___asm BlockStatement StatementExpression MethodInvocation asm_block BreakStatement SwitchStatementCase LocalVariableDeclaration BasicType boolean VariableDeclarator synPredMatched312 Literal false IfStatement BinaryOperation && MethodInvocation _tokenSet_1 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_2 MethodInvocation Literal 2 LA member BlockStatement LocalVariableDeclaration BasicType int VariableDeclarator _m312 MethodInvocation mark StatementExpression Assignment MemberReference synPredMatched312 Literal true = StatementExpression MemberReference ++ inputState guessing TryStatement BlockStatement StatementExpression MethodInvocation declaration CatchClause CatchClauseParameter RecognitionException pe StatementExpression Assignment MemberReference synPredMatched312 Literal false = StatementExpression MethodInvocation MemberReference _m312 rewind StatementExpression MemberReference -- inputState guessing IfStatement MemberReference synPredMatched312 BlockStatement StatementExpression MethodInvocation declaration IfStatement BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA MemberReference ID BinaryOperation == MethodInvocation Literal 2 LA MemberReference COLON BlockStatement StatementExpression MethodInvocation labeled_statement IfStatement BinaryOperation && MethodInvocation _tokenSet_42 MethodInvocation Literal 1 LA member MethodInvocation _tokenSet_60 MethodInvocation Literal 2 LA member BlockStatement StatementExpression MethodInvocation expression StatementExpression MethodInvocation MemberReference SEMICOLON match BlockStatement ThrowStatement ClassCreator ReferenceType NoViableAltException MethodInvocation Literal 1 LT MethodInvocation getFilename	1
MethodDeclaration Modifier public IfStatement BinaryOperation == MemberReference scope MemberReference Argo BlockStatement StatementExpression MethodInvocation Notation Cast ReferenceType MethodInvocation notationLanguage getSelectedItem StatementExpression MethodInvocation Configuration MemberReference Notation MethodInvocation useGuillemots isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation MethodInvocation showAssociationNames isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation MethodInvocation showVisibility isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation MethodInvocation isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation MethodInvocation showInitialValue isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation MethodInvocation isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation MethodInvocation isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation MethodInvocation showStereotypes isSelected setBoolean StatementExpression MethodInvocation Configuration MemberReference Notation MethodInvocation showSingularMultiplicities isSelected setBoolean IfStatement BinaryOperation == MemberReference scope MemberReference Argo BlockStatement AssertStatement BinaryOperation != MemberReference p Literal null LocalVariableDeclaration ReferenceType VariableDeclarator ps MethodInvocation p getProjectSettings LocalVariableDeclaration ReferenceType NotationSettings VariableDeclarator ns MethodInvocation ps getNotationSettings LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation notationLanguage getSelectedItem IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation ps MethodInvocation getConfigurationValue StatementExpression MethodInvocation ps MethodInvocation useGuillemots isSelected StatementExpression MethodInvocation ns MethodInvocation showAssociationNames isSelected StatementExpression MethodInvocation ns MethodInvocation showVisibility isSelected setShowVisibilities StatementExpression MethodInvocation ns MethodInvocation isSelected setShowMultiplicities StatementExpression MethodInvocation ns MethodInvocation showInitialValue isSelected setShowInitialValues StatementExpression MethodInvocation ns MethodInvocation isSelected StatementExpression MethodInvocation ns MethodInvocation isSelected StatementExpression MethodInvocation ps MethodInvocation showStereotypes isSelected StatementExpression MethodInvocation ns MethodInvocation showSingularMultiplicities isSelected	0
MethodDeclaration Modifier private ReferenceType List FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType ModelElement BlockStatement LocalVariableDeclaration ReferenceType List VariableDeclarator ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Object VariableDeclarator parent MethodInvocation modelImpl MethodInvocation MemberReference elem getModelElementContainer getFacade WhileStatement BinaryOperation != MemberReference parent Literal null BlockStatement StatementExpression MethodInvocation MemberReference parent add StatementExpression Assignment MemberReference parent MethodInvocation modelImpl MethodInvocation MemberReference parent getModelElementContainer getFacade = ReturnStatement MemberReference ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "Not a	0
MethodDeclaration Modifier public ReferenceType Object getGeneralization FormalParameter ReferenceType Object FormalParameter ReferenceType Object IfStatement BinaryOperation || BinaryOperation instanceof MemberReference ReferenceType GeneralizableElement BinaryOperation instanceof MemberReference ReferenceType GeneralizableElement BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator child Cast ReferenceType GeneralizableElement MemberReference LocalVariableDeclaration ReferenceType GeneralizableElement VariableDeclarator parent Cast ReferenceType GeneralizableElement MemberReference TryStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation modelImpl MethodInvocation MemberReference child getGeneralizations MethodInvocation iterator getFacade WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Generalization VariableDeclarator gen Cast ReferenceType Generalization MethodInvocation it next IfStatement BinaryOperation == MethodInvocation gen getParent MemberReference parent BlockStatement ReturnStatement MemberReference gen CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType VariableDeclarator MethodInvocation ce IfStatement BinaryOperation instanceof MemberReference ReferenceType BlockStatement StatementExpression Cast ReferenceType MemberReference StatementExpression MethodInvocation Configuration MemberReference Argo Cast ReferenceType String MethodInvocation Literal "ID" getValue setString	0
MethodDeclaration Modifier public FormalParameter ReferenceType e IfStatement BinaryOperation && BinaryOperation == MethodInvocation e MethodInvocation e BinaryOperation == MethodInvocation MethodInvocation MethodInvocation e getElementAt getModel MethodInvocation movedModelElement getElement BlockStatement StatementExpression MethodInvocation LOG Literal "Setting attribute to selected" info LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator element MethodInvocation movedModelElement getElement StatementExpression MethodInvocation movedModelElement Literal null setElement StatementExpression MethodInvocation MethodInvocation MemberReference element Literal true setSelectedValue LocalVariableDeclaration ReferenceType Runnable VariableDeclarator doWorkRunnable ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation MethodInvocation MemberReference element Literal true setSelectedValue StatementExpression MethodInvocation SwingUtilities MemberReference doWorkRunnable invokeLater	1
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public FormalParameter ReferenceType tm IfStatement MethodInvocation MemberReference tm contains BlockStatement ReturnStatement StatementExpression MethodInvocation MemberReference tm add	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType getColumns ReturnStatement MemberReference columns	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "Not a element"	0
MethodDeclaration Modifier public BasicType boolean FormalParameter Modifier final ReferenceType String IfStatement BinaryOperation && BinaryOperation != MemberReference notationLanguage Literal null MethodInvocation notationLanguage MemberReference equals BlockStatement ReturnStatement Literal true IfStatement BinaryOperation == MethodInvocation Notation MemberReference Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator MemberReference notationLanguage LocalVariableDeclaration ReferenceType Memento VariableDeclarator ClassCreator ReferenceType Memento MethodDeclaration Modifier public redo StatementExpression Assignment MemberReference notationLanguage MemberReference = MethodDeclaration Modifier public undo StatementExpression Assignment MemberReference notationLanguage MemberReference = StatementExpression MethodInvocation MemberReference ReturnStatement Literal true	1
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement MethodInvocation Model MethodInvocation MemberReference o isAAssociation getFacade	0
MethodDeclaration Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType UMLDeploymentDiagram dd LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation dd MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null LocalVariableDeclaration ReferenceType Iterator VariableDeclarator figIter MethodInvocation figs iterator LocalVariableDeclaration BasicType boolean VariableDeclarator isNode Literal false WhileStatement MethodInvocation figIter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation figIter next IfStatement BinaryOperation instanceof MemberReference obj ReferenceType BlockStatement StatementExpression Assignment MemberReference isNode Literal true = StatementExpression Assignment MemberReference figIter MethodInvocation figs iterator = WhileStatement MethodInvocation figIter hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator obj MethodInvocation figIter next IfStatement BinaryOperation instanceof MemberReference obj ReferenceType FigComponent BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType FigComponent VariableDeclarator fc Cast ReferenceType FigComponent MemberReference obj IfStatement BinaryOperation && BinaryOperation == MethodInvocation fc getEnclosingFig Literal null MemberReference isNode BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference dd add StatementExpression MethodInvocation offs MemberReference fc add IfStatement BinaryOperation && BinaryOperation != MethodInvocation fc getEnclosingFig Literal null BinaryOperation || BinaryOperation == MethodInvocation Model MethodInvocation MethodInvocation fc getOwner getFacade Literal null BinaryOperation == MethodInvocation Model getFacade Literal 0 BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference dd add StatementExpression MethodInvocation offs MemberReference fc add ReturnStatement MemberReference offs	1
MethodDeclaration Modifier protected IfStatement BinaryOperation && BinaryOperation && BinaryOperation && MemberReference BinaryOperation != MemberReference Literal null BinaryOperation != MethodInvocation getOwner Literal null MethodInvocation Model MethodInvocation MethodInvocation getOwner getFacade BlockStatement StatementExpression MethodInvocation MethodInvocation MethodInvocation getOwner MethodInvocation getNotationSettings toString setText StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public static ReferenceType ImportClassLoader getInstance MalformedURLException IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator path MethodInvocation Configuration MemberReference Argo MethodInvocation System Literal "user.dir" getProperty getString ReturnStatement MethodInvocation MethodInvocation MemberReference path getURLs getInstance BlockStatement ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType String ReturnStatement MethodInvocation Collections MemberReference options	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression MethodInvocation MethodInvocation isSelected setVisible IfStatement MethodInvocation isSelected BlockStatement StatementExpression MethodInvocation BlockStatement StatementExpression MethodInvocation model Literal null setValue	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType BehavioralFeature	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object ausecase IfStatement BinaryOperation instanceof MemberReference ausecase ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType VariableDeclarator result ClassCreator ReferenceType HashSet TypeArgument ReferenceType ForStatement EnhancedForControl VariableDeclaration ReferenceType Extend VariableDeclarator extend Cast ReferenceType MemberReference ausecase BlockStatement StatementExpression MethodInvocation result MethodInvocation extend getExtension add ReturnStatement MemberReference result	1
MethodDeclaration Modifier static BasicType int ReturnStatement MemberReference useSections	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object element ReturnStatement BinaryOperation || BinaryOperation || MethodInvocation Model MethodInvocation MemberReference element isAClass getFacade MethodInvocation Model MethodInvocation MemberReference element isAInterface getFacade MethodInvocation Model MethodInvocation MemberReference element isADataType getFacade	0
MethodDeclaration Modifier public addTaggedValue FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Element BlockStatement ReturnStatement IfStatement BinaryOperation instanceof MemberReference ReferenceType Property BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Element VariableDeclarator elem Cast ReferenceType Element MemberReference handle LocalVariableDeclaration ReferenceType Property VariableDeclarator prop Cast ReferenceType Property MemberReference LocalVariableDeclaration ReferenceType Stereotype VariableDeclarator stereotype Cast ReferenceType Stereotype MethodInvocation prop LocalVariableDeclaration ReferenceType Object VariableDeclarator value Literal null IfStatement MethodInvocation prop isMultivalued BlockStatement StatementExpression Assignment MemberReference value MethodInvocation MemberReference elem MethodInvocation stereotype getQualifiedName MethodInvocation prop getName getTaggedValue = LocalVariableDeclaration ReferenceType Collection VariableDeclarator newValue ClassCreator ReferenceType ArrayList IfStatement BinaryOperation instanceof MemberReference value ReferenceType Collection BlockStatement StatementExpression MethodInvocation newValue Cast ReferenceType Collection MemberReference value addAll IfStatement BinaryOperation != MemberReference value Literal null BlockStatement StatementExpression MethodInvocation newValue MemberReference value add StatementExpression MethodInvocation newValue MethodInvocation Cast ReferenceType Property MemberReference add StatementExpression Assignment MemberReference value MemberReference newValue = BlockStatement StatementExpression Assignment MemberReference value MethodInvocation Cast ReferenceType Property MemberReference = StatementExpression MethodInvocation MemberReference elem MemberReference prop MemberReference value setTaggedValue	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Object parent LocalVariableDeclaration ReferenceType Iterator VariableDeclarator incomingIt MethodInvocation Model MethodInvocation MemberReference parent getSupplierDependencies MethodInvocation iterator getFacade WhileStatement MethodInvocation incomingIt hasNext BlockStatement IfStatement MethodInvocation ! Model MethodInvocation MethodInvocation incomingIt next isAAbstraction getFacade BlockStatement ReturnStatement Literal true ReturnStatement Literal false	0
MethodDeclaration Modifier public ReferenceType Binding createBinding LocalVariableDeclaration ReferenceType Binding VariableDeclarator MethodInvocation MethodInvocation getBinding MethodInvocation createBinding getCorePackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier private ReferenceType Collection getModel IfStatement BinaryOperation == MemberReference model Literal null BlockStatement IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression Assignment MemberReference profileModelLoader ClassCreator ReferenceType = TryStatement StatementExpression Assignment MemberReference model MethodInvocation profileModelLoader MemberReference loadModel = CatchClause CatchClauseParameter ProfileException e StatementExpression MethodInvocation LOG Literal "Error loading MemberReference e error BlockStatement StatementExpression Assignment MemberReference model MethodInvocation Model MethodInvocation Literal getUmlFactory = IfStatement BinaryOperation == MemberReference model Literal null BlockStatement StatementExpression Assignment MemberReference model ClassCreator ReferenceType ArrayList = StatementExpression MethodInvocation model MethodInvocation Model MethodInvocation add ReturnStatement MemberReference model	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType	1
MethodDeclaration Modifier public paint FormalParameter ReferenceType Graphics g IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression Cast ReferenceType Fig MemberReference	0
MethodDeclaration FormalParameter ReferenceType Object elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + Literal "elem: " MemberReference elem LocalVariableDeclaration ReferenceType VariableDeclarator instance Cast ReferenceType MemberReference elem StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation instance deleteCollection getUmlHelper StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage MethodInvocation instance refOutermostPackage deleteCollection getUmlHelper ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it Cast ReferenceType org ReferenceType omg ReferenceType uml ReferenceType UmlPackage MethodInvocation instance refOutermostPackage MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator Cast ReferenceType MethodInvocation it next LocalVariableDeclaration ReferenceType Collection VariableDeclarator instances MethodInvocation IfStatement BinaryOperation && BinaryOperation == MethodInvocation instances size Literal 1 MethodInvocation instances MemberReference elem contains BlockStatement StatementExpression MethodInvocation modelImpl MethodInvocation MethodInvocation it next delete getUmlFactory StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType UmlPackage Cast ReferenceType MemberReference elem deleteCollection getUmlHelper StatementExpression MethodInvocation modelImpl MethodInvocation Cast ReferenceType UmlPackage Cast ReferenceType MemberReference elem deleteCollection getUmlHelper	1
MethodDeclaration Modifier private ReferenceType Object getOperation FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType Object VariableDeclarator mOperation MethodInvocation parseState MemberReference name getOperation IfStatement BinaryOperation != MemberReference mOperation Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Getting the existing operation " MemberReference name info BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Creating a new operation " MemberReference name info LocalVariableDeclaration ReferenceType Object VariableDeclarator cls MethodInvocation parseState getClassifier LocalVariableDeclaration ReferenceType Object VariableDeclarator returnType MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getDefaultReturnType getManager StatementExpression Assignment MemberReference mOperation MethodInvocation Model MethodInvocation MemberReference cls MemberReference returnType MemberReference name buildOperation2 getCoreFactory = StatementExpression MethodInvocation newElements MemberReference mOperation add ReturnStatement MemberReference mOperation	1
MethodDeclaration Modifier private ReferenceType String FormalParameter ReferenceType Object LocalVariableDeclaration ReferenceType String VariableDeclarator ret Literal "" LocalVariableDeclaration ReferenceType Object VariableDeclarator action MethodInvocation Model MethodInvocation MemberReference getEntry getFacade IfStatement BinaryOperation != MemberReference action Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator expression MethodInvocation Model MethodInvocation MemberReference action getScript getFacade IfStatement BinaryOperation != MemberReference expression Literal null BlockStatement StatementExpression Assignment MemberReference ret MethodInvocation MemberReference expression generateExpression = ReturnStatement MemberReference ret	1
MethodDeclaration Modifier final protected ReferenceType Object getMetaType ReturnStatement MethodInvocation Model MethodInvocation getMetaTypes	1
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType	0
MethodDeclaration Modifier public ReferenceType XmiReader UmlException LocalVariableDeclaration ReferenceType XmiReader VariableDeclarator reader ClassCreator ReferenceType XmiReaderImpl This ReturnStatement MemberReference reader	1
MethodDeclaration Modifier public baseSpecifier FormalParameter ReferenceType String identifier FormalParameter BasicType boolean isVirtual IfStatement MethodInvocation ! ignore BlockStatement StatementExpression MethodInvocation MemberReference identifier MemberReference isVirtual baseSpecifier	0
MethodDeclaration Modifier public ReferenceType SuffixFilter FormalParameter ReferenceType String name IfStatement MethodInvocation name MethodInvocation BinaryOperation + Literal "." MethodInvocation endsWith toLowerCase BlockStatement ReturnStatement MemberReference LocalVariableDeclaration ReferenceType Iterator VariableDeclarator iter MethodInvocation otherFilters iterator WhileStatement MethodInvocation iter hasNext BlockStatement LocalVariableDeclaration ReferenceType SuffixFilter VariableDeclarator filter Cast ReferenceType SuffixFilter MethodInvocation iter next IfStatement MethodInvocation name MethodInvocation BinaryOperation + Literal "." MethodInvocation filter endsWith toLowerCase BlockStatement ReturnStatement MemberReference filter ReturnStatement Literal null	1
MethodDeclaration Modifier private final static BasicType long mk_tokenSet_79 LocalVariableDeclaration BasicType long VariableDeclarator data ArrayInitializer Literal Literal Literal 0L Literal 0L ReturnStatement MemberReference data	1
MethodDeclaration Modifier public synchronized addAll FormalParameter ReferenceType list ForStatement EnhancedForControl VariableDeclaration ReferenceType VariableDeclarator item MemberReference list BlockStatement StatementExpression MethodInvocation MemberReference item add	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object child IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Generalization BlockStatement StatementExpression Cast ReferenceType Generalization MemberReference handle ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference handle Literal " or " MemberReference child	0
MethodDeclaration Modifier public static ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object object IfStatement BinaryOperation instanceof MemberReference object ReferenceType UMLActivityDiagram BlockStatement ReturnStatement ClassCreator ReferenceType ReturnStatement Literal null	0
MethodDeclaration Modifier public Annotation Deprecated ReferenceType MultiplicityRange createMultiplicityRange FormalParameter Modifier final BasicType int lower FormalParameter Modifier final BasicType int upper LocalVariableDeclaration ReferenceType MultiplicityRange VariableDeclarator MethodInvocation modelImpl MethodInvocation MethodInvocation MethodInvocation MemberReference lower MemberReference upper createMultiplicityRange getUmlPackage ReturnStatement MemberReference	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier private StatementExpression MethodInvocation ClassCreator ReferenceType FigPoly MemberReference LINE_COLOR MemberReference LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 125 Literal 125 Literal 130 Literal 130 Literal 130 Literal 135 Literal 135 LocalVariableDeclaration BasicType int VariableDeclarator ArrayInitializer Literal 45 Literal 40 Literal 40 Literal 35 Literal 40 Literal 40 Literal 45 LocalVariableDeclaration ReferenceType Polygon VariableDeclarator polygon ClassCreator ReferenceType Polygon MemberReference MemberReference Literal 7 StatementExpression MethodInvocation MethodInvocation MemberReference polygon getFigPoly StatementExpression MethodInvocation MethodInvocation Literal false setFilled getFigPoly StatementExpression MethodInvocation MethodInvocation getFigPoly addFig LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator r MethodInvocation getBounds StatementExpression MethodInvocation MemberReference r x MemberReference r y MemberReference r width MemberReference r height setBounds StatementExpression MethodInvocation	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException	0
MethodDeclaration Modifier public final mSHIFTRIGHT FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference SHIFTRIGHT = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal ">>" match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier private ReferenceType FormalParameter BasicType boolean FormalParameter BasicType boolean FormalParameter BasicType boolean fill LocalVariableDeclaration ReferenceType VariableDeclarator gbc ClassCreator ReferenceType StatementExpression Assignment MemberReference gbc gridx MemberReference RELATIVE = StatementExpression Assignment MemberReference gbc gridy MemberReference RELATIVE = StatementExpression Assignment MemberReference gbc gridwidth MemberReference REMAINDER = StatementExpression Assignment MemberReference gbc Literal 1 = StatementExpression Assignment MemberReference gbc weightx Literal 1.0 = StatementExpression Assignment MemberReference gbc weighty Literal 0.0 = StatementExpression Assignment MemberReference gbc anchor MemberReference NORTHWEST = StatementExpression Assignment MemberReference gbc fill TernaryExpression MemberReference fill MemberReference HORIZONTAL MemberReference NONE = StatementExpression Assignment MemberReference gbc insets ClassCreator ReferenceType Insets TernaryExpression MemberReference Literal 5 Literal 0 Literal 5 TernaryExpression MemberReference Literal 5 Literal 0 Literal 5 = StatementExpression Assignment MemberReference gbc Literal 0 = StatementExpression Assignment MemberReference gbc Literal 0 = ReturnStatement MemberReference gbc	0
MethodDeclaration Modifier public ReferenceType Vertex getSource FormalParameter ReferenceType Object handle IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Transition BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Cast ReferenceType Transition MemberReference handle	0
MethodDeclaration Modifier public BasicType boolean isAClassifier FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier	0
MethodDeclaration Modifier public BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr ReturnStatement SuperMethodInvocation MemberReference dm MemberReference dsgr predicate	0
MethodDeclaration Modifier public Annotation Override LocalVariableDeclaration ReferenceType Object VariableDeclarator MethodInvocation getOwner IfStatement BinaryOperation != MemberReference Literal null BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference moveToTrash getProject LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator getPathItemFigs WhileStatement MethodInvocation it hasNext BlockStatement StatementExpression Cast ReferenceType Fig MethodInvocation it next StatementExpression SuperMethodInvocation	1
MethodDeclaration Modifier private build LocalVariableDeclaration Modifier final ReferenceType String VariableDeclarator value Cast ReferenceType String MethodInvocation MethodInvocation MemberReference umlElement MemberReference propertyName Literal null get LocalVariableDeclaration Modifier final ReferenceType Enumeration TypeArgument ReferenceType AbstractButton VariableDeclarator en MethodInvocation getElements IfStatement BinaryOperation == MemberReference value Literal null BlockStatement StatementExpression MethodInvocation en MethodInvocation Literal true setSelected nextElement ReturnStatement WhileStatement MethodInvocation en hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType AbstractButton VariableDeclarator b MethodInvocation en nextElement IfStatement MethodInvocation value MethodInvocation b getActionCommand equals BlockStatement StatementExpression MethodInvocation b Literal true setSelected BreakStatement	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object state FormalParameter ReferenceType Object deferrableEvent IfStatement BinaryOperation && BinaryOperation instanceof MemberReference state ReferenceType State BinaryOperation instanceof MemberReference deferrableEvent ReferenceType Event BlockStatement StatementExpression Cast ReferenceType State MemberReference state ReturnStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + BinaryOperation + Literal " MemberReference state Literal " or " MemberReference deferrableEvent	0
MethodDeclaration Modifier public Annotation Override setChangeability FormalParameter Modifier final ReferenceType Object handle FormalParameter ReferenceType Object ck StatementExpression MethodInvocation ClassCreator ReferenceType ObjectSetter MethodDeclaration Modifier public set FormalParameter ReferenceType Object value StatementExpression MethodInvocation MethodInvocation MemberReference handle MemberReference value setChangeability getComponent MemberReference ck MethodInvocation Model MethodInvocation MemberReference handle getChangeability getFacade createCommand	1
MethodDeclaration Modifier public addTargetListener FormalParameter ReferenceType TargetListener listener StatementExpression MethodInvocation listenerList ClassReference ReferenceType TargetListener MemberReference listener add	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public final mComment FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal "/*" match BlockStatement DoStatement Literal true BlockStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MethodInvocation Literal 1 LA Literal '*' BinaryOperation && BinaryOperation >= MethodInvocation Literal 2 LA Literal '	1
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType ReturnStatement MethodInvocation Collections emptyList	0
MethodDeclaration Modifier public IfStatement BinaryOperation == MemberReference obsoleteInnerClasses Literal null BlockStatement ReturnStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator element MemberReference obsoleteInnerClasses BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference element isAClassifier getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element delete getUmlFactory	0
MethodDeclaration Modifier public final mASSIGNEQUAL FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference ASSIGNEQUAL = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex StatementExpression MethodInvocation Literal '=' match IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier private IOException StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation Literal 0 position LocalVariableDeclaration ReferenceType Matcher VariableDeclarator matcher MethodInvocation MemberReference matcher LocalVariableDeclaration ReferenceType String VariableDeclarator headerRemainder MethodInvocation matcher Literal "" replaceAll LocalVariableDeclaration BasicType int VariableDeclarator index BinaryOperation - MethodInvocation headerRemainder length Literal 1 IfStatement BinaryOperation == MethodInvocation headerRemainder MemberReference index charAt Literal '\0' BlockStatement DoStatement BinaryOperation && BinaryOperation >= MemberReference index Literal 0 BinaryOperation == MethodInvocation headerRemainder MemberReference index charAt Literal '\0' BlockStatement StatementExpression MemberReference -- index StatementExpression Assignment MemberReference headerRemainder MethodInvocation headerRemainder Literal 0 BinaryOperation + MemberReference index Literal 1 substring = LocalVariableDeclaration ReferenceType ByteBuffer VariableDeclarator MethodInvocation decoder MethodInvocation MemberReference headerRemainder encode charset LocalVariableDeclaration BasicType byte VariableDeclarator outBytes ArrayCreator BasicType byte MethodInvocation limit StatementExpression MethodInvocation MemberReference outBytes get StatementExpression MethodInvocation out MemberReference outBytes Literal 0 MemberReference outBytes length write IfStatement BinaryOperation > MethodInvocation remaining Literal 0 BlockStatement StatementExpression MethodInvocation out MethodInvocation array MethodInvocation position MethodInvocation remaining write StatementExpression MethodInvocation Literal 0 position StatementExpression MethodInvocation Literal 0 limit	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object obj ReturnStatement BinaryOperation instanceof MemberReference obj ReferenceType OperationsNode	0
MethodDeclaration Modifier static init LocalVariableDeclaration ReferenceType String VariableDeclarator id MethodInvocation Configuration MemberReference Argo MemberReference DEFAULT_ID getString LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Action VariableDeclarator actions MethodInvocation ForStatement EnhancedForControl VariableDeclaration ReferenceType Action VariableDeclarator a MemberReference actions BlockStatement IfStatement MethodInvocation a MethodInvocation MemberReference id equals Literal "ID" getValue BlockStatement StatementExpression MethodInvocation a Literal null actionPerformed IfStatement BinaryOperation != MemberReference myGroup Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Enumeration VariableDeclarator e MethodInvocation myGroup getElements MethodInvocation e hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType AbstractButton VariableDeclarator ab Cast ReferenceType AbstractButton MethodInvocation e nextElement LocalVariableDeclaration ReferenceType Action VariableDeclarator action MethodInvocation ab getAction IfStatement BinaryOperation instanceof MemberReference action ReferenceType ActionAdjustSnap BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator currentID Cast ReferenceType String MethodInvocation action Literal "ID" getValue IfStatement MethodInvocation id MemberReference currentID equals BlockStatement StatementExpression MethodInvocation myGroup MethodInvocation ab getModel Literal true setSelected ReturnStatement ReturnStatement	1
MethodDeclaration Modifier private ReferenceType List TypeArgument ReferenceType ProjectMember LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType ProjectMember VariableDeclarator temp ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ProjectMember MethodInvocation size IfStatement BinaryOperation != MemberReference profileConfiguration Literal null BlockStatement StatementExpression MethodInvocation temp MemberReference profileConfiguration add IfStatement BinaryOperation != MemberReference model Literal null BlockStatement StatementExpression MethodInvocation temp MemberReference model add StatementExpression MethodInvocation temp MemberReference diagramMembers addAll IfStatement BinaryOperation != MemberReference todoList Literal null BlockStatement StatementExpression MethodInvocation temp MemberReference todoList add ReturnStatement MemberReference temp	1
MethodDeclaration Modifier public removeNotificationListener FormalParameter ReferenceType listener FormalParameter ReferenceType NotificationFilter filter FormalParameter ReferenceType Object handback ListenerNotFoundException StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference handback removeNotificationListener	0
MethodDeclaration Modifier public static ReferenceType create FormalParameter ReferenceType String pattern StatementExpression Assignment MemberReference pattern MethodInvocation pattern trim = IfStatement BinaryOperation || Literal MethodInvocation MemberReference pattern equals "*" Literal MethodInvocation MemberReference pattern equals "" BlockStatement ReturnStatement MethodInvocation getInstance LocalVariableDeclaration ReferenceType String VariableDeclarator ArrayCreator ReferenceType String MemberReference LocalVariableDeclaration BasicType int VariableDeclarator count Literal 0 IfStatement MethodInvocation pattern Literal "*" startsWith BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ count Literal "" = LocalVariableDeclaration ReferenceType StringTokenizer VariableDeclarator st ClassCreator ReferenceType StringTokenizer MemberReference pattern Literal "*" WhileStatement MethodInvocation st hasMoreElements BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator token MethodInvocation st nextToken StatementExpression Assignment MemberReference ArraySelector MemberReference ++ count MemberReference token = IfStatement MethodInvocation pattern Literal "*" endsWith BlockStatement StatementExpression Assignment MemberReference ArraySelector MemberReference ++ count Literal "" = IfStatement BinaryOperation == MemberReference count Literal 0 BlockStatement ReturnStatement MethodInvocation getInstance IfStatement BinaryOperation == MemberReference count Literal 1 BlockStatement ReturnStatement ClassCreator ReferenceType MemberReference ArraySelector Literal 0 ReturnStatement ClassCreator ReferenceType PredicateStringMatch MemberReference MemberReference count	0
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Element getSubtypes FormalParameter ReferenceType Object cls IfStatement BinaryOperation instanceof MemberReference cls ReferenceType Classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of Classifier" LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType Element VariableDeclarator results ClassCreator ReferenceType HashSet TypeArgument ReferenceType Element ForStatement EnhancedForControl VariableDeclaration ReferenceType DirectedRelationship VariableDeclarator d Cast ReferenceType Classifier MemberReference cls BlockStatement StatementExpression MethodInvocation results MethodInvocation d getSources addAll ReturnStatement MemberReference results	1
MethodDeclaration Modifier public Annotation Override BasicType int compare FormalParameter ReferenceType Object obj1 FormalParameter ReferenceType Object obj2 IfStatement BinaryOperation instanceof MemberReference obj1 ReferenceType DefaultMutableTreeNode BlockStatement LocalVariableDeclaration ReferenceType DefaultMutableTreeNode VariableDeclarator node Cast ReferenceType DefaultMutableTreeNode MemberReference obj1 StatementExpression Assignment MemberReference obj1 MethodInvocation node getUserObject = IfStatement BinaryOperation instanceof MemberReference obj2 ReferenceType DefaultMutableTreeNode BlockStatement LocalVariableDeclaration ReferenceType DefaultMutableTreeNode VariableDeclarator node Cast ReferenceType DefaultMutableTreeNode MemberReference obj2 StatementExpression Assignment MemberReference obj2 MethodInvocation node getUserObject = IfStatement BinaryOperation == MemberReference obj1 Literal null BlockStatement IfStatement BinaryOperation == MemberReference obj2 Literal null BlockStatement ReturnStatement Literal 0 ReturnStatement Literal - 1 IfStatement BinaryOperation == MemberReference obj2 Literal null BlockStatement ReturnStatement Literal 1 LocalVariableDeclaration ReferenceType String VariableDeclarator typeName MethodInvocation obj1 MethodInvocation getName getClass LocalVariableDeclaration ReferenceType String VariableDeclarator typeName1 MethodInvocation obj2 MethodInvocation getName getClass LocalVariableDeclaration BasicType int VariableDeclarator typeNameOrder MethodInvocation typeName MemberReference typeName1 compareTo IfStatement BinaryOperation == MemberReference typeNameOrder Literal 0 BlockStatement ReturnStatement MethodInvocation MemberReference obj1 MemberReference obj2 IfStatement BinaryOperation && BinaryOperation == MethodInvocation typeName Literal "Diagram" indexOf Literal - 1 BinaryOperation != MethodInvocation typeName1 Literal "Diagram" indexOf Literal - 1 BlockStatement ReturnStatement Literal 1 IfStatement BinaryOperation && BinaryOperation != MethodInvocation typeName Literal "Diagram" indexOf Literal - 1 BinaryOperation == MethodInvocation typeName1 Literal "Diagram" indexOf Literal - 1 BlockStatement ReturnStatement Literal - 1 IfStatement BinaryOperation && BinaryOperation == MethodInvocation typeName Literal "Package" indexOf Literal - 1 BinaryOperation != MethodInvocation typeName1 Literal "Package" indexOf Literal - 1 BlockStatement ReturnStatement Literal 1 IfStatement BinaryOperation && BinaryOperation != MethodInvocation typeName Literal "Package" indexOf Literal - 1 BinaryOperation == MethodInvocation typeName1 Literal "Package" indexOf Literal - 1 BlockStatement ReturnStatement Literal - 1 ReturnStatement MemberReference typeNameOrder	1
MethodDeclaration Modifier public Annotation Override ReferenceType ToDoItem toDoItem FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr LocalVariableDeclaration ReferenceType UMLDeploymentDiagram VariableDeclarator dd Cast ReferenceType UMLDeploymentDiagram MemberReference dm LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation MemberReference dd computeOffenders ReturnStatement ClassCreator ReferenceType UMLToDoItem This MemberReference offs MemberReference dsgr	0
MethodDeclaration Modifier public Annotation SuppressWarnings Literal "deprecation" ReferenceType Object getTargetScope FormalParameter ReferenceType Object handle ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement MethodInvocation MemberReference	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Property getAttributes FormalParameter ReferenceType Object handle TryStatement LocalVariableDeclaration ReferenceType Classifier VariableDeclarator classifier Cast ReferenceType Classifier MemberReference handle LocalVariableDeclaration ReferenceType EList TypeArgument ReferenceType Property VariableDeclarator attributes MethodInvocation classifier getAttributes LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Property VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Property ForStatement EnhancedForControl VariableDeclaration ReferenceType Property VariableDeclarator p MemberReference attributes BlockStatement IfStatement BinaryOperation == MethodInvocation p getAssociation Literal null BlockStatement StatementExpression MethodInvocation result MemberReference p add ReturnStatement MemberReference result CatchClause CatchClauseParameter ClassCastException e ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal must be instance of Classifier"	1
MethodDeclaration Modifier public FormalParameter ReferenceType ForStatement ForControl VariableDeclaration BasicType int VariableDeclarator i Literal 0 BinaryOperation < MemberReference i MethodInvocation getRowCount MemberReference ++ i BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference i getModelElement ClassCreator ReferenceType File MethodInvocation MemberReference i	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation impl MemberReference modelElement	0
MethodDeclaration Modifier public final RecognitionException TokenStreamException StatementExpression MethodInvocation MemberReference ID match StatementExpression MethodInvocation MemberReference LESSTHAN match StatementExpression MethodInvocation template_argument_list StatementExpression MethodInvocation MemberReference GREATERTHAN match	1
MethodDeclaration Modifier public ReferenceType Cursor ReturnStatement MethodInvocation Cursor MemberReference Cursor getPredefinedCursor	0
MethodDeclaration Modifier public ReferenceType ListSet computeOffenders FormalParameter ReferenceType UMLDeploymentDiagram dd LocalVariableDeclaration ReferenceType Collection VariableDeclarator figs MethodInvocation dd MethodInvocation getContents getLayer LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs Literal null ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator obj MemberReference figs BlockStatement IfStatement BinaryOperation instanceof MemberReference obj ReferenceType BlockStatement ContinueStatement LocalVariableDeclaration ReferenceType VariableDeclarator fn Cast ReferenceType MemberReference obj IfStatement BinaryOperation != MethodInvocation fn getEnclosingFig Literal null BlockStatement IfStatement BinaryOperation == MemberReference offs Literal null BlockStatement StatementExpression Assignment MemberReference offs ClassCreator ReferenceType ListSet = StatementExpression MethodInvocation offs MemberReference dd add StatementExpression MethodInvocation offs MemberReference fn add ReturnStatement MemberReference offs	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object statemachine FormalParameter ReferenceType Object modelElement StatementExpression MethodInvocation impl MemberReference statemachine MemberReference modelElement	0
MethodDeclaration Modifier public ReferenceType TemplateParameter createTemplateParameter ReturnStatement MethodInvocation createTemplateParameter	0
MethodDeclaration Modifier public ReferenceType LocalVariableDeclaration ReferenceType VariableDeclarator obj MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference obj ReturnStatement MemberReference obj	0
MethodDeclaration Modifier public ReferenceType Set getDependencies FormalParameter ReferenceType Object parent IfStatement MethodInvocation Model MethodInvocation MemberReference parent isAStateVertex getFacade BlockStatement LocalVariableDeclaration ReferenceType Set VariableDeclarator set ClassCreator ReferenceType HashSet StatementExpression MethodInvocation set MemberReference parent add ReturnStatement MemberReference set ReturnStatement MemberReference Collections EMPTY_SET	1
MethodDeclaration Modifier public final setString FormalParameter ReferenceType ConfigurationKey key FormalParameter ReferenceType String newValue StatementExpression MethodInvocation MemberReference key MemberReference newValue	0
MethodDeclaration Modifier public Annotation Override BasicType boolean stillValid FormalParameter ReferenceType ToDoItem i FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! isActive BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator offs MethodInvocation i getOffenders LocalVariableDeclaration ReferenceType Object VariableDeclarator f MethodInvocation offs Literal 0 get IfStatement MethodInvocation ! MemberReference f MemberReference dsgr predicate BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType ListSet VariableDeclarator newOffs MethodInvocation MemberReference f computeOffenders LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation offs MemberReference newOffs equals ReturnStatement MemberReference res	1
MethodDeclaration Modifier public ReferenceType Collection TypeArgument ReferenceType Classifier FormalParameter ReferenceType Object namespace IfStatement BinaryOperation == MemberReference namespace Literal null BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Classifier VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Classifier TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o Cast ReferenceType Namespace MemberReference namespace BlockStatement IfStatement BinaryOperation instanceof MemberReference o ReferenceType Namespace BlockStatement StatementExpression MethodInvocation result MethodInvocation MemberReference o addAll IfStatement BinaryOperation instanceof MemberReference o ReferenceType Classifier BlockStatement StatementExpression MethodInvocation result Cast ReferenceType Classifier MemberReference o add CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference result	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object sm IfStatement MethodInvocation ! Model MethodInvocation MemberReference sm isAStateMachine getFacade BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "This is not a StatementExpression Cast ReferenceType MethodInvocation getGraphModel	0
MethodDeclaration Modifier public static ReferenceType String FormalParameter ReferenceType String name LocalVariableDeclaration ReferenceType String VariableDeclarator found MethodInvocation images MemberReference name get IfStatement BinaryOperation == MemberReference found Literal null BlockStatement ReturnStatement MemberReference name ReturnStatement MemberReference found	0
MethodDeclaration Modifier public ToSource FormalParameter ReferenceType StringBuilder sb StatementExpression MethodInvocation sb Literal "unchecked(" append StatementExpression MethodInvocation Expression MemberReference sb ToSource StatementExpression MethodInvocation sb Literal ")" append	1
MethodDeclaration Modifier private ReferenceType String toString FormalParameter ReferenceType Object modelElement LocalVariableDeclaration ReferenceType String VariableDeclarator nameStr Literal "" IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference modelElement getName getFacade Literal null BlockStatement StatementExpression Assignment MemberReference nameStr MethodInvocation Model MethodInvocation MemberReference modelElement getName MethodInvocation trim getFacade = LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator baseString MethodInvocation NotationUtilityUml MethodInvocation Model MethodInvocation MemberReference modelElement getClassifiers getFacade IfStatement BinaryOperation && BinaryOperation == MethodInvocation nameStr length Literal 0 BinaryOperation == MethodInvocation baseString length Literal 0 BlockStatement ReturnStatement Literal "" LocalVariableDeclaration ReferenceType String VariableDeclarator base MethodInvocation baseString MethodInvocation trim toString IfStatement BinaryOperation < MethodInvocation base length Literal 1 BlockStatement ReturnStatement MethodInvocation nameStr trim ReturnStatement BinaryOperation + BinaryOperation + MethodInvocation nameStr trim Literal " : " MemberReference base	1
MethodDeclaration Modifier public ReferenceType ReturnAction LocalVariableDeclaration ReferenceType ReturnAction VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCbPackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Flow LocalVariableDeclaration ReferenceType Flow VariableDeclarator MethodInvocation MethodInvocation MethodInvocation getCorePackage StatementExpression SuperMethodInvocation MemberReference ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object ReturnStatement ClassReference ReferenceType GeneralizableElement	0
MethodDeclaration Modifier public BasicType boolean isValidNamespace FormalParameter ReferenceType Object handle ReturnStatement MethodInvocation Model MethodInvocation MemberReference handle isANamespace getFacade	0
MethodDeclaration Modifier public ReferenceType Object StatementExpression MethodInvocation LOG Literal "new boolean expression" debug ReturnStatement MethodInvocation Model MethodInvocation Literal "" Literal "" createBooleanExpression getDataTypesFactory	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation instanceof MemberReference object ReferenceType UMLClassDiagram	0
MethodDeclaration Modifier public ReferenceType GraphModel ReturnStatement Literal null	0
MethodDeclaration Modifier public BasicType boolean canFinish IfStatement SuperMethodInvocation ! canFinish BlockStatement ReturnStatement Literal false IfStatement BinaryOperation == MethodInvocation getStep Literal 0 BlockStatement ReturnStatement Literal true IfStatement BinaryOperation && BinaryOperation == MethodInvocation getStep Literal 1 BinaryOperation != MemberReference step1 Literal null BlockStatement TryStatement StatementExpression MethodInvocation Integer MethodInvocation step1 getText parseInt ReturnStatement Literal true CatchClause CatchClauseParameter NumberFormatException ex ReturnStatement Literal false	1
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType = ReturnStatement MemberReference	0
MethodDeclaration Modifier protected remove StatementExpression Assignment MemberReference uniqueName Literal null = StatementExpression Assignment MemberReference project Literal null =	0
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "This is not a UML1.4 class"	0
MethodDeclaration Modifier private showStatusOnSwingThread FormalParameter Modifier final ReferenceType String status StatementExpression MethodInvocation SwingUtilities ClassCreator ReferenceType Runnable MethodDeclaration Modifier public run StatementExpression MethodInvocation MemberReference status invokeLater	0
MethodDeclaration Modifier public ReferenceType Object connect FormalParameter ReferenceType Object fromPort FormalParameter ReferenceType Object toPort FormalParameter ReferenceType Object edgeClass IfStatement MethodInvocation Model MethodInvocation MemberReference fromPort isAFinalState getFacade BlockStatement ReturnStatement Literal null IfStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference toPort isAPseudostate getFacade MethodInvocation Model MethodInvocation MethodInvocation MethodInvocation Model MethodInvocation MemberReference toPort getKind getFacade equals getPseudostateKind BlockStatement ReturnStatement Literal null IfStatement MethodInvocation Model MethodInvocation getTransition MethodInvocation MemberReference edgeClass equals getMetaTypes BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator tr Literal null StatementExpression Assignment MemberReference tr MethodInvocation Model MethodInvocation MemberReference fromPort MemberReference toPort getStateMachinesFactory = IfStatement MethodInvocation MemberReference tr canAddEdge BlockStatement StatementExpression MethodInvocation MemberReference tr addEdge BlockStatement StatementExpression MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation MemberReference tr moveToTrash getManager StatementExpression Assignment MemberReference tr Literal null = ReturnStatement MemberReference tr IfStatement BinaryOperation == MemberReference edgeClass ClassReference ReferenceType CommentEdge BlockStatement TryStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator connection MethodInvocation MemberReference edgeClass MemberReference fromPort Literal null MemberReference toPort Literal null Literal null MethodInvocation ProjectManager MethodInvocation getCurrentProject MethodInvocation getModel getManager StatementExpression MethodInvocation MemberReference connection addEdge ReturnStatement MemberReference connection CatchClause CatchClauseParameter Exception ex StatementExpression MethodInvocation LOG Literal "buildConnection() failed" MemberReference ex error ReturnStatement Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "wrong kind of edge in StateDiagram connect3 " MemberReference edgeClass debug ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType boolean ReturnStatement Literal true	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object classifierRole FormalParameter ReferenceType Object instance StatementExpression MethodInvocation impl MemberReference classifierRole MemberReference instance	0
MethodDeclaration Modifier static BasicType int indexOfNextCheckedSemicolon FormalParameter ReferenceType String s FormalParameter BasicType int start IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference s Literal null BinaryOperation < MemberReference start Literal 0 BinaryOperation >= MemberReference start MethodInvocation s length BlockStatement ReturnStatement Literal - 1 LocalVariableDeclaration BasicType int VariableDeclarator end LocalVariableDeclaration BasicType boolean VariableDeclarator inside Literal false LocalVariableDeclaration BasicType boolean VariableDeclarator backslashed Literal false LocalVariableDeclaration BasicType char VariableDeclarator c ForStatement ForControl Assignment MemberReference end MemberReference start = BinaryOperation < MemberReference end MethodInvocation s length MemberReference ++ end BlockStatement StatementExpression Assignment MemberReference c MethodInvocation s MemberReference end charAt = IfStatement BinaryOperation && MemberReference ! inside BinaryOperation == MemberReference c Literal ';' BlockStatement ReturnStatement MemberReference end IfStatement BinaryOperation && MemberReference ! backslashed BinaryOperation || BinaryOperation == MemberReference c Literal '\'' BinaryOperation == MemberReference c Literal '\"' BlockStatement StatementExpression Assignment MemberReference inside MemberReference ! inside = StatementExpression Assignment MemberReference backslashed BinaryOperation && MemberReference ! backslashed BinaryOperation == MemberReference c Literal '\\' = ReturnStatement MemberReference end	1
MethodDeclaration Modifier public ReferenceType Object getMessage ReturnStatement ClassReference ReferenceType Message	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType Fig f StatementExpression SuperMethodInvocation MemberReference f StatementExpression MethodInvocation MethodInvocation Literal false getFig	0
MethodDeclaration Modifier public ReferenceType String instructions ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getAssociationClass getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public ReferenceType FormalParameter ReferenceType Object client FormalParameter ReferenceType Object ReturnStatement MethodInvocation MemberReference client MemberReference Literal null	0
MethodDeclaration Modifier protected ReferenceType String ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference title	0
MethodDeclaration Modifier public setNamespace FormalParameter ReferenceType Object handle IfStatement MethodInvocation ! Model MethodInvocation MemberReference handle isANamespace getFacade BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Illegal argument. Object " MemberReference handle Literal " is not a namespace" error ThrowStatement ClassCreator ReferenceType IllegalArgumentException BinaryOperation + BinaryOperation + Literal "Illegal argument. Object " MemberReference handle Literal " is not a namespace" StatementExpression SuperMethodInvocation MemberReference handle setNamespace LocalVariableDeclaration ReferenceType CollabDiagramGraphModel VariableDeclarator gm MethodInvocation createGraphModel StatementExpression MethodInvocation gm MemberReference handle LocalVariableDeclaration ReferenceType LayerPerspective VariableDeclarator lay ClassCreator ReferenceType LayerPerspectiveMutable MethodInvocation Model MethodInvocation MemberReference handle getName getFacade MemberReference gm LocalVariableDeclaration ReferenceType CollabDiagramRenderer VariableDeclarator rend ClassCreator ReferenceType CollabDiagramRenderer StatementExpression MethodInvocation lay MemberReference rend setGraphNodeRenderer StatementExpression MethodInvocation lay MemberReference rend setGraphEdgeRenderer StatementExpression MethodInvocation MemberReference lay setLayer	1
MethodDeclaration Modifier protected Annotation Override FormalParameter ReferenceType Object newEdge StatementExpression MethodInvocation MemberReference newEdge	0
MethodDeclaration Modifier public ReferenceType List getAttributes FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Classifier BlockStatement ReturnStatement MethodInvocation MemberReference handle ReturnStatement MethodInvocation MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e	0
MethodDeclaration Modifier private buildGeneralization FormalParameter ReferenceType ClassNode FormalParameter ReferenceType ns IfStatement BinaryOperation != MemberReference BaseClasses Literal null BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType TypeNode VariableDeclarator tn MemberReference BaseClasses BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator parent MethodInvocation MemberReference Identifier MemberReference length buildToParent LocalVariableDeclaration ReferenceType String VariableDeclarator child MethodInvocation MemberReference Identifier MemberReference length buildToParent LocalVariableDeclaration ReferenceType String VariableDeclarator pkg MethodInvocation MemberReference Identifier MemberReference length buildToParent LocalVariableDeclaration ReferenceType Object VariableDeclarator c MethodInvocation MemberReference child MemberReference pkg getStoredDataType LocalVariableDeclaration ReferenceType Object VariableDeclarator p MethodInvocation MemberReference parent MemberReference pkg getStoredDataType LocalVariableDeclaration ReferenceType Object VariableDeclarator n MethodInvocation MemberReference pkg getNameSpace LocalVariableDeclaration ReferenceType Object VariableDeclarator g Literal null IfStatement MethodInvocation Model MethodInvocation MemberReference p isAInterface getFacade BlockStatement StatementExpression Assignment MemberReference g MethodInvocation MemberReference c MemberReference p MemberReference n buildRealization = BlockStatement StatementExpression Assignment MemberReference g MethodInvocation MemberReference c MemberReference p buildGeneralizations = IfStatement BinaryOperation != MemberReference g Literal null StatementExpression MethodInvocation Model MethodInvocation MemberReference g BinaryOperation + BinaryOperation + MemberReference child Literal " -> " MemberReference parent setName getCoreHelper	1
MethodDeclaration Modifier public ReferenceType Object ThrowStatement ClassCreator ReferenceType NotImplementedException Literal "This is not a UML1.4 class"	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation < MemberReference step MethodInvocation	0
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType Lifeline	0
MethodDeclaration Modifier private FormalParameter ReferenceType Relationship elem StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Flow BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Generalization BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType UmlAssociation BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCollaborations IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Dependency BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Binding BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Permission BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem getCore IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Include BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem IfStatement BinaryOperation instanceof MemberReference elem ReferenceType Extend BlockStatement StatementExpression MethodInvocation MethodInvocation MemberReference elem	0
MethodDeclaration Modifier private ReferenceType FormalParameter Modifier final ReferenceType Object client FormalParameter Modifier final ReferenceType Object FormalParameter Modifier final ReferenceType visibility IfStatement BinaryOperation instanceof MemberReference client ReferenceType Namespace BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The client must be instance of IfStatement BinaryOperation instanceof MemberReference ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException Literal "The must be instance of LocalVariableDeclaration ReferenceType RunnableClass VariableDeclarator run ClassCreator ReferenceType RunnableClass MethodDeclaration Modifier public run LocalVariableDeclaration ReferenceType VariableDeclarator packageImport MethodInvocation StatementExpression MethodInvocation packageImport Cast ReferenceType org ReferenceType ReferenceType ReferenceType uml ReferenceType MemberReference StatementExpression MethodInvocation packageImport Cast ReferenceType Namespace MemberReference client IfStatement BinaryOperation != MemberReference visibility Literal null BlockStatement StatementExpression MethodInvocation packageImport MemberReference visibility setVisibility StatementExpression MethodInvocation MethodInvocation MemberReference packageImport add LocalVariableDeclaration ReferenceType ChangeCommand VariableDeclarator cmd ClassCreator ReferenceType ChangeCommand MemberReference modelImpl MemberReference run Literal the package import between the client and the #" StatementExpression MethodInvocation MethodInvocation MemberReference cmd execute getCommandStack StatementExpression MethodInvocation cmd MethodInvocation run MethodInvocation Literal 0 get MemberReference client MemberReference ReturnStatement Cast ReferenceType MethodInvocation run MethodInvocation Literal 0 get	0
MethodDeclaration Modifier public ReferenceType Collection loadModel FormalParameter ReferenceType ProfileReference reference ProfileException StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Loading profile from MethodInvocation reference getPath Literal "'" info TryStatement LocalVariableDeclaration ReferenceType File VariableDeclarator modelFile ClassCreator ReferenceType File MethodInvocation reference getPath LocalVariableDeclaration ReferenceType URL VariableDeclarator url MethodInvocation modelFile MethodInvocation toURL toURI ReturnStatement SuperMethodInvocation MemberReference url MethodInvocation reference getPublicReference loadModel CatchClause CatchClauseParameter MalformedURLException e ThrowStatement ClassCreator ReferenceType ProfileException Literal "Model file not found!" MemberReference e	1
MethodDeclaration Modifier private ReferenceType String getQualifiedName FormalParameter ReferenceType Object element LocalVariableDeclaration ReferenceType StringBuffer VariableDeclarator sb ClassCreator ReferenceType StringBuffer LocalVariableDeclaration ReferenceType Object VariableDeclarator ns MemberReference element WhileStatement BinaryOperation != MemberReference ns Literal null BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator name MethodInvocation Model MethodInvocation MemberReference ns getName getFacade IfStatement BinaryOperation == MemberReference name Literal null BlockStatement StatementExpression Assignment MemberReference name Literal "" = StatementExpression MethodInvocation sb Literal 0 MemberReference name insert StatementExpression Assignment MemberReference ns MethodInvocation Model MethodInvocation MemberReference ns getNamespace getFacade = IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement StatementExpression MethodInvocation sb Literal 0 Literal "." insert ReturnStatement MethodInvocation sb toString	1
MethodDeclaration Modifier public setSpecifications FormalParameter ReferenceType Object handle FormalParameter ReferenceType Collection specifications StatementExpression SuperMethodInvocation MemberReference handle MemberReference specifications setSpecifications StatementExpression MethodInvocation Model ClassCreator ReferenceType DummyModelCommand execute	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent e LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource IfStatement MethodInvocation source MemberReference addButton equals BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation update IfStatement MethodInvocation source MemberReference removeButton equals BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation update IfStatement MethodInvocation source MemberReference okButton equals BlockStatement StatementExpression MethodInvocation ok IfStatement MethodInvocation source MemberReference cancelButton equals BlockStatement StatementExpression MethodInvocation cancel	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object metaType IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getOperation getMetaTypes MemberReference metaType BlockStatement IfStatement BinaryOperation != MethodInvocation profileConfiguration getDefaultTypeStrategy Literal null BlockStatement ReturnStatement MethodInvocation profileConfiguration MethodInvocation getDefaultReturnType getDefaultTypeStrategy IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getAttribute getMetaTypes MemberReference metaType BlockStatement IfStatement BinaryOperation != MethodInvocation profileConfiguration getDefaultTypeStrategy Literal null BlockStatement ReturnStatement MethodInvocation profileConfiguration MethodInvocation getDefaultTypeStrategy IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getParameter getMetaTypes MemberReference metaType BlockStatement IfStatement BinaryOperation != MethodInvocation profileConfiguration getDefaultTypeStrategy Literal null BlockStatement ReturnStatement MethodInvocation profileConfiguration MethodInvocation getDefaultTypeStrategy ReturnStatement Literal null	1
MethodDeclaration Modifier public ReferenceType TableDefinition ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object getIcon FormalParameter ReferenceType Object handle TryStatement IfStatement BinaryOperation instanceof MemberReference handle ReferenceType Stereotype BlockStatement ReturnStatement Cast ReferenceType Stereotype MemberReference handle CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MethodInvocation MemberReference handle illegalArgumentObject	0
MethodDeclaration Modifier public found FormalParameter ReferenceType Object element FormalParameter ReferenceType String value LocalVariableDeclaration BasicType boolean VariableDeclarator isRoot Literal true IfStatement BinaryOperation && BinaryOperation != MemberReference value Literal null MethodInvocation value Literal "false" equalsIgnoreCase BlockStatement StatementExpression Assignment MemberReference isRoot Literal false = IfStatement MethodInvocation Model MethodInvocation MemberReference element isAOperation getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference element MemberReference isRoot setRoot getCoreHelper	0
MethodDeclaration Modifier protected BasicType boolean ReturnStatement Literal false	0
MethodDeclaration Modifier private ReferenceType String generateClassifierGeneralisations FormalParameter ReferenceType Object modelElement IfStatement MethodInvocation ! Model MethodInvocation MemberReference modelElement isAClassifier getFacade BlockStatement ThrowStatement ClassCreator ReferenceType ClassCastException BinaryOperation + MethodInvocation modelElement getClass Literal " has wrong object type, Classifier required" LocalVariableDeclaration ReferenceType String VariableDeclarator sClsGen Literal "" LocalVariableDeclaration ReferenceType Collection VariableDeclarator colGeneralizations MethodInvocation Model MethodInvocation MemberReference modelElement getGeneralizations getFacade IfStatement BinaryOperation != MemberReference colGeneralizations Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator itGen MethodInvocation colGeneralizations iterator IfStatement MethodInvocation itGen hasNext BlockStatement IfStatement BinaryOperation == MethodInvocation colGeneralizations size Literal 1 BlockStatement StatementExpression Assignment MemberReference sClsGen BinaryOperation + MemberReference INDENT Literal "extends " += BlockStatement StatementExpression Assignment MemberReference sClsGen BinaryOperation + BinaryOperation + MemberReference INDENT Literal "/* multiple Literal " supported by */\n" += StatementExpression Assignment MemberReference sClsGen BinaryOperation + MemberReference INDENT Literal "/* extends " += WhileStatement MethodInvocation itGen hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator elmGen MethodInvocation Model MethodInvocation MethodInvocation itGen next getGeneral getFacade IfStatement BinaryOperation != MemberReference elmGen Literal null BlockStatement StatementExpression Assignment MemberReference sClsGen MethodInvocation NameGenerator MemberReference elmGen MemberReference iLanguageMajorVersion generate += IfStatement MethodInvocation itGen hasNext BlockStatement StatementExpression Assignment MemberReference sClsGen BinaryOperation + BinaryOperation + Literal ",\n" MemberReference INDENT Literal " " += IfStatement BinaryOperation > MethodInvocation colGeneralizations size Literal 1 BlockStatement StatementExpression Assignment MemberReference sClsGen Literal " */" += StatementExpression Assignment MemberReference sClsGen Literal "\n" += ReturnStatement MemberReference sClsGen	1
MethodDeclaration Modifier public Annotation Override actionPerformed FormalParameter ReferenceType ActionEvent e StatementExpression SuperMethodInvocation MemberReference e actionPerformed LocalVariableDeclaration ReferenceType Object VariableDeclarator source MethodInvocation e getSource LocalVariableDeclaration ReferenceType Object VariableDeclarator oldClassifier Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator newClassifier Literal null LocalVariableDeclaration ReferenceType Object VariableDeclarator end Literal null LocalVariableDeclaration ReferenceType UMLComboBox VariableDeclarator box Cast ReferenceType UMLComboBox MemberReference source LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation getTarget IfStatement MethodInvocation Model MethodInvocation MemberReference o isAAssociationEnd getFacade BlockStatement StatementExpression Assignment MemberReference end MemberReference o = StatementExpression Assignment MemberReference oldClassifier MethodInvocation Model MethodInvocation MemberReference end getType getFacade = StatementExpression Assignment MemberReference o MethodInvocation box getSelectedItem = IfStatement MethodInvocation Model MethodInvocation MemberReference o isAClassifier getFacade BlockStatement StatementExpression Assignment MemberReference newClassifier MemberReference o = IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference newClassifier MemberReference oldClassifier BinaryOperation != MemberReference end Literal null BinaryOperation != MemberReference newClassifier Literal null BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference end MemberReference newClassifier getCoreHelper StatementExpression SuperMethodInvocation MemberReference e actionPerformed	1
MethodDeclaration Modifier public ReferenceType Object get FormalParameter ReferenceType Object modelElement FormalParameter ReferenceType Class TypeArgument ? type ReturnStatement Literal null	0
MethodDeclaration Modifier public removeNotify StatementExpression Cast ReferenceType MethodInvocation getDocument	0
MethodDeclaration Modifier public Annotation Override ReferenceType String ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference MethodInvocation MethodInvocation Model MethodInvocation getAbstraction getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public postLoad StatementExpression SuperMethodInvocation postLoad LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator facade MethodInvocation Model getFacade StatementExpression MethodInvocation LOG BinaryOperation + Literal "doing postLoad on " MethodInvocation getName info LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator collaboration MethodInvocation LocalVariableDeclaration ReferenceType Object VariableDeclarator correctInteraction Literal null ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType Fig VariableDeclarator f MethodInvocation MethodInvocation getContents getLayer BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator modelElement MethodInvocation f getOwner IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigMessage BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator MethodInvocation facade MemberReference modelElement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator context MethodInvocation facade MemberReference getContext IfStatement BinaryOperation == MemberReference context MemberReference collaboration BlockStatement StatementExpression Assignment MemberReference correctInteraction MemberReference = IfStatement BinaryOperation != MemberReference correctInteraction Literal null BlockStatement LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator collabHelper MethodInvocation Model getCollaborationsHelper ForStatement EnhancedForControl VariableDeclaration Modifier final ReferenceType Fig VariableDeclarator f MethodInvocation MethodInvocation getContents getLayer BlockStatement IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigMessage BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator message MethodInvocation f getOwner StatementExpression MethodInvocation LOG BinaryOperation + Literal "Checking message " MethodInvocation f getOwner info LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator MethodInvocation facade MemberReference message LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator context MethodInvocation facade MemberReference getContext LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator action MethodInvocation facade MemberReference message getAction IfStatement BinaryOperation != MemberReference context MemberReference collaboration BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "namespace of does not match " Literal - moving " MemberReference message Literal " to " MemberReference correctInteraction warn StatementExpression MethodInvocation collabHelper MemberReference correctInteraction MemberReference message addMessage StatementExpression MethodInvocation Model MethodInvocation MemberReference action MemberReference collaboration setNamespace getCoreHelper IfStatement BinaryOperation instanceof MemberReference f ReferenceType FigClassifierRole BlockStatement LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator cr MethodInvocation f getOwner LocalVariableDeclaration Modifier final ReferenceType Object VariableDeclarator namespace MethodInvocation facade MemberReference cr getNamespace IfStatement BinaryOperation != MemberReference namespace MemberReference collaboration BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "namespace of does not match " Literal - moving " MemberReference cr Literal " to " MemberReference collaboration warn StatementExpression MethodInvocation Model MethodInvocation MemberReference cr MemberReference collaboration setNamespace getCoreHelper LocalVariableDeclaration ReferenceType Collection VariableDeclarator associationEndRoles MethodInvocation facade MemberReference cr getAssociationEnds ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator assEndRole MemberReference associationEndRoles BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator assRole MethodInvocation facade MemberReference assEndRole getAssociation IfStatement BinaryOperation != MethodInvocation facade MemberReference assRole getNamespace MemberReference collaboration BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference assRole MemberReference collaboration setNamespace getCoreHelper	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object classifier FormalParameter ReferenceType List operations StatementExpression MethodInvocation impl MemberReference classifier MemberReference operations	0
MethodDeclaration Modifier static ReferenceType Collection TypeArgument ReferenceType ModelElement FormalParameter ReferenceType Namespace ns LocalVariableDeclaration ReferenceType Collection TypeArgument ReferenceType ModelElement VariableDeclarator result ClassCreator ReferenceType ArrayList TypeArgument ReferenceType ModelElement ForStatement EnhancedForControl VariableDeclaration ReferenceType ModelElement VariableDeclarator element MethodInvocation ns BlockStatement IfStatement MethodInvocation MethodInvocation element getVisibility equals BlockStatement StatementExpression MethodInvocation result MemberReference element add ReturnStatement MemberReference result	1
MethodDeclaration Modifier public Annotation Override setLineWidth FormalParameter BasicType int w StatementExpression MethodInvocation MemberReference w setLineWidth	0
MethodDeclaration Modifier public Annotation Override BasicType boolean ReturnStatement MethodInvocation canFinish	0
MethodDeclaration Modifier private ReferenceType List getProfileModels ReturnStatement MemberReference profileModels	0
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement Literal MethodInvocation MethodInvocation evt getPropertyName equals BlockStatement StatementExpression Assignment MemberReference Literal true = StatementExpression MethodInvocation pathCheckBox Cast ReferenceType Boolean MethodInvocation evt getNewValue setSelected StatementExpression Assignment MemberReference Literal false =	0
MethodDeclaration Modifier public ReferenceType MBeanNotificationInfo getNotificationInfo ReturnStatement MethodInvocation notifier getNotificationInfo	0
MethodDeclaration Modifier public BasicType boolean isLeaf FormalParameter ReferenceType Object node IfStatement BinaryOperation instanceof MemberReference node ReferenceType ToDoList BlockStatement ReturnStatement Literal false IfStatement BinaryOperation && BinaryOperation instanceof MemberReference node ReferenceType MethodInvocation MemberReference node hasChildren BlockStatement ReturnStatement Literal false ReturnStatement Literal true	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object base ReturnStatement Literal false	1
MethodDeclaration Modifier public Annotation Override BasicType boolean doesAccept FormalParameter ReferenceType Object objectToAccept IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isANode getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAAssociation getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isANodeInstance getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAComponent getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAComponentInstance getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAClass getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAInterface getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAObject getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAComment getFacade BlockStatement ReturnStatement Literal true IfStatement MethodInvocation Model MethodInvocation MemberReference objectToAccept isAActor getFacade BlockStatement ReturnStatement Literal true ReturnStatement Literal false	1
MethodDeclaration Modifier public addNotificationListener FormalParameter ReferenceType listener FormalParameter ReferenceType NotificationFilter filter FormalParameter ReferenceType Object handback IllegalArgumentException StatementExpression MethodInvocation notifier MemberReference listener MemberReference filter MemberReference handback addNotificationListener	1
MethodDeclaration Modifier public FormalParameter ReferenceType Object cls FormalParameter ReferenceType Object feature StatementExpression MethodInvocation impl MemberReference cls MemberReference feature	0
MethodDeclaration Modifier public final mDIRECTIVE FormalParameter BasicType boolean _createToken RecognitionException CharStreamException TokenStreamException LocalVariableDeclaration BasicType int VariableDeclarator _ttype LocalVariableDeclaration ReferenceType Token VariableDeclarator _token Literal null LocalVariableDeclaration BasicType int VariableDeclarator _begin MethodInvocation text length StatementExpression Assignment MemberReference _ttype MemberReference = LocalVariableDeclaration BasicType int VariableDeclarator _saveIndex LocalVariableDeclaration ReferenceType Token VariableDeclarator ld Literal null StatementExpression MethodInvocation Literal '#' match StatementExpression MethodInvocation Literal true mLineDirective StatementExpression Assignment MemberReference ld MemberReference _returnToken = IfStatement BinaryOperation == MemberReference inputState guessing Literal 0 BlockStatement StatementExpression Assignment MemberReference _ttype MemberReference Token SKIP = StatementExpression MethodInvocation newline IfStatement BinaryOperation && BinaryOperation && MemberReference _createToken BinaryOperation == MemberReference _token Literal null BinaryOperation != MemberReference _ttype MemberReference Token SKIP BlockStatement StatementExpression Assignment MemberReference _token MethodInvocation MemberReference _ttype makeToken = StatementExpression MethodInvocation _token ClassCreator ReferenceType String MethodInvocation text getBuffer MemberReference _begin BinaryOperation - MethodInvocation text length MemberReference _begin setText StatementExpression Assignment MemberReference _returnToken MemberReference _token =	1
MethodDeclaration Modifier public BasicType boolean FormalParameter ReferenceType Object handle ReturnStatement BinaryOperation instanceof MemberReference handle ReferenceType NamedElement	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object StatementExpression MethodInvocation impl MemberReference handle MemberReference	0
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType Object getReceiverOperations LocalVariableDeclaration ReferenceType ArrayList TypeArgument ReferenceType Object VariableDeclarator opList ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Object LocalVariableDeclaration ReferenceType Object VariableDeclarator action MethodInvocation getAction LocalVariableDeclaration ReferenceType Object VariableDeclarator receiver MethodInvocation Model MethodInvocation MethodInvocation getOwner getReceiver getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference action Literal null BinaryOperation != MemberReference receiver Literal null BlockStatement IfStatement MethodInvocation Model MethodInvocation MemberReference action isACallAction getFacade BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator bases MethodInvocation Model MethodInvocation MemberReference receiver getBases MethodInvocation iterator getFacade WhileStatement MethodInvocation bases hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator base MethodInvocation bases next StatementExpression MethodInvocation opList MethodInvocation Model MethodInvocation MemberReference base getOperations getFacade addAll ReturnStatement MemberReference opList	1
MethodDeclaration Modifier public Annotation Override ReferenceType Set TypeArgument ReferenceType Object getCriticizedDesignMaterials LocalVariableDeclaration ReferenceType Set TypeArgument ReferenceType Object VariableDeclarator ret ClassCreator ReferenceType HashSet TypeArgument ReferenceType Object StatementExpression MethodInvocation ret MethodInvocation Model MethodInvocation getPackage getMetaTypes add ReturnStatement MemberReference ret	1
MethodDeclaration Modifier public Annotation Override BasicType boolean predicate2 FormalParameter ReferenceType Object dm FormalParameter ReferenceType Designer dsgr IfStatement MethodInvocation ! Model getFacade BlockStatement ReturnStatement MemberReference NO_PROBLEM LocalVariableDeclaration ReferenceType Collection VariableDeclarator operSeen ClassCreator ReferenceType ArrayList ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator op MethodInvocation Model MethodInvocation MemberReference dm getOperations getFacade BlockStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Object VariableDeclarator o MemberReference operSeen BlockStatement IfStatement MethodInvocation MemberReference op MemberReference o signaturesMatch BlockStatement ReturnStatement MemberReference PROBLEM_FOUND StatementExpression MethodInvocation operSeen MemberReference op add ReturnStatement MemberReference NO_PROBLEM	1
MethodDeclaration Modifier public ReferenceType Collection getSubtypes FormalParameter ReferenceType Object cls ReturnStatement MethodInvocation impl MemberReference cls getSubtypes	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement BinaryOperation & BinaryOperation != MemberReference Literal null MemberReference	0
MethodDeclaration Modifier public ReferenceType Collection FormalParameter ReferenceType Object role ReturnStatement Literal null	1
MethodDeclaration Modifier public updateMainTask FormalParameter ReferenceType String name StatementExpression MethodInvocation pbar MemberReference name setNote	0
MethodDeclaration Modifier public ReferenceType String getName ReturnStatement Literal	0
MethodDeclaration Modifier public static ReferenceType NotationProviderFactory2 getInstance IfStatement BinaryOperation == MemberReference instance Literal null BlockStatement StatementExpression Assignment MemberReference instance ClassCreator ReferenceType NotationProviderFactory2 = ReturnStatement MemberReference instance	0
MethodDeclaration Modifier public ReferenceType String ReturnStatement MemberReference	0
MethodDeclaration Modifier protected Annotation Override BasicType int getNotationProviderType ReturnStatement MemberReference NotationProviderFactory2	0
MethodDeclaration Modifier private static FormalParameter ReferenceType JMenu distribute LocalVariableDeclaration ReferenceType DistributeAction VariableDeclarator a ClassCreator ReferenceType DistributeAction MemberReference DistributeAction StatementExpression MethodInvocation a MemberReference Action MethodInvocation Literal putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation distribute MemberReference a add StatementExpression MethodInvocation MemberReference Literal horizontal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator StatementExpression Assignment MemberReference a ClassCreator ReferenceType DistributeAction MemberReference DistributeAction = StatementExpression MethodInvocation a MemberReference Action MethodInvocation Literal putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation distribute MemberReference a add StatementExpression MethodInvocation MemberReference Literal horizontal setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator StatementExpression Assignment MemberReference a ClassCreator ReferenceType DistributeAction MemberReference DistributeAction = StatementExpression MethodInvocation a MemberReference Action MethodInvocation Literal putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation distribute MemberReference a add StatementExpression MethodInvocation MemberReference Literal vertical setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator StatementExpression Assignment MemberReference a ClassCreator ReferenceType DistributeAction MemberReference DistributeAction = StatementExpression MethodInvocation a MemberReference Action MethodInvocation Literal putValue LocalVariableDeclaration ReferenceType JMenuItem VariableDeclarator MethodInvocation distribute MemberReference a add StatementExpression MethodInvocation MemberReference Literal vertical setMnemonic StatementExpression MethodInvocation ShortcutMgr MemberReference MemberReference ShortcutMgr assignAccelerator	0
MethodDeclaration Modifier protected ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType createDiagram FormalParameter ReferenceType Class type FormalParameter ReferenceType Object owner IfStatement BinaryOperation != MethodInvocation Model getDiagramInterchangeModel Literal null BlockStatement ReturnStatement MethodInvocation Model MethodInvocation MemberReference type MemberReference owner createDiagram getDiagramInterchangeModel ReturnStatement Literal null	0
MethodDeclaration Modifier public ReferenceType UmlPackage FormalParameter ReferenceType String name ReturnStatement Cast ReferenceType UmlPackage MethodInvocation repository MemberReference name	0
MethodDeclaration Modifier private ReferenceType Collection TypeArgument ReferenceType Object getModel IfStatement BinaryOperation == MemberReference model Literal null BlockStatement LocalVariableDeclaration ReferenceType VariableDeclarator profileModelLoader ClassCreator ReferenceType ClassReference ReferenceType TryStatement StatementExpression Assignment MemberReference model MethodInvocation profileModelLoader MemberReference loadModel = CatchClause CatchClauseParameter ProfileException e IfStatement BinaryOperation == MethodInvocation Model MethodInvocation getUmlVersion MethodInvocation Literal 0 charAt getFacade Literal '1' BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Exception loading profile file " MemberReference MemberReference e error BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + Literal "Exception loading profile file " MemberReference MemberReference e error IfStatement BinaryOperation == MemberReference model Literal null BlockStatement StatementExpression Assignment MemberReference model MethodInvocation = StatementExpression MethodInvocation LOG Literal "Using fallback error ReturnStatement MemberReference model	0
MethodDeclaration Modifier public ReferenceType String getContent ReturnStatement MemberReference content	0
MethodDeclaration Modifier protected ReferenceType String toString FormalParameter Modifier final ReferenceType Object umlMessage FormalParameter BasicType boolean LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it LocalVariableDeclaration ReferenceType Collection VariableDeclarator umlPredecessors LocalVariableDeclaration ReferenceType Object VariableDeclarator umlAction LocalVariableDeclaration ReferenceType Object VariableDeclarator umlActivator LocalVariableDeclaration ReferenceType MsgPtr VariableDeclarator ptr LocalVariableDeclaration BasicType int VariableDeclarator lpn LocalVariableDeclaration ReferenceType StringBuilder VariableDeclarator predecessors ClassCreator ReferenceType StringBuilder LocalVariableDeclaration ReferenceType String VariableDeclarator number LocalVariableDeclaration ReferenceType String VariableDeclarator action Literal "" IfStatement BinaryOperation == MemberReference umlMessage Literal null BlockStatement ReturnStatement Literal "" StatementExpression Assignment MemberReference ptr ClassCreator ReferenceType MsgPtr = StatementExpression Assignment MemberReference lpn BinaryOperation + MethodInvocation MemberReference umlMessage MemberReference ptr Literal 1 = StatementExpression Assignment MemberReference umlActivator MethodInvocation Model MethodInvocation MemberReference umlMessage getActivator getFacade = StatementExpression Assignment MemberReference umlPredecessors MethodInvocation Model MethodInvocation MemberReference umlMessage getPredecessors getFacade = StatementExpression Assignment MemberReference it TernaryExpression BinaryOperation != MemberReference umlPredecessors Literal null MethodInvocation umlPredecessors iterator Literal null = IfStatement BinaryOperation && BinaryOperation != MemberReference it Literal null MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType MsgPtr VariableDeclarator ptr2 ClassCreator ReferenceType MsgPtr LocalVariableDeclaration BasicType int VariableDeclarator precnt Literal 0 WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator msg MethodInvocation it next LocalVariableDeclaration BasicType int VariableDeclarator mpn BinaryOperation + MethodInvocation MemberReference msg MemberReference ptr2 Literal 1 IfStatement BinaryOperation && BinaryOperation && BinaryOperation && BinaryOperation == MemberReference mpn BinaryOperation - MemberReference lpn Literal 1 BinaryOperation == MemberReference umlActivator MethodInvocation Model MethodInvocation MemberReference msg getActivator getFacade BinaryOperation < MethodInvocation Model MethodInvocation MemberReference msg getPredecessors MethodInvocation size getFacade Literal 2 BinaryOperation || BinaryOperation == MemberReference ptr2 message Literal null BinaryOperation < MethodInvocation MemberReference ptr2 message Literal 2 BlockStatement ContinueStatement IfStatement BinaryOperation > MethodInvocation predecessors length Literal 0 BlockStatement StatementExpression MethodInvocation predecessors Literal ", " append StatementExpression MethodInvocation predecessors MethodInvocation MemberReference msg MemberReference ptr2 message MemberReference mpn generateMessageNumber append StatementExpression MemberReference ++ precnt IfStatement BinaryOperation > MemberReference precnt Literal 0 BlockStatement StatementExpression MethodInvocation predecessors Literal " / " append StatementExpression Assignment MemberReference number MethodInvocation MemberReference umlMessage MemberReference ptr message MemberReference lpn generateMessageNumber = StatementExpression Assignment MemberReference umlAction MethodInvocation Model MethodInvocation MemberReference umlMessage getAction getFacade = IfStatement BinaryOperation != MemberReference umlAction Literal null BlockStatement IfStatement BinaryOperation != MethodInvocation Model MethodInvocation MemberReference umlAction getRecurrence getFacade Literal null BlockStatement StatementExpression Assignment MemberReference number BinaryOperation + BinaryOperation + MethodInvocation MethodInvocation Model MethodInvocation MemberReference umlAction getRecurrence getFacade Literal " " MemberReference number = StatementExpression Assignment MemberReference action MethodInvocation NotationUtilityUml MemberReference umlAction generateActionSequence = IfStatement BinaryOperation || Literal MethodInvocation MemberReference action equals "" MethodInvocation action MethodInvocation Literal "(" startsWith trim BlockStatement StatementExpression Assignment MemberReference action MethodInvocation MemberReference umlAction = IfStatement Literal MethodInvocation MemberReference action equals "" BlockStatement LocalVariableDeclaration ReferenceType String VariableDeclarator n MethodInvocation Model MethodInvocation MemberReference umlMessage getName getFacade IfStatement BinaryOperation != MemberReference n Literal null BlockStatement StatementExpression Assignment MemberReference action MemberReference n = IfStatement MethodInvocation ! action Literal ")" endsWith BlockStatement StatementExpression Assignment MemberReference action BinaryOperation + MemberReference action Literal "()" = IfStatement MemberReference ! BlockStatement ReturnStatement MemberReference action ReturnStatement BinaryOperation + BinaryOperation + BinaryOperation + MemberReference predecessors MemberReference number Literal " : " MemberReference action	1
MethodDeclaration Modifier protected Annotation Override removeFromDiagramImpl LocalVariableDeclaration ReferenceType VariableDeclarator figEdgeLink Literal null LocalVariableDeclaration Modifier final ReferenceType List VariableDeclarator edges MethodInvocation IfStatement BinaryOperation != MemberReference edges Literal null BlockStatement ForStatement ForControl VariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation edges iterator BinaryOperation && MethodInvocation it hasNext BinaryOperation == MemberReference figEdgeLink Literal null BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next IfStatement BinaryOperation instanceof MemberReference o ReferenceType BlockStatement StatementExpression Assignment MemberReference figEdgeLink Cast ReferenceType MemberReference o = IfStatement BinaryOperation != MemberReference figEdgeLink Literal null BlockStatement LocalVariableDeclaration ReferenceType FigNode VariableDeclarator figClassBox MethodInvocation figEdgeLink IfStatement BinaryOperation instanceof MemberReference figClassBox ReferenceType FigClassAssociationClass BlockStatement StatementExpression Assignment MemberReference figClassBox MethodInvocation figEdgeLink getSourceFigNode = StatementExpression MethodInvocation figEdgeLink removeFromDiagramImpl StatementExpression Cast ReferenceType FigClassAssociationClass MemberReference figClassBox StatementExpression SuperMethodInvocation removeFromDiagramImpl	0
MethodDeclaration Modifier public Annotation Override ReferenceType Vector getPopUpActions FormalParameter ReferenceType MouseEvent me LocalVariableDeclaration ReferenceType Vector VariableDeclarator popUpActions SuperMethodInvocation MemberReference me getPopUpActions StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MethodInvocation BinaryOperation | BinaryOperation | MemberReference ABSTRACT MemberReference LEAF MemberReference ROOT buildModifierPopUp add StatementExpression MethodInvocation popUpActions BinaryOperation - MethodInvocation popUpActions size MethodInvocation getPopupAddOffset MethodInvocation buildVisibilityPopUp add ReturnStatement MemberReference popUpActions	1
MethodDeclaration Modifier public ReferenceType Object getSource FormalParameter ReferenceType Object link ReturnStatement Literal null	0
MethodDeclaration Modifier public reset StatementExpression SuperMethodInvocation reset StatementExpression Assignment MemberReference isEsc Literal false = StatementExpression Assignment MemberReference isSQuot Literal false = StatementExpression Assignment MemberReference isDQuot Literal false = StatementExpression Assignment MemberReference tokLevel Literal 1 = StatementExpression Assignment MemberReference Literal 0 =	0
MethodDeclaration Modifier public ReferenceType Rectangle ReturnStatement MethodInvocation getBounds	0
MethodDeclaration Modifier public FormalParameter BasicType int StatementExpression Assignment MemberReference rank MemberReference =	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType String path FormalParameter ReferenceType Object container TryStatement IfStatement BinaryOperation && BinaryOperation && BinaryOperation != MemberReference container Literal null MethodInvocation Model MethodInvocation MemberReference container isACompositeState getFacade BinaryOperation != MemberReference path Literal null BlockStatement LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation MethodInvocation iterator MemberReference container LocalVariableDeclaration BasicType int VariableDeclarator index MethodInvocation path Literal "::" lastIndexOf IfStatement BinaryOperation != MemberReference index Literal - 1 BlockStatement StatementExpression Assignment MemberReference index Literal 2 += BlockStatement StatementExpression Assignment MemberReference index Literal 1 += StatementExpression Assignment MemberReference path MethodInvocation path MemberReference index substring = WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next LocalVariableDeclaration ReferenceType Object VariableDeclarator oName MethodInvocation Model MethodInvocation MemberReference o getName getFacade IfStatement BinaryOperation && BinaryOperation != MemberReference oName Literal null MethodInvocation oName MemberReference path equals BlockStatement ReturnStatement MemberReference o CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement Literal null	1
MethodDeclaration Modifier public BasicType int compareTo FormalParameter ReferenceType Object o LocalVariableDeclaration ReferenceType Callout VariableDeclarator c Cast ReferenceType Callout MemberReference o IfStatement BinaryOperation == MemberReference line MethodInvocation c getLine BlockStatement IfStatement BinaryOperation > MemberReference col MethodInvocation c getColumn BlockStatement ReturnStatement Literal 1 IfStatement BinaryOperation < MemberReference col MethodInvocation c getColumn BlockStatement ReturnStatement Literal - 1 BlockStatement IfStatement BinaryOperation < MemberReference callout MethodInvocation c getCallout BlockStatement ReturnStatement Literal - 1 IfStatement BinaryOperation > MemberReference callout MethodInvocation c getCallout BlockStatement ReturnStatement Literal 1 BlockStatement ReturnStatement Literal 0 BlockStatement IfStatement BinaryOperation > MemberReference line MethodInvocation c getLine BlockStatement ReturnStatement Literal 1 BlockStatement ReturnStatement Literal - 1	1
MethodDeclaration Modifier public Annotation Override undo StatementExpression MethodInvocation undo	0
MethodDeclaration Modifier public actionPerformed FormalParameter ReferenceType ActionEvent ae StatementExpression SuperMethodInvocation MemberReference ae actionPerformed LocalVariableDeclaration ReferenceType Editor VariableDeclarator ce MethodInvocation Globals curEditor LocalVariableDeclaration ReferenceType GraphModel VariableDeclarator gm MethodInvocation ce getGraphModel IfStatement BinaryOperation instanceof MemberReference gm ReferenceType MutableGraphModel BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType String VariableDeclarator instructions Literal null IfStatement BinaryOperation != MemberReference object Literal null BlockStatement StatementExpression Assignment MemberReference instructions MethodInvocation Translator Literal ArrayCreator ReferenceType Object ArrayInitializer MethodInvocation Model MethodInvocation MemberReference object toString getFacade localize = StatementExpression MethodInvocation Globals MemberReference instructions LocalVariableDeclaration Modifier final ReferenceType VariableDeclarator placeMode ClassCreator ReferenceType MethodInvocation TargetManager MethodInvocation getTargets getInstance MemberReference instructions StatementExpression MethodInvocation Globals MemberReference placeMode Literal false mode	0
MethodDeclaration Modifier private BasicType boolean FormalParameter ReferenceType Object a ReturnStatement BinaryOperation || BinaryOperation instanceof MemberReference a ReferenceType MethodInvocation a MethodInvocation ClassReference ReferenceType isAnnotationPresent getClass	0
MethodDeclaration Modifier protected Annotation Override ReferenceType Object FormalParameter BasicType int index ReturnStatement MethodInvocation Model MethodInvocation getAssociation getMetaTypes	0
MethodDeclaration addAttribute FormalParameter BasicType short modifiers FormalParameter ReferenceType String typeSpec FormalParameter ReferenceType String name FormalParameter ReferenceType String initializer FormalParameter ReferenceType String javadoc FormalParameter BasicType boolean forceIt LocalVariableDeclaration ReferenceType String VariableDeclarator multiplicity Literal "1_1" LocalVariableDeclaration ReferenceType Object VariableDeclarator mClassifier Literal null IfStatement BinaryOperation != MemberReference typeSpec Literal null BlockStatement IfStatement BinaryOperation && MemberReference ! arraysAsDatatype BinaryOperation != MethodInvocation typeSpec Literal '[' indexOf Literal - 1 BlockStatement StatementExpression Assignment MemberReference typeSpec MethodInvocation typeSpec Literal 0 MethodInvocation typeSpec Literal '[' indexOf substring = StatementExpression Assignment MemberReference multiplicity Literal "1_N" = TryStatement StatementExpression Assignment MemberReference mClassifier MethodInvocation MethodInvocation MethodInvocation MemberReference typeSpec getClassifierName get MemberReference typeSpec getContext = CatchClause CatchClauseParameter ClassifierNotFoundException e IfStatement BinaryOperation && BinaryOperation && MemberReference forceIt BinaryOperation != MemberReference typeSpec Literal null BinaryOperation != MemberReference model Literal null BlockStatement StatementExpression MethodInvocation LOG BinaryOperation + BinaryOperation + Literal "Modeler.java: forced creation of" Literal " unknown classifier " MemberReference typeSpec info LocalVariableDeclaration ReferenceType String VariableDeclarator packageName MethodInvocation MemberReference typeSpec getPackageName LocalVariableDeclaration ReferenceType String VariableDeclarator classifierName MethodInvocation MemberReference typeSpec getClassifierName LocalVariableDeclaration ReferenceType Object VariableDeclarator mPackage TernaryExpression BinaryOperation > MethodInvocation packageName length Literal 0 MethodInvocation MemberReference packageName getPackage MemberReference model StatementExpression Assignment MemberReference mClassifier MethodInvocation Model MethodInvocation MemberReference classifierName MemberReference mPackage buildClass getCoreFactory = StatementExpression MethodInvocation newElements MemberReference mClassifier add BlockStatement StatementExpression MethodInvocation MemberReference typeSpec Literal "an attribute" warnClassifierNotFound IfStatement BinaryOperation == MemberReference mClassifier Literal null BlockStatement StatementExpression MethodInvocation Literal "failed to find or create type" MemberReference typeSpec logError ReturnStatement IfStatement BinaryOperation || BinaryOperation || BinaryOperation == MemberReference mClassifier Literal null MemberReference MethodInvocation Model MethodInvocation MemberReference mClassifier isADataType getFacade BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mAttribute MethodInvocation parseState MemberReference name getAttribute IfStatement BinaryOperation == MemberReference mAttribute Literal null BlockStatement StatementExpression Assignment MemberReference mAttribute MethodInvocation MethodInvocation parseState getClassifier MemberReference mClassifier MemberReference name = StatementExpression MethodInvocation parseState MemberReference mAttribute feature StatementExpression MethodInvocation MemberReference mAttribute MemberReference modifiers setOwnerScope StatementExpression MethodInvocation MemberReference mAttribute MemberReference modifiers setVisibility StatementExpression MethodInvocation Model MethodInvocation MemberReference mAttribute MemberReference multiplicity setMultiplicity getCoreHelper IfStatement MethodInvocation Model MethodInvocation MemberReference mClassifier isAClassifier getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mAttribute MemberReference mClassifier getCoreHelper BlockStatement StatementExpression MethodInvocation BinaryOperation + BinaryOperation + BinaryOperation + BinaryOperation + Literal "Modeler.java: a valid type for a parameter " Literal "could not be resolved:\n " Literal "In file: " MemberReference fileName Literal ", for attribute: " MethodInvocation Model MethodInvocation MemberReference mAttribute getName getFacade logError IfStatement BinaryOperation != MemberReference initializer Literal null BlockStatement StatementExpression Assignment MemberReference initializer MethodInvocation initializer Literal '\n' Literal ' ' replace = StatementExpression Assignment MemberReference initializer MethodInvocation initializer Literal '\t' Literal ' ' replace = LocalVariableDeclaration ReferenceType Object VariableDeclarator newInitialValue MethodInvocation Model MethodInvocation Literal MemberReference initializer getDataTypesFactory StatementExpression MethodInvocation Model MethodInvocation MemberReference mAttribute MemberReference newInitialValue setInitialValue getCoreHelper IfStatement MethodInvocation Model MethodInvocation MemberReference mAttribute isReadOnly getFacade BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mAttribute Literal true setReadOnly getCoreHelper StatementExpression MethodInvocation MemberReference mAttribute MemberReference javadoc addDocumentationTag BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator mAssociationEnd MethodInvocation MemberReference name MemberReference mClassifier StatementExpression MethodInvocation MemberReference mAssociationEnd MemberReference modifiers setVisibility StatementExpression MethodInvocation Model MethodInvocation MemberReference mAssociationEnd MemberReference multiplicity setMultiplicity getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference mAssociationEnd MemberReference mClassifier getCoreHelper StatementExpression MethodInvocation Model MethodInvocation MemberReference mAssociationEnd MemberReference name setName getCoreHelper IfStatement MethodInvocation ! mClassifier MethodInvocation parseState getClassifier equals BlockStatement StatementExpression MethodInvocation Model MethodInvocation MemberReference mAssociationEnd Literal true setNavigable getCoreHelper StatementExpression MethodInvocation MemberReference mAssociationEnd MemberReference javadoc addDocumentationTag	1
MethodDeclaration Modifier public BasicType boolean enable StatementExpression MethodInvocation MethodInvocation MemberReference java This getInstance ReturnStatement Literal true	0
MethodDeclaration Modifier public ReferenceType String getRuleName ReturnStatement MethodInvocation Translator Literal localize	0
MethodDeclaration Modifier protected BasicType int ReturnStatement Literal 150	0
MethodDeclaration Modifier public BasicType boolean ReturnStatement MemberReference	0
MethodDeclaration Modifier public Annotation Override FormalParameter ReferenceType FigEdge edge StatementExpression SuperMethodInvocation MemberReference edge IfStatement BinaryOperation instanceof MemberReference edge ReferenceType FigMessage BlockStatement LocalVariableDeclaration ReferenceType FigMessage VariableDeclarator Cast ReferenceType FigMessage MemberReference edge IfStatement MethodInvocation BlockStatement StatementExpression MethodInvocation StatementExpression MethodInvocation MemberReference	0
MethodDeclaration Modifier private initFigs StatementExpression MethodInvocation MemberReference StatementExpression MethodInvocation MemberReference FigText INSERT StatementExpression MethodInvocation Literal "\n" StatementExpression MethodInvocation MemberReference FigText END_EDITING StatementExpression MethodInvocation MemberReference FigText StatementExpression MethodInvocation Literal false setFilled StatementExpression MethodInvocation Literal 0 setLineWidth	0
MethodDeclaration Modifier protected FormalParameter ReferenceType FigText IfStatement BinaryOperation == MemberReference MethodInvocation getNameFig BlockStatement StatementExpression MethodInvocation MethodInvocation getParsingHelp StatementExpression MethodInvocation MethodInvocation MethodInvocation getOwner MethodInvocation getNotationSettings toString setText	0
MethodDeclaration Modifier public BasicType boolean FormalParameter BasicType int x FormalParameter BasicType int y IfStatement BinaryOperation instanceof MemberReference fig ReferenceType FigCompartmentBox BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType FigCompartment VariableDeclarator Cast ReferenceType FigCompartmentBox MemberReference fig IfStatement BinaryOperation == MemberReference Literal null BlockStatement ReturnStatement Literal false LocalVariableDeclaration ReferenceType Rectangle VariableDeclarator fr MethodInvocation getBounds LocalVariableDeclaration BasicType boolean VariableDeclarator res MethodInvocation fr MemberReference x MemberReference y contains StatementExpression Assignment MemberReference fig Literal null = ReturnStatement MemberReference res	0
MethodDeclaration Modifier protected BasicType boolean isValidElement FormalParameter ReferenceType Object o ReturnStatement BinaryOperation && MethodInvocation Model MethodInvocation MemberReference o isAModelElement getFacade MethodInvocation Model MethodInvocation MethodInvocation getTarget MethodInvocation MemberReference o contains getFacade	0
MethodDeclaration Modifier public ReferenceType List TypeArgument ReferenceType Parameter getReturnParameters FormalParameter ReferenceType Object bf LocalVariableDeclaration ReferenceType List TypeArgument ReferenceType Parameter VariableDeclarator returnParams ClassCreator ReferenceType ArrayList TypeArgument ReferenceType Parameter TryStatement ForStatement EnhancedForControl VariableDeclaration ReferenceType Parameter VariableDeclarator parameter Cast ReferenceType BehavioralFeature MemberReference bf BlockStatement IfStatement MethodInvocation ParameterDirectionKindEnum.PDK_RETURN MethodInvocation parameter getKind equals BlockStatement StatementExpression MethodInvocation returnParams MemberReference parameter add CatchClause CatchClauseParameter InvalidObjectException e ThrowStatement ClassCreator ReferenceType InvalidElementException MemberReference e ReturnStatement MemberReference returnParams	1
MethodDeclaration Modifier public propertyChange FormalParameter ReferenceType PropertyChangeEvent evt IfStatement BinaryOperation && BinaryOperation instanceof MemberReference evt ReferenceType DeleteInstanceEvent BinaryOperation == MethodInvocation evt getSource MemberReference BlockStatement StatementExpression MethodInvocation Model MethodInvocation This MemberReference removeModelEventListener getPump StatementExpression Assignment MemberReference Literal null =	1
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference Literal null BlockStatement StatementExpression Assignment MemberReference ClassCreator ReferenceType RadioAction ClassCreator ReferenceType ActionSetMode ClassReference ReferenceType ModeCreatePolyEdge Literal "edgeClass" MethodInvocation Model MethodInvocation getMetaTypes Literal = ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType ReturnStatement MemberReference	0
MethodDeclaration Modifier public ReferenceType Object FormalParameter ReferenceType Object ofs FormalParameter ReferenceType String s IfStatement BinaryOperation instanceof MemberReference ofs ReferenceType BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException LocalVariableDeclaration ReferenceType CompositeState VariableDeclarator cs Cast ReferenceType MemberReference ofs LocalVariableDeclaration ReferenceType VariableDeclarator sm MethodInvocation cs getStateMachine LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator ns MethodInvocation sm getContext IfStatement BinaryOperation == MemberReference ns Literal null BlockStatement ReturnStatement Literal null IfStatement BinaryOperation instanceof MemberReference ns ReferenceType Namespace BlockStatement StatementExpression Assignment MemberReference ns MethodInvocation ns getNamespace = IfStatement BinaryOperation != MemberReference ns Literal null BlockStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator c MethodInvocation Model MethodInvocation MemberReference ns MethodInvocation Model MethodInvocation getClassifier getMetaTypes getAllModelElementsOfKind getModelManagementHelper LocalVariableDeclaration ReferenceType Iterator VariableDeclarator i MethodInvocation c iterator WhileStatement MethodInvocation i hasNext BlockStatement LocalVariableDeclaration ReferenceType ModelElement VariableDeclarator classifier Cast ReferenceType ModelElement MethodInvocation i next LocalVariableDeclaration ReferenceType String VariableDeclarator MethodInvocation classifier getName IfStatement BinaryOperation && BinaryOperation != MemberReference Literal null MethodInvocation MemberReference s equals BlockStatement ReturnStatement MemberReference classifier BlockStatement ThrowStatement ClassCreator ReferenceType IllegalArgumentException ReturnStatement Literal null	0
MethodDeclaration Modifier private StatementExpression Assignment MemberReference emptyFig ClassCreator ReferenceType FigEmptyRect MethodInvocation getX MethodInvocation getY MethodInvocation getWidth MemberReference offset = StatementExpression MethodInvocation emptyFig Literal 0 setLineWidth StatementExpression Assignment MemberReference headFig ClassCreator ReferenceType MethodInvocation getOwner MethodInvocation getSettings MethodInvocation MethodInvocation getNameFig = StatementExpression MethodInvocation headFig MethodInvocation getX BinaryOperation + MethodInvocation getY MemberReference offset MethodInvocation getWidth MethodInvocation headFig getHeight setBounds StatementExpression Assignment MemberReference lifeLineFig ClassCreator ReferenceType MethodInvocation getOwner ClassCreator ReferenceType Rectangle MethodInvocation headFig getX BinaryOperation - BinaryOperation + BinaryOperation + MethodInvocation getY MemberReference offset MethodInvocation headFig getHeight MethodInvocation getLineWidth Literal 0 Literal 0 MethodInvocation getSettings = StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MethodInvocation Literal false setVisible getBigPort StatementExpression Assignment MemberReference minimumHeight BinaryOperation + MethodInvocation headFig getMinimumHeight Literal 10 = StatementExpression MethodInvocation MemberReference emptyFig addFig StatementExpression MethodInvocation MemberReference lifeLineFig addFig StatementExpression MethodInvocation MemberReference headFig addFig StatementExpression MethodInvocation	1
MethodDeclaration Modifier public ReferenceType Lifeline ReturnStatement MethodInvocation	0
MethodDeclaration Modifier public FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object guard StatementExpression MethodInvocation impl MemberReference handle MemberReference guard	0
MethodDeclaration Modifier private initFigs StatementExpression Assignment MemberReference cover ClassCreator ReferenceType MethodInvocation getInitialX MethodInvocation getInitialY MethodInvocation getInitialWidth MethodInvocation MemberReference LINE_COLOR MemberReference FILL_COLOR = StatementExpression MethodInvocation MethodInvocation Literal 0 setLineWidth getBigPort StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine MethodInvocation getInitialX BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getInitialY Literal 2 MethodInvocation MethodInvocation getBounds MemberReference height getNameFig Literal 1 BinaryOperation - MethodInvocation getInitialWidth Literal 1 BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getInitialY Literal 2 MethodInvocation MethodInvocation getBounds MemberReference height getNameFig Literal 1 MemberReference LINE_COLOR = StatementExpression MethodInvocation include MethodInvocation MethodInvocation getOwner generateSubmachine setText StatementExpression MethodInvocation include BinaryOperation + MethodInvocation getInitialX Literal 2 BinaryOperation + MethodInvocation getInitialY Literal 2 BinaryOperation - MethodInvocation getInitialWidth Literal 4 MethodInvocation include MemberReference height getBounds setBounds StatementExpression MethodInvocation include Literal false StatementExpression MethodInvocation include Literal 4 StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine MethodInvocation getInitialX BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getInitialY Literal 2 MethodInvocation MethodInvocation getBounds MemberReference height getNameFig Literal 1 BinaryOperation - MethodInvocation getInitialWidth Literal 1 BinaryOperation + BinaryOperation + BinaryOperation + MethodInvocation getInitialY Literal 2 MethodInvocation MethodInvocation getBounds MemberReference height getNameFig Literal 1 MemberReference LINE_COLOR = StatementExpression Assignment MemberReference circle1 ClassCreator ReferenceType BinaryOperation - BinaryOperation + MethodInvocation getInitialX MethodInvocation getInitialWidth Literal 55 BinaryOperation - BinaryOperation + MethodInvocation getInitialY MethodInvocation Literal 15 Literal 20 Literal 10 MemberReference LINE_COLOR MemberReference FILL_COLOR = StatementExpression Assignment MemberReference circle2 ClassCreator ReferenceType BinaryOperation - BinaryOperation + MethodInvocation getInitialX MethodInvocation getInitialWidth Literal 25 BinaryOperation - BinaryOperation + MethodInvocation getInitialY MethodInvocation Literal 15 Literal 20 Literal 10 MemberReference LINE_COLOR MemberReference FILL_COLOR = StatementExpression Assignment MemberReference ClassCreator ReferenceType FigLine BinaryOperation - BinaryOperation + MethodInvocation getInitialX MethodInvocation getInitialWidth Literal 35 BinaryOperation - BinaryOperation + MethodInvocation getInitialY MethodInvocation Literal 10 BinaryOperation - BinaryOperation + MethodInvocation getInitialX MethodInvocation getInitialWidth Literal 25 BinaryOperation - BinaryOperation + MethodInvocation getInitialY MethodInvocation Literal 10 MemberReference LINE_COLOR = StatementExpression MethodInvocation MethodInvocation getBigPort addFig StatementExpression MethodInvocation MemberReference cover addFig StatementExpression MethodInvocation MethodInvocation getNameFig addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MemberReference include addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MethodInvocation addFig StatementExpression MethodInvocation MemberReference circle1 addFig StatementExpression MethodInvocation MemberReference circle2 addFig StatementExpression MethodInvocation MemberReference addFig StatementExpression MethodInvocation MethodInvocation getBounds setBounds	0
MethodDeclaration Modifier public Annotation Override ReferenceType Collection TypeArgument ReferenceType Object IfStatement BinaryOperation == MemberReference model Literal null BlockStatement ReturnStatement MethodInvocation Collections emptyList BlockStatement ReturnStatement MethodInvocation Collections MemberReference model	0
MethodDeclaration Modifier public FormalParameter ReferenceType java ReferenceType lang ReferenceType String name FormalParameter ReferenceType java ReferenceType lang ReferenceType String data TransformerException StatementExpression MethodInvocation rtfEmitter MemberReference name MemberReference data	1
MethodDeclaration Modifier public static ReferenceType getInstance ReturnStatement MemberReference SINGLETON	0
MethodDeclaration Modifier public ReferenceType Object getProperty ReturnStatement ClassReference ReferenceType Attribute	0
MethodDeclaration Modifier public BasicType boolean isCanceled ReturnStatement BinaryOperation && BinaryOperation != MemberReference pbar Literal null MethodInvocation pbar isCanceled	1
MethodDeclaration Modifier public removeOwnedElement FormalParameter ReferenceType Object handle FormalParameter ReferenceType Object value StatementExpression MethodInvocation impl MemberReference handle MemberReference value removeOwnedElement	0
MethodDeclaration Modifier private static TryStatement StatementExpression MethodInvocation InetAddress CatchClause CatchClauseParameter UnknownHostException e StatementExpression MethodInvocation System.err Literal "ERROR: unable to get println StatementExpression MethodInvocation e MemberReference System err printStackTrace StatementExpression MethodInvocation System.err BinaryOperation + Literal this Literal file is incorrectly println StatementExpression MethodInvocation System.err Literal execution of println StatementExpression MethodInvocation System Literal 0 exit	0
MethodDeclaration Modifier protected ReferenceType Action IfStatement BinaryOperation == MemberReference actionClass Literal null BlockStatement StatementExpression Assignment MemberReference actionClass MethodInvocation MethodInvocation Model MethodInvocation getUMLClass getMetaTypes Literal makeCreateNodeAction = ReturnStatement MemberReference actionClass	0
MethodDeclaration Modifier public FormalParameter ReferenceType String key StatementExpression SuperMethodInvocation MethodInvocation MemberReference key Literal StatementExpression SuperMethodInvocation MethodInvocation MemberReference key Literal setDescription	0
MethodDeclaration Modifier private static StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation Configuration load LocalVariableDeclaration ReferenceType String VariableDeclarator directory MethodInvocation Argo getDirectory StatementExpression MethodInvocation MemberReference directory StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation StatementExpression MethodInvocation	0
MethodDeclaration Modifier public synchronized setTargets FormalParameter ReferenceType Collection targetsCollection LocalVariableDeclaration ReferenceType Iterator VariableDeclarator ntarg IfStatement MethodInvocation BlockStatement ReturnStatement LocalVariableDeclaration ReferenceType Collection VariableDeclarator targetsList ClassCreator ReferenceType ArrayList IfStatement BinaryOperation != MemberReference targetsCollection Literal null BlockStatement StatementExpression MethodInvocation targetsList MemberReference targetsCollection addAll LocalVariableDeclaration ReferenceType List VariableDeclarator modifiedList ClassCreator ReferenceType ArrayList LocalVariableDeclaration ReferenceType Iterator VariableDeclarator it MethodInvocation targetsList iterator WhileStatement MethodInvocation it hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator o MethodInvocation it next StatementExpression Assignment MemberReference o MethodInvocation MemberReference o getOwner = IfStatement BinaryOperation && BinaryOperation != MemberReference o Literal null MethodInvocation ! modifiedList MemberReference o contains BlockStatement StatementExpression MethodInvocation modifiedList MemberReference o add StatementExpression Assignment MemberReference targetsList MemberReference modifiedList = LocalVariableDeclaration ReferenceType Object VariableDeclarator oldTargets Literal null IfStatement BinaryOperation == MethodInvocation targetsList size MethodInvocation targets size BlockStatement LocalVariableDeclaration BasicType boolean VariableDeclarator first Literal true StatementExpression Assignment MemberReference ntarg MethodInvocation targetsList iterator = WhileStatement MethodInvocation ntarg hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator targ MethodInvocation ntarg next IfStatement BinaryOperation == MemberReference targ Literal null BlockStatement ContinueStatement IfStatement BinaryOperation || MethodInvocation ! targets MemberReference targ contains BinaryOperation && MemberReference first BinaryOperation != MemberReference targ MethodInvocation getTarget BlockStatement StatementExpression Assignment MemberReference oldTargets MethodInvocation targets toArray = BreakStatement StatementExpression Assignment MemberReference first Literal false = BlockStatement StatementExpression Assignment MemberReference oldTargets MethodInvocation targets toArray = IfStatement BinaryOperation == MemberReference oldTargets Literal null BlockStatement ReturnStatement StatementExpression MethodInvocation StatementExpression MethodInvocation umlListener MemberReference targets StatementExpression MethodInvocation targets clear StatementExpression Assignment MemberReference ntarg MethodInvocation targetsList iterator = WhileStatement MethodInvocation ntarg hasNext BlockStatement LocalVariableDeclaration ReferenceType Object VariableDeclarator targ MethodInvocation ntarg next IfStatement MethodInvocation targets MemberReference targ contains BlockStatement ContinueStatement StatementExpression MethodInvocation targets MemberReference targ add StatementExpression MethodInvocation umlListener MemberReference targ StatementExpression MethodInvocation MemberReference MemberReference oldTargets internalOnSetTarget StatementExpression MethodInvocation	1
MethodDeclaration Modifier private handleFireEvent FormalParameter ReferenceType event FormalParameter ReferenceType listener IfStatement BinaryOperation == MethodInvocation event getEventType MemberReference ArgoEventTypes BlockStatement IfStatement BinaryOperation instanceof MemberReference listener ReferenceType ArgoNotationEventListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType ArgoNotationEvent MemberReference event Cast ReferenceType ArgoNotationEventListener MemberReference listener handleFireNotationEvent IfStatement BinaryOperation instanceof MemberReference listener ReferenceType ArgoHelpEventListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType MemberReference event Cast ReferenceType ArgoHelpEventListener MemberReference listener handleFireHelpEvent IfStatement BinaryOperation instanceof MemberReference listener ReferenceType ArgoStatusEventListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType MemberReference event Cast ReferenceType ArgoStatusEventListener MemberReference listener handleFireStatusEvent BlockStatement IfStatement BinaryOperation && BinaryOperation >= MethodInvocation event getEventType MemberReference ArgoEventTypes BinaryOperation < MethodInvocation event getEventType MemberReference ArgoEventTypes BlockStatement IfStatement BinaryOperation instanceof MemberReference listener ReferenceType ArgoNotationEventListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType ArgoNotationEvent MemberReference event Cast ReferenceType ArgoNotationEventListener MemberReference listener handleFireNotationEvent IfStatement BinaryOperation && BinaryOperation >= MethodInvocation event getEventType MemberReference ArgoEventTypes BinaryOperation < MethodInvocation event getEventType MemberReference ArgoEventTypes BlockStatement IfStatement BinaryOperation instanceof MemberReference listener ReferenceType ArgoDiagramAppearanceEventListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType ArgoDiagramAppearanceEvent MemberReference event Cast ReferenceType ArgoDiagramAppearanceEventListener MemberReference listener handleFireDiagramAppearanceEvent IfStatement BinaryOperation && BinaryOperation >= MethodInvocation event getEventType MemberReference ArgoEventTypes BinaryOperation < MethodInvocation event getEventType MemberReference ArgoEventTypes BlockStatement IfStatement BinaryOperation instanceof MemberReference listener ReferenceType ArgoHelpEventListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType MemberReference event Cast ReferenceType ArgoHelpEventListener MemberReference listener handleFireHelpEvent IfStatement BinaryOperation && BinaryOperation >= MethodInvocation event getEventType MemberReference ArgoEventTypes BinaryOperation < MethodInvocation event getEventType MemberReference ArgoEventTypes BlockStatement IfStatement BinaryOperation instanceof MemberReference listener ReferenceType ArgoGeneratorEventListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType ArgoGeneratorEvent MemberReference event Cast ReferenceType ArgoGeneratorEventListener MemberReference listener handleFireGeneratorEvent IfStatement BinaryOperation && BinaryOperation >= MethodInvocation event getEventType MemberReference ArgoEventTypes BinaryOperation < MethodInvocation event getEventType MemberReference ArgoEventTypes BlockStatement IfStatement BinaryOperation instanceof MemberReference listener ReferenceType ArgoStatusEventListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType MemberReference event Cast ReferenceType ArgoStatusEventListener MemberReference listener handleFireStatusEvent IfStatement BinaryOperation && BinaryOperation >= MethodInvocation event getEventType MemberReference ArgoEventTypes BinaryOperation < MethodInvocation event getEventType MemberReference ArgoEventTypes BlockStatement IfStatement BinaryOperation instanceof MemberReference listener ReferenceType ArgoProfileEventListener BlockStatement StatementExpression MethodInvocation Cast ReferenceType ArgoProfileEvent MemberReference event Cast ReferenceType ArgoProfileEventListener MemberReference listener handleFireProfileEvent	1
